<Type Name="HttpListenerTimeoutsElement" FullName="System.Net.Configuration.HttpListenerTimeoutsElement">
  <TypeSignature Language="C#" Value="public sealed class HttpListenerTimeoutsElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpListenerTimeoutsElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.HttpListenerTimeoutsElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerTimeoutsElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerTimeoutsElement sealed : System::Configuration::ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3f1c3-101">Stellt das <see cref="T:System.Net.HttpListener" />-Timeouts in der Konfigurationsdatei dar.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-101">Represents the <see cref="T:System.Net.HttpListener" /> timeouts element in the configuration file.</span></span> <span data-ttu-id="3f1c3-102">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f1c3-103">Die Timeouts-Element definiert die Dafault Timeout Verbindungslimits für eine <xref:System.Net.HttpListener> Instanz.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-103">The timeouts element defines the dafault connection timeout limits for an <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
    <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListenerTimeoutsElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.HttpListenerTimeoutsElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListenerTimeoutsElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3f1c3-104">Initialisiert eine neue Instanz der <see cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-104">Initializes a new instance of the <see cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrainEntityBody">
      <MemberSignature Language="C#" Value="public TimeSpan DrainEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DrainEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DrainEntityBody As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DrainEntityBody { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("drainEntityBody", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f1c3-105">Ruft die Zeit in Sekunden ab, die für <see cref="T:System.Net.HttpListener" /> zugelassen ist, um den Entitätstext auf einer Keep-Alive-Verbindung zu leeren.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-105">Gets the time, in seconds, allowed for the <see cref="T:System.Net.HttpListener" /> to drain the entity body on a Keep-Alive connection.</span></span></summary>
        <value><span data-ttu-id="3f1c3-106">Gibt <see cref="T:System.TimeSpan" />zurück.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-106">Returns <see cref="T:System.TimeSpan" />.</span></span>  
  
 <span data-ttu-id="3f1c3-107">Die Zeit in Sekunden an, zulässig, für die <see cref="T:System.Net.HttpListener" /> Ausgleich Entitätstext für eine Keep-Alive-Verbindung.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-107">The time, in seconds, allowed for the <see cref="T:System.Net.HttpListener" /> to drain the entity body on a Keep-Alive connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f1c3-108">Für eine Keep-Alive-Verbindung, nachdem die app eine Antwort für eine Anforderung gesendet hat und bevor die Anforderung Entitätstext vollständig eingegangen die <xref:System.Net.HttpListener> beginnt, leeren den Rest des einheitstextkörpers potenziell von einem anderen erreichen weiterleitet, der Anforderung vom Client.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-108">On a Keep-Alive connection, after the app has sent a response for a request and before the request entity body has completely arrived, the <xref:System.Net.HttpListener> starts draining the remainder of the entity body to reach another potentially pipelined request from the client.</span></span> <span data-ttu-id="3f1c3-109">Die Zeit zum Ausgleichen des verbleibenden einheitstextkörpers überschreitet den zulässigen Zeitraum wird die Verbindung ein Timeout.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-109">If the time to drain the remaining entity body exceeds the allowed period the connection is timed out.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="EntityBody">
      <MemberSignature Language="C#" Value="public TimeSpan EntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan EntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityBody As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan EntityBody { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("entityBody", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f1c3-110">Ruft die Zeit, in Sekunden ab, die für die Ankunft des Anforderungsentitätstexts zugelassen ist.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-110">Gets the time, in seconds, allowed for the request entity body to arrive.</span></span></summary>
        <value><span data-ttu-id="3f1c3-111">Gibt <see cref="T:System.TimeSpan" />zurück.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-111">Returns <see cref="T:System.TimeSpan" />.</span></span>  
  
 <span data-ttu-id="3f1c3-112">Die Zeit, in Sekunden, die für die Ankunft des Anforderungsentitätstexts zugelassen ist.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-112">The time, in seconds, allowed for the request entity body to arrive.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f1c3-113">Die <xref:System.Net.HttpListener> dieser Zeitgeber aktiviert, wenn die Anforderung einen Entitätstext.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-113">The <xref:System.Net.HttpListener> turns on this timer when the request has an entity body.</span></span> <span data-ttu-id="3f1c3-114">Ablaufen des Zeitgebers wird anfänglich auf den konfigurierten Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-114">The timer expiration is initially set to the configured value.</span></span> <span data-ttu-id="3f1c3-115">Wenn die <xref:System.Net.HttpListener> empfängt zusätzliche Daten Anzeichen für die Anforderung den Zeitgeber, um der Verbindung zu einem anderen Intervall gewähren zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-115">When the <xref:System.Net.HttpListener> receives additional data indications on the request, it resets the timer to give the connection another interval.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.EntityBody" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="HeaderWait">
      <MemberSignature Language="C#" Value="public TimeSpan HeaderWait { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HeaderWait" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderWait As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan HeaderWait { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("headerWait", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f1c3-116">Ruft die Zeit, in Sekunden ab, für <see cref="T:System.Net.HttpListener" /> zum Analysieren des Anforderungsheaders.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-116">Gets the time, in seconds, allowed for the <see cref="T:System.Net.HttpListener" /> to parse the request header.</span></span></summary>
        <value><span data-ttu-id="3f1c3-117">Gibt <see cref="T:System.TimeSpan" />zurück.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-117">Returns <see cref="T:System.TimeSpan" />.</span></span>  
  
 <span data-ttu-id="3f1c3-118">Die Zeit, in Sekunden, für <see cref="T:System.Net.HttpListener" /> zum Analysieren des Anforderungsheaders.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-118">The time, in seconds, allowed for the <see cref="T:System.Net.HttpListener" /> to parse the request header.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f1c3-119">Dieses Timeout wird nur erzwungen, nachdem die erste Anforderung für die Verbindung weitergeleitet wird die <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-119">This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.</span></span>  
  
 <span data-ttu-id="3f1c3-120">Vom System nicht bestimmt werden, der Anforderungswarteschlange oder die URL-Gruppe, die die Anforderung zugeordnet ist, bis die Header analysiert wurden.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-120">The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed.</span></span> <span data-ttu-id="3f1c3-121">Aus diesem Grund die <xref:System.Net.HttpListener> erzwingt die Standardeinstellung <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> Timer für die erste Anforderung für eine Verbindung.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-121">Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> timer for the first request on a connection.</span></span> <span data-ttu-id="3f1c3-122">Nachfolgende Anforderungen über eine Keep-Alive-Verbindung werden für diese Eigenschaft festgelegte Wert verwendet.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-122">Subsequent requests on a Keep-Alive connection will use the value set on this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.HeaderWait" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="IdleConnection">
      <MemberSignature Language="C#" Value="public TimeSpan IdleConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan IdleConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdleConnection As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan IdleConnection { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("idleConnection", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f1c3-123">Ruft die Zeit, in Sekunden ab, die für eine Verbindung im Leerlauf zugelassen ist.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-123">Gets the time, in seconds, allowed for an idle connection.</span></span></summary>
        <value><span data-ttu-id="3f1c3-124">Gibt <see cref="T:System.TimeSpan" />zurück.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-124">Returns <see cref="T:System.TimeSpan" />.</span></span>  
  
 <span data-ttu-id="3f1c3-125">Die Zeit, in Sekunden, die für eine Verbindung im Leerlauf zugelassen ist.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-125">The time, in seconds, allowed for an idle connection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f1c3-126">Dieses Timeout wird nur erzwungen, nachdem die erste Anforderung für die Verbindung weitergeleitet wird die <xref:System.Net.HttpListener>.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-126">This timeout is only enforced after the first request on the connection is routed to the <xref:System.Net.HttpListener>.</span></span>  
  
 <span data-ttu-id="3f1c3-127">Vom System nicht bestimmt werden, der Anforderungswarteschlange oder die URL-Gruppe, die die Anforderung zugeordnet ist, bis die Header analysiert wurden.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-127">The system cannot determine the request queue or URL group that the request is associated with until the headers have been parsed.</span></span> <span data-ttu-id="3f1c3-128">Aus diesem Grund die <xref:System.Net.HttpListener> erzwingt die Standardeinstellung <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> Timer für die erste Anforderung für eine Verbindung.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-128">Therefore, the <xref:System.Net.HttpListener> enforces the default <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> timer for the first request on a connection.</span></span> <span data-ttu-id="3f1c3-129">Nachfolgende Anforderungen über eine Keep-Alive-Verbindung werden für diese Eigenschaft festgelegte Wert verwendet.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-129">Subsequent requests on a Keep-Alive connection will use the value set on this property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.IdleConnection" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="MinSendBytesPerSecond">
      <MemberSignature Language="C#" Value="public long MinSendBytesPerSecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MinSendBytesPerSecond" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinSendBytesPerSecond As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MinSendBytesPerSecond { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minSendBytesPerSecond", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f1c3-130">Ruft die Minimumsenderate, in Byte-pro Sekunde, für die Antwort ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-130">Gets the minimum send rate, in bytes-per-second, for the response.</span></span></summary>
        <value><span data-ttu-id="3f1c3-131">Gibt <see cref="T:System.Int64" />zurück.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-131">Returns <see cref="T:System.Int64" />.</span></span>  
  
 <span data-ttu-id="3f1c3-132">Die Minimumsenderate, in Byte-pro Sekunde, für die Antwort.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-132">The minimum send rate, in bytes-per-second, for the response.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestQueue">
      <MemberSignature Language="C#" Value="public TimeSpan RequestQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RequestQueue" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RequestQueue { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3f1c3-133">Ruft die Zeit, in Sekunden ab, die die Anforderung in der Anforderungswarteschlange bleiben kann, bevor <see cref="T:System.Net.HttpListener" /> sie aufruft.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-133">Gets the time, in seconds, allowed for the request to remain in the request queue before the <see cref="T:System.Net.HttpListener" /> picks it up.</span></span></summary>
        <value><span data-ttu-id="3f1c3-134">Gibt <see cref="T:System.TimeSpan" />zurück.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-134">Returns <see cref="T:System.TimeSpan" />.</span></span>  
  
 <span data-ttu-id="3f1c3-135">Die Zeit, in Sekunden, die die Anforderung in der Anforderungswarteschlange bleiben kann, bevor <see cref="T:System.Net.HttpListener" /> sie aufruft.</span><span class="sxs-lookup"><span data-stu-id="3f1c3-135">The time, in seconds, allowed for the request to remain in the request queue before the <see cref="T:System.Net.HttpListener" /> picks it up.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.RequestQueue" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
  </Members>
</Type>