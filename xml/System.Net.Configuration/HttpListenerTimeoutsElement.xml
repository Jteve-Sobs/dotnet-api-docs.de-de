<Type Name="HttpListenerTimeoutsElement" FullName="System.Net.Configuration.HttpListenerTimeoutsElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3393c8eb4e8902cb5e1b945216ee6636803df2c3" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70717465" /></Metadata><TypeSignature Language="C#" Value="public sealed class HttpListenerTimeoutsElement : System.Configuration.ConfigurationElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed HttpListenerTimeoutsElement extends System.Configuration.ConfigurationElement" />
  <TypeSignature Language="DocId" Value="T:System.Net.Configuration.HttpListenerTimeoutsElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerTimeoutsElement&#xA;Inherits ConfigurationElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerTimeoutsElement sealed : System::Configuration::ConfigurationElement" />
  <TypeSignature Language="F#" Value="type HttpListenerTimeoutsElement = class&#xA;    inherit ConfigurationElement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.ConfigurationElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt das <see cref="T:System.Net.HttpListener" />-Timeouts in der Konfigurationsdatei dar. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Timeouts-Element definiert die Standard Limits für Verbindungs Timeout <xref:System.Net.HttpListener> für eine-Instanz.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
    <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListenerTimeoutsElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Configuration.HttpListenerTimeoutsElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListenerTimeoutsElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Net.Configuration.HttpListenerTimeoutsElement" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrainEntityBody">
      <MemberSignature Language="C#" Value="public TimeSpan DrainEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DrainEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DrainEntityBody As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DrainEntityBody { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DrainEntityBody : TimeSpan" Usage="System.Net.Configuration.HttpListenerTimeoutsElement.DrainEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("drainEntityBody", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeit in Sekunden ab, die für <see cref="T:System.Net.HttpListener" /> zugelassen ist, um den Entitätstext auf einer Keep-Alive-Verbindung zu leeren.</summary>
        <value>Die Zeit (in Sekunden), die zulässig <see cref="T:System.Net.HttpListener" /> ist, um den Entitäts Text auf einer Keep-Alive-Verbindung zu leeren.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Keep-Alive-Verbindung vorliegt und die APP eine Antwort für eine Anforderung gesendet hat und bevor der Anforderungs Entitäts Text vollständig eingetroffen <xref:System.Net.HttpListener> ist, wird der Rest des Entitäts Texts von entfernt, um eine andere potenziell Pipeline Anforderung vom Client zu erreichen. Wenn die Zeit zum Entladen des verbleibenden Entitäts Texts den zulässigen Zeitraum überschreitet, wird für die Verbindung ein Timeout überschritten.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.DrainEntityBody" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="EntityBody">
      <MemberSignature Language="C#" Value="public TimeSpan EntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan EntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntityBody As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan EntityBody { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.EntityBody : TimeSpan" Usage="System.Net.Configuration.HttpListenerTimeoutsElement.EntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("entityBody", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeit, in Sekunden ab, die für die Ankunft des Anforderungsentitätstexts zugelassen ist.</summary>
        <value>Die Zeit, in Sekunden, die für die Ankunft des Anforderungsentitätstexts zugelassen ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Net.HttpListener> schaltet diesen Timer ein, wenn die Anforderung einen Entitäts Text enthält. Der Timer-Ablauf ist anfänglich auf den konfigurierten Wert festgelegt. Wenn das <xref:System.Net.HttpListener> zusätzliche Daten Hinweise für die Anforderung empfängt, setzt es den Timer zurück, um der Verbindung ein weiteres Intervall zu geben.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.EntityBody" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="HeaderWait">
      <MemberSignature Language="C#" Value="public TimeSpan HeaderWait { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan HeaderWait" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderWait As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan HeaderWait { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderWait : TimeSpan" Usage="System.Net.Configuration.HttpListenerTimeoutsElement.HeaderWait" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("headerWait", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeit, in Sekunden ab, für <see cref="T:System.Net.HttpListener" /> zum Analysieren des Anforderungsheaders.</summary>
        <value>Die Zeit, in Sekunden, für <see cref="T:System.Net.HttpListener" /> zum Analysieren des Anforderungsheaders.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Timeout wird nur erzwungen, nachdem die erste Anforderung für die Verbindung an die <xref:System.Net.HttpListener>weitergeleitet wurde.  
  
 Das System kann die Anforderungs Warteschlange oder die URL-Gruppe, der die Anforderung zugeordnet ist, erst ermitteln, wenn die Header analysiert wurden. Daher erzwingt das Standard <xref:System.Net.HttpListenerTimeoutManager.HeaderWait%2A> Zeitgeber für die erste Anforderung für eine Verbindung. <xref:System.Net.HttpListener> Bei nachfolgenden Anforderungen für eine Keep-Alive-Verbindung wird der Wert verwendet, der für diese Eigenschaft festgelegt ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.HeaderWait" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="IdleConnection">
      <MemberSignature Language="C#" Value="public TimeSpan IdleConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan IdleConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdleConnection As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan IdleConnection { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.IdleConnection : TimeSpan" Usage="System.Net.Configuration.HttpListenerTimeoutsElement.IdleConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("idleConnection", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeit, in Sekunden ab, die für eine Verbindung im Leerlauf zugelassen ist.</summary>
        <value>Die Zeit, in Sekunden, die für eine Verbindung im Leerlauf zugelassen ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Timeout wird nur erzwungen, nachdem die erste Anforderung für die Verbindung an die <xref:System.Net.HttpListener>weitergeleitet wurde.  
  
 Das System kann die Anforderungs Warteschlange oder die URL-Gruppe, der die Anforderung zugeordnet ist, erst ermitteln, wenn die Header analysiert wurden. Daher erzwingt das Standard <xref:System.Net.HttpListenerTimeoutManager.IdleConnection%2A> Zeitgeber für die erste Anforderung für eine Verbindung. <xref:System.Net.HttpListener> Bei nachfolgenden Anforderungen für eine Keep-Alive-Verbindung wird der Wert verwendet, der für diese Eigenschaft festgelegt ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.IdleConnection" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="MinSendBytesPerSecond">
      <MemberSignature Language="C#" Value="public long MinSendBytesPerSecond { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MinSendBytesPerSecond" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinSendBytesPerSecond As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MinSendBytesPerSecond { long get(); };" />
      <MemberSignature Language="F#" Value="member this.MinSendBytesPerSecond : int64" Usage="System.Net.Configuration.HttpListenerTimeoutsElement.MinSendBytesPerSecond" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("minSendBytesPerSecond", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Minimumsenderate, in Byte-pro Sekunde, für die Antwort ab oder legt sie fest.</summary>
        <value>Die Minimumsenderate, in Byte-pro Sekunde, für die Antwort.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.MinSendBytesPerSecond" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.ConfigurationPropertyCollection" Usage="System.Net.Configuration.HttpListenerTimeoutsElement.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestQueue">
      <MemberSignature Language="C#" Value="public TimeSpan RequestQueue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan RequestQueue" />
      <MemberSignature Language="DocId" Value="P:System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestQueue As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan RequestQueue { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestQueue : TimeSpan" Usage="System.Net.Configuration.HttpListenerTimeoutsElement.RequestQueue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("requestQueue", DefaultValue=Mono.Cecil.CustomAttributeArgument, IsRequired=false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeit, in Sekunden ab, die die Anforderung in der Anforderungswarteschlange bleiben kann, bevor <see cref="T:System.Net.HttpListener" /> sie aufruft.</summary>
        <value>Die Zeit, in Sekunden, die die Anforderung in der Anforderungswarteschlange bleiben kann, bevor <see cref="T:System.Net.HttpListener" /> sie aufruft.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerTimeoutManager" />
        <altmember cref="P:System.Net.HttpListenerTimeoutManager.RequestQueue" />
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
      </Docs>
    </Member>
  </Members>
</Type>
