<Type Name="ManagementEntityAttribute" FullName="System.Management.Instrumentation.ManagementEntityAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9342bbd64f0ae8c021f2dec8513ab7408a3d264" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68397001" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagementEntityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementEntityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementEntityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementEntityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEntityAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ManagementEntityAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0e3f5-101">Das ManagementEntity-Attribut zeigt an, dass eine Klasse Verwaltungsinformationen bereitstellt, die über einen WMI-Anbieter verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-101">The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.</span></span>  
  
<span data-ttu-id="0e3f5-102">Hinweis: Die WMI .NET-Bibliotheken werden jetzt als abgeschlossen betrachtet, und keine weiteren Entwicklungen, Verbesserungen oder Updates werden für nicht sicherheitsrelevante Aspekte verfügbar sein, die diese Bibliotheken betreffen.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span></span> <span data-ttu-id="0e3f5-103">Die [MI-APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) sollten für alle Neuentwicklungen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e3f5-104">Die von diesem Attribut markierte Klasse muss öffentlich sein.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-104">The class marked by this attribute must be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e3f5-105">Im folgenden Beispiel wird gezeigt, wie das ManagementEntity-Attribut verwendet wird, um eine Klasse zu markieren.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-105">The following example shows how to use the ManagementEntity attribute to mark a class.</span></span>  
  
```  
// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  
// provider.  
  
    [ManagementEntity(Name = "MortgageCalc")]  
    public class MortgageCalcWMIProvider  
    {  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEntityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEntityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0e3f5-106">Initialisiert eine neue Instanz der <see cref="T:System.Management.Instrumentation.ManagementEntityAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-106">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementEntityAttribute" /> class.</span></span> <span data-ttu-id="0e3f5-107">Dies ist der parameterlose Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-107">This is the parameterless constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e3f5-108">Dieser Konstruktor nimmt keinen Name-Parameter an.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-108">This constructor does not take a name parameter.</span></span> <span data-ttu-id="0e3f5-109">Wenn Sie keinen Namen mit dem <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> -Parameter angeben, wird der Name der zugeordneten WMI-Klasse standardmäßig auf den Namen der attributierten Klasse festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-109">If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="External">
      <MemberSignature Language="C#" Value="public bool External { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool External" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberSignature Language="VB.NET" Value="Public Property External As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool External { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.External : bool with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3f5-110">Ruft einen Wert ab, der angibt, ob die Klasse eine WMI-Klasse in einem Anbieter darstellt, der außerhalb der aktuellen Assembly implementiert ist, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-110">Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.</span></span></summary>
        <value><span data-ttu-id="0e3f5-111">Ein boolescher Wert, der true ist, wenn die Klasse eine externe WMI-Klasse darstellt, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-111">A boolean value that is true if the class represents an external WMI class and false otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e3f5-112">Diese wird verwendet, wenn Anbieter implementiert werden, die Klassen implementieren, die vorhandene abstrakte WMI-Klassen erweitern.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-112">This is used when implementing providers that implement classes that extend existing abstract WMI classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3f5-113">Ruft den Namen der WMI-Klasse ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-113">Gets or sets the name of the WMI class.</span></span></summary>
        <value><span data-ttu-id="0e3f5-114">Eine Zeichenfolge, die den Namen der WMI-Klasse enthält.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-114">A string that contains the name of the WMI class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e3f5-115">Wenn Sie den Namen der WMI-Klasse nicht angeben, indem Sie diese Eigenschaft festlegen, wird die WMI-Klasse standardmäßig auf den Namen der attributierten Klasse festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-115">If you do not specify the name of the WMI class by setting this property, the WMI class will default to the name of the attributed class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e3f5-116">Im folgenden Beispiel wird der Name-Parameter verwendet, um den Namen der WMI-Klasse festzulegen, die durch die Klasse "mortgagecalcwmiprovider" dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-116">In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class.</span></span> <span data-ttu-id="0e3f5-117">Der Name wird auf "mortgagecalculator" festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-117">It sets the name to MortgageCalculator.</span></span> <span data-ttu-id="0e3f5-118">Wenn der Name-Parameter nicht verwendet wird, wird C# der zugehörige Klassenname, in diesem Fall "mortgagecalcwmiprovider", als WMI-Klassenname verwendet.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-118">If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.</span></span>  
  
```  
[ManagementEntity(Name = "MortgageCalculator")]  
public class MortgageCalcWMIProvider  
{  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public bool Singleton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Singleton" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberSignature Language="VB.NET" Value="Public Property Singleton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Singleton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Singleton : bool with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0e3f5-119">Gibt an, ob die zugeordnete Klasse eine WMI-Singletonklasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-119">Specifies whether the associated class represents a singleton WMI class.</span></span></summary>
        <value><span data-ttu-id="0e3f5-120">Ein boolescher Wert, der true ist, wenn die Klasse eine WMI-Singletonklasse darstellt, andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-120">A boolean value that is true if the class represents a singleton WMI class and false otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e3f5-121">Eine Singleton-WMI-Klasse ist eine Klasse, für die nur eine einzelne Instanz vorhanden sein kann.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-121">A singleton WMI class is one for which there can only ever be a single instance.</span></span> <span data-ttu-id="0e3f5-122">Obwohl Sie die Logik Programmieren könnten, um sicherzustellen, dass immer nur eine Instanz einer WMI-Klasse erstellt wird, wird dieses Parameter Attribut bereitgestellt, um die Aufgabe zu vereinfachen und konsistent zu machen.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-122">Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.</span></span>  
  
 <span data-ttu-id="0e3f5-123">Beim Arbeiten mit Singleton-WMI-Klassen müssen Client Anwendungen eine spezielle Syntax verwenden.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-123">When working with singleton WMI classes, client applications must use special syntax.</span></span> <span data-ttu-id="0e3f5-124">Weitere Informationen finden Sie im Thema beschreiben eines instanzobjektpfades in der MSDN Online Library [http://www.msdn.com](https://www.msdn.com/)unter.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-124">For more information, see the Describing an Instance Object Path topic in the MSDN online library at [http://www.msdn.com](https://www.msdn.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0e3f5-125">Der folgende Code Ausschnitt veranschaulicht, wie der Singleton-Parameter verwendet wird, um anzugeben C# , dass eine Klasse einer Singleton-WMI-Klasse entspricht.</span><span class="sxs-lookup"><span data-stu-id="0e3f5-125">The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.</span></span>  
  
```  
[ManagementEntity(Singleton=true)]  
public class SingletonSample  
```  
  
 <span data-ttu-id="0e3f5-126">Ein umfassendes, funktionierendes Beispiel für einen Anbieter, der eine Singleton-Klasse implementiert, [finden Sie unter Gewusst wie: Erstellen Sie einen einfachen entkoppelten Anbieter](https://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span><span class="sxs-lookup"><span data-stu-id="0e3f5-126">For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](https://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>