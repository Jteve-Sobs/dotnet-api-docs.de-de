<Type Name="WmiConfigurationAttribute" FullName="System.Management.Instrumentation.WmiConfigurationAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d586787e620137f991a9daabba99b0960ca71f17" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82301438" /></Metadata><TypeSignature Language="C#" Value="public sealed class WmiConfigurationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiConfigurationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WmiConfigurationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiConfigurationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WmiConfigurationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Das WmiConfiguration-Attribut gibt an, dass eine Assembly Code enthält, der einen WMI-Anbieter mithilfe des WMI.NET-Anbietererweiterungenmodells implementiert. Das Attribut akzeptiert Parameter, die die Konfiguration des implementierten WMI-Anbieters auf hoher Ebene einrichten.  
  
Hinweis: Die WMI .NET-Bibliotheken werden jetzt als abgeschlossen betrachtet, und keine weiteren Entwicklungen, Verbesserungen oder Updates werden für nicht sicherheitsrelevante Aspekte verfügbar sein, die diese Bibliotheken betreffen. Die [MI-APIs](https://docs.microsoft.com/previous-versions/windows/desktop/wmi_v2/windows-management-infrastructure) sollten für alle Neuentwicklungen verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle sind die Parameter aufgeführt, die von diesem Attribut akzeptiert werden, sowie der Aspekt der Anbieter Konfiguration, mit dem Sie steuern können.  
  
|Parameter|Konfiguriert|  
|---------------|----------------|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|Der Namespace, in dem der Anbieter Klassen verfügbar macht.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|-Die Sicherheit (DACL) für den verwendeten Namespace.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|: Das Hostingmodell, das vom Anbieter verwendet wird.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|: Der Identitätswechsel Modus des Anbieters.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|Die hostinggruppe, zu der der Anbieter gehört. Dieser Parameter gilt nur für in-Process-Anbieter.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|Die Sicherheit (DACL) für den WMI-Anbieter.|  
  
   
  
## Examples  
  
```  
// Specify that this assembly contains code that implements a WMI  
// Provider. Use the assembly:WmiConfiguration attribute to define  
// the WMI namespace, the hosting model, and the impersonation mode  
// of the WMI provider.  
// The attribute below specifies that the class this provider  
// exposes to WMI will be in the root/MortgageCalc namespace, will  
// use the decoupled hosting model and will not allow the provider  
// to impersonate its callers.  
  
[assembly: WmiConfiguration("root/MortgageCalc",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiConfigurationAttribute (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiConfigurationAttribute(System::String ^ scope);" />
      <MemberSignature Language="F#" Value="new System.Management.Instrumentation.WmiConfigurationAttribute : string -&gt; System.Management.Instrumentation.WmiConfigurationAttribute" Usage="new System.Management.Instrumentation.WmiConfigurationAttribute scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">Der WMI-Namespace, in dem der Anbieter Klassen verfügbar macht. Beispiel: "root\MyProviderNamespace".</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" />-Klasse, die den WMI-Namespace angibt, in dem der WMI-Anbieter Klassen verfügbar macht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein WMI-Anbieter muss seine Klassen in einem Namespace verfügbar machen. Deshalb benötigt der-Konstruktor den Bereich als Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingGroup">
      <MemberSignature Language="C#" Value="public string HostingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostingGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingGroup : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hostinggruppe für den WMI-Anbieter ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der die Hostinggruppe für den WMI-Anbieter angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hostinggruppen gelten nur für Anbieter, die in-Process gehostet werden. Der Wert wird für entkoppelte Anbieter ignoriert.  
  
 Eine hostinggruppe ist eine Gruppe von in-Process-Anbietern, denen alle der gleiche hostinggruppenname zugewiesen ist. Der Name der hostinggruppe ist eine Zeichenfolge, die Sie definieren, um die Anbieter logisch zu gruppieren. Alle in-Process-Anbieter in derselben Host Gruppe, die im gleichen Sicherheitskontext ausgeführt werden, werden innerhalb einer einzelnen Instanz des wmiprvse. exe-Prozesses gehostet. Daher verwenden Anbieter, die dieselbe hostinggruppe und denselben Sicherheitskontext gemeinsam verwenden, denselben Dienst Host Prozess.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die-<xref:System.Management.Instrumentation.WmiConfigurationAttribute> verwendet, um anzugeben, dass die Assembly, in der Sie enthalten ist, einen in-Process-Anbieter implementiert, der im Sicherheitskontext des Netzwerk Diensts ausgeführt wird. Sie wird in einer Instanz des wmiprvse. exe-Prozesses gehostet, der ebenfalls alle anderen in-Process-Anbieter in derselben hostinggruppe hostet, die auch im Network Service  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = "MyProviders"]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingModel">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementHostingModel HostingModel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingModel As ManagementHostingModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::ManagementHostingModel HostingModel { System::Management::Instrumentation::ManagementHostingModel get(); void set(System::Management::Instrumentation::ManagementHostingModel value); };" />
      <MemberSignature Language="F#" Value="member this.HostingModel : System.Management.Instrumentation.ManagementHostingModel with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementHostingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Hostingmodell für den WMI-Anbieter ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Management.Instrumentation.ManagementHostingModel" />-Wert, der das Hostingmodell des WMI-Anbieters angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WMI-Anbieter können von einer Anwendung oder vom WMI-Dienst gehostet werden. Von einer Anwendung gehostete WMI-Anbieter werden als entkoppelte Anbieter bezeichnet. Die vom WMI-Dienst gehosteten werden als Prozess interne Anbieter bezeichnet. Der Wert des Hostingmodells bestimmt sowohl das Hostingmodell als auch, im Fall von in-Process-Anbietern, das Konto (Sicherheitskontext), unter dem der Anbieter ausgeführt wird. Weitere Details zu den möglichen Werten von hostingmodel finden Sie unter <xref:System.Management.Instrumentation.ManagementHostingModel>.  
  
 Weitere Informationen zum Hosting von Modellen finden Sie im Thema [Anbieter Hosting und-Sicherheit](https://go.microsoft.com/fwlink/?LinkId=100075) im WMI-SDK auf MSDN.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die-<xref:System.Management.Instrumentation.WmiConfigurationAttribute> verwendet, um anzugeben, dass die Assembly, in der Sie enthalten ist, einen Anbieter implementiert, der durch den root\nvpair-Namespace verfügbar gemacht wird. Da das Hostingmodell nicht <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>ist, handelt es sich um einen Prozess internen Anbieter. Der Wert <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> der angibt, dass der in-Process-Anbieter im Network Service-Sicherheitskontext ausgeführt wird.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService)]  
```  
  
 Im nächsten Beispiel wird die-<xref:System.Management.Instrumentation.WmiConfigurationAttribute> verwendet, um anzugeben, dass die Assembly, in der Sie enthalten ist, einen Anbieter implementiert, der durch den root\nvpair-Namespace verfügbar gemacht wird. Der Wert <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> der angibt, dass es sich um einen entkoppelten Anbieter handelt.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.Decoupled)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyLevel">
      <MemberSignature Language="C#" Value="public bool IdentifyLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IdentifyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentifyLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IdentifyLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IdentifyLevel : bool with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der WMI-Anbieter für seine Aufrufer Identitätswechsel ausführen kann, oder legt diesen Wert fest. Wenn der Wert false ist, kann der Anbieter keine Identitätswechsel ausführen. Beim Wert true kann der Anbieter Identitätswechsel ausführen.</summary>
        <value>Ein boolescher Wert, der angibt, ob ein Anbieter Identitätswechsel für seine Aufrufer ausführen kann. Wenn der Wert false ist, kann der Anbieter keine Identitätswechsel ausführen. Beim Wert true kann der Anbieter Identitätswechsel ausführen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie im Thema "Anbieter Hosting und-Sicherheit" in der MSDN Library Online unter [http://www.msdn.com](https://www.msdn.com/).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie der identifylevel-Parameter verwendet wird, um anzugeben, dass der Anbieter seine Aufrufer annehmen kann.  
  
```  
[assembly: WmiConfiguration("root/MyProv", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceSecurity">
      <MemberSignature Language="C#" Value="public string NamespaceSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceSecurity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceSecurity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceSecurity : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine SDDL-Zeichenfolge (Security Descriptor Definition Language) ab, die die Sicherheitsbeschreibung für den Namespace angibt, in dem der Anbieter Verwaltungsobjekte verfügbar macht, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SDDL-Zeichenfolge, die die Sicherheitsbeschreibung für den Namespace darstellt, in dem der Anbieter Verwaltungsobjekte verfügbar macht.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zum Darstellen von Sicherheits Deskriptoren im SDDL-Format finden Sie im Thema zum [Format der Sicherheits Deskriptor-Zeichenfolge](https://go.microsoft.com/fwlink/?LinkId=100763) in der MSDN Library Online.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie der namespacesecurity-Parameter verwendet wird, um die Sicherheits Beschreibung für den root/SDTEST-Namespace festzulegen, in dem der in dieser Assembly implementierte Anbieter WMI-Klassen verfügbar macht.  
  
```  
[assembly: WmiConfiguration("root/SDTest", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = "O:BAG:BAD:(A;CI;0x60003;;;WD)")]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den WMI-Namespace ab, in dem der WMI-Anbieter Klassen verfügbar macht, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der den Namespace angibt, in dem der WMI-Anbieter Klassen verfügbar macht.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein WMI-Namespace ist eine Kategorie im WMI-Repository. Der häufig verwendete root/cimv2-Namespace enthält Klassen, die die vom Desktop Management Task Force (DMTF) Consortium definierte Common Information Model Version 2 beschreiben. Sie sollten ihre Anbieter nur in diesem Namespace verfügbar machen, wenn Sie das Standard-CIM-Modell erweitern. Andernfalls sollten Sie einen geeigneten Namespace erstellen, der Benutzern den Typ der WMI-Klassen, die im-Namespace zu finden sind, eindeutig macht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityRestriction">
      <MemberSignature Language="C#" Value="public string SecurityRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityRestriction" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityRestriction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityRestriction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRestriction : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Sicherheitsbeschreibung für den WMI-Anbieter ab oder legt diese fest. Weitere Informationen finden Sie in der SecurityDescriptor-Eigenschaft in dem Artikel „__Win32Provider“ in der MSDN Online Library unter [http://www.msdn.com](https://www.msdn.com/).</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der die Sicherheitsbeschreibung für den WMI-Anbieter enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
