<Type Name="WmiConfigurationAttribute" FullName="System.Management.Instrumentation.WmiConfigurationAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fb78886354210a607cc66e6babc173d558eb16c" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51907193" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WmiConfigurationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiConfigurationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WmiConfigurationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiConfigurationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WmiConfigurationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Das WmiConfiguration-Attribut gibt an, dass eine Assembly Code enthält, der einen WMI-Anbieter mithilfe des WMI.NET-Anbietererweiterungenmodells implementiert. Das Attribut akzeptiert Parameter, die die Konfiguration des implementierten WMI-Anbieters auf hoher Ebene einrichten.  
  
Hinweis: Die WMI .NET-Bibliotheken werden jetzt als abgeschlossen betrachtet, und keine weiteren Entwicklungen, Verbesserungen oder Updates werden für nicht sicherheitsrelevante Aspekte verfügbar sein, die diese Bibliotheken betreffen. Die [MI-APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) sollten für alle Neuentwicklungen verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle enthält die Parameter akzeptiert, die von diesem Attribut zusammen mit welcher Aspekt der Anbieterkonfiguration Sie steuern können.  
  
|Parameter|Wird konfiguriert|  
|---------------|----------------|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|Der Namespace, in dem Ihr Anbieter Klassen verfügbar macht.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|-Die Sicherheit (DACL) für den Namespace verwendet.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|-Das hosting-Modell, das vom Anbieter verwendet wird.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|– Der Identitätswechselmodus des Anbieters.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|Die hosting-Gruppe, der der Anbieter gehört. Dieser Parameter gilt nur für prozessinterne Anbieter.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|Die Sicherheit (DACL) für den WMI-Anbieter.|  
  
   
  
## Examples  
  
```  
// Specify that this assembly contains code that implements a WMI  
// Provider. Use the assembly:WmiConfiguration attribute to define  
// the WMI namespace, the hosting model, and the impersonation mode  
// of the WMI provider.  
// The attribute below specifies that the class this provider  
// exposes to WMI will be in the root/MortgageCalc namespace, will  
// use the decoupled hosting model and will not allow the provider  
// to impersonate its callers.  
  
[assembly: WmiConfiguration("root/MortgageCalc",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiConfigurationAttribute (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiConfigurationAttribute(System::String ^ scope);" />
      <MemberSignature Language="F#" Value="new System.Management.Instrumentation.WmiConfigurationAttribute : string -&gt; System.Management.Instrumentation.WmiConfigurationAttribute" Usage="new System.Management.Instrumentation.WmiConfigurationAttribute scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">Der WMI-Namespace, in dem der Anbieter Klassen verfügbar macht. Beispiel: "root\MyProviderNamespace".</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" />-Klasse, die den WMI-Namespace angibt, in dem der WMI-Anbieter Klassen verfügbar macht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein WMI-Anbieter muss die Klassen in einem Namespace verfügbar machen. Aus diesem Grund müssen den Konstruktor Scope-Parameter wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingGroup">
      <MemberSignature Language="C#" Value="public string HostingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostingGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingGroup : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Hostinggruppe für den WMI-Anbieter ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der die Hostinggruppe für den WMI-Anbieter angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hostgruppen gelten nur für Anbieter, die prozessintern gehostet. Der Wert wird für Entkoppelte Anbieter ignoriert.  
  
 Eine hosting-Gruppe ist, eine Reihe von prozessinternen Anbietern, die alle demselben Gruppennamen hosting zugewiesen wird. Der Name der Host ist eine Zeichenfolge, die Sie definieren, um die Anbieter logisch zu gruppieren. Alle in-Process-Anbieter in der gleichen hosting-Gruppe, die unter den gleichen Sicherheitskontext ausgeführt werden in einer einzelnen Instanz des Prozesses Wmiprvse.exe gehostet. Also Teilen Anbieter, die den gleichen Host und der angegebenen Kontext nutzen den gleichen Hostprozess für den Dienst.  
  
   
  
## Examples  
 Im folgenden Beispiel die <xref:System.Management.Instrumentation.WmiConfigurationAttribute> wird verwendet, um anzugeben, dass die Assembly, die sie, in enthalten ist einen in-Process-Anbieter, der unter dem Sicherheitskontext des NetworkService ausgeführt wird und gehostet wird in einer Instanz des Prozesses Wmiprvse.exe implementiert, der auch einen Host andere in-Process-Anbieter in der gleichen Host befinden, die auch auf den Sicherheitskontext des NetworkService ausgeführt.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = "MyProviders"]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingModel">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementHostingModel HostingModel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingModel As ManagementHostingModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::ManagementHostingModel HostingModel { System::Management::Instrumentation::ManagementHostingModel get(); void set(System::Management::Instrumentation::ManagementHostingModel value); };" />
      <MemberSignature Language="F#" Value="member this.HostingModel : System.Management.Instrumentation.ManagementHostingModel with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementHostingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Hostingmodell für den WMI-Anbieter ab oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Management.Instrumentation.ManagementHostingModel" />-Wert, der das Hostingmodell des WMI-Anbieters angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 WMI-Anbieter können von einer Anwendung oder vom WMI-Dienst gehostet werden. WMI-Anbieter, die von einer Anwendung gehostet werden Entkoppelte Anbieter aufgerufen. Die vom WMI-Dienst gehostet werden in prozessinterne Anbieter aufgerufen. Der Modellwert hosting bestimmt das Hostingmodell Modell und im Fall von prozessinternen Anbietern, das Konto (Security Context) unter dem der Anbieter ausgeführt wird. Weitere Informationen zu den möglichen Werten von HostingModel finden Sie unter <xref:System.Management.Instrumentation.ManagementHostingModel>.  
  
 Weitere Informationen zum Hosten von Modellen finden Sie unter den [Provider Hosting and Security](https://go.microsoft.com/fwlink/?LinkId=100075) Thema in der WMI-SDK auf MSDN.  
  
   
  
## Examples  
 Im folgenden Beispiel die <xref:System.Management.Instrumentation.WmiConfigurationAttribute> wird verwendet, um anzugeben, dass die Assembly, die in enthalten ist, einen Anbieter implementiert, die durch den Root\NVPair-Namespace verfügbar gemacht wird. Da das hosting-Modell nicht ist <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>, es ist ein in-Process-Anbieter. Der Wert <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> gibt an, dass der in-Process-Anbieter unter dem Sicherheitskontext des NetworkService ausgeführt wird.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService)]  
```  
  
 Im nächsten Beispiel der <xref:System.Management.Instrumentation.WmiConfigurationAttribute> wird verwendet, um anzugeben, dass die Assembly, die in enthalten ist, einen Anbieter implementiert, die durch den Root\NVPair-Namespace verfügbar gemacht wird. Der Wert <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> gibt an, dass es sich um einen entkoppelten Anbieter handelt.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.Decoupled)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyLevel">
      <MemberSignature Language="C#" Value="public bool IdentifyLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IdentifyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentifyLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IdentifyLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IdentifyLevel : bool with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der WMI-Anbieter für seine Aufrufer Identitätswechsel ausführen kann, oder legt diesen Wert fest. Wenn der Wert false ist, kann der Anbieter keine Identitätswechsel ausführen. Beim Wert true kann der Anbieter Identitätswechsel ausführen.</summary>
        <value>Ein boolescher Wert, der angibt, ob ein Anbieter Identitätswechsel für seine Aufrufer ausführen kann. Wenn der Wert false ist, kann der Anbieter keine Identitätswechsel ausführen. Beim Wert true kann der Anbieter Identitätswechsel ausführen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie im Thema "Provider Hosting and Security", in der MSDN online Library unter [ http://www.msdn.com ](https://www.msdn.com/).  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht den IdentifyLevel-Parameter verwenden, um anzugeben, dass der Anbieter seine Aufrufer Identitätswechsel ausführen kann.  
  
```  
[assembly: WmiConfiguration("root/MyProv", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceSecurity">
      <MemberSignature Language="C#" Value="public string NamespaceSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceSecurity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceSecurity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceSecurity : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine SDDL-Zeichenfolge (Security Descriptor Definition Language) ab, die die Sicherheitsbeschreibung für den Namespace angibt, in dem der Anbieter Verwaltungsobjekte verfügbar macht, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SDDL-Zeichenfolge, die die Sicherheitsbeschreibung für den Namespace darstellt, in dem der Anbieter Verwaltungsobjekte verfügbar macht.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Darstellung von sicherheitsbeschreibungen im SDDL-Format finden Sie unter den [Sicherheitsbeschreibungsformat Zeichenfolge](https://go.microsoft.com/fwlink/?LinkId=100763) Thema online in der MSDN Library.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die NamespaceSecurity-Parameter verwenden, um die Sicherheitsbeschreibung im Namespace Root/SDTest festgelegt, in dem der Anbieter, die in dieser Assembly implementiert WMI-Klassen verfügbar macht.  
  
```  
[assembly: WmiConfiguration("root/SDTest", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = "O:BAG:BAD:(A;CI;0x60003;;;WD)")]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den WMI-Namespace ab, in dem der WMI-Anbieter Klassen verfügbar macht, oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der den Namespace angibt, in dem der WMI-Anbieter Klassen verfügbar macht.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein WMI-Namespace ist eine Kategorie in das WMI-Repository. Häufig verwendete Root/cimv2-Namespace enthält Klassen, die das Common Information Model, Version 2, vom Desktop Management Task Force (DMTF) Consortium beschreiben. Sie sollten Ihre Anbieter in diesem Namespace nur machen, wenn Sie auf die Standand-CIM-Modell erweitern. Andernfalls sollten Sie einen geeigneten Namespace erstellen, der für Benutzer den Typ der WMI-Klassen, die sie erwarten können verdeutlicht, finden Sie im Namespace.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityRestriction">
      <MemberSignature Language="C#" Value="public string SecurityRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityRestriction" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityRestriction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityRestriction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRestriction : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Sicherheitsbeschreibung für den WMI-Anbieter ab oder legt diese fest. Weitere Informationen finden Sie in der SecurityDescriptor-Eigenschaft in dem Artikel „__Win32Provider“ in der MSDN Online Library unter [http://www.msdn.com](https://www.msdn.com/).</summary>
        <value>Ein <see cref="T:System.String" />-Wert, der die Sicherheitsbeschreibung für den WMI-Anbieter enthält.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>