<Type Name="ManagementKeyAttribute" FullName="System.Management.Instrumentation.ManagementKeyAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e59570b74717ce0025acec5efcb995a734778e30" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82373845" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagementKeyAttribute : System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementKeyAttribute extends System.Management.Instrumentation.ManagementMemberAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementKeyAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementKeyAttribute&#xA;Inherits ManagementMemberAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementKeyAttribute sealed : System::Management::Instrumentation::ManagementMemberAttribute" />
  <TypeSignature Language="F#" Value="type ManagementKeyAttribute = class&#xA;    inherit ManagementMemberAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Management.Instrumentation.ManagementMemberAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Das ManagementKey-Attribut identifiziert die Schlüsseleigenschaften einer WMI-Klasse.  
  
Hinweis: Die WMI .NET-Bibliotheken werden jetzt als abgeschlossen betrachtet, und keine weiteren Entwicklungen, Verbesserungen oder Updates werden für nicht sicherheitsrelevante Aspekte verfügbar sein, die diese Bibliotheken betreffen. Die [MI-APIs](https://docs.microsoft.com/previous-versions/windows/desktop/wmi_v2/windows-management-infrastructure) sollten für alle Neuentwicklungen verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine WMI-Klasse keine Singleton-Klasse ist, kann Sie mehrere zugehörige Instanzen aufweisen. Clients der-Klasse müssen in der Lage sein, die jeweilige Instanz eindeutig zu identifizieren, an der Sie interessiert sind. Als Anbietern des Anbieters müssen Sie also eine Eigenschaft oder einen Satz von Eigenschaften auswählen, die eine Instanz der einzelnen WMI-Klassen eindeutig identifizieren. Sie verwenden das <xref:System.Management.Instrumentation.ManagementKeyAttribute>-Attribut, um diese Schlüsseleigenschaften zu identifizieren. Eigenschaften, die als Schlüssel identifiziert werden, haben das gleiche Laufzeitverhalten wie schreibgeschützte Eigenschaften, die durch das <xref:System.Management.Instrumentation.ManagementProbeAttribute>-Attribut angegeben werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Management.Instrumentation.ManagementKeyAttribute> verwendet wird, um ein Feld als Schlüsseleigenschaft einer WMI-Klasse zu markieren.  
  
```csharp  
[ManagementKey]  
public int id;  
```  
  
 Im nächsten Beispiel wird gezeigt, wie das <xref:System.Management.Instrumentation.ManagementKeyAttribute>-Attribut verwendet wird, um eine Schlüsseleigenschaft einer WMI-Klasse zu markieren.  
  
```csharp  
// Use the ManagementKey attribute to specify that this property   
// is used as the key identifier of this class and for the WMI  
// instances of this class.  This property must be unique for each  
// class instance.  
[ManagementKey]  
public int Id  
{  
    get { return System.Diagnostics.Process.GetCurrentProcess().Id; }  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Management.Instrumentation.ManagementProbeAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementConfigurationAttribute" />
    <altmember cref="T:System.Management.Instrumentation.ManagementTaskAttribute" />
    <related type="Article" href="https://msdn.microsoft.com/library/d7eb170a-f1ba-454c-a8f0-b9acd2008464">Attribute für WMI.NET-Anbietererweiterungen</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementKeyAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementKeyAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementKeyAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Management.Instrumentation.ManagementKeyAttribute" />. Dies ist der parameterlose Konstruktor.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
