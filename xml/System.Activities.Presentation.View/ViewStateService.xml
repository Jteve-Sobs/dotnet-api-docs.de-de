<Type Name="ViewStateService" FullName="System.Activities.Presentation.View.ViewStateService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="267468a00fdd54a77dcdc8e2daf0217761d34d87" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ViewStateService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ViewStateService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.View.ViewStateService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ViewStateService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4a51f-101">Ermöglicht die Beibehaltung aller und den Zugriff auf alle den Benutzerinteraktionskomponenten einer Workflowanwendung zugeordneten Datenwerte, zu einem bestimmten Zeitpunkt in der Ausführung einer Workflowanwendung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a51f-101">Enables the preservation and accessing of all data values associated with the user interaction components of a workflow application, at a particular point in time in the running of a workflow application.</span>
      </span>
      <span data-ttu-id="4a51f-102">Ein <see cref="T:System.Activities.Presentation.View.ViewStateService" /> speichert Ansichtszustände für Modellelemente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a51f-102">A <see cref="T:System.Activities.Presentation.View.ViewStateService" /> stores view states for model items.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a51f-103">Dies ist nützlich, damit der Zustand weiterhin abgerufen wird, wenn die Steuerung der Anwendung mit Postbacks wechselt.</span><span class="sxs-lookup"><span data-stu-id="4a51f-103">This is useful so that the state can keep being retrieved when control of the application goes and comes with postbacks.</span></span> <span data-ttu-id="4a51f-104"><xref:System.Activities.Presentation.View.ViewStateService> ist eine abstrakte Klasse.</span><span class="sxs-lookup"><span data-stu-id="4a51f-104"><xref:System.Activities.Presentation.View.ViewStateService> is an abstract class.</span></span> <span data-ttu-id="4a51f-105">Abgeleitete Klassen müssen Ansichtszustände speichern, wenn <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> aufgerufen wird, und sie abrufen, wenn <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4a51f-105">Derived classes must store view states when <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> is called, and retrieve them when <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> is called.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewStateService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ViewStateService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a51f-106">Initialisiert eine neue Instanz der <see cref="T:System.Activities.Presentation.View.ViewStateService" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-106">Initiates a new instance of the <see cref="T:System.Activities.Presentation.View.ViewStateService" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveViewState">
      <MemberSignature Language="C#" Value="public abstract bool RemoveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RemoveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RemoveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="4a51f-107">Das <see cref="T:System.Activities.Presentation.Model.ModelItem" /> der Workflowaktivität, das dem aktuellen Ansichtszustand zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-107">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="4a51f-108">Die <see cref="T:System.String" />, die das Ansichtszustandselement identifiziert, das gespeichert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-108">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a51f-109">Entfernt bei Implementierung in einer abgeleiteten Klasse den Ansichtszustand, der durch den angegebenen Schlüssel dargestellt wird und dem angegebenen Modellelement zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-109">When implemented in a derived class, removes the view state represented by the specified key and associated with the specified model item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a51f-110">
            <see langword="true" />, wenn der Ansichtszustand entfernt wurde; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-110">
              <see langword="true" /> if the view state was removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveAllViewState">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.Dictionary&lt;string,object&gt; RetrieveAllViewState (System.Activities.Presentation.Model.ModelItem modelItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; RetrieveAllViewState(class System.Activities.Presentation.Model.ModelItem modelItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveAllViewState(System.Activities.Presentation.Model.ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ RetrieveAllViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="4a51f-111">Das <see cref="T:System.Activities.Presentation.Model.ModelItem" />, für das der Ansichtszustand gilt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-111">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a51f-112">Gibt einen Aspekt des Ansichtszustands zurück, der für das angegebene <paramref name="modelItem" /> gespeichert wurde und dem angegebenen <paramref name="key" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-112">Returns an aspect of the view state that was stored for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a51f-113">Gibt <see cref="T:System.Collections.Generic.Dictionary`2" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-113">Returns <see cref="T:System.Collections.Generic.Dictionary`2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a51f-114">Rufen Sie <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> auf, um zunächst Ansichtszustandsinformationen zu speichern, damit sie abgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="4a51f-114">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveViewState">
      <MemberSignature Language="C#" Value="public abstract object RetrieveViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object RetrieveViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.RetrieveViewState(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ RetrieveViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="4a51f-115">Das <see cref="T:System.Activities.Presentation.Model.ModelItem" /> der Workflowaktivität, das dem aktuellen Ansichtszustand zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-115">The workflow activity <see cref="T:System.Activities.Presentation.Model.ModelItem" /> associated with the current view state.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="4a51f-116">Die <see cref="T:System.String" />, die den Aspekt des Ansichtszustands identifiziert, der abgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-116">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a51f-117">Ruft einen Aspekt des Ansichtszustands für das angegebene <paramref name="modelItem" /> ab, dass dem angegebenen <paramref name="key" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-117">Retrieves an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a51f-118">Gibt den Aspekt des Ansichtszustands als <see cref="T:System.Object" /> oder <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-118">The aspect of the view state as an <see cref="T:System.Object" />,or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a51f-119">Rufen Sie <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> auf, um zunächst Ansichtszustandsinformationen zu speichern, damit sie abgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="4a51f-119">Call <xref:System.Activities.Presentation.View.ViewStateService.StoreViewState%2A> to initially store view state information so that it can be retrieved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewState">
      <MemberSignature Language="C#" Value="public abstract void StoreViewState (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewState(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewState(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewState(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="4a51f-120">Das <see cref="T:System.Activities.Presentation.Model.ModelItem" />, für das der Ansichtszustand gilt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-120">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="4a51f-121">Die <see cref="T:System.String" />, die den Aspekt des Ansichtszustands identifiziert, der gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-121">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4a51f-122">Ein zu speicherndes <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-122">An <see cref="T:System.Object" /> to be stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a51f-123">Speichert einen Aspekt des Ansichtszustands für das angegebene <paramref name="modelItem" />, dass dem angegebenen <paramref name="key" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-123">Stores an aspect of the view state for the specified <paramref name="modelItem" />, matching the specified <paramref name="key" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a51f-124">Sie können das gespeicherte Objekt abrufen, indem Sie <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> aufrufen und die gleichen Werte für `modelItem` und `key` übergeben.</span><span class="sxs-lookup"><span data-stu-id="4a51f-124">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreViewStateWithUndo">
      <MemberSignature Language="C#" Value="public abstract void StoreViewStateWithUndo (System.Activities.Presentation.Model.ModelItem modelItem, string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StoreViewStateWithUndo(class System.Activities.Presentation.Model.ModelItem modelItem, string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.View.ViewStateService.StoreViewStateWithUndo(System.Activities.Presentation.Model.ModelItem,System.String,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void StoreViewStateWithUndo(System::Activities::Presentation::Model::ModelItem ^ modelItem, System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modelItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="modelItem">
          <span data-ttu-id="4a51f-125">Das <see cref="T:System.Activities.Presentation.Model.ModelItem" />, für das der Ansichtszustand gilt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-125">The <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that the view state applies to.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="4a51f-126">Die <see cref="T:System.String" />, die den Aspekt des Ansichtszustands identifiziert, der gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-126">The <see cref="T:System.String" /> that identifies the aspect of the view state that is to be stored.</span>
          </span>
          <span data-ttu-id="4a51f-127">Die <see cref="T:System.String" />, die das Ansichtszustandselement identifiziert, das gespeichert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-127">The <see cref="T:System.String" /> that identifies the view state item that is stored.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="4a51f-128">Ein zu speicherndes <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-128">An <see cref="T:System.Object" /> to be stored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a51f-129">Zeichnet bei Implementierung in einer abgeleiteten Klasse die aktuelle Einstellung des Elements auf, das durch den angegebenen Schlüssel dargestellt wird, damit es zum Rückgängigmachen verfügbar ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-129">When implemented in a derived class, records the current setting of the item represented by the specified key so that it is available for an undo operation.</span>
          </span>
          <span data-ttu-id="4a51f-130">Das durch den angegebenen Schlüssel dargestellte Element wird dann im Ansichtszustand des angegebenen Modellelements gespeichert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-130">The item represented by the specified key is then stored in the view state of the specified model item.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a51f-131">Sie können das gespeicherte Objekt abrufen, indem Sie <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> aufrufen und die gleichen Werte für `modelItem` und `key` übergeben.</span><span class="sxs-lookup"><span data-stu-id="4a51f-131">You can retrieve the stored object by calling <xref:System.Activities.Presentation.View.ViewStateService.RetrieveViewState%2A> and passing the same values for `modelItem` and `key`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UndoableViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler UndoableViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.UndoableViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event UndoableViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ UndoableViewStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a51f-132">Deklariert bei Implementierung in einer abgeleiteten Klasse ein Ereignis, das signalisiert, dass eine Änderung am undoable-Ansichtszustand des Steuerelements vorgenommen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-132">When implemented in a derived class, declares an event that signals that a change has been made to the control’s undoable view state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewStateChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Activities.Presentation.View.ViewStateChangedEventHandler ViewStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.View.ViewStateService.ViewStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ViewStateChanged As ViewStateChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Activities::Presentation::View::ViewStateChangedEventHandler ^ ViewStateChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.View.ViewStateChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a51f-133">Deklariert bei Implementierung in einer abgeleiteten Klasse ein Ereignis, das signalisiert, dass eine Änderung am Ansichtszustand des Steuerelements vorgenommen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a51f-133">When implemented in a derived class, declares an event that signals that a change has been made to the control’s view state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>