<Type Name="ClaimTypeRequirement" FullName="System.ServiceModel.Security.Tokens.ClaimTypeRequirement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ea6f074269cb2ca0c4450a4d99acccb35054d31" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86570299" /></Metadata><TypeSignature Language="C#" Value="public class ClaimTypeRequirement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClaimTypeRequirement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimTypeRequirement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimTypeRequirement" />
  <TypeSignature Language="F#" Value="type ClaimTypeRequirement = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt die Typen der erforderlichen und optionalen Ansprüche an, die in verbundenen Anmeldeinformationen vorhanden sein sollen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem verbundenen Szenario legen Dienste die Anforderungen für eingehende Anmeldeinformationen fest. Zum Beispiel müssen die eingehenden Anmeldeinformationen einen bestimmten Satz an Anspruchstypen aufweisen. Diese Anforderung wird sich in einer Sicherheitsrichtlinie auswirken. Wenn ein Client ein Sicherheitstoken von einem Sicherheitstokendienst anfordert (beispielsweise [!INCLUDE[infocard](~/includes/infocard-md.md)]), legt er die Anforderungen in einer Tokenanforderung ab, sodass der Sicherheitstokendienst ein Sicherheitstoken ausgeben kann, das die Anforderungen entsprechend erfüllt.  
  
   
  
## Examples  
 Der folgende Code fügt einer Sicherheitsbindung zwei Anspruchstypanforderungen hinzu.  
  
 [!code-csharp[S_UEClaimTypeRequirement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#1)]  
  
 Für das vorhergehende Codebeispiel wird die folgende Konfigurationsdatei verwendet.  
  
 [!code-xml[S_UEClaimTypeRequirement#101](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/common/app.config#101)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimTypeRequirement (string claimType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string claimType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimTypeRequirement(System::String ^ claimType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.ClaimTypeRequirement : string -&gt; System.ServiceModel.Security.Tokens.ClaimTypeRequirement" Usage="new System.ServiceModel.Security.Tokens.ClaimTypeRequirement claimType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="claimType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claimType">Der Anspruchstyp.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />-Klasse für einen angeforderten Anspruch vom angegebenen Typ.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie finden die vordefinierten Anspruchstypen unter <xref:System.IdentityModel.Claims.ClaimTypes>.  
  
   
  
## Examples  
 Der folgende Code fügt einer Sicherheitsbindung zwei Anspruchstypanforderungen hinzu.  
  
 [!code-csharp[S_UEClaimTypeRequirement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimTypeRequirement (string claimType, bool isOptional);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string claimType, bool isOptional) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claimType As String, isOptional As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimTypeRequirement(System::String ^ claimType, bool isOptional);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.ClaimTypeRequirement : string * bool -&gt; System.ServiceModel.Security.Tokens.ClaimTypeRequirement" Usage="new System.ServiceModel.Security.Tokens.ClaimTypeRequirement (claimType, isOptional)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claimType" Type="System.String" />
        <Parameter Name="isOptional" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="claimType">Der Anspruchstyp.</param>
        <param name="isOptional">Bei <see langword="false" /> ist der Anspruch erforderlich, andernfalls ist er optional.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />-Klasse für einen Anspruch vom angegebenen Typ.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Der folgende Code fügt einer Sicherheitsbindung zwei Anspruchstypanforderungen hinzu.  
  
 [!code-csharp[S_UEClaimTypeRequirement#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClaimType">
      <MemberSignature Language="C#" Value="public string ClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClaimType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClaimType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClaimType : string" Usage="System.ServiceModel.Security.Tokens.ClaimTypeRequirement.ClaimType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den im Konstruktor angegebenen Anspruchstyp ab.</summary>
        <value>Der Anspruchstyp.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist ein URI, der den Typ des Anspruchs definiert.  Wenn ein Benutzer zum Beispiel ein Produkt auf einer Website erwerben möchte, muss er eine gültige Kreditkarte mit einem ausreichend hohen Kreditrahmen vorlegen. Der Anspruchstyp wäre der Kreditkarten-URI.  
  
   
  
## Examples  
 Der folgende Code zeigt, wie diese Eigenschaft abgerufen wird.  
  
 [!code-csharp[S_UEClaimTypeRequirement#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptional">
      <MemberSignature Language="C#" Value="public bool IsOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOptional" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOptional As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOptional { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOptional : bool" Usage="System.ServiceModel.Security.Tokens.ClaimTypeRequirement.IsOptional" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Anspruch optional ist.</summary>
        <value><see langword="true" />, wenn die Klasseninstanz einen optionalen Anspruch angibt, und <see langword="false" />, wenn sie einen erforderlichen Anspruch angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann zum Beispiel verwendet werden, wenn der Benutzer zur Angabe von Informationen aufgefordert wird, die aber nicht zwingend erforderlich sind. Beispiel: Vor- und Nachname und Adresse müssen angegeben werden, die Telefonnummer ist jedoch optional.  
  
   
  
## Examples  
 Der folgende Code zeigt, wie diese Eigenschaft abgerufen wird.  
  
 [!code-csharp[S_UEClaimTypeRequirement#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueclaimtyperequirement/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
