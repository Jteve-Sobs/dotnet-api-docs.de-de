<Type Name="IIssuanceSecurityTokenAuthenticator" FullName="System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4893574796ecea63139a3127529a5028ddf0c716" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64030332" /></Metadata><TypeSignature Language="C#" Value="public interface IIssuanceSecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IIssuanceSecurityTokenAuthenticator" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public Interface IIssuanceSecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public interface class IIssuanceSecurityTokenAuthenticator" />
  <TypeSignature Language="F#" Value="type IIssuanceSecurityTokenAuthenticator = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5d378-101">Gibt den Vertrag an, der von einem benutzerdefinierten Sicherheitstokenauthentifizierer implementiert werden soll, der Token an den Client ausgibt.</span><span class="sxs-lookup"><span data-stu-id="5d378-101">Specifies the contract that should be implemented by a custom security token authenticator that issues tokens to the client.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d378-102">Die von WCF f√ºr die SSLNEGO/SPNEGO-verwendeten Tokenauthentifizierer `SecurityContextToken`s oder SecureConversation-basierte `SecurityContextToken`sind `IIssuanceSecurityTokenAuthenticator`s.</span><span class="sxs-lookup"><span data-stu-id="5d378-102">The token authenticators used by WCF for issuing SSLNEGO/SPNEGO `SecurityContextToken`s or SecureConversation-based `SecurityContextToken`s are `IIssuanceSecurityTokenAuthenticator`s.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IssuedSecurityTokenHandler">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler IssuedSecurityTokenHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler IssuedSecurityTokenHandler" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property IssuedSecurityTokenHandler As IssuedSecurityTokenHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::Tokens::IssuedSecurityTokenHandler ^ IssuedSecurityTokenHandler { System::ServiceModel::Security::Tokens::IssuedSecurityTokenHandler ^ get(); void set(System::ServiceModel::Security::Tokens::IssuedSecurityTokenHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IssuedSecurityTokenHandler : System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler with get, set" Usage="System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.IssuedSecurityTokenHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.IssuedSecurityTokenHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d378-103">Ruft einen Handler ab, wenn das Token ausgestellt wird, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="5d378-103">Gets or sets a handler for when the token is issued.</span></span></summary>
        <value><span data-ttu-id="5d378-104">Ein Delegat, der das Ereignis verarbeitet, wenn ein Token ausgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="5d378-104">A delegate that handles the event when a token is issued.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewedSecurityTokenHandler">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler RenewedSecurityTokenHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler RenewedSecurityTokenHandler" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewedSecurityTokenHandler As RenewedSecurityTokenHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::Tokens::RenewedSecurityTokenHandler ^ RenewedSecurityTokenHandler { System::ServiceModel::Security::Tokens::RenewedSecurityTokenHandler ^ get(); void set(System::ServiceModel::Security::Tokens::RenewedSecurityTokenHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenewedSecurityTokenHandler : System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler with get, set" Usage="System.ServiceModel.Security.Tokens.IIssuanceSecurityTokenAuthenticator.RenewedSecurityTokenHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.RenewedSecurityTokenHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5d378-105">Ruft einen Handler ab, wenn das Token erneuert wird, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="5d378-105">Gets or sets a handler for when the token is renewed.</span></span></summary>
        <value><span data-ttu-id="5d378-106">Ein Delegat, der das Ereignis verarbeitet, wenn ein Token erneuert wird.</span><span class="sxs-lookup"><span data-stu-id="5d378-106">A delegate that handles the event when a token is renewed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5d378-107">Dieser Delegat sollte nur aufgerufen werden, wenn der Tokenauthentifizierer die Erneuerung ausgestellter Token verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="5d378-107">This delegate should be invoked only if the token authenticator handles renewal of issued tokens.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>