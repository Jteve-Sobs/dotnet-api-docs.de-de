<Type Name="EventListener" FullName="System.Diagnostics.Tracing.EventListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b310ed7d5ba89022d120de88bbab3d5bad79a809" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69253388" /></Metadata><TypeSignature Language="C#" Value="public abstract class EventListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventListener" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventListener abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type EventListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="63951-101">Stellt Methoden zum Aktivieren und Deaktivieren von Ereignissen aus Ereignisquellen bereit.</span><span class="sxs-lookup"><span data-stu-id="63951-101">Provides methods for enabling and disabling events from event sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-102">Ein Ereignislistener stellt das Ziel für alle Ereignisse dar, die von<xref:System.Diagnostics.Tracing.EventSource> den Implementierungen der Ereignis Quelle (Object) in der aktuellen Anwendungsdomäne generiert werden.</span><span class="sxs-lookup"><span data-stu-id="63951-102">An event listener represents the target for all events generated by event source (<xref:System.Diagnostics.Tracing.EventSource> object) implementations in the current application domain.</span></span> <span data-ttu-id="63951-103">Wenn ein neuer Ereignislistener erstellt wird, wird er logisch an alle Ereignis Quellen in dieser Anwendungsdomäne angefügt.</span><span class="sxs-lookup"><span data-stu-id="63951-103">When a new event listener is created, it is logically attached to all event sources in that application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="63951-104">Dieser Typ implementiert die <xref:System.IDisposable>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="63951-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="63951-105">Wenn Sie die Verwendung des Typs abgeschlossen haben, müssen Sie ihn entweder direkt oder indirekt verwerfen.</span><span class="sxs-lookup"><span data-stu-id="63951-105">When you have finished using the type, you must dispose of it either directly or indirectly.</span></span> <span data-ttu-id="63951-106">Zum direkten Löschen des Typs rufen Sie seine <xref:System.IDisposable.Dispose%2A>-Methode in einem `try`/`catch`-Block auf.</span><span class="sxs-lookup"><span data-stu-id="63951-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="63951-107">Zum indirekten Löschen verwenden Sie ein Sprachkonstrukt wie `using` (in C#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="63951-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="63951-108">Weitere Informationen finden Sie im Abschnitt „Verwenden eines Objekts, das IDisposable implementiert“ des Themas „Die <xref:System.IDisposable>-Schnittstelle“.</span><span class="sxs-lookup"><span data-stu-id="63951-108">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="63951-109">Ein Ereignislistener kann auf Grundlage der aktuellen Ereignis Quelle aktivieren oder deaktivieren, indem er Ereignis<xref:System.Diagnostics.Tracing.EventLevel>Ebenen () und Ereignis<xref:System.Diagnostics.Tracing.EventKeywords>Schlüsselwörter () verwendet, um den Satz von Ereignissen, die an den Listener gesendet werden sollen, weiter einzuschränken.</span><span class="sxs-lookup"><span data-stu-id="63951-109">An event listener can enable or disable on a per-current event source basis by using event levels (<xref:System.Diagnostics.Tracing.EventLevel>) and event keywords (<xref:System.Diagnostics.Tracing.EventKeywords>) to further restrict the set of events to be sent to the listener.</span></span> <span data-ttu-id="63951-110">Der Listener kann auch beliebige Befehle an eine bestimmte aktuelle Ereignis Quelle senden, indem er <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> die-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="63951-110">The listener can also send arbitrary commands to a specific current event source by using the <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> method.</span></span> <span data-ttu-id="63951-111">Die Bedeutungen der Befehle sind spezifisch für die Implementierung der Ereignis Quelle.</span><span class="sxs-lookup"><span data-stu-id="63951-111">The meanings of the commands are specific to the implementation of the event source.</span></span>  
  
 <span data-ttu-id="63951-112">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> -Eigenschaft <xref:System.Diagnostics.Tracing.EventSource> im-Objekt, das verwendet wird, um Ereignisse zu <xref:System.Guid.Empty>aktivieren oder zu deaktivieren, den Wert hat, sind alle Ereignis Quellen in der Anwendungsdomäne betroffen.</span><span class="sxs-lookup"><span data-stu-id="63951-112">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the <xref:System.Diagnostics.Tracing.EventSource> object that is used to enable or disable events is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 <span data-ttu-id="63951-113">Mehrere Ereignislistener können in einer einzelnen Anwendungsdomäne definiert werden.</span><span class="sxs-lookup"><span data-stu-id="63951-113">Multiple event listeners can be defined in a single application domain.</span></span> <span data-ttu-id="63951-114">Jeder Listener ist logisch unabhängig von den anderen Listenern, sodass Ereignisse, die von einem Listener aktiviert oder deaktiviert werden, nur diesen Listener betreffen.</span><span class="sxs-lookup"><span data-stu-id="63951-114">Each listener is logically independent of the other listeners so that events that are enabled or disabled by one listener affect only that listener.</span></span> <span data-ttu-id="63951-115">Befehle, die mit der <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> -Methode gesendet werden, können einen semantischen Vorgang ausführen (z. b. ein Garbage Collection oder das Leeren von Daten), der sich auf die anderen Listener auswirkt, aber dies ist die Ausnahme und nicht die Regel.</span><span class="sxs-lookup"><span data-stu-id="63951-115">It is possible for commands sent with the <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> method to do a semantic operation (such as a garbage collection or flushing data) that affects the other listeners, but this is the exception rather than the rule.</span></span>  
  
 <span data-ttu-id="63951-116">Jede Ereignis Quelle speichert eine Liste von Ereignislistenern, an die Ereignisse gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="63951-116">Each event source   keeps a list of event listeners that it sends events to.</span></span> <span data-ttu-id="63951-117">Jedem ereignisquellenlistener-Paar ist ein Satz von Filterkriterien zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="63951-117">A set of filtering criteria is associated with each event source-listener pair.</span></span> <span data-ttu-id="63951-118">Mit diesen Kriterien werden die Ereignisse bestimmt, die der Listener für die aktuelle Ereignis Quelle empfängt.</span><span class="sxs-lookup"><span data-stu-id="63951-118">These criteria determine the events that listener will receive for the current event source.</span></span> <span data-ttu-id="63951-119">Listener empfangen die Ereignisse für Ihre <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> -Methode.</span><span class="sxs-lookup"><span data-stu-id="63951-119">Listeners receive the events on their <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> method.</span></span> <span data-ttu-id="63951-120">Daher müssen Unterklassen von <xref:System.Diagnostics.Tracing.EventListener> diese Methode überschreiben, damit Sie für die Daten etwas Nützliches ist.</span><span class="sxs-lookup"><span data-stu-id="63951-120">Therefore, subclasses of <xref:System.Diagnostics.Tracing.EventListener> must override this method to do something useful with the data.</span></span>  
  
 <span data-ttu-id="63951-121">Wenn eine neue Ereignis Quelle erstellt wird, wird <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> die-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="63951-121">When a new event source is created, the <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> method is called.</span></span> <span data-ttu-id="63951-122">Jeder aktuelle Ereignislistener ruft genau <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> einen-Befehl für jede aktuelle Ereignis Quelle ab, die IT-Protokollmeldungen senden kann.</span><span class="sxs-lookup"><span data-stu-id="63951-122">Every current event listener gets exactly one <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> call for every current event source that can send it log messages.</span></span> <span data-ttu-id="63951-123">Wenn ein Ereignislistener erstellt wird, <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> wird eine Reihe von Aufrufen durchgeführt, um den neuen Listener für alle Ereignis Quellen zu benachrichtigen, die vorhanden waren, bevor der Listener erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="63951-123">When an event listener is created, a series of <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> calls are made to notify the new listener of all the event sources that existed before the listener was created.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63951-124">Erstellt eine neue Instanz der <see cref="T:System.Diagnostics.Tracing.EventListener" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="63951-124">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-125">Alle Ereignisse werden deaktiviert, wenn eine neue Instanz erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="63951-125">All events are disabled when a new instance is created.</span></span> <span data-ttu-id="63951-126">Verwenden Sie <xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A> die-Methoden, um Ereignisse zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="63951-126">Use the <xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A> methods to enable events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableEvents">
      <MemberSignature Language="C#" Value="public void DisableEvents (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableEvents(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="member this.DisableEvents : System.Diagnostics.Tracing.EventSource -&gt; unit" Usage="eventListener.DisableEvents eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="63951-127">Die Ereignisquelle, aus der Ereignisse zu deaktivieren sind.</span><span class="sxs-lookup"><span data-stu-id="63951-127">The event source to disable events for.</span></span></param>
        <summary><span data-ttu-id="63951-128">Deaktiviert alle Ereignisse für die angegebene Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="63951-128">Disables all events for the specified event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-129">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> -Eigenschaft `eventSource` <xref:System.Guid.Empty>für den Wert hat, sind Ereignisse für alle Ereignis Quellen in der Anwendungsdomäne für diesen Ereignislistener deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="63951-129">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property for `eventSource` is <xref:System.Guid.Empty>, events for all event sources in the application domain are disabled for this event listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="eventListener.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="63951-130">Gibt alle von der aktuellen Instanz der <see cref="T:System.Diagnostics.Tracing.EventListener" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="63951-130">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-131">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Diagnostics.Tracing.EventListener> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="63951-131">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventListener>.</span></span> <span data-ttu-id="63951-132">Die `Dispose`-Methode bewirkt, dass <xref:System.Diagnostics.Tracing.EventListener> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="63951-132">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventListener> in an unusable state.</span></span> <span data-ttu-id="63951-133">Nach dem `Dispose`Aufrufen von müssen Sie alle Verweise auf den <xref:System.Diagnostics.Tracing.EventListener> freigeben, damit der Garbage Collector den Speicher freigeben kann <xref:System.Diagnostics.Tracing.EventListener> , den der belegt hat.</span><span class="sxs-lookup"><span data-stu-id="63951-133">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventListener> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventListener> was occupying.</span></span>  
  
 <span data-ttu-id="63951-134">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="63951-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableEvents">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="63951-135">Aktiviert Ereignisse für die angegebene Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="63951-135">Enables events for the specified event source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level);" />
      <MemberSignature Language="F#" Value="member this.EnableEvents : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventLevel -&gt; unit" Usage="eventListener.EnableEvents (eventSource, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="63951-136">Die Ereignisquelle, aus der Ereignisse zu aktivieren sind.</span><span class="sxs-lookup"><span data-stu-id="63951-136">The event source to enable events for.</span></span></param>
        <param name="level"><span data-ttu-id="63951-137">Die Ereignisebene, die aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="63951-137">The level of events to enable.</span></span></param>
        <summary><span data-ttu-id="63951-138">Aktiviert Ereignisse für die angegebene Ereignisquelle, die die angegebene Ausführlichkeitsgrad oder niedriger aufweist.</span><span class="sxs-lookup"><span data-stu-id="63951-138">Enables events for the specified event source that has the specified verbosity level or lower.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-139">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> -Eigenschaft im angegebenen `eventSource` ist <xref:System.Guid.Empty>, sind alle Ereignis Quellen in der Anwendungsdomäne betroffen.</span><span class="sxs-lookup"><span data-stu-id="63951-139">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the specified `eventSource` is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords matchAnyKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword);" />
      <MemberSignature Language="F#" Value="member this.EnableEvents : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords -&gt; unit" Usage="eventListener.EnableEvents (eventSource, level, matchAnyKeyword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="63951-140">Die Ereignisquelle, aus der Ereignisse zu aktivieren sind.</span><span class="sxs-lookup"><span data-stu-id="63951-140">The event source to enable events for.</span></span></param>
        <param name="level"><span data-ttu-id="63951-141">Die Ereignisebene, die aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="63951-141">The level of events to enable.</span></span></param>
        <param name="matchAnyKeyword"><span data-ttu-id="63951-142">Die Schlüsselwortflags, die erforderlich sind, um die Ereignisse zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="63951-142">The keyword flags necessary to enable the events.</span></span></param>
        <summary><span data-ttu-id="63951-143">Aktiviert Ereignisse für die angegebene Ereignisquelle, die den angegebenen Ausführlichkeitsgrad oder niedriger aufweist, und die entsprechenden Schlüsselwort-Flags.</span><span class="sxs-lookup"><span data-stu-id="63951-143">Enables events for the specified event source that has the specified verbosity level or lower, and matching keyword flags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-144">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> -Eigenschaft im angegebenen `eventSource` ist <xref:System.Guid.Empty>, sind alle Ereignis Quellen in der Anwendungsdomäne betroffen.</span><span class="sxs-lookup"><span data-stu-id="63951-144">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the specified `eventSource` is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, System.Collections.Generic.IDictionary&lt;string,string&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.EnableEvents : System.Diagnostics.Tracing.EventSource * System.Diagnostics.Tracing.EventLevel * System.Diagnostics.Tracing.EventKeywords * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="eventListener.EnableEvents (eventSource, level, matchAnyKeyword, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="63951-145">Die Ereignisquelle, aus der Ereignisse zu aktivieren sind.</span><span class="sxs-lookup"><span data-stu-id="63951-145">The event source to enable events for.</span></span></param>
        <param name="level"><span data-ttu-id="63951-146">Die Ereignisebene, die aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="63951-146">The level of events to enable.</span></span></param>
        <param name="matchAnyKeyword"><span data-ttu-id="63951-147">Die Schlüsselwortflags, die erforderlich sind, um die Ereignisse zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="63951-147">The keyword flags necessary to enable the events.</span></span></param>
        <param name="arguments"><span data-ttu-id="63951-148">Die Argumente, die abgeglichen werden sollen, um die Ereignisse zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="63951-148">The arguments to be matched to enable the events.</span></span></param>
        <summary><span data-ttu-id="63951-149">Aktiviert Ereignisse für die angegebene Ereignisquelle, die die angegebene Ausführlichkeitsgrad oder niedriger aufweist, übereinstimmendes Schlüsselwortereignisflag und entsprechende Argumente.</span><span class="sxs-lookup"><span data-stu-id="63951-149">Enables events for the specified event source that has the specified verbosity level or lower, matching event keyword flag, and matching arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-150">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> -Eigenschaft im angegebenen `eventSource` ist <xref:System.Guid.Empty>, sind alle Ereignis Quellen in der Anwendungsdomäne betroffen.</span><span class="sxs-lookup"><span data-stu-id="63951-150">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the specified `eventSource` is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; EventSourceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; EventSourceCreated" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventSourceCreated As EventHandler(Of EventSourceCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventSourceCreatedEventArgs ^&gt; ^ EventSourceCreated;" />
      <MemberSignature Language="F#" Value="member this.EventSourceCreated : EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; " Usage="member this.EventSourceCreated : System.EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63951-151">Tritt auf, wenn eine Ereignisquelle (<see cref="T:System.Diagnostics.Tracing.EventSource" />-Objekt) an den Verteiler angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="63951-151">Occurs when an event source (<see cref="T:System.Diagnostics.Tracing.EventSource" /> object) is attached to the dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-152">Der <xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated> tritt für alle vorhandenen Ereignis Quellen auf, wenn der Ereignislistener erstellt wird, sowie für alle Ereignis Quellen, die nach der Erstellung des Ereignislistener erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="63951-152">The <xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated> occurs for all existing event sources when the event listener is created, as well as for any event sources that are created after the event listener's creation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceIndex">
      <MemberSignature Language="C#" Value="public static int EventSourceIndex (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 EventSourceIndex(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int EventSourceIndex(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="static member EventSourceIndex : System.Diagnostics.Tracing.EventSource -&gt; int" Usage="System.Diagnostics.Tracing.EventListener.EventSourceIndex eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="63951-153">Die Ereignisquelle, deren Index gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="63951-153">The event source to find the index for.</span></span></param>
        <summary><span data-ttu-id="63951-154">Ruft eine kleine nicht negative Zahl ab, die die angegebene Ereignisquelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="63951-154">Gets a small non-negative number that represents the specified event source.</span></span></summary>
        <returns><span data-ttu-id="63951-155">Eine kleine nicht negative Zahl, die die angegebene Ereignisquelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="63951-155">A small non-negative number that represents the specified event source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-156">Der von <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> zurückgegebene Wert identifiziert eine Ereignis Quelle, die für die Indizierung eines Arrays geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="63951-156">The value returned by <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> identifies an event source that is suitable for indexing an array.</span></span> <span data-ttu-id="63951-157">Diese Ganzzahl ist innerhalb der Anwendungsdomäne eindeutig.</span><span class="sxs-lookup"><span data-stu-id="63951-157">This integer is unique within the application domain.</span></span> <span data-ttu-id="63951-158">Ein Ereignislistener kann es nützlich finden, zusätzliche Informationen zu jeder Ereignis Quelle zu speichern, die mit ihm verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="63951-158">An event listener might find it useful to store additional information about each event source that is connected to it.</span></span> <span data-ttu-id="63951-159">Der von <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> zurückgegebene Wert ermöglicht die effiziente Speicherung dieser zusätzlichen Informationen in einem erweiterbaren Array, `List<T>`wie z. b.</span><span class="sxs-lookup"><span data-stu-id="63951-159">The value returned by <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> allows this extra information to be efficiently stored in a  expandable array such as `List<T>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventWritten">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; EventWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventWrittenEventArgs&gt; EventWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventListener.EventWritten" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventWritten As EventHandler(Of EventWrittenEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventWrittenEventArgs ^&gt; ^ EventWritten;" />
      <MemberSignature Language="F#" Value="member this.EventWritten : EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; " Usage="member this.EventWritten : System.EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="63951-160">Tritt auf, wenn ein Ereignis von einer Ereignisquelle (<see cref="T:System.Diagnostics.Tracing.EventSource" />-Objekt) geschrieben wurde, für die der Ereignislistener Ereignisse aktiviert hat.</span><span class="sxs-lookup"><span data-stu-id="63951-160">Occurs when an event has been written by an event source (<see cref="T:System.Diagnostics.Tracing.EventSource" /> object) for which the event listener has enabled events.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventSourceCreated">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEventSourceCreated (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEventSourceCreated(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEventSourceCreated(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member OnEventSourceCreated : System.Diagnostics.Tracing.EventSource -&gt; unit&#xA;override this.OnEventSourceCreated : System.Diagnostics.Tracing.EventSource -&gt; unit" Usage="eventListener.OnEventSourceCreated eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="63951-161">Die Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="63951-161">The event source.</span></span></param>
        <summary><span data-ttu-id="63951-162">Wird für alle vorhandenen Ereignisquellen aufgerufen, wenn der Ereignislistener erstellt wird, und wenn eine neue Ereignisquelle zum Listener angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="63951-162">Called for all existing event sources when the event listener is created and when a new event source is attached to the listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="63951-163">Ereignis Quellen Implementierungen sollten beachten, dass diese Rückrufe für vorhandene Ereignis Quellen ausgegeben werden, wenn der Ereignislistener instanziiert wird.</span><span class="sxs-lookup"><span data-stu-id="63951-163">Event source implementations should be aware that these callbacks are issued for existing event sources when the event listener is instantiated.</span></span>  
  
 <span data-ttu-id="63951-164">In einer Multithread-Umgebung ist es möglich, <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> dass Rückrufe vor dem <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> Rückruf auftreten.</span><span class="sxs-lookup"><span data-stu-id="63951-164">In a multithreaded environment, it is possible for <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> callbacks  to occur before the <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> callback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventWritten">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEventWritten (System.Diagnostics.Tracing.EventWrittenEventArgs eventData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEventWritten(class System.Diagnostics.Tracing.EventWrittenEventArgs eventData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEventWritten (eventData As EventWrittenEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEventWritten(System::Diagnostics::Tracing::EventWrittenEventArgs ^ eventData);" />
      <MemberSignature Language="F#" Value="abstract member OnEventWritten : System.Diagnostics.Tracing.EventWrittenEventArgs -&gt; unit" Usage="eventListener.OnEventWritten eventData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="System.Diagnostics.Tracing.EventWrittenEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventData"><span data-ttu-id="63951-165">Ereignisargumente, die das Ereignis beschreiben.</span><span class="sxs-lookup"><span data-stu-id="63951-165">The event arguments that describe the event.</span></span></param>
        <summary><span data-ttu-id="63951-166">Wird aufgerufen, wenn ein Ereignis von einer Ereignisquelle geschrieben wurde, für die der Ereignislistener Ereignisse aktiviert hat.</span><span class="sxs-lookup"><span data-stu-id="63951-166">Called whenever an event has been written by an event source for which the event listener has enabled events.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
