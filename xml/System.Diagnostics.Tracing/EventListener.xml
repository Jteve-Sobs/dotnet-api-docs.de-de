<Type Name="EventListener" FullName="System.Diagnostics.Tracing.EventListener">
  <TypeSignature Language="C#" Value="public abstract class EventListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EventListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventListener" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EventListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventListener abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d7de0-101">Stellt Methoden zum Aktivieren und Deaktivieren von Ereignissen aus Ereignisquellen bereit.</span><span class="sxs-lookup"><span data-stu-id="d7de0-101">Provides methods for enabling and disabling events from event sources.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-102">Ein Ereignislistener stellt das Ziel für alle Ereignisse, die von der Ereignisquelle generiert (<xref:System.Diagnostics.Tracing.EventSource> Objekt) Implementierungen in der aktuellen Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="d7de0-102">An event listener represents the target for all events generated by event source (<xref:System.Diagnostics.Tracing.EventSource> object) implementations in the current application domain.</span></span> <span data-ttu-id="d7de0-103">Wenn eine neue Ereignislistener erstellt wird, ist es logisch an alle Ereignisquellen in der Anwendungsdomäne angefügt.</span><span class="sxs-lookup"><span data-stu-id="d7de0-103">When a new event listener is created, it is logically attached to all event sources in that application domain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d7de0-104">Dieser Typ implementiert die <xref:System.IDisposable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="d7de0-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="d7de0-105">Wenn Sie mithilfe des Typs abgeschlossen haben, müssen Sie es entweder direkt oder indirekt freigeben.</span><span class="sxs-lookup"><span data-stu-id="d7de0-105">When you have finished using the type, you must dispose of it either directly or indirectly.</span></span> <span data-ttu-id="d7de0-106">Aufrufen, um den Typ direkt zu verwerfen, dessen <xref:System.IDisposable.Dispose%2A> Methode in einer `try` / `catch` Block.</span><span class="sxs-lookup"><span data-stu-id="d7de0-106">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="d7de0-107">Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. `using` (in c#) oder `Using` (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d7de0-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="d7de0-108">Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <xref:System.IDisposable> Thema zur Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="d7de0-108">For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 <span data-ttu-id="d7de0-109">Ein Ereignislistener kann aktivieren oder deaktivieren Sie regelmäßig Quelle pro aktuelle Ereignis, mit Ereignisebenen (<xref:System.Diagnostics.Tracing.EventLevel>) und Ereignis-Schlüsselwörter (<xref:System.Diagnostics.Tracing.EventKeywords>), um den Satz von Ereignissen an den Listener zu sendende weiter einzuschränken.</span><span class="sxs-lookup"><span data-stu-id="d7de0-109">An event listener can enable or disable on a per-current event source basis by using event levels (<xref:System.Diagnostics.Tracing.EventLevel>) and event keywords (<xref:System.Diagnostics.Tracing.EventKeywords>) to further restrict the set of events to be sent to the listener.</span></span> <span data-ttu-id="d7de0-110">Der Listener kann auch beliebige Befehle an eine bestimmte Ereignisquelle der aktuellen senden, mit der <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d7de0-110">The listener can also send arbitrary commands to a specific current event source by using the <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> method.</span></span> <span data-ttu-id="d7de0-111">Die Bedeutung der Befehle sind spezifisch für die Implementierung der Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="d7de0-111">The meanings of the commands are specific to the implementation of the event source.</span></span>  
  
 <span data-ttu-id="d7de0-112">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> Eigenschaft in der <xref:System.Diagnostics.Tracing.EventSource> Objekt, das zum Aktivieren oder Deaktivieren von Ereignissen verwendet wird, ist <xref:System.Guid.Empty>, aller Ereignisquellen in der Anwendungsdomäne beeinträchtigt werden.</span><span class="sxs-lookup"><span data-stu-id="d7de0-112">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the <xref:System.Diagnostics.Tracing.EventSource> object that is used to enable or disable events is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 <span data-ttu-id="d7de0-113">In einer einzelnen Anwendungsdomäne können mehreren Ereignislistenern definiert werden.</span><span class="sxs-lookup"><span data-stu-id="d7de0-113">Multiple event listeners can be defined in a single application domain.</span></span> <span data-ttu-id="d7de0-114">Jeder Listener ist logisch unabhängig von den anderen Listener, sodass Ereignisse, die aktiviert oder deaktiviert werden, indem Sie einen Listener sind nur für diesen Listener auswirken.</span><span class="sxs-lookup"><span data-stu-id="d7de0-114">Each listener is logically independent of the other listeners so that events that are enabled or disabled by one listener affect only that listener.</span></span> <span data-ttu-id="d7de0-115">Es ist möglich, dass Befehle gesendet werden, mit der <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> Methode, um einem semantische Vorgang (z. B. eine Garbagecollection oder leeren Daten) auszuführen, wirkt sich auf die anderen Listener, aber dies ist die Regel, anstatt die Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="d7de0-115">It is possible for commands sent with the <xref:System.Diagnostics.Tracing.EventSource.SendCommand%2A> method to do a semantic operation (such as a garbage collection or flushing data) that affects the other listeners, but this is the exception rather than the rule.</span></span>  
  
 <span data-ttu-id="d7de0-116">Jede Ereignisquelle hält eine Liste der Ereignislistener, denen Ereignisse gesendet.</span><span class="sxs-lookup"><span data-stu-id="d7de0-116">Each event source   keeps a list of event listeners that it sends events to.</span></span> <span data-ttu-id="d7de0-117">Ein Satz von Filterkriterien ist jeder Quelle Listener Ereignispaar zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="d7de0-117">A set of filtering criteria is associated with each event source-listener pair.</span></span> <span data-ttu-id="d7de0-118">Diese Kriterien bestimmen die Ereignisse für die aktuelle Ereignisquelle diesen Listener erhalten.</span><span class="sxs-lookup"><span data-stu-id="d7de0-118">These criteria determine the events that listener will receive for the current event source.</span></span> <span data-ttu-id="d7de0-119">Listener die Ereignisse empfangen, auf deren <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d7de0-119">Listeners receive the events on their <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> method.</span></span> <span data-ttu-id="d7de0-120">Aus diesem Grund Unterklassen des <xref:System.Diagnostics.Tracing.EventListener> müssen überschreiben diese Methode, um eine Aktion mit den Daten nützlich.</span><span class="sxs-lookup"><span data-stu-id="d7de0-120">Therefore, subclasses of <xref:System.Diagnostics.Tracing.EventListener> must override this method to do something useful with the data.</span></span>  
  
 <span data-ttu-id="d7de0-121">Wenn eine neue Ereignisquelle erstellt wird, die <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d7de0-121">When a new event source is created, the <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> method is called.</span></span> <span data-ttu-id="d7de0-122">Alle aktuellen Ereignislistener ruft nur jeweils <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> rufen Sie für jede aktuelle Ereignisquelle, die sie senden kann Nachrichten protokollieren.</span><span class="sxs-lookup"><span data-stu-id="d7de0-122">Every current event listener gets exactly one <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> call for every current event source that can send it log messages.</span></span> <span data-ttu-id="d7de0-123">Wenn ein Ereignislistener erstellt wird, wird eine Reihe von <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> Aufrufe von der neue Listener von aller Ereignisquellen zu informieren, die vorhanden waren, bevor der Listener erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="d7de0-123">When an event listener is created, a series of <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> calls are made to notify the new listener of all the event sources that existed before the listener was created.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EventListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EventListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7de0-124">Erstellt eine neue Instanz der <see cref="T:System.Diagnostics.Tracing.EventListener" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d7de0-124">Creates a new instance of the <see cref="T:System.Diagnostics.Tracing.EventListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-125">Alle Ereignisse sind deaktiviert, wenn eine neue Instanz erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="d7de0-125">All events are disabled when a new instance is created.</span></span> <span data-ttu-id="d7de0-126">Verwenden der <xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A> Methoden, um Ereignisse zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="d7de0-126">Use the <xref:System.Diagnostics.Tracing.EventListener.EnableEvents%2A> methods to enable events.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableEvents">
      <MemberSignature Language="C#" Value="public void DisableEvents (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisableEvents(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.DisableEvents(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="d7de0-127">Die Ereignisquelle, aus der Ereignisse zu deaktivieren sind.</span><span class="sxs-lookup"><span data-stu-id="d7de0-127">The event source to disable events for.</span></span></param>
        <summary><span data-ttu-id="d7de0-128">Deaktiviert alle Ereignisse für die angegebene Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="d7de0-128">Disables all events for the specified event source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-129">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> -Eigenschaft für `eventSource` ist <xref:System.Guid.Empty>, werden Ereignisse für alle Ereignisquellen in der Anwendungsdomäne für diese Ereignislistener deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="d7de0-129">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property for `eventSource` is <xref:System.Guid.Empty>, events for all event sources in the application domain are disabled for this event listener.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d7de0-130">Gibt alle von der aktuellen Instanz der <see cref="T:System.Diagnostics.Tracing.EventListener" />-Klasse verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="d7de0-130">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.Tracing.EventListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-131">Rufen Sie `Dispose` auf, wenn Sie <xref:System.Diagnostics.Tracing.EventListener> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="d7de0-131">Call `Dispose` when you are finished using the <xref:System.Diagnostics.Tracing.EventListener>.</span></span> <span data-ttu-id="d7de0-132">Die `Dispose`-Methode bewirkt, dass <xref:System.Diagnostics.Tracing.EventListener> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="d7de0-132">The `Dispose` method leaves the <xref:System.Diagnostics.Tracing.EventListener> in an unusable state.</span></span> <span data-ttu-id="d7de0-133">Nach dem Aufruf `Dispose`, müssen Sie alle Verweise auf Freigeben der <xref:System.Diagnostics.Tracing.EventListener> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Diagnostics.Tracing.EventListener> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="d7de0-133">After calling `Dispose`, you must release all references to the <xref:System.Diagnostics.Tracing.EventListener> so the garbage collector can reclaim the memory that the <xref:System.Diagnostics.Tracing.EventListener> was occupying.</span></span>  
  
 <span data-ttu-id="d7de0-134">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="d7de0-134">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="EnableEvents">
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d7de0-135">Aktiviert Ereignisse für die angegebene Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="d7de0-135">Enables events for the specified event source.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="d7de0-136">Die Ereignisquelle, aus der Ereignisse zu aktivieren sind.</span><span class="sxs-lookup"><span data-stu-id="d7de0-136">The event source to enable events for.</span></span></param>
        <param name="level"><span data-ttu-id="d7de0-137">Die Ereignisebene, die aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7de0-137">The level of events to enable.</span></span></param>
        <summary><span data-ttu-id="d7de0-138">Aktiviert Ereignisse für die angegebene Ereignisquelle, die die angegebene Ausführlichkeitsgrad oder niedriger aufweist.</span><span class="sxs-lookup"><span data-stu-id="d7de0-138">Enables events for the specified event source that has the specified verbosity level or lower.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-139">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> Eigenschaft im angegebenen `eventSource` ist <xref:System.Guid.Empty>, aller Ereignisquellen in der Anwendungsdomäne beeinträchtigt werden.</span><span class="sxs-lookup"><span data-stu-id="d7de0-139">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the specified `eventSource` is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords matchAnyKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="d7de0-140">Die Ereignisquelle, aus der Ereignisse zu aktivieren sind.</span><span class="sxs-lookup"><span data-stu-id="d7de0-140">The event source to enable events for.</span></span></param>
        <param name="level"><span data-ttu-id="d7de0-141">Die Ereignisebene, die aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7de0-141">The level of events to enable.</span></span></param>
        <param name="matchAnyKeyword"><span data-ttu-id="d7de0-142">Die Schlüsselwortflags, die erforderlich sind, um die Ereignisse zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="d7de0-142">The keyword flags necessary to enable the events.</span></span></param>
        <summary><span data-ttu-id="d7de0-143">Aktiviert Ereignisse für die angegebene Ereignisquelle, die den angegebenen Ausführlichkeitsgrad oder niedriger aufweist, und die entsprechenden Schlüsselwort-Flags.</span><span class="sxs-lookup"><span data-stu-id="d7de0-143">Enables events for the specified event source that has the specified verbosity level or lower, and matching keyword flags.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-144">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> Eigenschaft im angegebenen `eventSource` ist <xref:System.Guid.Empty>, aller Ereignisquellen in der Anwendungsdomäne beeinträchtigt werden.</span><span class="sxs-lookup"><span data-stu-id="d7de0-144">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the specified `eventSource` is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvents">
      <MemberSignature Language="C#" Value="public void EnableEvents (System.Diagnostics.Tracing.EventSource eventSource, System.Diagnostics.Tracing.EventLevel level, System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, System.Collections.Generic.IDictionary&lt;string,string&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnableEvents(class System.Diagnostics.Tracing.EventSource eventSource, valuetype System.Diagnostics.Tracing.EventLevel level, valuetype System.Diagnostics.Tracing.EventKeywords matchAnyKeyword, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EnableEvents(System.Diagnostics.Tracing.EventSource,System.Diagnostics.Tracing.EventLevel,System.Diagnostics.Tracing.EventKeywords,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnableEvents(System::Diagnostics::Tracing::EventSource ^ eventSource, System::Diagnostics::Tracing::EventLevel level, System::Diagnostics::Tracing::EventKeywords matchAnyKeyword, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
        <Parameter Name="arguments" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="d7de0-145">Die Ereignisquelle, aus der Ereignisse zu aktivieren sind.</span><span class="sxs-lookup"><span data-stu-id="d7de0-145">The event source to enable events for.</span></span></param>
        <param name="level"><span data-ttu-id="d7de0-146">Die Ereignisebene, die aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7de0-146">The level of events to enable.</span></span></param>
        <param name="matchAnyKeyword"><span data-ttu-id="d7de0-147">Die Schlüsselwortflags, die erforderlich sind, um die Ereignisse zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="d7de0-147">The keyword flags necessary to enable the events.</span></span></param>
        <param name="arguments"><span data-ttu-id="d7de0-148">Die Argumente, die abgeglichen werden sollen, um die Ereignisse zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="d7de0-148">The arguments to be matched to enable the events.</span></span></param>
        <summary><span data-ttu-id="d7de0-149">Aktiviert Ereignisse für die angegebene Ereignisquelle, die die angegebene Ausführlichkeitsgrad oder niedriger aufweist, übereinstimmendes Schlüsselwortereignisflag und entsprechende Argumente.</span><span class="sxs-lookup"><span data-stu-id="d7de0-149">Enables events for the specified event source that has the specified verbosity level or lower, matching event keyword flag, and matching arguments.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-150">Wenn die <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> Eigenschaft im angegebenen `eventSource` ist <xref:System.Guid.Empty>, aller Ereignisquellen in der Anwendungsdomäne beeinträchtigt werden.</span><span class="sxs-lookup"><span data-stu-id="d7de0-150">If the <xref:System.Diagnostics.Tracing.EventSource.Guid%2A> property in the specified `eventSource` is <xref:System.Guid.Empty>, all event sources in the application domain are affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; EventSourceCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt; EventSourceCreated" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventListener.EventSourceCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EventSourceCreated As EventHandler(Of EventSourceCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventSourceCreatedEventArgs ^&gt; ^ EventSourceCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventSourceCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7de0-151">Tritt auf, wenn eine Ereignisquelle (<see cref="T:System.Diagnostics.Tracing.EventSource" />-Objekt) an den Verteiler angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="d7de0-151">Occurs when an event source (<see cref="T:System.Diagnostics.Tracing.EventSource" /> object) is attached to the dispatcher.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-152">Die <xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated> für alle vorhandenen Ereignisquellen tritt auf, wenn der Ereignislistener, sowie für alle Ereignisquellen erstellt wird, die nach der Erstellung der Ereignislistener erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="d7de0-152">The <xref:System.Diagnostics.Tracing.EventListener.EventSourceCreated> occurs for all existing event sources when the event listener is created, as well as for any event sources that are created after the event listener's creation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventSourceIndex">
      <MemberSignature Language="C#" Value="public static int EventSourceIndex (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 EventSourceIndex(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.EventSourceIndex(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int EventSourceIndex(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="d7de0-153">Die Ereignisquelle, deren Index gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="d7de0-153">The event source to find the index for.</span></span></param>
        <summary><span data-ttu-id="d7de0-154">Ruft eine kleine nicht negative Zahl ab, die die angegebene Ereignisquelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="d7de0-154">Gets a small non-negative number that represents the specified event source.</span></span></summary>
        <returns><span data-ttu-id="d7de0-155">Eine kleine nicht negative Zahl, die die angegebene Ereignisquelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="d7de0-155">A small non-negative number that represents the specified event source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-156">Der Rückgabewert von <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> identifiziert eine Ereignisquelle, die für die Indizierung eines Arrays eignet.</span><span class="sxs-lookup"><span data-stu-id="d7de0-156">The value returned by <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> identifies an event source that is suitable for indexing an array.</span></span> <span data-ttu-id="d7de0-157">Diese Ganzzahl ist eindeutig innerhalb der Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="d7de0-157">This integer is unique within the application domain.</span></span> <span data-ttu-id="d7de0-158">Ein Ereignislistener kann es hilfreich sein, zusätzliche Informationen zu jeder Ereignisquelle zu speichern, die mit ihm verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="d7de0-158">An event listener might find it useful to store additional information about each event source that is connected to it.</span></span> <span data-ttu-id="d7de0-159">Der Rückgabewert von <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> können diese zusätzlichen Informationen effizient in einem erweiterbaren Array gespeichert wird, wie z. B. werden `List<T>`.</span><span class="sxs-lookup"><span data-stu-id="d7de0-159">The value returned by <xref:System.Diagnostics.Tracing.EventListener.EventSourceIndex%2A> allows this extra information to be efficiently stored in a  expandable array such as `List<T>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventWritten">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt; EventWritten;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Diagnostics.Tracing.EventWrittenEventArgs&gt; EventWritten" />
      <MemberSignature Language="DocId" Value="E:System.Diagnostics.Tracing.EventListener.EventWritten" />
      <MemberSignature Language="VB.NET" Value="Public Event EventWritten As EventHandler(Of EventWrittenEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Diagnostics::Tracing::EventWrittenEventArgs ^&gt; ^ EventWritten;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Diagnostics.Tracing.EventWrittenEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d7de0-160">Tritt auf, wenn ein Ereignis von einer Ereignisquelle (<see cref="T:System.Diagnostics.Tracing.EventSource" />-Objekt) geschrieben wurde, für die der Ereignislistener Ereignisse aktiviert hat.</span><span class="sxs-lookup"><span data-stu-id="d7de0-160">Occurs when an event has been written by an event source (<see cref="T:System.Diagnostics.Tracing.EventSource" /> object) for which the event listener has enabled events.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventSourceCreated">
      <MemberSignature Language="C#" Value="protected internal virtual void OnEventSourceCreated (System.Diagnostics.Tracing.EventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEventSourceCreated(class System.Diagnostics.Tracing.EventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated(System.Diagnostics.Tracing.EventSource)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnEventSourceCreated(System::Diagnostics::Tracing::EventSource ^ eventSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="d7de0-161">Die Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="d7de0-161">The event source.</span></span></param>
        <summary><span data-ttu-id="d7de0-162">Wird für alle vorhandenen Ereignisquellen aufgerufen, wenn der Ereignislistener erstellt wird, und wenn eine neue Ereignisquelle zum Listener angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="d7de0-162">Called for all existing event sources when the event listener is created and when a new event source is attached to the listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7de0-163">Ereignis Quelle Implementierungen sollten bedenken, dass diese Rückrufe für vorhandene Ereignisquellen ausgegeben werden, wenn der Ereignislistener instanziiert wird.</span><span class="sxs-lookup"><span data-stu-id="d7de0-163">Event source implementations should be aware that these callbacks are issued for existing event sources when the event listener is instantiated.</span></span>  
  
 <span data-ttu-id="d7de0-164">In einer Multithread-Umgebung ist es möglich, dass <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> Rückrufe vor dem Auftreten der <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> Rückruf.</span><span class="sxs-lookup"><span data-stu-id="d7de0-164">In a multithreaded environment, it is possible for <xref:System.Diagnostics.Tracing.EventListener.OnEventWritten%2A> callbacks  to occur before the <xref:System.Diagnostics.Tracing.EventListener.OnEventSourceCreated%2A> callback.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEventWritten">
      <MemberSignature Language="C#" Value="protected internal abstract void OnEventWritten (System.Diagnostics.Tracing.EventWrittenEventArgs eventData);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnEventWritten(class System.Diagnostics.Tracing.EventWrittenEventArgs eventData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub OnEventWritten (eventData As EventWrittenEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void OnEventWritten(System::Diagnostics::Tracing::EventWrittenEventArgs ^ eventData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventData" Type="System.Diagnostics.Tracing.EventWrittenEventArgs" />
      </Parameters>
      <Docs>
        <param name="eventData"><span data-ttu-id="d7de0-165">Ereignisargumente, die das Ereignis beschreiben.</span><span class="sxs-lookup"><span data-stu-id="d7de0-165">The event arguments that describe the event.</span></span></param>
        <summary><span data-ttu-id="d7de0-166">Wird aufgerufen, wenn ein Ereignis von einer Ereignisquelle geschrieben wurde, für die der Ereignislistener Ereignisse aktiviert hat.</span><span class="sxs-lookup"><span data-stu-id="d7de0-166">Called whenever an event has been written by an event source for which the event listener has enabled events.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>