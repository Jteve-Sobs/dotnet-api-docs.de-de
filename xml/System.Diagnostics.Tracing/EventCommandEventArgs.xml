<Type Name="EventCommandEventArgs" FullName="System.Diagnostics.Tracing.EventCommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83247e60f518d22f5a7ed3d9fd0474ea3c6ddae3" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83528317" /></Metadata><TypeSignature Language="C#" Value="public class EventCommandEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventCommandEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Tracing.EventCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class EventCommandEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventCommandEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type EventCommandEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Diagnostics.Tracing" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Diagnostics.Tracing" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Diagnostics.Tracing" FromVersion="4.1.2.0" To="mscorlib" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.7.1" />
    <TypeForwarding From="System.Diagnostics.Tracing" FromVersion="4.2.0.0" To="mscorlib" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0a3f6-101">Stellt die Argumente für den <see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" />-Rückrufhandler bereit.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-101">Provides the arguments for the <see cref="M:System.Diagnostics.Tracing.EventSource.OnEventCommand(System.Diagnostics.Tracing.EventCommandEventArgs)" /> callback.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventCommandEventArgs.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Arguments As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Arguments { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Diagnostics.Tracing.EventCommandEventArgs.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a3f6-102">Ruft das Array von Argumenten für den Rückruf ab.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-102">Gets the array of arguments for the callback.</span></span></summary>
        <value><span data-ttu-id="0a3f6-103">Ein Array von Rückrufargumenten.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-103">An array of callback arguments.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Diagnostics.Tracing.EventCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.Tracing.EventCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Tracing.EventCommandEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As EventCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Diagnostics::Tracing::EventCommand Command { System::Diagnostics::Tracing::EventCommand get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Diagnostics.Tracing.EventCommand" Usage="System.Diagnostics.Tracing.EventCommandEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.Tracing.EventCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0a3f6-104">Ruft die Anweisung für den Rückruf ab.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-104">Gets the command for the callback.</span></span></summary>
        <value><span data-ttu-id="0a3f6-105">Der Rückrufbefehl.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-105">The callback command.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableEvent">
      <MemberSignature Language="C#" Value="public bool DisableEvent (int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DisableEvent(int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DisableEvent (eventId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DisableEvent(int eventId);" />
      <MemberSignature Language="F#" Value="member this.DisableEvent : int -&gt; bool" Usage="eventCommandEventArgs.DisableEvent eventId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId"><span data-ttu-id="0a3f6-106">Der Bezeichner des Ereignisses, das zu deaktivieren ist.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-106">The identifier of the event to disable.</span></span></param>
        <summary><span data-ttu-id="0a3f6-107">Deaktiviert das Ereignis, das über den angegebenen Bezeichner verfügt.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-107">Disables the event that have the specified identifier.</span></span></summary>
        <returns><span data-ttu-id="0a3f6-108"><see langword="true" />, wenn <paramref name="eventId" /> sich im Bereich befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-108"><see langword="true" /> if <paramref name="eventId" /> is in range; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3f6-109">Sie können alle Ereignisse in einem Ereignislistener deaktivieren, indem Sie <xref:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent%2A> beginnend mit `eventID` = 1 aufrufen und fortfahren, bis <xref:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent%2A> `false`zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-109">You can turn off all events in an event listener by calling <xref:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent%2A> starting with `eventID` = 1 and continuing until <xref:System.Diagnostics.Tracing.EventCommandEventArgs.DisableEvent%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEvent">
      <MemberSignature Language="C#" Value="public bool EnableEvent (int eventId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EnableEvent(int32 eventId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function EnableEvent (eventId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EnableEvent(int eventId);" />
      <MemberSignature Language="F#" Value="member this.EnableEvent : int -&gt; bool" Usage="eventCommandEventArgs.EnableEvent eventId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.Tracing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventId"><span data-ttu-id="0a3f6-110">Der Bezeichner des Ereignisses, das zu aktivieren ist.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-110">The identifier of the event to enable.</span></span></param>
        <summary><span data-ttu-id="0a3f6-111">Aktiviert das Ereignis, das über den angegebenen Bezeichner verfügt.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-111">Enables the event that has the specified identifier.</span></span></summary>
        <returns><span data-ttu-id="0a3f6-112"><see langword="true" />, wenn <paramref name="eventId" /> sich im Bereich befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-112"><see langword="true" /> if <paramref name="eventId" /> is in range; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0a3f6-113">Sie können alle Ereignisse in einem Ereignislistener aktivieren, indem Sie <xref:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent%2A> beginnend mit `eventID` = 1 aufrufen und fortfahren, bis <xref:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent%2A> `false`zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="0a3f6-113">You can turn on all events in an event listener by calling <xref:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent%2A> starting with `eventID` = 1 and continuing until <xref:System.Diagnostics.Tracing.EventCommandEventArgs.EnableEvent%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
