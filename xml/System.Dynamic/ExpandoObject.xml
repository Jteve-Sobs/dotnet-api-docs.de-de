<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExpandoObject.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5819b018355c643d951c9252212c100d95e7d4b18.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">819b018355c643d951c9252212c100d95e7d4b18</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Dynamic.ExpandoObject">
          <source>Represents an object whose members can be dynamically added and removed at run time.</source>
          <target state="translated">Stellt ein Objekt dar, dessen Member dynamisch zur Laufzeit hinzugefügt und entfernt werden können.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The <ph id="ph1">`ExpandoObject`</ph> class enables you to add and delete members of its instances at run time and also to set and get values of these members.</source>
          <target state="translated">Die <ph id="ph1">`ExpandoObject`</ph> -Klasse ermöglicht es Ihnen, zum Hinzufügen und Löschen von Mitgliedern der jeweiligen Instanzen zur Laufzeit und auch zum Festlegen und Abrufen der Werte dieser Elemente.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>This class supports dynamic binding, which enables you to use standard syntax like <ph id="ph1">`sampleObject.sampleMember`</ph> instead of more complex syntax like <ph id="ph2">`sampleObject.GetAttribute("sampleMember")`</ph>.</source>
          <target state="translated">Diese Klasse unterstützt die dynamische Bindung, die Ihnen ermöglicht, z. B.-Standardsyntax verwenden <ph id="ph1">`sampleObject.sampleMember`</ph> statt komplexerer Syntax wie <ph id="ph2">`sampleObject.GetAttribute("sampleMember")`</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The <ph id="ph1">`ExpandoObject`</ph> class implements the standard Dynamic Language Runtime (DLR) interface <ph id="ph2">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>, which enables you to share instances of the <ph id="ph3">`ExpandoObject`</ph> class between languages that support the DLR interoperability model.</source>
          <target state="translated">Die <ph id="ph1">`ExpandoObject`</ph> Klasse implementiert die Dynamic Language Runtime (DLR) Standardschnittstelle <ph id="ph2">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph>, können Sie Instanzen von Teilen der <ph id="ph3">`ExpandoObject`</ph> Klassenschema in Sprachen, die das Modell der DLR-Interoperabilität unterstützen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>For example, you can create an instance of the <ph id="ph1">`ExpandoObject`</ph> class in C# and then pass it to an IronPython function.</source>
          <target state="translated">Sie können z. B. erstellen eine Instanz von der <ph id="ph1">`ExpandoObject`</ph> in C#-Klasse, und klicken Sie dann an eine IronPython-Funktion übergeben.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>For more information, see <bpt id="p1">[</bpt>Dynamic Language Runtime Overview<ept id="p1">](~/docs/framework/reflection-and-codedom/dynamic-language-runtime-overview.md)</ept> and <bpt id="p2">[</bpt>Introducing the ExpandoObject<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=169157)</ept> on the C# Frequently Asked Questions Web site.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Übersicht über die Dynamic Language Runtime<ept id="p1">](~/docs/framework/reflection-and-codedom/dynamic-language-runtime-overview.md)</ept> und <bpt id="p2">[</bpt>Introducing the ExpandoObject<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=169157)</ept> auf der Website mit häufig gestellten Fragen zu c#.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The <ph id="ph1">`ExpandoObject`</ph> class is an implementation of the dynamic object concept that enables getting, setting, and invoking members.</source>
          <target state="translated">Die <ph id="ph1">`ExpandoObject`</ph> Klasse ist eine Implementierung des dynamischen Objektkonzepts, die beim Abrufen, festlegen und aufrufende von Membern ermöglicht.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>If you want to define types that have their own dynamic dispatch semantics, use the <ph id="ph1">&lt;xref:System.Dynamic.DynamicObject&gt;</ph> class.</source>
          <target state="translated">Zum Definieren von Typen, die über ihre eigenen Dynamic dispatch-Semantik, verwenden Sie ggf. die <ph id="ph1">&lt;xref:System.Dynamic.DynamicObject&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>If you want to define how dynamic objects participate in the interoperability protocol and manage DLR fast dynamic dispatch caching, create your own implementation of the <ph id="ph1">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> interface.</source>
          <target state="translated">Wenn Sie definieren möchten wie dynamische Objekte am Interoperabilitätsprotokoll teilnehmen und DLR schnellen dynamischen Dispatch Zwischenspeichern verwalten, erstellen Sie eine eigene Implementierung von der <ph id="ph1">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>Creating an Instance</source>
          <target state="translated">Erstellen einer Instanz</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>In C#, to enable late binding for an instance of the <ph id="ph1">`ExpandoObject`</ph> class, you must use the <ph id="ph2">`dynamic`</ph> keyword.</source>
          <target state="translated">In c#, die für eine Instanz der spätes Binden zu ermöglichen die <ph id="ph1">`ExpandoObject`</ph> -Klasse, müssen Sie verwenden die <ph id="ph2">`dynamic`</ph> Schlüsselwort.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>For more information, see <bpt id="p1">[</bpt>Using Type dynamic<ept id="p1">](~/docs/csharp/programming-guide/types/using-type-dynamic.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Verwenden von dynamischen Typen<ept id="p1">](~/docs/csharp/programming-guide/types/using-type-dynamic.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>In Visual Basic, dynamic operations are supported by late binding.</source>
          <target state="translated">In Visual Basic werden die dynamische Vorgängen von spätes Binden unterstützt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>For more information, see <bpt id="p1">[</bpt>Early and Late Binding<ept id="p1">](http://msdn.microsoft.com/library/d6ff7f1e-b94f-4205-ab8d-5cfa91758724)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>frühe und späte Bindung<ept id="p1">](http://msdn.microsoft.com/library/d6ff7f1e-b94f-4205-ab8d-5cfa91758724)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">`ExpandoObject`</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer Instanz von der <ph id="ph1">`ExpandoObject`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>Adding New Members</source>
          <target state="translated">Hinzufügen neuer Elemente</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>You can add properties, methods, and events to instances of the <ph id="ph1">`ExpandoObject`</ph> class.</source>
          <target state="translated">Sie können die Eigenschaften, Methoden und Ereignisse hinzufügen, um Instanzen von der <ph id="ph1">`ExpandoObject`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The following code example demonstrates how to add a new property to an instance of the <ph id="ph1">`ExpandoObject`</ph> class.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht das Hinzufügen einer neuen Eigenschaft mit einer Instanz von der <ph id="ph1">`ExpandoObject`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The methods represent lambda expressions that are stored as delegates, which can be invoked when they are needed.</source>
          <target state="translated">Die Methoden darstellen, Lambda-Ausdrücke, die als Stellvertreter, gespeichert sind, die aufgerufen werden kann, wenn sie benötigt werden.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The following code example demonstrates how to add a method that increments a value of the dynamic property.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie eine Methode hinzugefügt, die die dynamische Eigenschaft Wert inkrementiert wird.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The following code example demonstrates how to add an event to an instance of the <ph id="ph1">`ExpandoObject`</ph> class.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie das Hinzufügen eines Ereignisses mit einer Instanz von der <ph id="ph1">`ExpandoObject`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>Passing As a Parameter</source>
          <target state="translated">Als Parameter übergeben</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>You can pass instances of the <ph id="ph1">`ExpandoObject`</ph> class as parameters.</source>
          <target state="translated">Sie können Instanzen von übergeben der <ph id="ph1">`ExpandoObject`</ph> Klasse als Parameter.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>Note that these instances are treated as dynamic objects in C# and late-bound objects in Visual Basic.</source>
          <target state="translated">Beachten Sie, dass diese Instanzen als dynamische Objekte in C# geschrieben und spät gebundenen Objekten in Visual Basic behandelt werden.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>This means that you do not have IntelliSense for object members and you do not receive compiler errors when you call non-existent members.</source>
          <target state="translated">Dies bedeutet, dass Sie keine IntelliSense für Objektmember und Sie keine Compiler-Fehler beim Aufrufen von nicht vorhandenen Elemente erhalten.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>If you call a member that does not exist, an exception occurs.</source>
          <target state="translated">Wenn Sie einen Member, der nicht vorhanden ist aufzurufen, tritt eine Ausnahme auf.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The following code example demonstrates how you can create and use a method to print the names and values of properties.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie Sie erstellen und verwenden Sie eine Methode, um die Namen und Werte der Eigenschaften zu drucken.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>Enumerating and Deleting Members</source>
          <target state="translated">Aufzählen und Löschen von Elementen</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The <ph id="ph1">`ExpandoObject`</ph> class implements the <ph id="ph2">`IDictionary&lt;String, Object&gt;`</ph> interface.</source>
          <target state="translated">Die <ph id="ph1">`ExpandoObject`</ph>-Klasse implementiert die <ph id="ph2">`IDictionary&lt;String, Object&gt;`</ph>-Schnittstelle.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>This enables enumeration of members added to the instance of the <ph id="ph1">`ExpandoObject`</ph> class at run time.</source>
          <target state="translated">Dies ermöglicht die Enumeration von Elementen, die hinzugefügt, mit der Instanz von der <ph id="ph1">`ExpandoObject`</ph> Klasse zur Laufzeit.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>This can be useful if you do not know at compile time what members an instance might have.</source>
          <target state="translated">Dies kann hilfreich, wenn Sie nicht zum Zeitpunkt der Kompilierung Member kennen möglicherweise eine Instanz sein.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The following code example shows how you can cast an instance of the <ph id="ph1">`ExpandoObject`</ph> class to the <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> interface and enumerate the instance's members.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie Sie eine Instanz von umwandeln können die <ph id="ph1">`ExpandoObject`</ph> Klasse, um die <ph id="ph2">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> -Schnittstelle und die Instanz Member auflisten.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>In languages that do not have syntax for deleting members (such as C# and Visual Basic), you can delete a member by implicitly casting an instance of the <ph id="ph1">`ExpandoObject`</ph> to the <ph id="ph2">`IDictionary&lt;String, Object&gt;`</ph> interface and then deleting the member as a key/value pair.</source>
          <target state="translated">In Sprachen, die keine Syntax zum Löschen von Elementen (z. B. c# und Visual Basic), können Sie ein Element löschen, indem Sie die impliziten Umwandlung einer Instanz von der <ph id="ph1">`ExpandoObject`</ph> auf die <ph id="ph2">`IDictionary&lt;String, Object&gt;`</ph> -Schnittstelle, und klicken Sie dann das Element als ein Schlüssel/Wert-Paar löschen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>This is shown in the following example.</source>
          <target state="translated">Dies wird im folgenden Beispiel gezeigt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>Receiving Notifications of Property Changes</source>
          <target state="translated">Empfangen von Benachrichtigungen von Eigenschaftenänderungen</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The <ph id="ph1">`ExpandoObject`</ph> class implements the <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> interface and can raise a <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> event when a member is added, deleted, or modified.</source>
          <target state="translated">Die <ph id="ph1">`ExpandoObject`</ph> -Klasse implementiert die <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> Schnittstelle und auslösen kann ein <ph id="ph3">&lt;xref:System.ComponentModel.INotifyPropertyChanged.PropertyChanged&gt;</ph> Ereignis aus, wenn ein Element hinzugefügt, gelöscht oder geändert wird.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>This enables <ph id="ph1">`ExpandoObject`</ph> class integration with Windows Presentation Foundation (WPF) data binding and other environments that require notification about changes in the object content.</source>
          <target state="translated">Dadurch können <ph id="ph1">`ExpandoObject`</ph> -Klasse Integration mit Windows Presentation Foundation (WPF)-Datenbindung und andere Umgebungen, die die Benachrichtigung über Änderungen in den Inhalt des Objekts erforderlich ist.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Dynamic.ExpandoObject">
          <source>The following code example demonstrates how to create an event handler for the <ph id="ph1">`PropertyChanged`</ph> event.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie So erstellen Sie einen Ereignishandler für das <ph id="ph1">`PropertyChanged`</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Dynamic.ExpandoObject.#ctor">
          <source>Initializes a new <ph id="ph1">&lt;see langword="ExpandoObject" /&gt;</ph> that does not have members.</source>
          <target state="translated">Initialisiert ein neues <ph id="ph1">&lt;see langword="ExpandoObject" /&gt;</ph> ohne Member.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through the collection.</source>
          <target state="translated">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that can be used to iterate through the collection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph>, der zum Durchlaufen der Auflistung verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
          <source>The expression that represents the MetaObject to dispatch to the Dynamic virtual methods.</source>
          <target state="translated">Der Ausdruck, der das an die dynamischen virtuellen Methoden zu verteilende MetaObject darstellt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
          <source>The provided MetaObject will dispatch to the dynamic virtual methods.</source>
          <target state="translated">Das bereitgestellte MetaObject wird an die dynamischen virtuellen Methoden verteilt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
          <source>The object can be encapsulated inside another MetaObject to provide custom behavior for individual actions.</source>
          <target state="translated">Das Objekt kann in einem anderen MetaObject gekapselt werden, um benutzerdefiniertes Verhalten für einzelne Aktionen bereitzustellen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)">
          <source>The object of the <ph id="ph1">&lt;see cref="T:System.Dynamic.DynamicMetaObject" /&gt;</ph> type.</source>
          <target state="translated">Das Objekt des <ph id="ph1">&lt;see cref="T:System.Dynamic.DynamicMetaObject" /&gt;</ph>-Typs.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>