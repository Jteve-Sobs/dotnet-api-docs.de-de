<Type Name="DbFilterExpression" FullName="System.Data.Common.CommandTrees.DbFilterExpression">
  <TypeSignature Language="C#" Value="public sealed class DbFilterExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbFilterExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbFilterExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbFilterExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a2117-101">Stellt ein für die Filterung eines Eingabesets verwendetes Prädikat dar.</span><span class="sxs-lookup"><span data-stu-id="a2117-101">Represents a predicate applied to filter an input set.</span></span> <span data-ttu-id="a2117-102">Damit wird der Satz von Elementen erstellt, die das Prädikat erfüllen.</span><span class="sxs-lookup"><span data-stu-id="a2117-102">This produces the set of elements that satisfy the predicate.</span></span> <span data-ttu-id="a2117-103">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="a2117-103">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor"><span data-ttu-id="a2117-104">Eine Instanz von <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span><span class="sxs-lookup"><span data-stu-id="a2117-104">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></param>
        <summary><span data-ttu-id="a2117-105">Implementiert das Besuchermuster für Ausdrücke, die keinen Ergebniswert erstellen.</span><span class="sxs-lookup"><span data-stu-id="a2117-105">Implements the visitor pattern for expressions that do not produce a result value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2117-106"><paramref name="visitor" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2117-106"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType"><span data-ttu-id="a2117-107">Der Typ des Ergebnisses von erzeugten <c>Besucher</c>.</span><span class="sxs-lookup"><span data-stu-id="a2117-107">The type of the result produced by <c>visitor</c>.</span></span></typeparam>
        <param name="visitor"><span data-ttu-id="a2117-108">Eine Instanz eines typisierten <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />, der einen Ergebniswert eines bestimmten Typs erstellt.</span><span class="sxs-lookup"><span data-stu-id="a2117-108">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span></span></param>
        <summary><span data-ttu-id="a2117-109">Implementiert das Besuchermuster für Ausdrücke, die einen Ergebniswert eines bestimmten Typs erstellen.</span><span class="sxs-lookup"><span data-stu-id="a2117-109">Implements the visitor pattern for expressions that produce a result value of a specific type.</span></span></summary>
        <returns><span data-ttu-id="a2117-110">Ein Ergebniswert eines bestimmten Typs, der von <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="a2117-110">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2117-111"><paramref name="visitor" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2117-111"><paramref name="visitor" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpressionBinding Input" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbFilterExpression.Input" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Input As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpressionBinding ^ Input { System::Data::Common::CommandTrees::DbExpressionBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2117-112">Ruft die <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> ab, die das Eingabeset angibt.</span><span class="sxs-lookup"><span data-stu-id="a2117-112">Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></summary>
        <value><span data-ttu-id="a2117-113">Die <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />, die das Eingabeset angibt.</span><span class="sxs-lookup"><span data-stu-id="a2117-113">The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predicate">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Predicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Predicate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbFilterExpression.Predicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predicate As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Predicate { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2117-114">Ruft den <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> ab, der das zum Filtern des Eingabesets verwendete Prädikat angibt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="a2117-114">Gets or sets the <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the predicate used to filter the input set.</span></span></summary>
        <value><span data-ttu-id="a2117-115">Der <see cref="T:System.Data.Common.CommandTrees.DbExpression" />, der das zum Filtern des Eingabesets verwendete Prädikat angibt.</span><span class="sxs-lookup"><span data-stu-id="a2117-115">The <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> that specifies the predicate used to filter the input set.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a2117-116">Der Ausdruck ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2117-116">The expression is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2117-117">Der Ausdruck ist nicht mit der Befehlsstruktur von <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> verknüpft, oder sein Ergebnistyp ist kein <see langword="Boolean" />-Typ.</span><span class="sxs-lookup"><span data-stu-id="a2117-117">The expression is not associated with the command tree of the <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />, or its result type is not a <see langword="Boolean" /> type.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>