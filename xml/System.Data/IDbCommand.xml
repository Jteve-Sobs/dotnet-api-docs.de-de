<Type Name="IDbCommand" FullName="System.Data.IDbCommand">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a8fda34795784f1b946fc4e44fc2862ffac7c97a" />
    <Meta Name="ms.sourcegitcommit" Value="af562076243cb1c2c1d8518e9f1b489f858cc658" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/15/2018" />
    <Meta Name="ms.locfileid" Value="35652343" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbCommand : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbCommand implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbCommand&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbCommand : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="37c30-101">Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      <span class="sxs-lookup">
        <span data-stu-id="37c30-101">Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c30-102">Die <xref:System.Data.IDbCommand> Schnittstelle ermöglicht eine erbende Klasse eine Befehlsklasse implementieren eine SQL-Anweisung darstellt, die an einer Datenquelle ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="37c30-102">The <xref:System.Data.IDbCommand> interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</span></span> <span data-ttu-id="37c30-103">Weitere Informationen zu Befehlsklassen, finden Sie unter [Ausführen eines Befehls](~/docs/framework/data/adonet/executing-a-command.md).</span><span class="sxs-lookup"><span data-stu-id="37c30-103">For more information about Command classes, see [Executing a Command](~/docs/framework/data/adonet/executing-a-command.md).</span></span>  
  
 <span data-ttu-id="37c30-104">Eine Anwendung erstellt eine Instanz der nicht der <xref:System.Data.IDbCommand> -Schnittstelle direkt, sondern erstellt eine Instanz einer Klasse, die implementiert die <xref:System.Data.IDbCommand> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="37c30-104">An application does not create an instance of the <xref:System.Data.IDbCommand> interface directly, but creates an instance of a class that implements the <xref:System.Data.IDbCommand> interface.</span></span>  
  
 <span data-ttu-id="37c30-105">Klassen, in denen <xref:System.Data.IDbCommand> müssen alle seine Member zu implementieren und in der Regel definieren zusätzliche Elemente, um die anbieterspezifische Funktionalität hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="37c30-105">Classes that implement <xref:System.Data.IDbCommand> must implement all its members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="37c30-106">Z. B. die <xref:System.Data.IDbCommand> Schnittstelle definiert die <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="37c30-106">For example, the <xref:System.Data.IDbCommand> interface defines the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="37c30-107">Wiederum die <xref:System.Data.SqlClient.SqlCommand> Klasse erbt Sie diese Methode, und definiert auch die <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="37c30-107">In turn, the <xref:System.Data.SqlClient.SqlCommand> class inherits this method, and also defines the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37c30-108">Das folgende Beispiel erstellt Instanzen der abgeleiteten Klassen <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, und <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="37c30-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="37c30-109">Das Beispiel liest durch die Daten, die sie in die Konsole geschrieben.</span><span class="sxs-lookup"><span data-stu-id="37c30-109">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="37c30-110">Im Beispiel wird schließlich schließt die <xref:System.Data.SqlClient.SqlDataReader>, und klicken Sie dann die <xref:System.Data.SqlClient.SqlConnection>.</span><span class="sxs-lookup"><span data-stu-id="37c30-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="37c30-111">
        <para>Zur Förderung der Konsistenz zwischen .NET Framework-Datenanbieter, benennen Sie die erbende Klasse in der Form <paramref name="PrvClassname" /> , in denen <paramref name="Prv" /> ist die einheitliche Präfix für alle Klassen in einem bestimmten .NET Framework Data Provider-Namespace. Beispielsweise <paramref name="Sql" /> ist das Präfix des der <see cref="T:System.Data.SqlClient.SqlCommand" /> -Klasse in der <see langword="System.Data.SqlClient" /> Namespace.  Beim Erben von der <see cref="T:System.Data.IDbCommand" /> -Schnittstelle, implementieren Sie die folgenden Konstruktoren: <list type="table"><listheader><term> Element </term><description> Beschreibung </description></listheader><item><term> PrvCommand() </term><description> Initialisiert eine neue Instanz der PrvCommand-Klasse.  </description></item><item><term> PrvCommand (String Befehlstext) </term><description> Initialisiert eine neue Instanz der PrvCommand-Klasse mit dem Text der Abfrage.  </description></item><item><term> PrvCommand (String Befehlstext, PrvConnection Verbindung) </term><description> Initialisiert eine neue Instanz der PrvCommand-Klasse mit dem Text der Abfrage und einer PrvConnection.  </description></item><item><term> PrvCommand (String Befehlstext, PrvConnection Verbindung, Transaktion PrvTransaction) </term><description> Initialisiert eine neue Instanz der PrvCommand-Klasse mit dem Text der Abfrage, einer PrvConnection und der PrvTransaction.  </description></item></list></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="37c30-111">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="PrvClassname" /> where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class in the <see langword="System.Data.SqlClient" /> namespace.  When you inherit from the <see cref="T:System.Data.IDbCommand" /> interface, you should implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> PrvCommand()  </term><description> Initializes a new instance of the PrvCommand class.  </description></item><item><term> PrvCommand(string cmdText)  </term><description> Initializes a new instance of the PrvCommand class with the text of the query.  </description></item><item><term> PrvCommand(string cmdText, PrvConnection connection)  </term><description> Initializes a new instance of the PrvCommand class with the text of the query and a PrvConnection.  </description></item><item><term> PrvCommand(string cmdText, PrvConnection connection, PrvTransaction transaction)  </term><description> Initializes a new instance of the PrvCommand class with the text of the query, a PrvConnection, and the PrvTransaction.  </description></item></list></para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Data.Common.DbDataAdapter" />
    <altmember cref="T:System.Data.IDbConnection" />
    <altmember cref="T:System.Data.OleDb.OleDbCommand" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37c30-112">Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-112">Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c30-113">Wenn es nichts auf "Abbrechen", geschieht nichts.</span><span class="sxs-lookup"><span data-stu-id="37c30-113">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="37c30-114">Wenn jedoch das Abbrechen für einen aktuell ausgeführten Befehl fehlschlägt, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="37c30-114">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37c30-115">Gets or sets the text command to run against the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-115">Gets or sets the text command to run against the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37c30-116">Der auszuführende Textbefehl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-116">The text command to execute.</span>
          </span>
          <span data-ttu-id="37c30-117">Der Standardwert ist eine leere Zeichenfolge („“).</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-117">The default value is an empty string ("").</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c30-118">Wenn die <xref:System.Data.IDbCommand.CommandType%2A> -Eigenschaftensatz auf `StoredProcedure`legen die <xref:System.Data.IDbCommand.CommandText%2A> -Eigenschaft auf den Namen der gespeicherten Prozedur.</span><span class="sxs-lookup"><span data-stu-id="37c30-118">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="37c30-119">Der Benutzer möglicherweise erforderlich, um Escapezeichensyntax verwenden, wenn Sie den Namen der gespeicherten Prozedur keine Sonderzeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="37c30-119">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="37c30-120">Der Befehl wird diese gespeicherte Prozedur aufgerufen, wenn Sie eine der Execute-Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="37c30-120">The command will call this stored procedure when you call one of the Execute methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37c30-121">Das folgende Beispiel erstellt eine Instanz einer abgeleiteten Klasse <xref:System.Data.OleDb.OleDbCommand> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="37c30-121">The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
        <altmember cref="P:System.Data.IDbCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37c30-122">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-122">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37c30-123">Die Zeit in Sekunden, während der auf die Ausführung des Befehls gewartet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-123">The time (in seconds) to wait for the command to execute.</span>
          </span>
          <span data-ttu-id="37c30-124">Der Standardwert ist 30 Sekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-124">The default value is 30 seconds.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="37c30-125">Das folgende Beispiel erstellt eine Instanz einer abgeleiteten Klasse <xref:System.Data.SqlClient.SqlCommand> und legt einige ihrer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="37c30-125">The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37c30-126">The property value assigned is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-126">The property value assigned is less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.IDbCommand.CommandText" />
        <altmember cref="P:System.Data.IDbCommand.Connection" />
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37c30-127">Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-127">Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37c30-128">Einer der <see cref="T:System.Data.CommandType" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-128">One of the <see cref="T:System.Data.CommandType" /> values.</span>
          </span>
          <span data-ttu-id="37c30-129">Die Standardeinstellung ist <see langword="Text" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-129">The default is <see langword="Text" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c30-130">Beim Festlegen der <xref:System.Data.IDbCommand.CommandType%2A> Eigenschaft `StoredProcedure`, sollten Sie festlegen, die <xref:System.Data.IDbCommand.CommandText%2A> -Eigenschaft auf den Namen der gespeicherten Prozedur.</span><span class="sxs-lookup"><span data-stu-id="37c30-130">When you set the <xref:System.Data.IDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="37c30-131">Der Befehl führt diese gespeicherte Prozedur aus, wenn Sie eine der Execute-Methoden aufrufen.</span><span class="sxs-lookup"><span data-stu-id="37c30-131">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); void set(System::Data::IDbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37c30-132">Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-132">Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37c30-133">Die Verbindung mit der Datenquelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-133">The connection to the data source.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.IDbDataParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDbDataParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As IDbDataParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbDataParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37c30-134">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-134">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37c30-135">An <see langword="IDbDataParameter" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-135">An <see langword="IDbDataParameter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c30-136">Beim Erben von <xref:System.Data.IDbCommand>, ein .NET Framework-Datenanbieter implementiert eine stark typisierte Version von <xref:System.Data.IDbCommand.CreateParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="37c30-136">When inheriting from <xref:System.Data.IDbCommand>, a .NET Framework data provider implements a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37c30-137">Executes an SQL statement against the <see langword="Connection" /> object of a .NET Framework data provider, and returns the number of rows affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-137">Executes an SQL statement against the <see langword="Connection" /> object of a .NET Framework data provider, and returns the number of rows affected.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37c30-138">The number of rows affected.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-138">The number of rows affected.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c30-139">Können Sie die <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> zum Ausführen von Katalogoperationen (z. B. Abfragen die Struktur einer Datenbank oder Erstellen von Datenbankobjekten wie Tabellen) oder So ändern Sie die Daten in einer Datenbank ohne Verwendung einer <xref:System.Data.DataSet> durch Ausführen von Update-, INSERT- oder DELETE -Anweisungen.</span><span class="sxs-lookup"><span data-stu-id="37c30-139">You can use the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="37c30-140">Obwohl die <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> nicht Zeilen zurückgibt, alle Ausgabeparameter oder Rückgabewerte Werte, die Parametern zugeordnet werden mit Daten aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="37c30-140">Although the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="37c30-141">Für Update-, INSERT- und DELETE-Anweisungen ist der Rückgabewert die Anzahl der Zeilen, die von dem Befehl betroffen sind.</span><span class="sxs-lookup"><span data-stu-id="37c30-141">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="37c30-142">Für alle anderen Typen von Anweisungen wird der Wert-1 zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="37c30-142">For all other types of statements, the return value is -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37c30-143">Das folgende Beispiel erstellt eine Instanz der abgeleiteten Klasse <xref:System.Data.OleDb.OleDbCommand>, und anschließend ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="37c30-143">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it.</span></span> <span data-ttu-id="37c30-144">Um dies zu erreichen, wird die Methode übergeben, eine Zeichenfolge, die eine SQL SELECT-Anweisung und eine Zeichenfolge für die Verbindung mit der Datenquelle verwendet.</span><span class="sxs-lookup"><span data-stu-id="37c30-144">To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37c30-145">The connection does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-145">The connection does not exist.</span>
          </span>
          <span data-ttu-id="37c30-146">-or-  The connection is not open.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-146">-or-  The connection is not open.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="37c30-147">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-147">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37c30-148">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-148">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37c30-149">An <see cref="T:System.Data.IDataReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-149">An <see cref="T:System.Data.IDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior">
          <span data-ttu-id="37c30-150">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-150">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="37c30-151">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-151">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37c30-152">An <see cref="T:System.Data.IDataReader" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-152">An <see cref="T:System.Data.IDataReader" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c30-153">Der Aufrufer muss Aufrufen der <xref:System.Data.IDbConnection.Open%2A> Methode der <xref:System.Data.IDbCommand.Connection%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="37c30-153">The caller must call the <xref:System.Data.IDbConnection.Open%2A> method of the <xref:System.Data.IDbCommand.Connection%2A> property.</span></span>  
  
 <span data-ttu-id="37c30-154">Wenn die <xref:System.Data.IDbCommand.CommandType%2A> -Eigenschaftensatz auf `StoredProcedure`die <xref:System.Data.IDbCommand.CommandText%2A> Eigenschaft sollte auf den Namen der gespeicherten Prozedur festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="37c30-154">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="37c30-155">Der Befehl führt diese gespeicherte Prozedur aus, wenn Sie aufrufen <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="37c30-155">The command executes this stored procedure when you call <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="37c30-156">Verwendung <xref:System.Data.CommandBehavior.SequentialAccess> große Werte und Binärdaten abgerufen.</span><span class="sxs-lookup"><span data-stu-id="37c30-156">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="37c30-157">Andernfalls ein <xref:System.OutOfMemoryException> auftreten und die Verbindung wird geschlossen.</span><span class="sxs-lookup"><span data-stu-id="37c30-157">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="37c30-158">Während der <xref:System.Data.IDataReader> verwendet wird, zugeordneten <xref:System.Data.IDbConnection> Informationsfluss der <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="37c30-158">While the <xref:System.Data.IDataReader> is in use, the associated <xref:System.Data.IDbConnection> is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="37c30-159">In diesem Status keine anderen Vorgänge ausgeführt werden können, auf die <xref:System.Data.IDbConnection> außer schließen.</span><span class="sxs-lookup"><span data-stu-id="37c30-159">While in this state, no other operations can be performed on the <xref:System.Data.IDbConnection> other than closing it.</span></span> <span data-ttu-id="37c30-160">Dies ist der Fall, bis die <xref:System.Data.IDataReader.Close%2A> -Methode des DataReader aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="37c30-160">This is the case until the <xref:System.Data.IDataReader.Close%2A> method of the DataReader is called.</span></span> <span data-ttu-id="37c30-161">Wenn das DataReader-Objekt erstellt wird, mit <xref:System.Data.CommandBehavior> festgelegt `CloseConnection`, schließen den DataReader schließt die Verbindung automatisch.</span><span class="sxs-lookup"><span data-stu-id="37c30-161">If the DataReader is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the DataReader closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37c30-162">Executes the query, and returns the first column of the first row in the resultset returned by the query.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-162">Executes the query, and returns the first column of the first row in the resultset returned by the query.</span>
          </span>
          <span data-ttu-id="37c30-163">Extra columns or rows are ignored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-163">Extra columns or rows are ignored.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="37c30-164">The first column of the first row in the resultset.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-164">The first column of the first row in the resultset.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c30-165">Verwenden der <xref:System.Data.IDbCommand.ExecuteScalar%2A> Methode, um einen einzelnen Wert (z. B. einen Aggregatwert) aus einer Datenbank abzurufen.</span><span class="sxs-lookup"><span data-stu-id="37c30-165">Use the <xref:System.Data.IDbCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="37c30-166">Dies erfordert weniger Code als das Verwenden der <xref:System.Data.IDbCommand.ExecuteReader%2A> -Methode und die Ausführung der Vorgänge erforderlich, zu den einzelnen Wert, der mit den Daten zurückgegebene generieren eine <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="37c30-166">This requires less code than using the <xref:System.Data.IDbCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value using the data returned by an <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="37c30-167">Eine typische <xref:System.Data.IDbCommand.ExecuteScalar%2A> Abfrage wie im folgenden C#-Beispiel formatiert werden kann:</span><span class="sxs-lookup"><span data-stu-id="37c30-167">A typical <xref:System.Data.IDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "select count(*) as NumberOfRegions from region";  
Int32 count = (int) ExecuteScalar();  
```  
  
 <span data-ttu-id="37c30-168">Wenn die erste Spalte der ersten Zeile im Resultset nicht gefunden wird, wird einen null-Verweis (`Nothing` in Visual Basic) zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="37c30-168">If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned.</span></span> <span data-ttu-id="37c30-169">Wenn der Wert in der Datenbank ist `null`, gibt die Abfrage `DBNull.Value`.</span><span class="sxs-lookup"><span data-stu-id="37c30-169">If the value in the database is `null`, the query returns `DBNull.Value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37c30-170">Das folgende Beispiel erstellt eine Instanz der abgeleiteten Klasse <xref:System.Data.SqlClient.SqlCommand>, und klicken Sie dann mit <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span><span class="sxs-lookup"><span data-stu-id="37c30-170">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="37c30-171">Im Beispiel wird übergeben, eine Zeichenfolge, die eine Transact-SQL-Anweisung ist, die eine aggregierte Ergebnis zurückgibt, und eine Zeichenfolge für die Verbindung mit der Datenquelle verwendet.</span><span class="sxs-lookup"><span data-stu-id="37c30-171">The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDataParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDataParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDataParameterCollection ^ Parameters { System::Data::IDataParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37c30-172">Gets the <see cref="T:System.Data.IDataParameterCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-172">Gets the <see cref="T:System.Data.IDataParameterCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37c30-173">Die Parameter der SQL-Anweisung bzw. der gespeicherten Prozedur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-173">The parameters of the SQL statement or stored procedure.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="37c30-174">Das folgende Beispiel erstellt eine Instanz der abgeleiteten Klasse <xref:System.Data.SqlClient.SqlCommand>, und seine Parameter werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="37c30-174">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters.</span></span> <span data-ttu-id="37c30-175">Im Beispiel die Anwendung übergibt eine <xref:System.Data.SqlClient.SqlConnection>, eine Abfragezeichenfolge, die eine Transact-SQL SELECT-Anweisung, und ein Array von <xref:System.Data.SqlClient.SqlParameter> Objekte.</span><span class="sxs-lookup"><span data-stu-id="37c30-175">In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.IDataParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="37c30-176">Creates a prepared (or compiled) version of the command on the data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-176">Creates a prepared (or compiled) version of the command on the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37c30-177">Wenn die <xref:System.Data.IDbCommand.CommandType%2A> -Eigenschaftensatz auf `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> wird keine Aktion ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="37c30-177">If the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="37c30-178">Wenn <xref:System.Data.IDbCommand.CommandType%2A> festgelegt ist, um `StoredProcedure`, den Aufruf von <xref:System.Data.IDbCommand.Prepare%2A> sollte erfolgreich sein, obwohl er keine Auswirkungen führen kann.</span><span class="sxs-lookup"><span data-stu-id="37c30-178">If <xref:System.Data.IDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.IDbCommand.Prepare%2A> should succeed, although it may result in a no-op.</span></span> <span data-ttu-id="37c30-179">Der Server speichert automatisch Pläne für die Wiederverwendung nach Bedarf; Daher besteht keine Notwendigkeit für Instanzenmethoden direkt in der Clientanwendung zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="37c30-179">The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37c30-180">Das folgende Beispiel erstellt eine Instanz der abgeleiteten Klasse <xref:System.Data.OleDb.OleDbCommand>, und öffnet die Verbindung.</span><span class="sxs-lookup"><span data-stu-id="37c30-180">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection.</span></span> <span data-ttu-id="37c30-181">Anschließend wird eine gespeicherte Prozedur für die Datenquelle vorbereitet, durch Übergabe einer Zeichenfolge, die eine SQL Select-Anweisung und eine Zeichenfolge für die Verbindung mit der Datenquelle verwendet.</span><span class="sxs-lookup"><span data-stu-id="37c30-181">The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="37c30-182">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-182">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span>
          </span>
          <span data-ttu-id="37c30-183">-or-  The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-183">-or-  The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.IDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As IDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbTransaction ^ Transaction { System::Data::IDbTransaction ^ get(); void set(System::Data::IDbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37c30-184">Gets or sets the transaction within which the <see langword="Command" /> object of a .NET Framework data provider executes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-184">Gets or sets the transaction within which the <see langword="Command" /> object of a .NET Framework data provider executes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37c30-185">Die Transaktion, innerhalb derer das <see langword="Command" />-Objekt eines .NET Framework-Datenanbieters ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-185">the <see langword="Command" /> object of a .NET Framework data provider executes.</span>
          </span>
          <span data-ttu-id="37c30-186">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-186">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="37c30-187">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-187">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="37c30-188">Einer der <see cref="T:System.Data.UpdateRowSource" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-188">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
          <span data-ttu-id="37c30-189">Die Standardeinstellung ist <see langword="Both" />, sofern der Befehl nicht automatisch generiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-189">The default is <see langword="Both" /> unless the command is automatically generated.</span>
          </span>
          <span data-ttu-id="37c30-190">Dann ist die Standardeinstellung <see langword="None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-190">Then the default is <see langword="None" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="37c30-191">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="37c30-191">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>