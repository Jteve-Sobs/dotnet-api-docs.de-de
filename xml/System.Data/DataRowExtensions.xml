<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="36601976c7faf30589ff2204148eeb238ed3bba6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30399494" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert die Erweiterungsmethoden der <see cref="T:System.Data.DataRow" />-Klasse. Dies ist eine statische Klasse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataSet> API wurde erweitert, mit zwei neue Methoden für die <xref:System.Data.DataRow> -Klasse, <xref:System.Data.DataRowExtensions.Field%2A> und <xref:System.Data.DataRowExtensions.SetField%2A>. Sie können diese Form [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Ausdrücke und Methodenabfragen <xref:System.Data.DataTable> Objekte. Dies sind die empfohlenen Methoden zum Zugriff auf Spaltenwerte in [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Ausdrücke und-Methode Abfragen. Weitere Informationen finden Sie unter [generische Field- und SetField-Methoden](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der <see cref="T:System.Data.DataRow" /> bereit.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
        <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
        <param name="column">Das <see cref="T:System.Data.DataColumn" />-Eingabeobjekt, das die Spalte angibt, deren Wert zurückgegeben werden soll.</param>
        <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
        <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="column" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataSet> -Klasse stellt **null** Werte mit den <xref:System.DBNull.Value> -Instanz die <xref:System.DBNull> Klasse.  Ein [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Ausdruck, der eine Spalte mit Zugriff auf eine **null** Wert erzeugt eine <xref:System.InvalidCastException> zur Laufzeit. Darüber hinaus <xref:System.Data.DataSet> auf NULL festlegbare Typen nicht unterstützt. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode bietet Unterstützung für den Zugriff auf Spalten als auf NULL festlegbare Typen.  Wenn des zugrunde liegenden in Wert der <xref:System.Data.DataSet> ist <xref:System.DBNull.Value>, der Typ des zurückgegebene NULL-Werte zulassen müssen einen Wert von **null**.  
  
 Wenn der Wert des angegebenen <xref:System.Data.DataColumn> ist <xref:System.DBNull.Value> und `T` ist ein Verweistyp oder nullable-Typ, der Rückgabetyp **null**. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode nicht zurück <xref:System.DBNull.Value>.  
  
 Die <xref:System.Data.DataRowExtensions.Field%2A> Methode führt keine typkonvertierungen. Wenn typkonvertierung erforderlich ist, sollten Sie zuerst den Spaltenwert rufen Sie mithilfe der <xref:System.Data.DataRowExtensions.Field%2A> Methode. Der Wert der Spalte sollte dann in einen anderen Typ konvertiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="column" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
        <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein **NULL**-Wert zugewiesen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
        <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
        <param name="columnIndex">Der Spaltenindex.</param>
        <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
        <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="columnIndex" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataSet> -Klasse stellt **null** Werte mit den <xref:System.DBNull.Value> -Instanz die <xref:System.DBNull> Klasse.  Ein [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Ausdruck, der eine Spalte mit Zugriff auf eine **null** Wert erzeugt eine <xref:System.InvalidCastException> zur Laufzeit. Darüber hinaus <xref:System.Data.DataSet> auf NULL festlegbare Typen nicht unterstützt. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode bietet Unterstützung für den Zugriff auf Spalten als auf NULL festlegbare Typen.  Wenn des zugrunde liegenden in Wert der <xref:System.Data.DataSet> ist <xref:System.DBNull.Value>, der Typ des zurückgegebene NULL-Werte zulassen müssen einen Wert von **null**.  
  
 Wenn der Wert des angegebenen <xref:System.Data.DataColumn> ist **null** und `T` ein Referenztyp oder Nullable-Typ ist, wird der Rückgabetyp **null**.  Die <xref:System.Data.DataRowExtensions.Field%2A> Methode nicht zurück <xref:System.DBNull.Value>.  
  
 Die <xref:System.Data.DataRowExtensions.Field%2A> Methode führt keine typkonvertierungen. Wenn typkonvertierung erforderlich ist, sollten Sie zuerst den Spaltenwert rufen Sie mithilfe der <xref:System.Data.DataRowExtensions.Field%2A> Methode. Der Wert der Spalte sollte dann in einen anderen Typ konvertiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="ordinal" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
        <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein **NULL**-Wert zugewiesen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
        <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
        <param name="columnName">Der Name der Spalte, deren Wert zurückgegeben werden soll.</param>
        <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
        <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="columnName" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataSet> -Klasse stellt **null** Werte mit den <xref:System.DBNull.Value> -Instanz die <xref:System.DBNull> Klasse. Ein [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Ausdruck, der eine Spalte mit Zugriff auf eine **null** Wert erzeugt eine <xref:System.InvalidCastException> zur Laufzeit. Darüber hinaus <xref:System.Data.DataSet> auf NULL festlegbare Typen nicht unterstützt. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode bietet Unterstützung für den Zugriff auf Spalten als auf NULL festlegbare Typen. Wenn des zugrunde liegenden in Wert der <xref:System.Data.DataSet> ist <xref:System.DBNull.Value>, der Typ des zurückgegebene NULL-Werte zulassen müssen einen Wert von **null**.  
  
 Wenn der Wert des angegebenen <xref:System.Data.DataColumn> ist **null** und `T` ist ein Verweistyp oder nullable-Typ, der Rückgabetyp **null**. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode nicht zurück <xref:System.DBNull.Value>.  
  
 Die <xref:System.Data.DataRowExtensions.Field%2A> Methode führt keine typkonvertierungen. Wenn typkonvertierung erforderlich ist, sollten Sie zuerst den Spaltenwert rufen Sie mithilfe der <xref:System.Data.DataRowExtensions.Field%2A> Methode. Der Wert der Spalte sollte dann in einen anderen Typ konvertiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="columnName" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
        <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein <see langword="null" />-Wert zugewiesen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
        <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
        <param name="column">Das <see cref="T:System.Data.DataColumn" />-Eingabeobjekt, das die Spalte angibt, deren Wert zurückgegeben werden soll.</param>
        <param name="version">Eine <see cref="T:System.Data.DataRowVersion" />-Enumeration, die die Version des zurückzugebenden Spaltenwerts angibt, z. B. die Version <see langword="Current" /> oder <see langword="Original" />.</param>
        <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
        <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="column" /> und <paramref name="version" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataSet> -Klasse stellt **null** Werte mit den <xref:System.DBNull.Value> -Instanz die <xref:System.DBNull> Klasse.  Ein [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Ausdruck, der eine Spalte mit Zugriff auf eine **null** Wert erzeugt eine <xref:System.InvalidCastException> zur Laufzeit. Darüber hinaus <xref:System.Data.DataSet> auf NULL festlegbare Typen nicht unterstützt. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode bietet Unterstützung für den Zugriff auf Spalten als auf NULL festlegbare Typen.  Wenn des zugrunde liegenden in Wert der <xref:System.Data.DataSet> ist <xref:System.DBNull.Value>, der Typ des zurückgegebene NULL-Werte zulassen müssen einen Wert von **null**.  
  
 Wenn der Wert des angegebenen <xref:System.Data.DataColumn> ist null und `T` ein Referenztyp oder Nullable-Typ ist, wird der Rückgabetyp **null**. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode nicht zurück <xref:System.DBNull.Value>.  
  
 Die <xref:System.Data.DataRowExtensions.Field%2A> Methode führt keine typkonvertierungen. Wenn typkonvertierung erforderlich ist, sollten Sie zuerst den Spaltenwert rufen Sie mithilfe der <xref:System.Data.DataRowExtensions.Field%2A> Methode. Der Wert der Spalte sollte dann in einen anderen Typ konvertiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="column" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
        <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein **NULL**-Wert zugewiesen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
        <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
        <param name="columnIndex">Die nullbasierte Ordnungszahl der Spalte, deren Wert zurückgegeben werden soll.</param>
        <param name="version">Eine <see cref="T:System.Data.DataRowVersion" />-Enumeration, die die Version des zurückzugebenden Spaltenwerts angibt, z. B. die Version <see langword="Current" /> oder <see langword="Original" />.</param>
        <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
        <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="ordinal" /> und <paramref name="version" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataSet> -Klasse stellt **null** Werte mit den <xref:System.DBNull.Value> -Instanz die <xref:System.DBNull> Klasse.  Ein [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Ausdruck, der eine Spalte mit Zugriff auf eine **null** Wert erzeugt eine <xref:System.InvalidCastException> zur Laufzeit. Darüber hinaus <xref:System.Data.DataSet> auf NULL festlegbare Typen nicht unterstützt. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode bietet Unterstützung für den Zugriff auf Spalten als auf NULL festlegbare Typen.  Wenn des zugrunde liegenden in Wert der <xref:System.Data.DataSet> ist <xref:System.DBNull.Value>, der Typ des zurückgegebene NULL-Werte zulassen müssen einen Wert von **null**.  
  
 Wenn der Wert des angegebenen <xref:System.Data.DataColumn> ist null und `T` ein Referenztyp oder Nullable-Typ ist, wird der Rückgabetyp **null**. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode nicht zurück <xref:System.DBNull.Value>.  
  
 Die <xref:System.Data.DataRowExtensions.Field%2A> Methode führt keine typkonvertierungen. Wenn typkonvertierung erforderlich ist, sollten Sie zuerst den Spaltenwert rufen Sie mithilfe der <xref:System.Data.DataRowExtensions.Field%2A> Methode. Der Wert der Spalte sollte dann in einen anderen Typ konvertiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="ordinal" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
        <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein **NULL**-Wert zugewiesen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein generischer Parameter, der den Rückgabetyp der Spalte angibt.</typeparam>
        <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
        <param name="columnName">Der Name der Spalte, deren Wert zurückgegeben werden soll.</param>
        <param name="version">Eine <see cref="T:System.Data.DataRowVersion" />-Enumeration, die die Version des zurückzugebenden Spaltenwerts angibt, z. B. die Version <see langword="Current" /> oder <see langword="Original" />.</param>
        <summary>Stellt stark typisierten Zugriff auf die einzelnen Spaltenwerte in der angegebenen Zeile bereit. Die <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
        <returns>Der Wert (vom Typ <paramref name="T" />) der von <paramref name="columnName" /> und <paramref name="version" /> angegebenen <see cref="T:System.Data.DataColumn" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataSet> -Klasse stellt **null** Werte mit den <xref:System.DBNull.Value> -Instanz die <xref:System.DBNull> Klasse.  Ein [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Ausdruck, der eine Spalte mit Zugriff auf eine **null** Wert erzeugt eine <xref:System.InvalidCastException> zur Laufzeit. Darüber hinaus <xref:System.Data.DataSet> auf NULL festlegbare Typen nicht unterstützt. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode bietet Unterstützung für den Zugriff auf Spalten als auf NULL festlegbare Typen.  Wenn des zugrunde liegenden in Wert der <xref:System.Data.DataSet> ist <xref:System.DBNull.Value>, der Typ des zurückgegebene NULL-Werte zulassen müssen einen Wert von **null**.  
  
 Wenn der Wert des angegebenen <xref:System.Data.DataColumn> ist null und `T` ein Referenztyp oder Nullable-Typ ist, wird der Rückgabetyp **null**. Die <xref:System.Data.DataRowExtensions.Field%2A> Methode nicht zurück <xref:System.DBNull.Value>.  
  
 Die <xref:System.Data.DataRowExtensions.Field%2A> Methode führt keine typkonvertierungen. Wenn typkonvertierung erforderlich ist, sollten Sie zuerst den Spaltenwert rufen Sie mithilfe der <xref:System.Data.DataRowExtensions.Field%2A> Methode. Der Wert der Spalte sollte dann in einen anderen Typ konvertiert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Die von <paramref name="columnName" /> angegebene Spalte ist nicht in der <see cref="T:System.Data.DataTable" /> enthalten, zu der die <see cref="T:System.Data.DataRow" /> gehört.</exception>
        <exception cref="T:System.NullReferenceException">Einem Typ, der keine NULL-Werte zulässt, wurde ein **NULL**-Wert zugewiesen.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein generischer Parameter, der den Werttyp der Spalte angibt.</typeparam>
        <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
        <param name="column">Die <see cref="T:System.Data.DataColumn" /> für die Eingabe gibt an, welcher Zeilenwert abgerufen werden soll.</param>
        <param name="value">Der neue Zeilenwert für die angegebene Spalte des Typs <c>T</c>.</param>
        <summary>Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest. Die <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `value` ist **null**, <xref:System.Data.DataRowExtensions.SetField%2A> -Methode konvertiert die **null** Wert <xref:System.DBNull.Value> in der zugrunde liegenden <xref:System.Data.DataColumn>.  
  
 Die <xref:System.Data.DataRowExtensions.SetField%2A> Methode führt keine typkonvertierungen. Dies bedeutet jedoch nicht, dass keinerlei Typkonvertierung auftritt. Die <xref:System.Data.DataRowExtensions.SetField%2A> Methode macht die [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] Verhalten der <xref:System.Data.DataRow> Klasse. Eine Konvertierung vom Typ ausgeführt werden konnte die <xref:System.Data.DataRow> -Objekt und der konvertierte Wert würde dann mit der Zeile gespeichert werden.  
  
 Ausnahmen können nach oben weitergegeben werden, über die <xref:System.Data.DataRowExtensions.SetField%2A> Methode aus der zugrunde liegenden <xref:System.Data.DataRow> Objekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch <paramref name="column" /> angegebene Spalte kann nicht gefunden werden.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="column" /> ist **NULL**.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn versucht wird, einen Wert in einer gelöschten Zeile festzulegen.</exception>
        <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein generischer Parameter, der den Werttyp der Spalte angibt.</typeparam>
        <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
        <param name="columnIndex">Die nullbasierte Ordnungszahl der Spalte, deren Wert festgelegt werden soll.</param>
        <param name="value">Der neue Zeilenwert für die angegebene Spalte des Typs <c>T</c>.</param>
        <summary>Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest, für die die Methode aufgerufen wird. Die <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `value` ist **null**, <xref:System.Data.DataRowExtensions.SetField%2A> -Methode konvertiert die **null** Wert <xref:System.DBNull.Value> in der zugrunde liegenden <xref:System.Data.DataColumn>.  
  
 Die <xref:System.Data.DataRowExtensions.SetField%2A> Methode führt keine typkonvertierungen. Dies bedeutet jedoch nicht, dass keinerlei Typkonvertierung auftritt. Die <xref:System.Data.DataRowExtensions.SetField%2A> Methode macht die [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] Verhalten der <xref:System.Data.DataRow> Klasse. Eine Konvertierung vom Typ ausgeführt werden konnte die <xref:System.Data.DataRow> -Objekt und der konvertierte Wert würde dann mit der Zeile gespeichert werden.  
  
 Ausnahmen können nach oben weitergegeben werden, über die <xref:System.Data.DataRowExtensions.SetField%2A> Methode aus der zugrunde liegenden <xref:System.Data.DataRow> Objekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn versucht wird, einen Wert in einer gelöschten Zeile festzulegen.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="ordinal" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
        <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Ein generischer Parameter, der den Werttyp der Spalte angibt.</typeparam>
        <param name="row">Die <see cref="T:System.Data.DataRow" /> für die Eingabe, die als <see langword="this" />-Instanz für die Erweiterungsmethode fungiert.</param>
        <param name="columnName">Der Name der Spalte, deren Wert festgelegt werden soll.</param>
        <param name="value">Der neue Zeilenwert für die angegebene Spalte des Typs <c>T</c>.</param>
        <summary>Legt einen neuen Wert für die angegebene Spalte in der <see cref="T:System.Data.DataRow" /> fest. Die <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />-Methode unterstützt auch Typen, die NULL-Werte zulassen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn `value` ist **null**, <xref:System.Data.DataRowExtensions.SetField%2A> -Methode konvertiert die **null** Wert <xref:System.DBNull.Value> in der zugrunde liegenden <xref:System.Data.DataColumn>.  
  
 Die <xref:System.Data.DataRowExtensions.SetField%2A> Methode führt keine typkonvertierungen. Dies bedeutet jedoch nicht, dass keinerlei Typkonvertierung auftritt. Die <xref:System.Data.DataRowExtensions.SetField%2A> Methode macht die [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] Verhalten der <xref:System.Data.DataRow> Klasse. Eine Konvertierung vom Typ ausgeführt werden konnte die <xref:System.Data.DataRow> -Objekt und der konvertierte Wert würde dann mit der Zeile gespeichert werden.  
  
 Ausnahmen können nach oben weitergegeben werden, über die <xref:System.Data.DataRowExtensions.SetField%2A> Methode aus der zugrunde liegenden <xref:System.Data.DataRow> Objekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn versucht wird, einen Wert in einer gelöschten Zeile festzulegen.</exception>
        <exception cref="T:System.InvalidCastException">Der Werttyp der zugrunde liegenden Spalte konnte nicht in den vom generischen Parameter (<paramref name="T" />) angegebenen Typ umgewandelt werden.</exception>
      </Docs>
    </Member>
  </Members>
</Type>