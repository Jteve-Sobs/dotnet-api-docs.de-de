<Type Name="XmlReadMode" FullName="System.Data.XmlReadMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b85181c5872c7b6bbe232bca9d451a18ebbde3b3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37667052" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum XmlReadMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlReadMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.XmlReadMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum XmlReadMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class XmlReadMode" />
  <TypeSignature Language="F#" Value="type XmlReadMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="94fb0-101">Gibt an, wie XML-Daten und ein relationales Schema in ein <see cref="T:System.Data.DataSet" /> eingelesen werden sollen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94fb0-101">Specifies how to read XML data and a relational schema into a <see cref="T:System.Data.DataSet" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94fb0-102">Die Member dieser Enumeration verwendet wird, beim Festlegen der `ReadMode` Parameter, der die <xref:System.Data.DataSet.ReadXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="94fb0-102">Use the members of this enumeration when setting the `ReadMode` parameter of the <xref:System.Data.DataSet.ReadXml%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="94fb0-103">`Auto` Modus ist möglicherweise langsamer als die Einstellung <xref:System.Data.XmlReadMode> auf eine bestimmte Option.</span><span class="sxs-lookup"><span data-stu-id="94fb0-103">`Auto` mode may be slower than setting <xref:System.Data.XmlReadMode> to an explicit option.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Auto">
      <MemberSignature Language="C#" Value="Auto" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Auto = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Auto" />
      <MemberSignature Language="VB.NET" Value="Auto" />
      <MemberSignature Language="C++ CLI" Value="Auto" />
      <MemberSignature Language="F#" Value="Auto = 0" Usage="System.Data.XmlReadMode.Auto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="94fb0-104">Standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-104">Default.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94fb0-105">Führt die geeignetste der folgenden Aktionen aus:</span><span class="sxs-lookup"><span data-stu-id="94fb0-105">Performs the most appropriate of these actions:</span></span>  
  
 <span data-ttu-id="94fb0-106">Wenn die Daten eines DiffGram-Objekts ist, legt `XmlReadMode` zu `DiffGram`.</span><span class="sxs-lookup"><span data-stu-id="94fb0-106">If the data is a DiffGram, sets `XmlReadMode` to `DiffGram`.</span></span>  
  
 <span data-ttu-id="94fb0-107">- oder - </span><span class="sxs-lookup"><span data-stu-id="94fb0-107">-or-</span></span>  
  
 <span data-ttu-id="94fb0-108">Legt fest, wenn das Dataset bereits ein Schema hat oder das Dokument ein Inlineschema enthält, `XmlReadMode` zu `ReadSchema`.</span><span class="sxs-lookup"><span data-stu-id="94fb0-108">If the dataset already has a schema, or the document contains an in-line schema, sets `XmlReadMode` to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="94fb0-109">- oder - </span><span class="sxs-lookup"><span data-stu-id="94fb0-109">-or-</span></span>  
  
 <span data-ttu-id="94fb0-110">Legt fest, wenn das Dataset verfügt noch nicht über ein Schema aus, und das Dokument enthält kein Inline Schema, `XmlReadMode` zu `InferSchema`.</span><span class="sxs-lookup"><span data-stu-id="94fb0-110">If the dataset does not already have a schema and the document does not contain an in-line schema, sets `XmlReadMode` to `InferSchema`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiffGram">
      <MemberSignature Language="C#" Value="DiffGram" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode DiffGram = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.DiffGram" />
      <MemberSignature Language="VB.NET" Value="DiffGram" />
      <MemberSignature Language="C++ CLI" Value="DiffGram" />
      <MemberSignature Language="F#" Value="DiffGram = 4" Usage="System.Data.XmlReadMode.DiffGram" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="94fb0-111">Liest ein DiffGram, wobei die Änderungen aus dem DiffGram auf das <see cref="T:System.Data.DataSet" />-Objekt angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-111">Reads a DiffGram, applying changes from the DiffGram to the <see cref="T:System.Data.DataSet" />.</span>
          </span>
          <span data-ttu-id="94fb0-112">Die Semantik ist identisch mit der einer <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />-Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-112">The semantics are identical to those of a <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation.</span>
          </span>
          <span data-ttu-id="94fb0-113">Wie bei der <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />-Operation werden die <see cref="P:System.Data.DataRow.RowState" />-Werte beibehalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-113">As with the <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> operation, <see cref="P:System.Data.DataRow.RowState" /> values are preserved.</span>
          </span>
          <span data-ttu-id="94fb0-114">Die Eingabe in <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> mit DiffGrams sollte nur unter Verwendung der Ausgabe von <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> als DiffGram abgerufen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-114">Input to <see cref="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)" /> with DiffGrams should only be obtained using the output from <see cref="M:System.Data.DataSet.WriteXml(System.IO.Stream)" /> as a DiffGram.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94fb0-115">Das Ziel <xref:System.Data.DataSet> müssen das gleiche Schema wie die <xref:System.Data.DataSet> auf dem <xref:System.Data.DataSet.WriteXml%2A> als DiffGram aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="94fb0-115">The target <xref:System.Data.DataSet> must have the same schema as the <xref:System.Data.DataSet> on which <xref:System.Data.DataSet.WriteXml%2A> as DiffGram is called.</span></span> <span data-ttu-id="94fb0-116">Der DiffGram-Merge-Vorgang andernfalls ein Fehler auftritt, und eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="94fb0-116">Otherwise the DiffGram merge operation fails, and an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fragment">
      <MemberSignature Language="C#" Value="Fragment" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode Fragment = int32(5)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.Fragment" />
      <MemberSignature Language="VB.NET" Value="Fragment" />
      <MemberSignature Language="C++ CLI" Value="Fragment" />
      <MemberSignature Language="F#" Value="Fragment = 5" Usage="System.Data.XmlReadMode.Fragment" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="94fb0-117">Liest XML-Fragmente, z. B. solche, die durch Ausführen von FOR XML-Abfragen generiert werden, für eine Instanz von SQL Server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-117">Reads XML fragments, such as those generated by executing FOR XML queries, against an instance of SQL Server.</span>
          </span>
          <span data-ttu-id="94fb0-118">Wenn <see cref="T:System.Data.XmlReadMode" /> auf <see langword="Fragment" /> festgelegt ist, wird der Standardnamespace als Inlineschema gelesen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-118">When <see cref="T:System.Data.XmlReadMode" /> is set to <see langword="Fragment" />, the default namespace is read as the inline schema.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreSchema">
      <MemberSignature Language="C#" Value="IgnoreSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode IgnoreSchema = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.IgnoreSchema" />
      <MemberSignature Language="VB.NET" Value="IgnoreSchema" />
      <MemberSignature Language="C++ CLI" Value="IgnoreSchema" />
      <MemberSignature Language="F#" Value="IgnoreSchema = 2" Usage="System.Data.XmlReadMode.IgnoreSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="94fb0-119">Ignoriert alle Inlineschemata und liest Daten in das vorhandene <see cref="T:System.Data.DataSet" />-Schema ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-119">Ignores any inline schema and reads data into the existing <see cref="T:System.Data.DataSet" /> schema.</span>
          </span>
          <span data-ttu-id="94fb0-120">Wenn Daten nicht dem vorhandenen Schema entsprechen, werden sie verworfen (auch die Daten aus anderen Namespaces, die für das <see cref="T:System.Data.DataSet" /> definiert wurden).</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-120">If any data does not match the existing schema, it is discarded (including data from differing namespaces defined for the <see cref="T:System.Data.DataSet" />).</span>
          </span>
          <span data-ttu-id="94fb0-121">Wenn es sich bei den Daten um ein DiffGram handelt, hat <see langword="IgnoreSchema" /> dieselbe Funktion wie <see langword="DiffGram" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-121">If the data is a DiffGram, <see langword="IgnoreSchema" /> has the same functionality as <see langword="DiffGram" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="InferSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferSchema = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferSchema" />
      <MemberSignature Language="VB.NET" Value="InferSchema" />
      <MemberSignature Language="C++ CLI" Value="InferSchema" />
      <MemberSignature Language="F#" Value="InferSchema = 3" Usage="System.Data.XmlReadMode.InferSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="94fb0-122">Ignoriert alle Inlineschemas, leitet das Schema von den Daten her und lädt die Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-122">Ignores any inline schema, infers schema from the data and loads the data.</span>
          </span>
          <span data-ttu-id="94fb0-123">Wenn das <see cref="T:System.Data.DataSet" /> bereits ein Schema enthält, wird das aktuelle Schema durch Hinzufügen neuer Tabellen oder neuer Spalten zu vorhandenen Tabellen erweitert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-123">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended by adding new tables or adding columns to existing tables.</span>
          </span>
          <span data-ttu-id="94fb0-124">Eine Ausnahme wird ausgelöst, wenn die hergeleitete Tabelle bereits mit einem anderen Namespace vorhanden ist, oder wenn bei hergeleiteten Spalten ein Konflikt mit vorhandenen Spalten auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-124">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="InferTypedSchema">
      <MemberSignature Language="C#" Value="InferTypedSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode InferTypedSchema = int32(6)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.InferTypedSchema" />
      <MemberSignature Language="VB.NET" Value="InferTypedSchema" />
      <MemberSignature Language="C++ CLI" Value="InferTypedSchema" />
      <MemberSignature Language="F#" Value="InferTypedSchema = 6" Usage="System.Data.XmlReadMode.InferTypedSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="94fb0-125">Ignoriert alle Inlineschemas, leitet ein Schema mit starker Typisierung von den Daten her und lädt die Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-125">Ignores any inline schema, infers a strongly typed schema from the data, and loads the data.</span>
          </span>
          <span data-ttu-id="94fb0-126">Wenn der Typ nicht von den Daten abgeleitet werden kann, wird die Daten als Zeichenfolgendaten interpretiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-126">If the type cannot be inferred from the data, it is interpreted as string data.</span>
          </span>
          <span data-ttu-id="94fb0-127">Wenn das <see cref="T:System.Data.DataSet" /> bereits ein Schema enthält, wird das aktuelle Schema entweder durch Hinzufügen neuer Tabellen oder durch Hinzufügen neuer Spalten zu vorhandenen Tabellen erweitert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-127">If the <see cref="T:System.Data.DataSet" /> already contains a schema, the current schema is extended, either by adding new tables or by adding columns to existing tables.</span>
          </span>
          <span data-ttu-id="94fb0-128">Eine Ausnahme wird ausgelöst, wenn die hergeleitete Tabelle bereits mit einem anderen Namespace vorhanden ist, oder wenn bei hergeleiteten Spalten ein Konflikt mit vorhandenen Spalten auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-128">An exception is thrown if the inferred table already exists but with a different namespace, or if any of the inferred columns conflict with existing columns.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadSchema">
      <MemberSignature Language="C#" Value="ReadSchema" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.XmlReadMode ReadSchema = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.XmlReadMode.ReadSchema" />
      <MemberSignature Language="VB.NET" Value="ReadSchema" />
      <MemberSignature Language="C++ CLI" Value="ReadSchema" />
      <MemberSignature Language="F#" Value="ReadSchema = 1" Usage="System.Data.XmlReadMode.ReadSchema" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="94fb0-129">Liest jedes Inlineschema und lädt die Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-129">Reads any inline schema and loads the data.</span>
          </span>
          <span data-ttu-id="94fb0-130">Wenn das <see cref="T:System.Data.DataSet" /> bereits ein Schema enthält, können diesem evtl. neue Tabellen hinzugefügt werden. Es wird jedoch eine Ausnahme ausgelöst, wenn Tabellen im Inlineschema bereits im <see cref="T:System.Data.DataSet" /> vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94fb0-130">If the <see cref="T:System.Data.DataSet" /> already contains schema, new tables may be added to the schema, but an exception is thrown if any tables in the inline schema already exist in the <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>