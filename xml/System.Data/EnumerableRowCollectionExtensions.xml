<Type Name="EnumerableRowCollectionExtensions" FullName="System.Data.EnumerableRowCollectionExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0603447279f45f0d548df9c2d8d69a352deaedd4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37668950" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EnumerableRowCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EnumerableRowCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.EnumerableRowCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module EnumerableRowCollectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnumerableRowCollectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type EnumerableRowCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="51a8d-101">Enthält die Erweiterungsmethoden für die Datenzeilenauflistungsklassen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51a8d-101">Contains the extension methods for the data row collection classes.</span>
      </span>
      <span data-ttu-id="51a8d-102">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="51a8d-102">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-103">Die <xref:System.Data.EnumerableRowCollectionExtensions> Klasse enthält statische Erweiterungsmethoden, die definieren, die <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> -Methode und Standardabfragevorgänge für die <xref:System.Data.EnumerableRowCollection%601> und <xref:System.Data.OrderedEnumerableRowCollection%601> Klassen.</span><span class="sxs-lookup"><span data-stu-id="51a8d-103">The <xref:System.Data.EnumerableRowCollectionExtensions> class contains static extension methods that define the <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A> method and standard query operations for the <xref:System.Data.EnumerableRowCollection%601> and <xref:System.Data.OrderedEnumerableRowCollection%601> classes.</span></span>  
  
 <span data-ttu-id="51a8d-104">Diese Klasse kann nicht vererbt werden und kann nicht instanziiert werden.</span><span class="sxs-lookup"><span data-stu-id="51a8d-104">This class cannot be inherited and cannot be instantiated.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EnumerableRowCollection`1" />
    <altmember cref="T:System.Data.OrderedEnumerableRowCollection`1" />
  </Docs>
  <Members>
    <Member MemberName="Cast&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TResult&gt; Cast&lt;TResult&gt; (this System.Data.EnumerableRowCollection source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TResult&gt; Cast&lt;TResult&gt;(class System.Data.EnumerableRowCollection source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Cast``1(System.Data.EnumerableRowCollection)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Cast(Of TResult) (source As EnumerableRowCollection) As EnumerableRowCollection(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TResult&gt; ^ Cast(System::Data::EnumerableRowCollection ^ source);" />
      <MemberSignature Language="F#" Value="static member Cast : System.Data.EnumerableRowCollection -&gt; System.Data.EnumerableRowCollection&lt;'Result&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Cast source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">
          <span data-ttu-id="51a8d-105">Der Typ, in den die Elemente der Quelle konvertiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-105">The type to convert the elements of source to.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-106">Das <see cref="T:System.Data.EnumerableRowCollection" />, das die zu konvertierenden Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-106">The <see cref="T:System.Data.EnumerableRowCollection" /> that contains the elements to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-107">Konvertiert die Elemente einer <see cref="T:System.Data.EnumerableRowCollection" /> in den angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-107">Converts the elements of an <see cref="T:System.Data.EnumerableRowCollection" /> to the specified type.</span>
          </span>
          <span data-ttu-id="51a8d-108">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-108">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-109">Eine <see cref="T:System.Data.EnumerableRowCollection" />, die jedes in den angegebenen Typ konvertierte Element der Quellsequenz enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-109">An <see cref="T:System.Data.EnumerableRowCollection" /> that contains each element of the source sequence converted to the specified type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-110">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-110">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-111">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-111">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-112">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-112">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="51a8d-113">
            <paramref name="source" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-113">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="51a8d-114">Ein Element in der Sequenz kann nicht in den Typ <paramref name="TResult" /> umgewandelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-114">An element in the sequence cannot be cast to type <paramref name="TResult" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.EnumerableRowCollection" />
        <altmember cref="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51a8d-115">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-115">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="51a8d-116">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-116">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-117">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-117">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="51a8d-118">Der Typ des Schlüssels vom <c>KeySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-118">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-119">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-119">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="51a8d-120">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-120">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-121">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-121">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="51a8d-122">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-122">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-123">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-123">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-124">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-124">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-125">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-125">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-126">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-126">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderBy&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderBy&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderBy``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderBy(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderBy(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderBy : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-127">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-127">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="51a8d-128">Der Typ des Schlüssels vom <c>KeySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-128">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-129">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-129">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="51a8d-130">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-130">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="51a8d-131">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-131">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-132">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-132">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="51a8d-133">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-133">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-134">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-134">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-135">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-135">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-136">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-136">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-137">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-137">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenBy" />
        <altmember cref="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51a8d-138">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-138">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="51a8d-139">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-139">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-140">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-140">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="51a8d-141">Der Typ des Schlüssels vom <c>KeySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-141">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-142">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-142">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="51a8d-143">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-143">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-144">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-144">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="51a8d-145">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-145">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-146">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-146">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-147">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-147">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-148">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-148">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-149">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-149">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="OrderByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; OrderByDescending&lt;TRow,TKey&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; OrderByDescending&lt;TRow, TKey&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.OrderByDescending``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function OrderByDescending(Of TRow, TKey) (source As EnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ OrderByDescending(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member OrderByDescending : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.OrderByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-150">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-150">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="51a8d-151">Der Typ des Schlüssels vom <c>KeySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-151">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-152">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-152">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="51a8d-153">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-153">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="51a8d-154">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-154">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-155">Sortiert die Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-155">Sorts the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="51a8d-156">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-156">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-157">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-157">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-158">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-158">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-159">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-159">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-160">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-160">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.ThenByDescending" />
        <altmember cref="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Select&lt;TRow,S&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;S&gt; Select&lt;TRow,S&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,S&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!S&gt; Select&lt;TRow, S&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!S&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of TRow, S) (source As EnumerableRowCollection(Of TRow), selector As Func(Of TRow, S)) As EnumerableRowCollection(Of S)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename S&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;S&gt; ^ Select(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, S&gt; ^ selector);" />
      <MemberSignature Language="F#" Value="static member Select : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'S&gt; -&gt; System.Data.EnumerableRowCollection&lt;'S&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Select (source, selector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;S&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="S" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;TRow,S&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-161">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-161">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="S">
          <span data-ttu-id="51a8d-162">Der Typ, der <c>TRow</c> wird in transformiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-162">The type that <c>TRow</c> will be transformed into.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-163">Eine <see cref="T:System.Data.EnumerableRowCollection`1" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, für die eine Transformationsfunktion aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-163">An <see cref="T:System.Data.EnumerableRowCollection`1" /> containing the <see cref="T:System.Data.DataRow" /> elements to invoke a transform function upon.</span>
          </span>
        </param>
        <param name="selector">
          <span data-ttu-id="51a8d-164">Eine Transformationsfunktion, die auf jedes Element angewendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-164">A transform function to apply to each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-165">Projiziert jedes Element einer <see cref="T:System.Data.EnumerableRowCollection`1" /> in ein neues Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-165">Projects each element of an <see cref="T:System.Data.EnumerableRowCollection`1" /> into a new form.</span>
          </span>
          <span data-ttu-id="51a8d-166">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-166">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-167">Ein <see cref="T:System.Data.EnumerableRowCollection`1" />, dessen Elemente das Ergebnis des Aufrufs einer Transformationsfunktion für jedes Element von <paramref name="source" /> sind</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-167">An <see cref="T:System.Data.EnumerableRowCollection`1" /> whose elements are the result of invoking the transform function on each element of <paramref name="source" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-168">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-168">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-169">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-169">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-170">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-170">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 <span data-ttu-id="51a8d-171">Diese Projektionsmethode erfordert die Transform-Funktion, `selector`, um einen Wert für jeden Wert in der Quellsequenz zu erzeugen `source`.</span><span class="sxs-lookup"><span data-stu-id="51a8d-171">This projection method requires the transform function, `selector`, to produce one value for each value in the source sequence, `source`.</span></span> <span data-ttu-id="51a8d-172">Wenn `selector` gibt einen Wert an, die selbst eine Auflistung ist, es ist Aufgabe der Consumer die Untersequenzen manuell zu durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="51a8d-172">If `selector` returns a value that is itself a collection, it is up to the consumer to traverse the subsequences manually.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenBy&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51a8d-173">Führt eine sekundäre Sortierung der Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-173">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order.</span>
          </span>
          <span data-ttu-id="51a8d-174">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-174">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-175">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-175">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="51a8d-176">Der Typ des Schlüssels vom <c>KeySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-176">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-177">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-177">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="51a8d-178">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-178">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-179">Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel durch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-179">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key.</span>
          </span>
          <span data-ttu-id="51a8d-180">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-180">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-181">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-181">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-182">Die Verwendung von einem <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> Vorgang erfordert, dass ein vorhandener primärer Sortiervorgang mit <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="51a8d-182">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="51a8d-183">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-183">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-184">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-184">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-185">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-185">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenBy&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenBy&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenBy&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenBy``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenBy(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenBy(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenBy : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenBy (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-186">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-186">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="51a8d-187">Der Typ des Schlüssels vom <c>KeySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-187">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-188">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-188">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="51a8d-189">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-189">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="51a8d-190">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-190">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-191">Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in aufsteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich durch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-191">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in ascending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="51a8d-192">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-192">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-193">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-193">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-194">Die Verwendung von einem <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> Vorgang erfordert, dass ein vorhandener primärer Sortiervorgang mit <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="51a8d-194">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="51a8d-195">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-195">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-196">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-196">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-197">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-197">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderBy" />
        <altmember cref="M:System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="51a8d-198">Führt eine sekundäre Sortierung der Zeilen einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-198">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order.</span>
          </span>
          <span data-ttu-id="51a8d-199">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-199">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-200">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-200">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="51a8d-201">Der Typ des Schlüssels vom <c>KeySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-201">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-202">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-202">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="51a8d-203">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-203">A function to extract a key from an element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-204">Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel durch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-204">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key.</span>
          </span>
          <span data-ttu-id="51a8d-205">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-205">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-206">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel sortiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-206">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-207">Die Verwendung von einem <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> Vorgang erfordert, dass ein vorhandener primärer Sortiervorgang mit <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="51a8d-207">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="51a8d-208">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-208">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-209">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-209">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-210">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-210">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})" />
      </Docs>
    </Member>
    <Member MemberName="ThenByDescending&lt;TRow,TKey&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ThenByDescending&lt;TRow,TKey&gt; (this System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,TKey&gt; keySelector, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; ThenByDescending&lt;TRow, TKey&gt;(class System.Data.OrderedEnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, !!TKey&gt; keySelector, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.ThenByDescending``2(System.Data.OrderedEnumerableRowCollection{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ThenByDescending(Of TRow, TKey) (source As OrderedEnumerableRowCollection(Of TRow), keySelector As Func(Of TRow, TKey), comparer As IComparer(Of TKey)) As OrderedEnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow, typename TKey&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ ThenByDescending(System::Data::OrderedEnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, TKey&gt; ^ keySelector, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member ThenByDescending : System.Data.OrderedEnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, 'Key&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; System.Data.OrderedEnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.ThenByDescending (source, keySelector, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
        <TypeParameter Name="TKey" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.OrderedEnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;TRow,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-211">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-211">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <typeparam name="TKey">
          <span data-ttu-id="51a8d-212">Der Typ des Schlüssels vom <c>KeySelector</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-212">The type of the key returned by <c>keySelector</c>.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-213">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den <see cref="T:System.Data.DataRow" />-Elementen, die sortiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-213">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to be ordered.</span>
          </span>
        </param>
        <param name="keySelector">
          <span data-ttu-id="51a8d-214">Eine Funktion zum Extrahieren eines Schlüssels aus einem Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-214">A function to extract a key from an element.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="51a8d-215">Ein <see cref="T:System.Collections.Generic.IComparer`1" /> zum Vergleichen von Schlüsseln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-215">An <see cref="T:System.Collections.Generic.IComparer`1" /> to compare keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-216">Führt eine sekundäre Sortierung der Zeilen in einer <see cref="T:System.Data.EnumerableRowCollection" /> in absteigender Reihenfolge nach dem angegebenen Schlüssel und Vergleich durch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-216">Performs a secondary ordering of the rows of a <see cref="T:System.Data.EnumerableRowCollection" /> in descending order according to the specified key and comparer.</span>
          </span>
          <span data-ttu-id="51a8d-217">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-217">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-218">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, deren Elemente nach dem angegebenen Schlüssel und Vergleich sortiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-218">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> whose elements are sorted by the specified key and comparer.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-219">Die Verwendung von einem <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> Vorgang erfordert, dass ein vorhandener primärer Sortiervorgang mit <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span><span class="sxs-lookup"><span data-stu-id="51a8d-219">The use of a <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A> operation requires an existing primary sorting operation using <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>.</span></span>  
  
 <span data-ttu-id="51a8d-220">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-220">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-221">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-221">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-222">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-222">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="Overload:System.Data.EnumerableRowCollectionExtensions.OrderByDescending" />
        <altmember cref="M:System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
      </Docs>
    </Member>
    <Member MemberName="Where&lt;TRow&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;TRow&gt; Where&lt;TRow&gt; (this System.Data.EnumerableRowCollection&lt;TRow&gt; source, Func&lt;TRow,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; Where&lt;TRow&gt;(class System.Data.EnumerableRowCollection`1&lt;!!TRow&gt; source, class System.Func`2&lt;!!TRow, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EnumerableRowCollectionExtensions.Where``1(System.Data.EnumerableRowCollection{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of TRow) (source As EnumerableRowCollection(Of TRow), predicate As Func(Of TRow, Boolean)) As EnumerableRowCollection(Of TRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TRow&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;TRow&gt; ^ Where(System::Data::EnumerableRowCollection&lt;TRow&gt; ^ source, Func&lt;TRow, bool&gt; ^ predicate);" />
      <MemberSignature Language="F#" Value="static member Where : System.Data.EnumerableRowCollection&lt;'Row&gt; * Func&lt;'Row, bool&gt; -&gt; System.Data.EnumerableRowCollection&lt;'Row&gt;" Usage="System.Data.EnumerableRowCollectionExtensions.Where (source, predicate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;TRow&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TRow" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;TRow&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;TRow,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TRow">
          <span data-ttu-id="51a8d-223">Der Typ der Zeilenelemente in <c>Quelle</c>, in der Regel <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-223">The type of the row elements in <c>source</c>, typically <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </typeparam>
        <param name="source">
          <span data-ttu-id="51a8d-224">Eine <see cref="T:System.Data.EnumerableRowCollection" /> mit den zu filternden <see cref="T:System.Data.DataRow" />-Elementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-224">An <see cref="T:System.Data.EnumerableRowCollection" /> containing the <see cref="T:System.Data.DataRow" /> elements to filter.</span>
          </span>
        </param>
        <param name="predicate">
          <span data-ttu-id="51a8d-225">Eine Funktion, mit der jedes Element auf eine Bedingung überprüft wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-225">A function to test each element for a condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="51a8d-226">Filtert eine Sequenz von Zeilen auf Grundlage des angegebenen Prädikats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-226">Filters a sequence of rows based on the specified predicate.</span>
          </span>
          <span data-ttu-id="51a8d-227">Diese API unterstützt die .NET Framework-Infrastruktur und ist nicht für eine direkte Verwendung vom Code aus vorgesehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-227">This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="51a8d-228">Eine <see cref="T:System.Data.OrderedEnumerableRowCollection`1" />, die Zeilen aus der Eingabesequenz enthält, die die Bedingung erfüllen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="51a8d-228">An <see cref="T:System.Data.OrderedEnumerableRowCollection`1" /> that contains rows from the input sequence that satisfy the condition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51a8d-229">Diese Methode wird mit verzögerter Ausführung implementiert.</span><span class="sxs-lookup"><span data-stu-id="51a8d-229">This method is implemented by using deferred execution.</span></span> <span data-ttu-id="51a8d-230">Die sofortige ist der Rückgabewert ein Objekt, das alle Informationen speichert, die zum Ausführen der Aktion erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="51a8d-230">The immediate return value is an object that stores all the information that is required to perform the action.</span></span> <span data-ttu-id="51a8d-231">Die Abfrage dargestellt, die von dieser Methode wird nicht ausgeführt, bis das Objekt aufgelistet wird entweder durch Aufrufen der `GetEnumerator` Methode direkt oder mithilfe von `foreach` in Visual C#- oder `For Each` in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="51a8d-231">The query represented by this method is not executed until the object is enumerated either by calling its `GetEnumerator` method directly or by using `foreach` in Visual C# or `For Each` in Visual Basic.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.EnumerableRowCollectionExtensions.Select``2(System.Data.EnumerableRowCollection{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <altmember cref="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" />
      </Docs>
    </Member>
  </Members>
</Type>