<Type Name="IDataReader" FullName="System.Data.IDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c7392b558b728db32d00f6c61182b96253841d0" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78821726" /></Metadata><TypeSignature Language="C#" Value="public interface IDataReader : IDisposable, System.Data.IDataRecord" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataReader implements class System.Data.IDataRecord, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDataReader" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataReader&#xA;Implements IDataRecord, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataReader : IDisposable, System::Data::IDataRecord" />
  <TypeSignature Language="F#" Value="type IDataReader = interface&#xA;    interface IDataRecord&#xA;    interface IDisposable" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type IDataReader = interface&#xA;    interface IDisposable&#xA;    interface IDataRecord" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataRecord</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="265dd-101">Ermöglicht das Lesen eines oder mehrerer Vorwärtsdatenströme von Resultsets, die durch Ausführen eines Befehls für eine Datenquelle abgerufen wurden, und wird von .NET Framework-Datenanbietern implementiert, die auf relationale Datenbanken zugreifen.</span><span class="sxs-lookup"><span data-stu-id="265dd-101">Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="265dd-102">Die <xref:System.Data.IDataReader>-und <xref:System.Data.IDataRecord> Schnittstellen ermöglichen es einer erbenden Klasse, eine `DataReader` Klasse zu implementieren, die eine Möglichkeit zum Lesen eines oder mehrerer vorwärts Ströme von Resultsets bietet.</span><span class="sxs-lookup"><span data-stu-id="265dd-102">The <xref:System.Data.IDataReader> and <xref:System.Data.IDataRecord> interfaces allow an inheriting class to implement a `DataReader` class, which provides a means of reading one or more forward-only streams of result sets.</span></span> <span data-ttu-id="265dd-103">Weitere Informationen zu `DataReader`-Klassen finden [Sie unter Abrufen von Daten mit einem DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span><span class="sxs-lookup"><span data-stu-id="265dd-103">For more information about `DataReader` classes, see [Retrieving Data Using a DataReader](~/docs/framework/data/adonet/retrieving-data-using-a-datareader.md).</span></span>  
  
 <span data-ttu-id="265dd-104">Eine Anwendung erstellt keine Instanz der <xref:System.Data.IDataReader>-Schnittstelle direkt, sondern erstellt eine Instanz einer Klasse, die <xref:System.Data.IDataReader>erbt.</span><span class="sxs-lookup"><span data-stu-id="265dd-104">An application does not create an instance of the <xref:System.Data.IDataReader> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="265dd-105">Klassen, die <xref:System.Data.IDataReader> erben, müssen die geerbten Member implementieren und in der Regel zusätzliche Elemente definieren, um anbieterspezifische Funktionen hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="265dd-105">Classes that inherit <xref:System.Data.IDataReader> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span>  
  
 <span data-ttu-id="265dd-106">Änderungen, die an einem Resultset durch einen anderen Prozess oder Thread vorgenommen werden, während die Daten gelesen werden, können für den Benutzer einer Klasse sichtbar sein, die eine `IDataReader`implementiert.</span><span class="sxs-lookup"><span data-stu-id="265dd-106">Changes made to a result set by another process or thread while data is being read may be visible to the user of a class that implements an `IDataReader`.</span></span> <span data-ttu-id="265dd-107">Allerdings ist das genaue Verhalten sowohl vom Anbieter als auch von der zeitlichen Steuerung abhängig.</span><span class="sxs-lookup"><span data-stu-id="265dd-107">However, the precise behavior is both provider and timing dependent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="265dd-108">Im folgenden Beispiel werden Instanzen der abgeleiteten Klassen, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>und <xref:System.Data.SqlClient.SqlDataReader>erstellt.</span><span class="sxs-lookup"><span data-stu-id="265dd-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="265dd-109">Im Beispiel werden die Daten gelesen und in die Konsole geschrieben.</span><span class="sxs-lookup"><span data-stu-id="265dd-109">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="265dd-110">Schließlich schließt das Beispiel den <xref:System.Data.SqlClient.SqlDataReader>und dann die <xref:System.Data.SqlClient.SqlConnection>.</span><span class="sxs-lookup"><span data-stu-id="265dd-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="265dd-111">Um die Konsistenz zwischen .NET Framework Datenanbietern zu fördern, benennen Sie die erbende Klasse in der Form <paramref name="Prv" /> Befehl, wobei <paramref name="Prv" /> das einheitliche Präfix ist, das für alle Klassen in einem bestimmten Namespace des .NET Framework-Datenanbieters angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="265dd-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> Command where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="265dd-112"><paramref name="Sql" /> ist beispielsweise das Präfix der <see cref="T:System.Data.SqlClient.SqlDataAdapter" />-Klasse im <see langword="System.Data.SqlClient" />-Namespace.</span><span class="sxs-lookup"><span data-stu-id="265dd-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
<span data-ttu-id="265dd-113">Benutzer erstellen keine Instanz einer <see langword="DataReader" />-Klasse direkt.</span><span class="sxs-lookup"><span data-stu-id="265dd-113">Users do not create an instance of a <see langword="DataReader" /> class directly.</span></span> <span data-ttu-id="265dd-114">Stattdessen wird die <see langword="DataReader" /> Instanz über die <see langword="ExecuteReader" />-Methode des <see langword="Command" />-Objekts abgerufen.</span><span class="sxs-lookup"><span data-stu-id="265dd-114">Instead, they obtain the <see langword="DataReader" /> instance through the <see langword="ExecuteReader" /> method of the <see langword="Command" /> object.</span></span> <span data-ttu-id="265dd-115">Daher sollten Sie <see langword="DataReader" /> Konstruktoren als intern markieren.</span><span class="sxs-lookup"><span data-stu-id="265dd-115">Therefore, you should mark <see langword="DataReader" /> constructors as internal.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="265dd-116">Schließt das <see cref="T:System.Data.IDataReader" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="265dd-116">Closes the <see cref="T:System.Data.IDataReader" /> Object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="265dd-117">Sie müssen die <xref:System.Data.IDataReader.Close%2A> Methode explizit aufzurufen, wenn Sie die <xref:System.Data.IDataReader> verwenden, um die zugeordneten <xref:System.Data.IDbConnection> für andere Zwecke zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="265dd-117">You must explicitly call the <xref:System.Data.IDataReader.Close%2A> method when you are through using the <xref:System.Data.IDataReader> to use the associated <xref:System.Data.IDbConnection> for any other purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.IDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="265dd-118">Ruft einen Wert ab, der die Tiefe der Schachtelung für die aktuelle Zeile angibt.</span><span class="sxs-lookup"><span data-stu-id="265dd-118">Gets a value indicating the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="265dd-119">Die Schachtelungsebene.</span><span class="sxs-lookup"><span data-stu-id="265dd-119">The level of nesting.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="265dd-120">Die äußerste Tabelle hat die Tiefe 0.</span><span class="sxs-lookup"><span data-stu-id="265dd-120">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="iDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="265dd-121">Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die die Spaltenmetadaten des <see cref="T:System.Data.IDataReader" /> beschreibt.</span><span class="sxs-lookup"><span data-stu-id="265dd-121">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.IDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="265dd-122">Eine <see cref="T:System.Data.DataTable" />, die die Spaltenmetadaten beschreibt.</span><span class="sxs-lookup"><span data-stu-id="265dd-122">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="265dd-123">Die Implementierung der <xref:System.Data.IDataReader.GetSchemaTable%2A>-Methode für den .NET Framework Datenanbieter für OLE DB der OLE DB IColumnsRowset:: GetColumnsRowset-Methode zugeordnet, während Implementierungen für andere .NET Framework Datenanbieter keine OLE DB Anbieter Ebene verwenden.</span><span class="sxs-lookup"><span data-stu-id="265dd-123">The implementation of <xref:System.Data.IDataReader.GetSchemaTable%2A> method for the .NET Framework Data Provider for OLE DB maps to the OLE DB IColumnsRowset::GetColumnsRowset method, while implementations for other .NET Framework data providers do not use an OLE DB provider layer.</span></span> <span data-ttu-id="265dd-124">Die Reihenfolge, in der <xref:System.Data.IDataReader.GetSchemaTable%2A> Metadaten zu jeder Spalte in einer Tabelle zurückgibt, und die zurückgegebenen DataReader-Spalten variieren je nach verwendetem Datenanbieter.</span><span class="sxs-lookup"><span data-stu-id="265dd-124">The order in which <xref:System.Data.IDataReader.GetSchemaTable%2A> returns metadata about each column in a table, and the DataReader columns that are returned, vary depending on which data provider you use.</span></span> <span data-ttu-id="265dd-125">In der folgenden Tabelle werden die Datenanbieter und Member aufgelistet, die <xref:System.Data.IDataReader.GetSchemaTable%2A>implementieren.</span><span class="sxs-lookup"><span data-stu-id="265dd-125">The following table lists data providers and members that implement <xref:System.Data.IDataReader.GetSchemaTable%2A>.</span></span>  
  
|<span data-ttu-id="265dd-126">Datenanbieter</span><span class="sxs-lookup"><span data-stu-id="265dd-126">Data Provider</span></span>|<span data-ttu-id="265dd-127">Member</span><span class="sxs-lookup"><span data-stu-id="265dd-127">Member</span></span>|  
|-------------------|------------|  
|<span data-ttu-id="265dd-128">.NET-Datenanbieter für ODBC</span><span class="sxs-lookup"><span data-stu-id="265dd-128">.NET Data Provider for ODBC</span></span>|<span data-ttu-id="265dd-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="265dd-129"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="265dd-130">.NET-Datenanbieter für OLE DB</span><span class="sxs-lookup"><span data-stu-id="265dd-130">.NET Data Provider for OLE DB</span></span>|<span data-ttu-id="265dd-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="265dd-131"><xref:System.Data.OleDb.OleDbDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="265dd-132">.NET-Datenanbieter für Oracle</span><span class="sxs-lookup"><span data-stu-id="265dd-132">.NET Data Provider for Oracle</span></span>|<span data-ttu-id="265dd-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="265dd-133"><xref:System.Data.OracleClient.OracleDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="265dd-134">.NET-Datenanbieter für SQL Server</span><span class="sxs-lookup"><span data-stu-id="265dd-134">.NET Data Provider for SQL Server</span></span>|<span data-ttu-id="265dd-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="265dd-135"><xref:System.Data.SqlClient.SqlDataReader.GetSchemaTable%2A?displayProperty=nameWithType>.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="265dd-136">Der <see cref="T:System.Data.IDataReader" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="265dd-136">The <see cref="T:System.Data.IDataReader" /> is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.IDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="265dd-137">Ruft einen Wert ab, der angibt, ob der Datenreader geschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="265dd-137">Gets a value indicating whether the data reader is closed.</span></span></summary>
        <value><span data-ttu-id="265dd-138"><see langword="true" />, wenn der Datenreader geschlossen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="265dd-138"><see langword="true" /> if the data reader is closed; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="265dd-139"><xref:System.Data.IDataReader.IsClosed%2A> und <xref:System.Data.IDataReader.RecordsAffected%2A> sind die einzigen Eigenschaften, die nach dem Schließen von <xref:System.Data.IDataReader> aufgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="265dd-139"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool NextResult();" />
      <MemberSignature Language="F#" Value="abstract member NextResult : unit -&gt; bool" Usage="iDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="265dd-140">Setzt den Datenleser beim Lesen der Ergebnisse von SQL-Anweisungen auf das nächste Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="265dd-140">Advances the data reader to the next result, when reading the results of batch SQL statements.</span></span></summary>
        <returns><span data-ttu-id="265dd-141"><see langword="true" />, wenn mehrere Zeilen vorhanden sind; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="265dd-141"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="265dd-142">Wird verwendet, um mehrere Ergebnisse zu verarbeiten, die durch das Ausführen von Batch-SQL-Anweisungen abgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="265dd-142">Used to process multiple results, which can be obtained by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="265dd-143">Standardmäßig wird der Daten Leser auf dem ersten Ergebnis positioniert.</span><span class="sxs-lookup"><span data-stu-id="265dd-143">By default, the data reader is positioned on the first result.</span></span>  
  
 [!code-csharp[IDataReader_NextResult#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/idatareader_nextresult/cs/source.cs#1)]
 [!code-vb[IDataReader_NextResult#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/idatareader_nextresult/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; bool" Usage="iDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="265dd-144">Setzt den <see cref="T:System.Data.IDataReader" /> auf den nächsten Datensatz.</span><span class="sxs-lookup"><span data-stu-id="265dd-144">Advances the <see cref="T:System.Data.IDataReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="265dd-145"><see langword="true" />, wenn mehrere Zeilen vorhanden sind; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="265dd-145"><see langword="true" /> if there are more rows; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="265dd-146">Die Standardposition von <xref:System.Data.IDataReader> liegt vor dem ersten Datensatz.</span><span class="sxs-lookup"><span data-stu-id="265dd-146">The default position of the <xref:System.Data.IDataReader> is prior to the first record.</span></span> <span data-ttu-id="265dd-147">Daher müssen Sie <xref:System.Data.IDataReader.Read%2A> aufrufen, um mit dem Zugriff auf Daten zu beginnen.</span><span class="sxs-lookup"><span data-stu-id="265dd-147">Therefore you must call <xref:System.Data.IDataReader.Read%2A> to begin accessing any data.</span></span>  
  
 <span data-ttu-id="265dd-148">Während der Daten Leser verwendet wird, ist die zugehörige Verbindung für die <xref:System.Data.IDataReader>ausgelastet.</span><span class="sxs-lookup"><span data-stu-id="265dd-148">While the data reader is in use, the associated connection is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="265dd-149">Dies ist der Fall, bis <xref:System.Data.IDataReader.Close%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="265dd-149">This is the case until <xref:System.Data.IDataReader.Close%2A> is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="265dd-150">Im folgenden Beispiel werden Instanzen von drei abgeleiteten Klassen <xref:System.Data.OleDb.OleDbConnection>, eine <xref:System.Data.OleDb.OleDbCommand>und eine <xref:System.Data.OleDb.OleDbDataReader>erstellt.</span><span class="sxs-lookup"><span data-stu-id="265dd-150">The following example creates instances of three derived classes <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>.</span></span> <span data-ttu-id="265dd-151">Im Beispiel werden die Daten gelesen und in die Konsole geschrieben.</span><span class="sxs-lookup"><span data-stu-id="265dd-151">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="265dd-152">Schließlich schließt das Beispiel den <xref:System.Data.OleDb.OleDbDataReader>und dann die <xref:System.Data.OleDb.OleDbConnection>.</span><span class="sxs-lookup"><span data-stu-id="265dd-152">Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, then the <xref:System.Data.OleDb.OleDbConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.IDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="265dd-153">Ruft die Anzahl der durch die Ausführung der SQL-Anweisung geänderten, eingefügten oder gelöschten Zeilen ab.</span><span class="sxs-lookup"><span data-stu-id="265dd-153">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="265dd-154">Die Anzahl der geänderten, eingefügten oder gelöschten Zeilen; 0, wenn keine Zeilen betroffen sind, oder bei der Anweisung ein Fehler aufgetreten ist, und -1 für SELECT-Anweisungen.</span><span class="sxs-lookup"><span data-stu-id="265dd-154">The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="265dd-155">Die <xref:System.Data.IDataReader.RecordsAffected%2A>-Eigenschaft wird erst festgelegt, wenn alle Zeilen gelesen wurden, und schließen Sie die <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="265dd-155">The <xref:System.Data.IDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="265dd-156"><xref:System.Data.IDataReader.IsClosed%2A> und <xref:System.Data.IDataReader.RecordsAffected%2A> sind die einzigen Eigenschaften, die nach dem Schließen von <xref:System.Data.IDataReader> aufgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="265dd-156"><xref:System.Data.IDataReader.IsClosed%2A> and <xref:System.Data.IDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.IDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
