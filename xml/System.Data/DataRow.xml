<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f78a48ee9493de1f2caa07bf8e41ca90e394892" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51936142" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Datenzeile in einer <see cref="T:System.Data.DataTable" /> dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataRow> und <xref:System.Data.DataColumn> Objekte sind die primären Komponenten von einer <xref:System.Data.DataTable>. Verwenden der <xref:System.Data.DataRow> Objekt und seine Eigenschaften und Methoden zum Abrufen und bewerten; und einfügen, löschen und aktualisieren Sie die Werte in der <xref:System.Data.DataTable>. Die <xref:System.Data.DataRowCollection> stellt den tatsächlichen <xref:System.Data.DataRow> Objekte in der <xref:System.Data.DataTable>, und die <xref:System.Data.DataColumnCollection> enthält die <xref:System.Data.DataColumn> Objekte, die das Schema des beschreiben die <xref:System.Data.DataTable>. Verwenden Sie die überladene <xref:System.Data.DataRow.Item%2A> zurückgeben, oder legen Sie den Wert der Eigenschaft ein <xref:System.Data.DataColumn>.  
  
 Verwenden der <xref:System.Data.DataRow.HasVersion%2A> und <xref:System.Data.DataRow.IsNull%2A> Eigenschaften, die den Status eines Werts bestimmte Zeile zu bestimmen und die <xref:System.Data.DataRow.RowState*> Eigenschaft zum Ermitteln des Status der Zeile relativ zu seinem übergeordneten <xref:System.Data.DataTable>.  
  
 Zum Erstellen eines neuen <xref:System.Data.DataRow>, verwenden Sie die <xref:System.Data.DataTable.NewRow%2A> Methode der <xref:System.Data.DataTable> Objekt. Nach dem Erstellen eines neuen <xref:System.Data.DataRow>, verwenden Sie die <xref:System.Data.DataRowCollection.Add%2A> Methode zum Hinzufügen der neuen <xref:System.Data.DataRow> auf die <xref:System.Data.DataRowCollection>. Rufen Sie abschließend die <xref:System.Data.DataRow.AcceptChanges%2A> Methode der <xref:System.Data.DataTable> Objekt, das die Hinzufügung zu bestätigen. Weitere Informationen zum Hinzufügen von Daten in einem <xref:System.Data.DataTable>, finden Sie unter [Hinzufügen von Daten zu einer DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).  
  
 Können Sie löschen eine <xref:System.Data.DataRow> aus der <xref:System.Data.DataRowCollection> durch Aufrufen der <xref:System.Data.DataRowCollection.Remove%2A> -Methode der der <xref:System.Data.DataRowCollection>, oder durch Aufrufen der <xref:System.Data.DataRow.Delete%2A> -Methode der der <xref:System.Data.DataRow> Objekt. Die <xref:System.Data.DataRowCollection.Remove%2A> Methode entfernt die Zeile aus der Auflistung. Im Gegensatz dazu <xref:System.Data.DataRow.Delete%2A> markiert die <xref:System.Data.DataRow> entfernt. Das eigentliche löschen erfolgt beim Aufrufen <xref:System.Data.DataRow.AcceptChanges%2A> Methode. Durch Aufrufen von <xref:System.Data.DataRow.Delete%2A>, Sie können programmgesteuert überprüfen, welche Zeilen entfernt, bevor sie tatsächlich löschen markiert sind. Weitere Informationen finden Sie unter ["DataRow"-Löschung](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).  
  
   
  
## Examples  
 Das folgende Beispiel erstellt ein neues <xref:System.Data.DataRow> durch Aufrufen der <xref:System.Data.DataTable.NewRow%2A> Methode der <xref:System.Data.DataTable> Objekt.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist für schreibgeschützte Vorgänge mit mehreren Threads sicher. Sie müssen die Schreibvorgänge synchronisieren.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <related type="Article" href="https://msdn.microsoft.com/library/6d4c4b69-8919-4224-8a65-6cca1c61b48f">Verwenden von DataSets in ADO.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">der Generator.</param>
        <summary>Initialisiert eine neue Instanz von DataRow. Erstellt eine Zeile aus dem Generator. Nur zur internen Verwendung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Commit für alle Änderungen aus, die an dieser Zeile seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> vorgenommen wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Aufrufen <xref:System.Data.DataRow.AcceptChanges%2A>, <xref:System.Data.DataRow.EndEdit%2A> implizit aufgerufen, um Änderungen zu beenden. Wenn die <xref:System.Data.DataRow.RowState*> der Zeile wurde hinzugefügt oder geändert werden, die <xref:System.Data.DataRow.RowState*> wird unverändert. Wenn die <xref:System.Data.DataRow.RowState*> wurde gelöscht, die Zeile wird entfernt.  
  
 Weitere Informationen finden Sie unter der <xref:System.Data.DataRow.BeginEdit%2A>-Methode.  
  
 Die <xref:System.Data.DataTable> -Klasse verfügt auch über eine <xref:System.Data.DataTable.AcceptChanges%2A> -Methode die Änderungen an der gesamten Tabelle wirkt sich auf. Weitere Informationen und ein Codebeispiel, das veranschaulicht, wie annehmen und Ablehnen von Änderungen an Daten für die einzelnen Zeilen, finden Sie unter [AcceptChanges und RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md).  
  
   
  
## Examples  
 Das folgende Beispiel erstellt zuerst eine neue <xref:System.Data.DataTable> mit einer Spalte, und erstellt dann ein einzelnes <xref:System.Data.DataRow>. Als die <xref:System.Data.DataRow> erstellt, hinzugefügt, geändert und gelöscht, wird die <xref:System.Data.DataRow.RowState*> gedruckt wird.  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="https://msdn.microsoft.com/library/6d4c4b69-8919-4224-8a65-6cca1c61b48f">Verwenden von DataSets in ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet einen Bearbeitungsvorgang für ein <see cref="T:System.Data.DataRow" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Data.DataRow.BeginEdit%2A> Übernahme einer <xref:System.Data.DataRow> in den Bearbeitungsmodus. In diesem Modus werden Ereignisse vorübergehend angehalten und teilt dem Benutzer Änderungen an mehr als eine Zeile zu vornehmen, ohne dass Validierungsregeln. Z. B. Wenn Sie müssen sicherstellen, dass der Wert der Spalte für eine Gesamtmenge gleich den Werten für das soll und Guthaben von Spalten in einer Zeile, können Sie jede Zeile in versetzen Bearbeitungszustand versetzt, damit die Überprüfung mit den Zeilenwerten anhalten, bis der Benutzer die Werte eines Commits versucht.  
  
 Die <xref:System.Data.DataRow.BeginEdit%2A> Methode wird implizit aufgerufen, wenn der Benutzer den Wert eines datengebundenen Steuerelements, ändert der <xref:System.Data.DataRow.EndEdit%2A> Methode wird implizit aufgerufen, wenn Sie aufrufen, die <xref:System.Data.DataTable.AcceptChanges%2A> -Methode für die <xref:System.Data.DataTable> Objekt. In diesem Bearbeitungsmodus können die <xref:System.Data.DataRow> speichert Darstellungen von der ursprünglichen und neuen Werte vorgeschlagen. Aus diesem Grund, solange die <xref:System.Data.DataRow.EndEdit%2A> Methode nicht aufgerufen wurde, können Sie entweder die ursprüngliche oder die vorgeschlagene Version abrufen, übergeben Sie entweder `DataRowVersion.Original` oder `DataRowVersion.Proposed` für die `version` Parameter der <xref:System.Data.DataRow.Item%2A> Eigenschaft. Sie können auch Änderungen an dieser Stelle abbrechen, durch den Aufruf der <xref:System.Data.DataRow.CancelEdit%2A> Methode.  
  
 Um festzustellen, ob die Zeile einen ursprünglichen oder einen vorgeschlagenen Wert enthält, rufen Sie die <xref:System.Data.DataRow.HasVersion%2A> Methode.  
  
> [!NOTE]
>  Die <xref:System.Data.DataRow.BeginEdit%2A> -Methode unterbricht vorübergehend <xref:System.Data.DataTable.RowChanging> Ereignisse, aber die `delete` Vorgang wird nicht ausgeführt.  
  
   
  
## Examples  
 Das Beispiel erstellt eine einfache <xref:System.Data.DataTable> mit einem <xref:System.Data.DataColumn> und fünf <xref:System.Data.DataRow> Objekte, und ein <xref:System.Data.UniqueConstraint>. Ein <xref:System.Data.DataTable.RowChanged> -Ereignishandler wird auch zum Überwachen, wenn der Wert der Zeile geändert wird hinzugefügt. Nach dem Aufruf <xref:System.Data.DataRow.BeginEdit%2A> auf den vorhandenen Zeilen, die Einschränkung und das Ereignis vorübergehend deaktiviert, und die ursprünglichen und die vorgeschlagenen Werte werden ausgegeben. Die <xref:System.Data.DataRow.BeginEdit%2A> wird erneut aufgerufen, um zwei Zeilen denselben Wert festzulegen. Wenn <xref:System.Data.DataRow.EndEdit%2A> aufgerufen wird, die <xref:System.Data.UniqueConstraint> auf identische Werte erzwungen werden.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Die Methode wurde für eine gelöschte Zeile aufgerufen.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="https://msdn.microsoft.com/library/6d4c4b69-8919-4224-8a65-6cca1c61b48f">Verwenden von DataSets in ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht den aktuellen Bearbeitungsvorgang für die Zeile ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter der <xref:System.Data.DataRow.BeginEdit%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird bearbeitet den Wert einer Spalte in der letzten Zeile von einem <xref:System.Windows.Forms.DataGrid> Steuerelement. Im Beispiel wird die <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, Methoden, um den Wert der Spalte zu bearbeiten, und committen der Änderung der Zeile.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="https://msdn.microsoft.com/library/6d4c4b69-8919-4224-8a65-6cca1c61b48f">Verwenden von DataSets in ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Fehler für die Zeile. Dazu zählen auch der <see cref="P:System.Data.DataRow.RowError" /> und Fehler, die mit <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> festgelegt wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendung <xref:System.Data.DataRow.SetColumnError%2A> und <xref:System.Data.DataRow.GetColumnError%2A> zum Fehler für einzelne Spalten festzulegen und zurückzugeben.  
  
 Legen Sie die <xref:System.Data.DataRow.RowError%2A> Eigenschaft, um einen Fehler festzulegen, die für die gesamte Zeile gilt.  
  
 Um zu bestimmen, ob alle Fehler für die Auflistung der Spalten vorhanden sind, verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> Methode. Daher können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode, um alle Spalten mit Fehlern abrufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.HasErrors%2A> auf Fehler überprüfen. Wenn die Zeile Fehler enthält die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode gibt das Array von Spalten mit Fehlern, die aufgelöst werden können. Die <xref:System.Data.DataRow.ClearErrors%2A> Methode wird aufgerufen, um alle Fehler zu löschen.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <related type="Article" href="https://msdn.microsoft.com/library/6d4c4b69-8919-4224-8a65-6cca1c61b48f">Verwenden von DataSets in ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Data.DataRow.RowState*> der Zeile hinzugefügt wird, die <xref:System.Data.DataRow.RowState*> wird `Detached` und die Zeile aus der Tabelle entfernt wird, beim Aufrufen <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
 Die <xref:System.Data.DataRow.RowState*> wird `Deleted` nach der Verwendung der <xref:System.Data.DataRow.Delete%2A> Methode auf einem vorhandenen <xref:System.Data.DataRow>. Es bleibt `Deleted` bis zum Aufruf von <xref:System.Data.DataRow.AcceptChanges%2A>. Zu diesem Zeitpunkt die <xref:System.Data.DataRow> aus der Tabelle entfernt wird.  
  
 <xref:System.Data.DataRow.Delete%2A> sollte während des Durchlaufens nicht in einer Foreach-Schleife aufgerufen werden eine <xref:System.Data.DataRowCollection> Objekt. <xref:System.Data.DataRow.Delete%2A> Ändert den Zustand der Auflistung.  
  
 Eine gelöschte Zeile kann wiederhergestellt werden, durch den Aufruf <xref:System.Data.DataRow.RejectChanges%2A>.  
  
> [!NOTE]
>  Die <xref:System.Data.DataRow.BeginEdit%2A> -Methode unterbricht vorübergehend <xref:System.Data.DataTable.RowChanging> Ereignisse, die Delete-Vorgang jedoch nicht.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine einfache <xref:System.Data.DataTable> mit zwei Spalten und zehn Zeilen. Nach dem Löschen mehrerer <xref:System.Data.DataRow> Elemente mit den <xref:System.Data.DataRow.Delete%2A> -Methode, eine der Zeilen wird wiederhergestellt, durch den Aufruf <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Die <see cref="T:System.Data.DataRow" /> wurde bereits gelöscht.</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="https://msdn.microsoft.com/library/6d4c4b69-8919-4224-8a65-6cca1c61b48f">Verwenden von DataSets in ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet den Bearbeitungsvorgang an der Zeile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme, in auftritt der <xref:System.Data.DataTable.RowChanging> Ereignis.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.EndEdit%2A> Methode, um die Bearbeitung eines beendet eine <xref:System.Data.DataRow> -Wert, wenn die Validierungsfunktion gibt "true" zurück.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
        <exception cref="T:System.Data.ConstraintException">Bei dem Bearbeitungsvorgang wurde eine Einschränkung verletzt.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Die Zeile gehört zu der Tabelle, und beim Bearbeitungsvorgang wurde versucht, den Wert einer schreibgeschützten Spalte zu ändern.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Beim Bearbeitungsvorgang wurde versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="https://msdn.microsoft.com/library/6d4c4b69-8919-4224-8a65-6cca1c61b48f">Verwenden von DataSets in ADO.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die untergeordneten Zeilen einer <see cref="T:System.Data.DataRow" /> ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die untergeordneten Zeilen dieser <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> Objekte, die von zurückgegeben wird das <xref:System.Data.DataTable.ChildRelations%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.GetChildRows%2A> zurückzugebenden untergeordneten <xref:System.Data.DataRow> Objekte für jedes untergeordnete <xref:System.Data.DataRelation> in einem <xref:System.Data.DataTable>. Klicken Sie dann der Wert der einzelnen Spalten in der Zeile ausgegeben.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">Die Beziehung ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="https://msdn.microsoft.com/library/6d4c4b69-8919-4224-8a65-6cca1c61b48f">Verwenden von DataSets in ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> der zu verwendenden <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> Objekte, die von zurückgegeben wird das <xref:System.Data.DataTable.ChildRelations%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> Objekte, die von zurückgegeben wird das <xref:System.Data.DataTable.ChildRelations%2A> Eigenschaft.  
  
 Verwenden der <xref:System.Data.DataRow.HasVersion%2A> Eigenschaft, um zu bestimmen, ob die <xref:System.Data.DataRowVersion> wirklich vorhanden ist.  
  
 Wenn <xref:System.Data.DataRowVersion.Default> angegeben ist, wird die Version, die verwendet wird, hängt die <xref:System.Data.DataRow.RowState*> der Zeile, auf der `GetChildRows` aufgerufen wird. Wenn der Zeile, auf der `GetChildRows` wird aufgerufen, hat eine `RowState` von `Modified`, `New`, oder `Unchanged`, wird die <xref:System.Data.DataRowVersion.Current> Version der Zeile dient zum Abrufen von verwandten untergeordneten Zeilen mit übereinstimmenden Werten in ihren aktuellen Versionen. Wenn die Zeile, auf der `GetChildRows` wird aufgerufen, hat eine `RowState` von `Deleted`, die <xref:System.Data.DataRowVersion.Original> Version der Zeile dient zum Abrufen von verwandten untergeordneten Zeilen mit übereinstimmenden Werten in die ursprünglichen Version.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.GetChildRows%2A> zurückzugebenden untergeordneten <xref:System.Data.DataRow> Objekte für jedes untergeordnete <xref:System.Data.DataRelation> in einem <xref:System.Data.DataTable>. Klicken Sie dann der Wert der einzelnen Spalten mit der angegebenen Version in der Zeile ausgegeben.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="https://msdn.microsoft.com/library/6d4c4b69-8919-4224-8a65-6cca1c61b48f">Verwenden von DataSets in ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> der zu verwendenden <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und einer <see cref="T:System.Data.DataRelation" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> Objekte, die von zurückgegeben wird das <xref:System.Data.DataTable.ChildRelations%2A> Eigenschaft.  
  
 Verwenden der <xref:System.Data.DataRow.HasVersion%2A> Eigenschaft, um zu bestimmen, ob die <xref:System.Data.DataRowVersion> wirklich vorhanden ist.  
  
 Wenn <xref:System.Data.DataRowVersion.Default> angegeben ist, wird die Version, die verwendet wird, hängt die <xref:System.Data.DataRow.RowState*> der Zeile, auf der `GetChildRows` aufgerufen wird. Wenn der Zeile, auf der `GetChildRows` wird aufgerufen, hat eine `RowState` von `Modified`, `New`, oder `Unchanged`, wird die <xref:System.Data.DataRowVersion.Current> Version der Zeile dient zum Abrufen von verwandten untergeordneten Zeilen mit übereinstimmenden Werten in ihren aktuellen Versionen. Wenn die Zeile, auf der `GetChildRows` wird aufgerufen, hat eine `RowState` von `Deleted`, die <xref:System.Data.DataRowVersion.Original> Version der Zeile dient zum Abrufen von verwandten untergeordneten Zeilen mit übereinstimmenden Werten in die ursprünglichen Version.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die Fehlerbeschreibung für eine Spalte ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Ruft die Fehlerbeschreibung der angegebenen <see cref="T:System.Data.DataColumn" /> ab.</summary>
        <returns>Der Text der Fehlerbeschreibung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Data.DataRow.SetColumnError%2A> Methode Spaltenfehler festlegen.  
  
 Um zu bestimmen, ob alle Fehler für die Auflistung der Spalten vorhanden sind, verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> Methode. Daher können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode, um alle Spalten mit Fehlern abrufen. Sie können auch die <xref:System.Data.DataTable.GetErrors%2A> -Methode der der <xref:System.Data.DataTable> gibt alle Zeilen mit Fehlern zurück.  
  
 Um alle Fehler für die Auflistung der Spalten zu löschen, verwenden die <xref:System.Data.DataRow.ClearErrors%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <summary>Ruft die Fehlerbeschreibung für die durch den Index angegebene Spalte ab.</summary>
        <returns>Der Text der Fehlerbeschreibung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Data.DataRow.SetColumnError%2A> Methode Spaltenfehler festlegen.  
  
 Um zu bestimmen, ob alle Fehler für die Auflistung der Spalten vorhanden sind, verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> Methode. Daher können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode, um alle Spalten mit Fehlern abrufen.  
  
 Um alle Fehler für die Auflistung der Spalten zu löschen, verwenden die <xref:System.Data.DataRow.ClearErrors%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <summary>Ruft die Fehlerbeschreibung für eine durch den Namen angegebene Spalte ab.</summary>
        <returns>Der Text der Fehlerbeschreibung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Data.DataRow.SetColumnError%2A> Methode Spaltenfehler festlegen.  
  
 Um zu bestimmen, ob alle Fehler für die Auflistung der Spalten vorhanden sind, verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> Methode. Daher können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode, um alle Spalten mit Fehlern abrufen.  
  
 Um alle Fehler für die Auflistung der Spalten zu löschen, verwenden die <xref:System.Data.DataRow.ClearErrors%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ein Array von Spalten ab, die Fehler enthalten.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die Fehler enthalten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.DataRow.GetColumnsInError%2A> können Sie die Anzahl der reduzieren <xref:System.Data.DataColumn> Objekte, die auf Fehler verarbeitet werden müssen, indem nur die Spalten, die einen Fehler zurückgegeben. Fehler können festgelegt werden, für einzelne Spalten mit den <xref:System.Data.DataRow.SetColumnError%2A> Methode. Um die Anzahl der Verarbeitung weiter zu verringern, sollten die <xref:System.Data.DataRow.HasErrors%2A> Eigenschaft der <xref:System.Data.DataRow> Klasse, um zu bestimmen, ob eine <xref:System.Data.DataRow> weist Fehler vor dem Aufrufen <xref:System.Data.DataRow.GetColumnsInError%2A>.  
  
 Verwenden der <xref:System.Data.DataRow.ClearErrors%2A> Methode, um alle Fehler in der Zeile zu löschen. Dies schließt <xref:System.Data.DataRow.RowError%2A> ein.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.HasErrors%2A> auf Fehler überprüfen. Wenn die Zeile Fehler enthält die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode gibt das Array von Spalten mit Fehlern, die aufgelöst werden können. Die <xref:System.Data.DataRow.ClearErrors%2A> Methode wird aufgerufen, um alle Fehler zu löschen.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer <xref:System.Data.DataSet>, die Auflistung von allen übergeordneten <xref:System.Data.DataRelation> -Objekte für das Dataset, durch zurückgegeben wird die <xref:System.Data.DataRow.GetParentRows%2A> Methode.  
  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> zurückgegebenen Objekte die <xref:System.Data.DataTable.ParentRelations%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.GetParentRow%2A> zurückzugebenden untergeordneten <xref:System.Data.DataRow> Objekte für jedes untergeordnete <xref:System.Data.DataRelation> in einem <xref:System.Data.DataTable>. Klicken Sie dann der Wert der einzelnen Spalten in der Zeile ausgegeben.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <paramref name="relation" /> gehört nicht zur <see cref="T:System.Data.DataTable" />.  
  
Die Zeile ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Diese Zeile gehört nicht zur untergeordneten Tabelle des <see cref="T:System.Data.DataRelation" />-Objekts.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer Tabelle.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer <xref:System.Data.DataSet>, die Auflistung von allen übergeordneten <xref:System.Data.DataRelation> -Objekte für das Dataset, durch zurückgegeben wird die <xref:System.Data.DataRow.GetParentRows%2A> Methode.  
  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> zurückgegebenen Objekte die <xref:System.Data.DataTable.ParentRelations%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.GetParentRow%2A> So drucken Sie einen Wert aus allen übergeordneten Zeilen der einzelnen <xref:System.Data.DataRow> in einem <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer <xref:System.Data.DataSet>, die Auflistung von allen übergeordneten <xref:System.Data.DataRelation> -Objekte für das Dataset, durch zurückgegeben wird die <xref:System.Data.DataRow.GetParentRows%2A> Methode.  
  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> zurückgegebenen Objekte die <xref:System.Data.DataTable.ParentRelations%2A> Eigenschaft.  
  
 Verwenden der <xref:System.Data.DataRow.HasVersion%2A> Eigenschaft, um zu bestimmen, ob die <xref:System.Data.DataRowVersion> wirklich vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.GetParentRow%2A> zurückzugebenden untergeordneten <xref:System.Data.DataRow> Objekte für jedes untergeordnete <xref:System.Data.DataRelation> in einem <xref:System.Data.DataTable>. Klicken Sie dann der Wert der einzelnen Spalten in der Zeile ausgegeben.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Zeile ist <see langword="null" />.  
  
Die <paramref name="relation" /> gehört nicht zu den übergeordneten Beziehungen dieser Tabelle.</exception>
        <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und der <see cref="T:System.Data.DataRelation" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer <xref:System.Data.DataSet>, die Auflistung von allen übergeordneten <xref:System.Data.DataRelation> -Objekte für das Dataset, durch zurückgegeben wird die <xref:System.Data.DataRow.GetParentRows%2A> Methode.  
  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> zurückgegebenen Objekte die <xref:System.Data.DataTable.ParentRelations%2A> Eigenschaft.  
  
 Verwenden der <xref:System.Data.DataRow.HasVersion%2A> Eigenschaft, um zu bestimmen, ob die <xref:System.Data.DataRowVersion> wirklich vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.GetParentRow%2A> So drucken Sie einen Wert aus allen übergeordneten Zeilen der einzelnen <xref:System.Data.DataRow> in einem <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die übergeordneten Zeilen einer <see cref="T:System.Data.DataRow" /> ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer <xref:System.Data.DataSet>, die Auflistung von allen übergeordneten <xref:System.Data.DataRelation> -Objekte für das Dataset, durch zurückgegeben wird die <xref:System.Data.DataRow.GetParentRows%2A> Methode.  
  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> zurückgegebenen Objekte die <xref:System.Data.DataTable.ParentRelations%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.GetParentRows%2A> zurückzugebenden untergeordneten <xref:System.Data.DataRow> Objekte für jedes untergeordnete <xref:System.Data.DataRelation> in einem <xref:System.Data.DataTable>. Klicken Sie dann der Wert der einzelnen Spalten in der Zeile ausgegeben.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="T:System.Data.DataRelation" /> gehört nicht zum <see cref="T:System.Data.DataSet" /> dieser Zeile.</exception>
        <exception cref="T:System.ArgumentNullException">Die Zeile ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer <xref:System.Data.DataSet>, die Auflistung von allen übergeordneten <xref:System.Data.DataRelation> -Objekte für das Dataset, durch zurückgegeben wird die <xref:System.Data.DataRow.GetParentRows%2A> Methode.  
  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> zurückgegebenen Objekte die <xref:System.Data.DataTable.ParentRelations%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer <xref:System.Data.DataSet>, die Auflistung von allen übergeordneten <xref:System.Data.DataRelation> -Objekte für das Dataset, durch zurückgegeben wird die <xref:System.Data.DataRow.GetParentRows%2A> Methode.  
  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> zurückgegebenen Objekte die <xref:System.Data.DataTable.ParentRelations%2A> Eigenschaft.  
  
 Verwenden der <xref:System.Data.DataRow.HasVersion%2A> Eigenschaft, um zu bestimmen, ob die <xref:System.Data.DataRowVersion> wirklich vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.GetParentRows%2A> zurückzugebenden untergeordneten <xref:System.Data.DataRow> Objekte für jedes untergeordnete <xref:System.Data.DataRelation> in einem <xref:System.Data.DataTable>. Klicken Sie dann der Wert der einzelnen Spalten in der Zeile ausgegeben.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="T:System.Data.DataRelation" /> gehört nicht zum <see cref="T:System.Data.DataSet" /> dieser Zeile.</exception>
        <exception cref="T:System.ArgumentNullException">Die Zeile ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und der <see cref="T:System.Data.DataRelation" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einer <xref:System.Data.DataSet>, die Auflistung von allen übergeordneten <xref:System.Data.DataRelation> -Objekte für das Dataset, durch zurückgegeben wird die <xref:System.Data.DataRow.GetParentRows%2A> Methode.  
  
 Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.DataRelation> zurückgegebenen Objekte die <xref:System.Data.DataTable.ParentRelations%2A> Eigenschaft.  
  
 Verwenden der <xref:System.Data.DataRow.HasVersion%2A> Eigenschaft, um zu bestimmen, ob die <xref:System.Data.DataRowVersion> wirklich vorhanden ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine Zeile Fehler enthält.</summary>
        <value>
          <see langword="true" />, wenn die Zeile einen Fehler enthält, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors` Gibt `true` ggf. <xref:System.Data.DataColumn> Objekt in der Zeile einen Fehler enthält, oder wenn die <xref:System.Data.DataRow.RowError%2A> Eigenschaft der <xref:System.Data.DataRow> handelt es sich nicht um eine leere Zeichenfolge.  
  
 Beim Überprüfen der Daten, können Sie einen Fehler für jede Spalte in einer Zeile festlegen. Eine solche Spalte, bei der Anzeige in der <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> steuern, mit einem roten Ausrufezeichen, um dem Benutzer signalisiert, dass die Spalte Fehler markiert ist.  
  
 Verwendung <xref:System.Data.DataRow.SetColumnError%2A> einen Fehler auf eine Spalte festlegen.  
  
 Verwenden der <xref:System.Data.DataRow.GetColumnError%2A> und `GetColumnsInError` Methoden, um Spalten mit Fehlern zurückzugeben.  
  
 Die <xref:System.Data.DataRow.ClearErrors%2A> Methode löscht alle Fehler für die Zeile.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.HasErrors%2A> auf Fehler überprüfen. Wenn die Zeile Fehler enthält die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode gibt das Array von Spalten mit Fehlern, die aufgelöst werden können. Die <xref:System.Data.DataRow.ClearErrors%2A> Methode wird aufgerufen, um alle Fehler zu löschen.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Zeilenversion angibt.</param>
        <summary>Ruft einen Wert ab, der angibt, ob eine angegebene Version vorhanden ist.</summary>
        <returns>
          <see langword="true" />, wenn die Version vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter der <xref:System.Data.DataRow.BeginEdit%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.HasVersion%2A> Methode, um zu bestimmen, ob der aktuelle Wert einer Spalte und den vorgeschlagenen Wert identisch sind. Wenn dies der Fall ist, wird die Bearbeitung abgebrochen. Andernfalls die <xref:System.Data.DataRow.AcceptChanges%2A> Methode wird aufgerufen, um die Bearbeitung zu beenden.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene Spalte einen NULL-Wert enthält.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene <see cref="T:System.Data.DataColumn" /> einen NULL-Wert enthält.</summary>
        <returns>
          <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel gibt jede Spalte der einzelnen Zeilen in jede Datentabelle einen <xref:System.Data.DataSet>. Wenn die Zeile auf einen null-Wert festgelegt ist, wird der Wert nicht gedruckt.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die Spalte am angegebenen Index einen NULL-Wert enthält.</summary>
        <returns>
          <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel ändert den Wert einer Spalte in einen null-Wert, und verwendet dann die <xref:System.Data.DataRow.IsNull%2A> Methode, um zu bestimmen, ob der Wert null ist.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die benannte Spalte einen NULL-Wert enthält.</summary>
        <returns>
          <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel ändert den Wert einer Spalte in einen null-Wert, und verwendet dann die <xref:System.Data.DataRow.IsNull%2A> Methode, um zu bestimmen, ob der Wert null ist.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene <see cref="T:System.Data.DataColumn" /> und <see cref="T:System.Data.DataRowVersion" /> einen NULL-Wert enthält.</summary>
        <returns>
          <see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die Daten aus einer angegebenen Spalte ab oder legt diese fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />, der die Daten enthält.</param>
        <summary>Ruft die in der angegebenen <see cref="T:System.Data.DataColumn" /> gespeicherten Daten ab oder legt diese fest.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme, in auftritt der <xref:System.Data.DataTable.ColumnChanging> Ereignis.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden Sie unter <xref:System.Data.DataRow.EndEdit%2A> für die Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 Die folgenden Beispiele veranschaulichen die Verwendung der <xref:System.Data.DataRow.Item%2A> -Eigenschaft abgerufen, und legen Sie den Wert, der einen bestimmten Index. Im erste Beispiel ruft den Wert der ersten Spalte in einer Zeile, die Klicks von ein Benutzer in einer <xref:System.Windows.Forms.DataGrid> Steuerelement. Das zweite legt einen Wert, der als Argument an die Methode übergeben.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Spalte gehört nicht zu dieser Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">Die <paramref name="column" /> ist NULL.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, einen Wert für eine gelöschte Zeile festzulegen.</exception>
        <exception cref="T:System.InvalidCastException">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <summary>Ruft die Daten aus der durch den Index angegebenen Spalte ab oder legt diese fest.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme, in auftritt der <xref:System.Data.DataTable.ColumnChanging> Ereignis.  
  
 Wenn dies eine Bearbeitung ist, finden Sie unter <xref:System.Data.DataRow.EndEdit%2A> für die Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 Die folgenden Beispiele veranschaulichen die Verwendung der <xref:System.Data.DataRow.Item%2A> -Eigenschaft abgerufen, und legen Sie den Wert, der einen bestimmten Index. Im erste Beispiel ruft den Wert der ersten Spalte in einer Zeile, die Klicks von ein Benutzer in einer <xref:System.Windows.Forms.DataGrid> Steuerelement.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn Sie versuchen, einen Wert in einer gelöschten Zeile festzulegen.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
        <exception cref="T:System.InvalidCastException">Wird ausgelöst, wenn Sie einen Wert festlegen und der <see cref="T:System.Type" /> des neuen Werts nicht mit dem <see cref="P:System.Data.DataColumn.DataType" /> übereinstimmt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <summary>Ruft die Daten aus der durch den Namen angegebenen Spalte ab oder legt diese fest.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme, in auftritt der <xref:System.Data.DataTable.ColumnChanging> Ereignis.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden Sie unter <xref:System.Data.DataRow.EndEdit%2A> für die Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 Die folgenden Beispiele veranschaulichen die Verwendung der <xref:System.Data.DataRow.Item%2A> -Eigenschaft abgerufen, und legen Sie den Wert, der einen bestimmten Index. Im erste Beispiel ruft den Wert der ersten Spalte in einer Zeile, die Klicks von ein Benutzer in einer <xref:System.Windows.Forms.DataGrid> Steuerelement. Das zweite legt einen Wert, der als Argument an die Methode übergeben.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn Sie versuchen, einen Wert in einer gelöschten Zeile festzulegen.</exception>
        <exception cref="T:System.InvalidCastException">Tritt auf, wenn Sie einen Wert festlegen, dessen <see cref="T:System.Type" /> nicht mit <see cref="P:System.Data.DataColumn.DataType" /> übereinstimmt.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Tritt auf, wenn Sie versuchen, einen NULL-Wert in eine Spalte einzufügen, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> zu <see langword="false" /> festgelegt ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Eine <see cref="T:System.Data.DataColumn" />, die Informationen über die Spalte enthält.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft die angegebene Version der Daten aus der angegebenen <see cref="T:System.Data.DataColumn" /> ab.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `version` darf nicht mit verwechselt werden die <xref:System.Data.DataRow.RowState*> Eigenschaft. Die `version` Argument beschreibt den Status der Daten, die von der Spalte relativ zum ursprünglichen Wert der Spalte enthalten ist.  
  
 Wenn Sie die Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme, in auftritt der <xref:System.Data.DataTable.ColumnChanging> Ereignis.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden Sie unter <xref:System.Data.DataRow.EndEdit%2A> für die Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 Im folgenden Beispiel wird den aktuellen Wert von einer ausgewählten Zelle in der <xref:System.Windows.Forms.DataGrid> Steuerelement.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Spalte gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">Das <paramref name="column" />-Argument ist NULL.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft die durch den Index und die Version angegebenen Daten aus der Spalte ab.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kann nur zu erstellen oder aktualisieren eine Zeile aus, nach dem Aufrufen der <xref:System.Data.DataRow.BeginEdit%2A> Methode; ebenso sind die <xref:System.Data.DataRow.EndEdit%2A> -Methode muss aufgerufen werden, um die Bearbeitung zu übertragen. Nach dem Aufrufen der <xref:System.Data.DataRow.EndEdit%2A> -Methode und vor dem Aufruf der <xref:System.Data.DataRow.AcceptChanges%2A> -Methode, interne Darstellungen der ursprünglichen und neuen vorgeschlagenen Werte werden gespeichert. Aus diesem Grund bis zum Aufruf der <xref:System.Data.DataRow.AcceptChanges%2A>, können Sie die `version` Argument, um anzugeben, welche Version von den Wert einer Spalte, entweder müssen Sie die `DataRowVersion.Original` oder `DataRowVersion.Proposed`. Allerdings so schnell wie rufen Sie die <xref:System.Data.DataRow.AcceptChanges%2A> Methode, die Version der Spalte auf zurückgesetzt `DataRowVersion.Original`. Wenn die Zeile neu ist, können Sie auch übergeben `DataRowVersion.Default` für den Parameter, der Standardwert der Spalte abzurufen. Beim Übergeben von `DataRowVersion.Current`, die Eigenschaft gibt den aktuellen Wert, was dessen Version sein.  
  
> [!NOTE]
>  Die <xref:System.Data.DataRow.BeginEdit%2A> Methode wird implizit aufgerufen, wenn Sie den Wert eines datengebundenen Steuerelements ändern, oder wenn eine <xref:System.Data.DataRow> Objekt hinzugefügt wird die <xref:System.Data.DataRowCollection>; die <xref:System.Data.DataRow.EndEdit%2A> Methode wird implizit aufgerufen, wenn Sie die folgenden Methoden aufrufen: die <xref:System.Data.DataRow.AcceptChanges%2A> -Methode der der <xref:System.Data.DataRow> -Objekt, das <xref:System.Data.DataTable.AcceptChanges%2A> -Methode der der <xref:System.Data.DataTable> -Objekt, oder die <xref:System.Data.DataRow.CancelEdit%2A> Methode.  
  
 Im Gegensatz dazu die <xref:System.Data.DataRowVersion> Enumeration `Current` gibt die Version der Daten nach der <xref:System.Data.DataRow.EndEdit%2A> -Methode aufgerufen wurde.  
  
 Die `version` Argument dürfen nicht verwechselt werden, mit der <xref:System.Data.DataRow.RowState*> Eigenschaft. Die `version` Argument beschreibt den Status der Daten, die von der Spalte relativ zum ursprünglichen Wert der Spalte enthalten ist. Die <xref:System.Data.DataRow.RowState*> -Eigenschaft beschreibt den Zustand der gesamten Zeile relativ zu seinem übergeordneten <xref:System.Data.DataTable>.  
  
 Wenn Sie die Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme, in auftritt der <xref:System.Data.DataTable.ColumnChanging> Ereignis.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden Sie unter <xref:System.Data.DataRow.EndEdit%2A> für die Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 Im folgenden Beispiel wird den aktuellen Wert einer Spalte über die <xref:System.Data.DataRow.Item%2A> Eigenschaft der <xref:System.Data.DataRow> Objekt.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
        <exception cref="T:System.InvalidCastException">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, einen Wert für eine gelöschte Zeile festzulegen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft die angegebene Version der Daten aus der benannten Spalte ab.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Version dürfen nicht verwechselt werden, mit der <xref:System.Data.DataRow.RowState*> Eigenschaft. Die `version` Argument beschreibt den Status der Daten, die von der Spalte relativ zum ursprünglichen Wert der Spalte enthalten ist. Die <xref:System.Data.DataRow.RowState*> -Eigenschaft beschreibt den Zustand der gesamten Zeile relativ zu seinem übergeordneten <xref:System.Data.DataTable>.  
  
 Wenn Sie die Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme, in auftritt der <xref:System.Data.DataTable.ColumnChanging> Ereignis.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden Sie unter <xref:System.Data.DataRow.EndEdit%2A> für die Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 Im folgende Beispiel ruft die aktuelle Version der Daten einer ausgewählten Zelle von einem <xref:System.Windows.Forms.DataGrid> Steuerelement.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
        <exception cref="T:System.InvalidCastException">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Die Zeile wurde gelöscht.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft alle Werte für diese Zeile über ein Array ab oder legt diese fest.</summary>
        <value>Ein Array vom Typ <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft festlegen oder Abrufen der Werte für diese Zeile über ein Array verwenden. Wenn Sie diese Eigenschaft verwenden, um Werte festzulegen, muss das Array gleicher Größe und Reihenfolge der spaltenauflistung aufweisen. Übergeben von `null` in die <xref:System.Data.DataRow.ItemArray%2A> gibt an, dass kein Wert angegeben wurde.  
  
 Benutzer können generieren Ausnahmen in der <xref:System.Data.DataTable.ColumnChanging> Ereignis oder die <xref:System.Data.DataTable.RowChanging> Ereignis.  
  
   
  
## Examples  
 Die folgenden Beispiele zeigen, wie Sie abrufen und Festlegen von Werten mit der <xref:System.Data.DataRow.ItemArray%2A> Eigenschaft.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das Array ist größer als die Anzahl der Spalten in der Tabelle.</exception>
        <exception cref="T:System.InvalidCastException">Ein Wert im Array stimmt nicht mit dem <see cref="P:System.Data.DataColumn.DataType" /> in der entsprechenden <see cref="T:System.Data.DataColumn" /> überein.</exception>
        <exception cref="T:System.Data.ConstraintException">Bei einem Bearbeitungsvorgang wurde eine Einschränkung verletzt.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Bei einem Bearbeitungsvorgang wurde versucht, den Wert einer schreibgeschützten Spalte zu ändern.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Bei einem Bearbeitungsvorgang wurde versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> für das <see cref="T:System.Data.DataColumn" />-Objekts <see langword="false" /> ist.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Die Zeile wurde gelöscht.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lehnt alle Änderungen ab, die seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> an der Zeile vorgenommen wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Aufrufen der <xref:System.Data.DataRow.RejectChanges%2A> -Methode, die <xref:System.Data.DataRow.CancelEdit%2A> Methode wird implizit aufgerufen, um Änderungen zu verwerfen. Wenn <xref:System.Data.DataRow.RowState*> gelöscht oder geändert wird, wird die Zeile auf die vorherigen Werte, zurückgesetzt und <xref:System.Data.DataRow.RowState*> wird unverändert. Wenn die <xref:System.Data.DataRow.RowState*> hinzugefügt wird, wird die Zeile entfernt.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine einfache <xref:System.Data.DataTable> mit 2 Spalten und 10 Zeilen. Nachdem mehrere <xref:System.Data.DataRow> Elemente werden gelöscht, mit der <xref:System.Data.DataRow.Delete%2A> -Methode, eine der Zeilen wird wiederhergestellt, durch den Aufruf <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Fehlerbeschreibung für eine Zeile ab oder legt diese fest.</summary>
        <value>Der Text, der einen Fehler beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendet die <xref:System.Data.DataRow.HasErrors%2A> -Eigenschaft können Sie zuerst bestimmen, ob eine <xref:System.Data.DataRow> enthält Fehler.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Fehlertext für zehn Zeilen einer Tabelle angezeigt, die einem <xref:System.Windows.Forms.DataGrid> Steuerelement.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Zustand der Zeile bezüglich ihrer Beziehung zur <see cref="T:System.Data.DataRowCollection" /> ab.</summary>
        <value>Einer der <see cref="T:System.Data.DataRowState" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der <xref:System.Data.DataRow.RowState*> hängt von zwei Faktoren ab: in der Zeile, die Art des Vorgangs ausgeführt wurde und ob <xref:System.Data.DataRow.AcceptChanges%2A> für aufgerufen wurde die <xref:System.Data.DataRow>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt zuerst eine neue <xref:System.Data.DataTable> mit einer Spalte, und erstellt dann ein einzelnes <xref:System.Data.DataRow>. Als die <xref:System.Data.DataRow> erstellt, hinzugefügt, geändert und gelöscht, wird die <xref:System.Data.DataRow.RowState*> gedruckt wird.  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ändert den <see cref="P:System.Data.DataRow.RowState" /> einer <see cref="T:System.Data.DataRow" /> in <see langword="Added" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ändert den <xref:System.Data.DataRow.RowState*> einer <xref:System.Data.DataRow> in `Added`. Ist die aktuelle Zeile nicht in einem ein `Unchanged` oder ein `Added` aufweist, löst er eine <xref:System.InvalidOperationException> mit der Meldung, die `SetAdded` kann nur aufgerufen werden, auf eine `DataRow` -Instanz, auf die `RowState` ist `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Fehlerbeschreibung für eine Spalte fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Die <see cref="T:System.Data.DataColumn" />, für die die Fehlerbeschreibung festgelegt werden soll.</param>
        <param name="error">Die Fehlerbeschreibung.</param>
        <summary>Legt die Fehlerbeschreibung für eine als <see cref="T:System.Data.DataColumn" /> angegebene Spalte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um fehlerbeschreibungen zu untersuchen, verwenden die <xref:System.Data.DataRow.GetColumnError%2A> Methode.  
  
 Um zu bestimmen, ob alle Fehler für die Auflistung der Spalten vorhanden sind, verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> Eigenschaft. Daher können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode, um alle Spalten mit Fehlern abrufen.  
  
 Wenn `null` oder eine leere Zeichenfolge wird als übergeben die `error` -Parameter der <xref:System.Data.DataRow> verhält, als wäre kein Fehler festgelegt und die <xref:System.Data.DataRow.HasErrors%2A> -Eigenschaft gibt "false" zurück.  
  
 Um eine benutzerdefinierte fehlerbeschreibung für die gesamte Zeile festzulegen, verwenden die <xref:System.Data.DataRow.RowError%2A> Eigenschaft.  
  
 Um zu bestimmen, ob alle Fehler für die Auflistung der Spalten vorhanden sind, verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> Methode.  
  
 Um alle Fehler für die Auflistung der Spalten zu löschen, verwenden die <xref:System.Data.DataRow.ClearErrors%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <param name="error">Die Fehlerbeschreibung.</param>
        <summary>Legt die Fehlerbeschreibung für eine durch den Index angegebene Spalte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode wird verwendet, benutzerdefinierte fehlerbeschreibung für die angegebenen Spalten festlegen. Sie können die <xref:System.Windows.Forms.ErrorProvider> -Steuerelement den Text des Fehlers angezeigt.  
  
 Um fehlerbeschreibungen zu untersuchen, verwenden die <xref:System.Data.DataRow.GetColumnError%2A> Methode.  
  
 Um zu bestimmen, ob alle Fehler für die Auflistung der Spalten vorhanden sind, verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> Eigenschaft. Daher können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode, um alle Spalten mit Fehlern abrufen.  
  
 Wenn `null` oder eine leere Zeichenfolge wird als übergeben die `error` -Parameter der <xref:System.Data.DataRow> verhält, als wäre kein Fehler festgelegt und die <xref:System.Data.DataRow.HasErrors%2A> -Eigenschaft gibt "false" zurück.  
  
 Um eine benutzerdefinierte fehlerbeschreibung für die gesamte Zeile festzulegen, verwenden die <xref:System.Data.DataRow.RowError%2A> Eigenschaft.  
  
 Um alle Fehler für die Auflistung der Spalten zu löschen, verwenden die <xref:System.Data.DataRow.ClearErrors%2A> Methode.  
  
 Um Fehlertext festzulegen, die auf eine ganze Zeile angewendet wird, legen die <xref:System.Data.DataRow.RowError%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <param name="error">Die Fehlerbeschreibung.</param>
        <summary>Legt die Fehlerbeschreibung für eine durch den Namen angegebene Spalte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name einer Spalte wird festgelegt, mit der <xref:System.Data.DataColumn.ColumnName%2A> Eigenschaft der <xref:System.Data.DataColumn> Klasse.  
  
 Um fehlerbeschreibungen zu untersuchen, verwenden die <xref:System.Data.DataRow.GetColumnError%2A> Methode.  
  
 Um zu bestimmen, ob alle Fehler für die Auflistung der Spalten vorhanden sind, verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> Eigenschaft. Daher können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> Methode, um alle Spalten mit Fehlern abrufen.  
  
 Wenn `null` oder eine leere Zeichenfolge wird als übergeben die `error` -Parameter der <xref:System.Data.DataRow> verhält, als wäre kein Fehler festgelegt und die <xref:System.Data.DataRow.HasErrors%2A> -Eigenschaft gibt "false" zurück.  
  
 Um eine benutzerdefinierte fehlerbeschreibung für die gesamte Zeile festzulegen, verwenden die <xref:System.Data.DataRow.RowError%2A> Eigenschaft.  
  
 Um zu bestimmen, ob alle Fehler für die Auflistung der Spalten vorhanden sind, verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> Methode.  
  
 Um alle Fehler für die Auflistung der Spalten zu löschen, verwenden die <xref:System.Data.DataRow.ClearErrors%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ändert den <see cref="P:System.Data.DataRow.RowState" /> einer <see cref="T:System.Data.DataRow" /> in <see langword="Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ändert den <xref:System.Data.DataRow.RowState*> einer <xref:System.Data.DataRow> in `Modified`. Ist die aktuelle Zeile nicht in einem ein `Unchanged` oder ein `Added` aufweist, löst er eine <xref:System.InvalidOperationException> mit der Meldung, die `SetModified` kann nur aufgerufen werden, auf eine `DataRow` -Instanz, auf die `RowState` ist `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Legt den Wert der angegebenen <see cref="T:System.Data.DataColumn" /> auf einen NULL-Wert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Data.DataRow.IsNull%2A> Methode, um zu bestimmen, ob eine Spalte einen null-Wert enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">Die neue übergeordnete <see cref="T:System.Data.DataRow" />.</param>
        <summary>Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> mit der angegebenen neuen übergeordneten <see cref="T:System.Data.DataRow" /> fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">Die neue übergeordnete <see cref="T:System.Data.DataRow" />.</param>
        <param name="relation">Die zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> mit der angegebenen neuen übergeordneten <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die übergeordnete Zeile einer bestimmten untergeordneten Zeile.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Eine der Zeilen gehört nicht zu einer Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">Eine der Zeilen ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die Beziehung gehört nicht zur <see cref="T:System.Data.DataRelationCollection" /> des <see cref="T:System.Data.DataSet" />-Objekts.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete <see cref="T:System.Data.DataTable" /> der Beziehung ist nicht die Tabelle, zu der diese Zeile gehört.</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Data.DataTable" /> ab, für die diese Zeile über ein Schema verfügt.</summary>
        <value>Die <see cref="T:System.Data.DataTable" />, zu der diese Zeile gehört.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Data.DataRow> gehört nicht unbedingt zur Auflistung der Zeilen einer Tabelle. Dieses Verhalten tritt auf, wenn die <xref:System.Data.DataRow> erstellt, aber nicht hinzugefügt wurden die <xref:System.Data.DataRowCollection>. Wenn die <xref:System.Data.DataRow.RowState*> -Eigenschaft gibt `DataRowState.Detached`, die Zeile ist nicht in jeder Auflistung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.Table%2A> Eigenschaft zur Rückgabe eines Verweises auf der Columns-Auflistung der <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>