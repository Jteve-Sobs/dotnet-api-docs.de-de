<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a17929f3b2171714882317275fb3e250179ff459" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69122649" /></Metadata><TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Datenzeile in einer <see cref="T:System.Data.DataTable" /> dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Data.DataRow> - <xref:System.Data.DataColumn> Objekt und das-Objekt <xref:System.Data.DataTable>sind primäre Komponenten eines. Verwenden Sie <xref:System.Data.DataRow> das-Objekt und dessen Eigenschaften und Methoden, um die Werte <xref:System.Data.DataTable>im abzurufen und zu evaluieren und zu aktualisieren und zu aktualisieren. Der <xref:System.Data.DataRowCollection> stellt die eigentlichen <xref:System.Data.DataRow> -Objekte <xref:System.Data.DataTable> <xref:System.Data.DataColumn> <xref:System.Data.DataTable>in der dar, und enthältdie-Objekte,diedasSchemavonbeschreiben.<xref:System.Data.DataColumnCollection> Verwenden Sie die <xref:System.Data.DataRow.Item%2A> überladene-Eigenschaft, um den Wert <xref:System.Data.DataColumn>eines zurückzugeben oder festzulegen.  
  
 Verwenden Sie <xref:System.Data.DataRow.HasVersion%2A> die <xref:System.Data.DataRow.IsNull%2A> -Eigenschaft und die-Eigenschaft, um den Status eines bestimmten Zeilen <xref:System.Data.DataRow.RowState*> Werts zu bestimmen, und die-Eigenschaft, um den Zustand <xref:System.Data.DataTable>der Zeile relativ zum übergeordneten Element zu bestimmen.  
  
 Verwenden Sie die <xref:System.Data.DataTable.NewRow%2A> - <xref:System.Data.DataRow>Methode des <xref:System.Data.DataTable> -Objekts, um ein neues zu erstellen. Nachdem <xref:System.Data.DataRow> <xref:System.Data.DataRowCollection.Add%2A> Sieeinen<xref:System.Data.DataRow> neuen erstellt haben, verwenden Sie die-Methode, um das neue hinzuzufügen. <xref:System.Data.DataRowCollection> Zum Schluss wird die <xref:System.Data.DataRow.AcceptChanges%2A> -Methode <xref:System.Data.DataTable> des-Objekts aufgerufen, um das Hinzufügen zu bestätigen. Weitere Informationen zum Hinzufügen von Daten zu <xref:System.Data.DataTable>einem finden Sie unter [Hinzufügen von Daten zu einer](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md)Datentabelle.  
  
 Sie <xref:System.Data.DataRow> können einen aus dem <xref:System.Data.DataRowCollection> löschen <xref:System.Data.DataRowCollection>, indem Sie <xref:System.Data.DataRowCollection.Remove%2A> die-Methode von aufrufen, oder indem <xref:System.Data.DataRow.Delete%2A> Sie die- <xref:System.Data.DataRow> Methode des-Objekts aufrufen. Die <xref:System.Data.DataRowCollection.Remove%2A> -Methode entfernt die Zeile aus der Auflistung. Im Gegensatz dazu <xref:System.Data.DataRow.Delete%2A> markiert den <xref:System.Data.DataRow> zum Entfernen von. Das eigentliche Entfernen tritt auf, wenn <xref:System.Data.DataRow.AcceptChanges%2A> Sie die-Methode aufzurufen. Durch Aufrufen <xref:System.Data.DataRow.Delete%2A>von können Sie Programm gesteuert überprüfen, welche Zeilen zum Entfernen markiert sind, bevor Sie Sie tatsächlich löschen. Weitere Informationen finden Sie unter [DataRow-Löschung](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine neue <xref:System.Data.DataRow> erstellt, indem <xref:System.Data.DataTable.NewRow%2A> die-Methode <xref:System.Data.DataTable> des-Objekts aufgerufen wird.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Dieser Typ ist für multithreadlesevorgänge sicher. Sie müssen alle Schreibvorgänge synchronisieren.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Verwenden von Datasets in ADO.net</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">der Generator.</param>
        <summary>Initialisiert eine neue Instanz von DataRow. Erstellt eine Zeile aus dem Generator. Nur zur internen Verwendung.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt einen Commit für alle Änderungen aus, die an dieser Zeile seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> vorgenommen wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Aufrufen <xref:System.Data.DataRow.AcceptChanges%2A>von wird <xref:System.Data.DataRow.EndEdit%2A> die-Methode implizit aufgerufen, um alle Änderungen zu beenden. Wenn der <xref:System.Data.DataRow.RowState*> der Zeile hinzugefügt oder geändert wurde, wird <xref:System.Data.DataRow.RowState*> der unverändert. Wenn der <xref:System.Data.DataRow.RowState*> gelöscht wurde, wird die Zeile entfernt.  
  
 Weitere Informationen finden Sie unter der <xref:System.Data.DataRow.BeginEdit%2A>-Methode.  
  
 Die <xref:System.Data.DataTable> -Klasse verfügt auch <xref:System.Data.DataTable.AcceptChanges%2A> über eine-Methode, die Auswirkungen auf Änderungen an der gesamten Tabelle hat. Weitere Informationen und ein Codebeispiel, in dem das akzeptieren und ablehnen von Änderungen an einzelnen Daten Zeilen veranschaulicht wird, finden Sie unter " [Akzeptanz Changes" und "RejectChanges](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md)".  
  
   
  
## Examples  
 Im folgenden Beispiel wird zunächst eine neue <xref:System.Data.DataTable> mit einer Spalte erstellt, und anschließend wird ein <xref:System.Data.DataRow>einzelner erstellt. Wenn erstellt <xref:System.Data.DataRow> , hinzugefügt, geändert und gelöscht wird <xref:System.Data.DataRow.RowState*> , wird das zugehörige gedruckt.  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Verwenden von Datasets in ADO.net</related>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Startet einen Bearbeitungsvorgang für ein <see cref="T:System.Data.DataRow" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Data.DataRow.BeginEdit%2A> die-Methode, <xref:System.Data.DataRow> um ein in den Bearbeitungsmodus zu versetzen. In diesem Modus werden Ereignisse vorübergehend angehalten, sodass der Benutzer Änderungen an mehr als einer Zeile vornehmen kann, ohne Validierungsregeln auszulösen. Wenn Sie z. b. sicherstellen müssen, dass der Wert der-Spalte für einen Gesamtbetrag gleich den Werten für die Spalten "Debit" und "Credit" in einer Zeile ist, können Sie jede Zeile in den Bearbeitungsmodus versetzen, um die Überprüfung der Zeilen Werte anzuhalten, bis der Benutzer versucht, die Werte zu committen.  
  
 Die <xref:System.Data.DataRow.BeginEdit%2A> -Methode wird implizit aufgerufen, wenn der Benutzer den Wert eines Daten gebundenen Steuer Elements ändert. <xref:System.Data.DataRow.EndEdit%2A> die-Methode wird implizit aufgerufen, wenn <xref:System.Data.DataTable.AcceptChanges%2A> Sie die- <xref:System.Data.DataTable> Methode für das-Objekt aufrufen. In diesem Bearbeitungsmodus speichert die <xref:System.Data.DataRow> Darstellungen der ursprünglichen und neuen vorgeschlagenen Werte. Solange <xref:System.Data.DataRow.EndEdit%2A> die-Methode nicht aufgerufen wurde, können Sie daher entweder die ursprüngliche oder die vorgeschlagene Version abrufen, indem Sie entweder `DataRowVersion.Original` oder `DataRowVersion.Proposed` für den `version` -Parameter der <xref:System.Data.DataRow.Item%2A> -Eigenschaft übergeben. Sie können zu diesem Zeitpunkt auch alle bearbeitbaren Änderungen abbrechen, <xref:System.Data.DataRow.CancelEdit%2A> indem Sie die-Methode aufrufen.  
  
 Um festzustellen, ob die Zeile einen ursprünglichen oder vorgeschlagenen Wert enthält, <xref:System.Data.DataRow.HasVersion%2A> müssen Sie die-Methode aufzurufen.  
  
> [!NOTE]
>  Die <xref:System.Data.DataRow.BeginEdit%2A> -Methode hält <xref:System.Data.DataTable.RowChanging> Ereignisse vorübergehend an, der `delete` -Vorgang jedoch nicht.  
  
   
  
## Examples  
 Im Beispiel wird ein einfaches <xref:System.Data.DataTable> -Objekt <xref:System.Data.DataColumn> mit einem <xref:System.Data.DataRow> -und fünf- <xref:System.Data.UniqueConstraint>Objekten und einem erstellt. Außerdem <xref:System.Data.DataTable.RowChanged> wird ein-Ereignishandler hinzugefügt, der überwacht werden soll, wenn der Wert der Zeile geändert wird. Nach dem <xref:System.Data.DataRow.BeginEdit%2A> Aufrufen von für die vorhandenen Zeilen werden die Einschränkung und das Ereignis vorübergehend deaktiviert, und die ursprünglichen und vorgeschlagenen Werte werden gedruckt. <xref:System.Data.DataRow.BeginEdit%2A> Wird erneut aufgerufen, um zwei Zeilen auf denselben Wert festzulegen. Wenn <xref:System.Data.DataRow.EndEdit%2A> aufgerufen wird, wird <xref:System.Data.UniqueConstraint> der für die identischen Werte erzwungen.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Die Methode wurde für eine gelöschte Zeile aufgerufen.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Verwenden von Datasets in ADO.net</related>
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bricht den aktuellen Bearbeitungsvorgang für die Zeile ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter der <xref:System.Data.DataRow.BeginEdit%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Wert einer Spalte in der letzten Zeile eines <xref:System.Windows.Forms.DataGrid> -Steuer Elements bearbeitet. Im Beispiel <xref:System.Data.DataRow.BeginEdit%2A>werden die Methoden <xref:System.Data.DataRow.EndEdit%2A>,, verwendet, um den Wert der Spalte zu bearbeiten und die Änderung in der Zeile zu übertragen.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Verwenden von Datasets in ADO.net</related>
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die Fehler für die Zeile. Dazu zählen auch der <see cref="P:System.Data.DataRow.RowError" /> und Fehler, die mit <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" /> festgelegt wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden <xref:System.Data.DataRow.SetColumnError%2A> Sie <xref:System.Data.DataRow.GetColumnError%2A> und, um Fehler für einzelne Spalten festzulegen und zurückzugeben.  
  
 Legen Sie <xref:System.Data.DataRow.RowError%2A> die-Eigenschaft fest, um einen Fehler festzulegen, der für die gesamte Zeile gilt.  
  
 Verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> -Methode, um zu bestimmen, ob für die Columns-Auflistung Fehler vorhanden sind. Folglich können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> -Methode verwenden, um alle Spalten mit Fehlern abzurufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.HasErrors%2A> , um nach Fehlern zu suchen. Wenn die Zeile Fehler aufweist, gibt <xref:System.Data.DataRow.GetColumnsInError%2A> die Methode das Array von Spalten mit Fehlern zurück, die dann aufgelöst werden können. Anschließend <xref:System.Data.DataRow.ClearErrors%2A> wird die-Methode aufgerufen, um alle Fehler zu löschen.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Verwenden von Datasets in ADO.net</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht die <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der <xref:System.Data.DataRow.RowState*> der Zeile hinzugefügt wird, wird <xref:System.Data.DataRow.RowState*> `Detached` die Zeile, und die Zeile wird aus der Tabelle entfernt, <xref:System.Data.DataRow.AcceptChanges%2A>wenn aufgerufen wird.  
  
 Der <xref:System.Data.DataRow.RowState*> <xref:System.Data.DataRow.Delete%2A> <xref:System.Data.DataRow>wird `Deleted` verwendet, nachdem Sie die-Methode für eine vorhandene verwendet haben. Es bleibt `Deleted` , bis Sie <xref:System.Data.DataRow.AcceptChanges%2A>aufzurufen. Zu diesem Zeitpunkt wird der <xref:System.Data.DataRow> aus der Tabelle entfernt.  
  
 <xref:System.Data.DataRow.Delete%2A>sollte nicht in einer foreach-Schleife aufgerufen werden, während ein <xref:System.Data.DataRowCollection> -Objekt durchlaufen wird. <xref:System.Data.DataRow.Delete%2A>ändert den Zustand der Auflistung.  
  
 Eine gelöschte Zeile kann wieder hergestellt werden, <xref:System.Data.DataRow.RejectChanges%2A>indem aufgerufen wird.  
  
> [!NOTE]
>  Die <xref:System.Data.DataRow.BeginEdit%2A> -Methode hält <xref:System.Data.DataTable.RowChanging> Ereignisse vorübergehend an, der Löschvorgang jedoch nicht.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine einfache <xref:System.Data.DataTable> mit zwei Spalten und zehn Zeilen erstellt. Nachdem Sie mehrere <xref:System.Data.DataRow> Elemente mit der <xref:System.Data.DataRow.Delete%2A> -Methode gelöscht haben, wird eine der Zeilen durch Aufrufen <xref:System.Data.DataRow.RejectChanges%2A>von wieder hergestellt.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Die <see cref="T:System.Data.DataRow" /> wurde bereits gelöscht.</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Verwenden von Datasets in ADO.net</related>
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet den Bearbeitungsvorgang an der Zeile.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die-Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme im <xref:System.Data.DataTable.RowChanging> Ereignis auftritt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.EndEdit%2A> -Methode verwendet, um das Bearbeiten <xref:System.Data.DataRow> eines-Werts zu beenden, wenn die Validierungsfunktion true zurückgibt.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Die Methode wurde innerhalb des <see cref="E:System.Data.DataTable.RowChanging" />-Ereignisses aufgerufen.</exception>
        <exception cref="T:System.Data.ConstraintException">Bei dem Bearbeitungsvorgang wurde eine Einschränkung verletzt.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Die Zeile gehört zu der Tabelle, und beim Bearbeitungsvorgang wurde versucht, den Wert einer schreibgeschützten Spalte zu ändern.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Beim Bearbeitungsvorgang wurde versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Verwenden von Datasets in ADO.net</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die untergeordneten Zeilen einer <see cref="T:System.Data.DataRow" /> ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die untergeordneten Zeilen dieser <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ChildRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.GetChildRows%2A> , um <xref:System.Data.DataRow> die untergeordneten-Objekte für <xref:System.Data.DataRelation> jedes unter <xref:System.Data.DataTable>geordnete Element in einer zurückzugeben. Anschließend wird der Wert jeder Spalte in der Zeile ausgegeben.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">Die Beziehung ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Verwenden von Datasets in ADO.net</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> der zu verwendenden <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ChildRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ChildRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
 Verwenden Sie <xref:System.Data.DataRow.HasVersion%2A> die-Eigenschaft, um <xref:System.Data.DataRowVersion> zu bestimmen, ob die gewünschte vorhanden ist.  
  
 Wenn <xref:System.Data.DataRowVersion.Default> angegeben wird, hängt die verwendete Version vom der Zeile ab <xref:System.Data.DataRow.RowState*> , für die `GetChildRows` aufgerufen wird. Wenn die Zeile, für `GetChildRows` die aufgerufen wird, `RowState` den `Modified`von `New`, oder `Unchanged`aufweist, <xref:System.Data.DataRowVersion.Current> wird die Version der Zeile zum Abrufen verwandter untergeordneter Zeilen mit übereinstimmenden Werten in ihren aktuellen Versionen verwendet. Wenn die Zeile, für `GetChildRows` die aufgerufen wird, `RowState` einen `Deleted`von aufweist <xref:System.Data.DataRowVersion.Original> , wird die Version der Zeile zum Abrufen verwandter untergeordneter Zeilen mit übereinstimmenden Werten in ihren ursprünglichen Versionen verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.GetChildRows%2A> , um <xref:System.Data.DataRow> die untergeordneten-Objekte für <xref:System.Data.DataRelation> jedes unter <xref:System.Data.DataTable>geordnete Element in einer zurückzugeben. Anschließend wird der Wert jeder Spalte mit der angegebenen Version in der Zeile gedruckt.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
        <related type="Article" href="~/docs/framework/data/adonet/dataset-datatable-dataview/index.md">Verwenden von Datasets in ADO.net</related>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> der zu verwendenden <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und einer <see cref="T:System.Data.DataRelation" /> die untergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ChildRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
 Verwenden Sie <xref:System.Data.DataRow.HasVersion%2A> die-Eigenschaft, um <xref:System.Data.DataRowVersion> zu bestimmen, ob die gewünschte vorhanden ist.  
  
 Wenn <xref:System.Data.DataRowVersion.Default> angegeben wird, hängt die verwendete Version vom der Zeile ab <xref:System.Data.DataRow.RowState*> , für die `GetChildRows` aufgerufen wird. Wenn die Zeile, für `GetChildRows` die aufgerufen wird, `RowState` den `Modified`von `New`, oder `Unchanged`aufweist, <xref:System.Data.DataRowVersion.Current> wird die Version der Zeile zum Abrufen verwandter untergeordneter Zeilen mit übereinstimmenden Werten in ihren aktuellen Versionen verwendet. Wenn die Zeile, für `GetChildRows` die aufgerufen wird, `RowState` einen `Deleted`von aufweist <xref:System.Data.DataRowVersion.Original> , wird die Version der Zeile zum Abrufen verwandter untergeordneter Zeilen mit übereinstimmenden Werten in ihren ursprünglichen Versionen verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die Fehlerbeschreibung für eine Spalte ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Ruft die Fehlerbeschreibung der angegebenen <see cref="T:System.Data.DataColumn" /> ab.</summary>
        <returns>Der Text der Fehlerbeschreibung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Data.DataRow.SetColumnError%2A> die-Methode, um Spalten Fehler festzulegen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> -Methode, um zu bestimmen, ob für die Columns-Auflistung Fehler vorhanden sind. Folglich können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> -Methode verwenden, um alle Spalten mit Fehlern abzurufen. Alternativ <xref:System.Data.DataTable> gibt die <xref:System.Data.DataTable.GetErrors%2A> -Methode von alle Zeilen mit Fehlern zurück.  
  
 Verwenden Sie die <xref:System.Data.DataRow.ClearErrors%2A> -Methode, um alle Fehler für die Columns-Auflistung zu löschen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>festgelegt.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <summary>Ruft die Fehlerbeschreibung für die durch den Index angegebene Spalte ab.</summary>
        <returns>Der Text der Fehlerbeschreibung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Data.DataRow.SetColumnError%2A> die-Methode, um Spalten Fehler festzulegen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> -Methode, um zu bestimmen, ob für die Columns-Auflistung Fehler vorhanden sind. Folglich können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> -Methode verwenden, um alle Spalten mit Fehlern abzurufen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.ClearErrors%2A> -Methode, um alle Fehler für die Columns-Auflistung zu löschen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>festgelegt.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <summary>Ruft die Fehlerbeschreibung für eine durch den Namen angegebene Spalte ab.</summary>
        <returns>Der Text der Fehlerbeschreibung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Data.DataRow.SetColumnError%2A> die-Methode, um Spalten Fehler festzulegen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> -Methode, um zu bestimmen, ob für die Columns-Auflistung Fehler vorhanden sind. Folglich können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> -Methode verwenden, um alle Spalten mit Fehlern abzurufen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.ClearErrors%2A> -Methode, um alle Fehler für die Columns-Auflistung zu löschen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>festgelegt.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ein Array von Spalten ab, die Fehler enthalten.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten, die Fehler enthalten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Data.DataRow.GetColumnsInError%2A> dem können Sie die Anzahl von <xref:System.Data.DataColumn> Objekten verringern, die für Fehler verarbeitet werden müssen, indem nur die Spalten zurückgegeben werden, die einen Fehler aufweisen. Fehler können mit der <xref:System.Data.DataRow.SetColumnError%2A> -Methode auf einzelne Spalten festgelegt werden. Um die Verarbeitungs Anzahl weiter zu reduzieren, überprüfen <xref:System.Data.DataRow.HasErrors%2A> Sie die- <xref:System.Data.DataRow> Eigenschaft der-Klasse, <xref:System.Data.DataRow> um zu bestimmen, <xref:System.Data.DataRow.GetColumnsInError%2A>ob eine vor dem Aufrufen von Fehler aufweist.  
  
 Verwenden Sie <xref:System.Data.DataRow.ClearErrors%2A> die-Methode, um alle Fehler in der Zeile zu löschen. Dies schließt <xref:System.Data.DataRow.RowError%2A> ein.  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.HasErrors%2A> , um nach Fehlern zu suchen. Wenn die Zeile Fehler aufweist, gibt <xref:System.Data.DataRow.GetColumnsInError%2A> die Methode das Array von Spalten mit Fehlern zurück, die dann aufgelöst werden können. Anschließend <xref:System.Data.DataRow.ClearErrors%2A> wird die-Methode aufgerufen, um alle Fehler zu löschen.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem <xref:System.Data.DataSet>wird die-Auflistung aller über <xref:System.Data.DataRelation> geordneten Objekte für das DataSet von der <xref:System.Data.DataRow.GetParentRows%2A> -Methode zurückgegeben.  
  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ParentRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.GetParentRow%2A> , um <xref:System.Data.DataRow> die untergeordneten-Objekte für <xref:System.Data.DataRelation> jedes unter <xref:System.Data.DataTable>geordnete Element in einer zurückzugeben. Anschließend wird der Wert jeder Spalte in der Zeile ausgegeben.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <paramref name="relation" /> gehört nicht zur <see cref="T:System.Data.DataTable" />.  
  
- oder -

Die Zeile ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Diese Zeile gehört nicht zur untergeordneten Tabelle des <see cref="T:System.Data.DataRelation" />-Objekts.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer Tabelle.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem <xref:System.Data.DataSet>wird die-Auflistung aller über <xref:System.Data.DataRelation> geordneten Objekte für das DataSet von der <xref:System.Data.DataRow.GetParentRows%2A> -Methode zurückgegeben.  
  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ParentRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.GetParentRow%2A> , um einen Wert aus jeder übergeordneten Zeile jedes <xref:System.Data.DataRow> in einem <xref:System.Data.DataTable>auszugeben.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem <xref:System.Data.DataSet>wird die-Auflistung aller über <xref:System.Data.DataRelation> geordneten Objekte für das DataSet von der <xref:System.Data.DataRow.GetParentRows%2A> -Methode zurückgegeben.  
  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ParentRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
 Verwenden Sie <xref:System.Data.DataRow.HasVersion%2A> die-Eigenschaft, um <xref:System.Data.DataRowVersion> zu bestimmen, ob die gewünschte vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.GetParentRow%2A> , um <xref:System.Data.DataRow> die untergeordneten-Objekte für <xref:System.Data.DataRelation> jedes unter <xref:System.Data.DataTable>geordnete Element in einer zurückzugeben. Anschließend wird der Wert jeder Spalte in der Zeile ausgegeben.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Zeile ist <see langword="null" />.  
  
- oder -

Die <paramref name="relation" /> gehört nicht zu den übergeordneten Beziehungen dieser Tabelle.</exception>
        <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und der <see cref="T:System.Data.DataRelation" /> die übergeordnete Zeile einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Die übergeordnete <see cref="T:System.Data.DataRow" /> der aktuellen Zeile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem <xref:System.Data.DataSet>wird die-Auflistung aller über <xref:System.Data.DataRelation> geordneten Objekte für das DataSet von der <xref:System.Data.DataRow.GetParentRows%2A> -Methode zurückgegeben.  
  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ParentRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
 Verwenden Sie <xref:System.Data.DataRow.HasVersion%2A> die-Eigenschaft, um <xref:System.Data.DataRowVersion> zu bestimmen, ob die gewünschte vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.GetParentRow%2A> , um einen Wert aus jeder übergeordneten Zeile jedes <xref:System.Data.DataRow> in einem <xref:System.Data.DataTable>auszugeben.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Eine untergeordnete Zeile verfügt über mehrere übergeordnete Elemente.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die übergeordneten Zeilen einer <see cref="T:System.Data.DataRow" /> ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem <xref:System.Data.DataSet>wird die-Auflistung aller über <xref:System.Data.DataRelation> geordneten Objekte für das DataSet von der <xref:System.Data.DataRow.GetParentRows%2A> -Methode zurückgegeben.  
  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ParentRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.GetParentRows%2A> , um <xref:System.Data.DataRow> die untergeordneten-Objekte für <xref:System.Data.DataRelation> jedes unter <xref:System.Data.DataTable>geordnete Element in einer zurückzugeben. Anschließend wird der Wert jeder Spalte in der Zeile ausgegeben.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="T:System.Data.DataRelation" /> gehört nicht zum <see cref="T:System.Data.DataSet" /> dieser Zeile.</exception>
        <exception cref="T:System.ArgumentNullException">Die Zeile ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRelation" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem <xref:System.Data.DataSet>wird die-Auflistung aller über <xref:System.Data.DataRelation> geordneten Objekte für das DataSet von der <xref:System.Data.DataRow.GetParentRows%2A> -Methode zurückgegeben.  
  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ParentRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Der zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt.</param>
        <summary>Ruft unter Verwendung der angegebenen <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem <xref:System.Data.DataSet>wird die-Auflistung aller über <xref:System.Data.DataRelation> geordneten Objekte für das DataSet von der <xref:System.Data.DataRow.GetParentRows%2A> -Methode zurückgegeben.  
  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ParentRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
 Verwenden Sie <xref:System.Data.DataRow.HasVersion%2A> die-Eigenschaft, um <xref:System.Data.DataRowVersion> zu bestimmen, ob die gewünschte vorhanden ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.GetParentRows%2A> , um <xref:System.Data.DataRow> die untergeordneten-Objekte für <xref:System.Data.DataRelation> jedes unter <xref:System.Data.DataTable>geordnete Element in einer zurückzugeben. Anschließend wird der Wert jeder Spalte in der Zeile ausgegeben.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="T:System.Data.DataRelation" /> gehört nicht zum <see cref="T:System.Data.DataSet" /> dieser Zeile.</exception>
        <exception cref="T:System.ArgumentNullException">Die Zeile ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete Tabelle der Beziehung ist nicht die Tabelle, zu der die Zeile gehört.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu einer <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">Der <see cref="P:System.Data.DataRelation.RelationName" /> einer <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Version der abzurufenden Daten angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft unter Verwendung des angegebenen <see cref="T:System.Data.DataRow" /> einer <see cref="P:System.Data.DataRelation.RelationName" /> und der <see cref="T:System.Data.DataRelation" /> die übergeordneten Zeilen einer <see cref="T:System.Data.DataRowVersion" /> ab.</summary>
        <returns>Ein Array von <see cref="T:System.Data.DataRow" />-Objekten oder ein Array der Länge 0.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem <xref:System.Data.DataSet>wird die-Auflistung aller über <xref:System.Data.DataRelation> geordneten Objekte für das DataSet von der <xref:System.Data.DataRow.GetParentRows%2A> -Methode zurückgegeben.  
  
 Enthält auch eine Auflistung von <xref:System.Data.DataRelation> -Objekten, die von der <xref:System.Data.DataTable.ParentRelations%2A> -Eigenschaft zurückgegeben wird. <xref:System.Data.DataTable>  
  
 Verwenden Sie <xref:System.Data.DataRow.HasVersion%2A> die-Eigenschaft, um <xref:System.Data.DataRowVersion> zu bestimmen, ob die gewünschte vorhanden ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Beziehung und die Zeile gehören nicht zu derselben Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="relation" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <see cref="T:System.Data.DataRowVersion" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine Zeile Fehler enthält.</summary>
        <value><see langword="true" />, wenn die Zeile einen Fehler enthält, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors`gibt `true` zurück, <xref:System.Data.DataColumn> wenn ein beliebiges Objekt in der Zeile einen Fehler enthält <xref:System.Data.DataRow.RowError%2A> , oder, <xref:System.Data.DataRow> wenn die-Eigenschaft von keine leere Zeichenfolge ist.  
  
 Beim Validieren von Daten können Sie für jede Spalte in einer Zeile einen Fehler festlegen. Eine solche Spalte wird, wenn Sie im <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> -Steuerelement angezeigt wird, mit einem roten Ausrufezeichen gekennzeichnet, um dem Benutzer zu signalisieren, dass die Spalte fehlerhaft ist.  
  
 Verwenden <xref:System.Data.DataRow.SetColumnError%2A> Sie, um für eine beliebige Spalte einen Fehler festzulegen.  
  
 Verwenden Sie <xref:System.Data.DataRow.GetColumnError%2A> die `GetColumnsInError` Methoden und, um Spalten mit Fehlern zurückzugeben.  
  
 Die <xref:System.Data.DataRow.ClearErrors%2A> -Methode löscht alle Fehler für die Zeile.  
  
   
  
## Examples  
 Im folgenden Beispiel wird verwendet <xref:System.Data.DataRow.HasErrors%2A> , um nach Fehlern zu suchen. Wenn die Zeile Fehler aufweist, gibt <xref:System.Data.DataRow.GetColumnsInError%2A> die Methode das Array von Spalten mit Fehlern zurück, die dann aufgelöst werden können. Anschließend <xref:System.Data.DataRow.ClearErrors%2A> wird die-Methode aufgerufen, um alle Fehler zu löschen.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Zeilenversion angibt.</param>
        <summary>Ruft einen Wert ab, der angibt, ob eine angegebene Version vorhanden ist.</summary>
        <returns><see langword="true" />, wenn die Version vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie unter der <xref:System.Data.DataRow.BeginEdit%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.HasVersion%2A> -Methode verwendet, um zu bestimmen, ob der aktuelle Wert einer Spalte und der vorgeschlagene Wert identisch sind. Wenn dies der Fall ist, wird die Bearbeitung abgebrochen. Andernfalls wird die <xref:System.Data.DataRow.AcceptChanges%2A> -Methode aufgerufen, um die Bearbeitung zu beenden.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene Spalte einen NULL-Wert enthält.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene <see cref="T:System.Data.DataColumn" /> einen NULL-Wert enthält.</summary>
        <returns><see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird jede Spalte jeder Zeile in jeder Tabelle eines <xref:System.Data.DataSet>ausgegeben. Wenn die Zeile auf einen NULL-Wert festgelegt ist, wird der Wert nicht gedruckt.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die Spalte am angegebenen Index einen NULL-Wert enthält.</summary>
        <returns><see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird der Wert einer-Spalte in einen NULL-Wert geändert, und anschließend <xref:System.Data.DataRow.IsNull%2A> wird mithilfe der-Methode bestimmt, ob der Wert NULL ist.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Dem durch <paramref name="columnIndex" /> angegebenen Index entspricht keine Spalte.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die benannte Spalte einen NULL-Wert enthält.</summary>
        <returns><see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird der Wert einer-Spalte in einen NULL-Wert geändert, und anschließend <xref:System.Data.DataRow.IsNull%2A> wird mithilfe der-Methode bestimmt, ob der Wert NULL ist.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="columnName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die angegebene <see cref="T:System.Data.DataColumn" /> und <see cref="T:System.Data.DataRowVersion" /> einen NULL-Wert enthält.</summary>
        <returns><see langword="true" />, wenn die Spalte einen NULL-Wert enthält, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="column" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">Die Zeile verfügt nicht über die angeforderte <paramref name="version" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft die Daten aus einer angegebenen Spalte ab oder legt diese fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />, der die Daten enthält.</param>
        <summary>Ruft die in der angegebenen <see cref="T:System.Data.DataColumn" /> gespeicherten Daten ab oder legt diese fest.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die-Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme im <xref:System.Data.DataTable.ColumnChanging> Ereignis auftritt.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden <xref:System.Data.DataRow.EndEdit%2A> Sie unter Informationen zu den Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 In den folgenden Beispielen wird veranschaulicht, wie <xref:System.Data.DataRow.Item%2A> die-Eigenschaft verwendet wird, um den Wert eines bestimmten Spalten Indexes zu erhalten und festzulegen. Im ersten Beispiel wird der Wert der ersten Spalte in einer beliebigen Zeile abgerufen, auf die ein Benutzer <xref:System.Windows.Forms.DataGrid> in einem-Steuerelement klickt. Die zweite legt einen Wert fest, der als Argument an die-Methode übermittelt wird.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Spalte gehört nicht zu dieser Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">Die <paramref name="column" /> ist NULL.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, einen Wert für eine gelöschte Zeile festzulegen.</exception>
        <exception cref="T:System.InvalidCastException">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <summary>Ruft die Daten aus der durch den Index angegebenen Spalte ab oder legt diese fest.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die-Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme im <xref:System.Data.DataTable.ColumnChanging> Ereignis auftritt.  
  
 Wenn dies eine Bearbeitung ist, finden <xref:System.Data.DataRow.EndEdit%2A> Sie unter Informationen zu den Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 In den folgenden Beispielen wird veranschaulicht, wie <xref:System.Data.DataRow.Item%2A> die-Eigenschaft verwendet wird, um den Wert eines bestimmten Spalten Indexes zu erhalten und festzulegen. Im ersten Beispiel wird der Wert der ersten Spalte in einer beliebigen Zeile abgerufen, auf die ein Benutzer <xref:System.Windows.Forms.DataGrid> in einem-Steuerelement klickt.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn Sie versuchen, einen Wert in einer gelöschten Zeile festzulegen.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
        <exception cref="T:System.InvalidCastException">Wird ausgelöst, wenn Sie einen Wert festlegen und der <see cref="T:System.Type" /> des neuen Werts nicht mit dem <see cref="P:System.Data.DataColumn.DataType" /> übereinstimmt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <summary>Ruft die Daten aus der durch den Namen angegebenen Spalte ab oder legt diese fest.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die-Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme im <xref:System.Data.DataTable.ColumnChanging> Ereignis auftritt.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden <xref:System.Data.DataRow.EndEdit%2A> Sie unter Informationen zu den Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 In den folgenden Beispielen wird veranschaulicht, wie <xref:System.Data.DataRow.Item%2A> die-Eigenschaft verwendet wird, um den Wert eines bestimmten Spalten Indexes zu erhalten und festzulegen. Im ersten Beispiel wird der Wert der ersten Spalte in einer beliebigen Zeile abgerufen, auf die ein Benutzer <xref:System.Windows.Forms.DataGrid> in einem-Steuerelement klickt. Die zweite legt einen Wert fest, der als Argument an die-Methode übermittelt wird.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Wird ausgelöst, wenn Sie versuchen, einen Wert in einer gelöschten Zeile festzulegen.</exception>
        <exception cref="T:System.InvalidCastException">Tritt auf, wenn Sie einen Wert festlegen, dessen <see cref="T:System.Type" /> nicht mit <see cref="P:System.Data.DataColumn.DataType" /> übereinstimmt.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Tritt auf, wenn Sie versuchen, einen NULL-Wert in eine Spalte einzufügen, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> zu <see langword="false" /> festgelegt ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Eine <see cref="T:System.Data.DataColumn" />, die Informationen über die Spalte enthält.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft die angegebene Version der Daten aus der angegebenen <see cref="T:System.Data.DataColumn" /> ab.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `version` sollte nicht mit der <xref:System.Data.DataRow.RowState*> -Eigenschaft verwechselt werden. Das `version` -Argument beschreibt den Zustand der in der Spalte enthaltenen Daten relativ zum ursprünglichen Wert der Spalte.  
  
 Wenn Sie die-Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme im <xref:System.Data.DataTable.ColumnChanging> Ereignis auftritt.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden <xref:System.Data.DataRow.EndEdit%2A> Sie unter Informationen zu den Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der aktuelle Wert einer geklickten Zelle im <xref:System.Windows.Forms.DataGrid> -Steuerelement abgerufen.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Spalte gehört nicht zu der Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">Das <paramref name="column" />-Argument ist NULL.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft die durch den Index und die Version angegebenen Daten aus der Spalte ab.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können eine Zeile nur erstellen oder aktualisieren, nachdem Sie die <xref:System.Data.DataRow.BeginEdit%2A> -Methode aufgerufen haben. <xref:System.Data.DataRow.EndEdit%2A> ebenso muss die-Methode aufgerufen werden, um ein Commit für die Bearbeitung durchführen zu können Nachdem Sie die <xref:System.Data.DataRow.EndEdit%2A> -Methode aufgerufen haben und bevor Sie die <xref:System.Data.DataRow.AcceptChanges%2A> -Methode aufgerufen haben, werden interne Darstellungen der ursprünglichen und der neuen vorgeschlagenen Werte gespeichert. Daher können Sie, bis Sie <xref:System.Data.DataRow.AcceptChanges%2A>den aufzurufen, das `version` -Argument verwenden, um anzugeben, welche Version des Werts einer Spalte `DataRowVersion.Original` Sie benötigen, `DataRowVersion.Proposed`entweder oder. Sobald Sie jedoch die <xref:System.Data.DataRow.AcceptChanges%2A> -Methode aufgerufen haben, wird die-Version der Spalte auf zurück `DataRowVersion.Original`gesetzt. Wenn die Zeile neu ist, können Sie auch für `DataRowVersion.Default` den-Parameter übergeben, um den Standardwert der Spalte abzurufen. Bei der `DataRowVersion.Current`Übergabe von gibt die-Eigenschaft den aktuellen Wert zurück, und zwar je nach Version.  
  
> [!NOTE]
>  Die <xref:System.Data.DataRow.BeginEdit%2A> -Methode wird implizit <xref:System.Data.DataRowCollection>aufgerufen, wenn Sie den Wert eines Daten gebundenen Steuer Elements ändern oder wenn <xref:System.Data.DataRow> ein-Objekt hinzugefügt wird. <xref:System.Data.DataRow.EndEdit%2A> die-Methode <xref:System.Data.DataRow.AcceptChanges%2A> wird implizit aufgerufen, wenn Sie die folgenden Methoden aufrufen: -Methode des <xref:System.Data.DataRow> -Objekts, <xref:System.Data.DataTable.AcceptChanges%2A> die-Methode <xref:System.Data.DataTable> des-Objekts oder <xref:System.Data.DataRow.CancelEdit%2A> die-Methode.  
  
 Im Gegensatz dazu gibt <xref:System.Data.DataRowVersion> die- `Current` Enumeration die Version der Daten zurück, <xref:System.Data.DataRow.EndEdit%2A> nachdem die-Methode aufgerufen wurde.  
  
 Das `version` -Argument sollte nicht mit der <xref:System.Data.DataRow.RowState*> -Eigenschaft verwechselt werden. Das `version` -Argument beschreibt den Zustand der in der Spalte enthaltenen Daten relativ zum ursprünglichen Wert der Spalte. Die <xref:System.Data.DataRow.RowState*> -Eigenschaft beschreibt den Status der ganzen Zeile relativ zum übergeordneten <xref:System.Data.DataTable>Element.  
  
 Wenn Sie die-Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme im <xref:System.Data.DataTable.ColumnChanging> Ereignis auftritt.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden <xref:System.Data.DataRow.EndEdit%2A> Sie unter Informationen zu den Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der aktuelle Wert einer-Spalte durch die <xref:System.Data.DataRow.Item%2A> -Eigenschaft <xref:System.Data.DataRow> des-Objekts abgerufen.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
        <exception cref="T:System.InvalidCastException">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Es wurde versucht, einen Wert für eine gelöschte Zeile festzulegen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <param name="version">Einer der <see cref="T:System.Data.DataRowVersion" />-Werte, der die gewünschte Zeilenversion angibt. Mögliche Werte sind <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> und <see langword="Proposed" />.</param>
        <summary>Ruft die angegebene Version der Daten aus der benannten Spalte ab.</summary>
        <value>Eine Instanz von <see cref="T:System.Object" />, die die Daten enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Version sollte nicht mit der <xref:System.Data.DataRow.RowState*> -Eigenschaft verwechselt werden. Das `version` -Argument beschreibt den Zustand der in der Spalte enthaltenen Daten relativ zum ursprünglichen Wert der Spalte. Die <xref:System.Data.DataRow.RowState*> -Eigenschaft beschreibt den Status der ganzen Zeile relativ zum übergeordneten <xref:System.Data.DataTable>Element.  
  
 Wenn Sie die-Eigenschaft festlegen, wird eine Ausnahme generiert, wenn eine Ausnahme im <xref:System.Data.DataTable.ColumnChanging> Ereignis auftritt.  
  
 Wenn dies eine sofortige Bearbeitung ist, finden <xref:System.Data.DataRow.EndEdit%2A> Sie unter Informationen zu den Ausnahmen, die generiert werden können.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die aktuelle Version der Daten in einer Zelle eines <xref:System.Windows.Forms.DataGrid> -Steuer Elements abgerufen, auf die geklickt wurde.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die durch <paramref name="columnName" /> angegebene Spalte kann nicht gefunden werden.</exception>
        <exception cref="T:System.InvalidCastException">Der Datentyp des Werts und der Datentyp der Spalte stimmen nicht überein.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">In der Zeile ist diese Version der Daten nicht enthalten.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Die Zeile wurde gelöscht.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft alle Werte für diese Zeile über ein Array ab oder legt diese fest.</summary>
        <value>Ein Array vom Typ <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, um Werte für diese Zeile über ein Array festzulegen oder zu erhalten. Wenn Sie diese Eigenschaft verwenden, um Werte festzulegen, muss das Array dieselbe Größe und Reihenfolge aufweisen wie die Spalten Auflistung. Durch `null` die<xref:System.Data.DataRow.ItemArray%2A> Übergabe von wird angegeben, dass kein Wert angegeben wurde.  
  
 Benutzer können Ausnahmen im <xref:System.Data.DataTable.ColumnChanging> -Ereignis <xref:System.Data.DataTable.RowChanging> oder im-Ereignis generieren.  
  
   
  
## Examples  
 In den folgenden Beispielen wird gezeigt, wie Sie mithilfe der <xref:System.Data.DataRow.ItemArray%2A> -Eigenschaft Werte erhalten und festlegen können.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Das Array ist größer als die Anzahl der Spalten in der Tabelle.</exception>
        <exception cref="T:System.InvalidCastException">Ein Wert im Array stimmt nicht mit dem <see cref="P:System.Data.DataColumn.DataType" /> in der entsprechenden <see cref="T:System.Data.DataColumn" /> überein.</exception>
        <exception cref="T:System.Data.ConstraintException">Bei einem Bearbeitungsvorgang wurde eine Einschränkung verletzt.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Bei einem Bearbeitungsvorgang wurde versucht, den Wert einer schreibgeschützten Spalte zu ändern.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Bei einem Bearbeitungsvorgang wurde versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> für das <see cref="T:System.Data.DataColumn" />-Objekts <see langword="false" /> ist.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Die Zeile wurde gelöscht.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lehnt alle Änderungen ab, die seit dem letzten Aufruf von <see cref="M:System.Data.DataRow.AcceptChanges" /> an der Zeile vorgenommen wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.Data.DataRow.RejectChanges%2A> -Methode aufrufen, <xref:System.Data.DataRow.CancelEdit%2A> wird die-Methode implizit aufgerufen, um alle Änderungen abzubrechen. Wenn <xref:System.Data.DataRow.RowState*> gelöscht oder geändert wird, wird die Zeile auf die vorherigen Werte zurückgesetzt, <xref:System.Data.DataRow.RowState*> und die Zeile wird unverändert. Wenn hinzugefügt wird, wird die Zeile entfernt. <xref:System.Data.DataRow.RowState*>  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine einfache <xref:System.Data.DataTable> mit 2 Spalten und 10 Zeilen erstellt. Nachdem mehrere <xref:System.Data.DataRow> Elemente mit der <xref:System.Data.DataRow.Delete%2A> -Methode gelöscht wurden, wird eine der Zeilen durch Aufrufen <xref:System.Data.DataRow.RejectChanges%2A>von wieder hergestellt.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Die Zeile gehört nicht zu der Tabelle.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die benutzerdefinierte Fehlerbeschreibung für eine Zeile ab oder legt diese fest.</summary>
        <value>Der Text, der einen Fehler beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwendet die <xref:System.Data.DataRow.HasErrors%2A> -Eigenschaft, um zuerst fest <xref:System.Data.DataRow> zustellen, ob ein Fehler enthält.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Fehlertext für zehn Zeilen einer Tabelle festgelegt, <xref:System.Windows.Forms.DataGrid> die in einem-Steuerelement angezeigt wird.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Zustand der Zeile bezüglich ihrer Beziehung zur <see cref="T:System.Data.DataRowCollection" /> ab.</summary>
        <value>Einer der <see cref="T:System.Data.DataRowState" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert von <xref:System.Data.DataRow.RowState*> hängt von zwei Faktoren ab: die Art des Vorgangs wurde für die Zeile ausgeführt, und <xref:System.Data.DataRow>gibt an <xref:System.Data.DataRow.AcceptChanges%2A> , ob für aufgerufen wurde.  
  
   
  
## Examples  
 Im folgenden Beispiel wird zunächst eine neue <xref:System.Data.DataTable> mit einer Spalte erstellt, und anschließend wird ein <xref:System.Data.DataRow>einzelner erstellt. Wenn erstellt <xref:System.Data.DataRow> , hinzugefügt, geändert und gelöscht wird <xref:System.Data.DataRow.RowState*> , wird das zugehörige gedruckt.  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ändert den <see cref="P:System.Data.DataRow.RowState" /> einer <see cref="T:System.Data.DataRow" /> in <see langword="Added" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ändert den <xref:System.Data.DataRow.RowState*> einer <xref:System.Data.DataRow> in `Added`. Wenn sich die aktuelle Zeile nicht in einem `Unchanged` -Zustand oder einem `Added` -Zustand befindet, <xref:System.InvalidOperationException> löst Sie `SetAdded` eine mit der Meldung aus, die nur `DataRow` für eine- `RowState` Instanz `Unchanged`aufgerufen werden kann, bei der der ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die Fehlerbeschreibung für eine Spalte fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">Die <see cref="T:System.Data.DataColumn" />, für die die Fehlerbeschreibung festgelegt werden soll.</param>
        <param name="error">Die Fehlerbeschreibung.</param>
        <summary>Legt die Fehlerbeschreibung für eine als <see cref="T:System.Data.DataColumn" /> angegebene Spalte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Data.DataRow.GetColumnError%2A> -Methode, um Fehlerbeschreibungen zu untersuchen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> -Eigenschaft, um zu bestimmen, ob für die Columns-Auflistung Fehler vorhanden sind. Folglich können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> -Methode verwenden, um alle Spalten mit Fehlern abzurufen.  
  
 Wenn `null` oder eine leere Zeichenfolge `error` als-Parameter übergeben wird, <xref:System.Data.DataRow> verhält sich wie, wenn kein Fehler festgelegt wurde <xref:System.Data.DataRow.HasErrors%2A> und die-Eigenschaft false zurückgibt.  
  
 Verwenden Sie die <xref:System.Data.DataRow.RowError%2A> -Eigenschaft, um eine benutzerdefinierte Fehlerbeschreibung für die gesamte Zeile festzulegen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> -Methode, um zu bestimmen, ob für die Columns-Auflistung Fehler vorhanden sind.  
  
 Verwenden Sie die <xref:System.Data.DataRow.ClearErrors%2A> -Methode, um alle Fehler für die Columns-Auflistung zu löschen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>festgelegt.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Der nullbasierte Index der Spalte.</param>
        <param name="error">Die Fehlerbeschreibung.</param>
        <summary>Legt die Fehlerbeschreibung für eine durch den Index angegebene Spalte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die-Methode wird verwendet, um benutzerdefinierte Fehlerbeschreibungen für angegebene Spalten festzulegen. Sie können das- <xref:System.Windows.Forms.ErrorProvider> Steuerelement verwenden, um den Text des Fehlers anzuzeigen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.GetColumnError%2A> -Methode, um Fehlerbeschreibungen zu untersuchen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> -Eigenschaft, um zu bestimmen, ob für die Columns-Auflistung Fehler vorhanden sind. Folglich können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> -Methode verwenden, um alle Spalten mit Fehlern abzurufen.  
  
 Wenn `null` oder eine leere Zeichenfolge `error` als-Parameter übergeben wird, <xref:System.Data.DataRow> verhält sich wie, wenn kein Fehler festgelegt wurde <xref:System.Data.DataRow.HasErrors%2A> und die-Eigenschaft false zurückgibt.  
  
 Verwenden Sie die <xref:System.Data.DataRow.RowError%2A> -Eigenschaft, um eine benutzerdefinierte Fehlerbeschreibung für die gesamte Zeile festzulegen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.ClearErrors%2A> -Methode, um alle Fehler für die Columns-Auflistung zu löschen.  
  
 Um den Fehlertext festzulegen, der für eine ganze Zeile gilt <xref:System.Data.DataRow.RowError%2A> , legen Sie die-Eigenschaft fest.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>festgelegt.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Das <paramref name="columnIndex" />-Argument liegt außerhalb des gültigen Bereichs.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">Der Name der Spalte.</param>
        <param name="error">Die Fehlerbeschreibung.</param>
        <summary>Legt die Fehlerbeschreibung für eine durch den Namen angegebene Spalte fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Name einer Spalte wird mit der <xref:System.Data.DataColumn.ColumnName%2A> -Eigenschaft <xref:System.Data.DataColumn> der-Klasse festgelegt.  
  
 Verwenden Sie die <xref:System.Data.DataRow.GetColumnError%2A> -Methode, um Fehlerbeschreibungen zu untersuchen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> -Eigenschaft, um zu bestimmen, ob für die Columns-Auflistung Fehler vorhanden sind. Folglich können Sie die <xref:System.Data.DataRow.GetColumnsInError%2A> -Methode verwenden, um alle Spalten mit Fehlern abzurufen.  
  
 Wenn `null` oder eine leere Zeichenfolge `error` als-Parameter übergeben wird, <xref:System.Data.DataRow> verhält sich wie, wenn kein Fehler festgelegt wurde <xref:System.Data.DataRow.HasErrors%2A> und die-Eigenschaft false zurückgibt.  
  
 Verwenden Sie die <xref:System.Data.DataRow.RowError%2A> -Eigenschaft, um eine benutzerdefinierte Fehlerbeschreibung für die gesamte Zeile festzulegen.  
  
 Verwenden Sie die <xref:System.Data.DataRow.HasErrors%2A> -Methode, um zu bestimmen, ob für die Columns-Auflistung Fehler vorhanden sind.  
  
 Verwenden Sie die <xref:System.Data.DataRow.ClearErrors%2A> -Methode, um alle Fehler für die Columns-Auflistung zu löschen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Fehlerbeschreibung für eine angegebene <xref:System.Data.DataRow>festgelegt.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ändert den <see cref="P:System.Data.DataRow.RowState" /> einer <see cref="T:System.Data.DataRow" /> in <see langword="Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ändert den <xref:System.Data.DataRow.RowState*> einer <xref:System.Data.DataRow> in `Modified`. Wenn sich die aktuelle Zeile nicht in einem `Unchanged` -Zustand oder einem `Added` -Zustand befindet, <xref:System.InvalidOperationException> löst Sie `SetModified` eine mit der Meldung aus, die nur `DataRow` für eine- `RowState` Instanz `Unchanged`aufgerufen werden kann, bei der der ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Ein <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Legt den Wert der angegebenen <see cref="T:System.Data.DataColumn" /> auf einen NULL-Wert fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.Data.DataRow.IsNull%2A> die-Methode, um zu bestimmen, ob eine Spalte einen NULL-Wert enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> fest.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">Die neue übergeordnete <see cref="T:System.Data.DataRow" />.</param>
        <summary>Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> mit der angegebenen neuen übergeordneten <see cref="T:System.Data.DataRow" /> fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">Die neue übergeordnete <see cref="T:System.Data.DataRow" />.</param>
        <param name="relation">Die zu verwendende <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Legt die übergeordnete Zeile einer <see cref="T:System.Data.DataRow" /> mit der angegebenen neuen übergeordneten <see cref="T:System.Data.DataRow" /> und <see cref="T:System.Data.DataRelation" /> fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die übergeordnete Zeile einer bestimmten untergeordneten Zeile festgelegt.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Eine der Zeilen gehört nicht zu einer Tabelle.</exception>
        <exception cref="T:System.ArgumentNullException">Eine der Zeilen ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die Beziehung gehört nicht zur <see cref="T:System.Data.DataRelationCollection" /> des <see cref="T:System.Data.DataSet" />-Objekts.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Die untergeordnete <see cref="T:System.Data.DataTable" /> der Beziehung ist nicht die Tabelle, zu der diese Zeile gehört.</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Data.DataTable" /> ab, für die diese Zeile über ein Schema verfügt.</summary>
        <value>Die <see cref="T:System.Data.DataTable" />, zu der diese Zeile gehört.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Data.DataRow> gehört nicht notwendigerweise zur Auflistung von Zeilen einer Tabelle. Dieses Verhalten tritt <xref:System.Data.DataRowCollection>auf, <xref:System.Data.DataRow> wenn das erstellt, aber nicht zu hinzugefügt wurde. Wenn die <xref:System.Data.DataRow.RowState*> -Eigenschaft `DataRowState.Detached`zurückgibt, befindet sich die Zeile nicht in einer Auflistung.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Data.DataRow.Table%2A> -Eigenschaft verwendet, um einen Verweis auf die Columns- <xref:System.Data.DataTable>Auflistung von zurückzugeben.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>
