<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataSet.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe072e2a9f9609b7cc29be43e2c8071d5d8e731d0672.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e2a9f9609b7cc29be43e2c8071d5d8e731d0672</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Represents an in-memory cache of data.</source>
          <target state="translated">Stellt einen speicherresidenten Datencache dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, which is an in-memory cache of data retrieved from a data source, is a major component of the ADO.NET architecture.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, eine Hauptkomponente der ADO.NET-Architektur ist ein in-Memory-Cache von Daten aus einer Datenquelle abgerufen wird.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> consists of a collection of <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects that you can relate to each other with <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> besteht aus einer Auflistung von <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Objekte, die Sie mit miteinander verknüpft sein können <ph id="ph3">&lt;xref:System.Data.DataRelation&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>You can also enforce data integrity in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> by using the <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> objects.</source>
          <target state="translated">Sie können auch Erzwingen der Datenintegrität in den <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mithilfe der <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph> und <ph id="ph3">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>For further details about working with <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> objects, see <bpt id="p1">[</bpt>DataSets, DataTables, and DataViews<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Arbeiten mit <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> anzuzeigen, <bpt id="p1">[</bpt>DataSets und Datentabellen "DataViews"<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Whereas <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects contain the data, the <ph id="ph2">&lt;xref:System.Data.DataRelationCollection&gt;</ph> allows you to navigate though the table hierarchy.</source>
          <target state="translated">Während <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Objekte enthalten, die Daten der <ph id="ph2">&lt;xref:System.Data.DataRelationCollection&gt;</ph> können Sie Navigieren in der Tabellenhierarchie.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The tables are contained in a <ph id="ph1">&lt;xref:System.Data.DataTableCollection&gt;</ph> accessed through the <ph id="ph2">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph> property.</source>
          <target state="translated">Die Tabellen sind in enthalten eine <ph id="ph1">&lt;xref:System.Data.DataTableCollection&gt;</ph> erfolgt über die <ph id="ph2">&lt;xref:System.Data.DataSet.Tables%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>When accessing <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, note that they are conditionally case sensitive.</source>
          <target state="translated">Beim Zugriff auf <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Objekte, beachten Sie, dass sie bedingt Groß-/Kleinschreibung unterschieden werden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>For example, if one <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</source>
          <target state="translated">Angenommen, eine <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> "Mydatatable" benannt ist und eine andere "Mydatatable" benannt ist, wird in eine Zeichenfolge, die zur Suche nach einer der Tabellen die Groß-/ Kleinschreibung.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</source>
          <target state="translated">Allerdings wird Wenn "Mydatatable" vorhanden ist, und "Mydatatable", nicht aber, die zu suchende Zeichenfolge wie Groß-/Kleinschreibung beachten betrachtet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>For more information about working with <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects, see <bpt id="p1">[</bpt>Creating a DataTable<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Arbeiten mit <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> anzuzeigen, <bpt id="p1">[</bpt>Erstellen einer "DataTable"<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can read and write data and schema as XML documents.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> lesen und Schreiben von Daten und das Schema als XML-Dokumente können.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The data and schema can then be transported across HTTP and used by any application, on any platform that is XML-enabled.</source>
          <target state="translated">Die Daten und das Schema können von einer Anwendung, auf jeder Plattform, die XML-fähig ist dann über HTTP transportiert und verwendet werden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>You can save the schema as an XML schema with the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method, and both schema and data can be saved using the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Speichern Sie das Schema als ein XML-Schema mit dem <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> -Methode, und Schema und Daten können gespeichert werden die <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>To read an XML document that includes both schema and data, use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method.</source>
          <target state="translated">Verwenden Sie zum Lesen eines XML-Dokuments, das Schema und Daten umfasst die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In a typical multiple-tier implementation, the steps for creating and refreshing a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and in turn, updating the original data are to:</source>
          <target state="translated">In einer typischen mehreren Ebenen, die Schritte zum Erstellen und Aktualisieren einer <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, zu denen wiederum das Aktualisieren der ursprünglichen Daten auf:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Build and fill each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with data from a data source using a <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>.</source>
          <target state="translated">Erstellen und füllen Sie jede <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit Daten aus einer Datenquelle mit einem <ph id="ph3">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Change the data in individual <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects by adding, updating, or deleting <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">Ändern Sie die Daten in einzelnen <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Objekte hinzufügen, aktualisieren oder Löschen von <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Invoke the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method to create a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that features only the changes to the data.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> Methode, um eine zweite <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> features zur Verfügung, nur die Änderungen an den Daten.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Call the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>, passing the second <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> as an argument.</source>
          <target state="translated">Rufen Sie die <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph>, übergeben Sie das zweite <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> als Argument.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Invoke the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method to merge the changes from the second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into the first.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode, um die Änderungen aus dem zweiten zusammenzuführen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit dem ersten.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Invoke the <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> auf die <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Alternatively, invoke <ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;</ph> to cancel the changes.</source>
          <target state="translated">Alternativ Aufrufen <ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;</ph> um die Änderungen abzubrechen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects inherit from <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>, and support the <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface for remoting.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Objekte erben von <ph id="ph3">&lt;xref:System.ComponentModel.MarshalByValueComponent&gt;</ph>, und unterstützt die <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> Schnittstelle für das Remoting.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>These are the only ADO.NET objects that can be remoted.</source>
          <target state="translated">Dies sind die einzigen ADO.NET-Objekte, die remotingfähig sind.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Classes inherited from <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> are not finalized by the garbage collector, because the finalizer has been suppressed in <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Von Klassen geerbt <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> werden nicht vom Garbage Collector finalisiert, da der Finalizer in unterdrückt wurden <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The derived class can call the <ph id="ph1">&lt;xref:System.GC.ReRegisterForFinalize%2A&gt;</ph> method in its constructor to allow the class to be finalized by the garbage collector.</source>
          <target state="translated">Die abgeleitete Klasse aufrufen, kann die <ph id="ph1">&lt;xref:System.GC.ReRegisterForFinalize%2A&gt;</ph> Methode in seinem Konstruktor auf die Klasse durch den Garbage Collector freigegeben werden kann.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The following example consists of several methods that, combined, create and fill a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> from the <bpt id="p1">**</bpt>Northwind<ept id="p1">**</ept> database.</source>
          <target state="translated">Im folgende Beispiel besteht aus mehreren Methoden, die in Kombination erstellen und Füllen einer <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> aus der <bpt id="p1">**</bpt>Northwind<ept id="p1">**</ept> Datenbank.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This type is safe for multithreaded read operations.</source>
          <target state="translated">Dieser Typ ist für schreibgeschützte Vorgänge mit mehreren Threads sicher.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>You must synchronize any write operations.</source>
          <target state="translated">Sie müssen alle Schreibvorgänge synchronisieren.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> constructor takes no parameters, and creates a default name, "NewDataSet," for the new instance.</source>
          <target state="translated">Diese Implementierung der <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Konstruktor nimmt keine Parameter und einen Standardnamen "NewDataSet", für die neue Instanz erstellt.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor">
          <source>A name for the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is required to ensure that the XML representation of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> always has a name for the document element, which is the highest-level element in a schema definition.</source>
          <target state="translated">Einen Namen für die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> ist erforderlich, um sicherzustellen, dass die XML-Darstellung der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> verfügt immer über einen Namen für das Dokumentelement das oberste Element in einer Schemadefinition ist.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and adds two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects to it.</source>
          <target state="translated">Das folgende Beispiel erstellt ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, und fügt zwei <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.String)">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Der Name des <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.String)">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class with the given name.</source>
          <target state="translated">Initialisiert eine neue Instanz einer <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Klasse mit dem angegebenen Namen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor(System.String)">
          <source>A name for the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is required to ensure that the XML representation of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> always has a name for the document element, which is the highest level element in a schema definition.</source>
          <target state="translated">Einen Namen für die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> ist erforderlich, um sicherzustellen, dass die XML-Darstellung der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> verfügt immer über einen Namen für das Dokumentelement der höchsten Level-Element in einer Schemadefinition ist.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.#ctor(System.String)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, to which two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> objects are added.</source>
          <target state="translated">Das folgende Beispiel erstellt ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, dem zwei <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Objekte werden hinzugefügt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The data needed to serialize or deserialize an object.</source>
          <target state="translated">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination of a given serialized stream.</source>
          <target state="translated">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class that has the given serialization information and context.</source>
          <target state="translated">Initialisiert eine neue Instanz einer <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Klasse, die über die angegebenen Serialisierungsinformationen und den angegebenen Kontext verfügt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
          <source>The boolean value.</source>
          <target state="translated">Der boolesche Wert.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Commits all the changes made to this <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> since it was loaded or since the last time <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">Führt einen Commit für alle Änderungen aus, die an diesem <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> seit dem letzten Ladevorgang oder seit dem letzten Aufruf von <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> vorgenommen wurden.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Both the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> classes have <ph id="ph3">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> methods.</source>
          <target state="translated">Sowohl die <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Klassen verfügen über <ph id="ph3">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> at the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> level causes the <ph id="ph3">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> method for each <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph> to be called.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> an die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> -Ebene wird die <ph id="ph3">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> Methode für jede <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph> aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Similarly, invoking <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> on the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> causes <ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> to be called on each table within the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Auf ähnliche Weise aufrufen <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> auf die <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> bewirkt, dass <ph id="ph3">&lt;xref:System.Data.DataTable.AcceptChanges%2A&gt;</ph> aufzurufenden für jede Tabelle in der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>In this manner, you have multiple levels at which the method can be invoked.</source>
          <target state="translated">Auf diese Weise haben Sie mehrere Ebenen, die an denen die Methode aufgerufen werden kann.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> enables you to invoke the method on all subordinate objects (for example, tables and rows) with one call.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> von der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> können Sie die Methode für alle untergeordneten Objekte (z. B. Tabellen und Zeilen) mit einem Aufruf aufrufen.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>When you call <ph id="ph1">`AcceptChanges`</ph> on the <ph id="ph2">`DataSet`</ph>, any <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects still in edit-mode end their edits successfully.</source>
          <target state="translated">Beim Aufruf <ph id="ph1">`AcceptChanges`</ph> auf die <ph id="ph2">`DataSet`</ph>, stellen alle <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> Objekte immer noch im Bearbeitungsmodus Bearbeitungsvorgänge erfolgreich beendet.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> property of each <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> also changes; <ph id="ph3">`Added`</ph> and <ph id="ph4">`Modified`</ph> rows become <ph id="ph5">`Unchanged`</ph>, and <ph id="ph6">`Deleted`</ph> rows are removed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataRow.RowState%2A&gt;</ph> -Eigenschaft jedes <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> ändert sich auch; <ph id="ph3">`Added`</ph> und <ph id="ph4">`Modified`</ph> Zeilen werden <ph id="ph5">`Unchanged`</ph>, und <ph id="ph6">`Deleted`</ph> Zeilen entfernt werden.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>If the <ph id="ph1">`DataSet`</ph> contains <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> objects, invoking the <ph id="ph3">`AcceptChanges`</ph> method also causes the <ph id="ph4">&lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt;</ph> to be enforced.</source>
          <target state="translated">Wenn die <ph id="ph1">`DataSet`</ph> enthält <ph id="ph2">&lt;xref:System.Data.ForeignKeyConstraint&gt;</ph> Objekte Aufrufen der <ph id="ph3">`AcceptChanges`</ph> Methode bewirkt auch, dass die <ph id="ph4">&lt;xref:System.Data.ForeignKeyConstraint.AcceptRejectRule%2A&gt;</ph> erzwungen werden.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source><ph id="ph1">`AcceptChanges`</ph> and <ph id="ph2">`RejectChanges`</ph> only apply to <ph id="ph3">`DataRow`</ph> related changes (that is, Add, Remove, Delete, and Modify).</source>
          <target state="translated"><ph id="ph1">`AcceptChanges`</ph> und <ph id="ph2">`RejectChanges`</ph> gelten nur für <ph id="ph3">`DataRow`</ph> ähnlicher Änderungen (d. h. hinzufügen, entfernen, löschen und ändern).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">Sie gelten nicht für Schema oder strukturelle Änderungen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>Calling AcceptChanges will not replicate these changes back to the data source if the DataSet was filled using a DataAdapter.</source>
          <target state="translated">AcceptChanges aufrufen repliziert diese Änderungen an der Datenquelle nicht das DataSet mit "DataAdapter" ausgeführt wurde.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>In that situation, call <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> instead.</source>
          <target state="translated">In diesem Fall rufen <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.Update%2A&gt;</ph> stattdessen.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>See <bpt id="p1">[</bpt>Updating Data Sources with DataAdapters<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept> for more information.</source>
          <target state="translated">Finden Sie unter <bpt id="p1">[</bpt>Aktualisieren von Datenquellen mit "DataAdapters"<ept id="p1">](http://msdn.microsoft.com/library/33y2221y.aspx)</ept> für Weitere Informationen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> to a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird eine <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> auf eine <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> in einem <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.AcceptChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> method is then called on the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, which cascades to all <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects that it contains.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.AcceptChanges%2A&gt;</ph> Methode wird aufgerufen, auf die <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, welche nacheinander auf alle <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> darin enthaltenen Objekte.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.BeginInit">
          <source>Begins the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">Beginnt die Initialisierung einer <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, die in einem Formular oder von einer anderen Komponente verwendet wird.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.BeginInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">Die Initialisierung erfolgt zur Laufzeit.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.BeginInit">
          <source>The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Die entwurfsumgebung für Visual Studio .NET verwendet diese Methode, um die Initialisierung einer Komponente zu starten, die in einem Formular oder von einer anderen Komponente verwendet wird.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.BeginInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> method ends the initialization.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> -Methode beendet die Initialisierung.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.BeginInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Mithilfe der <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> Methoden wird verhindert, dass das Steuerelement verwendet werden, bevor er vollständig initialisiert wurde.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.CaseSensitive">
          <source>Gets or sets a value indicating whether string comparisons within <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects are case-sensitive.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob bei Zeichenfolgenvergleichen in <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Objekten die Groß- und Kleinschreibung berücksichtigt wird, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if string comparisons are case-sensitive; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn bei Zeichenfolgenvergleichen die Groß- und Kleinschreibung berücksichtigt wird, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph> property affects how sorting, searching, and filtering operations are performed on each <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> object contained in a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> when using the <ph id="ph4">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph> Eigenschaft wirkt sich auf ausgeführt wie sortieren, suchen und Filtern von Vorgängen auf jedem <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> in enthaltenes Objekt eine <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> bei Verwendung der <ph id="ph4">&lt;xref:System.Data.DataTable.Select%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source>By default, setting the <ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> also sets the <ph id="ph3">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> property of each associated <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> to the same value.</source>
          <target state="translated">Standardmäßig Festlegen der <ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph> -Eigenschaft für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> setzt auch die <ph id="ph3">&lt;xref:System.Data.DataTable.CaseSensitive%2A&gt;</ph> -Eigenschaft jeder zugeordneten <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> auf den gleichen Wert.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.CaseSensitive">
          <source>The following example toggles the <ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Beispiel schaltet die <ph id="ph1">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Clear">
          <source>Clears the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> of any data by removing all rows in all tables.</source>
          <target state="translated">Entfernt alle Daten aus dem <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, indem alle Zeilen in sämtlichen Tabellen entfernt werden.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clear">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is bound to an <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>, calling <ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph> raises the <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> gebunden ist ein <ph id="ph2">&lt;xref:System.Xml.XmlDataDocument&gt;</ph>Aufrufen <ph id="ph3">&lt;xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType&gt;</ph> oder <ph id="ph4">&lt;xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType&gt;</ph> löst die <ph id="ph5">&lt;xref:System.NotSupportedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clear">
          <source>To avoid this situation, traverse each table, removing each row one at a time.</source>
          <target state="translated">Um diese Situation zu vermeiden, Durchsuchen Sie jede Tabelle, entfernen Sie jede Zeile zu einem Zeitpunkt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clear">
          <source>The following example clears the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> of all rows in all tables.</source>
          <target state="translated">Das folgende Beispiel löscht die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> aller Zeilen in allen Tabellen.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Clone">
          <source>Copies the structure of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, including all <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> schemas, relations, and constraints.</source>
          <target state="translated">Kopiert die Struktur des <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, einschließlich aller Schemas, Beziehungen und Einschränkungen von <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Clone">
          <source>Does not copy any data.</source>
          <target state="translated">Es werden keine Daten kopiert.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Clone">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the same schema as the current <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, but none of the data.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> mit demselben Schema wie das aktuelle <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, jedoch nicht mit den darin enthaltenen Daten.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clone">
          <source>If these classes have been subclassed, the clone will also be of the same subclasses.</source>
          <target state="translated">Wenn Sie diese Klassen als Unterklasse haben, wird der Klon denselben Unterklassen aufweisen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Clone">
          <source>The following example creates a clone of a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object's schema.</source>
          <target state="translated">Das folgende Beispiel erstellt einen Klon einer <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Objektschemas.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Copy">
          <source>Copies both the structure and data for this <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Kopiert die Struktur und die Daten für diese <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Copy">
          <source>A new <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with the same structure (table schemas, relations, and constraints) and data as this <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ein neues <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> mit derselben Struktur (Tabellenschemas, -beziehungen und -einschränkungen) und denselben Daten wie dieses <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Copy">
          <source>If these classes have been subclassed, the copy will also be of the same subclasses.</source>
          <target state="translated">Wenn diese Klassen in Unterklassen unterteilt wurden, besteht die Kopie aus denselben Unterklassen.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Copy">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.Copy%2A&gt;</ph> method to create a copy of the original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.Copy%2A&gt;</ph> Methode zum Erstellen einer Kopie des Originals <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> with one result set per <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, in the same sequence as the tables appear in the <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph> collection.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> mit einem Resultset pro <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> zurück, und zwar in der Reihenfolge der Tabellen in der <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph>-Auflistung.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In order to ensure the order of the result sets within the returned <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, if a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> within the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> is empty, it will be represented by an empty result set within the returned <ph id="ph4">`DataTableReader`</ph>.</source>
          <target state="translated">Um sicherzustellen, dass die Reihenfolge der Resultsets im zurückgegebenen <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, wenn eine <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> innerhalb der <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> ist leer, es dargestellt wird durch ein leeres Resultset im zurückgegebenen <ph id="ph4">`DataTableReader`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This example, a Console application, creates three <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances and adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Diesem Beispiel wird eine Konsolenanwendung erstellt drei <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Instanzen und fügt Sie jedes Element eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph> method and displays the contents of the returned <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">Im Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph> -Methode und zeigt den Inhalt des zurückgegebenen <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Note that the order of the result sets in the <ph id="ph1">`DataTableReader`</ph> is controlled by the order of the <ph id="ph2">`DataTable`</ph> instances passed as parameters.</source>
          <target state="translated">Beachten Sie, dass die Reihenfolge des Ergebnisses in der <ph id="ph1">`DataTableReader`</ph> wird gesteuert, von der Reihenfolge der der <ph id="ph2">`DataTable`</ph> Instanzen als Parameter übergeben.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This example shows how to use one of the overloaded versions of <ph id="ph1">`CreateDataReader`</ph>.</source>
          <target state="translated">In diesem Beispiel wird gezeigt, wie mit einer der überladenen Versionen der <ph id="ph1">`CreateDataReader`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>For other examples that might be available, see the individual overload topics.</source>
          <target state="translated">Weitere Beispiele für die Verfügbarkeit, finden Sie unter den einzelnen Überladung-Themen.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The example displays the following code in the Console window:</source>
          <target state="translated">Im Beispiel wird den folgenden Code im Konsolenfenster angezeigt:</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> with one result set per <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, in the same sequence as the tables appear in the <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph> collection.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> mit einem Resultset pro <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> zurück, und zwar in der Reihenfolge der Tabellen in der <ph id="ph3">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph>-Auflistung.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> containing one or more result sets, corresponding to the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances contained within the source <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> mit einem oder mehreren Resultsets, die den im Quell-<ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> enthaltenen <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Instanzen entsprechen.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader">
          <source>In order to ensure the order of the result sets within the returned <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, if a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> within the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> is empty, it is represented by an empty result set within the returned <ph id="ph4">`DataTableReader`</ph>.</source>
          <target state="translated">Um sicherzustellen, dass die Reihenfolge der Resultsets im zurückgegebenen <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, wenn eine <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> innerhalb der <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> ist leer, dieser wird durch dargestellt eines leeren Resultsets im zurückgegebenen <ph id="ph4">`DataTableReader`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader">
          <source>The following example creates three <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances, and adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel erstellt drei <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Instanzen und fügt Sie jedes Element eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader">
          <source>The example then passes the filled <ph id="ph1">`DataSet`</ph> to a procedure that calls the <ph id="ph2">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph> method, and proceeds to iterate through all the result sets contained within the <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">Im Beispiel übergibt dann das ausgefüllte <ph id="ph1">`DataSet`</ph> an eine Prozedur, die Aufrufe der <ph id="ph2">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph> -Methode und fährt zum iterieren durch alle Resultsets, die als Bestandteil der <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader">
          <source>The example displays the results in the Console window.</source>
          <target state="translated">Das Beispiel zeigt die Ergebnisse im Konsolenfenster angezeigt.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>An array of DataTables providing the order of the result sets to be returned in the <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph>.</source>
          <target state="translated">Ein Array von DataTables, das die Reihenfolge der im <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> zurückzugebenden Resultsets angibt.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> with one result set per <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> mit einem Resultset pro <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> containing one or more result sets, corresponding to the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances contained within the source <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataTableReader" /&gt;</ph> mit einem oder mehreren Resultsets, die den im Quell-<ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> enthaltenen <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Instanzen entsprechen.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>The returned result sets are in the order specified by the <ph id="ph1">&lt;paramref name="dataTables" /&gt;</ph> parameter.</source>
          <target state="translated">Die Resultsets werden in der vom <ph id="ph1">&lt;paramref name="dataTables" /&gt;</ph>-Parameter angegebenen Reihenfolge zurückgegeben.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>In order to ensure that the order of the result sets within the returned <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, if a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> within the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> is empty, it is represented by an empty result set within the returned <ph id="ph4">`DataTableReader`</ph>.</source>
          <target state="translated">Um sicherzustellen, dass die Reihenfolge des Ergebnisses im zurückgegebenen legt <ph id="ph1">&lt;xref:System.Data.DataTableReader&gt;</ph>, wenn eine <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> innerhalb der <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> ist leer ist, wird durch dargestellt ein leeres Resultset im zurückgegebenen <ph id="ph4">`DataTableReader`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>Because this overloaded version allows you to supply a list of <ph id="ph1">`DataTable`</ph> instances as parameters, you can specify the order in which the result sets appear within the returned <ph id="ph2">`DataTableReader`</ph>.</source>
          <target state="translated">Da diese überladene Version Sie eine Liste der bereitstellen kann <ph id="ph1">`DataTable`</ph> Instanzen als Parameter, geben Sie die Reihenfolge der Resultsets im zurückgegebenen <ph id="ph2">`DataTableReader`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>This example, a Console application, creates three <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> instances and adds each to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Diesem Beispiel wird eine Konsolenanwendung erstellt drei <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Instanzen und fügt Sie jedes Element eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>The example calls the <ph id="ph1">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph> method and displays the contents of the returned <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">Im Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.CreateDataReader%2A&gt;</ph> -Methode und zeigt den Inhalt des zurückgegebenen <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>Note that the order of the result sets in the <ph id="ph1">`DataTableReader`</ph> is controlled by the order of the <ph id="ph2">`DataTable`</ph> instances passed as parameters.</source>
          <target state="translated">Beachten Sie, dass die Reihenfolge des Ergebnisses in der <ph id="ph1">`DataTableReader`</ph> wird gesteuert, von der Reihenfolge der der <ph id="ph2">`DataTable`</ph> Instanzen als Parameter übergeben.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.CreateDataReader(System.Data.DataTable[])">
          <source>The example displays the results in the Console window.</source>
          <target state="translated">Das Beispiel zeigt die Ergebnisse im Konsolenfenster angezeigt.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.DataSetName">
          <source>Gets or sets the name of the current <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ruft den Namen des aktuellen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DataSetName">
          <source>The name of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Der Name des <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DataSetName">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the given <ph id="ph2">&lt;xref:System.Data.DataSet.DataSetName%2A&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel erstellt ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit der angegebenen <ph id="ph2">&lt;xref:System.Data.DataSet.DataSetName%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>Gets a custom view of the data contained in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to allow filtering, searching, and navigating using a custom <ph id="ph2">&lt;see cref="T:System.Data.DataViewManager" /&gt;</ph>.</source>
          <target state="translated">Ruft eine benutzerdefinierte Ansicht der im <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> enthaltenen Daten ab, mit der unter Verwendung eines benutzerdefinierten <ph id="ph2">&lt;see cref="T:System.Data.DataViewManager" /&gt;</ph> gefiltert, gesucht und navigiert werden kann.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataViewManager" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataViewManager" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Data.DataSet.DefaultViewManager%2A&gt;</ph> property allows you to create custom settings for each <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> in the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph> zurückgegebenes der <ph id="ph2">&lt;xref:System.Data.DataSet.DefaultViewManager%2A&gt;</ph> Eigenschaft ermöglicht Ihnen die Erstellung von benutzerdefinierten Einstellungen für die einzelnen <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> in der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>When you obtain a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> from a <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, the sort order, filtering, and <ph id="ph3">&lt;xref:System.Data.DataViewRowState&gt;</ph> are configured according to the settings in the <ph id="ph4">&lt;xref:System.Data.DataSet.DefaultViewManager%2A&gt;</ph> property.</source>
          <target state="translated">Beim Erwerb einer <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> aus eine <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, die Sortierreihenfolge, Filter, und <ph id="ph3">&lt;xref:System.Data.DataViewRowState&gt;</ph> konfiguriert sind, gemäß den Einstellungen in der <ph id="ph4">&lt;xref:System.Data.DataSet.DefaultViewManager%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.DefaultViewManager">
          <source>The following example gets the default <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph> for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and adds a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> to the <ph id="ph4">&lt;xref:System.Data.DataTableCollection&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird die Standardeinstellung <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph> für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, und fügt eine <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> auf die <ph id="ph4">&lt;xref:System.Data.DataTableCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Determines the <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Bestimmt den <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> für ein <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This method can be called when deserializing a typed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to determine its <ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode kann aufgerufen werden, wenn eine typisierte Deserialisierung <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> bestimmen die <ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> instance that is passed during deserialization of the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>-Instanz, die bei der Deserialisierung des <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> übergeben wird.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
          <source>Determines the <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Bestimmt den <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> für ein <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph>-Enumeration, die angibt, ob Schemainformationen aus der Nutzlast ausgelassen wurden.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Xml.XmlReader)">
          <source>This method can be called when deserializing a typed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to determine its <ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode kann aufgerufen werden, wenn eine typisierte Deserialisierung <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> bestimmen die <ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that a <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>’s protected constructor <ph id="ph3">&lt;see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>, mit der der geschützte <ph id="ph3">&lt;see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph>-Konstruktor eines <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> bei der Deserialisierung in Remotingszenarien aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that a <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>’s protected constructor <ph id="ph3">&lt;see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> is invoked with during deserialization in remoting scenarios.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>, mit der der geschützte <ph id="ph3">&lt;see cref="M:System.Data.DataSet.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph>-Konstruktor eines <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> bei der Deserialisierung in Remotingszenarien aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Determines the <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Bestimmt den <ph id="ph1">&lt;see cref="P:System.Data.DataSet.SchemaSerializationMode" /&gt;</ph> für ein <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> enumeration indicating whether schema information has been omitted from the payload.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph>-Enumeration, die angibt, ob Schemainformationen aus der Nutzlast ausgelassen wurden.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.DetermineSchemaSerializationMode(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method can be called when deserializing a typed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> to determine its <ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode kann aufgerufen werden, wenn eine typisierte Deserialisierung <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> bestimmen die <ph id="ph2">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.EndInit">
          <source>Ends the initialization of a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that is used on a form or used by another component.</source>
          <target state="translated">Beendet die Initialisierung einer <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, die in einem Formular oder von einer anderen Komponente verwendet wird.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.EndInit">
          <source>The initialization occurs at run time.</source>
          <target state="translated">Die Initialisierung erfolgt zur Laufzeit.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.EndInit">
          <source>The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</source>
          <target state="translated">Die entwurfsumgebung für Visual Studio .NET verwendet diese Methode, um die Initialisierung einer Komponente zu beenden, die in einem Formular oder von einer anderen Komponente verwendet wird.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.EndInit">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> method starts the initialization.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> -Methode startet die Initialisierung.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.EndInit">
          <source>Using the <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
          <target state="translated">Mithilfe der <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> Methoden wird verhindert, dass das Steuerelement verwendet werden, bevor er vollständig initialisiert wurde.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>Gets or sets a value indicating whether constraint rules are followed when attempting any update operation.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob bei Aktualisierungen Einschränkungsregeln beachtet werden, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if rules are enforced; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn Regeln erzwungen werden, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>Constraints are set at the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> level (<ph id="ph2">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> property).</source>
          <target state="translated">Einschränkungen werden festgelegt, an die <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> Ebene (<ph id="ph2">&lt;xref:System.Data.DataTable.Constraints%2A&gt;</ph> Eigenschaft).</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>For more information about creating constraints, see <bpt id="p1">[</bpt>DataTable Constraints<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Erstellen von Einschränkungen finden Sie unter <bpt id="p1">[</bpt>DataTable-Einschränkungen<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md)</ept>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, one column, five rows, and one <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einer Tabelle, eine Spalte, fünf Zeilen und einer <ph id="ph2">&lt;xref:System.Data.UniqueConstraint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> and the values of each row are set to the same value.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph> und die Werte der einzelnen Zeilen auf den gleichen Wert festgelegt sind.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is reset to <ph id="ph2">`true`</ph>, a <ph id="ph3">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> Eigenschaft wird auf zurückgesetzt <ph id="ph2">`true`</ph>, eine <ph id="ph3">&lt;xref:System.Data.ConstraintException&gt;</ph> generiert wird.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.EnforceConstraints">
          <source>One or more constraints cannot be enforced.</source>
          <target state="translated">Mindestens eine Einschränkung kann nicht erzwungen werden.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>Gets the collection of customized user information associated with the <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">Ruft die dem <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> zugeordnete Auflistung von benutzerdefinierten Benutzerinformationen ab.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph> with all custom user information.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Data.PropertyCollection" /&gt;</ph> mit sämtlichen benutzerdefinierten Benutzerinformationen.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ExtendedProperties%2A&gt;</ph> property enables you to store custom information with the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ExtendedProperties%2A&gt;</ph> Eigenschaft können Sie zum Speichern von benutzerdefinierten Informationen mit der <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>For example, you might store a time when the data should be refreshed.</source>
          <target state="translated">Beispielsweise können Sie eine zu speichern, wenn die Daten aktualisiert werden sollen.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>Extended properties must be of type <ph id="ph1">&lt;xref:System.String&gt;</ph> if you want them persisted when the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> is written as XML.</source>
          <target state="translated">Erweiterte Eigenschaften muss vom Typ <ph id="ph1">&lt;xref:System.String&gt;</ph> Wenn gewünscht beibehalten, wenn die <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> als XML geschrieben wird.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>The following example adds a custom property to the <ph id="ph1">&lt;xref:System.Data.PropertyCollection&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Data.DataColumn.ExtendedProperties%2A&gt;</ph> property.</source>
          <target state="translated">Im folgenden Beispiel wird eine benutzerdefinierte Eigenschaft, die <ph id="ph1">&lt;xref:System.Data.PropertyCollection&gt;</ph> zurückgegebenes der <ph id="ph2">&lt;xref:System.Data.DataColumn.ExtendedProperties%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.ExtendedProperties">
          <source>The second example retrieves the custom property.</source>
          <target state="translated">Im zweite Beispiel ruft die benutzerdefinierte Eigenschaft ab.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">Ruft eine Kopie der <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> vorgenommenen Änderungen enthält.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that contains all changes made to it since it was loaded or since <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was last called.</source>
          <target state="translated">Ruft eine Kopie des <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ab, die sämtliche seit dem letzten Laden oder seit dem letzten Aufruf von <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> vorgenommenen Änderungen enthält.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges">
          <source>A copy of the changes from this <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that can have actions performed on it and later be merged back in using <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated">Eine Kopie der Änderungen aus diesem <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, für das Aktionen ausgeführt werden können und das nachfolgend durch Verwendung von <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph> wieder zusammengeführt werden kann.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges">
          <source>If no changed rows are found, the method returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wenn keine geänderten Zeilen gefunden werden, gibt die Methode <ph id="ph1">&lt;see langword="null" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>Creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that contains a copy of all rows in the original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that have pending changes.</source>
          <target state="translated">Erstellt ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> , enthält eine Kopie aller Zeilen in der ursprünglichen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> , ausstehende Änderungen aufweisen.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>Relationship constraints can cause additional unchanged rows to be added to the new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</source>
          <target state="translated">Beziehung Einschränkungen können dazu führen, dass zusätzliche unveränderte Zeilen in die neue hinzuzufügende <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält die unveränderten Zeilen Primärschlüsseln, Fremdschlüsseln in der geänderten Zeilen entspricht.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>The method returns <ph id="ph1">`null`</ph> if there are no rows in the original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that have pending changes.</source>
          <target state="translated">Gibt die Methode <ph id="ph1">`null`</ph> , wenn keine Zeilen vorhanden, in der ursprünglichen sind <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> , ausstehende Änderungen aufweisen.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einer Tabelle, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>Two values are changed, and one row is added.</source>
          <target state="translated">Zwei Werte geändert werden, und es wird eine Zeile hinzugefügt.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>A subset of the changed data is created using the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method.</source>
          <target state="translated">Eine Teilmenge der geänderten Daten wird erstellt, mit der <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>After reconciling errors, a new column is added to the subset, changing the schema.</source>
          <target state="translated">Nach dem Abgleichen der Fehler wird eine neue Spalte, auf die Teilmenge, die Änderung des Schemas hinzugefügt.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called with the <ph id="ph2">`missingSchemaAction`</ph> set to <ph id="ph3">`MissingSchemaAction.Add`</ph>, the new column is added to the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> object's schema.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode aufgerufen wird und die <ph id="ph2">`missingSchemaAction`</ph> festgelegt <ph id="ph3">`MissingSchemaAction.Add`</ph>, die neue Spalte hinzugefügt wird, mit dem ursprünglichen <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> Objektschemas.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>Gets a copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> containing all changes made to it since it was last loaded, or since <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was called, filtered by <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</source>
          <target state="translated">Ruft eine Kopie der <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> vorgenommenen und durch <ph id="ph3">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> gefilterten Änderungen enthält.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>A filtered copy of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> that can have actions performed on it, and subsequently be merged back in using <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph>.</source>
          <target state="translated">Eine gefilterte Kopie des <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, für die Aktionen durchgeführt werden und die nachfolgend mithilfe von <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /&gt;</ph> wieder mit dem Original zusammengeführt werden kann.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>If no rows of the desired <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> are found, the method returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Wenn keine Zeilen mit dem gewünschten <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> gefunden werden, gibt die Methode <ph id="ph2">&lt;see langword="null" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is used to produce a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object that contains only the changes introduced into the original.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> Methode wird verwendet, um eine zweite erzeugen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekt, das nur die Änderungen enthält, die in der ursprünglichen eingeführt.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>Use the <ph id="ph1">`rowStates`</ph> argument to specify the type of changes the new object should include.</source>
          <target state="translated">Verwenden der <ph id="ph1">`rowStates`</ph> Argument, um die Art von Änderungen anzugeben, sollte das neue Objekt enthalten.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>This returned copy is designed to be merged back in to this original <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Diese Kopie ist so ausgelegt, mit dem ursprünglichen wieder zusammengeführt werden zurückgegeben <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>Relationship constraints may cause parent rows marked <ph id="ph1">`Unchanged`</ph> to be included.</source>
          <target state="translated">Beziehung Einschränkungen verursachen markierte Zeilen der übergeordneten <ph id="ph1">`Unchanged`</ph> eingeschlossen werden sollen.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>If no rows of the desired <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> are found, the <ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method returns <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Wenn keine Zeilen mit dem gewünschten <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> gefunden werden, die <ph id="ph2">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> -Methode zurückkehrt <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetChanges(System.Data.DataRowState)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method to create a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object, which is then used to update a data source.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> Methode, um eine zweite <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> -Objekt, das dann zum Aktualisieren einer Datenquelle verwendet wird.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>The specified schema set.</source>
          <target state="translated">Das angegebene Schemaset.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>Gets a copy of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> for the DataSet.</source>
          <target state="translated">Ruft eine Kopie von <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> für das DataSet ab.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetDataSetSchema(System.Xml.Schema.XmlSchemaSet)">
          <source>A copy of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">Eine Kopie des <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>es.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> mit den serialisierten Daten, die der <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>, der Quelle und Ziel des serialisierten Streams enthält, der dem <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Füllt ein Serialisierungsinformationsobjekt mit den Daten auf, die zum Serialisieren des <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> erforderlich sind.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="info" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSchemaSerializable">
          <source>Returns a serializable <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XMLSchema" /&gt;</ph> instance.</source>
          <target state="translated">Gibt eine serialisierbare <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XMLSchema" /&gt;</ph>-Instanz zurück.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSchemaSerializable">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XMLSchema" /&gt;</ph> instance.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XMLSchema" /&gt;</ph>-Instanz.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> instance.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Instanz.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The streaming context.</source>
          <target state="translated">Der Streamingkontext.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetSerializationData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Deserializes the table data from the binary or XML stream.</source>
          <target state="translated">Deserialisiert die Tabellendaten aus dem Binär- oder XML-Stream.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetXml">
          <source>Returns the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Gibt die XML-Darstellung der im <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> gespeicherten Daten zurück.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetXml">
          <source>A string that is a representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Eine Zeichenfolge, die eine Darstellung der im <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> gespeicherten Daten ist.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Calling this method is identical to calling <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> with <ph id="ph2">&lt;xref:System.Data.XmlWriteMode&gt;</ph> set to <ph id="ph3">&lt;xref:System.Data.XmlWriteMode.IgnoreSchema&gt;</ph>.</source>
          <target state="translated">Beim Aufrufen dieser Methode entspricht dem Aufruf <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> mit <ph id="ph2">&lt;xref:System.Data.XmlWriteMode&gt;</ph> festgelegt <ph id="ph3">&lt;xref:System.Data.XmlWriteMode.IgnoreSchema&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source><ph id="ph1">&lt;xref:System.Data.DataSet.GetXml%2A&gt;</ph> returns XML as a string, and therefore requires more overhead than <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> to write XML to a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.GetXml%2A&gt;</ph> Gibt die XML-Daten als eine Zeichenfolge zurück, und benötigt daher einen höheren Aufwand als <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> XML-Code in eine Datei schreiben.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>If you build a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">Wenn Sie erstellen eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schemaherleitung verwenden und die Serialisierung mithilfe von XML oder Webdiensten, die spaltensortierung kann geändert.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, adds sample data, and then displays the data in XML format.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, fügt der Beispieldaten und zeigt dann die Daten im XML-Format.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>This sample demonstrates how to write data into an XML file from a DataSet and read data into DataSet from XML.</source>
          <target state="translated">Dieses Beispiel veranschaulicht, wie Daten aus einem DataSet in eine XML-Datei schreiben und Lesen von Daten in Datasets aus XML.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>This sample will create one dataset with two tables, use two ways to export a dataset into the XML files (WriteXml and GetXml), and use two ways (ReadXml and InferXmlSchema) to import a dataset from the XML files.</source>
          <target state="translated">In diesem Beispiel wird ein Dataset mit zwei Tabellen erstellen, verwenden zwei Möglichkeiten, ein Dataset in die XML-Dateien (WriteXml und GetXml) exportieren und verwenden zwei Arten (ReadXml und InferXmlSchema), um ein Dataset aus der XML-Dateien importieren.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Before you compile and run the sample, you need to create four XML files in the sample directory.</source>
          <target state="translated">Vor dem Kompilieren und des Beispiels ausführen müssen Sie vier XML-Dateien im Beispielverzeichnis zu erstellen.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>First, create ElementsWithAttributes.xml:</source>
          <target state="translated">Erstellen Sie zunächst ElementsWithAttributes.xml:</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Next, create ElementsWithChildElementsxml.xml:</source>
          <target state="translated">Als Nächstes erstellen Sie ElementsWithChildElementsxml.xml:</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Now create ElementsWithOnlyAttributes.xml:</source>
          <target state="translated">Erstellen Sie jetzt ElementsWithOnlyAttributes.xml:</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>And finally, create RepeatingElements.xml:</source>
          <target state="translated">Und schließlich RepeatingElements.xml erstellen:</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source>Now you can compile and run the following source code.</source>
          <target state="translated">Sie können jetzt kompilieren und führen den folgenden Quellcode.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXml">
          <source><bpt id="p1">[</bpt>How to Store Data of DataSet into XML File<ept id="p1">](https://code.msdn.microsoft.com/How-to-Store-Data-of-7b9710f3)</ept> has Visual Basic and C# projects for this sample.</source>
          <target state="translated"><bpt id="p1">[</bpt>Wie Store Daten des Datasets in XML-Datei<ept id="p1">](https://code.msdn.microsoft.com/How-to-Store-Data-of-7b9710f3)</ept> enthält Visual Basic- und C#-Projekte für dieses Beispiel.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>Returns the XML Schema for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Gibt das XSD-Schema für die XML-Darstellung der im <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> gespeicherten Daten zurück.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>String that is the XML Schema for the XML representation of the data stored in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Eine Zeichenfolge, die das XSD-Schema für die XML-Darstellung der im <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> gespeicherten Daten darstellt.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>Calling this method is identical to calling <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>, except that only the primary schema is written.</source>
          <target state="translated">Beim Aufrufen dieser Methode entspricht dem Aufruf <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph>, mit dem Unterschied, dass nur das primäre Schema geschrieben wird.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXmlSchema">
          <source><ph id="ph1">&lt;xref:System.Data.DataSet.GetXmlSchema%2A&gt;</ph> returns XML as a string, and therefore requires more overhead than <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> to write XML to a file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataSet.GetXmlSchema%2A&gt;</ph> Gibt die XML-Daten als eine Zeichenfolge zurück, und benötigt daher einen höheren Aufwand als <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> XML-Code in eine Datei schreiben.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>If you build a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> using schema inference and serialize it using XML or Web services, the column ordering may change.</source>
          <target state="translated">Wenn Sie erstellen eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schemaherleitung verwenden und die Serialisierung mithilfe von XML oder Webdiensten, die spaltensortierung kann geändert.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.GetXmlSchema">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, and then displays the schema in XML format.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, und klicken Sie dann das Schema im XML-Format angezeigt.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes, including new, deleted, or modified rows.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> Änderungen aufweist, einschließlich neuer, gelöschter oder geänderter Zeilen.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes, including new, deleted, or modified rows.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> Änderungen aufweist, einschließlich neuer, gelöschter oder geänderter Zeilen.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> Änderungen aufweist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.HasChanges">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method to create a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object that is then used to update a data source.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> Methode, um eine zweite <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> -Objekt, das dann zum Aktualisieren einer Datenquelle verwendet wird.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes, including new, deleted, or modified rows, filtered by <ph id="ph2">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> Änderungen aufweist, einschließlich neuer, gelöschter oder geänderter Zeilen, gefiltert durch <ph id="ph2">&lt;see cref="T:System.Data.DataRowState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> has changes; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> Änderungen aufweist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source>Examine the <ph id="ph1">&lt;xref:System.Data.DataSet.HasChanges%2A&gt;</ph> property of the <ph id="ph2">`DataSet`</ph> before invoking the <ph id="ph3">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method.</source>
          <target state="translated">Untersuchen Sie die <ph id="ph1">&lt;xref:System.Data.DataSet.HasChanges%2A&gt;</ph> Eigenschaft von der <ph id="ph2">`DataSet`</ph> vor dem Aufrufen der <ph id="ph3">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.HasChanges(System.Data.DataRowState)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method to create a second <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object, which is then used to update a data source.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> Methode, um eine zweite <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> -Objekt, das dann zum Aktualisieren einer Datenquelle verwendet wird.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.HasErrors">
          <source>Gets a value indicating whether there are errors in any of the <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects within this <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob in diesem <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> in einem der <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Objekte Fehler vorliegen.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any table contains an error;otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn eine Tabelle einen Fehler enthält, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>Each <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> also has a <ph id="ph3">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> property.</source>
          <target state="translated">Jede <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> verfügt auch über eine <ph id="ph3">&lt;xref:System.Data.DataTable.HasErrors%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>Use the <ph id="ph1">`HasErrors`</ph> property of the <ph id="ph2">`DataSet`</ph> first, to determine if any table has errors, before checking individual <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects.</source>
          <target state="translated">Verwenden der <ph id="ph1">`HasErrors`</ph> Eigenschaft von der <ph id="ph2">`DataSet`</ph> ersten, um festzustellen, ob eine Tabelle Fehler, bevor eine Überprüfung einzelner enthält <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>If a <ph id="ph1">`DataTable`</ph> has errors, the <ph id="ph2">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph> method returns an array of <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects containing the errors.</source>
          <target state="translated">Wenn eine <ph id="ph1">`DataTable`</ph> weist einen Fehler, die <ph id="ph2">&lt;xref:System.Data.DataTable.GetErrors%2A&gt;</ph> Methode gibt ein Array von <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> -Objekten, die Fehler enthält.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.HasErrors%2A&gt;</ph> property to determine whether a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object contains errors.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.HasErrors%2A&gt;</ph> -Eigenschaft können Sie bestimmen, ob ein <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> -Objekt Fehler enthält.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.HasErrors">
          <source>If so, the errors for each <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> in each <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> are printed.</source>
          <target state="translated">Wenn dies der Fall ist, die Fehler für die einzelnen <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> in den einzelnen <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> werden gedruckt.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Applies XML schema to the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Wendet ein XML-Schema auf das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
          <source>The <ph id="ph1">&lt;see langword="Stream" /&gt;</ph> from which to read the schema.</source>
          <target state="translated">Der <ph id="ph1">&lt;see langword="Stream" /&gt;</ph>, aus dem das Schema gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.Stream,System.String[])">
          <source>Applies the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Wendet das XML-Schema aus dem angegebenen <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> auf das <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> from which to read the schema.</source>
          <target state="translated">Der <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>, aus dem das Schema gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.IO.TextReader,System.String[])">
          <source>Applies the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Wendet das XML-Schema aus dem angegebenen <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> auf das <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>The name of the file (including the path) from which to read the schema.</source>
          <target state="translated">Der Name der Datei, aus der das Schema gelesen werden soll, einschließlich des Pfades.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>Applies the XML schema from the specified file to the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Wendet das XML-Schema aus der angegebenen Datei auf das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> ist nicht auf <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>For reading and writing files.</source>
          <target state="translated">Zum Lesen und Schreiben von Dateien.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.InferXmlSchema(System.String,System.String[])">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
          <source>The <ph id="ph1">&lt;see langword="XMLReader" /&gt;</ph> from which to read the schema.</source>
          <target state="translated">Der <ph id="ph1">&lt;see langword="XMLReader" /&gt;</ph>, aus dem das Schema gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
          <source>An array of namespace Uniform Resource Identifier (URI) strings to be excluded from schema inference.</source>
          <target state="translated">Ein Array von Zeichenfolgen für Namespace-URIs (Uniform Resource Identifier), die aus dem Schemarückschluss ausgeschlossen werden sollen.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InferXmlSchema(System.Xml.XmlReader,System.String[])">
          <source>Applies the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Wendet das XML-Schema aus dem angegebenen <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> auf das <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> an.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="E:System.Data.DataSet.Initialized">
          <source>Occurs after the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is initialized.</source>
          <target state="translated">Tritt nach dem Initialisieren der <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> auf.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataSet.Initialized">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Data.DataSet.IsInitialized%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.Data.DataSet.IsInitialized%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.InitializeDerivedDataSet">
          <source>Deserialize all of the tables data of the DataSet from the binary or XML stream.</source>
          <target state="translated">Deserialisiert alle Tabellendaten des Dataset aus dem Binär- oder XML-Stream.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> object.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Inspects the format of the serialized representation of the <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">Überprüft das Format der serialisierten Darstellung des <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> represents a <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> serialized in its binary format, <ph id="ph4">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die angegebene <ph id="ph2">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> ein in seinem Binärformat serialisiertes <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> darstellt, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.IsBinarySerialized(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.IsInitialized">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> is initialized.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> initialisiert wurde.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.IsInitialized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to indicate the component has completed initialization; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um anzugeben, dass die Initialisierung der Komponente abgeschlossen ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.IsInitialized">
          <source>Returns the status of the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> while it’s being constructed, for instance by Visual Studio.</source>
          <target state="translated">Gibt den Status der <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> während der Erstellung, für die Instanz von Visual Studio.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.IsInitialized">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> method sets it to <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> method sets it to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.BeginInit%2A&gt;</ph> Methode wird auf <ph id="ph2">`false`</ph> und <ph id="ph3">&lt;xref:System.Data.DataSet.EndInit%2A&gt;</ph> Methode wird auf <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>.</source>
          <target state="translated">Füllt eine <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> mit Werten aus einer Datenquelle, die den angegebenen <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method provides a technique for filling a single <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with data, retrieved from an <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Methode bietet eine Möglichkeit zum Füllen einer einzelnen <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> mit Daten, aus einer <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">`IDataReader`</ph> into multiple tables within a <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">Diese Methode bietet dieselbe Funktionalität, ermöglicht aber das Laden mehrerer Resultsets aus einer <ph id="ph1">`IDataReader`</ph> in mehrere Tabellen innerhalb einer <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>If the <ph id="ph1">`DataSet`</ph> already contains rows, the incoming data from the data source is merged with the existing rows.</source>
          <target state="translated">Wenn die <ph id="ph1">`DataSet`</ph> bereits Zeilen enthält, werden die eingehenden Daten aus der Datenquelle mit den vorhandenen Zeilen zusammengeführt.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`Load`</ph> method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a <ph id="ph2">`DataSet`</ph>).</source>
          <target state="translated">Die <ph id="ph1">`Load`</ph> Methode kann verwendet werden, in mehrere allgemeine Szenarien, darum Abrufen von Daten aus einer bestimmten Datenquelle und den aktuellen Datencontainer hinzugefügt (in diesem Fall eine <ph id="ph2">`DataSet`</ph>).</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>These scenarios describe standard usage for a <ph id="ph1">`DataSet`</ph>, describing its update and merge behavior.</source>
          <target state="translated">Diese Szenarien beschreiben Standardverfahren für die eine <ph id="ph1">`DataSet`</ph>, beschreiben Sie das Update und merge-Verhalten.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>A <ph id="ph1">`DataSet`</ph> synchronizes or updates with a single primary data source.</source>
          <target state="translated">Ein <ph id="ph1">`DataSet`</ph> anhand einer einzigen primären Datenquelle synchronisiert oder aktualisiert.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`DataSet`</ph> tracks changes, allowing synchronization with the primary data source.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> verfolgt Änderungen, sodass die Synchronisierung mit der primären Datenquelle.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In addition, a <ph id="ph1">`DataSet`</ph> can accept incremental data from one or more secondary data sources.</source>
          <target state="translated">Darüber hinaus eine <ph id="ph1">`DataSet`</ph> inkrementelle Daten aus einem oder mehreren sekundären Datenquellen akzeptieren können.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`DataSet`</ph> isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> ist nicht verantwortlich für das Nachverfolgen von Änderungen um Synchronisierung mit der sekundären Datenquelle zu ermöglichen.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</source>
          <target state="translated">Wenn Sie diese beiden hypothetischen Datenquellen, ist ein Benutzer voraussichtlich benötigt eine der folgenden Verhaltensweisen:</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Initialize <ph id="ph1">`DataSet`</ph> from a primary data source.</source>
          <target state="translated">Initialisieren <ph id="ph1">`DataSet`</ph> aus einer primären Datenquelle.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In this scenario, the user wants to initialize an empty <ph id="ph1">`DataSet`</ph> with values from the primary data source.</source>
          <target state="translated">In diesem Szenario wird der Benutzer ein leeres initialisieren möchte <ph id="ph1">`DataSet`</ph> mit Werten aus der primären Datenquelle.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>One or more DataTable's contents are modified.</source>
          <target state="translated">Mindestens ein DataTable-Inhalt wird geändert.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Later the user intends to propagate changes back to the primary data source.</source>
          <target state="translated">Der Benutzer möchte später Weitergeben von Änderungen an der primären Datenquelle.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Preserve changes and re-synchronize from the primary data source.</source>
          <target state="translated">Änderungen beibehalten und erneut über die primäre Datenquelle synchronisieren.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In this scenario, the user wants to take the <ph id="ph1">`DataSet`</ph> filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">In diesem Szenario möchte der Benutzer wird die <ph id="ph1">`DataSet`</ph> im vorherigen Szenario gefüllt, und führen Sie eine inkrementelle Synchronisierung mit der primären Datenquelle beibehalten der Änderungen der <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Incremental data feed from secondary data sources.</source>
          <target state="translated">Inkrementelle Datenfeed aus sekundären Datenquellen.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</source>
          <target state="translated">In diesem Szenario möchten die Benutzer zum Zusammenführen von Änderungen aus einem oder mehreren sekundären Datenquellen und zurück an die primäre Datenquelle weitergeben.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`Load`</ph> method makes all these scenarios possible.</source>
          <target state="translated">Die <ph id="ph1">`Load`</ph> Methode ermöglicht all diesen Szenarien.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>This method allows you to specify a load option parameter, indicating how rows already in a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> combine with rows being loaded.</source>
          <target state="translated">Diese Methode ermöglicht Ihnen die Angabe einer Optionsparameter laden, der angibt, wie Zeilen bereits in einer <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> mit geladenen Zeilen kombiniert werden.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The following table describes the three load options provided by the <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated">Die folgende Tabelle beschreibt die drei Ladeoptionen gebotenen der <ph id="ph1">&lt;xref:System.Data.LoadOption&gt;</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</source>
          <target state="translated">In jedem Fall gibt die Beschreibung des Verhaltens, wenn der Primärschlüssel einer Zeile in den empfangenen Daten den Primärschlüssel einer vorhandenen Zeile übereinstimmt.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Load Option</source>
          <target state="translated">Laden Sie die Option</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source><ph id="ph1">`PreserveChanges`</ph> (default)</source>
          <target state="translated"><ph id="ph1">`PreserveChanges`</ph> (Standardwert)</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Updates the original version of the row with the value of the incoming row.</source>
          <target state="translated">Aktualisiert die ursprüngliche Version der Zeile mit dem Wert der hinzukommenden Zeile an.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Updates the current and original versions of the row with the value of the incoming row.</source>
          <target state="translated">Die aktuellen und ursprüngliche Version der Zeile aktualisiert mit dem Wert der hinzukommenden Zeile.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>Updates the current version of the row with the value of the incoming row.</source>
          <target state="translated">Aktualisiert die aktuelle Version der Zeile mit dem Wert der hinzukommenden Zeile an.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>In general, the <ph id="ph1">`PreserveChanges`</ph> and <ph id="ph2">`OverwriteChanges`</ph> options are intended for scenarios in which the user needs to synchronize the <ph id="ph3">`DataSet`</ph> and its changes with the primary data source.</source>
          <target state="translated">Im Allgemeinen die <ph id="ph1">`PreserveChanges`</ph> und <ph id="ph2">`OverwriteChanges`</ph> Optionen dienen für Szenarien, in denen der Benutzer synchronisieren muss, die <ph id="ph3">`DataSet`</ph> und die Änderungen mit der primären Datenquelle.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DataSet">
          <source>The <ph id="ph1">`Upsert`</ph> option facilitates aggregating changes from one or more secondary data sources.</source>
          <target state="translated">Die <ph id="ph1">`Upsert`</ph> Option erleichtert das Aggregieren Änderungen aus einem oder mehreren sekundären Datenquellen.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides one or more result sets.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, der ein oder mehrere Resultsets bereitstellt.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances within the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">Ein Wert aus der <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph>-Enumeration, der angibt, wie bereits in den <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Instanzen des <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances, from which the <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /&gt;</ph> method retrieves name and namespace information.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Instanzen, aus dem die <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])" /&gt;</ph>-Methode Namens- und Namespaceinformationen abruft.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>Each of these tables must be a member of the <ph id="ph1">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph> contained by this <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Jede dieser Tabellen muss ein Member der <ph id="ph1">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph> sein, die in diesem <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> enthalten ist.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, using an array of <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances to supply the schema and namespace information.</source>
          <target state="translated">Füllt ein <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> mit Werten aus einer Datenquelle. Dazu werden der bereitgestellte <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> sowie ein Array von <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Instanzen verwendet, mit dem Schema- und Namespaceinformationen bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method provides a technique for filling a single <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with data, retrieved from an <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Methode bietet eine Möglichkeit zum Füllen einer einzelnen <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> mit Daten, aus einer <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> into multiple tables within a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Diese Methode bietet dieselbe Funktionalität, ermöglicht aber das Laden mehrerer Resultsets aus einer <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> in mehrere Tabellen innerhalb einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The load operation will fail with an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">Der Ladevorgang schlägt mit einer <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Wenn eine der Spalten in der eingehenden Daten <ph id="ph2">`reader`</ph> berechnete Spalten sind.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated">Die <ph id="ph1">`loadOption`</ph> Parameter können Sie angeben, wie Sie möchten die importierten Daten für die Interaktion mit vorhandenen Daten und können einen der Werte aus den <ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>See the documentation for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph><ph id="ph2">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method for more information on using this parameter.</source>
          <target state="translated">Finden Sie in der Dokumentation für die <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> <ph id="ph2">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Methode für die Weitere Informationen zur Verwendung dieses Parameters.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated">Die <ph id="ph1">`tables`</ph> Parameter ermöglicht Ihnen die Angabe ein Array von <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Instanzen, der die Reihenfolge der Tabellen für jeden aus dem Reader geladen Resultset angibt.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method fills each supplied <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instance with data from a single result set from the source data reader.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> -Methode füllt jede angegebene <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> -Instanz mit Daten aus einem einzelnen Resultset aus der Quelle Datenleser.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>After each result set, the <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">Nach jedem Resultset der <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> Methode wechselt zum nächsten Resultset im Reader, bis keine weiteren Resultsets vorhanden sind.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The name resolution scheme for this method is the same as that followed by the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class.</source>
          <target state="translated">Schema für diese Methode ist identisch, gefolgt von der <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, adds two <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instances to the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, and then fills the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> using the <ph id="ph5">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method, retrieving data from a <ph id="ph6">&lt;xref:System.Data.DataTableReader&gt;</ph> that contains two result sets.</source>
          <target state="translated">Das folgende Beispiel erstellt eine neue <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, addiert zwei <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> -Instanzen der <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, und füllt dann die <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> mithilfe der <ph id="ph5">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> -Methode, Abrufen von Daten aus einer <ph id="ph6">&lt;xref:System.Data.DataTableReader&gt;</ph> , die zwei Resultsets enthält.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.DataTable[])">
          <source>Finally, the example displays the contents of the tables in the console window.</source>
          <target state="translated">Schließlich zeigt das Beispiel den Inhalt der Tabellen im Konsolenfenster angezeigt.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides one or more result sets.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, der ein oder mehrere Resultsets bereitstellt.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances within the <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">Ein Wert aus der <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph>-Enumeration, der angibt, wie bereits in den <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Instanzen des <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>An array of strings, from which the <ph id="ph1">&lt;see langword="Load" /&gt;</ph> method retrieves table name information.</source>
          <target state="translated">Ein Zeichenfolgenarray, aus dem die <ph id="ph1">&lt;see langword="Load" /&gt;</ph>-Methode Tabellennameninformationen abruft.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, using an array of strings to supply the names for the tables within the <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">Füllt ein <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> mit Werten aus einer Datenquelle. Dazu wird der bereitgestellte <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> sowie ein Array von Zeichenfolgen verwendet, mit dem die Namen der Tabellen im <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method provides a technique for filling a single <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with data, retrieved from an <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Methode bietet eine Möglichkeit zum Füllen einer einzelnen <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> mit Daten, aus einer <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">`IDataReader`</ph> into multiple tables within a <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated">Diese Methode bietet dieselbe Funktionalität, ermöglicht aber das Laden mehrerer Resultsets aus einer <ph id="ph1">`IDataReader`</ph> in mehrere Tabellen innerhalb einer <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The load operation will fail with an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">Der Ladevorgang schlägt mit einer <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Wenn eine der Spalten in der eingehenden Daten <ph id="ph2">`reader`</ph> berechnete Spalten sind.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated">Die <ph id="ph1">`loadOption`</ph> Parameter können Sie angeben, wie Sie möchten die importierten Daten für die Interaktion mit vorhandenen Daten und können einen der Werte aus den <ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>See the documentation for the <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method for more information on using this parameter.</source>
          <target state="translated">Finden Sie in der Dokumentation für die <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Methode für die Weitere Informationen zur Verwendung dieses Parameters.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of table names, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated">Die <ph id="ph1">`tables`</ph> Parameter ermöglicht Ihnen die Angabe ein Array von Tabellennamen, Spaltennamen, der die Reihenfolge der Tabellen für jeden aus dem Reader geladen Resultset angibt.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The <ph id="ph1">`Load`</ph> method attempts to find a table within the <ph id="ph2">`DataSet`</ph> matching the name found in the array of table names, in order.</source>
          <target state="translated">Die <ph id="ph1">`Load`</ph> Methode versucht, eine Tabelle innerhalb suchen die <ph id="ph2">`DataSet`</ph> stimmen mit dem Namen im Array der Tabellennamen, in der Reihenfolge gefunden.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>If a matching table is found, that table is loaded with the content of the current result set.</source>
          <target state="translated">Wenn eine übereinstimmende Tabelle gefunden wird, wird diese Tabelle mit dem Inhalt des aktuellen Resultsets geladen.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>If no matching table is found, a table is created using the name supplied in the array of table names, and the new table's schema is inferred from the result set.</source>
          <target state="translated">Wenn keine übereinstimmende Tabelle gefunden wird, wird eine Tabelle erstellt, mit dem Namen in das Array von Tabellennamen angegeben und Schema der neuen Tabelle aus dem Resultset abgeleitet ist.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>After each result set, the <ph id="ph1">`Load`</ph> method moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">Nach jedem Resultset der <ph id="ph1">`Load`</ph> Methode wechselt zum nächsten Resultset im Reader, bis keine weiteren Resultsets vorhanden sind.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The default namespace associated with <ph id="ph1">`DataSet`</ph>, if any, is associated with each newly created <ph id="ph2">`DataTable`</ph>.</source>
          <target state="translated">Der Standardnamespace zugeordnet <ph id="ph1">`DataSet`</ph>, sofern vorhanden, wird mit jedem neu erstellten zugeordneten <ph id="ph2">`DataTable`</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The name resolution scheme for this method is the same as that followed by the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class.</source>
          <target state="translated">Schema für diese Methode ist identisch, gefolgt von der <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The following Console application example first creates tables and loads data from a reader into a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, using the <ph id="ph2">`Load`</ph> method.</source>
          <target state="translated">Im folgenden Konsolenanwendungsbeispiel zuerst die Tabellen erstellt und lädt Daten aus einem Reader in einer <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>unter Verwendung der <ph id="ph2">`Load`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>The example then adds tables to a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and attempts to fill the tables with data from a <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>.</source>
          <target state="translated">Im Beispiel fügt dann die Tabellen in einer <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> und versucht, die Tabellen mit Daten füllen einer <ph id="ph2">&lt;xref:System.Data.DataTableReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>In this example, because the parameters passed to the <ph id="ph1">`Load`</ph> method indicate a table name that does not exist, the <ph id="ph2">`Load`</ph> method creates a new table to match the name passed as a parameter.</source>
          <target state="translated">In diesem Beispiel, da die Parameter, um übergeben die <ph id="ph1">`Load`</ph> Methode anzugeben, den Namen einer Tabelle, die nicht vorhanden ist, die <ph id="ph2">`Load`</ph> Methode erstellt eine neue Tabelle entsprechend den Namen, die als Parameter übergeben.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.String[])">
          <source>Once the data has been loaded, the example displays the contents of all its tables in the Console window.</source>
          <target state="translated">Sobald die Daten geladen wurden, zeigt das Beispiel den Inhalt aller Tabellen im Konsolenfenster angezeigt.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> that provides one or more result sets.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, der ein oder mehrere Resultsets bereitstellt.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph> enumeration that indicates how rows already in the <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances within the <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> will be combined with incoming rows that share the same primary key.</source>
          <target state="translated">Ein Wert aus der <ph id="ph1">&lt;see cref="T:System.Data.LoadOption" /&gt;</ph>-Enumeration, der angibt, wie bereits in den <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Instanzen des <ph id="ph3">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph> delegate to call when an error occurs while loading data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.FillErrorEventHandler" /&gt;</ph>-Delegat, der aufgerufen wird, wenn beim Laden von Daten Fehler auftreten.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances, from which the <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /&gt;</ph> method retrieves name and namespace information.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Instanzen, aus dem die <ph id="ph2">&lt;see cref="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])" /&gt;</ph>-Methode Namens- und Namespaceinformationen abruft.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>Fills a <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> with values from a data source using the supplied <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph>, using an array of <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> instances to supply the schema and namespace information.</source>
          <target state="translated">Füllt ein <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> mit Werten aus einer Datenquelle. Dazu werden der bereitgestellte <ph id="ph2">&lt;see cref="T:System.Data.IDataReader" /&gt;</ph> sowie ein Array von <ph id="ph3">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Instanzen verwendet, mit dem Schema- und Namespaceinformationen bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method provides a technique for filling a single <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> with data, retrieved from an <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> instance.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Methode bietet eine Möglichkeit zum Füllen einer einzelnen <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> mit Daten, aus einer <ph id="ph3">&lt;xref:System.Data.IDataReader&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>This method provides the same functionality, but allows you to load multiple result sets from an <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> into multiple tables within a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Diese Methode bietet dieselbe Funktionalität, ermöglicht aber das Laden mehrerer Resultsets aus einer <ph id="ph1">&lt;xref:System.Data.IDataReader&gt;</ph> in mehrere Tabellen innerhalb einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The load operation will fail with an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> if any of the source data columns in the incoming <ph id="ph2">`reader`</ph> are computed columns.</source>
          <target state="translated">Der Ladevorgang schlägt mit einer <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> Wenn eine der Spalten in der eingehenden Daten <ph id="ph2">`reader`</ph> berechnete Spalten sind.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">`loadOption`</ph> parameter allows you to specify how you want the imported data to interact with existing data, and can be any of the values from the <ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph> enumeration.</source>
          <target state="translated">Die <ph id="ph1">`loadOption`</ph> Parameter können Sie angeben, wie Sie möchten die importierten Daten für die Interaktion mit vorhandenen Daten und können einen der Werte aus den <ph id="ph2">&lt;xref:System.Data.LoadOption&gt;</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>See the documentation for the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph><ph id="ph2">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> method for more information on using this parameter.</source>
          <target state="translated">Finden Sie in der Dokumentation für die <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> <ph id="ph2">&lt;xref:System.Data.DataTable.Load%2A&gt;</ph> Methode für die Weitere Informationen zur Verwendung dieses Parameters.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">`errorHandler`</ph> parameter is a <ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> delegate that refers to a procedure that is called when an error occurs while loading data.</source>
          <target state="translated">Die <ph id="ph1">`errorHandler`</ph> Parameter ist ein <ph id="ph2">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> Delegat, der auf eine Prozedur, die aufgerufen wird verweist, tritt ein Fehler beim Laden von Daten.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> being filled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> an die Prozedur übergebenen Parameter enthält Eigenschaften, die Sie zum Abrufen von Informationen zu den aufgetretenen Fehler, die aktuelle Zeile der Daten zu ermöglichen und die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> gefüllt wird.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</source>
          <target state="translated">Mithilfe dieses Delegatmechanismus, anstatt ein einfacher Try/Catch-Block, können Sie den Fehler ermitteln die Situation zu behandeln, und die Verarbeitung fortzusetzen bei Bedarf.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> parameter supplies a <ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> property: set this property to <ph id="ph3">`true`</ph> to indicate that you have handled the error and wish to continue processing; set the property to <ph id="ph4">`false`</ph> to indicate that you wish to halt processing.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.FillErrorEventArgs&gt;</ph> Parameter liefert eine <ph id="ph2">&lt;xref:System.Data.FillErrorEventArgs.Continue%2A&gt;</ph> Eigenschaft: Legen Sie diese Eigenschaft auf <ph id="ph3">`true`</ph> um anzugeben, dass Sie den Fehler und die Verarbeitung zu fortfahren möchten behandelt haben legen Sie die Eigenschaft auf <ph id="ph4">`false`</ph> um anzugeben, dass die Verarbeitung angehalten werden soll.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>Be aware that setting the property to <ph id="ph1">`false`</ph> causes the code that triggered the problem to throw an exception.</source>
          <target state="translated">Beachten Sie das Festlegen der Eigenschaft auf <ph id="ph1">`false`</ph> bewirkt, dass den Code, der das Problem, um eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">`tables`</ph> parameter allows you to specify an array of <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instances, indicating the order of the tables corresponding to each result set loaded from the reader.</source>
          <target state="translated">Die <ph id="ph1">`tables`</ph> Parameter ermöglicht Ihnen die Angabe ein Array von <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> Instanzen, der die Reihenfolge der Tabellen für jeden aus dem Reader geladen Resultset angibt.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method fills each supplied <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> instance with data from a single result set from the source data reader.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> -Methode füllt jede angegebene <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> -Instanz mit Daten aus einem einzelnen Resultset aus der Quelle Datenleser.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>After each result set, the <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method moves on to the next result set within the reader, until there are no more result sets.</source>
          <target state="translated">Nach jedem Resultset der <ph id="ph1">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> Methode wechselt zum nächsten Resultset im Reader, bis keine weiteren Resultsets vorhanden sind.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The name resolution scheme for this method is the same as that followed by the <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> class.</source>
          <target state="translated">Schema für diese Methode ist identisch, gefolgt von der <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The following example adds a table to a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, and then attempts to use the <ph id="ph2">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> method to load data from a <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> that contains an incompatible schema.</source>
          <target state="translated">Im folgenden Beispiel wird eine Tabelle, die eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, und versucht anschließend, verwenden Sie die <ph id="ph2">&lt;xref:System.Data.DataSet.Load%2A&gt;</ph> -Methode zum Laden von Daten aus einer <ph id="ph3">&lt;xref:System.Data.DataTableReader&gt;</ph> , enthält ein Schema nicht kompatibel.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>Rather than trapping the error, this example uses a <ph id="ph1">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> delegate to investigate and handle the error.</source>
          <target state="translated">Anstatt aufgefangen, in diesem Beispiel verwendet eine <ph id="ph1">&lt;xref:System.Data.FillErrorEventHandler&gt;</ph> Delegaten zu untersuchen und der Fehler behandelt werden.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler,System.Data.DataTable[])">
          <source>The output is displayed in the console window.</source>
          <target state="translated">Die Ausgabe wird im Konsolenfenster angezeigt.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Locale">
          <source>Gets or sets the locale information used to compare strings within the table.</source>
          <target state="translated">Ruft die Gebietsschemainformationen ab, die für den Vergleich von Zeichenfolgen in der Tabelle verwendet werden, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>A <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> that contains data about the user's machine locale.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph>, die Daten zum Computergebietsschema des Benutzers enthält.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> property specifies the locale for which sorting applies.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> Eigenschaft gibt das Gebietsschema die Sortierung angewendet wird.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>By default, setting the <ph id="ph1">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> also sets the <ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> for each <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> object in that <ph id="ph5">`DataSet`</ph> to the same value.</source>
          <target state="translated">Standardmäßig Festlegen der <ph id="ph1">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> setzt auch die <ph id="ph3">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph> für jede <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> Objekt im, <ph id="ph5">`DataSet`</ph> auf den gleichen Wert.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>In columns that contain expressions, the <ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph> is used.</source>
          <target state="translated">In Spalten, Ausdrücke, enthalten, die <ph id="ph1">&lt;xref:System.StringComparison.InvariantCulture&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>The <ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph> is ignored.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.StringComparison.CurrentCulture&gt;</ph> wird ignoriert.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Locale">
          <source>The following example gets the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> and prints the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DisplayName%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.EnglishName%2A&gt;</ph> properties.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> und druckt die <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DisplayName%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.EnglishName%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, or array of <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into the current <ph id="ph4">&lt;see langword="DataSet" /&gt;</ph> or <ph id="ph5">&lt;see langword="DataTable" /&gt;</ph>.</source>
          <target state="translated">Führt ein angegebenes <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, eine <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> oder ein Array von <ph id="ph3">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Objekten mit dem aktuellen <ph id="ph4">&lt;see langword="DataSet" /&gt;</ph> oder der <ph id="ph5">&lt;see langword="DataTable" /&gt;</ph> zusammen.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The array of <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph> objects to be merged into the <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">Das Array von <ph id="ph1">&lt;see langword="DataRow" /&gt;</ph>-Objekten, das mit dem <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> zusammengeführt werden soll.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>Merges an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into the current <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Führt ein Array von <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Objekten mit dem aktuellen <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> zusammen.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode wird verwendet, um zwei merge <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte, die Schemas weitgehend ähnlich sind.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit den neuesten Daten aus der Datenquelle.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">In einer Clientanwendung ist es üblich, eine einzelne Schaltfläche, die der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene zu verwenden.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">In diesem Szenario die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> -Methode zuerst aufgerufen.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Eine zweite Methodenrückgabe <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> für validieren und Zusammenführen optimiert.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Dieses zweite <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Objekt enthält nur die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> und <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>This subset is generally smaller and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Diese Teilmenge wird in der Regel kleiner und somit effizienter an eine Komponente der mittleren Ebene zurückgegeben.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Die mittlere Ebene kann dann zurücksenden entweder ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit der <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode aufgerufen wird, werden die Schemas der beiden <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte verglichen werden, da es möglich ist, dass die Schemas möglicherweise geändert wurden.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Z. B. in einem Business-to-Business-Szenario wurden neue Spalten möglicherweise auf ein XML-Schema durch einen automatisierten Prozess hinzugefügt haben.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Wenn die Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schemaelemente enthält (hinzugefügt <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> Objekte), die nicht im Ziel vorhanden sind, die Elemente des Schemas können mit dem Ziel hinzugefügt werden, durch Festlegen der <ph id="ph3">`missingSchemaAction`</ph> Argument <ph id="ph4">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">In diesem Fall wird das zusammengeführte <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> hinzugefügte Schema und Daten enthält.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Nach dem Zusammenführen von Schemas, werden die Daten zusammengeführt.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Beim Zusammenführen einer neuen Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> in das Ziel Quellzeilen mit einer <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> Wert <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, oder <ph id="ph5">`Deleted`</ph> Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen werden.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>Source rows with a <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Zeilen mit Quelle ein <ph id="ph1">&lt;xref:System.Data.DataRowState&gt;</ph> Wert <ph id="ph2">`Added`</ph> neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Beim Zusammenführen werden Einschränkungen deaktiviert.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>If any constraints cannot be enabled at the end of a merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Wenn alle Einschränkungen am Ende einer Zusammenführung aktiviert werden, können keiner <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> wird generiert, und die zusammengeführten Daten werden beibehalten, während die Einschränkungen deaktiviert sind.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph>, und alle Zeilen, die ungültig sind Fehler gekennzeichnet sind.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[])">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Der Fehler müssen behoben werden, bevor Sie versuchen, Zurücksetzen der <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated">Die <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>, deren Daten und Schema zusammengeführt werden.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and its schema into the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">Führt ein angegebenes <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> und das entsprechende Schema mit dem aktuellen <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> zusammen.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode wird verwendet, um zwei merge <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte, die Schemas weitgehend ähnlich sind.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit den neuesten Daten aus der Datenquelle.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">In einer Clientanwendung ist es üblich, eine einzelne Schaltfläche, die der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene zu verwenden.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">In diesem Szenario die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> -Methode zuerst aufgerufen.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Eine zweite Methodenrückgabe <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> für validieren und Zusammenführen optimiert.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Dieses zweite <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Objekt enthält nur die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> und <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Diese Teilmenge wird in der Regel kleiner und somit mehr effizient übergeben an eine Komponente der mittleren Ebene.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Die mittlere Ebene kann dann zurücksenden entweder ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit der <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode aufgerufen wird, werden die Schemas der beiden <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte verglichen werden, da es möglich ist, dass die Schemas möglicherweise geändert wurden.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Z. B. in einem Business-to-Business-Szenario wurden neue Spalten möglicherweise auf ein XML-Schema durch einen automatisierten Prozess hinzugefügt haben.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Wenn die Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schemaelemente enthält (hinzugefügt <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> Objekte), die nicht im Ziel vorhanden sind, die Elemente des Schemas können mit dem Ziel hinzugefügt werden, durch Festlegen der <ph id="ph3">`missingSchemaAction`</ph> Argument <ph id="ph4">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">In diesem Fall wird das zusammengeführte <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> hinzugefügte Schema und Daten enthält.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Nach dem Zusammenführen von Schemas, werden die Daten zusammengeführt.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Beim Zusammenführen einer neuen Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> in das Ziel Quellzeilen mit einer <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> Wert <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, oder <ph id="ph5">`Deleted`</ph> Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen werden.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Zeilen mit Quelle ein <ph id="ph1">`DataRowState`</ph> Wert <ph id="ph2">`Added`</ph> neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Beim Zusammenführen werden Einschränkungen deaktiviert.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Wenn alle Einschränkungen am Ende der Zusammenführung aktiviert werden, können keiner <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> wird generiert, und die zusammengeführten Daten werden beibehalten, während die Einschränkungen deaktiviert sind.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph>, und alle Zeilen, die ungültig sind Fehler gekennzeichnet sind.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Der Fehler müssen behoben werden, bevor Sie versuchen, Zurücksetzen der <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>, Update, and <ph id="ph2">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> methods on a <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph>, Update- und <ph id="ph2">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methoden auf eine <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>One or more constraints cannot be enabled.</source>
          <target state="translated">Mindestens eine Einschränkung kann nicht aktiviert werden.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet)">
          <source>The <ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, deren Daten und Schema zusammengeführt werden.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> and its schema into the current <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Führt ein angegebenes <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> und das entsprechende Schema mit dem aktuellen <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> zusammen.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode wird verwendet, um zwei merge <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte, die Schemas weitgehend ähnlich sind.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit den neuesten Daten aus der Datenquelle.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">In einer Clientanwendung ist es üblich, eine einzelne Schaltfläche, die der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene zu verwenden.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">In diesem Szenario die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> -Methode zuerst aufgerufen.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Eine zweite Methodenrückgabe <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> für validieren und Zusammenführen optimiert.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Dieses zweite <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Objekt enthält nur die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> und <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Diese Teilmenge wird in der Regel kleiner und somit mehr effizient übergeben an eine Komponente der mittleren Ebene.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Die mittlere Ebene kann dann zurücksenden entweder ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit der <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode aufgerufen wird, werden die Schemas der beiden <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte verglichen werden, da es möglich ist, dass die Schemas möglicherweise geändert wurden.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Z. B. in einem Business-to-Business-Szenario wurden neue Spalten möglicherweise auf ein XML-Schema durch einen automatisierten Prozess hinzugefügt haben.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Wenn die Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schemaelemente enthält (hinzugefügt <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> Objekte), die nicht im Ziel vorhanden sind, die Elemente des Schemas können mit dem Ziel hinzugefügt werden, durch Festlegen der <ph id="ph3">`missingSchemaAction`</ph> Argument <ph id="ph4">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">In diesem Fall wird das zusammengeführte <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> hinzugefügte Schema und Daten enthält.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Nach dem Zusammenführen von Schemas, werden die Daten zusammengeführt.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Beim Zusammenführen einer neuen Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> in das Ziel Quellzeilen mit einer <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> Wert <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, oder <ph id="ph5">`Deleted`</ph> Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen werden.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Zeilen mit Quelle ein <ph id="ph1">`DataRowState`</ph> Wert <ph id="ph2">`Added`</ph> neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Beim Zusammenführen werden Einschränkungen deaktiviert.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Wenn alle Einschränkungen am Ende der Zusammenführung aktiviert werden, können keiner <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> wird generiert, und die zusammengeführten Daten werden beibehalten, während die Einschränkungen deaktiviert sind.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph>, und alle Zeilen, die ungültig sind Fehler gekennzeichnet sind.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Der Fehler müssen behoben werden, bevor Sie versuchen, Zurücksetzen der <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einer Tabelle, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created that is identical to the first.</source>
          <target state="translated">Ein zweites <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> wird erstellt, mit dem ersten identisch.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>Two rows are added to the second table, which is then merged into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Zwei Zeilen werden hinzugefügt, auf die zweite Tabelle, der dann, in zusammengeführt wird der <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;paramref name="table" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="table" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated">Die <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>, deren Daten und Schema zusammengeführt werden.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve changes in the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um am aktuellen <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> vorgenommene Änderungen beizubehalten, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and its schema into the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>, preserving or discarding any changes in this <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> according to the given argument.</source>
          <target state="translated">Führt ein angegebenes <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> und sein Schema mit dem aktuellen <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> zusammen. Dabei werden entsprechend dem angegebenen Argument alle Änderungen in diesem <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> beibehalten oder verworfen.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode wird verwendet, um zwei merge <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte, die Schemas weitgehend ähnlich sind.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit den neuesten Daten aus der Datenquelle.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">In einer Clientanwendung ist es üblich, eine einzelne Schaltfläche, die der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene zu verwenden.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">In diesem Szenario die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> -Methode zuerst aufgerufen.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Eine zweite Methodenrückgabe <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> für validieren und Zusammenführen optimiert.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Dieses zweite <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Objekt enthält nur die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> und <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Diese Teilmenge wird in der Regel kleiner und somit mehr effizient übergeben an eine Komponente der mittleren Ebene.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Die mittlere Ebene kann dann zurücksenden entweder ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit der <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode aufgerufen wird, werden die Schemas der beiden <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte verglichen werden, da es möglich ist, dass die Schemas möglicherweise geändert wurden.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Z. B. in einem Business-to-Business-Szenario wurden neue Spalten möglicherweise auf ein XML-Schema durch einen automatisierten Prozess hinzugefügt haben.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Wenn die Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schemaelemente enthält (hinzugefügt <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> Objekte), die nicht im Ziel vorhanden sind, die Elemente des Schemas können mit dem Ziel hinzugefügt werden, durch Festlegen der <ph id="ph3">`missingSchemaAction`</ph> Argument <ph id="ph4">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">In diesem Fall wird das zusammengeführte <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> hinzugefügte Schema und Daten enthält.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Nach dem Zusammenführen von Schemas, werden die Daten zusammengeführt.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Beim Zusammenführen einer neuen Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> in das Ziel Quellzeilen mit einer <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> Wert <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, oder <ph id="ph5">`Deleted`</ph> Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen werden.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Zeilen mit Quelle ein <ph id="ph1">`DataRowState`</ph> Wert <ph id="ph2">`Added`</ph> neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Beim Zusammenführen werden Einschränkungen deaktiviert.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Wenn alle Einschränkungen am Ende der Zusammenführung aktiviert werden, können keiner <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> wird generiert, und die zusammengeführten Daten werden beibehalten, während die Einschränkungen deaktiviert sind.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph>, und alle Zeilen, die ungültig sind Fehler gekennzeichnet sind.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Der Fehler müssen behoben werden, bevor Sie versuchen, Zurücksetzen der <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einer Tabelle, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>After adding ten rows, two values are changed, and one row is added.</source>
          <target state="translated">Nach dem Hinzufügen der zehn Zeilen, zwei Werte werden geändert, und eine Zeile hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>A subset of the changed data is created using the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method.</source>
          <target state="translated">Eine Teilmenge der geänderten Daten wird erstellt, mit der <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean)">
          <source>After reconciling errors, the subset data is merged into the original <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Nach dem Abgleichen von Fehlern, die Daten der Teilmenge der ursprünglichen zusammengeführt <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to be merged into the <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>.</source>
          <target state="translated">Das Array von <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Objekten, das mit dem <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> zusammengeführt werden soll.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve changes in the <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um am <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> vorgenommene Änderungen beizubehalten, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>Merges an array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into the current <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>, preserving or discarding changes in the <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">Führt ein Array von <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>-Objekten mit dem aktuellen <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> zusammen. Dabei werden Änderungen des <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> entsprechend den angegebenen Argumenten beibehalten oder verworfen, und ein nicht kompatibles Schema wird entsprechend den angegebenen Argumenten behandelt.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode wird verwendet, um zwei merge <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte, die Schemas weitgehend ähnlich sind.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit den neuesten Daten aus der Datenquelle.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">In einer Clientanwendung ist es üblich, eine einzelne Schaltfläche, die der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene zu verwenden.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">In diesem Szenario die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> -Methode zuerst aufgerufen.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Eine zweite Methodenrückgabe <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> für validieren und Zusammenführen optimiert.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Dieses zweite <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Objekt enthält nur die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> und <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Diese Teilmenge wird in der Regel kleiner und somit mehr effizient übergeben an eine Komponente der mittleren Ebene.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Die mittlere Ebene kann dann zurücksenden entweder ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit der <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>To facilitate explanation of the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method, we use "target" to signify the current <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and "source" to name the second (parameter) <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Zur Erleichterung der Erläuterung der <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode, wir verwenden "Ziel", um die aktuelle anzugeben <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, und "Quelle", um das zweite (Parameter) <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The target <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">Das Ziel <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> ist Bezeichnung stammt daher, da er das Objekt ist auf dem eine Aktion (Merge) ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is called a "source" because the information it contains does not change, but instead is merged into the current <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die zweite <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> eine "Quelle" wird bezeichnet werden, da die Informationen, die es enthält sich nicht ändert, aber das aktuelle zusammengeführt <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode aufgerufen wird, werden die Schemas der beiden <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte verglichen werden, da es möglich ist, dass die Schemas möglicherweise geändert wurden.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Z. B. in einem Business-to-Business-Szenario wurden neue Spalten möglicherweise auf ein XML-Schema durch einen automatisierten Prozess hinzugefügt haben.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Wenn die Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schemaelemente enthält (hinzugefügt <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> Objekte), die nicht im Ziel vorhanden sind, die Elemente des Schemas können mit dem Ziel hinzugefügt werden, durch Festlegen der <ph id="ph3">`missingSchemaAction`</ph> Argument <ph id="ph4">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">In diesem Fall wird das zusammengeführte <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> hinzugefügte Schema und Daten enthält.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Nach dem Zusammenführen von Schemas, werden die Daten zusammengeführt.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Beim Zusammenführen einer neuen Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> in das Ziel Quellzeilen mit einer <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> Wert <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, oder <ph id="ph5">`Deleted`</ph> Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen werden.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Zeilen mit Quelle ein <ph id="ph1">`DataRowState`</ph> Wert <ph id="ph2">`Added`</ph> neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Beim Zusammenführen werden Einschränkungen deaktiviert.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Wenn alle Einschränkungen am Ende der Zusammenführung aktiviert werden, können keiner <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> wird generiert, und die zusammengeführten Daten werden beibehalten, während die Einschränkungen deaktiviert sind.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph>, und alle Zeilen, die ungültig sind Fehler gekennzeichnet sind.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataRow[],System.Boolean,System.Data.MissingSchemaAction)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Der Fehler müssen behoben werden, bevor Sie versuchen, Zurücksetzen der <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated">Die <ph id="ph1">&lt;see langword="DataSet" /&gt;</ph>, deren Daten und Schema zusammengeführt werden.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve changes in the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um am aktuellen <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> vorgenommene Änderungen beizubehalten, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> and its schema with the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>, preserving or discarding changes in the current <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">Führt ein angegebenes <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> und sein Schema mit dem aktuellen <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> zusammen. Dabei werden Änderungen des aktuellen <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> entsprechend den angegebenen Argumenten beibehalten oder verworfen, und ein nicht kompatibles Schema wird entsprechend den angegebenen Argumenten behandelt.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode wird verwendet, um zwei merge <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte, die Schemas weitgehend ähnlich sind.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit den neuesten Daten aus der Datenquelle.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">In einer Clientanwendung ist es üblich, eine einzelne Schaltfläche, die der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene zu verwenden.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">In diesem Szenario die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> -Methode zuerst aufgerufen.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Eine zweite Methodenrückgabe <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> für validieren und Zusammenführen optimiert.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Dieses zweite <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Objekt enthält nur die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> und <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Diese Teilmenge wird in der Regel kleiner und somit mehr effizient übergeben an eine Komponente der mittleren Ebene.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Die mittlere Ebene kann dann zurücksenden entweder ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit der <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>To facilitate explanation of the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method, we use "target" to signify the current <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and "source" to name the second (parameter) <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Zur Erleichterung der Erläuterung der <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode, wir verwenden "Ziel", um die aktuelle anzugeben <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, und "Quelle", um das zweite (Parameter) <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The target <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is so named because it is the object upon which an action (the merge) occurs.</source>
          <target state="translated">Das Ziel <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> ist Bezeichnung stammt daher, da er das Objekt ist auf dem eine Aktion (Merge) ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is called a "source" because the information it contains does not change, but instead is merged into the current <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die zweite <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> eine "Quelle" wird bezeichnet werden, da die Informationen, die es enthält sich nicht ändert, aber das aktuelle zusammengeführt <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode aufgerufen wird, werden die Schemas der beiden <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte verglichen werden, da es möglich ist, dass die Schemas möglicherweise geändert wurden.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Z. B. in einem Business-to-Business-Szenario wurden neue Spalten möglicherweise auf ein XML-Schema durch einen automatisierten Prozess hinzugefügt haben.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Wenn die Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schemaelemente enthält (hinzugefügt <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> Objekte), die nicht im Ziel vorhanden sind, die Elemente des Schemas können mit dem Ziel hinzugefügt werden, durch Festlegen der <ph id="ph3">`missingSchemaAction`</ph> Argument <ph id="ph4">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">In diesem Fall wird das zusammengeführte <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> hinzugefügte Schema und Daten enthält.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Nach dem Zusammenführen von Schemas, werden die Daten zusammengeführt.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Beim Zusammenführen einer neuen Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> in das Ziel Quellzeilen mit einer <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> Wert <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, oder <ph id="ph5">`Deleted`</ph> Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen werden.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Zeilen mit Quelle ein <ph id="ph1">`DataRowState`</ph> Wert <ph id="ph2">`Added`</ph> neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Beim Zusammenführen werden Einschränkungen deaktiviert.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Wenn alle Einschränkungen am Ende der Zusammenführung aktiviert werden, können keiner <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> wird generiert, und die zusammengeführten Daten werden beibehalten, während die Einschränkungen deaktiviert sind.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph>, und alle Zeilen, die ungültig sind Fehler gekennzeichnet sind.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Der Fehler müssen behoben werden, bevor Sie versuchen, Zurücksetzen der <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einer Tabelle, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Two values are changed, and one row is added.</source>
          <target state="translated">Zwei Werte geändert werden, und es wird eine Zeile hinzugefügt.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A subset of the changed data is created using the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method.</source>
          <target state="translated">Eine Teilmenge der geänderten Daten wird erstellt, mit der <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>After reconciling errors, a new column is added to the subset, changing the schema.</source>
          <target state="translated">Nach dem Abgleichen der Fehler wird eine neue Spalte, auf die Teilmenge, die Änderung des Schemas hinzugefügt.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called with the <ph id="ph2">`missingSchemaAction`</ph> set to <ph id="ph3">`MissingSchemaAction.Add`</ph>, the new column is added to the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> object's schema.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode aufgerufen wird und die <ph id="ph2">`missingSchemaAction`</ph> festgelegt <ph id="ph3">`MissingSchemaAction.Add`</ph>, die neue Spalte hinzugefügt wird, mit dem ursprünglichen <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> Objektschemas.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataSet,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph> whose data and schema will be merged.</source>
          <target state="translated">Die <ph id="ph1">&lt;see langword="DataTable" /&gt;</ph>, deren Daten und Schema zusammengeführt werden.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.MissingSchemaAction" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to preserve changes in the <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um am <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> vorgenommene Änderungen beizubehalten, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Merges a specified <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> and its schema into the current <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph>, preserving or discarding changes in the <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> and handling an incompatible schema according to the given arguments.</source>
          <target state="translated">Führt eine angegebene <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> und ihr Schema mit dem aktuellen <ph id="ph2">&lt;see langword="DataSet" /&gt;</ph> zusammen. Dabei werden Änderungen des aktuellen <ph id="ph3">&lt;see langword="DataSet" /&gt;</ph> entsprechend den angegebenen Argumenten beibehalten oder verworfen, und ein nicht kompatibles Schema wird entsprechend den angegebenen Argumenten behandelt.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is used to merge two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects that have largely similar schemas.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode wird verwendet, um zwei merge <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte, die Schemas weitgehend ähnlich sind.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This allows the client application to have a refreshed <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the latest data from the data source.</source>
          <target state="translated">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit den neuesten Daten aus der Datenquelle.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>iOn a client application, it is common to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle-tier component.</source>
          <target state="translated">eine Clientanwendung ist es üblich, eine einzelne Schaltfläche, die der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene zu verwenden.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> method is first invoked.</source>
          <target state="translated">In diesem Szenario die <ph id="ph1">&lt;xref:System.Data.DataSet.GetChanges%2A&gt;</ph> -Methode zuerst aufgerufen.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>That method returns a second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> optimized for validating and merging.</source>
          <target state="translated">Eine zweite Methodenrückgabe <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> für validieren und Zusammenführen optimiert.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object contains only the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objects that were changed, resulting in a subset of the original <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Dieses zweite <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Objekt enthält nur die <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> und <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>This subset is generally smaller, and thus more efficiently passed back to a middle-tier component.</source>
          <target state="translated">Diese Teilmenge wird in der Regel kleiner und somit mehr effizient übergeben an eine Komponente der mittleren Ebene.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle-tier component then updates the original data source with the changes through stored procedures.</source>
          <target state="translated">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The middle tier can then send back either a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</source>
          <target state="translated">Die mittlere Ebene kann dann zurücksenden entweder ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> can be merged back into the client application's original <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method.</source>
          <target state="translated">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit der <ph id="ph3">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> method is called, the schemas of the two <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> objects are compared because it is possible that the schemas may have been changed.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataSet.Merge%2A&gt;</ph> -Methode aufgerufen wird, werden die Schemas der beiden <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekte verglichen werden, da es möglich ist, dass die Schemas möglicherweise geändert wurden.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</source>
          <target state="translated">Z. B. in einem Business-to-Business-Szenario wurden neue Spalten möglicherweise auf ein XML-Schema durch einen automatisierten Prozess hinzugefügt haben.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If the source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains schema elements (added <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects) that are missing in the target, the schema elements can be added to the target by setting the <ph id="ph3">`missingSchemaAction`</ph> argument to <ph id="ph4">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Wenn die Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schemaelemente enthält (hinzugefügt <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> Objekte), die nicht im Ziel vorhanden sind, die Elemente des Schemas können mit dem Ziel hinzugefügt werden, durch Festlegen der <ph id="ph3">`missingSchemaAction`</ph> Argument <ph id="ph4">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In that case, the merged <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains the added schema and data.</source>
          <target state="translated">In diesem Fall wird das zusammengeführte <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> hinzugefügte Schema und Daten enthält.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>After merging schemas, the data is merged.</source>
          <target state="translated">Nach dem Zusammenführen von Schemas, werden die Daten zusammengeführt.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>When merging a new source <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> into the target, any source rows with a <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> value of <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, or <ph id="ph5">`Deleted`</ph> are matched to target rows with the same primary key values.</source>
          <target state="translated">Beim Zusammenführen einer neuen Quelle <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> in das Ziel Quellzeilen mit einer <ph id="ph2">&lt;xref:System.Data.DataRowState&gt;</ph> Wert <ph id="ph3">`Unchanged`</ph>, <ph id="ph4">`Modified`</ph>, oder <ph id="ph5">`Deleted`</ph> Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen werden.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Source rows with a <ph id="ph1">`DataRowState`</ph> value of <ph id="ph2">`Added`</ph> are matched to new target rows with the same primary key values as the new source rows.</source>
          <target state="translated">Zeilen mit Quelle ein <ph id="ph1">`DataRowState`</ph> Wert <ph id="ph2">`Added`</ph> neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>During a merge, constraints are disabled.</source>
          <target state="translated">Beim Zusammenführen werden Einschränkungen deaktiviert.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>If any constraints cannot be enabled at the end of merge, a <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> is generated and the merged data is retained while the constraints are disabled.</source>
          <target state="translated">Wenn alle Einschränkungen am Ende der Zusammenführung aktiviert werden, können keiner <ph id="ph1">&lt;xref:System.Data.ConstraintException&gt;</ph> wird generiert, und die zusammengeführten Daten werden beibehalten, während die Einschränkungen deaktiviert sind.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, and all rows that are invalid are marked in error.</source>
          <target state="translated">In diesem Fall die <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph>, und alle Zeilen, die ungültig sind Fehler gekennzeichnet sind.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The errors must be resolved before attempting to reset the <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Der Fehler müssen behoben werden, bevor Sie versuchen, Zurücksetzen der <ph id="ph1">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph> Eigenschaft <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The following example creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one table, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einer Tabelle, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is created that is nearly identical to the first except that a new <ph id="ph2">`DataColumn`</ph> is added to the table.</source>
          <target state="translated">Ein zweites <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> wird erstellt, d. h. nahezu identisch mit dem ersten mit dem Unterschied, dass ein neues <ph id="ph2">`DataColumn`</ph> der Tabelle hinzugefügt wird.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>Two rows are added to the second table, which is then merged into the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph2">`preserveChanges`</ph> argument set to <ph id="ph3">`false`</ph>, and the <ph id="ph4">`missingSchemaAction`</ph> argument set to <ph id="ph5">`MissingSchemaAction.Add`</ph>.</source>
          <target state="translated">Zwei Zeilen werden hinzugefügt, auf die zweite Tabelle, der dann, in zusammengeführt wird der <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit der <ph id="ph2">`preserveChanges`</ph> Argument festgelegt wird, um <ph id="ph3">`false`</ph>, und die <ph id="ph4">`missingSchemaAction`</ph> Argument festgelegt wird, um <ph id="ph5">`MissingSchemaAction.Add`</ph>.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)">
          <source>The <ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dataSet" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="E:System.Data.DataSet.MergeFailed">
          <source>Occurs when a target and source <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> have the same primary key value, and <ph id="ph2">&lt;see cref="P:System.Data.DataSet.EnforceConstraints" /&gt;</ph> is set to true.</source>
          <target state="translated">Tritt auf, wenn eine Ziel- und eine Quell-<ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> denselben Primärschlüsselwert aufweisen und <ph id="ph2">&lt;see cref="P:System.Data.DataSet.EnforceConstraints" /&gt;</ph> auf True festgelegt ist.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataSet.MergeFailed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter <bpt id="p1">[</bpt>NIB: Behandeln von Ereignissen<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Data.DataSet.MergeFailed">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Data.DataSet.MergeFailed&gt;</ph> event.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Data.DataSet.MergeFailed&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Namespace">
          <source>Gets or sets the namespace of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ruft den Namespace der <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>The namespace of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Der Namespace von <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph> property is used when reading and writing an XML document into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> using the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph> Eigenschaft wird beim Lesen und Schreiben von einem XML-Dokument verwendet die <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mithilfe der <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>, oder <ph id="ph6">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>The namespace of an XML document is used to scope XML attributes and elements when read into a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Der Namespace des XML-Dokuments wird verwendet, um die XML-Attribute und Elemente, die beim Lesen in Bereich eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains a schema that was read from a document with the namespace "myCompany," and an attempt is made to read data only from a document with a different namespace, any data that does not correspond to the existing schema is ignored.</source>
          <target state="translated">Z. B. wenn ein <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> ein Schema enthält, die beim Lesen aus einem Dokument mit dem Namespace "MyCompany", und es wird versucht, zum Lesen von Daten nur aus einem Dokument mit einem anderen Namespace, alle Daten, die das vorhandene Schema nicht entspricht, werden ignoriert.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Namespace">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph> before calling the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph> vor dem Aufruf der <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Namespace">
          <source>The namespace already has data.</source>
          <target state="translated">Der Namespace enthält bereits Daten.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.PropertyChangedEventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>Raising an event invokes the event handler through a delegate.</source>
          <target state="translated">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>For an overview, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](~/docs/standard/events/index.md)</ept>.</source>
          <target state="translated">Eine Übersicht finden Sie unter <bpt id="p1">[</bpt>behandeln und Auslösen von Ereignissen<ept id="p1">](~/docs/standard/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> in a derived class, be sure to call the base class' <ph id="ph2">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> method.</source>
          <target state="translated">Zum Überschreiben <ph id="ph1">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <ph id="ph2">&lt;see cref="M:System.Data.DataSet.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> being removed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>, die entfernt wird.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> object is removed from a <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>.</source>
          <target state="translated">Tritt beim Entfernen eines <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>-Objekts aus einer <ph id="ph2">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> ein.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnRemoveRelation(System.Data.DataRelation)">
          <source>This method should be overridden by subclasses to restrict tables being removed</source>
          <target state="translated">Diese Methode sollte von Unterklassen zum Entfernen von Tabellen einzuschränken außer Kraft gesetzt werden</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> being removed.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>, die entfernt wird.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
          <source>Occurs when a <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> is removed from a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Tritt beim Entfernen einer <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> aus einem <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ein.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
          <source>This method can be overridden by subclasses to restrict tables from being removed.</source>
          <target state="translated">Diese Methode kann von Unterklassen Tabellen entfernt werden, beschränken überschrieben werden.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.OnRemoveTable(System.Data.DataTable)">
          <source>The following example shows a class derived from the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with the <ph id="ph2">&lt;xref:System.Data.DataSet.OnRemoveTable%2A&gt;</ph> method overridden.</source>
          <target state="translated">Das folgende Beispiel zeigt eine abgeleitete Klasse die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit der <ph id="ph2">&lt;xref:System.Data.DataSet.OnRemoveTable%2A&gt;</ph> Methode überschreiben.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Prefix">
          <source>Gets or sets an XML prefix that aliases the namespace of the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ruft ein XML-Präfix ab, das als Alias für den Namespace der <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> fungiert, oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Prefix">
          <source>The XML prefix for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> namespace.</source>
          <target state="translated">Das XML-Präfix für den <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Namespace.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Prefix">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph> property is used throughout an XML document to identify elements which belong to the namespace of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> object (as set by the <ph id="ph3">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph> property).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph> Eigenschaft ist in einem XML-Dokument verwendet, um Elemente zu identifizieren, die den Namespace gehören die <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> Objekt (wie durch Festlegen der <ph id="ph3">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph> Eigenschaft).</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Prefix">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph> before calling the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph> vor dem Aufruf der <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
          <source>The name of the property that is about to change.</source>
          <target state="translated">Der Name der Eigenschaft, die gerade geändert wird.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.RaisePropertyChanging(System.String)">
          <source>Sends a notification that the specified <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> property is about to change.</source>
          <target state="translated">Sendet eine Benachrichtigung, dass die angegebene <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Eigenschaft gerade geändert wird.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Liest ein XML-Schema und XML-Daten in das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>An object that derives from <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Ein von <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> abgeleitetes Objekt.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Liest mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> das XML-Schema und die XML-Daten in die <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">Der zum Lesen der Daten verwendete <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> aus einem XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode liest nur das Schema.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Lesen von Daten und Schema eine der der <ph id="ph1">`ReadXML`</ph> Überladungen, die enthält die <ph id="ph2">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Zum Schreiben von XML-Daten oder Schema und Daten aus der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`WriteXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu schreiben, verwenden die <ph id="ph1">`WriteXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen <ph id="ph2">`DataColumn`</ph> oder <ph id="ph3">`DataTable`</ph> beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Wenn das XML-Schema für eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält <ph id="ph2">`targetNamespace`</ph>, möglicherweise keine Daten gelesen und beim Aufrufen können Ausnahmen auftreten <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> beim Laden der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> mit XML, das Elemente ohne qualifizierenden Namespace enthält.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema, as the following example demonstrates.</source>
          <target state="translated">Legen Sie zum Lesen von nicht qualifizierter Elementen <ph id="ph1">`elementFormDefault`</ph> gleich "qualified" im XML-Schema, wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, wird eine Ausnahme ausgelöst, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> durch Angabe <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt zuerst eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schema und Daten durch den Aufruf auf den Datenträger geschrieben werden die <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">Ein zweites <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> wird erstellt und die <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode wird verwendet, um mit dem Schema und Daten zu füllen.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph> from which to read the schema and data.</source>
          <target state="translated">Der <ph id="ph1">&lt;see langword="TextReader" /&gt;</ph>, aus dem das Schema und die Daten gelesen werden sollen.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Liest mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> das XML-Schema und die XML-Daten in die <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">Der zum Lesen der Daten verwendete <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> aus einem XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode liest nur das Schema.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Lesen von Daten und Schema eine der der <ph id="ph1">`ReadXML`</ph> Überladungen, die enthält die <ph id="ph2">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Zum Schreiben von XML-Daten oder Schema und Daten aus der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`WriteXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu schreiben, verwenden die <ph id="ph1">`WriteXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen <ph id="ph2">`DataColumn`</ph> oder <ph id="ph3">`DataTable`</ph> beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Wenn das XML-Schema für eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält <ph id="ph2">`targetNamespace`</ph>, möglicherweise keine Daten gelesen und beim Aufrufen können Ausnahmen auftreten <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> beim Laden der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> mit XML, das Elemente ohne qualifizierenden Namespace enthält.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Legen Sie zum Lesen von nicht qualifizierter Elementen <ph id="ph1">`elementFormDefault`</ph> gleich "qualified" in das XML-Schema wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class include the <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph> classes.</source>
          <target state="translated">Klassen, die von erben die <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> -Klasse enthalten die <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> und <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, wird eine Ausnahme ausgelöst, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> durch Angabe <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt zuerst eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schema und Daten durch den Aufruf auf den Datenträger geschrieben werden die <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">Ein zweites <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> wird erstellt und die <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode wird verwendet, um mit dem Schema und Daten zu füllen.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">Der Name der Datei, aus der gelesen werden soll, einschließlich des Pfades.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified file.</source>
          <target state="translated">Liest mithilfe der angegebenen Datei das XML-Schema und die XML-Daten in das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">Der zum Lesen der Daten verwendete <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> aus einem XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode liest nur das Schema.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Lesen von Daten und Schema eine der der <ph id="ph1">`ReadXML`</ph> Überladungen, die enthält die <ph id="ph2">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Zum Schreiben von XML-Daten oder Schema und Daten aus der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`WriteXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu schreiben, verwenden die <ph id="ph1">`WriteXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen <ph id="ph2">`DataColumn`</ph> oder <ph id="ph3">`DataTable`</ph> beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes a <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Wenn das XML-Schema für eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält eine <ph id="ph2">`targetNamespace`</ph>, möglicherweise keine Daten gelesen und beim Aufrufen können Ausnahmen auftreten <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> beim Laden der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> mit XML, das Elemente ohne qualifizierenden Namespace enthält.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Legen Sie zum Lesen von nicht qualifizierter Elementen <ph id="ph1">`elementFormDefault`</ph> gleich "qualified" in das XML-Schema wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, wird eine Ausnahme ausgelöst, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> durch Angabe <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt zuerst eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schema und Daten durch den Aufruf auf den Datenträger geschrieben werden die <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">Ein zweites <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> wird erstellt und die <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode wird verwendet, um mit dem Schema und Daten zu füllen.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> ist nicht auf <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">Zum Lesen und Schreiben von Dateien.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> from which to read.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, aus dem gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Liest mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> das XML-Schema und die XML-Daten in die <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">Der zum Lesen der Daten verwendete <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> aus einem XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode liest nur das Schema.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Lesen von Daten und Schema eine der der <ph id="ph1">`ReadXML`</ph> Überladungen, die enthält die <ph id="ph2">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Zum Schreiben von XML-Daten oder Schema und Daten aus der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`WriteXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu schreiben, verwenden die <ph id="ph1">`WriteXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen <ph id="ph2">`DataColumn`</ph> oder <ph id="ph3">`DataTable`</ph> beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes a <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Wenn das XML-Schema für eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält eine <ph id="ph2">`targetNamespace`</ph>, möglicherweise keine Daten gelesen und beim Aufrufen können Ausnahmen auftreten <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> beim Laden der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> mit XML, das Elemente ohne qualifizierenden Namespace enthält.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Legen Sie zum Lesen von nicht qualifizierter Elementen <ph id="ph1">`elementFormDefault`</ph> gleich "qualified" in das XML-Schema wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> inherits from <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> erbt von <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, wird eine Ausnahme ausgelöst, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> durch Angabe <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt zuerst eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schema und Daten durch den Aufruf auf den Datenträger geschrieben werden die <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">Ein zweites <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> wird erstellt und die <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode wird verwendet, um mit dem Schema und Daten zu füllen.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> from which to read.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, aus dem gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</source>
          <target state="translated">Liest mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> und im angegebenen <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> das XML-Schema und die XML-Daten in das <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">Der zum Lesen der Daten verwendete <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> aus einem XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode liest nur das Schema.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Lesen von Daten und Schema eine der der <ph id="ph1">`ReadXML`</ph> Überladungen, die enthält die <ph id="ph2">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Dasselbe gilt für die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Zum Schreiben von XML-Daten oder Schema und Daten aus der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`WriteXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu schreiben, verwenden die <ph id="ph1">`WriteXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and you set <ph id="ph2">&lt;xref:System.Data.XmlReadMode&gt;</ph> to <ph id="ph3">`Diffgram`</ph>, the content of the target <ph id="ph4">`DataSet`</ph> and the original <ph id="ph5">`DataSet`</ph> may differ because of how the diffgram is generated and processed.</source>
          <target state="translated">Bei Verwendung von <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> , und legen Sie <ph id="ph2">&lt;xref:System.Data.XmlReadMode&gt;</ph> auf <ph id="ph3">`Diffgram`</ph>, den Inhalt des Ziels <ph id="ph4">`DataSet`</ph> und des Original- <ph id="ph5">`DataSet`</ph> unterschiedlich ausfallen, aufgrund wie das DiffGram-Objekt generiert und verarbeitet wird.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>For more information on diffgrams, see <bpt id="p1">[</bpt>DiffGrams<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Diffgrams finden Sie unter <bpt id="p1">[</bpt>DiffGrams<ept id="p1">](~/docs/framework/data/adonet/dataset-datatable-dataview/diffgrams.md)</ept>.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen <ph id="ph2">`DataColumn`</ph> oder <ph id="ph3">`DataTable`</ph> beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Wenn das XML-Schema für eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält <ph id="ph2">`targetNamespace`</ph>, möglicherweise keine Daten gelesen und beim Aufrufen können Ausnahmen auftreten <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> beim Laden der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> mit XML, das Elemente ohne qualifizierenden Namespace enthält.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Legen Sie zum Lesen von nicht qualifizierter Elementen <ph id="ph1">`elementFormDefault`</ph> gleich "qualified" in das XML-Schema wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, wird eine Ausnahme ausgelöst, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> durch Angabe <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.Stream,System.Data.XmlReadMode)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> from which to read.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, aus dem gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</source>
          <target state="translated">Liest mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> und im angegebenen <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> das XML-Schema und die XML-Daten in das <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">Der zum Lesen der Daten verwendete <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> aus einem XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode liest nur das Schema.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Lesen von Daten und Schema eine der der <ph id="ph1">`ReadXML`</ph> Überladungen, die enthält die <ph id="ph2">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Zum Schreiben von XML-Daten oder Schema und Daten aus der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`WriteXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu schreiben, verwenden die <ph id="ph1">`WriteXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen <ph id="ph2">`DataColumn`</ph> oder <ph id="ph3">`DataTable`</ph> beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Wenn das XML-Schema für eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält <ph id="ph2">`targetNamespace`</ph>, möglicherweise keine Daten gelesen und beim Aufrufen können Ausnahmen auftreten <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> beim Laden der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> mit XML, das Elemente ohne qualifizierenden Namespace enthält.</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Legen Sie zum Lesen von nicht qualifizierter Elementen <ph id="ph1">`elementFormDefault`</ph> gleich "qualified" in das XML-Schema wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, wird eine Ausnahme ausgelöst, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> durch Angabe <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.IO.TextReader,System.Data.XmlReadMode)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The filename (including the path) from which to read.</source>
          <target state="translated">Der Name der Datei, aus der gelesen werden soll, einschließlich des Pfades.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified file and <ph id="ph2">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</source>
          <target state="translated">Liest mit der angegebenen Datei und im angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> das XML-Schema und die XML-Daten in das <ph id="ph2">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">Der zum Lesen der Daten verwendete <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> aus einem XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode liest nur das Schema.</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Lesen von Daten und Schema eine der der <ph id="ph1">`ReadXML`</ph> Überladungen, die enthält die <ph id="ph2">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Zum Schreiben von XML-Daten oder Schema und Daten aus der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`WriteXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu schreiben, verwenden die <ph id="ph1">`WriteXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen <ph id="ph2">`DataColumn`</ph> oder <ph id="ph3">`DataTable`</ph> beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes a <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Wenn das XML-Schema für eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält eine <ph id="ph2">`targetNamespace`</ph>, möglicherweise keine Daten gelesen und beim Aufrufen können Ausnahmen auftreten <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> beim Laden der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> mit XML, das Elemente ohne qualifizierenden Namespace enthält.</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Legen Sie zum Lesen von nicht qualifizierter Elementen <ph id="ph1">`elementFormDefault`</ph> gleich "qualified" in das XML-Schema wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, wird eine Ausnahme ausgelöst, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> durch Angabe <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> ist nicht auf <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>for reading and writing files.</source>
          <target state="translated">Zum Lesen und Schreiben von Dateien.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.String,System.Data.XmlReadMode)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> from which to read.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, aus dem gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>Reads XML schema and data into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</source>
          <target state="translated">Liest mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> und im angegebenen <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> das XML-Schema und die XML-Daten in das <ph id="ph3">&lt;see cref="T:System.Data.XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph> used to read the data.</source>
          <target state="translated">Der zum Lesen der Daten verwendete <ph id="ph1">&lt;see langword="XmlReadMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method provides a way to read either data only, or both data and schema into a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> from an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method reads only the schema.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> aus einem XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode liest nur das Schema.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>To read both data and schema, use one of the <ph id="ph1">`ReadXML`</ph> overloads that includes the <ph id="ph2">`mode`</ph> parameter, and set its value to <ph id="ph3">`ReadSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Lesen von Daten und Schema eine der der <ph id="ph1">`ReadXML`</ph> Überladungen, die enthält die <ph id="ph2">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph3">`ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>To write XML data, or both schema and data from the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`WriteXml`</ph> method.</source>
          <target state="translated">Zum Schreiben von XML-Daten oder Schema und Daten aus der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`WriteXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>To write just the schema, use the <ph id="ph1">`WriteXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu schreiben, verwenden die <ph id="ph1">`WriteXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</source>
          <target state="translated">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</source>
          <target state="translated">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</source>
          <target state="translated">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If the schema cannot be extended through inference in order to expose all data, an exception is raised.</source>
          <target state="translated">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> does not associate an XML element with its corresponding <ph id="ph2">`DataColumn`</ph> or <ph id="ph3">`DataTable`</ph> when legal XML characters like ("_") are escaped in the serialized XML.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen <ph id="ph2">`DataColumn`</ph> oder <ph id="ph3">`DataTable`</ph> beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>The <ph id="ph1">`DataSet`</ph> itself only escapes illegal XML characters in XML element names and hence can only consume the same.</source>
          <target state="translated">Die <ph id="ph1">`DataSet`</ph> selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>When legal characters in XML element name are escaped, the element is ignored while processing.</source>
          <target state="translated">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If the XML Schema for a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> includes a <ph id="ph2">`targetNamespace`</ph>, data may not be read, and you may encounter exceptions when calling <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> to load the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> with XML that contains elements with no qualifying namespace.</source>
          <target state="translated">Wenn das XML-Schema für eine <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält eine <ph id="ph2">`targetNamespace`</ph>, möglicherweise keine Daten gelesen und beim Aufrufen können Ausnahmen auftreten <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> beim Laden der <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph> mit XML, das Elemente ohne qualifizierenden Namespace enthält.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>To read unqualified elements, set <ph id="ph1">`elementFormDefault`</ph> equal to "qualified" in your XML Schema as the following example demonstrates.</source>
          <target state="translated">Legen Sie zum Lesen von nicht qualifizierter Elementen <ph id="ph1">`elementFormDefault`</ph> gleich "qualified" in das XML-Schema wie im folgende Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> by specifying <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, wird eine Ausnahme ausgelöst, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> durch Angabe <ph id="ph4">`XmlReadMode.ReadSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXml(System.Xml.XmlReader,System.Data.XmlReadMode)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Reads an XML schema into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Liest ein XML-Schema in die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> from which to read.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, aus dem gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>Reads the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> into the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Liest das XML-Schema aus dem angegebenen <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> in das <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode zum Erstellen des Schemas für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Das XML-Schema wird mit dem XSD-Standard geschrieben.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Beschädigte Daten kann auftreten, wenn die Msdata:DataType und die Typen xs: Type stimmen nicht überein.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>No exception will be thrown.</source>
          <target state="translated">Es wird keine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode in der Regel aufgerufen wird, vor dem Aufrufen der <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode dient zum Füllen der <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class include <ph id="ph2">&lt;xref:System.IO.BufferedStream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Abgeleitete Klassen die <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> Klasse einbeziehen <ph id="ph2">&lt;xref:System.IO.BufferedStream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph>, und <ph id="ph5">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, eine Ausnahme ausgelöst wird, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object to read an XML schema with, and invokes the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method with the object.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> -Objekt zum Lesen eines XML-Schemas und ruft die <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode mit dem Objekt.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> from which to read.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, aus dem gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>Reads the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> into the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Liest das XML-Schema aus dem angegebenen <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> in das <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode zum Erstellen des Schemas für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Das XML-Schema wird mit dem XSD-Standard geschrieben.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Beschädigte Daten kann auftreten, wenn die Msdata:DataType und die Typen xs: Type stimmen nicht überein.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">Es wird keine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode in der Regel aufgerufen wird, vor dem Aufrufen der <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode dient zum Füllen der <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>Classes that inherit from the <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> class include the <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph> classes.</source>
          <target state="translated">Klassen, die von erben die <ph id="ph1">&lt;xref:System.IO.TextReader&gt;</ph> -Klasse enthalten die <ph id="ph2">&lt;xref:System.IO.StreamReader&gt;</ph> und <ph id="ph3">&lt;xref:System.IO.StringReader&gt;</ph> Klassen.</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, eine Ausnahme ausgelöst wird, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> object to read a schema with, and invokes the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method with the object.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.IO.StreamReader&gt;</ph> -Objekt zum Lesen eines Schemas und ruft die <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode mit dem Objekt.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>The file name (including the path) from which to read.</source>
          <target state="translated">Der Name der Datei, aus der gelesen werden soll, einschließlich des Pfades.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>Reads the XML schema from the specified file into the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Liest das XML-Schema aus der angegebenen Datei in das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode zum Erstellen des Schemas für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Das XML-Schema wird mit dem XSD-Standard geschrieben.</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Beschädigte Daten kann auftreten, wenn die Msdata:DataType und die Typen xs: Type stimmen nicht überein.</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>No exception will be thrown.</source>
          <target state="translated">Es wird keine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode in der Regel aufgerufen wird, vor dem Aufrufen der <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode dient zum Füllen der <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, wird eine Ausnahme ausgelöst, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> ist nicht auf <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">Zum Lesen und Schreiben von Dateien.</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> from which to read.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, aus dem gelesen werden soll.</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Reads the XML schema from the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> into the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Liest das XML-Schema aus dem angegebenen <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> in das <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method to create the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode zum Erstellen des Schemas für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Das XML-Schema wird mit dem XSD-Standard geschrieben.</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>Data corruption can occur if the msdata:DataType and the xs:type types do not match.</source>
          <target state="translated">Beschädigte Daten kann auftreten, wenn die Msdata:DataType und die Typen xs: Type stimmen nicht überein.</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>No exception will be thrown.</source>
          <target state="translated">Es wird keine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method is generally invoked before invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method which is used to fill the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode in der Regel aufgerufen wird, vor dem Aufrufen der <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode dient zum Füllen der <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader?displayProperty=nameWithType&gt;</ph> class is abstract.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.XmlReader?displayProperty=nameWithType&gt;</ph> Klasse ist abstrakt.</target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>A class that inherits from the <ph id="ph1">`XmlReader`</ph> is the <ph id="ph2">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">Eine Klasse, die von erben die <ph id="ph1">`XmlReader`</ph> ist die <ph id="ph2">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>If the schema for your <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains elements of the same name, but different type, in the same namespace, an exception is be thrown when you attempt to read the schema into the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> with <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</source>
          <target state="translated">Wenn das Schema für Ihre <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> enthält Elemente von den gleichen Namen, aber unterschiedlichen Typen im gleichen Namespace, eine Ausnahme ausgelöst wird, wenn Sie versuchen, lesen Sie das Schema in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> mit <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>This exception does not occur if you are using .NET Framework version 1.0.</source>
          <target state="translated">Diese Ausnahme nicht ausgeführt, wenn Sie .NET Framework, Version 1.0 verwenden.</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> and <ph id="ph2">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Das folgende Beispiel erstellt ein neues <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> und <ph id="ph2">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object, created with a file path and file name, is used to create an <ph id="ph2">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> that is passed as an argument to the <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Objekt, das mit einem Dateipfad und den Dateinamen, erstellt dient zum Erstellen einer <ph id="ph2">&lt;xref:System.Xml.XmlTextReader?displayProperty=nameWithType&gt;</ph> , das als Argument übergeben wird die <ph id="ph3">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>The specified XML reader.</source>
          <target state="translated">Der angegebene XML-Reader.</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ReadXmlSerializable(System.Xml.XmlReader)">
          <source>Ignores attributes and returns an empty DataSet.</source>
          <target state="translated">Ignoriert Attribute und gibt ein leeres DataSet zurück.</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.RejectChanges">
          <source>Rolls back all the changes made to the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> since it was created, or since the last time <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> was called.</source>
          <target state="translated">Führt einen Rollback aller Änderungen aus, die am <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> seit dessen Erstellung oder seit dem letzten Aufruf von <ph id="ph2">&lt;see cref="M:System.Data.DataSet.AcceptChanges" /&gt;</ph> vorgenommen wurden.</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>Invoke the <ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> to call the <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> method on all <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> objects contained by the <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Aufrufen der <ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> Aufrufen der <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> -Methode bei allen <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> enthaltenen Objekte durch die <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects contained by the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> can each be set into edit mode by invoking the <ph id="ph3">&lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> Objekte in der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> jedes eingerichtet werden in den Bearbeitungsmodus Aufrufen der <ph id="ph3">&lt;xref:System.Data.DataRow.BeginEdit%2A?displayProperty=nameWithType&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>After invoking the <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=nameWithType&gt;</ph> method, changes can be rejected by calling the <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> on the <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> to which the <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph> objects belong.</source>
          <target state="translated">Nach dem Aufrufen der <ph id="ph1">&lt;xref:System.Data.DataRow.EndEdit%2A?displayProperty=nameWithType&gt;</ph> -Methode, Änderungen können abgelehnt werden, durch Aufrufen der <ph id="ph2">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> auf die <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> , der die <ph id="ph4">&lt;xref:System.Data.DataRow&gt;</ph> Objekte gehören.</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>When the <ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> method is called, any rows still in edit-mode cancel their edits.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Data.DataTable.RejectChanges%2A?displayProperty=nameWithType&gt;</ph> -Methode aufgerufen wird, alle Zeilen weiterhin im Bearbeitungsmodus Bearbeitungsvorgänge abgebrochen.</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>New rows are removed.</source>
          <target state="translated">Neue Zeilen werden entfernt.</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>Modified and deleted rows return back to their original state (<ph id="ph1">`DataRowState.Unchanged`</ph>).</source>
          <target state="translated">Geänderten und gelöschte Zeilen an den ursprünglichen Zustand zurückzugeben (<ph id="ph1">`DataRowState.Unchanged`</ph>).</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>AcceptChanges and RejectChanges only apply to <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> related changes (that is, <ph id="ph2">`Add`</ph>, <ph id="ph3">`Remove`</ph>, <ph id="ph4">`Delete`</ph>, and <ph id="ph5">`Modify`</ph>).</source>
          <target state="translated">"AcceptChanges" und RejectChanges gelten nur für <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> Änderungen bezüglich der (d. h. <ph id="ph2">`Add`</ph>, <ph id="ph3">`Remove`</ph>, <ph id="ph4">`Delete`</ph>, und <ph id="ph5">`Modify`</ph>).</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>They are not applicable to schema or structural changes.</source>
          <target state="translated">Sie gelten nicht für Schema oder strukturelle Änderungen.</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>The following example shows a class derived from the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class.</source>
          <target state="translated">Das folgende Beispiel zeigt eine abgeleitete Klasse die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.RejectChanges">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;</ph> event is invoked from within a function.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.RejectChanges%2A&gt;</ph> Ereignis innerhalb einer Funktion aus aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Relations">
          <source>Get the collection of relations that link tables and allow navigation from parent tables to child tables.</source>
          <target state="translated">Ruft die Auflistung der Beziehungen ab, die Tabellen verknüpfen und die Navigation von übergeordneten Tabellen zu untergeordneten Tabellen ermöglichen.</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Relations">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph> that contains a collection of <ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.DataRelationCollection" /&gt;</ph>, das eine Auflistung von <ph id="ph2">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>-Objekten enthält.</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Relations">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph> objects exist.</source>
          <target state="translated">Wenn keine <ph id="ph1">&lt;see cref="T:System.Data.DataRelation" /&gt;</ph>-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Relations">
          <source>The following example prints the column name of all child tables through the <ph id="ph1">&lt;xref:System.Data.DataSet.Relations%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Beispiel gibt den Spaltennamen aller untergeordneten Tabellen über die <ph id="ph1">&lt;xref:System.Data.DataSet.Relations%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.RemotingFormat">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> used during remoting.</source>
          <target state="translated">Ruft das <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> für das beim Remoting verwendete <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.RemotingFormat">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph> object.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Data.SerializationFormat" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Reset">
          <source>Clears all tables and removes all relations, foreign constraints, and tables from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Löscht alle Tabellen und entfernt alle Beziehungen, Einschränkungen und fremden Tabellen von <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.Reset">
          <source>Subclasses should override <ph id="ph1">&lt;see cref="M:System.Data.DataSet.Reset" /&gt;</ph> to restore a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to its original state.</source>
          <target state="translated">Untergeordnete Klassen müssen <ph id="ph1">&lt;see cref="M:System.Data.DataSet.Reset" /&gt;</ph> überschreiben, um ein <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> mit dem ursprünglichen Zustand wiederherzustellen.</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ruft einen <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> für ein <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ruft einen <ph id="ph1">&lt;see cref="T:System.Data.SchemaSerializationMode" /&gt;</ph> für ein <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> serializes its schema and instance data by default in Web services and remoting scenarios.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> serialisiert sein Schema und die Instanz standardmäßig in Webdiensten und Remoting-Szenarien.</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph> property of a typed <ph id="ph2">`DataSet`</ph> to <ph id="ph3">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> causes schema information to be excluded from the serialization payload.</source>
          <target state="translated">Festlegen der <ph id="ph1">&lt;xref:System.Data.DataSet.SchemaSerializationMode%2A&gt;</ph> Eigenschaft eines typisierten <ph id="ph2">`DataSet`</ph> auf <ph id="ph3">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> bewirkt, dass Schemainformationen aus der Serialisierungsnutzlast ausgeschlossen werden sollen.</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> is supported only for a typed <ph id="ph2">`DataSet`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> unterstützt wird nur für eine typisierte <ph id="ph2">`DataSet`</ph>.</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>For an un-typed <ph id="ph1">`DataSet`</ph> this property can only be set to <ph id="ph2">&lt;xref:System.Data.SchemaSerializationMode.IncludeSchema&gt;</ph>.</source>
          <target state="translated">Für einen nicht typisierten <ph id="ph1">`DataSet`</ph> diese Eigenschaft kann nur festgelegt werden, um <ph id="ph2">&lt;xref:System.Data.SchemaSerializationMode.IncludeSchema&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> should only be used in cases where the schema information of the underlying typed <ph id="ph2">`DataTables`</ph>, <ph id="ph3">`DataRelations`</ph> and <ph id="ph4">`Constraints`</ph> has not been modified.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> sollte nur verwendet werden, wenn die Schemainformationen der zugrunde liegenden typisierten <ph id="ph2">`DataTables`</ph>, <ph id="ph3">`DataRelations`</ph> und <ph id="ph4">`Constraints`</ph> wurde nicht geändert.</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>If modifications have occurred, complete schema information should be serialized with <ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.IncludeSchema&gt;</ph>.</source>
          <target state="translated">Ggf. Änderungen eingetreten sind, vollständige Schemainformationen serialisiert werden mit <ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.IncludeSchema&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> is supported in version 2.0 of the .NET Framework or later.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> wird in Version 2.0 von .NET Framework oder höher unterstützt.</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>When <ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> is set, only the top level runtime properties present on the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> are serialized.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Data.SchemaSerializationMode.ExcludeSchema&gt;</ph> festgelegt ist, wird nur die oberste Ebene Common Language Runtime-Eigenschaften vorhanden, auf die <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> serialisiert werden.</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>In addition, they are serialized only if they happen to be different from the default values.</source>
          <target state="translated">Darüber hinaus sind sie nur serialisiert, wenn wiedergibt, von den Standardwerten abweichen.</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>None of the <ph id="ph1">`Tables`</ph>, <ph id="ph2">`Relations`</ph> or <ph id="ph3">`Constraints`</ph> are serialized.</source>
          <target state="translated">Keines der <ph id="ph1">`Tables`</ph>, <ph id="ph2">`Relations`</ph> oder <ph id="ph3">`Constraints`</ph> serialisiert werden.</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>The serialized runtime properties include <ph id="ph1">&lt;xref:System.Data.DataSet.DataSetName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph>.</source>
          <target state="translated">Die serialisierten Laufzeiteigenschaften enthalten <ph id="ph1">&lt;xref:System.Data.DataSet.DataSetName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataSet.Namespace%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.DataSet.Prefix%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.DataSet.Locale%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.DataSet.EnforceConstraints%2A&gt;</ph>, und <ph id="ph6">&lt;xref:System.Data.DataSet.CaseSensitive%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.SchemaSerializationMode">
          <source>These properties are serialized to make sure that overall runtime data integrity is preserved.</source>
          <target state="translated">Diese Eigenschaften werden serialisiert, um sicherzustellen, dass die gesamte Common Language Runtime die Datenintegrität erhalten bleibt.</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source>Gets a value indicating whether <ph id="ph1">&lt;see cref="P:System.Data.DataSet.Relations" /&gt;</ph> property should be persisted.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die <ph id="ph1">&lt;see cref="P:System.Data.DataSet.Relations" /&gt;</ph>-Eigenschaft beibehalten werden soll.</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has been changed from its default; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Eigenschaftswert in einen anderen Wert als den Standardwert geändert wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source>You typically use this method if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Diese Methode wird in der Regel verwenden, wenn Sie entweder einen Designer für das Erstellen der <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, oder erstellen eine eigene Steuerelement einbinden der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source>The following examples show a class derived from the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class.</source>
          <target state="translated">Die folgenden Beispiele zeigen, eine abgeleitete Klasse die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeRelations">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.Reset%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ShouldSerializeRelations%2A&gt;</ph> methods are invoked from within functions in the derived class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.Reset%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.ShouldSerializeRelations%2A&gt;</ph> Methoden von innerhalb von Funktionen in der abgeleiteten Klasse aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source>Gets a value indicating whether <ph id="ph1">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph> property should be persisted.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die <ph id="ph1">&lt;see cref="P:System.Data.DataSet.Tables" /&gt;</ph>-Eigenschaft beibehalten werden soll.</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property value has been changed from its default; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Eigenschaftswert in einen anderen Wert als den Standardwert geändert wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source>You typically use this method only if you are either creating a designer for the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, or creating your own control incorporating the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
          <target state="translated">Diese Methode wird in der Regel verwenden, nur, wenn Sie entweder einen Designer für das Erstellen der <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, oder erstellen eine eigene Steuerelement einbinden der <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source>The following example shows a class derived from the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> class.</source>
          <target state="translated">Das folgende Beispiel zeigt eine abgeleitete Klasse die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.ShouldSerializeTables">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.ShouldSerializeTables%2A&gt;</ph> method is called from within functions in the derived class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.ShouldSerializeTables%2A&gt;</ph> Methode wird von Funktionen in der abgeleiteten Klasse aufgerufen.</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Site">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ruft eine <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> für den <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> für das <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Site">
          <source>Sites bind a <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> to a <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> and enable communication between them, as well as provide a way for the container to manage its components.</source>
          <target state="translated">Sites Binden einer <ph id="ph1">&lt;xref:System.ComponentModel.Component&gt;</ph> auf eine <ph id="ph2">&lt;xref:System.ComponentModel.Container&gt;</ph> und ermöglichen die Kommunikation zwischen diesen sowie bieten eine Möglichkeit für den Container, seine Komponenten zu verwalten.</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</source>
          <target state="translated">Eine Beschreibung dieses Elements finden Sie unter <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</source>
          <target state="translated">Eine Beschreibung dieses Elements finden Sie unter <ph id="ph1">&lt;see cref="P:System.ComponentModel.IListSource.ContainsListCollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Er kann nur verwendet werden, wenn die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>-Instanz in eine <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>-Schnittstelle umgewandelt wird.</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</source>
          <target state="translated">Eine Beschreibung dieses Elements finden Sie unter <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</source>
          <target state="translated">Eine Beschreibung dieses Elements finden Sie unter <ph id="ph1">&lt;see cref="M:System.ComponentModel.IListSource.GetList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">Er kann nur verwendet werden, wenn die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>-Instanz in eine <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>-Schnittstelle umgewandelt wird.</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">Eine Beschreibung dieses Elements finden Sie unter <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</source>
          <target state="translated">Eine Beschreibung dieses Elements finden Sie unter <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#GetSchema">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Er kann nur verwendet werden, wenn die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>-Instanz in eine <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>-Schnittstelle umgewandelt wird.</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</source>
          <target state="translated">Eine Beschreibung dieses Elements finden Sie unter <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Er kann nur verwendet werden, wenn die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>-Instanz in eine <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>-Schnittstelle umgewandelt wird.</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>.</source>
          <target state="translated">Eine Beschreibung dieses Elements finden Sie unter <ph id="ph1">&lt;see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
          <target state="translated">Er kann nur verwendet werden, wenn die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>-Instanz in eine <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>-Schnittstelle umgewandelt wird.</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" uid="P:System.Data.DataSet.Tables">
          <source>Gets the collection of tables contained in the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Ruft die Auflistung der im <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> enthaltenen Tabellen ab.</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph> contained by this <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Die in diesem <ph id="ph1">&lt;see cref="T:System.Data.DataTableCollection" /&gt;</ph> enthaltene <ph id="ph2">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>An empty collection is returned if no <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph> objects exist.</source>
          <target state="translated">Wenn keine <ph id="ph1">&lt;see cref="T:System.Data.DataTable" /&gt;</ph>-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>To add tables to the collection, use <ph id="ph1">&lt;xref:System.Data.DataTableCollection.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph>.</source>
          <target state="translated">Verwenden Sie zum Hinzufügen von Tabellen auf die Auflistung <ph id="ph1">&lt;xref:System.Data.DataTableCollection.Add%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>To remove tables, use the <ph id="ph1">&lt;xref:System.Data.DataTableCollection.Remove%2A&gt;</ph> method.</source>
          <target state="translated">Um Tabellen zu entfernen, verwenden Sie die <ph id="ph1">&lt;xref:System.Data.DataTableCollection.Remove%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DataSet.Tables">
          <source>The following example returns the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> object's <ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph>, and prints the columns and rows in each table.</source>
          <target state="translated">Das folgende Beispiel gibt die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> des Objekts <ph id="ph2">&lt;xref:System.Data.DataTableCollection&gt;</ph>, und die Spalten und Zeilen in jeder Tabelle ausgegeben.</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Writes XML data, and optionally the schema, from the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</source>
          <target state="translated">Schreibt XML-Daten und bei Bedarf das Schema aus dem <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used to write to a file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>-Objekt, mit dem in eine Datei geschrieben wird.</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>Writes the current data for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Schreibt mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> die aktuellen Daten für das <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Die <ph id="ph1">`WriteXml`</ph> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> in ein XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode schreibt nur das Schema.</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <ph id="ph1">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Zum Lesen von XML-Daten oder Schema und Daten in der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`ReadXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu lesen, verwenden die <ph id="ph1">`ReadXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream)">
          <source>The object is then used with the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method to write an XML document.</source>
          <target state="translated">Das Objekt wird dann verwendet, mit der <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode, um ein XML-Dokument zu schreiben.</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object with which to write.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Objekt, mit dem geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>Writes the current data for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Schreibt mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> die aktuellen Daten für das <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Die <ph id="ph1">`WriteXml`</ph> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> in ein XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode schreibt nur das Schema.</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <ph id="ph1">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Zum Lesen von XML-Daten oder Schema und Daten in der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`ReadXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu lesen, verwenden die <ph id="ph1">`ReadXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">Der Name der Datei, in die geschrieben werden soll, einschließlich des Pfades.</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>Writes the current data for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to the specified file.</source>
          <target state="translated">Schreibt die aktuellen Daten für das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> in die angegebene Datei.</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Die <ph id="ph1">`WriteXml`</ph> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> in ein XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode schreibt nur das Schema.</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <ph id="ph1">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Zum Lesen von XML-Daten oder Schema und Daten in der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`ReadXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu lesen, verwenden die <ph id="ph1">`ReadXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> ist nicht auf <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">Zum Lesen und Schreiben von Dateien.</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, mit dem geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>Writes the current data for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Schreibt die aktuellen Daten für das <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> in den angegebenen <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Die <ph id="ph1">`WriteXml`</ph> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> in ein XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode schreibt nur das Schema.</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>To write both data and schema, use one of the overloads that includes the <ph id="ph1">`mode`</ph> parameter, and set its value to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <ph id="ph1">`mode`</ph> Parameter, und legen Sie dessen Wert auf <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Zum Lesen von XML-Daten oder Schema und Daten in der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`ReadXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu lesen, verwenden die <ph id="ph1">`ReadXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used to write to a file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>-Objekt, mit dem in eine Datei geschrieben wird.</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Schreibt mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> und im angegebenen <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> die aktuellen Daten und bei Bedarf das Schema für die <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Um das Schema zu schreiben, legen Sie den Wert für den <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>-Parameter auf <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> fest.</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Die <ph id="ph1">`WriteXml`</ph> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> in ein XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode schreibt nur das Schema.</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Um Schemas und Daten zu schreiben, legen die <ph id="ph1">`mode`</ph> Parameter <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Zum Lesen von XML-Daten oder Schema und Daten in der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`ReadXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu lesen, verwenden die <ph id="ph1">`ReadXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object used to write the document.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Objekt, mit dem das Dokument geschrieben wird.</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Schreibt mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> und im angegebenen <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> die aktuellen Daten und bei Bedarf das Schema für die <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Um das Schema zu schreiben, legen Sie den Wert für den <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>-Parameter auf <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> fest.</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Die <ph id="ph1">`WriteXml`</ph> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> in ein XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode schreibt nur das Schema.</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Um Schemas und Daten zu schreiben, legen die <ph id="ph1">`mode`</ph> Parameter <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Zum Lesen von XML-Daten oder Schema und Daten in der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`ReadXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu lesen, verwenden die <ph id="ph1">`ReadXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The following example first creates a simple <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> with one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, two columns, and ten rows.</source>
          <target state="translated">Das folgende Beispiel erstellt zuerst eine einfache <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, zwei Spalten und zehn Zeilen.</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> schema and data are written to disk by invoking the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> Schema und Daten durch den Aufruf auf den Datenträger geschrieben werden die <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)">
          <source>A second <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> is created and the <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> method is used to fill it with schema and data.</source>
          <target state="translated">Ein zweites <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> wird erstellt und die <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> Methode wird verwendet, um mit dem Schema und Daten zu füllen.</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">Der Name der Datei, in die geschrieben werden soll, einschließlich des Pfades.</target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> to the specified file using the specified <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Schreibt im angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> die aktuellen Daten und bei Bedarf das Schema für die <ph id="ph2">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> in die angegebene Datei.</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Um das Schema zu schreiben, legen Sie den Wert für den <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>-Parameter auf <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> fest.</target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Die <ph id="ph1">`WriteXml`</ph> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> in ein XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode schreibt nur das Schema.</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Um Schemas und Daten zu schreiben, legen die <ph id="ph1">`mode`</ph> Parameter <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Zum Lesen von XML-Daten oder Schema und Daten in der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`ReadXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu lesen, verwenden die <ph id="ph1">`ReadXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method to write an XML document.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode, um ein XML-Dokument zu schreiben.</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> ist nicht auf <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>for reading and writing files.</source>
          <target state="translated">Zum Lesen und Schreiben von Dateien.</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.String,System.Data.XmlWriteMode)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> with which to write.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, mit dem geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph> values.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Writes the current data, and optionally the schema, for the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</source>
          <target state="translated">Schreibt mit dem angegebenen <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> und im angegebenen <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> die aktuellen Daten und bei Bedarf das Schema für die <ph id="ph3">&lt;see cref="T:System.Data.XmlWriteMode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write the schema, set the value for the <ph id="ph1">&lt;paramref name="mode" /&gt;</ph> parameter to <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph>.</source>
          <target state="translated">Um das Schema zu schreiben, legen Sie den Wert für den <ph id="ph1">&lt;paramref name="mode" /&gt;</ph>-Parameter auf <ph id="ph2">&lt;see langword="WriteSchema" /&gt;</ph> fest.</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">`WriteXml`</ph> method provides a way to write either data only, or both data and schema from a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> into an XML document, whereas the <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method writes only the schema.</source>
          <target state="translated">Die <ph id="ph1">`WriteXml`</ph> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> in ein XML-Dokument während der <ph id="ph3">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode schreibt nur das Schema.</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To write both data and schema, set the <ph id="ph1">`mode`</ph> parameter to <ph id="ph2">`WriteSchema`</ph>.</source>
          <target state="translated">Um Schemas und Daten zu schreiben, legen die <ph id="ph1">`mode`</ph> Parameter <ph id="ph2">`WriteSchema`</ph>.</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>Note that the same is true for the <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> methods, respectively.</source>
          <target state="translated">Beachten Sie, dass der gleiche "true" für die <ph id="ph1">&lt;xref:System.Data.DataSet.ReadXml%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Data.DataSet.ReadXmlSchema%2A&gt;</ph> Methoden bzw.</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read XML data, or both schema and data into the <ph id="ph1">`DataSet`</ph>, use the <ph id="ph2">`ReadXml`</ph> method.</source>
          <target state="translated">Zum Lesen von XML-Daten oder Schema und Daten in der <ph id="ph1">`DataSet`</ph>, verwenden Sie die <ph id="ph2">`ReadXml`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>To read just the schema, use the <ph id="ph1">`ReadXmlSchema`</ph> method.</source>
          <target state="translated">Um nur das Schema zu lesen, verwenden die <ph id="ph1">`ReadXmlSchema`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>An <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> will be thrown if a column type in the <ph id="ph2">`DataRow`</ph> being read from or written to implements <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> and does not implement <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> wird ausgelöst, wenn der Spaltentyp in der <ph id="ph2">`DataRow`</ph> aus gelesen oder geschrieben werden, um implementiert <ph id="ph3">&lt;xref:System.Dynamic.IDynamicMetaObjectProvider&gt;</ph> und implementiert nicht die <ph id="ph4">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> object that is used to create a new <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> -Objekt, das verwendet wird, zum Erstellen eines neuen <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> object is used with the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method to write an XML document.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> Objekt wird verwendet, mit der <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode, um ein XML-Dokument zu schreiben.</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="T:System.Data.DataSet">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema.</source>
          <target state="translated">Schreibt die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Struktur als XML-Schema.</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object used to write to a file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>-Objekt, mit dem in eine Datei geschrieben wird.</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">Schreibt die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Struktur als XML-Schreibt in das angegebene <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to an XML document.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> -Methode, schreiben das Schema für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> ein XML-Dokument.</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Das XML-Schema wird mit dem XSD-Standard geschrieben.</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> class include <ph id="ph2">&lt;xref:System.IO.BufferedStream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Abgeleitete Klassen die <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> Klasse einbeziehen <ph id="ph2">&lt;xref:System.IO.BufferedStream&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileStream&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph>, und <ph id="ph5">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object that is passed to the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema to disk.</source>
          <target state="translated">Das folgende Beispiel erstellt ein neues <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> -Objekt, das an die <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode, um das Schema auf den Datenträger zu schreiben.</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object with which to write.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Objekt, mit dem geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object.</source>
          <target state="translated">Schreibt die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Struktur als XML-Schreibt in das angegebene <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to an XML document.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> -Methode, schreiben das Schema für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> ein XML-Dokument.</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Das XML-Schema wird mit dem XSD-Standard geschrieben.</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>Classes the derive from the <ph id="ph1">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> class include the <ph id="ph2">&lt;xref:System.Web.HttpWriter?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.StreamWriter?displayProperty=nameWithType&gt;</ph>, and <ph id="ph6">&lt;xref:System.IO.StringWriter?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die von Klassen die <ph id="ph1">&lt;xref:System.IO.TextWriter?displayProperty=nameWithType&gt;</ph> -Klasse enthalten die <ph id="ph2">&lt;xref:System.Web.HttpWriter?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.CodeDom.Compiler.IndentedTextWriter?displayProperty=nameWithType&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.StreamWriter?displayProperty=nameWithType&gt;</ph>, und <ph id="ph6">&lt;xref:System.IO.StringWriter?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Text.StringBuilder?displayProperty=nameWithType&gt;</ph> object to that is used to create a new <ph id="ph2">&lt;xref:System.IO.StringWriter?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Text.StringBuilder?displayProperty=nameWithType&gt;</ph> Objekt, dient zum Erstellen eines neuen <ph id="ph2">&lt;xref:System.IO.StringWriter?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.IO.StringWriter&gt;</ph> is passed to the <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method, and the resulting string is printed to the console window.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.StringWriter&gt;</ph> wird zum Übergeben der <ph id="ph2">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> -Methode und die resultierende Zeichenfolge wird an das Konsolenfenster ausgegeben.</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>The file name (including the path) to which to write.</source>
          <target state="translated">Der Name der Datei, in die geschrieben werden soll, einschließlich des Pfades.</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to a file.</source>
          <target state="translated">Schreibt die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Struktur als XML-Schema in eine Datei.</target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to an XML document.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> -Methode, schreiben das Schema für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> ein XML-Dokument.</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Das XML-Schema wird mit dem XSD-Standard geschrieben.</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> is not set to <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermission" /&gt;</ph> ist nicht auf <ph id="ph2">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.Write" /&gt;</ph> festgelegt.</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>for reading and writing files.</source>
          <target state="translated">Zum Lesen und Schreiben von Dateien.</target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="T:System.Security.Permissions.FileIOPermissionAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> to write to.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, in den geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to an <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object.</source>
          <target state="translated">Schreibt die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Struktur als XML-Schema in ein <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method to write the schema for a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> to an XML document.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> -Methode, schreiben das Schema für eine <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> ein XML-Dokument.</target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The schema includes table, relation, and constraint definitions.</source>
          <target state="translated">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>To write a schema to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method.</source>
          <target state="translated">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The XML schema is written using the XSD standard.</source>
          <target state="translated">Das XML-Schema wird mit dem XSD-Standard geschrieben.</target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>To write the data to an XML document, use the <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> method.</source>
          <target state="translated">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXml%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>One class that inherits from the <ph id="ph1">&lt;xref:System.Xml.XmlWriter?displayProperty=nameWithType&gt;</ph> class is the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Eine Klasse, die von erben die <ph id="ph1">&lt;xref:System.Xml.XmlWriter?displayProperty=nameWithType&gt;</ph> Klasse ist die <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The following example creates a new <ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> object with the specified path.</source>
          <target state="translated">Das folgende Beispiel erstellt ein neues <ph id="ph1">&lt;xref:System.IO.FileStream?displayProperty=nameWithType&gt;</ph> Objekt mit dem angegebenen Pfad.</target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object is used to create an <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> Objekt dient zum Erstellen einer <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> method is then invoked with the <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> object to write the schema to the disk.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Data.DataSet.WriteXmlSchema%2A&gt;</ph> Methode wird dann aufgerufen, mit der <ph id="ph2">&lt;xref:System.Xml.XmlTextWriter&gt;</ph> Objekt, das Schema auf den Datenträger geschrieben werden.</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to write to.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph>-Objekt, in das geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
          <source>A delegate used to convert <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to string.</source>
          <target state="translated">Ein Delegat, der zum Konvertieren von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in String verwendet wird.</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.Stream,System.Converter{System.Type,System.String})">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">Schreibt die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Struktur als XML-Schreibt in das angegebene <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> object to write to.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>-Objekt, in das geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
          <source>A delegate used to convert <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to string.</source>
          <target state="translated">Ein Delegat, der zum Konvertieren von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in String verwendet wird.</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.IO.TextWriter,System.Converter{System.Type,System.String})">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Schreibt die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Struktur als XML-Schema in den angegebenen <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
          <source>The name of the file to write to.</source>
          <target state="translated">Der Name der Datei, in die geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
          <source>A delegate used to convert <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to string.</source>
          <target state="translated">Ein Delegat, der zum Konvertieren von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in String verwendet wird.</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.String,System.Converter{System.Type,System.String})">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to a file.</source>
          <target state="translated">Schreibt die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Struktur als XML-Schema in eine Datei.</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> object to write to.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>-Objekt, in das geschrieben werden soll.</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
          <source>A delegate used to convert <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to string.</source>
          <target state="translated">Ein Delegat, der zum Konvertieren von <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> in String verwendet wird.</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" uid="M:System.Data.DataSet.WriteXmlSchema(System.Xml.XmlWriter,System.Converter{System.Type,System.String})">
          <source>Writes the <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph> structure as an XML schema to the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Schreibt die <ph id="ph1">&lt;see cref="T:System.Data.DataSet" /&gt;</ph>-Struktur als XML-Schema in den angegebenen <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>