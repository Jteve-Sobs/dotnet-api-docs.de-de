<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58edc1bb46a57035950cbd411ffd6b3c6877327a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37670936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <TypeSignature Language="F#" Value="type DataColumn = class&#xA;    inherit MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="76331-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76331-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-102">Die <xref:System.Data.DataColumn> ist der wesentliche Baustein zum Erstellen des Schemas von einem <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="76331-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="76331-103">Sie erstellen das Schema durch Hinzufügen von ein oder mehrere <xref:System.Data.DataColumn> Objekte die <xref:System.Data.DataColumnCollection>.</span><span class="sxs-lookup"><span data-stu-id="76331-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="76331-104">Weitere Informationen finden Sie unter [Hinzufügen von Spalten zu einer DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="76331-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="76331-105">Jede <xref:System.Data.DataColumn> verfügt über eine <xref:System.Data.DataColumn.DataType%2A> Eigenschaft, die die Art der Daten bestimmt die <xref:System.Data.DataColumn> enthält.</span><span class="sxs-lookup"><span data-stu-id="76331-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="76331-106">Beispielsweise können Sie den Datentyp auf ganze Zahlen, Zeichenfolgen oder Dezimalstellen beschränken.</span><span class="sxs-lookup"><span data-stu-id="76331-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="76331-107">Da von enthaltenen Daten in die <xref:System.Data.DataTable> zusammengeführt, in der Regel wieder in der ursprünglichen Datenquelle müssen Sie die Datentypen, die in der Datenquelle übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="76331-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="76331-108">Weitere Informationen finden Sie unter [Datentypzuordnungen in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span><span class="sxs-lookup"><span data-stu-id="76331-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="76331-109">Eigenschaften, z. B. <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, und <xref:System.Data.DataColumn.ReadOnly%2A> Platzieren von Einschränkungen für den Eintrag, und Aktualisieren von Daten, wodurch um die Datenintegrität zu gewährleisten.</span><span class="sxs-lookup"><span data-stu-id="76331-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="76331-110">Sie können auch die <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, und <xref:System.Data.DataColumn.AutoIncrementStep%2A> Eigenschaften, die automatische Generierung steuern.</span><span class="sxs-lookup"><span data-stu-id="76331-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="76331-111">Weitere Informationen zu <xref:System.Data.DataColumn.AutoIncrement%2A> Spalten finden Sie unter [Erstellen von AutoIncrement-Spalten](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span><span class="sxs-lookup"><span data-stu-id="76331-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="76331-112">Weitere Informationen finden Sie unter [Definieren von Primärschlüsseln](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="76331-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="76331-113">Sie können auch sicherstellen, dass Werte in eine <xref:System.Data.DataColumn> eindeutig sind, indem das Erstellen eine <xref:System.Data.UniqueConstraint> und zum Hinzufügen der <xref:System.Data.ConstraintCollection> von der <xref:System.Data.DataTable> , die <xref:System.Data.DataColumn> gehört.</span><span class="sxs-lookup"><span data-stu-id="76331-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="76331-114">Weitere Informationen finden Sie unter [DataTable-Einschränkungen](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span><span class="sxs-lookup"><span data-stu-id="76331-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="76331-115">Erstellen Sie eine Beziehung zwischen <xref:System.Data.DataColumn> Erstellen von Objekten ein <xref:System.Data.DataRelation> Objekt aus, und fügen sie der <xref:System.Data.DataRelationCollection> von einer <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="76331-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="76331-116">Können Sie die <xref:System.Data.DataColumn.Expression%2A> Eigenschaft der <xref:System.Data.DataColumn> Objekt, das um die Werte in einer Spalte zu berechnen oder eine Aggregatspalte erstellt.</span><span class="sxs-lookup"><span data-stu-id="76331-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="76331-117">Weitere Informationen finden Sie unter [Erstellen von Ausdrucksspalten](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span><span class="sxs-lookup"><span data-stu-id="76331-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-118">Das folgende Beispiel erstellt eine <xref:System.Data.DataTable> mit mehreren <xref:System.Data.DataColumn> Objekte.</span><span class="sxs-lookup"><span data-stu-id="76331-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="76331-119">Dieser Typ ist für schreibgeschützte Vorgänge mit mehreren Threads sicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76331-119">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="76331-120">Sie müssen die Schreibvorgänge synchronisieren.</span>
      <span class="sxs-lookup">
        <span data-stu-id="76331-120">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="76331-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76331-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-123">Wenn Sie erstellt haben, eine <xref:System.Data.DataColumn> Objekt hat keinen Standardwert <xref:System.Data.DataColumn.ColumnName%2A> oder <xref:System.Data.DataColumn.Caption%2A>.</span><span class="sxs-lookup"><span data-stu-id="76331-123">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="76331-124">Wenn Sie es zum Hinzufügen einer <xref:System.Data.DataColumnCollection>, ein Standardnamen ("Column1", "Column2" usw.) generiert werden, wenn ein Name nicht zugewiesen wurde die <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="76331-124">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-125">Das folgende Beispiel erstellt ein neues <xref:System.Data.DataColumn>, verschiedene Eigenschaften festgelegt, und fügt es einer <xref:System.Data.DataColumnCollection> für die <xref:System.Data.DataTable> Objekt.</span><span class="sxs-lookup"><span data-stu-id="76331-125">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn columnName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="76331-126">A string that represents the name of the column to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-126">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="76331-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76331-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-129">Standardmäßig wird der Name einer Spalte für die <xref:System.Data.DataColumn.Caption%2A> -Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="76331-129">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-130">Das folgende Beispiel erstellt ein neues <xref:System.Data.DataColumn> mit einem angegebenen <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="76331-130">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="76331-131">A string that represents the name of the column to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-131">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="76331-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="76331-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76331-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76331-135">Das folgende Beispiel erstellt ein neues <xref:System.Data.DataColumn> mit einem angegebenen <xref:System.Data.DataColumn.ColumnName%2A> und <xref:System.Data.DataColumn.DataType%2A>.</span><span class="sxs-lookup"><span data-stu-id="76331-135">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76331-136">No <paramref name="dataType" /> was specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-136">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="76331-137">A string that represents the name of the column to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-137">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="76331-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="76331-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="76331-140">The expression used to create this column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-140">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="76331-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76331-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76331-143">Das folgende Beispiel erstellt eine berechnete Spalte.</span><span class="sxs-lookup"><span data-stu-id="76331-143">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76331-144">No <paramref name="dataType" /> was specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-144">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberSignature Language="F#" Value="new System.Data.DataColumn : string * Type * string * System.Data.MappingType -&gt; System.Data.DataColumn" Usage="new System.Data.DataColumn (columnName, dataType, expr, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="76331-145">A string that represents the name of the column to be created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-145">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="76331-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="76331-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="76331-148">The expression used to create this column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-148">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="76331-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="76331-150">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-150">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76331-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-152">Die `type` Argument legt die <xref:System.Data.DataColumn.ColumnMapping%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76331-152">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="76331-153">Die Eigenschaft gibt an, wie eine <xref:System.Data.DataColumn> zugeordnet wird, wenn eine <xref:System.Data.DataSet> wird umgewandelt in ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="76331-153">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="76331-154">Wenn Sie den Namen der Spalte "VName", und der darin enthaltene Wert ist "Bob", z. B. und `type` nastaven NA hodnotu `MappingType.Attribute`, wäre das XML-Element wie folgt:</span><span class="sxs-lookup"><span data-stu-id="76331-154">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="76331-155">\<FName mit Name = "Bob" / ></span><span class="sxs-lookup"><span data-stu-id="76331-155">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="76331-156">Weitere Informationen über die Zuordnung von Spalten zu Elementen oder Attributen finden Sie unter den <xref:System.Data.DataColumn.ColumnMapping%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76331-156">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-157">Im folgende Beispiel wird eine berechnete Spalte erstellt.</span><span class="sxs-lookup"><span data-stu-id="76331-157">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="76331-158">No <paramref name="dataType" /> was specified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-158">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDBNull : bool with get, set" Usage="System.Data.DataColumn.AllowDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-160">
            <see langword="true" /> Wenn null-Werte zulässig sind. andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-160">
              <see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="76331-161">Die Standardeinstellung ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-161">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76331-162">Das folgende Beispiel erstellt ein neues <xref:System.Data.DataColumn> und legt seine <xref:System.Data.DataColumn.AllowDBNull%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="76331-162">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrement : bool with get, set" Usage="System.Data.DataColumn.AutoIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-164">
            <see langword="true" /> Wenn der Wert der Spalte automatisch inkrementiert. andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-164">
              <see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="76331-165">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-166">Ist der Typ dieser Spalte nicht Int16, Int32 oder Int64 Wenn diese Eigenschaft festgelegt ist, die <xref:System.Data.DataColumn.DataType%2A> Eigenschaft in Int32 umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="76331-166">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="76331-167">Wenn es sich um eine berechnete Spalte handelt, wird eine Ausnahme generiert.</span><span class="sxs-lookup"><span data-stu-id="76331-167">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="76331-168">Die <xref:System.Data.DataColumn.Expression%2A> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="76331-168">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="76331-169">Nur, wenn der Wert der Zeile für diese Spalte, die beim Hinzufügen zur spaltenauflistung, der Standardwert entspricht, wird der inkrementierte Wert verwendet.</span><span class="sxs-lookup"><span data-stu-id="76331-169">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="76331-170">Erstellen Sie eine neue Zeile mit der <xref:System.Data.DataRow.ItemArray%2A> Eigenschaft der <xref:System.Data.DataRow> -Klasse und übergibt ein Array von Werten.</span><span class="sxs-lookup"><span data-stu-id="76331-170">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="76331-171">Dies ist ein potenzielles Problem für eine Spalte mit der <xref:System.Data.DataColumn.AutoIncrement%2A> festgelegt `true`, da der Wert automatisch generiert wird.</span><span class="sxs-lookup"><span data-stu-id="76331-171">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="76331-172">Verwenden der <xref:System.Data.DataRow.ItemArray%2A> -Eigenschaft, die direkte `null` in die Position der Spalte im Array.</span><span class="sxs-lookup"><span data-stu-id="76331-172">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="76331-173">Weitere Informationen finden Sie unter den <xref:System.Data.DataRow.ItemArray%2A> Eigenschaft der <xref:System.Data.DataRow> Klasse.</span><span class="sxs-lookup"><span data-stu-id="76331-173">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="76331-174">Wenn der Typ der Spalte <xref:System.Data.SqlTypes.SqlInt16> oder <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> funktioniert nicht.</span><span class="sxs-lookup"><span data-stu-id="76331-174">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="76331-175">Verwenden Sie stattdessen Int16 oder Int32.</span><span class="sxs-lookup"><span data-stu-id="76331-175">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="76331-176">Wenn der Typ der Spalte <xref:System.Data.SqlTypes.SqlInt64> oder <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> funktioniert nur teilweise.</span><span class="sxs-lookup"><span data-stu-id="76331-176">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="76331-177">Verwenden Sie stattdessen Int64 oder Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="76331-177">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="76331-178">Wenn die <xref:System.Data.DataColumn.AutoIncrementStep%2A> wird Wert hinzugefügt, den aktuellen Wert der überlaufprüfung unterdrückt wird.</span><span class="sxs-lookup"><span data-stu-id="76331-178">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-179">Im folgenden Beispiel wird die <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, und <xref:System.Data.DataColumn.AutoIncrementStep%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="76331-179">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76331-180">The column is a computed column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-180">The column is a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementSeed : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementSeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="76331-182">The default is 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-182">The default is 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-183">Der Anfangswert für die <see cref="P:System.Data.DataColumn.AutoIncrement" /> Feature.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-183">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76331-184">Im folgenden Beispiel wird die <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, und <xref:System.Data.DataColumn.AutoIncrementStep%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="76331-184">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.AutoIncrementStep : int64 with get, set" Usage="System.Data.DataColumn.AutoIncrementStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-186">Die Anzahl, die der Wert der Spalte automatisch inkrementiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-186">The number by which the value of the column is automatically incremented.</span>
          </span>
          <span data-ttu-id="76331-187">Der Standard ist 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-187">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76331-188">Im folgenden Beispiel wird die <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, und <xref:System.Data.DataColumn.AutoIncrementStep%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="76331-188">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76331-189">The value set is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-189">The value set is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Data.DataColumn.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-190">Gets or sets the caption for the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-190">Gets or sets the caption for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-191">Die Beschriftung der Spalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-191">The caption of the column.</span>
          </span>
          <span data-ttu-id="76331-192">Wenn nicht festgelegt ist, wird die <see cref="P:System.Data.DataColumn.ColumnName" /> Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-192">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-193">Können Sie die <xref:System.Data.DataColumn.Caption%2A> Eigenschaft zum Anzeigen eines beschreibungs- oder benutzerfreundlichen Namens für eine <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="76331-193">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-194">Das folgende Beispiel erstellt ein neues <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="76331-194">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="76331-195">Dann fügt drei <xref:System.Data.DataColumn> Objekte eine <xref:System.Data.DataColumnCollection> und legt die <xref:System.Data.DataColumn.Caption%2A> -Eigenschaft für jedes <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="76331-195">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberSignature Language="F#" Value="member this.CheckNotAllowNull : unit -&gt; unit" Usage="dataColumn.CheckNotAllowNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76331-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberSignature Language="F#" Value="member this.CheckUnique : unit -&gt; unit" Usage="dataColumn.CheckUnique " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76331-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnMapping : System.Data.MappingType with get, set" Usage="System.Data.DataColumn.ColumnMapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-199">Einer der <see cref="T:System.Data.MappingType" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-199">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-200">Die <xref:System.Data.DataColumn.ColumnMapping%2A> Eigenschaft bestimmt, wie eine <xref:System.Data.DataColumn> zugeordnet wird, wenn eine <xref:System.Data.DataSet> wird gespeichert, wie ein XML-Instanzdokument wird mithilfe der <xref:System.Data.DataSet.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="76331-200">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="76331-201">Z. B. wenn ein <xref:System.Data.DataColumn> ist mit dem Namen "CustomerID", und die zugehörige <xref:System.Data.DataColumn.ColumnMapping%2A> -Eigenschaftensatz auf `MappingType.Element`, der Spaltenwert erzeugt die folgende XML:</span><span class="sxs-lookup"><span data-stu-id="76331-201">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="76331-202">Aber wenn die gleiche Spalte zugeordnet ist `MappingType.Attribute`, wird das folgende XML erstellt:</span><span class="sxs-lookup"><span data-stu-id="76331-202">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="76331-203">Verwenden der <xref:System.Data.DataColumn.%23ctor%2A> -Konstruktor, enthält die `type` Argument angeben, wie die <xref:System.Data.DataColumn> zugeordnet wird, wenn die <xref:System.Data.DataSet> in ein XML-Dokument transformiert.</span><span class="sxs-lookup"><span data-stu-id="76331-203">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="76331-204">Die <xref:System.Data.DataColumn.ColumnMapping%2A> Eigenschaft entspricht dem Konstruktorargument `type`.</span><span class="sxs-lookup"><span data-stu-id="76331-204">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-205">Im folgenden Beispiel wird die <xref:System.Data.DataColumn.ColumnMapping%2A> type-Eigenschaft des neuen <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="76331-205">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ColumnName : string with get, set" Usage="System.Data.DataColumn.ColumnName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-207">Der Name der Spalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-207">The name of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-208">Wenn eine <xref:System.Data.DataColumn> wird erstellt, es hat keine <xref:System.Data.DataColumn.ColumnName%2A> Wert.</span><span class="sxs-lookup"><span data-stu-id="76331-208">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="76331-209">Jedoch, wenn die <xref:System.Data.DataColumn> hinzugefügt wird eine <xref:System.Data.DataColumnCollection> für eine <xref:System.Data.DataTable> Objekt ist, wird ihm ein Standardname ("Column1", "Column2" usw.).</span><span class="sxs-lookup"><span data-stu-id="76331-209">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="76331-210">In der Standardeinstellung die <xref:System.Data.DataColumn.Caption%2A> Wert wird festgelegt, um die <xref:System.Data.DataColumn.ColumnName%2A> Wert.</span><span class="sxs-lookup"><span data-stu-id="76331-210">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-211">Ruft ab, in den folgenden Beispielen die <xref:System.Data.DataColumn.ColumnName%2A> für jede Spalte in jeder Tabelle in eine <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="76331-211">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="76331-212">Außerdem wird gezeigt, wie Sie erstellen eine <xref:System.Data.DataColumn> mit einem neuen <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="76331-212">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76331-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="76331-214">A column with the same name already exists in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-214">A column with the same name already exists in the collection.</span>
          </span>
          <span data-ttu-id="76331-215">The name comparison is not case sensitive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-215">The name comparison is not case sensitive.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : Type with get, set" Usage="System.Data.DataColumn.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-216">Gets or sets the type of data stored in the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-216">Gets or sets the type of data stored in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-217">Ein <see cref="T:System.Type" /> Objekt, das den Spaltendatentyp darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-217">A <see cref="T:System.Type" /> object that represents the column data type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-218">Festlegen der <xref:System.Data.DataColumn.DataType%2A> Wert ist sehr wichtig, garantiert das richtige erstellen und Aktualisieren von Daten in einer Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="76331-218">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="76331-219">Die <xref:System.Data.DataColumn.DataType%2A> Eigenschaft unterstützt die folgenden .NET Framework-Basisdatentypen:</span><span class="sxs-lookup"><span data-stu-id="76331-219">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="76331-220">sowie die folgenden Arraytyp:</span><span class="sxs-lookup"><span data-stu-id="76331-220">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="76331-221">Wenn das Ändern dieser Eigenschaft nach der Spalte Speichern von Daten begonnen hat, wird eine Ausnahme generiert.</span><span class="sxs-lookup"><span data-stu-id="76331-221">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="76331-222">Wenn <xref:System.Data.DataColumn.AutoIncrement%2A> nastaven NA hodnotu `true` vor dem Festlegen der <xref:System.Data.DataColumn.DataType%2A> -Eigenschaft, und versuchen, den Typ auf einen ganzzahligen Typ festlegen, wird eine Ausnahme generiert.</span><span class="sxs-lookup"><span data-stu-id="76331-222">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76331-223">Eine Spalte des Datentyps `Byte[]` in bestimmten Fällen eine besondere Behandlung erfordert, da im Gegensatz zu .NET Framework-Basisdatentypen, um einen Verweis-Datentyp handelt.</span><span class="sxs-lookup"><span data-stu-id="76331-223">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="76331-224">Wenn eine Spalte vom Datentyp `Byte[]` dient als ein <xref:System.Data.DataTable.PrimaryKey%2A>, oder als eine <xref:System.Data.DataView.Sort%2A> oder <xref:System.Data.DataView.RowFilter%2A> Schlüssel für eine <xref:System.Data.DataView>, jede Änderung an der Wert der Spalte muss umfassen Zuweisen der `Byte[]` Spaltenwert ein separat instanziiert `Byte[]` Objekt.</span><span class="sxs-lookup"><span data-stu-id="76331-224">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="76331-225">Diese Zuweisung ist erforderlich, um die Aktualisierung von sortieren, Filtern und primäre Schlüsselvorgänge verwendete interne Indizes auszulösen.</span><span class="sxs-lookup"><span data-stu-id="76331-225">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="76331-226">Dies wird im folgenden Beispiel illustriert:</span><span class="sxs-lookup"><span data-stu-id="76331-226">This is illustrated by the following example:</span></span>  
  
```  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="76331-227">Obwohl es möglich, eine Spalte definieren, als Datentyp außer .NET Framework-Basisdatentypen und `Byte[]`, eine solche Spalte als benutzerdefinierten Typ, gelten die folgenden Beschränkungen der Datenträgerverwendung behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="76331-227">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="76331-228">(Weitere Informationen zu benutzerdefinierten Typen finden Sie unter [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span><span class="sxs-lookup"><span data-stu-id="76331-228">(For more information on user-defined types, see [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="76331-229">Die Spalte darf nicht Teil einer <xref:System.Data.DataView.RowFilter%2A> oder <xref:System.Data.DataTable.Select%2A> Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="76331-229">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="76331-230">Wenn die Spalte, als verwendet wird eine <xref:System.Data.DataTable.PrimaryKey%2A>, oder als eine <xref:System.Data.DataView.Sort%2A> oder für eine <xref:System.Data.DataView>, muss es als ein unveränderliches Feld behandelt werden; die Daten der Spalte darf nicht geändert werden, nachdem sie der Tabelle hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="76331-230">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="76331-231">Die <xref:System.Data.DataColumn.ColumnMapping%2A> kann nur festgelegt werden, um `MappingType.Element`.</span><span class="sxs-lookup"><span data-stu-id="76331-231">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="76331-232">Die Klasse, die implementiert, der Datentyp der Spalte muss, mit markiert werden, müssen die <xref:System.SerializableAttribute>, und implementieren Sie ggf. die <xref:System.Runtime.Serialization.ISerializable> oder <xref:System.Xml.Serialization.IXmlSerializable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="76331-232">The class that implements the column’s data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="76331-233">Unterstützung für die änderungsnachverfolgung ist beschränkt.</span><span class="sxs-lookup"><span data-stu-id="76331-233">Support for change tracking is limited.</span></span> <span data-ttu-id="76331-234">Verwenden der <xref:System.Data.DataTable> Nachverfolgungsmechanismus für die Klasse ändern, die Klasse, implementiert der Datentyp der Spalte, muss entweder implementieren die <xref:System.ComponentModel.IChangeTracking> Schnittstelle oder übernehmen Sie die Verantwortung für die darüber informiert die <xref:System.Data.DataRow> Wenn der Spaltenwert wurde geändert, entweder durch Aufrufen <xref:System.Data.DataRow.SetModified%2A> in der Zeile oder ein Wertobjekt separat instanziiert Spalte die Column-Wert-Objekt zuweisen.</span><span class="sxs-lookup"><span data-stu-id="76331-234">To utilize the <xref:System.Data.DataTable> class’s change tracking mechanism, the class that implements the column’s data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-235">Das folgende Beispiel fügt Spalten verschiedene Datentypen, eine <xref:System.Data.DataTable>, und klicken Sie dann in der Tabelle eine Zeile hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="76331-235">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76331-236">The column already has data stored.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-236">The column already has data stored.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberSignature Language="F#" Value="member this.DateTimeMode : System.Data.DataSetDateTime with get, set" Usage="System.Data.DataColumn.DateTimeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-238">Die <see cref="T:System.Data.DataSetDateTime" /> für die angegebene Spalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-238">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-239">Die <xref:System.Data.DataColumn.DateTimeMode%2A> kann nicht geändert werden, wenn Zeilen hinzugefügt haben eine <xref:System.Data.DataColumn>, mit Ausnahme von ändern <xref:System.Data.DataSetDateTime.Unspecified> und <xref:System.Data.DataSetDateTime.UnspecifiedLocal> oder umgekehrt.</span><span class="sxs-lookup"><span data-stu-id="76331-239">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="76331-240">Die Änderung von `UnspecifiedLocal` zu `Unspecified` und umgekehrt ist zulässig, da der Unterschied zwischen diesen beiden Optionen nur während der Serialisierung wird und sich nicht auf den Speicher wirkt.</span><span class="sxs-lookup"><span data-stu-id="76331-240">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : obj with get, set" Usage="System.Data.DataColumn.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-241">Gets or sets the default value for the column when you are creating new rows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-241">Gets or sets the default value for the column when you are creating new rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-242">Ein Wert, der auf der Spaltenwerts des entsprechenden <see cref="P:System.Data.DataColumn.DataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-242">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-243">Ein Standardwert ist der Wert, der die Spalte automatisch zugewiesen wird bei einer <xref:System.Data.DataRow> erstellt wird (z. B. das Datum und die Uhrzeit der <xref:System.Data.DataRow> erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="76331-243">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="76331-244">Wenn <xref:System.Data.DataColumn.AutoIncrement%2A> nastaven NA hodnotu True gibt an, es kann sein keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="76331-244">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="76331-245">Erstellen Sie eine neue Zeile mit der <xref:System.Data.DataRow.ItemArray%2A> Eigenschaft der <xref:System.Data.DataRow> -Klasse und übergeben der Methode ein Array von Werten.</span><span class="sxs-lookup"><span data-stu-id="76331-245">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="76331-246">Dies ist ein potenzielles Problem für eine Spalte mit einem Standardwert, da der Wert automatisch generiert wird.</span><span class="sxs-lookup"><span data-stu-id="76331-246">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="76331-247">Verwenden der <xref:System.Data.DataRow.ItemArray%2A> Eigenschaft mit einer solchen Spalte platzieren `null` in die Position der Spalte im Array.</span><span class="sxs-lookup"><span data-stu-id="76331-247">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="76331-248">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Data.DataRow.ItemArray%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76331-248">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-249">Das folgende Beispiel erstellt mehrere <xref:System.Data.DataColumn> Objekte, die unterschiedliche Datentypen aufweisen, und legt die entsprechenden Standardwerte für die einzelnen Spalten.</span><span class="sxs-lookup"><span data-stu-id="76331-249">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="76331-250">When you are adding a row, the default value is not an instance of the column's data type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-250">When you are adding a row, the default value is not an instance of the column's data type.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Data.DataColumn.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-252">Ein Ausdruck, berechnen Sie den Wert einer Spalte oder eine Aggregatspalte erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-252">An expression to calculate the value of a column, or create an aggregate column.</span>
          </span>
          <span data-ttu-id="76331-253">Der Rückgabetyp eines Ausdrucks richtet sich nach der <see cref="P:System.Data.DataColumn.DataType" /> der Spalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-253">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-254">Eine Verwendung der <xref:System.Data.DataColumn.Expression%2A> Eigenschaft ist die Erstellung von berechneten Spalten.</span><span class="sxs-lookup"><span data-stu-id="76331-254">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="76331-255">Z. B. wird der Preis um ein Steuerwert zu berechnen, indem ein Steuersatz von einer bestimmten Region multipliziert.</span><span class="sxs-lookup"><span data-stu-id="76331-255">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="76331-256">Da Steuersätze zwischen Regionen unterschiedlich sind, wäre es nicht möglich, einen einzigen Steuersatz in einer Spalte zu platzieren; Stattdessen wird der Wert über berechnet die <xref:System.Data.DataColumn.Expression%2A> Eigenschaft, die in Visual Basic-Code im folgenden Abschnitt dargestellt:</span><span class="sxs-lookup"><span data-stu-id="76331-256">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="76331-257">DataSet1.Tables("Products"). Columns("Tax"). Ausdruck = "UnitPrice \* 0.086"</span><span class="sxs-lookup"><span data-stu-id="76331-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="76331-258">Eine zweite Verwendungsmöglichkeit wird eine Aggregatspalte erstellt.</span><span class="sxs-lookup"><span data-stu-id="76331-258">A second use is to create an aggregate column.</span></span> <span data-ttu-id="76331-259">Ähnlich wie ein berechneter Wert führt ein Aggregat ein Vorgangs basierend auf den vollständigen Satz von Zeilen in der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="76331-259">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="76331-260">Ein einfaches Beispiel ist zum zählen der Anzahl der Zeilen, die in den Satz zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="76331-260">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="76331-261">Dies ist die Methode, die Sie verwenden würden, um die Anzahl der Transaktionen, die von einem bestimmten Verkäufer abgeschlossen zu zählen, wie in Visual Basic-Code dargestellt:</span><span class="sxs-lookup"><span data-stu-id="76331-261">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="76331-262">Ausdruckssyntax</span><span class="sxs-lookup"><span data-stu-id="76331-262">Expression Syntax</span></span>  
 <span data-ttu-id="76331-263">Wenn Sie einen Ausdruck erstellen, verwenden Sie die <xref:System.Data.DataColumn.ColumnName%2A> Eigenschaft, um auf Spalten verweisen.</span><span class="sxs-lookup"><span data-stu-id="76331-263">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="76331-264">Z. B. wenn die <xref:System.Data.DataColumn.ColumnName%2A> für eine Spalte "UnitPrice" und "Quantity" wird eine andere ist der Ausdruck wäre wie folgt:</span><span class="sxs-lookup"><span data-stu-id="76331-264">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="76331-265">"Einzelpreis \* Menge"</span><span class="sxs-lookup"><span data-stu-id="76331-265">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76331-266">Wenn eine Spalte in einem Ausdruck verwendet wird, wird der Ausdruck als eine Abhängigkeit für die betreffende Spalte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="76331-266">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="76331-267">Wenn eine abhängige Spalte umbenannt oder entfernt wird, wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76331-267">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="76331-268">Wenn die jetzt-broken-Ausdrucksspalte zugegriffen wird, wird eine Ausnahme ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76331-268">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="76331-269">Wenn Sie einen Ausdruck für einen Filter erstellen, schließen Sie Zeichenfolgen in einfachen Anführungszeichen:</span><span class="sxs-lookup"><span data-stu-id="76331-269">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="76331-270">"LastName ="Jones""</span><span class="sxs-lookup"><span data-stu-id="76331-270">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="76331-271">Wenn ein Spaltenname alle nicht-alphanumerischen Zeichen enthält oder mit einer Ziffer beginnt oder entspricht () mit einer der folgenden reservierten Wörter, erfordert diese besondere Behandlung, wie in den folgenden Abschnitten beschrieben.</span><span class="sxs-lookup"><span data-stu-id="76331-271">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="76331-272">Und</span><span class="sxs-lookup"><span data-stu-id="76331-272">And</span></span>  
  
 <span data-ttu-id="76331-273">Zwischen</span><span class="sxs-lookup"><span data-stu-id="76331-273">Between</span></span>  
  
 <span data-ttu-id="76331-274">Child (Untergeordnet)</span><span class="sxs-lookup"><span data-stu-id="76331-274">Child</span></span>  
  
 <span data-ttu-id="76331-275">False</span><span class="sxs-lookup"><span data-stu-id="76331-275">False</span></span>  
  
 <span data-ttu-id="76331-276">In</span><span class="sxs-lookup"><span data-stu-id="76331-276">In</span></span>  
  
 <span data-ttu-id="76331-277">Is</span><span class="sxs-lookup"><span data-stu-id="76331-277">Is</span></span>  
  
 <span data-ttu-id="76331-278">Like</span><span class="sxs-lookup"><span data-stu-id="76331-278">Like</span></span>  
  
 <span data-ttu-id="76331-279">Not</span><span class="sxs-lookup"><span data-stu-id="76331-279">Not</span></span>  
  
 <span data-ttu-id="76331-280">Null</span><span class="sxs-lookup"><span data-stu-id="76331-280">Null</span></span>  
  
 <span data-ttu-id="76331-281">Or</span><span class="sxs-lookup"><span data-stu-id="76331-281">Or</span></span>  
  
 <span data-ttu-id="76331-282">Übergeordnetes Element</span><span class="sxs-lookup"><span data-stu-id="76331-282">Parent</span></span>  
  
 <span data-ttu-id="76331-283">True</span><span class="sxs-lookup"><span data-stu-id="76331-283">True</span></span>  
  
 <span data-ttu-id="76331-284">Wenn Sie ein Spaltennamen an eine der oben genannten Bedingungen erfüllt, müssen sie in beiden eckige Klammern gesetzt werden oder die "'" (Graviszeichen) Anführungszeichen ein.</span><span class="sxs-lookup"><span data-stu-id="76331-284">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="76331-285">Beispielsweise würden um eine Spalte mit dem Namen "Spalte Nr." in einem Ausdruck verwenden, Sie entweder "[Spaltennummer]" schreiben:</span><span class="sxs-lookup"><span data-stu-id="76331-285">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="76331-286">Insgesamt \* [Spaltennummer]</span><span class="sxs-lookup"><span data-stu-id="76331-286">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="76331-287">oder "\`Spalte Nr. '":</span><span class="sxs-lookup"><span data-stu-id="76331-287">or "\`Column#`":</span></span>  
  
 <span data-ttu-id="76331-288">Insgesamt \* \`Spalte Nr. '</span><span class="sxs-lookup"><span data-stu-id="76331-288">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="76331-289">Wenn Sie der Spaltennamen in eckigen Klammern und alle eingeschlossen ist ']' und '\\' Zeichen (aber keine anderen Zeichen), es müssen mit Escapezeichen versehen werden, wobei sie mit dem umgekehrten Schrägstrich vorangestellt wird ("\\") Zeichen.</span><span class="sxs-lookup"><span data-stu-id="76331-289">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="76331-290">Wenn der Spaltenname in Graviszeichen eingeschlossen ist muss sie Graviszeichen darin nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="76331-290">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="76331-291">Z. B. eine Spalte, die mit dem Namen "Column []\\" geschrieben werden sollen:</span><span class="sxs-lookup"><span data-stu-id="76331-291">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="76331-292">Insgesamt \* [Spalte [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="76331-292">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="76331-293">oder</span><span class="sxs-lookup"><span data-stu-id="76331-293">or</span></span>  
  
 <span data-ttu-id="76331-294">Insgesamt \* \`Column]\\`</span><span class="sxs-lookup"><span data-stu-id="76331-294">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="76331-295">Benutzerdefinierte Werte</span><span class="sxs-lookup"><span data-stu-id="76331-295">User-Defined Values</span></span>  
 <span data-ttu-id="76331-296">Benutzerdefinierte Werte können in Ausdrücken verwendet werden, mit den Spaltenwerten verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="76331-296">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="76331-297">Zeichenfolgenwerte müssen in einfache Anführungszeichen eingeschlossen werden (und jedes einfache Anführungszeichen in einem Zeichenfolgenwert wurde mit Escapezeichen versehen werden, indem diese mit einem anderen einfache Anführungszeichen vorangestellt wird).</span><span class="sxs-lookup"><span data-stu-id="76331-297">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="76331-298">Date-Werte sollten in Nummernzeichen (#) oder einfache Anführungszeichen ('), die basierend auf den Datenanbieter eingeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="76331-298">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="76331-299">Dezimalstellen sowie die wissenschaftliche Schreibweise sind für numerische Werte zulässig.</span><span class="sxs-lookup"><span data-stu-id="76331-299">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="76331-300">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="76331-300">For example:</span></span>  
  
 <span data-ttu-id="76331-301">"FirstName ="John""</span><span class="sxs-lookup"><span data-stu-id="76331-301">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="76331-302">"Preis < = 50,00"</span><span class="sxs-lookup"><span data-stu-id="76331-302">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="76331-303">"" BirthDate "< # von #1/31/82"</span><span class="sxs-lookup"><span data-stu-id="76331-303">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="76331-304">Für Spalten, die Enumerationswerte enthalten, können Umwandeln Sie den Wert in einen Integer-Datentyp.</span><span class="sxs-lookup"><span data-stu-id="76331-304">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="76331-305">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="76331-305">For example:</span></span>  
  
 <span data-ttu-id="76331-306">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="76331-306">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="76331-307">Analysieren von literalen Ausdrücken</span><span class="sxs-lookup"><span data-stu-id="76331-307">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="76331-308">Alle Literale Ausdrücke müssen in das Gebietsschema für die invariante Kultur angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="76331-308">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="76331-309">Wenn `DataSet` analysiert und konvertiert Sie Literale Ausdrücke immer die invariante Kultur, nicht die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="76331-309">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="76331-310">Zeichenfolgenliterale werden identifiziert, wenn einfache Anführungszeichen um den Wert vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="76331-310">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="76331-311">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="76331-311">For example:</span></span>  
  
 <span data-ttu-id="76331-312">"John"</span><span class="sxs-lookup"><span data-stu-id="76331-312">'John'</span></span>  
  
 <span data-ttu-id="76331-313">`Boolean` Literale sind "true" und "false". Sie sind nicht in Ausdrücken in Anführungszeichen eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="76331-313">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="76331-314">`Integer` Literale [+-]? [0-9] + fungieren als `System.Int32`, `System.Int64` oder `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="76331-314">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="76331-315">`System.Double` abnehmen kann, je nachdem, wie groß die Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="76331-315">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="76331-316">Wenn die Anzahl im Literal 2147483650 ist z. B. `DataSet` versucht zunächst, analysieren die Zahl als eine `Int32`.</span><span class="sxs-lookup"><span data-stu-id="76331-316">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="76331-317">Dies ist nicht erfolgreich, da die Zahl zu groß ist.</span><span class="sxs-lookup"><span data-stu-id="76331-317">This will not succeed because the number is too large.</span></span> <span data-ttu-id="76331-318">In diesem Fall `DataSet` analysiert die Zahl als eine `Int64`, ist erfolgreich.</span><span class="sxs-lookup"><span data-stu-id="76331-318">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="76331-319">Wenn das Literal eine Zahl größer als der zulässige Höchstwert von Int64, war `DataSet` analysiert das literal mit `Double`.</span><span class="sxs-lookup"><span data-stu-id="76331-319">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="76331-320">Echte Literale, die mit der wissenschaftlichen Schreibweise wie z. B. 4.42372E-30, sind mit analysiert `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="76331-320">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="76331-321">Echte Literale ohne wissenschaftliche Schreibweise, jedoch mit einem Dezimaltrennzeichen, fungieren als `System.Decimal`.</span><span class="sxs-lookup"><span data-stu-id="76331-321">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="76331-322">Die Anzahl überschreitet die maximale oder minimale Werte, die von unterstützt `System.Decimal`, wird es als analysiert eine `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="76331-322">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="76331-323">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="76331-323">For example:</span></span>  
  
 <span data-ttu-id="76331-324">142526.144524 in konvertiert eine `Decimal`.</span><span class="sxs-lookup"><span data-stu-id="76331-324">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="76331-325">345262.78036719560925667 behandelt werden als eine `Double`.</span><span class="sxs-lookup"><span data-stu-id="76331-325">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="76331-326">Operatoren</span><span class="sxs-lookup"><span data-stu-id="76331-326">Operators</span></span>  
 <span data-ttu-id="76331-327">Verkettung kann mithilfe von booleschen AND, OR und NOT-Operatoren.</span><span class="sxs-lookup"><span data-stu-id="76331-327">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="76331-328">Sie können mithilfe von Klammern gruppieren Sie Klauseln und Priorität zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="76331-328">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="76331-329">Der AND-Operator hat Vorrang vor anderen Operatoren.</span><span class="sxs-lookup"><span data-stu-id="76331-329">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="76331-330">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="76331-330">For example:</span></span>  
  
 <span data-ttu-id="76331-331">("LastName" = "Smith" oder "LastName" = "Jones") UND FirstName = "John"</span><span class="sxs-lookup"><span data-stu-id="76331-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="76331-332">Wenn Sie Vergleichsausdrücke erstellen, sind die folgenden Operatoren zulässig:</span><span class="sxs-lookup"><span data-stu-id="76331-332">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="76331-333">IN</span><span class="sxs-lookup"><span data-stu-id="76331-333">IN</span></span>  
  
 <span data-ttu-id="76331-334">LIKE</span><span class="sxs-lookup"><span data-stu-id="76331-334">LIKE</span></span>  
  
 <span data-ttu-id="76331-335">Die folgenden arithmetischen Operatoren werden auch in Ausdrücken unterstützt werden:</span><span class="sxs-lookup"><span data-stu-id="76331-335">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="76331-336">\+ (Addition)</span><span class="sxs-lookup"><span data-stu-id="76331-336">\+ (addition)</span></span>  
  
 <span data-ttu-id="76331-337">\- (Subtraktion)</span><span class="sxs-lookup"><span data-stu-id="76331-337">\- (subtraction)</span></span>  
  
 <span data-ttu-id="76331-338">\* (Multiplikation)</span><span class="sxs-lookup"><span data-stu-id="76331-338">\* (multiplication)</span></span>  
  
 <span data-ttu-id="76331-339">/ (Division)</span><span class="sxs-lookup"><span data-stu-id="76331-339">/ (division)</span></span>  
  
 <span data-ttu-id="76331-340">% (Modulo)</span><span class="sxs-lookup"><span data-stu-id="76331-340">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="76331-341">Zeichenfolgenoperatoren</span><span class="sxs-lookup"><span data-stu-id="76331-341">String Operators</span></span>  
 <span data-ttu-id="76331-342">Um eine Zeichenfolge zu verketten, verwenden Sie das Zeichen +.</span><span class="sxs-lookup"><span data-stu-id="76331-342">To concatenate a string, use the + character.</span></span> <span data-ttu-id="76331-343">Der Wert des der <xref:System.Data.DataSet.CaseSensitive%2A> Eigenschaft der <xref:System.Data.DataSet> -Klasse bestimmt, ob Zeichenfolgenvergleiche die Groß-/Kleinschreibung beachtet werden.</span><span class="sxs-lookup"><span data-stu-id="76331-343">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="76331-344">Allerdings können Sie diesen Wert durch Überschreiben der <xref:System.Data.DataTable.CaseSensitive%2A> Eigenschaft der <xref:System.Data.DataTable> Klasse.</span><span class="sxs-lookup"><span data-stu-id="76331-344">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="76331-345">Platzhalterzeichen</span><span class="sxs-lookup"><span data-stu-id="76331-345">Wildcard Characters</span></span>  
 <span data-ttu-id="76331-346">Sowohl die \* und % Synonym als Platzhalterzeichen in einem LIKE-Vergleich verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="76331-346">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="76331-347">Wenn die Zeichenfolge in einer LIKE-Klausel enthält einen \* oder % werden diese Zeichen in eckigen Klammern ([]) eingeschlossen werden soll.</span><span class="sxs-lookup"><span data-stu-id="76331-347">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="76331-348">Wenn eine Klammer in der Klausel enthalten ist, sollte jeder Klammer in Klammern (z. B. [[] oder []]) eingeschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="76331-348">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="76331-349">Ein Platzhalter kann am Anfang und Ende eines Musters oder am Ende eines Musters oder zu Beginn eines Musters.</span><span class="sxs-lookup"><span data-stu-id="76331-349">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="76331-350">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="76331-350">For example:</span></span>  
  
 <span data-ttu-id="76331-351">"Elementname wie" * Produkt\*""</span><span class="sxs-lookup"><span data-stu-id="76331-351">"ItemName LIKE '*product\*'"</span></span>  
  
 <span data-ttu-id="76331-352">"Elementname wie" \* Produkte ""</span><span class="sxs-lookup"><span data-stu-id="76331-352">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="76331-353">"ItemName LIKE"Product "\*"</span><span class="sxs-lookup"><span data-stu-id="76331-353">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="76331-354">Platzhalterzeichen sind in der Mitte einer Zeichenfolge nicht zulässig.</span><span class="sxs-lookup"><span data-stu-id="76331-354">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="76331-355">Z. B. "Te \* feedbackflow für explorative Tests" ist nicht zulässig.</span><span class="sxs-lookup"><span data-stu-id="76331-355">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="76331-356">Übergeordnet/Untergeordnet-Beziehung verweisen</span><span class="sxs-lookup"><span data-stu-id="76331-356">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="76331-357">Eine übergeordnete Tabelle kann in einem Ausdruck verwiesen werden, indem dem Spaltennamen vorangestellt wird `Parent`.</span><span class="sxs-lookup"><span data-stu-id="76331-357">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="76331-358">Z. B. die `Parent.Price` verweist auf der übergeordneten Tabelle-Spalte, die mit dem Namen `Price`.</span><span class="sxs-lookup"><span data-stu-id="76331-358">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="76331-359">Wenn ein untergeordnetes Element mehrere übergeordnete Zeilen aufweist, verwenden Sie Parent(RelationName). ColumnName.</span><span class="sxs-lookup"><span data-stu-id="76331-359">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="76331-360">Beispiel: die Parent(RelationName). Preis, verweist der übergeordneten Tabelle Spalte namens "Price" über die Beziehung auf.</span><span class="sxs-lookup"><span data-stu-id="76331-360">For example, the Parent(RelationName).Price references the parent table’s column named Price via the relation.</span></span>  
  
 <span data-ttu-id="76331-361">Eine Spalte in einer untergeordneten Tabelle kann in einem Ausdruck verwiesen werden, indem dem Spaltennamen vorangestellt wird `Child`.</span><span class="sxs-lookup"><span data-stu-id="76331-361">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="76331-362">Da Beziehungen zwischen untergeordneten Elementen möglicherweise mehrere Zeilen zurückgibt, müssen Sie jedoch den Verweis auf die untergeordnete Spalte in einer Aggregatfunktion aufnehmen.</span><span class="sxs-lookup"><span data-stu-id="76331-362">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="76331-363">Z. B. `Sum(Child.Price)` würde die Summe der Spalte mit dem Namen zurückgeben `Price` in der untergeordneten Tabelle.</span><span class="sxs-lookup"><span data-stu-id="76331-363">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="76331-364">Wenn eine Tabelle mehr als ein untergeordnetes Element verfügt, wird die Syntax lautet: `Child(RelationName)`.</span><span class="sxs-lookup"><span data-stu-id="76331-364">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="76331-365">Angenommen, eine Tabelle verfügt über zwei untergeordnete-Tabellen, die mit dem Namen `Customers` und `Orders`, und die <xref:System.Data.DataRelation> Objekt mit dem Namen `Customers2Orders`, der Verweis würde wie folgt lauten:</span><span class="sxs-lookup"><span data-stu-id="76331-365">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="76331-366">AVG(Child(Customers2Orders). Menge)</span><span class="sxs-lookup"><span data-stu-id="76331-366">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="76331-367">Aggregate</span><span class="sxs-lookup"><span data-stu-id="76331-367">Aggregates</span></span>  
 <span data-ttu-id="76331-368">Die folgenden aggregierten Typen werden unterstützt:</span><span class="sxs-lookup"><span data-stu-id="76331-368">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="76331-369">SUM (Summe)</span><span class="sxs-lookup"><span data-stu-id="76331-369">Sum (Sum)</span></span>  
  
 <span data-ttu-id="76331-370">Mittelwert (Durchschnitt)</span><span class="sxs-lookup"><span data-stu-id="76331-370">Avg (Average)</span></span>  
  
 <span data-ttu-id="76331-371">Minimale (Minimum)</span><span class="sxs-lookup"><span data-stu-id="76331-371">Min (Minimum)</span></span>  
  
 <span data-ttu-id="76331-372">Max (maximal)</span><span class="sxs-lookup"><span data-stu-id="76331-372">Max (Maximum)</span></span>  
  
 <span data-ttu-id="76331-373">Count (Anzahl)</span><span class="sxs-lookup"><span data-stu-id="76331-373">Count (Count)</span></span>  
  
 <span data-ttu-id="76331-374">StDev (statistische Standardabweichung)</span><span class="sxs-lookup"><span data-stu-id="76331-374">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="76331-375">Var (statistische Varianz).</span><span class="sxs-lookup"><span data-stu-id="76331-375">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="76331-376">Beziehungen sind normalerweise Aggregate ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="76331-376">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="76331-377">Erstellen Sie einen Aggregatausdruck, indem Sie die zuvor aufgelisteten Funktionen und eine untergeordnete Spalte als finden Sie unter Übergeordnet/Untergeordnet-Beziehung verweisen, die vorher besprochen wurde.</span><span class="sxs-lookup"><span data-stu-id="76331-377">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="76331-378">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="76331-378">For example:</span></span>  
  
 <span data-ttu-id="76331-379">AVG(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="76331-379">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="76331-380">AVG(Child(Orders2Details). Preis)</span><span class="sxs-lookup"><span data-stu-id="76331-380">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="76331-381">Ein Aggregat kann auch für eine einzelne Tabelle ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="76331-381">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="76331-382">Beispielsweise erstellen Sie eine Zusammenfassung der Zahlen in einer Spalte namens "Price":</span><span class="sxs-lookup"><span data-stu-id="76331-382">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="76331-383">Sum(Price)</span><span class="sxs-lookup"><span data-stu-id="76331-383">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76331-384">Wenn Sie eine einzelne Tabelle verwenden, um ein Aggregat erstellen, wäre es keine Group by-Funktionen.</span><span class="sxs-lookup"><span data-stu-id="76331-384">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="76331-385">Stattdessen würden alle Zeilen der gleiche Wert in der Spalte angezeigt.</span><span class="sxs-lookup"><span data-stu-id="76331-385">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="76331-386">Wenn eine Tabelle keine Zeilen enthält, gibt die Aggregatfunktionen `null`.</span><span class="sxs-lookup"><span data-stu-id="76331-386">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="76331-387">Datentypen können immer ermittelt werden die <xref:System.Data.DataColumn.DataType%2A> Eigenschaft einer Spalte.</span><span class="sxs-lookup"><span data-stu-id="76331-387">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="76331-388">Sie können auch mithilfe der Convert-Funktion, die im folgenden Abschnitt gezeigt Datentypen konvertieren.</span><span class="sxs-lookup"><span data-stu-id="76331-388">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="76331-389">Ein Aggregat kann nur auf eine einzelne Spalte angewendet werden und keine anderen Ausdrücken das Aggregat verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="76331-389">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="76331-390">Funktionen</span><span class="sxs-lookup"><span data-stu-id="76331-390">Functions</span></span>  
 <span data-ttu-id="76331-391">Die folgenden Funktionen werden ebenfalls unterstützt:</span><span class="sxs-lookup"><span data-stu-id="76331-391">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="76331-392">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="76331-392">Description</span></span>|<span data-ttu-id="76331-393">Konvertiert einen bestimmten Ausdruck in einen angegebenen .NET Framework-Typ.</span><span class="sxs-lookup"><span data-stu-id="76331-393">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="76331-394">Syntax</span><span class="sxs-lookup"><span data-stu-id="76331-394">Syntax</span></span>|<span data-ttu-id="76331-395">Konvertieren (`expression`, `type`)</span><span class="sxs-lookup"><span data-stu-id="76331-395">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="76331-396">Argumente</span><span class="sxs-lookup"><span data-stu-id="76331-396">Arguments</span></span>|<span data-ttu-id="76331-397">`expression` – Die zu konvertierende Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="76331-397">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="76331-398">`type` – Die .NET Framework-Typ, den der Wert konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="76331-398">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="76331-399">Beispiel: myDataColumn.Expression="Convert (gesamt,"System. Int32")"</span><span class="sxs-lookup"><span data-stu-id="76331-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="76331-400">Alle Konvertierungen, sich mit den folgenden Ausnahmen gelten: `Boolean` umgewandelt werden kann, in und aus `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` und sich selbst nur.</span><span class="sxs-lookup"><span data-stu-id="76331-400">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="76331-401">`Char` umgewandelt werden kann, in und aus `Int32`, `UInt32`, `String`, und sich selbst nur.</span><span class="sxs-lookup"><span data-stu-id="76331-401">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="76331-402">`DateTime` umgewandelt werden kann, in und aus `String` und sich selbst nur.</span><span class="sxs-lookup"><span data-stu-id="76331-402">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="76331-403">`TimeSpan` umgewandelt werden kann, in und aus `String` und sich selbst nur.</span><span class="sxs-lookup"><span data-stu-id="76331-403">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="76331-404">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="76331-404">Description</span></span>|<span data-ttu-id="76331-405">Ruft die Länge einer Zeichenfolge ab</span><span class="sxs-lookup"><span data-stu-id="76331-405">Gets the length of a string</span></span>|  
|<span data-ttu-id="76331-406">Syntax</span><span class="sxs-lookup"><span data-stu-id="76331-406">Syntax</span></span>|<span data-ttu-id="76331-407">LEN (`expression`)</span><span class="sxs-lookup"><span data-stu-id="76331-407">LEN(`expression`)</span></span>|  
|<span data-ttu-id="76331-408">Argumente</span><span class="sxs-lookup"><span data-stu-id="76331-408">Arguments</span></span>|<span data-ttu-id="76331-409">`expression` --Die Zeichenfolge, die ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="76331-409">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="76331-410">Beispiel: Mydatacolumn.Expression="Len(ItemName)" "</span><span class="sxs-lookup"><span data-stu-id="76331-410">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="76331-411">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="76331-411">Description</span></span>|<span data-ttu-id="76331-412">Überprüfter Ausdruck oder einen Ersatzwert ein Ausdruck, und entweder gibt überprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="76331-412">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="76331-413">Syntax</span><span class="sxs-lookup"><span data-stu-id="76331-413">Syntax</span></span>|<span data-ttu-id="76331-414">ISNULL (`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="76331-414">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="76331-415">Argumente</span><span class="sxs-lookup"><span data-stu-id="76331-415">Arguments</span></span>|<span data-ttu-id="76331-416">`expression` – Der Ausdruck, um zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="76331-416">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="76331-417">`replacementvalue` – Wenn der Ausdruck ist `null`, `replacementvalue` zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="76331-417">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="76331-418">Beispiel: myDataColumn.Expression="IsNull (Preis, -1)"</span><span class="sxs-lookup"><span data-stu-id="76331-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="76331-419">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="76331-419">Description</span></span>|<span data-ttu-id="76331-420">Ruft ab einen von zwei Werten je nach Ergebnis ein logischer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="76331-420">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="76331-421">Syntax</span><span class="sxs-lookup"><span data-stu-id="76331-421">Syntax</span></span>|<span data-ttu-id="76331-422">IIF (`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="76331-422">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="76331-423">Argumente</span><span class="sxs-lookup"><span data-stu-id="76331-423">Arguments</span></span>|<span data-ttu-id="76331-424">`expr` – Der auszuwertende Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="76331-424">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="76331-425">`truepart` – Der zurückzugebende Wert, wenn der Ausdruck "true" ist.</span><span class="sxs-lookup"><span data-stu-id="76331-425">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="76331-426">`falsepart` – Der zurückzugebende Wert, wenn der Ausdruck "false" ist.</span><span class="sxs-lookup"><span data-stu-id="76331-426">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="76331-427">Beispiel: myDataColumn.Expression = "IIF (insgesamt > 1000, 'teuren',"Sehr geehrte/r")</span><span class="sxs-lookup"><span data-stu-id="76331-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="76331-428">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="76331-428">Description</span></span>|<span data-ttu-id="76331-429">Entfernt alle führenden und nachfolgenden leere Zeichen wie \r "," \n "," \t "," "</span><span class="sxs-lookup"><span data-stu-id="76331-429">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="76331-430">Syntax</span><span class="sxs-lookup"><span data-stu-id="76331-430">Syntax</span></span>|<span data-ttu-id="76331-431">TRIM (`expression`)</span><span class="sxs-lookup"><span data-stu-id="76331-431">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="76331-432">Argumente</span><span class="sxs-lookup"><span data-stu-id="76331-432">Arguments</span></span>|<span data-ttu-id="76331-433">`expression` – Der Ausdruck entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="76331-433">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="76331-434">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="76331-434">Description</span></span>|<span data-ttu-id="76331-435">Ruft eine untergeordnete Zeichenfolge mit einer angegebenen Länge, beginnend an einem angegebenen Punkt in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="76331-435">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="76331-436">Syntax</span><span class="sxs-lookup"><span data-stu-id="76331-436">Syntax</span></span>|<span data-ttu-id="76331-437">SUBSTRING (`expression`, `start`, `length`)</span><span class="sxs-lookup"><span data-stu-id="76331-437">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="76331-438">Argumente</span><span class="sxs-lookup"><span data-stu-id="76331-438">Arguments</span></span>|<span data-ttu-id="76331-439">`expression` – Die Quellzeichenfolge nach der Teilzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="76331-439">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="76331-440">`start` – Eine ganze Zahl, der angibt, in dem die Teilzeichenfolge beginnt.</span><span class="sxs-lookup"><span data-stu-id="76331-440">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="76331-441">`length` – Ganze Zahl, die Länge der Teilzeichenfolge angibt.</span><span class="sxs-lookup"><span data-stu-id="76331-441">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="76331-442">Beispiel: myDataColumn.Expression = "SUBSTRING (Telefon, 7, 8)"</span><span class="sxs-lookup"><span data-stu-id="76331-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="76331-443">Sie können Zurücksetzen der <xref:System.Data.DataColumn.Expression%2A> Eigenschaft einen null-Wert oder eine leere Zeichenfolge zuweisen.</span><span class="sxs-lookup"><span data-stu-id="76331-443">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="76331-444">Wenn auf der Expression-Spalte ein Standardwert festgelegt ist, werden alle bereits ausgefüllte Zeilen zugewiesen standardmäßig ist der Wert nach der <xref:System.Data.DataColumn.Expression%2A> -Eigenschaft zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="76331-444">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-445">Das folgende Beispiel erstellt drei Spalten in einer <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="76331-445">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="76331-446">Die zweite und dritte Spalte enthalten Ausdrücke. die zweite berechnet unter Verwendung eines Variable Steuersatzes, und die dritte rückgabearray das Ergebnis der Berechnung auf den Wert der ersten Spalte.</span><span class="sxs-lookup"><span data-stu-id="76331-446">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="76331-447">Die daraus resultierende Tabelle wird angezeigt, einem <xref:System.Windows.Forms.DataGrid> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="76331-447">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76331-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="76331-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="76331-450">When you are using the CONVERT function, the requested cast is not possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-450">When you are using the CONVERT function, the requested cast is not possible.</span>
          </span>
          <span data-ttu-id="76331-451">See the Conversion function in the following section for detailed information about possible casts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-451">See the Conversion function in the following section for detailed information about possible casts.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="76331-452">When you use the SUBSTRING function, the start argument is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-452">When you use the SUBSTRING function, the start argument is out of range.</span>
          </span>
          <span data-ttu-id="76331-453">-Or-  When you use the SUBSTRING function, the length argument is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-453">-Or-  When you use the SUBSTRING function, the length argument is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="76331-454">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-454">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span>
          </span>
          <span data-ttu-id="76331-455">This includes expressions that evaluate to <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-455">This includes expressions that evaluate to <see cref="T:System.Char" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProperties : System.Data.PropertyCollection" Usage="System.Data.DataColumn.ExtendedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-456">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-456">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-457">Ein <see cref="T:System.Data.PropertyCollection" /> mit benutzerdefinierten Informationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-457">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-458">Die <xref:System.Data.DataColumn.ExtendedProperties%2A> Eigenschaft können Sie benutzerdefinierte Informationen, mit dem Objekt zu speichern.</span><span class="sxs-lookup"><span data-stu-id="76331-458">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="76331-459">Beispielsweise können Sie eine zu speichern, wenn die Daten aktualisiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="76331-459">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="76331-460">Erweiterte Eigenschaften muss vom Typ <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="76331-460">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="76331-461">Eigenschaften, die nicht vom Typ sind <xref:System.String> werden nicht beibehalten, wenn die <xref:System.Data.DataColumn> als XML geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="76331-461">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-462">Im folgenden Beispiel wird eine benutzerdefinierte Eigenschaft, die <xref:System.Data.PropertyCollection> zurückgegebenes der <xref:System.Data.DataColumn.ExtendedProperties%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76331-462">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="76331-463">Im zweite Beispiel ruft die benutzerdefinierte Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="76331-463">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Data.DataColumn.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-464">Gets or sets the maximum length of a text column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-464">Gets or sets the maximum length of a text column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-465">Die maximale Länge der Spalte in Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-465">The maximum length of the column in characters.</span>
          </span>
          <span data-ttu-id="76331-466">Wenn die Spalte keine maximale Länge verfügt, ist der Wert-1 (Standardwert).</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-466">If the column has no maximum length, the value is –1 (default).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-467">Die <xref:System.Data.DataColumn.MaxLength%2A> Eigenschaft ist für nicht-Text-Spalten ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="76331-467">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="76331-468">Ein <xref:System.ArgumentException> Ausnahme wird ausgelöst, wenn Sie zuweisen <xref:System.Data.DataColumn.MaxLength%2A> an eine Spalte keine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="76331-468">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Data.DataColumn.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-469">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-469">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-470">Der Namespace von <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-470">The namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-471">Die <xref:System.Data.DataColumn.Namespace%2A> Eigenschaft wird verwendet, wenn dokumentieren lesen und Schreiben von XML in eine <xref:System.Data.DataTable> in die <xref:System.Data.DataSet> mithilfe der <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, oder <xref:System.Data.DataSet.WriteXmlSchema%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="76331-471">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="76331-472">Der Namespace des XML-Dokument wird verwendet, um die XML-Attribute und Elemente, die beim Einlesen in den Bereich einer <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="76331-472">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="76331-473">Z. B. eine <xref:System.Data.DataSet> enthält ein Schema aus einem Dokument gelesen hat, die den Namespace "MyCompany", und es wird versucht, zum Lesen von Daten (mit der <xref:System.Data.DataSet.ReadXml%2A> Methode) aus einem Dokument mit dem Namespace "TheirCompany."</span><span class="sxs-lookup"><span data-stu-id="76331-473">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="76331-474">Alle Daten, die nicht zum vorhandenen Schema entsprechen, werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="76331-474">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76331-475">The namespace already has data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-475">The namespace already has data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanging : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="dataColumn.OnPropertyChanging pcevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="76331-476">Parameter reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-476">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76331-477">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-477">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="System.Data.DataColumn.Ordinal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-478">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-478">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-479">Die Position der Spalte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-479">The position of the column.</span>
          </span>
          <span data-ttu-id="76331-480">Ruft-1 ab, wenn die Spalte nicht Mitglied einer Sammlung ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-480">Gets -1 if the column is not a member of a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76331-481">Das folgende Beispiel gibt die Spalte, Ordinal, und Datentyp einer Spalte zurück.</span><span class="sxs-lookup"><span data-stu-id="76331-481">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Prefix : string with get, set" Usage="System.Data.DataColumn.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-482">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-482">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-483">Das XML-Präfix für die <see cref="T:System.Data.DataTable" /> Namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-483">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-484">Die <xref:System.Data.DataTable.Prefix%2A> wird verwendet, während des gesamten XML-Dokument zum Identifizieren von Elementen ab dem Namespace gehören eine <xref:System.Data.DataSet> Objekt (entsprechend der Festlegung durch die <xref:System.Data.DataSet.Namespace%2A> Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="76331-484">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RaisePropertyChanging : string -&gt; unit" Usage="dataColumn.RaisePropertyChanging name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="76331-485">Parameter reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-485">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76331-486">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-486">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Data.DataColumn.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-487">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-487">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-488">
            <see langword="true" /> Wenn die Spalte schreibgeschützt ist; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-488">
              <see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="76331-489">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-489">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76331-490">Das folgende Beispiel erstellt eine <xref:System.Data.DataColumn> und legt seine <xref:System.Data.DataColumn.ReadOnly%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="76331-490">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76331-491">The property is set to <see langword="false" /> on a computed column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-491">The property is set to <see langword="false" /> on a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberSignature Language="F#" Value="member this.SetOrdinal : int -&gt; unit" Usage="dataColumn.SetOrdinal ordinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="76331-492">The specified ordinal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-492">The specified ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="76331-493">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-493">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-494">Ändert die Ordnungszahl oder Position des der <xref:System.Data.DataColumn> in die angegebene Ordnungszahl oder Position.</span><span class="sxs-lookup"><span data-stu-id="76331-494">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="76331-495">Wenn Ordnungszahl ist kleiner als 0 oder größer als die Anzahl der vorhandenen Spalten – 1 (größer als die Ordnungszahl der letzten Spalte) eine ungültige <xref:System.ArgumentException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76331-495">If ordinal is less than 0 or greater than the existing number of columns – 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="76331-496">Wenn Sie die Ordnungszahl für eine Spalte ändern, wird die Spalte in die neue Position in der Auflistung der Spalten verschoben.</span><span class="sxs-lookup"><span data-stu-id="76331-496">When you change a column’s ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="76331-497">Alle Spalten zwischen der Ordinalzahl frühere und neue werden neu nummeriert werden um für eine neue Spaltenordnungszahl anzupassen.</span><span class="sxs-lookup"><span data-stu-id="76331-497">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataColumn.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-498">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-498">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-499">Die <see cref="T:System.Data.DataTable" /> , die die <see cref="T:System.Data.DataColumn" /> gehört.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-499">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76331-500">Das folgende Beispiel gibt die übergeordnete Tabelle eine <xref:System.Data.DataColumn> über seine <xref:System.Data.DataColumn.Table%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76331-500">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="abstract member ToString : unit -&gt; string&#xA;override this.ToString : unit -&gt; string" Usage="dataColumn.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="76331-501">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-501">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="76331-502">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-502">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="76331-503">Im folgenden Beispiel wird die <xref:System.Data.DataColumn.ToString%2A> Eigenschaft, um die Standardzeichenfolge für jedes Element einer Auflistung von zurückzugeben <xref:System.Data.DataColumn> Objekte.</span><span class="sxs-lookup"><span data-stu-id="76331-503">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Unique : bool with get, set" Usage="System.Data.DataColumn.Unique" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="76331-504">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-504">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="76331-505">
            <see langword="true" /> Wenn der Wert eindeutig sein muss; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-505">
              <see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="76331-506">Die Standardeinstellung ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-506">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76331-507">Sobald diese Eigenschaft auf "true" von "false" geändert wird, wird eine unique-Einschränkung erstellt werden, für diese Spalte aus, um sicherzustellen, dass die Werte eindeutig sind.</span><span class="sxs-lookup"><span data-stu-id="76331-507">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76331-508">Das folgende Beispiel erstellt neue <xref:System.Data.DataColumn>, legt deren Eigenschaften fest und fügt es einer Tabelle spaltenauflistung hinzu.</span><span class="sxs-lookup"><span data-stu-id="76331-508">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="76331-509">The column is a calculated column.</span>
          <span class="sxs-lookup">
            <span data-stu-id="76331-509">The column is a calculated column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
      </Docs>
    </Member>
  </Members>
</Type>