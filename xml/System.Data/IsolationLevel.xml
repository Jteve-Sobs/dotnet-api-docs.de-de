<Type Name="IsolationLevel" FullName="System.Data.IsolationLevel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fd1598b6f019ec4266a4507137cb374b09d7767b" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33679391" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum IsolationLevel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed IsolationLevel extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.IsolationLevel" />
  <TypeSignature Language="VB.NET" Value="Public Enum IsolationLevel" />
  <TypeSignature Language="C++ CLI" Value="public enum class IsolationLevel" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="fef3e-101">Gibt das Sperrverhalten für Transaktionen für die Verbindung an.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fef3e-101">Specifies the transaction locking behavior for the connection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fef3e-102">Die <xref:System.Data.IsolationLevel> Werte werden durch einen .NET Framework-Datenanbieter verwendet, wenn eine Transaktion ausführen.</span><span class="sxs-lookup"><span data-stu-id="fef3e-102">The <xref:System.Data.IsolationLevel> values are used by a .NET Framework data provider when performing a transaction.</span></span>  
  
 <span data-ttu-id="fef3e-103">Die <xref:System.Data.IsolationLevel> bleibt wirksam, bis explizit geändert, aber es kann jedoch jederzeit geändert werden.</span><span class="sxs-lookup"><span data-stu-id="fef3e-103">The <xref:System.Data.IsolationLevel> remains in effect until explicitly changed, but it can be changed at any time.</span></span> <span data-ttu-id="fef3e-104">Der neue Wert wird zur Ausführungszeit nicht zur Analysezeit verwendet.</span><span class="sxs-lookup"><span data-stu-id="fef3e-104">The new value is used at execution time, not parse time.</span></span> <span data-ttu-id="fef3e-105">Wenn während einer Transaktion geändert wird, ist das erwartete Verhalten des Servers auf die neue Sperrebene für alle verbleibenden Anweisungen gelten.</span><span class="sxs-lookup"><span data-stu-id="fef3e-105">If changed during a transaction, the expected behavior of the server is to apply the new locking level to all statements remaining.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fef3e-106">Diese Anwendung veranschaulicht, wie <xref:System.Data.IsolationLevel> in <xref:System.Data.Common.DbTransaction>.</span><span class="sxs-lookup"><span data-stu-id="fef3e-106">This application demonstrates how to use <xref:System.Data.IsolationLevel> in <xref:System.Data.Common.DbTransaction>.</span></span> <span data-ttu-id="fef3e-107">Im Beispiel wird veranschaulicht, welche der folgenden Verhaltensweisen in den einzelnen Isolationsstufen zulässig sind:</span><span class="sxs-lookup"><span data-stu-id="fef3e-107">The sample will demonstrate which of the following behaviors are allowed in the different isolation levels:</span></span>  
  
-   <span data-ttu-id="fef3e-108">Dirty Reads.</span><span class="sxs-lookup"><span data-stu-id="fef3e-108">Dirty reads.</span></span>  
  
-   <span data-ttu-id="fef3e-109">Nicht wiederholbare Lesevorgänge.</span><span class="sxs-lookup"><span data-stu-id="fef3e-109">Non-repeatable reads.</span></span>  
  
-   <span data-ttu-id="fef3e-110">Phantome.</span><span class="sxs-lookup"><span data-stu-id="fef3e-110">Phantoms.</span></span>  
  
 <span data-ttu-id="fef3e-111">Diese Anwendung wird in den folgenden Isolationsstufen ausgeführt:</span><span class="sxs-lookup"><span data-stu-id="fef3e-111">This application will execute in the following isolation levels:</span></span>  
  
-   <span data-ttu-id="fef3e-112">ReadUncommitted</span><span class="sxs-lookup"><span data-stu-id="fef3e-112">ReadUncommitted</span></span>  
  
-   <span data-ttu-id="fef3e-113">ReadCommitted.</span><span class="sxs-lookup"><span data-stu-id="fef3e-113">ReadCommitted</span></span>  
  
-   <span data-ttu-id="fef3e-114">RepeatableRead</span><span class="sxs-lookup"><span data-stu-id="fef3e-114">RepeatableRead</span></span>  
  
-   <span data-ttu-id="fef3e-115">Serializable</span><span class="sxs-lookup"><span data-stu-id="fef3e-115">Serializable</span></span>  
  
-   <span data-ttu-id="fef3e-116">Momentaufnahme</span><span class="sxs-lookup"><span data-stu-id="fef3e-116">Snapshot</span></span>  
  
 <span data-ttu-id="fef3e-117">Die PhantomReadThreads-Klasse veranschaulicht, wenn die bestimmte Transaktion das Lesen durch Phantom Verhalten ermöglicht die.</span><span class="sxs-lookup"><span data-stu-id="fef3e-117">The PhantomReadThreads class demonstrates if the specific transaction allows the Phantom Read behavior.</span></span> <span data-ttu-id="fef3e-118">Wenn die Transaktion das Verhalten zulässt, können die Threads in der folgenden Reihenfolge ausgeführt werden:</span><span class="sxs-lookup"><span data-stu-id="fef3e-118">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="fef3e-119">Wählen Sie im ersten Thread der products(All).</span><span class="sxs-lookup"><span data-stu-id="fef3e-119">In first thread, select the products(All).</span></span>  
  
-   <span data-ttu-id="fef3e-120">Fügen Sie ein neues Produkt im zweiten Thread.</span><span class="sxs-lookup"><span data-stu-id="fef3e-120">In the second thread, insert a new product.</span></span>  
  
-   <span data-ttu-id="fef3e-121">Commit für die Transaktion im zweiten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-121">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="fef3e-122">Wählen Sie die Produkte erneut aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-122">Select the products again.</span></span>  
  
-   <span data-ttu-id="fef3e-123">Commit für die Transaktion im ersten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-123">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="fef3e-124">Wenn die Transaktion das Verhalten zulässt, werden die zwei Select-Vorgänge die unterschiedliche Ergebnisse erhalten.</span><span class="sxs-lookup"><span data-stu-id="fef3e-124">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="fef3e-125">Die NonrepeatableReadThreads-Klasse veranschaulicht, wenn die bestimmte Transaktion das Verhalten nicht Wiederholbarer Lesevorgang zulässt.</span><span class="sxs-lookup"><span data-stu-id="fef3e-125">The NonrepeatableReadThreads class demonstrates if the specific transaction allows the Nonrepeatable Read behavior.</span></span> <span data-ttu-id="fef3e-126">Wenn die Transaktion das Verhalten zulässt, können die Threads in der folgenden Reihenfolge ausgeführt werden:</span><span class="sxs-lookup"><span data-stu-id="fef3e-126">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="fef3e-127">Wählen Sie im ersten Thread der product(ProductId=1).</span><span class="sxs-lookup"><span data-stu-id="fef3e-127">In first thread, select the product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="fef3e-128">Aktualisieren Sie in der zweiten Thread die value(ProductId=1) Menge.</span><span class="sxs-lookup"><span data-stu-id="fef3e-128">In the second thread, update the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="fef3e-129">Commit für die Transaktion im zweiten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-129">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="fef3e-130">Wählen Sie das Produkt erneut ein.</span><span class="sxs-lookup"><span data-stu-id="fef3e-130">Select the product again.</span></span>  
  
-   <span data-ttu-id="fef3e-131">Commit für die Transaktion im ersten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-131">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="fef3e-132">Wenn die Transaktion das Verhalten zulässt, werden die zwei Select-Vorgänge die unterschiedliche Ergebnisse erhalten.</span><span class="sxs-lookup"><span data-stu-id="fef3e-132">If the transaction allows the behavior, the two Select operations will get the different results.</span></span>  
  
 <span data-ttu-id="fef3e-133">Die Klasse ExchangeValuesThreads zeigt den Unterschied zwischen der Transaktion Serializable und Momentaufnahme.</span><span class="sxs-lookup"><span data-stu-id="fef3e-133">The ExchangeValuesThreads class demonstrates the difference between the Serializable and Snapshot transaction.</span></span> <span data-ttu-id="fef3e-134">Für die serialisierbaren Transaktion können Threads in der folgenden Reihenfolge ausgeführt werden:</span><span class="sxs-lookup"><span data-stu-id="fef3e-134">For the Serializable transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="fef3e-135">Erhalten Sie im ersten Thread des Preis der product(ProductId=2) und Speicher in der Variablen ein.</span><span class="sxs-lookup"><span data-stu-id="fef3e-135">In first thread, get the Price of product(ProductId=2) and store in the variable.</span></span>  
  
-   <span data-ttu-id="fef3e-136">Im ersten Thread der Preis product(ProductId=1) mit dem Preis von product(ProductId=2) aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="fef3e-136">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="fef3e-137">Commit für die Transaktion im ersten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-137">Commit the transaction in first thread.</span></span>  
  
-   <span data-ttu-id="fef3e-138">Erhalten Sie im zweiten Thread des Preis der product(ProductId=1) und Speicher in der Variablen ein.</span><span class="sxs-lookup"><span data-stu-id="fef3e-138">In second thread, get the Price of product(ProductId=1) and store in the variable.</span></span>  
  
-   <span data-ttu-id="fef3e-139">Im zweiten Thread der Preis product(ProductId=2) mit dem Preis von product(ProductId=1) aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="fef3e-139">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="fef3e-140">Commit für die Transaktion im zweiten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-140">Commit the transaction in second thread.</span></span>  
  
 <span data-ttu-id="fef3e-141">Jetzt die Werte des Preises ("ProductID" = 1 und "ProductID" = 2) werden als identisch mit der ursprünglichen Preis Product(ProductId=2).</span><span class="sxs-lookup"><span data-stu-id="fef3e-141">Now the values of the Price(ProductId=1 and ProductId=2) are as same as the original Price of Product(ProductId=2).</span></span>  
  
 <span data-ttu-id="fef3e-142">Für die Snapshot-Transaktion werden Threads in der folgenden Reihenfolge ausgeführt werden:</span><span class="sxs-lookup"><span data-stu-id="fef3e-142">For the Snapshot transaction, threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="fef3e-143">Erhalten Sie im ersten Thread des Preis der product(ProductId=2) und Speicher in der Variablen.</span><span class="sxs-lookup"><span data-stu-id="fef3e-143">In first thread, get the Price of product(ProductId=2) and store in the variable;</span></span>  
  
-   <span data-ttu-id="fef3e-144">Im ersten Thread der Preis product(ProductId=1) mit dem Preis von product(ProductId=2) aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="fef3e-144">In first thread, update the Price of product(ProductId=1) with the price of product(ProductId=2).</span></span>  
  
-   <span data-ttu-id="fef3e-145">Im zweiten Thread den Preis product(ProductId=1) aus der Momentaufnahme abrufen und in der Variablen zu speichern.</span><span class="sxs-lookup"><span data-stu-id="fef3e-145">In second thread, get the Price of product(ProductId=1) from the snapshot and store in the variable.</span></span>  
  
-   <span data-ttu-id="fef3e-146">Im zweiten Thread der Preis product(ProductId=2) mit dem Preis von product(ProductId=1) aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="fef3e-146">In second thread, update the Price of product(ProductId=2) with the price of product(ProductId=1).</span></span>  
  
-   <span data-ttu-id="fef3e-147">Commit für die Transaktion im zweiten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-147">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="fef3e-148">Commit für die Transaktion im ersten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-148">Commit the transaction in first thread.</span></span>  
  
 <span data-ttu-id="fef3e-149">Jetzt exchange den Preis eines Produkts ("ProductID" = 1 und "ProductID" = 2).</span><span class="sxs-lookup"><span data-stu-id="fef3e-149">Now exchange the Price of products(ProductId=1 and ProductId=2).</span></span>  
  
 <span data-ttu-id="fef3e-150">DirtyReadThreads-Klasse veranschaulicht, wenn die bestimmte Transaktion das Verhalten "unsauberen" Lesevorgang zulässt.</span><span class="sxs-lookup"><span data-stu-id="fef3e-150">The DirtyReadThreads class demonstrates if the specific transaction allows the Dirty Read behavior.</span></span> <span data-ttu-id="fef3e-151">Wenn die Transaktion das Verhalten zulässt, können die Threads in der folgenden Reihenfolge ausgeführt werden:</span><span class="sxs-lookup"><span data-stu-id="fef3e-151">If the transaction allows the behavior, the threads will operate in the following order:</span></span>  
  
-   <span data-ttu-id="fef3e-152">Im ersten Thread eine Transaktion gestartet, und fügen Sie die Menge value(ProductId=1) hinzu.</span><span class="sxs-lookup"><span data-stu-id="fef3e-152">In first thread, begin a transaction and add the Quantity value(ProductId=1).</span></span>  
  
-   <span data-ttu-id="fef3e-153">Gelesen Sie im zweiten Thread den Wert "Quantity", und fügen Sie den Wert erneut aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-153">In the second thread, read the Quantity value and add the value again.</span></span>  
  
-   <span data-ttu-id="fef3e-154">Commit für die Transaktion im zweiten Thread aus.</span><span class="sxs-lookup"><span data-stu-id="fef3e-154">Commit the transaction in second thread.</span></span>  
  
-   <span data-ttu-id="fef3e-155">Rollback der Transaktion im ersten Thread.</span><span class="sxs-lookup"><span data-stu-id="fef3e-155">Roll back the transaction in first thread.</span></span>  
  
 <span data-ttu-id="fef3e-156">Wenn die Transaktion das Verhalten zulässt, wird der Mengenwert zweimal hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="fef3e-156">If the transaction allows the behavior, the Quantity value will be added twice.</span></span>  
  
 <span data-ttu-id="fef3e-157">C# und Visual Basic-Projekte mit diesem Codebeispiel finden Sie in der [Developer Code Samples](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span><span class="sxs-lookup"><span data-stu-id="fef3e-157">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](https://code.msdn.microsoft.com/site/search?query=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Value=How%20to%20use%20IsolationLevel%20Enumeration%20in%20DbTransaction&f%5B0%5D.Type=SearchText&ac=4).</span></span>  
  
 [!code-csharp[system_data_IsolationLevel#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/system_data_isolationlevel/cs/source.cs#1)]
 [!code-vb[system_data_IsolationLevel#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/system_data_isolationlevel/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Chaos">
      <MemberSignature Language="C#" Value="Chaos" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Chaos = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Chaos" />
      <MemberSignature Language="VB.NET" Value="Chaos" />
      <MemberSignature Language="C++ CLI" Value="Chaos" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fef3e-158">Die ausstehenden Änderungen von höher isolierten Transaktionen können nicht überschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fef3e-158">The pending changes from more highly isolated transactions cannot be overwritten.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadCommitted">
      <MemberSignature Language="C#" Value="ReadCommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadCommitted = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadCommitted" />
      <MemberSignature Language="VB.NET" Value="ReadCommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadCommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fef3e-159">Beim Lesen der Daten werden gemeinsame Sperren verwendet, um das Lesen geänderter Daten zu verhindern. Die Daten können jedoch vor dem Ende der Transaktion geändert werden, was zu nicht wiederholbaren Lesevorgängen oder Phantomdaten führen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fef3e-159">Shared locks are held while the data is being read to avoid dirty reads, but the data can be changed before the end of the transaction, resulting in non-repeatable reads or phantom data.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ReadUncommitted">
      <MemberSignature Language="C#" Value="ReadUncommitted" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel ReadUncommitted = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.ReadUncommitted" />
      <MemberSignature Language="VB.NET" Value="ReadUncommitted" />
      <MemberSignature Language="C++ CLI" Value="ReadUncommitted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fef3e-160">Ein Lesen geänderter Daten ist möglich. Das heißt, dass keine gemeinsamen Sperren ausgegeben und keine exklusiven Sperren berücksichtigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fef3e-160">A dirty read is possible, meaning that no shared locks are issued and no exclusive locks are honored.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="RepeatableRead">
      <MemberSignature Language="C#" Value="RepeatableRead" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel RepeatableRead = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.RepeatableRead" />
      <MemberSignature Language="VB.NET" Value="RepeatableRead" />
      <MemberSignature Language="C++ CLI" Value="RepeatableRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fef3e-161">Die Sperren gelten für alle in einer Abfrage verwendeten Daten, damit die Daten nicht durch andere Benutzer aktualisiert werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fef3e-161">Locks are placed on all data that is used in a query, preventing other users from updating the data.</span>
          </span>
          <span data-ttu-id="fef3e-162">Nicht wiederholbare Lesevorgänge werden dadurch verhindert, es sind jedoch weiterhin Phantomzeilen möglich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fef3e-162">Prevents non-repeatable reads but phantom rows are still possible.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Serializable">
      <MemberSignature Language="C#" Value="Serializable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Serializable = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Serializable" />
      <MemberSignature Language="VB.NET" Value="Serializable" />
      <MemberSignature Language="C++ CLI" Value="Serializable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fef3e-163">Eine Bereichssperre wird für die <see cref="T:System.Data.DataSet" />-Klasse festgelegt. Dadurch wird verhindert, dass andere Benutzer vor dem Abschluss der Transaktion Zeilen in das Dataset einfügen oder darin aktualisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fef3e-163">A range lock is placed on the <see cref="T:System.Data.DataSet" />, preventing other users from updating or inserting rows into the dataset until the transaction is complete.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Snapshot">
      <MemberSignature Language="C#" Value="Snapshot" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Snapshot = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Snapshot" />
      <MemberSignature Language="VB.NET" Value="Snapshot" />
      <MemberSignature Language="C++ CLI" Value="Snapshot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fef3e-164">Reduziert das Blockieren durch Speichern einer Version von Daten, die von einer Anwendung gelesen werden können, während sie von einer anderen Anwendung geändert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fef3e-164">Reduces blocking by storing a version of data that one application can read while another is modifying the same data.</span>
          </span>
          <span data-ttu-id="fef3e-165">Gibt an, dass Sie von einer Transaktion aus keine Änderungen sehen können, die in anderen Transaktionen vorgenommen wurden, auch wenn Sie diese erneut abfragen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fef3e-165">Indicates that from one transaction you cannot see changes made in other transactions, even if you requery.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Unspecified">
      <MemberSignature Language="C#" Value="Unspecified" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.IsolationLevel Unspecified = int32(-1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.IsolationLevel.Unspecified" />
      <MemberSignature Language="VB.NET" Value="Unspecified" />
      <MemberSignature Language="C++ CLI" Value="Unspecified" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IsolationLevel</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="fef3e-166">Es wird nicht der angegebene Isolationsgrad verwendet, der Grad kann jedoch nicht bestimmt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fef3e-166">A different isolation level than the one specified is being used, but the level cannot be determined.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fef3e-167">Bei Verwendung <xref:System.Data.Odbc.OdbcTransaction>, sofern Sie nicht festlegen <xref:System.Data.IsolationLevel> oder <xref:System.Data.IsolationLevel> zu `Unspecified`, die Transaktion ausführt, gemäß der Isolationsstufe, die vom Treiber bestimmt wird, der verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fef3e-167">When using <xref:System.Data.Odbc.OdbcTransaction>, if you do not set <xref:System.Data.IsolationLevel> or you set <xref:System.Data.IsolationLevel> to `Unspecified`, the transaction executes according to the isolation level that is determined by the driver that is being used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>