<Type Name="DataTable" FullName="System.Data.DataTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ca059a55e7219b43068a0a701adfb187f239dc3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataTable : System.ComponentModel.MarshalByValueComponent, System.ComponentModel.IListSource, System.ComponentModel.ISupportInitialize, System.ComponentModel.ISupportInitializeNotification, System.Runtime.Serialization.ISerializable, System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit DataTable extends System.ComponentModel.MarshalByValueComponent implements class System.ComponentModel.IListSource, class System.ComponentModel.ISupportInitialize, class System.ComponentModel.ISupportInitializeNotification, class System.Runtime.Serialization.ISerializable, class System.Xml.Serialization.IXmlSerializable" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTable" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTable&#xA;Inherits MarshalByValueComponent&#xA;Implements IListSource, ISerializable, ISupportInitialize, ISupportInitializeNotification, IXmlSerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTable : System::ComponentModel::MarshalByValueComponent, System::ComponentModel::IListSource, System::ComponentModel::ISupportInitialize, System::ComponentModel::ISupportInitializeNotification, System::Runtime::Serialization::ISerializable, System::Xml::Serialization::IXmlSerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitializeNotification</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.Serialization.IXmlSerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("RowChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TableName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataTableEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlSchemaProvider("GetDataTableSchema")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="09387-101">Stellt eine Tabelle mit Daten im Arbeitsspeicher dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="09387-101">Represents one table of in-memory data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-102">Die <xref:System.Data.DataTable> ist ein zentrale Objekt in der Bibliothek für ADO.NET.</span><span class="sxs-lookup"><span data-stu-id="09387-102">The <xref:System.Data.DataTable> is a central object in the ADO.NET library.</span></span> <span data-ttu-id="09387-103">Von anderen Objekten verwendet werden, die <xref:System.Data.DataTable> enthalten die <xref:System.Data.DataSet> und <xref:System.Data.DataView>.</span><span class="sxs-lookup"><span data-stu-id="09387-103">Other objects that use the <xref:System.Data.DataTable> include the <xref:System.Data.DataSet> and the <xref:System.Data.DataView>.</span></span>  
  
 <span data-ttu-id="09387-104">Beim Zugriff auf <xref:System.Data.DataTable> Objekte, beachten Sie, dass sie bedingt Groß-/Kleinschreibung unterschieden werden.</span><span class="sxs-lookup"><span data-stu-id="09387-104">When accessing <xref:System.Data.DataTable> objects, note that they are conditionally case sensitive.</span></span> <span data-ttu-id="09387-105">Angenommen, eine <xref:System.Data.DataTable> "Mydatatable" benannt ist und eine andere "Mydatatable" benannt ist, wird in eine Zeichenfolge, die zur Suche nach einer der Tabellen die Groß-/ Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="09387-105">For example, if one <xref:System.Data.DataTable> is named "mydatatable" and another is named "Mydatatable", a string used to search for one of the tables is regarded as case sensitive.</span></span> <span data-ttu-id="09387-106">Allerdings wird Wenn "Mydatatable" vorhanden ist, und "Mydatatable", nicht aber, die zu suchende Zeichenfolge wie Groß-/Kleinschreibung beachten betrachtet.</span><span class="sxs-lookup"><span data-stu-id="09387-106">However, if "mydatatable" exists and "Mydatatable" does not, the search string is regarded as case insensitive.</span></span> <span data-ttu-id="09387-107">Ein <xref:System.Data.DataSet> können enthalten zwei <xref:System.Data.DataTable> Objekte, die dieselbe <xref:System.Data.DataTable.TableName%2A> Eigenschaftswert, aber unterschiedliche <xref:System.Data.DataTable.Namespace%2A> Eigenschaftswerte.</span><span class="sxs-lookup"><span data-stu-id="09387-107">A <xref:System.Data.DataSet> can contain two <xref:System.Data.DataTable> objects that have the same <xref:System.Data.DataTable.TableName%2A> property value but different <xref:System.Data.DataTable.Namespace%2A> property values.</span></span> <span data-ttu-id="09387-108">Weitere Informationen zum Arbeiten mit <xref:System.Data.DataTable> anzuzeigen, [Erstellen einer "DataTable"](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="09387-108">For more information about working with <xref:System.Data.DataTable> objects, see [Creating a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-a-datatable.md).</span></span>  
  
 <span data-ttu-id="09387-109">Beim Erstellen einer <xref:System.Data.DataTable> programmgesteuert, müssen Sie zuerst das Schema definieren, durch Hinzufügen von <xref:System.Data.DataColumn> Datenbankobjekte in der <xref:System.Data.DataColumnCollection> (erfolgt über die <xref:System.Data.DataTable.Columns%2A> Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="09387-109">If you are creating a <xref:System.Data.DataTable> programmatically, you must first define its schema by adding <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection> (accessed through the <xref:System.Data.DataTable.Columns%2A> property).</span></span> <span data-ttu-id="09387-110">Weitere Informationen zum Hinzufügen von <xref:System.Data.DataColumn> anzuzeigen, [Hinzufügen von Spalten zu einer "DataTable"](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="09387-110">For more information about adding <xref:System.Data.DataColumn> objects, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="09387-111">Zum Hinzufügen von Zeilen zu einer <xref:System.Data.DataTable>, müssen Sie zunächst mithilfe der <xref:System.Data.DataTable.NewRow%2A> Methode, um ein neues zurückzugeben <xref:System.Data.DataRow> Objekt.</span><span class="sxs-lookup"><span data-stu-id="09387-111">To add rows to a <xref:System.Data.DataTable>, you must first use the <xref:System.Data.DataTable.NewRow%2A> method to return a new <xref:System.Data.DataRow> object.</span></span> <span data-ttu-id="09387-112">Die <xref:System.Data.DataTable.NewRow%2A> Methode gibt eine Zeile mit dem Schema der <xref:System.Data.DataTable>, wie sie von der Tabelle definiert ist <xref:System.Data.DataColumnCollection>.</span><span class="sxs-lookup"><span data-stu-id="09387-112">The <xref:System.Data.DataTable.NewRow%2A> method returns a row with the schema of the <xref:System.Data.DataTable>, as it is defined by the table's <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="09387-113">Die maximale Anzahl von Zeilen, die eine <xref:System.Data.DataTable> können Speicher ist 16.777.216.</span><span class="sxs-lookup"><span data-stu-id="09387-113">The maximum number of rows that a <xref:System.Data.DataTable> can store is 16,777,216.</span></span> <span data-ttu-id="09387-114">Weitere Informationen finden Sie unter [Hinzufügen von Daten zu einer "DataTable"](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="09387-114">For more information, see [Adding Data to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="09387-115">Die <xref:System.Data.DataTable> enthält auch eine Auflistung von <xref:System.Data.Constraint> Objekte, die verwendet werden können, um die Integrität der Daten sicherzustellen.</span><span class="sxs-lookup"><span data-stu-id="09387-115">The <xref:System.Data.DataTable> also contains a collection of <xref:System.Data.Constraint> objects that can be used to ensure the integrity of the data.</span></span> <span data-ttu-id="09387-116">Weitere Informationen finden Sie unter [DataTable-Einschränkungen](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span><span class="sxs-lookup"><span data-stu-id="09387-116">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="09387-117">Es gibt viele <xref:System.Data.DataTable> Ereignisse, die verwendet werden können, um zu bestimmen, wann Änderungen an einer Tabelle vorgenommen werden.</span><span class="sxs-lookup"><span data-stu-id="09387-117">There are many <xref:System.Data.DataTable> events that can be used to determine when changes are made to a table.</span></span> <span data-ttu-id="09387-118">Dazu gehören <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting> und <xref:System.Data.DataTable.RowDeleted>.</span><span class="sxs-lookup"><span data-stu-id="09387-118">These include <xref:System.Data.DataTable.RowChanged>, <xref:System.Data.DataTable.RowChanging>, <xref:System.Data.DataTable.RowDeleting>, and <xref:System.Data.DataTable.RowDeleted>.</span></span> <span data-ttu-id="09387-119">Weitere Informationen zu den Ereignissen, die mit verwendet werden, kann eine <xref:System.Data.DataTable>, finden Sie unter [Behandeln von DataTable-Ereignissen](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="09387-119">For more information about the events that can be used with a <xref:System.Data.DataTable>, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
 <span data-ttu-id="09387-120">Wenn eine Instanz von <xref:System.Data.DataTable> wird erstellt, einige Eigenschaften werden von der Lese-/Schreibzugriff auf Ausgangswerte festgelegt.</span><span class="sxs-lookup"><span data-stu-id="09387-120">When an instance of <xref:System.Data.DataTable> is created, some of the read/write properties are set to initial values.</span></span> <span data-ttu-id="09387-121">Eine Liste der folgenden Werte sind, finden Sie unter der <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> Thema Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="09387-121">For a list of these values, see the <xref:System.Data.DataTable.%23ctor%2A?displayProperty=nameWithType> constructor topic.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-122">Die <xref:System.Data.DataSet> und <xref:System.Data.DataTable> Objekte erben von <xref:System.ComponentModel.MarshalByValueComponent>, und unterstützt die <xref:System.Runtime.Serialization.ISerializable> Schnittstelle für das .NET Framework-Remoting.</span><span class="sxs-lookup"><span data-stu-id="09387-122">The <xref:System.Data.DataSet> and <xref:System.Data.DataTable> objects inherit from <xref:System.ComponentModel.MarshalByValueComponent>, and support the <xref:System.Runtime.Serialization.ISerializable> interface for .NET Framework remoting.</span></span> <span data-ttu-id="09387-123">Dies sind die einzigen ADO.NET-Objekte, die für .NET Framework Remoting verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="09387-123">These are the only ADO.NET objects that you can use for .NET Framework remoting.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-124">Das folgende Beispiel erstellt zwei <xref:System.Data.DataTable> Objekte und eine <xref:System.Data.DataRelation> -Objekt und fügt die neuen Objekte auf einer <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="09387-124">The following example creates two <xref:System.Data.DataTable> objects and one <xref:System.Data.DataRelation> object, and adds the new objects to a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="09387-125">Die Tabellen werden dann angezeigt, einem <xref:System.Windows.Forms.DataGridView> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="09387-125">The tables are then displayed in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable Example/VB/source.vb#1)]  
  
 <span data-ttu-id="09387-126">Dieses Beispiel veranschaulicht, wie eine "DataTable" manuell mit bestimmten Schemadefinitionen erstellen:</span><span class="sxs-lookup"><span data-stu-id="09387-126">This sample demonstrates how to create a DataTable manually with specific schema definitions:</span></span>  
  
-   <span data-ttu-id="09387-127">Erstellen Sie mehrere Datentabellen und definieren Sie die ursprünglichen Spalten.</span><span class="sxs-lookup"><span data-stu-id="09387-127">Create multiple DataTables and define the initial columns.</span></span>  
  
-   <span data-ttu-id="09387-128">Erstellen Sie die tabelleneinschränkungen.</span><span class="sxs-lookup"><span data-stu-id="09387-128">Create the table constraints.</span></span>  
  
-   <span data-ttu-id="09387-129">Fügen Sie die Werte, und zeigen Sie die Tabellen.</span><span class="sxs-lookup"><span data-stu-id="09387-129">Insert the values and display the tables.</span></span>  
  
-   <span data-ttu-id="09387-130">Erstellen Sie die Spalten für Ausdrücke, und zeigen Sie die Tabellen.</span><span class="sxs-lookup"><span data-stu-id="09387-130">Create the expression columns and display the tables.</span></span>  
  
 <span data-ttu-id="09387-131">C# und Visual Basic-Projekte mit diesem Codebeispiel finden Sie in der [Developer Code Samples](http://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span><span class="sxs-lookup"><span data-stu-id="09387-131">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](http://code.msdn.microsoft.com/How-to-create-DataTable-7abb4914).</span></span>  
  
 [!code-csharp[Classic WebData DataTable Example2#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/classic webdata datatable example2/cs/source.cs#1)]
 [!code-vb[Classic WebData DataTable Example2#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/classic webdata datatable example2/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="09387-132">Dieser Typ ist für schreibgeschützte Vorgänge mit mehreren Threads sicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="09387-132">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="09387-133">Sie müssen alle Schreibvorgänge synchronisieren.</span>
      <span class="sxs-lookup">
        <span data-stu-id="09387-133">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-134">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-134">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-135">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse ohne Argumente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-135">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with no arguments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-136">Der Konstruktor legt die Anfangswerte für alle Eigenschaften des der <xref:System.Data.DataTable> Objekt.</span><span class="sxs-lookup"><span data-stu-id="09387-136">The constructor sets initial values for all properties of the <xref:System.Data.DataTable> object.</span></span> <span data-ttu-id="09387-137">Die folgende Tabelle zeigt die Eigenschaften und ihre Standardwerte.</span><span class="sxs-lookup"><span data-stu-id="09387-137">The following table shows the properties and their default values.</span></span> <span data-ttu-id="09387-138">Wenn eine Instanz von <xref:System.Data.DataTable> erstellt wird, werden die folgenden Eigenschaften werden festgelegt, um die Anfangswerte Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="09387-138">When an instance of <xref:System.Data.DataTable> is created, the following read/write properties are set to initial values.</span></span>  
  
|<span data-ttu-id="09387-139">Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="09387-139">Property</span></span>|<span data-ttu-id="09387-140">Standardwert</span><span class="sxs-lookup"><span data-stu-id="09387-140">Default value</span></span>|  
|--------------|-------------------|  
|<span data-ttu-id="09387-141">**CaseSensitive**</span><span class="sxs-lookup"><span data-stu-id="09387-141">**CaseSensitive**</span></span>|<span data-ttu-id="09387-142">Identisch mit der übergeordneten <xref:System.Data.DataSet>, wenn es zu einem gehört.</span><span class="sxs-lookup"><span data-stu-id="09387-142">Same as the parent <xref:System.Data.DataSet>, if it belongs to one.</span></span> <span data-ttu-id="09387-143">Andernfalls `false`.</span><span class="sxs-lookup"><span data-stu-id="09387-143">Otherwise, `false`.</span></span>|  
|<span data-ttu-id="09387-144">**DisplayExpression**</span><span class="sxs-lookup"><span data-stu-id="09387-144">**DisplayExpression**</span></span>|<span data-ttu-id="09387-145">Leere Zeichenfolge ("")</span><span class="sxs-lookup"><span data-stu-id="09387-145">Empty string ("")</span></span>|  
|<span data-ttu-id="09387-146">**Locale**</span><span class="sxs-lookup"><span data-stu-id="09387-146">**Locale**</span></span>|<span data-ttu-id="09387-147">Wie das übergeordnete Element <xref:System.Data.DataSet> des Objekts <xref:System.Globalization.CultureInfo> (zurückgegebenes der <xref:System.Data.DataSet.Locale%2A> Eigenschaft), wenn kein übergeordnetes Element vorhanden ist, der Standardwert ist das aktuelle System <xref:System.Globalization.CultureInfo>.</span><span class="sxs-lookup"><span data-stu-id="09387-147">Same as the parent <xref:System.Data.DataSet> object's <xref:System.Globalization.CultureInfo> (returned by the <xref:System.Data.DataSet.Locale%2A> property); if no parent exists, the default is the current system <xref:System.Globalization.CultureInfo>.</span></span>|  
|<span data-ttu-id="09387-148">**MinimumCapacity**</span><span class="sxs-lookup"><span data-stu-id="09387-148">**MinimumCapacity**</span></span>|<span data-ttu-id="09387-149">50 Zeilen.</span><span class="sxs-lookup"><span data-stu-id="09387-149">50 rows.</span></span>|  
  
 <span data-ttu-id="09387-150">Sie können den Wert für alle diese Eigenschaften über einen separaten Aufruf der Eigenschaft ändern.</span><span class="sxs-lookup"><span data-stu-id="09387-150">You can change the value for any of these properties through a separate call to the property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-151">Das folgende Beispiel erstellt ein neues <xref:System.Data.DataTable> mit <xref:System.Data.DataColumn> und <xref:System.Data.DataRow>, und zeigt ihn in einem <xref:System.Windows.Forms.DataGridView> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="09387-151">The following example creates a new <xref:System.Data.DataTable> with <xref:System.Data.DataColumn> and <xref:System.Data.DataRow>, and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="09387-152">Der Name, der der Tabelle gegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-152">The name to give the table.</span>
          </span>
          <span data-ttu-id="09387-153">Wenn <c>tableName</c><see langword="null" /> oder eine leere Zeichenfolge ist, wird beim Hinzufügen zu <see cref="T:System.Data.DataTableCollection" /> ein Standardname vergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-153">If <c>tableName</c> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-154">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse mit dem angegebenen Tabellennamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-154">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the specified table name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="09387-155">Das folgende Beispiel erstellt eine <xref:System.Data.DataTable> und zeigt ihn in einem <xref:System.Windows.Forms.DataGridView> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="09387-155">The following example creates a <xref:System.Data.DataTable> and displays it in a <xref:System.Windows.Forms.DataGridView> control.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataTable1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataTable1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataTable (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataTable(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="09387-156">Die zum Serialisieren bzw. Deserialisieren eines Objekts benötigten Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-156">The data needed to serialize or deserialize an object.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="09387-157">Die Quelle und das Ziel eines angegebenen serialisierten Streams.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-157">The source and destination of a given serialized stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-158">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse mit der <see cref="T:System.Runtime.Serialization.SerializationInfo" /> und dem <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-158">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class with the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and the <see cref="T:System.Runtime.Serialization.StreamingContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-159">Diese Implementierung der <xref:System.Data.DataTable> Konstruktor ist erforderlich, damit <xref:System.Runtime.Serialization.ISerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-159">This implementation of the <xref:System.Data.DataTable> constructor is required for <xref:System.Runtime.Serialization.ISerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTable (string tableName, string tableNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string tableName, string tableNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tableName As String, tableNamespace As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTable(System::String ^ tableName, System::String ^ tableNamespace);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tableName" Type="System.String" />
        <Parameter Name="tableNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tableName">
          <span data-ttu-id="09387-160">Der Name, der der Tabelle gegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-160">The name to give the table.</span>
          </span>
          <span data-ttu-id="09387-161">Wenn <c>tableName</c><see langword="null" /> oder eine leere Zeichenfolge ist, wird beim Hinzufügen zu <see cref="T:System.Data.DataTableCollection" /> ein Standardname vergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-161">If <c>tableName</c> is <see langword="null" /> or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection" />.</span>
          </span>
        </param>
        <param name="tableNamespace">
          <span data-ttu-id="09387-162">Der Namespace für die XML-Darstellung der in der <see langword="DataTable" /> gespeicherten Daten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-162">The namespace for the XML representation of the data stored in the <see langword="DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-163">Initialisiert eine neue Instanz der <see cref="T:System.Data.DataTable" />-Klasse mit dem angegebenen Tabellennamen und Namespace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-163">Initializes a new instance of the <see cref="T:System.Data.DataTable" /> class using the specified table name and namespace.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-164">Übernimmt alle Änderungen, die an dieser Tabelle seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-164">Commits all the changes made to this table since the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-165">Wenn <xref:System.Data.DataTable.AcceptChanges%2A> aufgerufen wird, eine <xref:System.Data.DataRow> Objekt immer noch im Bearbeitungsmodus Bearbeitungsvorgänge erfolgreich beendet.</span><span class="sxs-lookup"><span data-stu-id="09387-165">When <xref:System.Data.DataTable.AcceptChanges%2A> is called, any <xref:System.Data.DataRow> object still in edit mode successfully ends its edits.</span></span> <span data-ttu-id="09387-166">Die <xref:System.Data.DataRowState> ändert sich ebenfalls: alle `Added` und `Modified` Zeilen werden `Unchanged`, und `Deleted` Zeilen entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-166">The <xref:System.Data.DataRowState> also changes: all `Added` and `Modified` rows become `Unchanged`, and `Deleted` rows are removed.</span></span>  
  
 <span data-ttu-id="09387-167">Die <xref:System.Data.DataTable.AcceptChanges%2A> Methode in der Regel aufgerufen wird eine <xref:System.Data.DataTable> Sie versucht haben, aktualisieren Sie die <xref:System.Data.DataSet> mithilfe der <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-167">The <xref:System.Data.DataTable.AcceptChanges%2A> method is generally called on a <xref:System.Data.DataTable> after you attempt to update the <xref:System.Data.DataSet> using the <xref:System.Data.Common.DbDataAdapter.Update%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-168">Das folgende Beispiel testet jede Tabelle auf Fehler.</span><span class="sxs-lookup"><span data-stu-id="09387-168">The following example tests each table for errors.</span></span> <span data-ttu-id="09387-169">Wenn die Tabelle Fehler abgeglichen werden können (durch Übergabe an eine nicht definierte Funktion), <xref:System.Data.DataTable.AcceptChanges%2A> aufgerufen wurde, andernfalls <xref:System.Data.DataTable.RejectChanges%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="09387-169">If the table's errors can be reconciled (by passing it to an undefined function), <xref:System.Data.DataTable.AcceptChanges%2A> is called; otherwise, <xref:System.Data.DataTable.RejectChanges%2A> is called.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-170">Beginnt die Initialisierung einer <see cref="T:System.Data.DataTable" />, die in einem Formular oder von einer anderen Komponente verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-170">Begins the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="09387-171">Die Initialisierung erfolgt zur Laufzeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-171">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-172">Die entwurfsumgebung für Visual Studio .NET verwendet diese Methode, um die Initialisierung einer Komponente zu starten, die in einem Formular oder von einer anderen Komponente verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="09387-172">The Visual Studio .NET design environment uses this method to start the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="09387-173">Die <xref:System.Data.DataTable.EndInit%2A> -Methode beendet die Initialisierung.</span><span class="sxs-lookup"><span data-stu-id="09387-173">The <xref:System.Data.DataTable.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="09387-174">Mithilfe der <xref:System.Data.DataTable.BeginInit%2A> und <xref:System.Data.DataTable.EndInit%2A> Methoden wird verhindert, dass das Steuerelement verwendet werden, bevor er vollständig initialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-174">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadData">
      <MemberSignature Language="C#" Value="public void BeginLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.BeginLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginLoadData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-175">Deaktiviert während des Ladens von Daten Benachrichtigungen, Indexverwaltung und Einschränkungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-175">Turns off notifications, index maintenance, and constraints while loading data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-176">Verwendung <xref:System.Data.DataTable.BeginLoadData%2A> in Verbindung mit <xref:System.Data.DataTable.LoadDataRow%2A> und <xref:System.Data.DataTable.EndLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-176">Use <xref:System.Data.DataTable.BeginLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaseSensitive">
      <MemberSignature Language="C#" Value="public bool CaseSensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CaseSensitive" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.CaseSensitive" />
      <MemberSignature Language="VB.NET" Value="Public Property CaseSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CaseSensitive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-177">Gibt an, ob Vergleiche zwischen Zeichenfolgen in der Tabelle unter Berücksichtigung der Groß- und Kleinschreibung ausgeführt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-177">Indicates whether string comparisons within the table are case-sensitive.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-178">
            <see langword="true" />, wenn beim Vergleich zwischen Groß- und Kleinschreibung unterschieden wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-178">
              <see langword="true" /> if the comparison is case-sensitive; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="09387-179">Der Standard ist auf die <see cref="T:System.Data.DataSet" />-Eigenschaft des übergeordneten <see cref="P:System.Data.DataSet.CaseSensitive" />-Objekts festgelegt oder auf <see langword="false" />, wenn die <see cref="T:System.Data.DataTable" /> unabhängig von einem <see cref="T:System.Data.DataSet" /> erstellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-179">The default is set to the parent <see cref="T:System.Data.DataSet" /> object's <see cref="P:System.Data.DataSet.CaseSensitive" /> property, or <see langword="false" /> if the <see cref="T:System.Data.DataTable" /> was created independently of a <see cref="T:System.Data.DataSet" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-180">Die <xref:System.Data.DataTable.CaseSensitive%2A> Eigenschaft wirkt sich auf Zeichenfolgenvergleichen in sortieren, suchen und filtern.</span><span class="sxs-lookup"><span data-stu-id="09387-180">The <xref:System.Data.DataTable.CaseSensitive%2A> property affects string comparisons in sorting, searching, and filtering.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-181">Im folgenden Beispiel wird die <xref:System.Data.DataTable.Select%2A> Methode zweimal auf eine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-181">The following example calls the <xref:System.Data.DataTable.Select%2A> method twice on a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-182">Erstmals ausführen, die <xref:System.Data.DataTable.CaseSensitive%2A> -Eigenschaftensatz auf `false`, wird die zweite, auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-182">The first time, the <xref:System.Data.DataTable.CaseSensitive%2A> property is set to `false`, the second, to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.CaseSensitive Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.CaseSensitive Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Select" />
      </Docs>
    </Member>
    <Member MemberName="ChildRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ChildRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ChildRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ChildRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ChildRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-183">Ruft die Auflistung untergeordneter Beziehungen für diese <see cref="T:System.Data.DataTable" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-183">Gets the collection of child relations for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-184">Eine <see cref="T:System.Data.DataRelationCollection" />, die die untergeordneten Beziehungen für die Tabelle enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-184">A <see cref="T:System.Data.DataRelationCollection" /> that contains the child relations for the table.</span>
          </span>
          <span data-ttu-id="09387-185">Wenn keine <see cref="T:System.Data.DataRelation" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-185">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-186">Ein <xref:System.Data.DataRelation> definiert die Beziehung zwischen zwei Tabellen.</span><span class="sxs-lookup"><span data-stu-id="09387-186">A <xref:System.Data.DataRelation> defines the relationship between two tables.</span></span> <span data-ttu-id="09387-187">In der Regel werden zwei Tabellen über ein einzelnes Feld verknüpft, die dieselben Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="09387-187">Typically, two tables are linked through a single field that contains the same data.</span></span> <span data-ttu-id="09387-188">Z. B. möglicherweise eine Tabelle, die Adressdaten enthält ein einzelnes Feld mit Codes, die Länder/Regionen darstellen.</span><span class="sxs-lookup"><span data-stu-id="09387-188">For example, a table which contains address data may have a single field containing codes that represent countries/regions.</span></span> <span data-ttu-id="09387-189">Eine zweite Tabelle, die Land/Region-Daten enthält, müssen ein einzelnes Feld mit dem Code, der das Land/Region identifiziert, und es ist dieser Code die in das entsprechende Feld in der ersten Tabelle eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="09387-189">A second table that contains country/region data will have a single field that contains the code that identifies the country/region, and it is this code which is inserted into the corresponding field in the first table.</span></span> <span data-ttu-id="09387-190">Ein <xref:System.Data.DataRelation>, dann enthält mindestens vier Arten von Informationen: (1) den Namen der ersten Tabelle, (2) den Spaltennamen in der ersten Tabelle, (3) den Namen der zweiten Tabelle und (4) der Spaltenname in der zweiten Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-190">A <xref:System.Data.DataRelation>, then, contains at least four pieces of information: (1) the name of the first table, (2) the column name in the first table, (3) the name of the second table, and (4) the column name in the second table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-191">Im folgenden Beispiel wird die <xref:System.Data.DataTable.ChildRelations%2A> -Eigenschaft zum Zurückgeben von jedem untergeordneten Element <xref:System.Data.DataRelation> in einem <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-191">The following example uses the <xref:System.Data.DataTable.ChildRelations%2A> property to return each child <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-192">Jede Beziehung wird dann verwendet, als Argument in der <xref:System.Data.DataRow.GetChildRows%2A> Methode der <xref:System.Data.DataRow> ein Array von Zeilen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="09387-192">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetChildRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="09387-193">Der Wert der einzelnen Spalten in der Zeile wird dann ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="09387-193">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ChildRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ChildRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ParentRelations" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-194">Löscht alle Daten aus der <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-194">Clears the <see cref="T:System.Data.DataTable" /> of all data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-195">Alle Zeilen in allen Tabellen werden entfernt.</span><span class="sxs-lookup"><span data-stu-id="09387-195">All rows in all tables are removed.</span></span> <span data-ttu-id="09387-196">Eine Ausnahme wird generiert, wenn die Tabelle erzwungene untergeordnete Beziehungen, die untergeordneten Zeilen verfügt verwaist werden würde.</span><span class="sxs-lookup"><span data-stu-id="09387-196">An exception is generated if the table has any enforced child relations that would cause child rows to be orphaned.</span></span>  
  
 <span data-ttu-id="09387-197">Wenn die <xref:System.Data.DataSet> gebunden ist ein <xref:System.Xml.XmlDataDocument>Aufrufen <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> oder <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> löst die <xref:System.NotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="09387-197">If the <xref:System.Data.DataSet> is bound to an <xref:System.Xml.XmlDataDocument>, calling <xref:System.Data.DataSet.Clear%2A?displayProperty=nameWithType> or <xref:System.Data.DataTable.Clear%2A?displayProperty=nameWithType> raises the <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="09387-198">Um diese Situation zu vermeiden, Durchsuchen Sie jede Tabelle, entfernen Sie jede Zeile zu einem Zeitpunkt.</span><span class="sxs-lookup"><span data-stu-id="09387-198">To avoid this situation, traverse each table, removing each row one at a time.</span></span> <span data-ttu-id="09387-199">Bei Verwendung von <xref:System.Data.DataTable.NewRow%2A> um neue Zeilen zu erstellen, die Zeilen vor dem Aufruf verarbeitet werden müssen <xref:System.Data.DataTable.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-199">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be processed before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-200">Das folgende Beispiel löscht die Tabelle aller Daten.</span><span class="sxs-lookup"><span data-stu-id="09387-200">The following example clears the table of all data.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Data.DataTable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.DataTable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::DataTable ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-201">Klont die Struktur der <see cref="T:System.Data.DataTable" />, einschließlich aller Schemas und Einschränkungen der <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-201">Clones the structure of the <see cref="T:System.Data.DataTable" />, including all <see cref="T:System.Data.DataTable" /> schemas and constraints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-202">Eine neue <see cref="T:System.Data.DataTable" /> mit demselben Schema wie die aktuelle <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-202">A new <see cref="T:System.Data.DataTable" /> with the same schema as the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-203">Wenn diese Klassen abgeleitet wurden, wird der Klon denselben abgeleiteten Klassen aufweisen.</span><span class="sxs-lookup"><span data-stu-id="09387-203">If these classes have been derived, the clone will also be of the same derived classes.</span></span>  
  
 <span data-ttu-id="09387-204">Klon erstellt ein neues <xref:System.Data.DataTable> mit derselben Struktur wie der ursprüngliche <xref:System.Data.DataTable>, aber keine Daten kopiert (die neue <xref:System.Data.DataTable> enthält keine `DataRows`).</span><span class="sxs-lookup"><span data-stu-id="09387-204">Clone creates a new <xref:System.Data.DataTable> with the same structure as the original <xref:System.Data.DataTable>, but does not copy any data (the new <xref:System.Data.DataTable> will not contain any `DataRows`).</span></span> <span data-ttu-id="09387-205">So kopieren Sie die Struktur und die Daten in eine neue <xref:System.Data.DataTable>, verwenden Sie <xref:System.Data.DataTable.Copy%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-205">To copy both the structure and data into a new <xref:System.Data.DataTable>, use <xref:System.Data.DataTable.Copy%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-206">Im folgende Beispiel veranschaulicht, wie die Struktur und die Einschränkungen der Zieltabelle aktualisiert, nachdem Sie DataTable.Clone ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="09387-206">The following sample demonstrates how to update the structure and constraints of the destination table after you execute DataTable.Clone.</span></span> <span data-ttu-id="09387-207">Die Klasse ClonedDataTable eine Zieltabelle zurück und umfasst die Aktualisierung Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="09387-207">The ClonedDataTable class will return a destination table and includes all the updating events.</span></span> <span data-ttu-id="09387-208">Nach der Klon wird nicht Strukturänderungen in der Quelltabelle in der Zieltabelle dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-208">After the clone, structure changes in the source table won’t be reflected in the destination table.</span></span> <span data-ttu-id="09387-209">Insbesondere wird in diesem Beispiel:</span><span class="sxs-lookup"><span data-stu-id="09387-209">Specifically, this sample will:</span></span>  
  
-   <span data-ttu-id="09387-210">Aktualisieren Sie die Änderungen der Spalten in der Quelltabelle an.</span><span class="sxs-lookup"><span data-stu-id="09387-210">Update the changes of the columns in source table.</span></span>  
  
-   <span data-ttu-id="09387-211">Aktualisieren Sie die Änderungen der UniqueConstraint in der Quelltabelle an.</span><span class="sxs-lookup"><span data-stu-id="09387-211">Update the changes of the UniqueConstraint in source table.</span></span>  
  
-   <span data-ttu-id="09387-212">Aktualisieren Sie die Änderungen der ForeignKeyConstraint in der Quelltabelle an.</span><span class="sxs-lookup"><span data-stu-id="09387-212">Update the changes of the ForeignKeyConstraint in source table.</span></span>  
  
 <span data-ttu-id="09387-213">C# und Visual Basic-Projekte mit diesem Codebeispiel finden Sie in der [Developer Code Samples](http://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span><span class="sxs-lookup"><span data-stu-id="09387-213">C# and Visual Basic projects with this code sample can be found on [Developer Code Samples](http://code.msdn.microsoft.com/site/search?f%5B0%5D.Type=SearchText&f%5B0%5D.Value=How%20to%20automically%20update%20the%20structure%20of%20a%20cloned%20DataTable).</span></span>  
  
```csharp  
using System;  
using System.Linq;  
using System.Data;  
using System.ComponentModel;  
  
class Program {  
   static void Main(string[] args) {  
      DataTable courses = NewCourseDataTable();  
      Console.WriteLine("This is the source table:");  
      WriteDataTable(courses);  
  
      ClonedDataTable clonedResult = new ClonedDataTable(courses);  
      DataTable clonedCourses = clonedResult.DestinationTable;  
      Console.WriteLine("This is the destination table:");  
      WriteDataTable(clonedCourses);  
  
      // Add the events of updating column collection into the source table.  
      clonedResult.UpdateAddedColumn();  
      clonedResult.UpdateDeletedColumn();  
      // Add a DataColumn in source table.  
      DataColumn columnCreidts = new DataColumn("Credits", typeof(Int32));  
      courses.Columns.Add(columnCreidts);  
      Console.WriteLine("After add a column in source table, it's the result in the destination:");  
      WriteDataTable(clonedCourses);  
  
      // Add the event of updating UniqueConstraint into the source table.  
      clonedResult.UpdateUniqueConstraint();  
  
      // Add the unique constraint in source table.  
      UniqueConstraint uniqueConstraint = new UniqueConstraint(courses.Columns["CourseId"]);  
      courses.Constraints.Add(uniqueConstraint);  
  
      Console.WriteLine(@"If we add the unique constraint in source table and then insert the duplicate   
rows into the destination table, we will get the following error:");  
      InsertDuplicateData(clonedCourses);  
      Console.WriteLine();  
  
      // Add the event of updating ForeignKeyConstraint into the source table.  
      clonedResult.UpdateForeignKeyConstraint();  
  
      // Add the ForeignKeyConstraint into the source table.  
      DataTable deparments = NewDeparmentDataTable();  
      DataSet dataset = new DataSet();  
  
      dataset.Tables.Add(courses);  
      dataset.Tables.Add(clonedCourses);  
      dataset.Tables.Add(deparments);  
  
      ForeignKeyConstraint foreignKey = new ForeignKeyConstraint(deparments.Columns["DepartmentId"], courses.Columns["DepartmentId"]);  
      courses.Constraints.Add(foreignKey);  
  
      Console.WriteLine(@"If we add the foreign key constraint in source table and then insert a row   
without the parent  into the destination table, we will get the following error:");  
      InsertNoParentRow(clonedCourses);  
      Console.WriteLine();  
  
      Console.WriteLine("Please press any key to exit...");  
      Console.ReadKey();  
   }  
  
   static private DataTable NewCourseDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("CourseId", typeof(String)),  
                                      new DataColumn("CourseName",typeof(String)),                                        
                                      new DataColumn("DepartmentId", typeof(Int32))  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add("C1045", "Calculus", 7);  
      newTable.Rows.Add("C1061", "Physics", 1);  
      newTable.Rows.Add("C2021", "Composition", 2);  
      newTable.Rows.Add("C2042", "Literature", 2);  
  
      return newTable;  
   }  
  
   static private DataTable NewDeparmentDataTable() {  
      DataTable newTable = new DataTable();  
  
      DataColumn[] columns ={   
                                      new DataColumn("DepartmentId", typeof(Int32)),  
                                      new DataColumn("Name",typeof(String)),  
                                  };  
  
      newTable.Columns.AddRange(columns);  
  
      newTable.Rows.Add(1, "Engineering");  
      newTable.Rows.Add(2, "English");  
      newTable.Rows.Add(4, "Economics");  
      newTable.Rows.Add(7, "Mathematics");  
  
      return newTable;  
   }  
  
   static private void WriteDataTable(DataTable table) {  
      if (table == null)  
         return;  
  
      foreach (DataColumn column in table.Columns) {  
         Console.Write("{0,-15}", column.ColumnName);  
      }  
      Console.WriteLine();  
  
      foreach (DataRow row in table.Rows) {  
         for (int i = 0; i < table.Columns.Count; i++)  
            Console.Write("{0,-15}", row[i].ToString());  
         Console.WriteLine();  
      }  
  
      Console.WriteLine();  
   }  
  
   static private void InsertDuplicateData(DataTable table) {  
      try {  
         table.Rows.Add("C1045", "Calculus", 7);  
         table.Rows.Add("C1045", "Calculus", 7);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
  
   private static void InsertNoParentRow(DataTable table) {  
      try {  
         table.Rows.Add("C1061", "Physics", 11);  
      } catch (Exception e) {  
         Console.WriteLine("\"" + e.Message + "\"");  
      }  
   }  
}  
  
public class ClonedDataTable {  
   private DataTable sourceTable;  
   private DataTable destinationTable;  
  
   public ClonedDataTable(DataTable source) {  
      sourceTable = source;  
      // set the cloned result  
      destinationTable = sourceTable.Clone();  
   }  
  
   public void UpdateAddedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnAdded);  
   }  
  
   public void UpdateDeletedColumn() {  
      sourceTable.Columns.CollectionChanged += new CollectionChangeEventHandler(ColumnDeleted);  
   }  
  
   public void UpdateUniqueConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(UniqueConstraint_Changed);  
   }  
  
   public void UpdateForeignKeyConstraint() {  
      sourceTable.Constraints.CollectionChanged += new CollectionChangeEventHandler(ForeignKeyConstraint_Changed);  
   }  
  
   // After the source table adds a column, the method will add the same column in the destination table.  
   void ColumnAdded(object sender, System.ComponentModel.CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null) {  
            DataColumn newColumn = new DataColumn(column.ColumnName, column.DataType, column.Expression, column.ColumnMapping);  
  
            if (!destinationTable.Columns.Contains(newColumn.ColumnName))  
               destinationTable.Columns.Add(newColumn);  
         }  
      }  
   }  
  
   // After the source table deletes a column, the method will delete the same column in the destination table.  
   void ColumnDeleted(object sender, CollectionChangeEventArgs e) {  
      if (e.Action == CollectionChangeAction.Remove) {  
         DataColumn column = e.Element as DataColumn;  
  
         if (column != null)  
            if (destinationTable.Columns.Contains(column.ColumnName))  
               destinationTable.Columns.Remove(column.ColumnName);  
      }  
   }  
  
   // After the source table changes the UniqueConstraint, this method changes the same UniqueConstraint in destination table.        
   void UniqueConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      UniqueConstraint constraint = e.Element as UniqueConstraint;  
  
      if (constraint == null)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         Boolean isPrimaryKey = constraint.IsPrimaryKey;  
  
         // Get the columns used in new constraint from the destiantion table.  
         for (Int32 i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         UniqueConstraint newConstraint = new UniqueConstraint(constraintName, columns, isPrimaryKey);  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // After the source table changes the ForeignKeyConstraint, this method changes    
   // the same ForeignKeyConstraint in the destination table.  
   void ForeignKeyConstraint_Changed(object sender, CollectionChangeEventArgs e) {  
      ForeignKeyConstraint constraint = e.Element as ForeignKeyConstraint;  
  
      if (constraint == null)  
         return;  
  
      // If the source and destination are not in the same DataSet, don't change the ForeignKeyConstraint.  
      if (sourceTable.DataSet != destinationTable.DataSet)  
         return;  
  
      String constraintName = constraint.ConstraintName;  
  
      if (e.Action == CollectionChangeAction.Add) {  
         DataColumn[] columns = new DataColumn[constraint.Columns.Count()];  
         DataColumn[] parentColumns = constraint.RelatedColumns;  
  
         // Get the columns used in new constraint from the destination table.  
         for (int i = 0; i < constraint.Columns.Count(); i++) {  
            String columnName = constraint.Columns[i].ColumnName;  
  
            if (destinationTable.Columns.Contains(columnName))  
               columns[i] = destinationTable.Columns[columnName];  
            else  
               return;  
         }  
  
         ForeignKeyConstraint newConstraint = new ForeignKeyConstraint(constraintName, parentColumns, columns);  
         newConstraint.AcceptRejectRule = constraint.AcceptRejectRule;  
         newConstraint.DeleteRule = constraint.DeleteRule;  
         newConstraint.UpdateRule = constraint.UpdateRule;  
  
         if (!destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Add(newConstraint);  
      } else if (e.Action == CollectionChangeAction.Remove)  
         if (destinationTable.Constraints.Contains(constraintName))  
            destinationTable.Constraints.Remove(constraintName);  
   }  
  
   // return the destination table.  
   public DataTable DestinationTable {  
      get { return destinationTable; }  
   }  
}  
```  
  
 <span data-ttu-id="09387-214">Dieses Beispiel zeigt, wie Daten in einer "DataTable" ändern und Aktualisieren der Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-214">This sample shows how to modify data in a DataTable and update the data source.</span></span>  
  
 <span data-ttu-id="09387-215">Erstellen Sie zunächst eine Datenbank aus:</span><span class="sxs-lookup"><span data-stu-id="09387-215">First, create a database:</span></span>  
  
```  
USE [master]  
GO  
  
CREATE DATABASE [MySchool]   
  
GO  
  
USE [MySchool]  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Course]([CourseID] [nvarchar](10) NOT NULL,  
[Year] [smallint] NOT NULL,  
[Title] [nvarchar](100) NOT NULL,  
[Credits] [int] NOT NULL,  
[DepartmentID] [int] NOT NULL,  
 CONSTRAINT [PK_Course] PRIMARY KEY CLUSTERED   
(  
[CourseID] ASC,  
[Year] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
SET ANSI_NULLS ON  
GO  
SET QUOTED_IDENTIFIER ON  
GO  
CREATE TABLE [dbo].[Department]([DepartmentID] [int] IDENTITY(1,1) NOT NULL,  
[Name] [nvarchar](50) NOT NULL,  
[Budget] [money] NOT NULL,  
[StartDate] [datetime] NOT NULL,  
[Administrator] [int] NULL,  
 CONSTRAINT [PK_Department] PRIMARY KEY CLUSTERED   
(  
[DepartmentID] ASC  
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]) ON [PRIMARY]  
  
GO  
  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1045', 2012, N'Calculus', 4, 7)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C1061', 2012, N'Physics', 4, 1)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2021', 2012, N'Composition', 3, 2)  
INSERT [dbo].[Course] ([CourseID], [Year], [Title], [Credits], [DepartmentID]) VALUES (N'C2042', 2012, N'Literature', 4, 2)  
  
SET IDENTITY_INSERT [dbo].[Department] ON   
  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (1, N'Engineering', 350000.0000, CAST(0x0000999C00000000 AS DateTime), 2)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (2, N'English', 120000.0000, CAST(0x0000999C00000000 AS DateTime), 6)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (4, N'Economics', 200000.0000, CAST(0x0000999C00000000 AS DateTime), 4)  
INSERT [dbo].[Department] ([DepartmentID], [Name], [Budget], [StartDate], [Administrator]) VALUES (7, N'Mathematics', 250024.0000, CAST(0x0000999C00000000 AS DateTime), 3)  
SET IDENTITY_INSERT [dbo].[Department] OFF  
  
ALTER TABLE [dbo].[Course]  WITH CHECK ADD  CONSTRAINT [FK_Course_Department] FOREIGN KEY([DepartmentID])  
REFERENCES [dbo].[Department] ([DepartmentID])  
GO  
ALTER TABLE [dbo].[Course] CHECK CONSTRAINT [FK_Course_Department]  
GO  
```  
  
 <span data-ttu-id="09387-216">Sie können jetzt kompilieren und Ausführen des Beispiels.</span><span class="sxs-lookup"><span data-stu-id="09387-216">You can now compile and run the sample.</span></span> <span data-ttu-id="09387-217">[Gewusst wie: Ändern von Daten in DataTable und aktualisieren Sie auf die Datenquelle](http://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) Visual Basic- und C#-Projekte in diesem Beispiel hat.</span><span class="sxs-lookup"><span data-stu-id="09387-217">[How to modify data in DataTable and update to the data source](http://code.msdn.microsoft.com/How-to-modify-data-in-c68d35f4) has Visual Basic and C# projects of this sample.</span></span>  
  
```csharp  
using System;  
using System.Data;  
using System.Data.SqlClient;  
  
class Program {  
   static void Main(string[] args) {  
  
   string MySchoolConnectionString = "Data Source=(local);Initial Catalog=MySchool;Integrated Security=True";  
  
      // Get Data  
      String selectString =  
       @"Select [CourseID],[Year],[Title],[Credits],[DepartmentID] From [dbo].[Course];  
               Select [DepartmentID],[Name],[Budget],[StartDate],[Administrator] From [dbo].[Department] ";  
  
      DataSet dataSet = new DataSet();  
      DataTable course = dataSet.Tables.Add("Course");  
      DataTable department = dataSet.Tables.Add("Department");  
  
      Console.WriteLine("Get data from database:");  
      GetDataTables(MySchoolConnectionString, selectString, dataSet, course, department);  
      Console.WriteLine();  
  
      // Use DataTable Edits to edit the data  
      String updateString =  
              @"Update [dbo].[Course] Set [Credits]=@Credits Where [CourseID]=@CourseID;";  
  
      course.ColumnChanged += OnColumnChanged;  
  
      // Set the Credits of first row is negative value, and set the Credits of second row is plus.  
      ChangeCredits(course, course.Rows[0], -1);  
      ChangeCredits(course, course.Rows[1], 11);  
  
      UpdateDataTables(MySchoolConnectionString, updateString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"),  
          new SqlParameter("@Credits", SqlDbType.Int, 4, "Credits"));  
      Console.WriteLine("Only the Credits of second row is changed.");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      // Delete and Remove from DataTable  
      // Create the foreign key constraint, and set the DeleteRule with Cascade.  
      ForeignKeyConstraint courseDepartFK = new ForeignKeyConstraint("CourseDepartFK", department.Columns["DepartmentID"], course.Columns["DepartmentID"]);  
      courseDepartFK.DeleteRule = Rule.Cascade;  
      courseDepartFK.UpdateRule = Rule.Cascade;  
      courseDepartFK.AcceptRejectRule = AcceptRejectRule.None;  
      course.Constraints.Add(courseDepartFK);  
  
      String deleteString = @"Delete From [dbo].[Course] Where [CourseID]=@CourseID;";  
  
      department.Rows[0].Delete();  
      Console.WriteLine("If One row in Department table is deleted, the related rows in Course table will also be deleted.");  
      Console.WriteLine("Department DataTable:");  
      ShowDataTable(department);  
      Console.WriteLine();  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
      // Update the delete operation  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
      Console.WriteLine("After delete operation:");  
      Console.WriteLine("Course DataTable:");  
      ShowDataTable(course);  
      Console.WriteLine();  
  
      course.Rows.RemoveAt(0);  
      Console.WriteLine("Now we remove one row from Course:");  
      ShowDataTable(course);  
      DeleteDataTables(MySchoolConnectionString, deleteString, dataSet, "Course",  
          new SqlParameter("@CourseID", SqlDbType.NVarChar, 10, "CourseID"));  
   }  
  
   // Use SqlDataAdapter to get data.  
   private static void GetDataTables(String connectionString, String selectString,  
       DataSet dataSet, params DataTable[] tables) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.SelectCommand = new SqlCommand(selectString);  
         adapter.SelectCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Fill(0, 0, tables);  
  
         foreach (DataTable table in dataSet.Tables) {  
            Console.WriteLine("Data in {0}:", table.TableName);  
            ShowDataTable(table);  
            Console.WriteLine();  
         }  
      }  
   }  
  
   // Use SqlDataAdapter to update the updata operation.  
   private static void UpdateDataTables(String connectionString, String updateString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.UpdateCommand = new SqlCommand(updateString);  
         adapter.UpdateCommand.Parameters.AddRange(parameters);  
         adapter.UpdateCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use SqlDataAdapter to update delete operation.  
   private static void DeleteDataTables(String connectionString, String deleteString,  
       DataSet dataSet, String tableName, params SqlParameter[] parameters) {  
      using (SqlDataAdapter adapter = new SqlDataAdapter()) {  
         adapter.DeleteCommand = new SqlCommand(deleteString);  
         adapter.DeleteCommand.Parameters.AddRange(parameters);  
         adapter.DeleteCommand.Connection = new SqlConnection(connectionString);  
  
         adapter.Update(dataSet, tableName);  
      }  
   }  
  
   // Use DataTable Edits to modify the data.  
   private static void ChangeCredits(DataTable table, DataRow row, Int32 credits) {  
      row.BeginEdit();  
      Console.WriteLine("We change row {0}", table.Rows.IndexOf(row));  
      row["Credits"] = credits;  
      row.EndEdit();  
   }  
  
   // The method will be invoked when the value in DataTable is changed.  
   private static void OnColumnChanged(Object sender, DataColumnChangeEventArgs args) {  
      Int32 credits = 0;  
      // If Credits is changed and the value is negative, we'll cancel the edit.  
      if ((args.Column.ColumnName == "Credits") &&  
          (!Int32.TryParse(args.ProposedValue.ToString(), out credits) || credits < 0)) {  
         Console.WriteLine("The value of Credits is invalid. Edit canceled.");  
         args.Row.CancelEdit();  
      }  
   }  
  
   // Display the column and value of DataTable.  
   private static void ShowDataTable(DataTable table) {  
      foreach (DataColumn col in table.Columns) {  
         Console.Write("{0,-14}", col.ColumnName);  
      }  
      Console.WriteLine("{0,-14}", "RowState");  
  
      foreach (DataRow row in table.Rows) {  
         if (row.RowState == DataRowState.Deleted) {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col, DataRowVersion.Original]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col, DataRowVersion.Original]);  
               else  
                  Console.Write("{0,-14}", row[col, DataRowVersion.Original]);  
            }  
         }  
         else {  
            foreach (DataColumn col in table.Columns) {  
               if (col.DataType.Equals(typeof(DateTime)))  
                  Console.Write("{0,-14:d}", row[col]);  
               else if (col.DataType.Equals(typeof(Decimal)))  
                  Console.Write("{0,-14:C}", row[col]);  
               else  
                  Console.Write("{0,-14}", row[col]);  
            }  
         }  
         Console.WriteLine("{0,-14}", row.RowState);  
      }  
   }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.Copy" />
      </Docs>
    </Member>
    <Member MemberName="ColumnChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanged As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-218">Tritt ein, nachdem ein Wert für die angegebene <see cref="T:System.Data.DataColumn" /> in einer <see cref="T:System.Data.DataRow" /> geändert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-218">Occurs after a value has been changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-219">Weitere Informationen finden Sie unter [Behandeln von DataTable-Ereignissen](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="09387-219">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnChangeEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ColumnChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataColumnChangeEventHandler ColumnChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataColumnChangeEventHandler ColumnChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.ColumnChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ColumnChanging As DataColumnChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataColumnChangeEventHandler ^ ColumnChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-220">Tritt ein, wenn ein Wert für die angegebene <see cref="T:System.Data.DataColumn" /> in einer <see cref="T:System.Data.DataRow" /> geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-220">Occurs when a value is being changed for the specified <see cref="T:System.Data.DataColumn" /> in a <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-221">Weitere Informationen finden Sie unter [Behandeln von DataTable-Ereignissen](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="09387-221">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ColumnChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ColumnChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Columns">
      <MemberSignature Language="C#" Value="public System.Data.DataColumnCollection Columns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumnCollection Columns" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Columns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Columns As DataColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataColumnCollection ^ Columns { System::Data::DataColumnCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-222">Ruft die Auflistung der Spalten ab, die zu dieser Tabelle gehören.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-222">Gets the collection of columns that belong to this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-223">Eine <see cref="T:System.Data.DataColumnCollection" />, die die Auflistung von <see cref="T:System.Data.DataColumn" />-Objekten für die Tabelle enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-223">A <see cref="T:System.Data.DataColumnCollection" /> that contains the collection of <see cref="T:System.Data.DataColumn" /> objects for the table.</span>
          </span>
          <span data-ttu-id="09387-224">Wenn keine <see cref="T:System.Data.DataColumn" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-224">An empty collection is returned if no <see cref="T:System.Data.DataColumn" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-225">Die <xref:System.Data.DataColumnCollection> bestimmt das Schema einer Tabelle durch den Datentyp jeder Spalte definieren.</span><span class="sxs-lookup"><span data-stu-id="09387-225">The <xref:System.Data.DataColumnCollection> determines the schema of a table by defining the data type of each column.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-226">Im folgenden Beispiel wird jeder Wert jeder Zeile in einer Tabelle mithilfe der <xref:System.Data.DataTable.Columns%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="09387-226">The following example prints each value of each row in a table using the <xref:System.Data.DataTable.Columns%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Columns Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Columns Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Columns Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compute">
      <MemberSignature Language="C#" Value="public object Compute (string expression, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Compute(string expression, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Compute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compute (expression As String, filter As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Compute(System::String ^ expression, System::String ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="09387-227">Der zu berechnende Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-227">The expression to compute.</span>
          </span>
        </param>
        <param name="filter">
          <span data-ttu-id="09387-228">Der Filter zum Begrenzen der Zeilen, die in dem Ausdruck ausgewertet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-228">The filter to limit the rows that evaluate in the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-229">Berechnet den angegebenen Ausdruck für die aktuellen Zeilen, die die Filterkriterien erfüllen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-229">Computes the given expression on the current rows that pass the filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-230">Ein <see cref="T:System.Object" />, das auf das Ergebnis der Berechnung festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-230">An <see cref="T:System.Object" />, set to the result of the computation.</span>
          </span>
          <span data-ttu-id="09387-231">Wenn der Ausdruck NULL ergibt, ist der Rückgabewert <see cref="F:System.DBNull.Value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-231">If the expression evaluates to null, the return value will be <see cref="F:System.DBNull.Value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-232">Die `expression` Parameter erfordert eine Aggregatfunktion.</span><span class="sxs-lookup"><span data-stu-id="09387-232">The `expression` parameter requires an aggregate function.</span></span> <span data-ttu-id="09387-233">Folgendes ist z. B. ein gültiger Ausdruck:</span><span class="sxs-lookup"><span data-stu-id="09387-233">For example, the following is a legal expression:</span></span>  
  
 `Count(Quantity)`  
  
 <span data-ttu-id="09387-234">Dieser Ausdruck ist jedoch nicht:</span><span class="sxs-lookup"><span data-stu-id="09387-234">But this expression is not:</span></span>  
  
 `Sum (Quantity * UnitPrice)`  
  
 <span data-ttu-id="09387-235">Wenn Sie eine Operation für zwei oder mehr Spalten durchführen müssen, sollten Sie erstellen eine <xref:System.Data.DataColumn>legen dessen <xref:System.Data.DataColumn.Expression%2A> Eigenschaft, um einen entsprechenden Ausdruck ein, und verwenden Sie ein Aggregatausdruck für die resultierende Spalte.</span><span class="sxs-lookup"><span data-stu-id="09387-235">If you must perform an operation on two or more columns, you should create a <xref:System.Data.DataColumn>, set its <xref:System.Data.DataColumn.Expression%2A> property to an appropriate expression, and use an aggregate expression on the resulting column.</span></span> <span data-ttu-id="09387-236">In diesem Fall erhält eine <xref:System.Data.DataColumn> mit dem Namen "Total", und die <xref:System.Data.DataColumn.Expression%2A> Festlegen dieser Eigenschaft:</span><span class="sxs-lookup"><span data-stu-id="09387-236">In that case, given a <xref:System.Data.DataColumn> with the name "total", and the <xref:System.Data.DataColumn.Expression%2A> property set to this:</span></span>  
  
 `"Quantity * UnitPrice"`  
  
 <span data-ttu-id="09387-237">Die Expression-Argument für die <xref:System.Data.DataTable.Compute%2A> Methode wäre dann dies:</span><span class="sxs-lookup"><span data-stu-id="09387-237">The expression argument for the <xref:System.Data.DataTable.Compute%2A> method would then be this:</span></span>  
  
 `Sum(total)`  
  
 <span data-ttu-id="09387-238">Der zweite Parameter `filter`, bestimmt, welche Zeilen im Ausdruck verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="09387-238">The second parameter, `filter`, determines which rows are used in the expression.</span></span> <span data-ttu-id="09387-239">Wenn die Tabelle eine Datumsspalte mit dem Namen "colDate" enthält, können Sie beispielsweise die Zeilen mit dem folgenden Ausdruck begrenzen:</span><span class="sxs-lookup"><span data-stu-id="09387-239">For example, if the table contains a date column named "colDate", you could limit the rows with the following expression:</span></span>  
  
 `colDate > 1/1/99 AND colDate < 17/1/99`  
  
 <span data-ttu-id="09387-240">Regeln zum Erstellen von Ausdrücken für beide Parameter finden Sie unter der <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="09387-240">For rules on creating expressions for both parameters, see the <xref:System.Data.DataColumn.Expression%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-241">Im folgende Beispiel werden die Werte einer Spalte mit dem Namen "Total" für den Verkäufer, dessen ID 5 summiert.</span><span class="sxs-lookup"><span data-stu-id="09387-241">The following example sums the values of a column named "Total", for the salesperson whose identification number is five.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Compute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Compute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Compute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Data.ConstraintCollection Constraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.ConstraintCollection Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Constraints As ConstraintCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ConstraintCollection ^ Constraints { System::Data::ConstraintCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConstraintCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-242">Ruft die Auflistung der Einschränkungen ab, die von dieser Tabelle verwaltet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-242">Gets the collection of constraints maintained by this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-243">Eine <see cref="T:System.Data.ConstraintCollection" />, die die Auflistung von <see cref="T:System.Data.Constraint" />-Objekten für die Tabelle enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-243">A <see cref="T:System.Data.ConstraintCollection" /> that contains the collection of <see cref="T:System.Data.Constraint" /> objects for the table.</span>
          </span>
          <span data-ttu-id="09387-244">Wenn keine <see cref="T:System.Data.Constraint" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-244">An empty collection is returned if no <see cref="T:System.Data.Constraint" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-245">Ein <xref:System.Data.ForeignKeyConstraint> schränkt die Aktion ausgeführt, wenn ein Wert in einer Spalte (oder Spalten) entweder gelöscht oder aktualisiert wird.</span><span class="sxs-lookup"><span data-stu-id="09387-245">A <xref:System.Data.ForeignKeyConstraint> restricts the action performed when a value in a column (or columns) is either deleted or updated.</span></span> <span data-ttu-id="09387-246">Eine solche Einschränkung soll mit den Schlüsselspalten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="09387-246">Such a constraint is intended to be used with primary key columns.</span></span> <span data-ttu-id="09387-247">In einer über-/unterordnungsbeziehung zwischen zwei Tabellen kann einen Wert aus der übergeordneten Tabelle gelöscht untergeordneten Zeilen in einem der folgenden Arten wirken sich auf.</span><span class="sxs-lookup"><span data-stu-id="09387-247">In a parent/child relationship between two tables, deleting a value from the parent table can affect the child rows in one of the following ways.</span></span>  
  
-   <span data-ttu-id="09387-248">Das untergeordnete Element, Zeilen, auch sein können, gelöscht (eine kaskadierende Aktion).</span><span class="sxs-lookup"><span data-stu-id="09387-248">The child rows can also be deleted (a cascading action).</span></span>  
  
-   <span data-ttu-id="09387-249">Die Werte in die untergeordnete Spalte (oder Spalten) können auf null-Werte festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-249">The values in the child column (or columns) can be set to null values.</span></span>  
  
-   <span data-ttu-id="09387-250">Die Werte in die untergeordnete Spalte (oder Spalten) können auf Standardwerte festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-250">The values in the child column (or columns) can be set to default values.</span></span>  
  
-   <span data-ttu-id="09387-251">Eine Ausnahme kann ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="09387-251">An exception can be generated.</span></span>  
  
 <span data-ttu-id="09387-252">Ein <xref:System.Data.UniqueConstraint> wird aktiviert, bei dem Versuch, einen Wert in einem Primärschlüssel auf einen nicht eindeutigen Wert festzulegen.</span><span class="sxs-lookup"><span data-stu-id="09387-252">A <xref:System.Data.UniqueConstraint> becomes active when attempting to set a value in a primary key to a non-unique value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-253">Im folgenden Beispiel wird eine <xref:System.Data.ForeignKeyConstraint> auf die Auflistung von Einschränkungen.</span><span class="sxs-lookup"><span data-stu-id="09387-253">The following example adds a <xref:System.Data.ForeignKeyConstraint> to the collection of constraints.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Constraints Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Constraints Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-254">Kopiert die Struktur und die Daten für diese <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-254">Copies both the structure and data for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-255">Eine neue <see cref="T:System.Data.DataTable" /> mit derselben Struktur (Tabellenschemas und Einschränkungen) und denselben Daten wie diese <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-255">A new <see cref="T:System.Data.DataTable" /> with the same structure (table schemas and constraints) and data as this <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="09387-256">Wenn diese Klassen abgeleitet wurden, besteht die Kopie aus denselben abgeleiteten Klassen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-256">If these classes have been derived, the copy will also be of the same derived classes.</span>
          </span>
          <span data-ttu-id="09387-257">
            <see cref="M:System.Data.DataTable.Copy" /> erstellt ein neues <see cref="T:System.Data.DataTable" /> mit der gleichen Struktur und den Daten wie das ursprüngliche <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-257">
              <see cref="M:System.Data.DataTable.Copy" /> creates a new <see cref="T:System.Data.DataTable" /> with the same structure and data as the original <see cref="T:System.Data.DataTable" />.</span>
          </span>
          <span data-ttu-id="09387-258">Um die Struktur, nicht jedoch die Daten, zu neuen <see cref="T:System.Data.DataTable" />, zu kopieren, verwenden Sie <see cref="M:System.Data.DataTable.Clone" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-258">To copy the structure to a new <see cref="T:System.Data.DataTable" />, but not the data, use <see cref="M:System.Data.DataTable.Clone" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="09387-259">Im folgenden Beispiel wird die <xref:System.Data.DataTable.Copy%2A> Methode zum Erstellen einer Kopie des Originals <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-259">The following example uses the <xref:System.Data.DataTable.Copy%2A> method to create a copy of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-260">Der Name des Namespaces wird nicht beibehalten, wenn er von einem übergeordneten Element geerbt wird <xref:System.Data.DataTable> oder <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="09387-260">The namespace name is not retained if it is inherited from a parent <xref:System.Data.DataTable> or <xref:System.Data.DataSet>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Copy Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Copy Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Copy Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataView.ToTable" />
        <altmember cref="M:System.Data.DataTable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataReader">
      <MemberSignature Language="C#" Value="public System.Data.DataTableReader CreateDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTableReader CreateDataReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateDataReader" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateDataReader () As DataTableReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTableReader ^ CreateDataReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-261">Gibt einen <see cref="T:System.Data.DataTableReader" /> zurück, der den Daten innerhalb dieser <see cref="T:System.Data.DataTable" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-261">Returns a <see cref="T:System.Data.DataTableReader" /> corresponding to the data within this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-262">Ein <see cref="T:System.Data.DataTableReader" />, der entsprechend der <see cref="T:System.Data.DataTable" />-Quellinstanz ein Resultset enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-262">A <see cref="T:System.Data.DataTableReader" /> containing one result set, corresponding to the source <see cref="T:System.Data.DataTable" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="09387-263">Die folgende Konsolenanwendung erstellt eine <xref:System.Data.DataTable>-Instanz.</span><span class="sxs-lookup"><span data-stu-id="09387-263">The following console application creates a <xref:System.Data.DataTable> instance.</span></span> <span data-ttu-id="09387-264">Im Beispiel übergibt dann das ausgefüllte <xref:System.Data.DataTable> an eine Prozedur, die Aufrufe der <xref:System.Data.DataTable.CreateDataReader%2A> -Methode, die Ergebnisse der enthaltenen durchläuft die <xref:System.Data.DataTableReader>.</span><span class="sxs-lookup"><span data-stu-id="09387-264">The example then passes the filled <xref:System.Data.DataTable> to a procedure that calls the <xref:System.Data.DataTable.CreateDataReader%2A> method, which iterates through the results contained within the <xref:System.Data.DataTableReader>.</span></span>  
  
 [!code-csharp[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.CreateDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.CreateDataReader/VB/source.vb#1)]  
  
 <span data-ttu-id="09387-265">Im Beispiel wird die folgende Ausgabe im Konsolenfenster angezeigt:</span><span class="sxs-lookup"><span data-stu-id="09387-265">The example displays the following output in the console window:</span></span>  
  
 `1 Mary`  
  
 `2 Andy`  
  
 `3 Peter`  
  
 `4 Russ`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.CreateDataReader" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataTable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataTable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateInstance () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataTable ^ CreateInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-266">Erstellt eine neue Instanz von <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-266">Creates a new instance of <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-267">Der neue Ausdruck.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-267">The new expression.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSet">
      <MemberSignature Language="C#" Value="public System.Data.DataSet DataSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataSet DataSet" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DataSet" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataSet As DataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSet ^ DataSet { System::Data::DataSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-268">Ruft das <see cref="T:System.Data.DataSet" /> ab, zu dem diese Tabelle gehört.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-268">Gets the <see cref="T:System.Data.DataSet" /> to which this table belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-269">Das <see cref="T:System.Data.DataSet" />, zu dem diese Tabelle gehört.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-269">The <see cref="T:System.Data.DataSet" /> to which this table belongs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-270">Wenn ein Steuerelement datengebunden ist auf eine <xref:System.Data.DataTable>, und die Tabelle gehört zu einer <xref:System.Data.DataSet>, erhalten Sie auf der <xref:System.Data.DataSet> über diese Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="09387-270">If a control is data bound to a <xref:System.Data.DataTable>, and the table belongs to a <xref:System.Data.DataSet>, you can get to the <xref:System.Data.DataSet> through this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-271">Im folgende Beispiel gibt die übergeordnete <xref:System.Data.DataSet> einer angegebenen Tabelle über die <xref:System.Data.DataTable.DataSet%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="09387-271">The following example returns the parent <xref:System.Data.DataSet> of a given table through the <xref:System.Data.DataTable.DataSet%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DataSet Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultView">
      <MemberSignature Language="C#" Value="public System.Data.DataView DefaultView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataView DefaultView" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DefaultView" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultView As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataView ^ DefaultView { System::Data::DataView ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-272">Ruft eine benutzerdefinierte Sicht der Tabelle ab, wobei es sich um eine gefilterte Sicht oder eine Cursorposition handeln kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-272">Gets a customized view of the table that may include a filtered view, or a cursor position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-273">Der mit dem <see cref="T:System.Data.DataView" /> verknüpfte <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-273">The <see cref="T:System.Data.DataView" /> associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-274">Die <xref:System.Data.DataTable.DefaultView%2A> Eigenschaft gibt eine <xref:System.Data.DataView> können Sie sortieren, Filtern und Suchen einer <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-274">The <xref:System.Data.DataTable.DefaultView%2A> property returns a <xref:System.Data.DataView> you can use to sort, filter, and search a <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-275">Im folgenden Beispiel wird eine Eigenschaft der <xref:System.Data.DataTable> des Objekts <xref:System.Data.DataView> über die <xref:System.Data.DataTable.DefaultView%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="09387-275">The following example sets a property of the <xref:System.Data.DataTable> object's <xref:System.Data.DataView> through the <xref:System.Data.DataTable.DefaultView%2A> property.</span></span> <span data-ttu-id="09387-276">Außerdem wird gezeigt, die Bindung von einer <xref:System.Windows.Forms.DataGridView> die Steuerung an eine <xref:System.Data.DataTable> mit dem Namen "Suppliers", die eine Spalte mit dem Namen "CompanyName".</span><span class="sxs-lookup"><span data-stu-id="09387-276">The example also shows the binding of a <xref:System.Windows.Forms.DataGridView> control to a <xref:System.Data.DataTable> named "Suppliers" that includes a column named "CompanyName."</span></span>  
  
 [!code-csharp[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.DefaultView Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.DefaultView Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayExpression">
      <MemberSignature Language="C#" Value="public string DisplayExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayExpression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.DisplayExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-277">Ruft den Ausdruck ab, der einen Wert für die Darstellung dieser Tabelle auf der Benutzeroberfläche zurückgibt, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-277">Gets or sets the expression that returns a value used to represent this table in the user interface.</span>
          </span>
          <span data-ttu-id="09387-278">Mit der <see langword="DisplayExpression" />-Eigenschaft können Sie den Namen dieser Tabelle auf einer Benutzeroberfläche anzeigen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-278">The <see langword="DisplayExpression" /> property lets you display the name of this table in a user interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-279">Eine Anzeigezeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-279">A display string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-280">Beendet die Initialisierung einer <see cref="T:System.Data.DataTable" />, die in einem Formular oder von einer anderen Komponente verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-280">Ends the initialization of a <see cref="T:System.Data.DataTable" /> that is used on a form or used by another component.</span>
          </span>
          <span data-ttu-id="09387-281">Die Initialisierung erfolgt zur Laufzeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-281">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-282">Die entwurfsumgebung für Visual Studio .NET verwendet diese Methode, um die Initialisierung einer Komponente zu beenden, die in einem Formular oder von einer anderen Komponente verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="09387-282">The Visual Studio .NET design environment uses this method to end the initialization of a component that is used on a form or used by another component.</span></span> <span data-ttu-id="09387-283">Die <xref:System.Data.DataTable.BeginInit%2A> -Methode startet die Initialisierung.</span><span class="sxs-lookup"><span data-stu-id="09387-283">The <xref:System.Data.DataTable.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="09387-284">Mithilfe der <xref:System.Data.DataTable.BeginInit%2A> und <xref:System.Data.DataTable.EndInit%2A> Methoden wird verhindert, dass das Steuerelement verwendet werden, bevor er vollständig initialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-284">Using the <xref:System.Data.DataTable.BeginInit%2A> and <xref:System.Data.DataTable.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadData">
      <MemberSignature Language="C#" Value="public void EndLoadData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndLoadData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.EndLoadData" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndLoadData ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndLoadData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-285">Aktiviert nach dem Laden von Daten Benachrichtigungen, Indexverwaltung und Einschränkungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-285">Turns on notifications, index maintenance, and constraints after loading data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-286">Verwendung <xref:System.Data.DataTable.EndLoadData%2A> in Verbindung mit <xref:System.Data.DataTable.LoadDataRow%2A> und <xref:System.Data.DataTable.BeginLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-286">Use <xref:System.Data.DataTable.EndLoadData%2A> in conjunction with <xref:System.Data.DataTable.LoadDataRow%2A> and <xref:System.Data.DataTable.BeginLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-287">Ruft die Auflistung benutzerdefinierter Benutzerinformationen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-287">Gets the collection of customized user information.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-288">Eine <see cref="T:System.Data.PropertyCollection" />, die benutzerdefinierte Benutzerinformationen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-288">A <see cref="T:System.Data.PropertyCollection" /> that contains custom user information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-289">Verwenden der <xref:System.Data.DataTable.ExtendedProperties%2A> benutzerdefinierte Informationen zum Hinzufügen einer <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-289">Use the <xref:System.Data.DataTable.ExtendedProperties%2A> to add custom information to a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-290">Hinzufügen von Daten mit der `Add` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-290">Add information with the `Add` method.</span></span> <span data-ttu-id="09387-291">Abrufen von Informationen mit der `Item` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-291">Retrieve information with the `Item` method.</span></span>  
  
 <span data-ttu-id="09387-292">Erweiterte Eigenschaften muss vom Typ <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="09387-292">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="09387-293">Eigenschaften, die nicht vom Typ Zeichenfolge sind, werden nicht beibehalten. wenn die <xref:System.Data.DataTable> als XML geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="09387-293">Properties that are not of type String are not persisted when the <xref:System.Data.DataTable> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-294">Im folgenden Beispiel wird einen Timestamp-Wert, der <xref:System.Data.DataTable> über die <xref:System.Data.DataTable.ExtendedProperties%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="09387-294">The following example adds a timestamp value to the <xref:System.Data.DataTable> through the <xref:System.Data.DataTable.ExtendedProperties%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="fInitInProgress">
      <MemberSignature Language="C#" Value="protected internal bool fInitInProgress;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly bool fInitInProgress" />
      <MemberSignature Language="DocId" Value="F:System.Data.DataTable.fInitInProgress" />
      <MemberSignature Language="VB.NET" Value="Protected Friend fInitInProgress As Boolean " />
      <MemberSignature Language="C++ CLI" Value="protected public: bool fInitInProgress;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-295">Überprüft, ob die Initialisierung gegenwärtig ausgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-295">Checks whether initialization is in progress.</span>
          </span>
          <span data-ttu-id="09387-296">Die Initialisierung erfolgt zur Laufzeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-296">The initialization occurs at run time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChanges">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-297">Ruft eine Kopie der <see cref="T:System.Data.DataTable" /> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommenen Änderungen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-297">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-298">Ruft eine Kopie der <see cref="T:System.Data.DataTable" /> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommenen Änderungen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-298">Gets a copy of the <see cref="T:System.Data.DataTable" /> that contains all changes made to it since it was loaded or <see cref="M:System.Data.DataTable.AcceptChanges" /> was last called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-299">Eine Kopie der Änderungen aus dieser <see cref="T:System.Data.DataTable" /> oder <see langword="null" />, wenn keine Änderungen gefunden wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-299">A copy of the changes from this <see cref="T:System.Data.DataTable" />, or <see langword="null" /> if no changes are found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-300">Erstellt ein neues <xref:System.Data.DataSet> , enthält eine Kopie aller Zeilen in der ursprünglichen <xref:System.Data.DataSet> , ausstehende Änderungen aufweisen.</span><span class="sxs-lookup"><span data-stu-id="09387-300">Creates a new <xref:System.Data.DataSet> containing a copy of all rows in the original <xref:System.Data.DataSet> that have pending changes.</span></span> <span data-ttu-id="09387-301">Beziehung Einschränkungen können dazu führen, dass zusätzliche unveränderte Zeilen in die neue hinzuzufügende <xref:System.Data.DataSet> enthält die unveränderten Zeilen Primärschlüsseln, Fremdschlüsseln in der geänderten Zeilen entspricht.</span><span class="sxs-lookup"><span data-stu-id="09387-301">Relationship constraints can cause additional unchanged rows to be added to the new <xref:System.Data.DataSet> if the unchanged rows contain primary keys corresponding to foreign keys in the changed rows.</span></span> <span data-ttu-id="09387-302">Gibt die Methode `null` (`Nothing` in Visual Basic), wenn keine Zeilen vorhanden, in der ursprünglichen sind <xref:System.Data.DataSet> mit ausstehenden Änderungen.</span><span class="sxs-lookup"><span data-stu-id="09387-302">The method returns `null` (`Nothing` in Visual Basic) if there are no rows in the original <xref:System.Data.DataSet> with pending changes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public System.Data.DataTable GetChanges (System.Data.DataRowState rowStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataTable GetChanges(valuetype System.Data.DataRowState rowStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetChanges(System.Data.DataRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges (rowStates As DataRowState) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataTable ^ GetChanges(System::Data::DataRowState rowStates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rowStates" Type="System.Data.DataRowState" />
      </Parameters>
      <Docs>
        <param name="rowStates">
          <span data-ttu-id="09387-303">Einer der <see cref="T:System.Data.DataRowState" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-303">One of the <see cref="T:System.Data.DataRowState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-304">Ruft eine Kopie der <see cref="T:System.Data.DataTable" /> ab, die alle seit dem letzten Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommenen und durch <see cref="T:System.Data.DataRowState" /> gefilterten Änderungen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-304">Gets a copy of the <see cref="T:System.Data.DataTable" /> containing all changes made to it since it was last loaded, or since <see cref="M:System.Data.DataTable.AcceptChanges" /> was called, filtered by <see cref="T:System.Data.DataRowState" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-305">Eine gefilterte Kopie der <see cref="T:System.Data.DataTable" />, für die Aktionen ausgeführt werden können und die nachfolgend durch Verwendung von <see cref="T:System.Data.DataTable" /> wieder mit der <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" /> zusammengeführt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-305">A filtered copy of the <see cref="T:System.Data.DataTable" /> that can have actions performed on it, and later be merged back in the <see cref="T:System.Data.DataTable" /> using <see cref="M:System.Data.DataSet.Merge(System.Data.DataSet)" />.</span>
          </span>
          <span data-ttu-id="09387-306">Wenn keine Zeilen mit dem gewünschten <see cref="T:System.Data.DataRowState" /> gefunden werden, gibt die Methode <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-306">If no rows of the desired <see cref="T:System.Data.DataRowState" /> are found, the method returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-307">Die <xref:System.Data.DataTable.GetChanges%2A> Methode wird verwendet, um eine zweite erzeugen <xref:System.Data.DataTable> Objekt, das nur die Änderungen enthält, die in der ursprünglichen eingeführt.</span><span class="sxs-lookup"><span data-stu-id="09387-307">The <xref:System.Data.DataTable.GetChanges%2A> method is used to produce a second <xref:System.Data.DataTable> object that contains only the changes introduced into the original.</span></span> <span data-ttu-id="09387-308">Verwenden der `rowStates` Argument, um die Art von Änderungen anzugeben, sollte das neue Objekt enthalten.</span><span class="sxs-lookup"><span data-stu-id="09387-308">Use the `rowStates` argument to specify the type of changes the new object should include.</span></span>  
  
 <span data-ttu-id="09387-309">Einschränkungen der Beziehung möglicherweise unverändert übergeordneten Zeilen eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="09387-309">Relationship constraints may cause unchanged parent rows to be included.</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetChanges1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetChanges1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTableSchema">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema (System.Xml.Schema.XmlSchemaSet schemaSet);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaComplexType GetDataTableSchema(class System.Xml.Schema.XmlSchemaSet schemaSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetDataTableSchema(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataTableSchema (schemaSet As XmlSchemaSet) As XmlSchemaComplexType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaComplexType ^ GetDataTableSchema(System::Xml::Schema::XmlSchemaSet ^ schemaSet);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaComplexType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaSet" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemaSet">
          <span data-ttu-id="09387-310">Eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-310">An <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-311">Diese Methode gibt eine <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Instanz mit der WSDL (Web Services Description Language) zurück, die die <see cref="T:System.Data.DataTable" /> für Webdienste beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-311">This method returns an <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance containing the Web Services Description Language (WSDL) that describes the <see cref="T:System.Data.DataTable" /> for Web Services.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-312">Die <see cref="T:System.Xml.Schema.XmlSchemaSet" />-Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-312">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetErrors">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetErrors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetErrors () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetErrors();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-313">Ruft ein Array von <see cref="T:System.Data.DataRow" />-Objekten ab, die Fehler enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-313">Gets an array of <see cref="T:System.Data.DataRow" /> objects that contain errors.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-314">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, die Fehler enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-314">An array of <see cref="T:System.Data.DataRow" /> objects that have errors.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-315">Gibt die Liste der <xref:System.Data.DataRow> Objekte mit <xref:System.Data.DataRow.RowError%2A> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="09387-315">Returns the list of <xref:System.Data.DataRow> objects that have <xref:System.Data.DataRow.RowError%2A> set.</span></span> <span data-ttu-id="09387-316">Fehler können z. B. auftreten, beim Aufrufen von <xref:System.Data.Common.DataAdapter.Update%2A> mit <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> festgelegt **"true"**.</span><span class="sxs-lookup"><span data-stu-id="09387-316">For example, errors can occur when calling <xref:System.Data.Common.DataAdapter.Update%2A> with <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> set to **true**.</span></span> <span data-ttu-id="09387-317">Nicht aufgerufen werden <xref:System.Data.DataTable.AcceptChanges%2A> auf die <xref:System.Data.DataTable> , bis Sie alle Fehler zu beheben, und senden Sie erneut die <xref:System.Data.DataSet> für die Aktualisierung.</span><span class="sxs-lookup"><span data-stu-id="09387-317">Do not invoke <xref:System.Data.DataTable.AcceptChanges%2A> on the <xref:System.Data.DataTable> until you resolve all errors and resubmit the <xref:System.Data.DataSet> for updating.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-318">Im folgenden Beispiel wird die <xref:System.Data.DataTable.GetErrors%2A> Methode, um ein Array von zurückzugeben <xref:System.Data.DataRow> Objekte, die Fehler enthalten.</span><span class="sxs-lookup"><span data-stu-id="09387-318">The following example uses the <xref:System.Data.DataTable.GetErrors%2A> method to return an array of <xref:System.Data.DataRow> objects that have errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.GetErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.GetErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="09387-319">Ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den serialisierten Daten, die der <see cref="T:System.Data.DataTable" /> zugeordnet sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-319">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that holds the serialized data associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="09387-320">Ein <see cref="T:System.Runtime.Serialization.StreamingContext" />-Objekt mit Quelle und Ziel des serialisierten Streams, der der <see cref="T:System.Data.DataTable" /> zugeordnet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-320">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that contains the source and destination of the serialized stream associated with the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-321">Füllt ein Serialisierungsinformationsobjekt mit den Daten auf, die zum Serialisieren des <see cref="T:System.Data.DataTable" /> erforderlich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-321">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="09387-322">Der <paramref name="info" />-Parameter ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-322">The <paramref name="info" /> parameter is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetRowType">
      <MemberSignature Language="C#" Value="protected virtual Type GetRowType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type GetRowType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetRowType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetRowType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ GetRowType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-323">Ruft den Zeilentyp ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-323">Gets the row type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-324">Gibt den Typ der <see cref="T:System.Data.DataRow" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-324">Returns the type of the <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="protected virtual System.Xml.Schema.XmlSchema GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xml.Schema.XmlSchema GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSchema () As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xml::Schema::XmlSchema ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-325">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-325">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-326">Ein <see cref="T:System.Xml.Schema.XmlSchema" /> zur Beschreibung der XML-Darstellung des Objekts, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erstellt und von der <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-326">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-327">Ruft einen Wert ab, der angibt, ob in einer Zeile in einer Tabelle des <see cref="T:System.Data.DataSet" />, zu dem die Tabelle gehört, Fehler aufgetreten sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-327">Gets a value indicating whether there are errors in any of the rows in any of the tables of the <see cref="T:System.Data.DataSet" /> to which the table belongs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-328">
            <see langword="true" />, wenn Fehler vorhanden sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-328">
              <see langword="true" /> if errors exist; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-329">Benutzer auf einen Satz von Daten in der Arbeit ein <xref:System.Data.DataTable>, Sie können jede Änderung mit einem Fehler markieren, wenn die Änderung das Fehlschlagen der Validierung verursacht.</span><span class="sxs-lookup"><span data-stu-id="09387-329">As users work on a set of data contained in a <xref:System.Data.DataTable>, you can mark each change with an error if the change causes some validation failure.</span></span> <span data-ttu-id="09387-330">Sie können eine gesamte kennzeichnen <xref:System.Data.DataRow> mit einer Fehlermeldung mit der <xref:System.Data.DataRow.RowError%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="09387-330">You can mark an entire <xref:System.Data.DataRow> with an error message using the <xref:System.Data.DataRow.RowError%2A> property.</span></span> <span data-ttu-id="09387-331">Sie können auch Fehler festlegen, auf den einzelnen Spalten der Zeile mit der <xref:System.Data.DataRow.SetColumnError%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-331">You can also set errors on each column of the row with the <xref:System.Data.DataRow.SetColumnError%2A> method.</span></span>  
  
 <span data-ttu-id="09387-332">Vor dem Aktualisieren einer Datenquelle mit einem <xref:System.Data.DataSet>, es wird empfohlen, Sie zuerst rufen die <xref:System.Data.DataSet.GetChanges%2A> Methode auf dem Ziel <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="09387-332">Before updating a data source with a <xref:System.Data.DataSet>, it's recommended that you first invoke the <xref:System.Data.DataSet.GetChanges%2A> method on the target <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="09387-333">Die Methode führt zu einem <xref:System.Data.DataSet> , enthält nur die mit dem ursprünglichen vorgenommenen Änderungen.</span><span class="sxs-lookup"><span data-stu-id="09387-333">The method results in a <xref:System.Data.DataSet> that contains only the changes made to the original.</span></span> <span data-ttu-id="09387-334">Vor dem Senden der <xref:System.Data.DataSet> wie die Datenquelle für das Aktualisieren, finden Sie in der <xref:System.Data.DataTable.HasErrors%2A> Eigenschaft jeder Tabelle, um festzustellen, ob die Zeilen oder Spalten in den Zeilen Fehler angefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-334">Before sending the <xref:System.Data.DataSet> to the data source for updating, check the <xref:System.Data.DataTable.HasErrors%2A> property of each table to see if any errors have been attached to the rows or columns in the rows.</span></span>  
  
 <span data-ttu-id="09387-335">Nach dem Abgleichen aller Fehler, deaktivieren Sie die Fehler mit der <xref:System.Data.DataRow.ClearErrors%2A> Methode der `DataRow`.</span><span class="sxs-lookup"><span data-stu-id="09387-335">After reconciling each error, clear the errors with the <xref:System.Data.DataRow.ClearErrors%2A> method of the `DataRow`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-336">Im folgenden Beispiel wird die <xref:System.Data.DataTable.HasErrors%2A> Eigenschaft zu überprüfen, ob eine Tabelle Fehler enthält.</span><span class="sxs-lookup"><span data-stu-id="09387-336">The following example uses the <xref:System.Data.DataTable.HasErrors%2A> property to check if a table contains errors.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.GetErrors" />
      </Docs>
    </Member>
    <Member MemberName="ImportRow">
      <MemberSignature Language="C#" Value="public void ImportRow (System.Data.DataRow row);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ImportRow(class System.Data.DataRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ImportRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportRow (row As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportRow(System::Data::DataRow ^ row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="row">
          <span data-ttu-id="09387-337">Die zu importierende <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-337">The <see cref="T:System.Data.DataRow" /> to be imported.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-338">Kopiert eine <see cref="T:System.Data.DataRow" /> in eine <see cref="T:System.Data.DataTable" />, wobei alle Eigenschafteneinstellungen sowie die ursprünglichen und die aktuellen Werte beibehalten werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-338">Copies a <see cref="T:System.Data.DataRow" /> into a <see cref="T:System.Data.DataTable" />, preserving any property settings, as well as original and current values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-339">Aufrufen von <xref:System.Data.DataTable.NewRow%2A> Fügt eine Zeile der Tabelle mit dem vorhandenen Tabellenschema, jedoch mit den Standardwerten für die Zeile, und legt die <xref:System.Data.DataRowState> auf `Detached`.</span><span class="sxs-lookup"><span data-stu-id="09387-339">Calling <xref:System.Data.DataTable.NewRow%2A> adds a row to the table using the existing table schema, but with default values for the row, and sets the <xref:System.Data.DataRowState> to `Detached`.</span></span> <span data-ttu-id="09387-340">Aufrufen von <xref:System.Data.DataTable.ImportRow%2A> behält den vorhandenen <xref:System.Data.DataRowState> zusammen mit anderen Werten in der Zeile.</span><span class="sxs-lookup"><span data-stu-id="09387-340">Calling <xref:System.Data.DataTable.ImportRow%2A> preserves the existing <xref:System.Data.DataRowState> along with other values in the row.</span></span> <span data-ttu-id="09387-341">Wenn die `DataRow` übergeben wird, wie ein Parameter im getrennten Zustand befindet ist, ignoriert wird und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="09387-341">If the `DataRow` that is passed as a parameter is in a detached state, it is ignored, and no exception is thrown.</span></span>  
  
 <span data-ttu-id="09387-342">Die neue Zeile wird an das Ende der Datentabelle hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-342">The new row will be added to the end of the data table.</span></span>  
  
 <span data-ttu-id="09387-343">Wenn die neue Zeile hinzugefügt in der Datentabelle wird nicht gegen eine Einschränkung verstößt.</span><span class="sxs-lookup"><span data-stu-id="09387-343">If the new row violates a Constraint it won’t be added to the data table.</span></span>  
  
 <span data-ttu-id="09387-344">Sie können den Index der neuen Zeile mit DataTable.Rows.Find und DataTable.Rows.IndexOf abrufen.</span><span class="sxs-lookup"><span data-stu-id="09387-344">You can get the index of the new row with as DataTable.Rows.Find and DataTable.Rows.IndexOf.</span></span> <span data-ttu-id="09387-345">Weitere Informationen finden Sie unter <xref:System.Data.DataRowCollection> und <xref:System.Data.DataTable.Rows%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-345">See <xref:System.Data.DataRowCollection> and <xref:System.Data.DataTable.Rows%2A> for more information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Initialized;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-346">Tritt nach dem Initialisieren der <see cref="T:System.Data.DataTable" /> auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-346">Occurs after the <see cref="T:System.Data.DataTable" /> is initialized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-347">Weitere Informationen finden Sie unter <xref:System.Data.DataTable.IsInitialized%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-347">For more information, see <xref:System.Data.DataTable.IsInitialized%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-348">Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Data.DataTable" /> initialisiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-348">Gets a value that indicates whether the <see cref="T:System.Data.DataTable" /> is initialized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-349">
            <see langword="true" />, um anzugeben, dass die Initialisierung der Komponente abgeschlossen ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-349">
              <see langword="true" /> to indicate the component has completed initialization; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-350">Gibt den Status der <xref:System.Data.DataTable> während der Erstellung, für die Instanz von Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="09387-350">Returns the status of the <xref:System.Data.DataTable> while it’s being constructed, for instance by Visual Studio.</span></span> <span data-ttu-id="09387-351">Die <xref:System.Data.DataTable.BeginInit%2A> Methode wird auf `false` und <xref:System.Data.DataTable.EndInit%2A> Methode wird auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-351">The <xref:System.Data.DataTable.BeginInit%2A> method sets it to `false` and <xref:System.Data.DataTable.EndInit%2A> method sets it to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-352">Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle, die den angegebenen <see cref="T:System.Data.IDataReader" /> verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-352">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="09387-353">Wenn die <see langword="DataTable" /> bereits Zeilen enthält, werden die eingehenden Daten aus der Datenquelle mit den vorhandenen Zeilen zusammengeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-353">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-354">Die `Load` Methode kann verwendet werden, in mehrere allgemeine Szenarien, darum Abrufen von Daten aus einer bestimmten Datenquelle und den aktuellen Datencontainer hinzugefügt (in diesem Fall eine `DataTable`).</span><span class="sxs-lookup"><span data-stu-id="09387-354">The `Load` method can be used in several common scenarios, all centered around getting data from a specified data source and adding it to the current data container (in this case, a `DataTable`).</span></span> <span data-ttu-id="09387-355">Diese Szenarien beschreiben Standardverfahren für die eine `DataTable`, beschreiben Sie das Update und merge-Verhalten.</span><span class="sxs-lookup"><span data-stu-id="09387-355">These scenarios describe standard usage for a `DataTable`, describing its update and merge behavior.</span></span>  
  
 <span data-ttu-id="09387-356">Ein `DataTable` anhand einer einzigen primären Datenquelle synchronisiert oder aktualisiert.</span><span class="sxs-lookup"><span data-stu-id="09387-356">A `DataTable` synchronizes or updates with a single primary data source.</span></span> <span data-ttu-id="09387-357">Die `DataTable` verfolgt Änderungen, sodass die Synchronisierung mit der primären Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-357">The `DataTable` tracks changes, allowing synchronization with the primary data source.</span></span> <span data-ttu-id="09387-358">Darüber hinaus eine `DataTable` inkrementelle Daten aus einem oder mehreren sekundären Datenquellen akzeptieren können.</span><span class="sxs-lookup"><span data-stu-id="09387-358">In addition, a `DataTable` can accept incremental data from one or more secondary data sources.</span></span> <span data-ttu-id="09387-359">Die `DataTable` ist nicht verantwortlich für das Nachverfolgen von Änderungen um Synchronisierung mit der sekundären Datenquelle zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="09387-359">The `DataTable` isn't responsible for tracking changes in order to allow synchronization with the secondary data source.</span></span>  
  
 <span data-ttu-id="09387-360">Wenn Sie diese beiden hypothetischen Datenquellen, ist ein Benutzer voraussichtlich benötigt eine der folgenden Verhaltensweisen:</span><span class="sxs-lookup"><span data-stu-id="09387-360">Given these two hypothetical data sources, a user is likely to require one of the following behaviors:</span></span>  
  
-   <span data-ttu-id="09387-361">Initialisieren `DataTable` aus einer primären Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-361">Initialize `DataTable` from a primary data source.</span></span> <span data-ttu-id="09387-362">In diesem Szenario wird der Benutzer ein leeres initialisieren möchte `DataTable` mit Werten aus der primären Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-362">In this scenario, the user wants to initialize an empty `DataTable` with values from the primary data source.</span></span> <span data-ttu-id="09387-363">Der Benutzer möchte später Weitergeben von Änderungen an der primären Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-363">Later the user intends to propagate changes back to the primary data source.</span></span>  
  
-   <span data-ttu-id="09387-364">Änderungen beibehalten und erneut über die primäre Datenquelle synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="09387-364">Preserve changes and re-synchronize from the primary data source.</span></span> <span data-ttu-id="09387-365">In diesem Szenario möchte der Benutzer wird die `DataTable` im vorherigen Szenario gefüllt, und führen Sie eine inkrementelle Synchronisierung mit der primären Datenquelle beibehalten der Änderungen der `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-365">In this scenario, the user wants to take the `DataTable` filled in the previous scenario and perform an incremental synchronization with the primary data source, preserving modifications made in the `DataTable`.</span></span>  
  
-   <span data-ttu-id="09387-366">Inkrementelle Datenfeed aus sekundären Datenquellen.</span><span class="sxs-lookup"><span data-stu-id="09387-366">Incremental data feed from secondary data sources.</span></span> <span data-ttu-id="09387-367">In diesem Szenario möchten die Benutzer zum Zusammenführen von Änderungen aus einem oder mehreren sekundären Datenquellen und zurück an die primäre Datenquelle weitergeben.</span><span class="sxs-lookup"><span data-stu-id="09387-367">In this scenario, the user wants to merge changes from one or more secondary data sources, and propagate those changes back to the primary data source.</span></span>  
  
 <span data-ttu-id="09387-368">Die `Load` Methode ermöglicht all diesen Szenarien.</span><span class="sxs-lookup"><span data-stu-id="09387-368">The `Load` method makes all these scenarios possible.</span></span> <span data-ttu-id="09387-369">Alle außer einer der Überladungen dieser Methode Sie einen Auslastungstest Optionsparameter angeben, kann die Verarbeitung, der angibt, wie Zeilen bereits in einer <xref:System.Data.DataTable> mit geladenen Zeilen kombiniert werden.</span><span class="sxs-lookup"><span data-stu-id="09387-369">All but one of the overloads for this method allows you to specify a load option parameter, indicating how rows already in a <xref:System.Data.DataTable> combine with rows being loaded.</span></span> <span data-ttu-id="09387-370">(Die Überladung, die Sie zum Festlegen des Verhaltens ermöglichen keine verwendet die Standardoption für die Auslastung.) Die folgende Tabelle beschreibt die drei Ladeoptionen gebotenen der <xref:System.Data.LoadOption> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="09387-370">(The overload that doesn't allow you to specify the behavior uses the default load option.) The following table describes the three load options provided by the <xref:System.Data.LoadOption> enumeration.</span></span> <span data-ttu-id="09387-371">In jedem Fall gibt die Beschreibung des Verhaltens, wenn der Primärschlüssel einer Zeile in den empfangenen Daten den Primärschlüssel einer vorhandenen Zeile übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="09387-371">In each case, the description indicates the behavior when the primary key of a row in the incoming data matches the primary key of an existing row.</span></span>  
  
|<span data-ttu-id="09387-372">Laden Sie die Option</span><span class="sxs-lookup"><span data-stu-id="09387-372">Load Option</span></span>|<span data-ttu-id="09387-373">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="09387-373">Description</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="09387-374">`PreserveChanges` (Standardwert)</span><span class="sxs-lookup"><span data-stu-id="09387-374">`PreserveChanges` (default)</span></span>|<span data-ttu-id="09387-375">Aktualisiert die ursprüngliche Version der Zeile mit dem Wert der hinzukommenden Zeile an.</span><span class="sxs-lookup"><span data-stu-id="09387-375">Updates the original version of the row with the value of the incoming row.</span></span>|  
|`OverwriteChanges`|<span data-ttu-id="09387-376">Die aktuellen und ursprüngliche Version der Zeile aktualisiert mit dem Wert der hinzukommenden Zeile.</span><span class="sxs-lookup"><span data-stu-id="09387-376">Updates the current and original versions of the row with the value of the incoming row.</span></span>|  
|`Upsert`|<span data-ttu-id="09387-377">Aktualisiert die aktuelle Version der Zeile mit dem Wert der hinzukommenden Zeile an.</span><span class="sxs-lookup"><span data-stu-id="09387-377">Updates the current version of the row with the value of the incoming row.</span></span>|  
  
 <span data-ttu-id="09387-378">Im Allgemeinen die `PreserveChanges` und `OverwriteChanges` Optionen dienen für Szenarien, in denen der Benutzer synchronisieren muss, die `DataSet` und die Änderungen mit der primären Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-378">In general, the `PreserveChanges` and `OverwriteChanges` options are intended for scenarios in which the user needs to synchronize the `DataSet` and its changes with the primary data source.</span></span> <span data-ttu-id="09387-379">Die `Upsert` Option erleichtert das Aggregieren Änderungen aus einem oder mehreren sekundären Datenquellen.</span><span class="sxs-lookup"><span data-stu-id="09387-379">The `Upsert` option facilitates aggregating changes from one or more secondary data sources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-380">Das folgende Beispiel veranschaulicht einige der Probleme, die beim Aufruf der <xref:System.Data.DataTable.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-380">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="09387-381">Im Beispiel zunächst schwerpunktmäßig schemaprobleme, einschließlich Ableiten eines Schemas aus dem geladenen <xref:System.Data.IDataReader>, und klicken Sie dann zur Behandlung von inkompatible Schemas und Schemas mit fehlenden oder zusätzliche Spalten.</span><span class="sxs-lookup"><span data-stu-id="09387-381">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="09387-382">Im Beispiel wird schwerpunktmäßig dann Datenprobleme, einschließlich der Handhabung der verschiedenen Optionen für das Laden.</span><span class="sxs-lookup"><span data-stu-id="09387-382">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-383">In diesem Beispiel wird gezeigt, wie mit einer der überladenen Versionen der `Load`.</span><span class="sxs-lookup"><span data-stu-id="09387-383">This example shows how to use one of the overloaded versions of `Load`.</span></span> <span data-ttu-id="09387-384">Weitere Beispiele für die Verfügbarkeit, finden Sie unter den einzelnen Überladung-Themen.</span><span class="sxs-lookup"><span data-stu-id="09387-384">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.Load" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (reader As IDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="09387-385">Ein <see cref="T:System.Data.IDataReader" />, der ein Resultset bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-385">An <see cref="T:System.Data.IDataReader" /> that provides a result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-386">Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle, die den angegebenen <see cref="T:System.Data.IDataReader" /> verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-386">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="09387-387">Wenn die <see cref="T:System.Data.DataTable" /> bereits Zeilen enthält, werden die eingehenden Daten aus der Datenquelle mit den vorhandenen Zeilen zusammengeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-387">If the <see cref="T:System.Data.DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-388">Die <xref:System.Data.DataTable.Load%2A> Methode nutzt das erste Resultset aus dem geladenen <xref:System.Data.IDataReader>, und legt Sie die Position des Readers nach dem erfolgreichen Abschluss des Vorgangs auf das nächste Resultset, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="09387-388">The <xref:System.Data.DataTable.Load%2A> method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="09387-389">Beim Konvertieren von Daten, die `Load` Methode verwendet die gleichen Konvertierungsregeln als die <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-389">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="09387-390">Die <xref:System.Data.DataTable.Load%2A> Methode muss berücksichtigt drei bestimmte Probleme beim Laden der Daten aus einer <xref:System.Data.IDataReader> Instanz: Schema, Daten und Ereignisvorgänge.</span><span class="sxs-lookup"><span data-stu-id="09387-390">The <xref:System.Data.DataTable.Load%2A> method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="09387-391">Bei der Arbeit mit dem Schema der <xref:System.Data.DataTable.Load%2A> Methode kann Bedingungen auftreten, wie in der folgenden Tabelle beschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-391">When working with the schema, the <xref:System.Data.DataTable.Load%2A> method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="09387-392">Die Schemavorgänge stattfinden für alle importierten Resultsets, auch solche, die keine Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="09387-392">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="09387-393">Bedingung</span><span class="sxs-lookup"><span data-stu-id="09387-393">Condition</span></span>|<span data-ttu-id="09387-394">Verhalten</span><span class="sxs-lookup"><span data-stu-id="09387-394">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="09387-395">Die <xref:System.Data.DataTable> verfügt über kein Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-395">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="09387-396">Die <xref:System.Data.DataTable.Load%2A> -Methode leitet das Schema basierend auf das Resultset aus dem importierten <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="09387-396">The <xref:System.Data.DataTable.Load%2A> method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="09387-397">Die <xref:System.Data.DataTable> ein Schema aufweist, aber es ist nicht kompatibel mit dem Schema geladen.</span><span class="sxs-lookup"><span data-stu-id="09387-397">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="09387-398">Die <xref:System.Data.DataTable.Load%2A> Methode löst eine Ausnahme, die bestimmte Fehler, der auftritt, beim Laden von Daten in das inkompatible Schema entspricht.</span><span class="sxs-lookup"><span data-stu-id="09387-398">The <xref:System.Data.DataTable.Load%2A> method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="09387-399">Die Schemas sind kompatibel, aber das geladene ResultSetSchema enthält, Spalten, die in nicht vorhanden sind die <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-399">The schemas are compatible, but the loaded result set schema contains columns that do not exist in the <xref:System.Data.DataTable>.</span></span>|<span data-ttu-id="09387-400">Die <xref:System.Data.DataTable.Load%2A> Methode fügt die zusätzlichen Spalten `DataTable`des Schemas.</span><span class="sxs-lookup"><span data-stu-id="09387-400">The <xref:System.Data.DataTable.Load%2A> method adds the extra columns to `DataTable`'s schema.</span></span> <span data-ttu-id="09387-401">Die Methode löst eine Ausnahme aus, wenn die entsprechenden Spalten in der <xref:System.Data.DataTable> Resultset geladen sind und nicht kompatiblen Wert.</span><span class="sxs-lookup"><span data-stu-id="09387-401">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="09387-402">Die Methode ruft auch Einschränkungsinformationen aus dem Resultset für alle hinzugefügten Spalten ab.</span><span class="sxs-lookup"><span data-stu-id="09387-402">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="09387-403">Außer bei Primary Key-Einschränkung, diese Einschränkungsinformationen wird nur verwendet, wenn die aktuelle <xref:System.Data.DataTable> enthält keine Spalten zu Beginn des Ladevorgangs ausführt.</span><span class="sxs-lookup"><span data-stu-id="09387-403">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="09387-404">Die Schemas sind kompatibel, aber das geladene ResultSetSchema enthält weniger Spalten als die `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-404">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="09387-405">Wenn eine fehlende Spalte einen Standardwert definiert oder der Datentyp der Spalte NULL-Werte zulässt, ist die <xref:System.Data.DataTable.Load%2A> Methode ermöglicht die Zeilen hinzugefügt werden, ersetzen die Standardeinstellung oder `null` Wert für die Spalte fehlt.</span><span class="sxs-lookup"><span data-stu-id="09387-405">If a missing column has a default value defined or the column's data type is nullable, the <xref:System.Data.DataTable.Load%2A> method allows the rows to be added, substituting the default or `null` value for the missing column.</span></span> <span data-ttu-id="09387-406">Wenn kein Standardwert oder `null` verwendet werden können, und klicken Sie dann die `Load` Methode löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="09387-406">If no default value or `null` can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="09387-407">Wenn kein bestimmter Standardwert angegeben wurde, die `Load` -Methode verwendet die `null` Wert als der implizite Standardwert.</span><span class="sxs-lookup"><span data-stu-id="09387-407">If no specific default value has been supplied, the `Load` method uses the `null` value as the implied default value.</span></span>|  
  
 <span data-ttu-id="09387-408">Anzusehen das Verhalten von der `Load` Methode in Bezug auf Datenvorgänge, berücksichtigen, die jede Zeile innerhalb einer <xref:System.Data.DataTable> behält den aktuellen Wert und der ursprüngliche Wert für jede Spalte.</span><span class="sxs-lookup"><span data-stu-id="09387-408">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="09387-409">Diese Werte können identisch sein, oder möglicherweise anders, wenn die Daten in die Zeile seit füllen geändert wurde die `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-409">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span>  <span data-ttu-id="09387-410">Weitere Informationen finden Sie unter [Zeilenstatus und Zeilenversionen](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span><span class="sxs-lookup"><span data-stu-id="09387-410">For more information, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="09387-411">Diese Version von den `Load` Methode versucht, die aktuellen Werten in jeder Zeile wird den ursprünglichen Wert unverändert beibehalten.</span><span class="sxs-lookup"><span data-stu-id="09387-411">This version of the `Load` method attempts to preserve the current values in each row, leaving the original value intact.</span></span> <span data-ttu-id="09387-412">(Sie ggf. eine genauere Steuerung des Verhaltens der eingehenden Daten finden Sie unter <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) Wenn die vorhandene Zeile und die empfangene Zeile entsprechende primäre Schlüsselwerte enthalten, die Zeile mit den aktuellen Wert der Zeile Status verarbeitet, andernfalls wird dies als eine neue Zeile behandelt.</span><span class="sxs-lookup"><span data-stu-id="09387-412">(If you want finer control over the behavior of incoming data, see <xref:System.Data.DataTable.Load%2A?displayProperty=nameWithType>.) If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="09387-413">In Bezug auf Ereignisvorgänge die <xref:System.Data.DataTable.RowChanging> Ereignis tritt auf, bevor jede Zeile geändert wird, und die <xref:System.Data.DataTable.RowChanged> Ereignis tritt auf, nachdem jede Zeile geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-413">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="09387-414">In jedem Fall die <xref:System.Data.DataRowChangeEventArgs.Action%2A> Eigenschaft von der <xref:System.Data.DataRowChangeEventArgs> an den Ereignishandler übergebene Instanz enthält Informationen über die jeweilige Aktion, die dem Ereignis zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="09387-414">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="09387-415">Dieser Wert hängt von den Zustand der Zeile vor der Ladevorgang ab.</span><span class="sxs-lookup"><span data-stu-id="09387-415">This action value depends on the state of the row before the load operation.</span></span> <span data-ttu-id="09387-416">In jedem Fall beide Ereignisse auftreten, und die Aktion ist für beide identisch.</span><span class="sxs-lookup"><span data-stu-id="09387-416">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="09387-417">Die Aktion kann auf die aktuelle oder die ursprüngliche Version jeder Zeile oder beides, abhängig von den aktuellen Zeilenzustand angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="09387-417">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="09387-418">In der folgenden Tabelle wird das Verhalten für die `Load` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-418">The following table displays behavior for the `Load` method.</span></span> <span data-ttu-id="09387-419">Die letzte Zeile (mit der Bezeichnung "(nicht vorhanden)") beschreibt das Verhalten für eingehende Zeilen, die keiner vorhandene Zeile nicht übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="09387-419">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="09387-420">Jede Zelle in dieser Tabelle beschreibt die aktuellen und ursprünglichen Wert für ein Feld innerhalb einer Zeile zusammen mit den <xref:System.Data.DataRowState> für den Wert nach der `Load` -Methode abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-420">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span> <span data-ttu-id="09387-421">In diesem Fall die Methode lässt nicht den Load-Option anzugeben, und die standardmäßige `PreserveChanges`.</span><span class="sxs-lookup"><span data-stu-id="09387-421">In this case, the method doesn't allow you to indicate the load option, and uses the default, `PreserveChanges`.</span></span>  
  
|<span data-ttu-id="09387-422">Vorhandene DataRowState</span><span class="sxs-lookup"><span data-stu-id="09387-422">Existing DataRowState</span></span>|<span data-ttu-id="09387-423">Werte, nach dem `Load` -Methode und Ereignisaktion</span><span class="sxs-lookup"><span data-stu-id="09387-423">Values after `Load` method, and event action</span></span>|  
|---------------------------|--------------------------------------------------|  
|<span data-ttu-id="09387-424">Hinzugefügt</span><span class="sxs-lookup"><span data-stu-id="09387-424">Added</span></span>|<span data-ttu-id="09387-425">Aktuelle = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-425">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-426">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-426">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-427">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-427">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-428">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-428">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="09387-429">Modified</span><span class="sxs-lookup"><span data-stu-id="09387-429">Modified</span></span>|<span data-ttu-id="09387-430">Aktuelle = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-430">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-431">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-431">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-432">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-432">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-433">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-433">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="09387-434">Deleted</span><span class="sxs-lookup"><span data-stu-id="09387-434">Deleted</span></span>|<span data-ttu-id="09387-435">Aktuelle = \<nicht verfügbar ></span><span class="sxs-lookup"><span data-stu-id="09387-435">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="09387-436">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-436">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-437">Status = \<gelöscht ></span><span class="sxs-lookup"><span data-stu-id="09387-437">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="09387-438">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-438">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="09387-439">Unchanged</span><span class="sxs-lookup"><span data-stu-id="09387-439">Unchanged</span></span>|<span data-ttu-id="09387-440">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-440">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-441">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-441">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-442">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-442">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-443">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-443">RowAction = ChangeCurrentAndOriginal</span></span>|  
|<span data-ttu-id="09387-444">(Nicht vorhanden)</span><span class="sxs-lookup"><span data-stu-id="09387-444">(Not present)</span></span>|<span data-ttu-id="09387-445">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-445">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-446">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-446">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-447">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-447">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-448">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-448">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="09387-449">Werte in einer <xref:System.Data.DataColumn> kann durch Verwendung von Eigenschaften, eingeschränkt werden, z. B. <xref:System.Data.DataColumn.ReadOnly%2A> und <xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-449">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="09387-450">Die `Load` -Methode behandelt solche Spalten in einer Weise, die konsistent mit dem Verhalten, indem Sie die Eigenschaften der Spalte definiert ist.</span><span class="sxs-lookup"><span data-stu-id="09387-450">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="09387-451">Die schreibgeschützte nur Einschränkung für eine <xref:System.Data.DataColumn> gilt nur für Änderungen, die im Arbeitsspeicher auftreten.</span><span class="sxs-lookup"><span data-stu-id="09387-451">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="09387-452">Die `Load` Methode überschreibt die schreibgeschützte Spaltenwerte bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="09387-452">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="09387-453">Bestimmen, welche Version des primären Schlüsselfelds zum Vergleichen von der aktuellen Zeile mit einer eingehenden Zeile, die `Load` Methode verwendet die ursprüngliche Version des primären Schlüsselwert innerhalb einer Zeile aus, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="09387-453">To determine which version of the primary key field to use for comparing the current row with an incoming row, the `Load` method uses the original version of the primary key value within a row, if it exists.</span></span> <span data-ttu-id="09387-454">Andernfalls die `Load` Methode verwendet die aktuelle Version des Feld für den Primärschlüssel.</span><span class="sxs-lookup"><span data-stu-id="09387-454">Otherwise, the `Load` method uses the current version of the primary key field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-455">Das folgende Beispiel veranschaulicht einige der Probleme, die beim Aufruf der <xref:System.Data.DataTable.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-455">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="09387-456">Im Beispiel zunächst schwerpunktmäßig schemaprobleme, einschließlich Ableiten eines Schemas aus dem geladenen <xref:System.Data.IDataReader>, und klicken Sie dann zur Behandlung von inkompatible Schemas und Schemas mit fehlenden oder zusätzliche Spalten.</span><span class="sxs-lookup"><span data-stu-id="09387-456">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="09387-457">Das Beispiel ruft dann die `Load` -Methode, Anzeigen der Daten vor und nach dem Ladevorgang.</span><span class="sxs-lookup"><span data-stu-id="09387-457">The example then calls the `Load` method, displaying the data both before and after the load operation.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.IDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.IDataReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="09387-458">Ein <see cref="T:System.Data.IDataReader" />, der ein oder mehrere Resultsets bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-458">An <see cref="T:System.Data.IDataReader" /> that provides one or more result sets.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="09387-459">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in der <see cref="T:System.Data.DataTable" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-459">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-460">Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle, die den angegebenen <see cref="T:System.Data.IDataReader" /> verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-460">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" />.</span>
          </span>
          <span data-ttu-id="09387-461">Wenn die <see langword="DataTable" /> bereits Zeilen enthält, werden die eingehenden Daten gemäß dem Wert des <paramref name="loadOption" />-Parameters aus der Datenquelle mit den vorhandenen Zeilen zusammengeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-461">If the <see langword="DataTable" /> already contains rows, the incoming data from the data source is merged with the existing rows according to the value of the <paramref name="loadOption" /> parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-462">Die `Load` Methode nutzt das erste Resultset aus dem geladenen <xref:System.Data.IDataReader>, und legt Sie die Position des Readers nach dem erfolgreichen Abschluss des Vorgangs auf das nächste Resultset, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="09387-462">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="09387-463">Beim Konvertieren von Daten, die `Load` Methode verwendet die gleichen Konvertierungsregeln als die <xref:System.Data.Common.DbDataAdapter.Fill%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-463">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method.</span></span>  
  
 <span data-ttu-id="09387-464">Die `Load` Methode muss berücksichtigt drei bestimmte Probleme beim Laden der Daten aus einer <xref:System.Data.IDataReader> Instanz: Schema, Daten und Ereignisvorgänge.</span><span class="sxs-lookup"><span data-stu-id="09387-464">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="09387-465">Bei der Arbeit mit dem Schema der `Load` Methode kann Bedingungen auftreten, wie in der folgenden Tabelle beschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-465">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="09387-466">Die Schemavorgänge stattfinden für alle importierten Resultsets, auch solche, die keine Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="09387-466">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="09387-467">Bedingung</span><span class="sxs-lookup"><span data-stu-id="09387-467">Condition</span></span>|<span data-ttu-id="09387-468">Verhalten</span><span class="sxs-lookup"><span data-stu-id="09387-468">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="09387-469">Die <xref:System.Data.DataTable> verfügt über kein Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-469">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="09387-470">Die `Load` -Methode leitet das Schema basierend auf das Resultset aus dem importierten <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="09387-470">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="09387-471">Die <xref:System.Data.DataTable> ein Schema aufweist, aber es ist nicht kompatibel mit dem Schema geladen.</span><span class="sxs-lookup"><span data-stu-id="09387-471">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="09387-472">Die `Load` Methode löst eine Ausnahme, die bestimmte Fehler, der auftritt, beim Laden von Daten in das inkompatible Schema entspricht.</span><span class="sxs-lookup"><span data-stu-id="09387-472">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="09387-473">Die Schemas sind kompatibel, aber das geladene ResultSetSchema enthält, Spalten, die in nicht vorhanden waren die `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-473">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="09387-474">Die `Load` Methode fügt die zusätzlichen Spalten `DataTable`des Schemas.</span><span class="sxs-lookup"><span data-stu-id="09387-474">The `Load` method adds the extra columns to `DataTable`’s schema.</span></span> <span data-ttu-id="09387-475">Die Methode löst eine Ausnahme aus, wenn die entsprechenden Spalten in der <xref:System.Data.DataTable> Resultset geladen sind und nicht kompatiblen Wert.</span><span class="sxs-lookup"><span data-stu-id="09387-475">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="09387-476">Die Methode ruft auch Einschränkungsinformationen aus dem Resultset für alle hinzugefügten Spalten ab.</span><span class="sxs-lookup"><span data-stu-id="09387-476">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="09387-477">Außer bei Primary Key-Einschränkung, diese Einschränkungsinformationen wird nur verwendet, wenn die aktuelle <xref:System.Data.DataTable> enthält keine Spalten zu Beginn des Ladevorgangs ausführt.</span><span class="sxs-lookup"><span data-stu-id="09387-477">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="09387-478">Die Schemas sind kompatibel, aber das geladene ResultSetSchema enthält weniger Spalten als die `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-478">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="09387-479">Wenn eine fehlende Spalte einen Standardwert definiert oder der Datentyp der Spalte NULL-Werte zulässt, ist die `Load` Methode ermöglicht die Zeilen hinzugefügt werden, ersetzen den Default und Null-Wert für die fehlende Spalte.</span><span class="sxs-lookup"><span data-stu-id="09387-479">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="09387-480">Wenn kein Standardwert oder Null verwendet werden kann, und klicken Sie dann die `Load` Methode löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="09387-480">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="09387-481">Wenn kein bestimmter Standardwert angegeben wurde, die `Load` Methode wird den null-Wert als der implizite Standardwert verwendet.</span><span class="sxs-lookup"><span data-stu-id="09387-481">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="09387-482">Anzusehen das Verhalten von der `Load` Methode in Bezug auf Datenvorgänge, berücksichtigen, die jede Zeile innerhalb einer <xref:System.Data.DataTable> behält den aktuellen Wert und der ursprüngliche Wert für jede Spalte.</span><span class="sxs-lookup"><span data-stu-id="09387-482">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="09387-483">Diese Werte können identisch sein, oder möglicherweise anders, wenn die Daten in die Zeile seit füllen geändert wurde die `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-483">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="09387-484">Finden Sie unter [Zeilenstatus und Zeilenversionen](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) für Weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="09387-484">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="09387-485">In diesem Methodenaufruf, der dem angegebenen <xref:System.Data.LoadOption> Parameter wirkt sich auf die Verarbeitung der eingehenden Daten.</span><span class="sxs-lookup"><span data-stu-id="09387-485">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="09387-486">Behandelt die Load-Methode sollte wie Laden von Zeilen, die den gleiche Primärschlüssel wie vorhandene Zeilen haben?</span><span class="sxs-lookup"><span data-stu-id="09387-486">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="09387-487">Sollte es aktuelle Werte, die ursprünglichen Werte oder beides ändern?</span><span class="sxs-lookup"><span data-stu-id="09387-487">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="09387-488">Diese Probleme und vieles mehr, hängen von der `loadOption` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09387-488">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="09387-489">Wenn die vorhandene Zeile und die empfangene Zeile entsprechende primäre Schlüsselwerte enthalten, die Zeile mit den aktuellen Wert der Zeile Status verarbeitet, andernfalls wird dies als eine neue Zeile behandelt.</span><span class="sxs-lookup"><span data-stu-id="09387-489">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="09387-490">In Bezug auf Ereignisvorgänge die <xref:System.Data.DataTable.RowChanging> Ereignis tritt auf, bevor jede Zeile geändert wird, und die <xref:System.Data.DataTable.RowChanged> Ereignis tritt auf, nachdem jede Zeile geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-490">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="09387-491">In jedem Fall die <xref:System.Data.DataRowChangeEventArgs.Action%2A> Eigenschaft von der <xref:System.Data.DataRowChangeEventArgs> an den Ereignishandler übergebene Instanz enthält Informationen über die jeweilige Aktion, die dem Ereignis zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="09387-491">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="09387-492">Dieser Wert hängt vom Status der Zeile vor der Ladevorgang.</span><span class="sxs-lookup"><span data-stu-id="09387-492">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="09387-493">In jedem Fall beide Ereignisse auftreten, und die Aktion ist für beide identisch.</span><span class="sxs-lookup"><span data-stu-id="09387-493">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="09387-494">Die Aktion kann auf die aktuelle oder die ursprüngliche Version jeder Zeile oder beides, abhängig von den aktuellen Zeilenzustand angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="09387-494">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="09387-495">In der folgenden Tabelle wird das Verhalten für die Load-Methode, die bei einem Aufruf mit einzelnen der `LoadOption` Werte und zeigt außerdem, wie die Werte mit dem Zeilenstatus für die zu ladenden Zeile interagieren.</span><span class="sxs-lookup"><span data-stu-id="09387-495">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="09387-496">Die letzte Zeile (mit der Bezeichnung "(nicht vorhanden)") beschreibt das Verhalten für eingehende Zeilen, die keiner vorhandene Zeile nicht übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="09387-496">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="09387-497">Jede Zelle in dieser Tabelle beschreibt die aktuellen und ursprünglichen Wert für ein Feld innerhalb einer Zeile zusammen mit den <xref:System.Data.DataRowState> für den Wert nach der `Load` -Methode abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-497">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="09387-498">Vorhandene DataRowState</span><span class="sxs-lookup"><span data-stu-id="09387-498">Existing DataRowState</span></span>|<span data-ttu-id="09387-499">Upsert</span><span class="sxs-lookup"><span data-stu-id="09387-499">Upsert</span></span>|<span data-ttu-id="09387-500">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="09387-500">OverwriteChanges</span></span>|<span data-ttu-id="09387-501">PreserveChanges (Standardverhalten)</span><span class="sxs-lookup"><span data-stu-id="09387-501">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="09387-502">Hinzugefügt</span><span class="sxs-lookup"><span data-stu-id="09387-502">Added</span></span>|<span data-ttu-id="09387-503">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-503">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-504">Ursprüngliche = -\<nicht verfügbar ></span><span class="sxs-lookup"><span data-stu-id="09387-504">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="09387-505">Status = \<hinzugefügt ></span><span class="sxs-lookup"><span data-stu-id="09387-505">State = \<Added></span></span><br /><br /> <span data-ttu-id="09387-506">RowAction = ändern</span><span class="sxs-lookup"><span data-stu-id="09387-506">RowAction = Change</span></span>|<span data-ttu-id="09387-507">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-507">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-508">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-508">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-509">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-509">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-510">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-510">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-511">Aktuelle = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-511">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-512">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-512">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-513">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-513">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-514">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-514">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="09387-515">Modified</span><span class="sxs-lookup"><span data-stu-id="09387-515">Modified</span></span>|<span data-ttu-id="09387-516">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-516">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-517">Ursprüngliche = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-517">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-518">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-518">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-519">RowAction = ändern</span><span class="sxs-lookup"><span data-stu-id="09387-519">RowAction = Change</span></span>|<span data-ttu-id="09387-520">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-520">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-521">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-521">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-522">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-522">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-523">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-523">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-524">Aktuelle = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-524">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-525">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-525">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-526">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-526">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-527">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-527">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="09387-528">eleted</span><span class="sxs-lookup"><span data-stu-id="09387-528">eleted</span></span>|<span data-ttu-id="09387-529">(Last ist nicht auf Zeilen auswirken, die gelöscht)</span><span class="sxs-lookup"><span data-stu-id="09387-529">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="09387-530">Aktuelle =---</span><span class="sxs-lookup"><span data-stu-id="09387-530">Current = ---</span></span><br /><br /> <span data-ttu-id="09387-531">Ursprüngliche = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-531">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-532">Status = \<gelöscht ></span><span class="sxs-lookup"><span data-stu-id="09387-532">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="09387-533">(Neue Zeile wird mit den folgenden Merkmalen hinzugefügt)</span><span class="sxs-lookup"><span data-stu-id="09387-533">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="09387-534">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-534">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-535">Ursprüngliche = \<nicht verfügbar ></span><span class="sxs-lookup"><span data-stu-id="09387-535">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="09387-536">Status = \<hinzugefügt ></span><span class="sxs-lookup"><span data-stu-id="09387-536">State = \<Added></span></span><br /><br /> <span data-ttu-id="09387-537">RowAction = hinzufügen</span><span class="sxs-lookup"><span data-stu-id="09387-537">RowAction = Add</span></span>|<span data-ttu-id="09387-538">Löschvorgang rückgängig zu machen und</span><span class="sxs-lookup"><span data-stu-id="09387-538">Undo delete and</span></span><br /><br /> <span data-ttu-id="09387-539">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-539">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-540">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-540">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-541">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-541">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-542">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-542">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-543">Aktuelle = \<nicht verfügbar ></span><span class="sxs-lookup"><span data-stu-id="09387-543">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="09387-544">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-544">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-545">Status = \<gelöscht ></span><span class="sxs-lookup"><span data-stu-id="09387-545">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="09387-546">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-546">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="09387-547">Unchanged</span><span class="sxs-lookup"><span data-stu-id="09387-547">Unchanged</span></span>|<span data-ttu-id="09387-548">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-548">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-549">Ursprüngliche = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-549">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-550">Wenn der neue Wert ist identisch mit den vorhandenen Wert dann</span><span class="sxs-lookup"><span data-stu-id="09387-550">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="09387-551">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-551">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-552">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="09387-552">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="09387-553">Else</span><span class="sxs-lookup"><span data-stu-id="09387-553">Else</span></span><br /><br /> <span data-ttu-id="09387-554">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-554">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-555">RowAction = ändern</span><span class="sxs-lookup"><span data-stu-id="09387-555">RowAction = Change</span></span>|<span data-ttu-id="09387-556">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-556">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-557">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-557">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-558">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-558">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-559">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-559">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-560">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-560">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-561">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-561">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-562">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-562">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-563">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-563">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="09387-564">Nicht vorhanden)</span><span class="sxs-lookup"><span data-stu-id="09387-564">Not present)</span></span>|<span data-ttu-id="09387-565">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-565">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-566">Ursprüngliche = \<nicht verfügbar ></span><span class="sxs-lookup"><span data-stu-id="09387-566">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="09387-567">Status = \<hinzugefügt ></span><span class="sxs-lookup"><span data-stu-id="09387-567">State = \<Added></span></span><br /><br /> <span data-ttu-id="09387-568">RowAction = hinzufügen</span><span class="sxs-lookup"><span data-stu-id="09387-568">RowAction = Add</span></span>|<span data-ttu-id="09387-569">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-569">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-570">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-570">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-571">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-571">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-572">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-572">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-573">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-573">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-574">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-574">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-575">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-575">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-576">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-576">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="09387-577">Werte in einer <xref:System.Data.DataColumn> kann durch Verwendung von Eigenschaften, eingeschränkt werden, z. B. <xref:System.Data.DataColumn.ReadOnly%2A> und <xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-577">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="09387-578">Die `Load` -Methode behandelt solche Spalten in einer Weise, die konsistent mit dem Verhalten, indem Sie die Eigenschaften der Spalte definiert ist.</span><span class="sxs-lookup"><span data-stu-id="09387-578">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="09387-579">Die schreibgeschützte nur Einschränkung für eine <xref:System.Data.DataColumn> gilt nur für Änderungen, die im Arbeitsspeicher auftreten.</span><span class="sxs-lookup"><span data-stu-id="09387-579">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="09387-580">Die `Load` Methode überschreibt die schreibgeschützte Spaltenwerte bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="09387-580">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="09387-581">Wenn Sie die Optionen OverwriteChanges oder PreserveChanges, beim Aufrufen angeben der `Load` -Methode, und klicken Sie dann auf der Annahme besteht, dass die eingehenden Daten stammen die `DataTable`des primäre Datenquelle und der DataTable Änderungen nachverfolgt und weitergeben können die Änderungen werden wieder an die Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-581">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="09387-582">Wenn Sie die Upsert-Option auswählen, wird davon ausgegangen, dass die Daten aus einer sekundären Datenquelle, z. B. Daten von einer Komponente der mittleren Ebene stammen, z. B. von einem Benutzer geändert.</span><span class="sxs-lookup"><span data-stu-id="09387-582">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="09387-583">In diesem Fall wird von die Annahme, dass die Absicht zum Aggregieren von Daten aus einem oder mehreren Datenquellen in ist die `DataTable`, und klicken Sie dann möglicherweise die Daten zurück in die primäre Datenquelle übertragen.</span><span class="sxs-lookup"><span data-stu-id="09387-583">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="09387-584">Die <xref:System.Data.LoadOption> Parameter wird verwendet, um zu bestimmen die spezifische Version der Zeile, die für den primären Schlüssel Vergleich verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="09387-584">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="09387-585">In der folgenden Tabelle enthält die Details an.</span><span class="sxs-lookup"><span data-stu-id="09387-585">The table below provides the details.</span></span>  
  
|<span data-ttu-id="09387-586">Laden Sie die option</span><span class="sxs-lookup"><span data-stu-id="09387-586">Load option</span></span>|<span data-ttu-id="09387-587">DataRow-Version, die für den primären Schlüssel Vergleich</span><span class="sxs-lookup"><span data-stu-id="09387-587">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="09387-588">Originalversion, falls vorhanden, andernfalls die aktuelle version</span><span class="sxs-lookup"><span data-stu-id="09387-588">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="09387-589">Originalversion, falls vorhanden, andernfalls die aktuelle version</span><span class="sxs-lookup"><span data-stu-id="09387-589">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="09387-590">Aktuelle Version, falls vorhanden, andernfalls die ursprüngliche version</span><span class="sxs-lookup"><span data-stu-id="09387-590">Current version, if it exists, otherwise Original version</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="09387-591">Das folgende Beispiel veranschaulicht einige der Probleme, die beim Aufruf der <xref:System.Data.DataTable.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-591">The following example demonstrates several of the issues involved with calling the <xref:System.Data.DataTable.Load%2A> method.</span></span> <span data-ttu-id="09387-592">Im Beispiel zunächst schwerpunktmäßig schemaprobleme, einschließlich Ableiten eines Schemas aus dem geladenen <xref:System.Data.IDataReader>, und klicken Sie dann zur Behandlung von inkompatible Schemas und Schemas mit fehlenden oder zusätzliche Spalten.</span><span class="sxs-lookup"><span data-stu-id="09387-592">First, the example focuses on schema issues, including inferring a schema from the loaded <xref:System.Data.IDataReader>, and then handling incompatible schemas, and schemas with missing or additional columns.</span></span> <span data-ttu-id="09387-593">Im Beispiel wird schwerpunktmäßig dann Datenprobleme, einschließlich der Handhabung der verschiedenen Optionen für das Laden.</span><span class="sxs-lookup"><span data-stu-id="09387-593">The example then focuses on data issues, including handling the various loading options.</span></span>  
  
 [!code-csharp[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.LoadOption#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.LoadOption/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual void Load (System.Data.IDataReader reader, System.Data.LoadOption loadOption, System.Data.FillErrorEventHandler errorHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Data.IDataReader reader, valuetype System.Data.LoadOption loadOption, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Load(System.Data.IDataReader,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Load(System::Data::IDataReader ^ reader, System::Data::LoadOption loadOption, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.IDataReader" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="09387-594">Ein <see cref="T:System.Data.IDataReader" />, der ein Resultset bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-594">A <see cref="T:System.Data.IDataReader" /> that provides a result set.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="09387-595">Ein Wert aus der <see cref="T:System.Data.LoadOption" />-Enumeration, der angibt, wie bereits in der <see cref="T:System.Data.DataTable" /> vorhandene Zeilen mit eingehenden Zeilen kombiniert werden, die denselben Primärschlüssel aufweisen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-595">A value from the <see cref="T:System.Data.LoadOption" /> enumeration that indicates how rows already in the <see cref="T:System.Data.DataTable" /> are combined with incoming rows that share the same primary key.</span>
          </span>
        </param>
        <param name="errorHandler">
          <span data-ttu-id="09387-596">Ein <see cref="T:System.Data.FillErrorEventHandler" />-Delegat, der aufgerufen wird, wenn beim Laden von Daten Fehler auftreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-596">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate to call when an error occurs while loading data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-597">Füllt eine <see cref="T:System.Data.DataTable" /> mit Werten aus einer Datenquelle mit dem bereitgestellten <see cref="T:System.Data.IDataReader" /> und unter Verwendung eines Fehlerbehandlungsdelegaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-597">Fills a <see cref="T:System.Data.DataTable" /> with values from a data source using the supplied <see cref="T:System.Data.IDataReader" /> using an error-handling delegate.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-598">Die `Load` Methode nutzt das erste Resultset aus dem geladenen <xref:System.Data.IDataReader>, und legt Sie die Position des Readers nach dem erfolgreichen Abschluss des Vorgangs auf das nächste Resultset, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="09387-598">The `Load` method consumes the first result set from the loaded <xref:System.Data.IDataReader>, and after successful completion, sets the reader's position to the next result set, if any.</span></span> <span data-ttu-id="09387-599">Beim Konvertieren von Daten, die `Load` Methode verwendet die gleichen Konvertierungsregeln als die <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-599">When converting data, the `Load` method uses the same conversion rules as the <xref:System.Data.Common.DbDataAdapter.Fill%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="09387-600">Die `Load` Methode muss berücksichtigt drei bestimmte Probleme beim Laden der Daten aus einer <xref:System.Data.IDataReader> Instanz: Schema, Daten und Ereignisvorgänge.</span><span class="sxs-lookup"><span data-stu-id="09387-600">The `Load` method must take into account three specific issues when loading the data from an <xref:System.Data.IDataReader> instance: schema, data, and event operations.</span></span> <span data-ttu-id="09387-601">Bei der Arbeit mit dem Schema der `Load` Methode kann Bedingungen auftreten, wie in der folgenden Tabelle beschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-601">When working with the schema, the `Load` method may encounter conditions as described in the following table.</span></span> <span data-ttu-id="09387-602">Die Schemavorgänge stattfinden für alle importierten Resultsets, auch solche, die keine Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="09387-602">The schema operations take place for all imported result sets, even those containing no data.</span></span>  
  
|<span data-ttu-id="09387-603">Bedingung</span><span class="sxs-lookup"><span data-stu-id="09387-603">Condition</span></span>|<span data-ttu-id="09387-604">Verhalten</span><span class="sxs-lookup"><span data-stu-id="09387-604">Behavior</span></span>|  
|---------------|--------------|  
|<span data-ttu-id="09387-605">Die <xref:System.Data.DataTable> verfügt über kein Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-605">The <xref:System.Data.DataTable> has no schema.</span></span>|<span data-ttu-id="09387-606">Die `Load` -Methode leitet das Schema basierend auf das Resultset aus dem importierten <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="09387-606">The `Load` method infers the schema based on the result set from the imported <xref:System.Data.IDataReader>.</span></span>|  
|<span data-ttu-id="09387-607">Die <xref:System.Data.DataTable> ein Schema aufweist, aber es ist nicht kompatibel mit dem Schema geladen.</span><span class="sxs-lookup"><span data-stu-id="09387-607">The <xref:System.Data.DataTable> has a schema, but it is incompatible with the loaded schema.</span></span>|<span data-ttu-id="09387-608">Die `Load` Methode löst eine Ausnahme, die bestimmte Fehler, der auftritt, beim Laden von Daten in das inkompatible Schema entspricht.</span><span class="sxs-lookup"><span data-stu-id="09387-608">The `Load` method throws an exception corresponding to the particular error that occurs when attempting to load data into the incompatible schema.</span></span>|  
|<span data-ttu-id="09387-609">Die Schemas sind kompatibel, aber das geladene ResultSetSchema enthält, Spalten, die in nicht vorhanden waren die `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-609">The schemas are compatible, but the loaded result set schema contains columns that don't exist in the `DataTable`.</span></span>|<span data-ttu-id="09387-610">Die `Load` Methode fügt die zusätzlichen Spalten zu `DataTable`des Schemas.</span><span class="sxs-lookup"><span data-stu-id="09387-610">The `Load` method adds the extra column(s) to `DataTable`’s schema.</span></span> <span data-ttu-id="09387-611">Die Methode löst eine Ausnahme aus, wenn die entsprechenden Spalten in der <xref:System.Data.DataTable> Resultset geladen sind und nicht kompatiblen Wert.</span><span class="sxs-lookup"><span data-stu-id="09387-611">The method throws an exception if corresponding columns in the <xref:System.Data.DataTable> and the loaded result set are not value compatible.</span></span> <span data-ttu-id="09387-612">Die Methode ruft auch Einschränkungsinformationen aus dem Resultset für alle hinzugefügten Spalten ab.</span><span class="sxs-lookup"><span data-stu-id="09387-612">The method also retrieves constraint information from the result set for all added columns.</span></span> <span data-ttu-id="09387-613">Außer bei Primary Key-Einschränkung, diese Einschränkungsinformationen wird nur verwendet, wenn die aktuelle <xref:System.Data.DataTable> enthält keine Spalten zu Beginn des Ladevorgangs ausführt.</span><span class="sxs-lookup"><span data-stu-id="09387-613">Except for the case of Primary Key constraint, this constraint information is used only if the current <xref:System.Data.DataTable> does not contain any columns at the start of the load operation.</span></span>|  
|<span data-ttu-id="09387-614">Die Schemas sind kompatibel, aber das geladene ResultSetSchema enthält weniger Spalten als die `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-614">The schemas are compatible, but the loaded result set schema contains fewer columns than does the `DataTable`.</span></span>|<span data-ttu-id="09387-615">Wenn eine fehlende Spalte einen Standardwert definiert oder der Datentyp der Spalte NULL-Werte zulässt, ist die `Load` Methode ermöglicht die Zeilen hinzugefügt werden, ersetzen den Default und Null-Wert für die fehlende Spalte.</span><span class="sxs-lookup"><span data-stu-id="09387-615">If a missing column has a default value defined or the column's data type is nullable, the `Load` method allows the rows to be added, substituting the default or null value for the missing column.</span></span> <span data-ttu-id="09387-616">Wenn kein Standardwert oder Null verwendet werden kann, und klicken Sie dann die `Load` Methode löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="09387-616">If no default value or null can be used, then the `Load` method throws an exception.</span></span> <span data-ttu-id="09387-617">Wenn kein bestimmter Standardwert angegeben wurde, die `Load` Methode wird den null-Wert als der implizite Standardwert verwendet.</span><span class="sxs-lookup"><span data-stu-id="09387-617">If no specific default value has been supplied, the `Load` method uses the null value as the implied default value.</span></span>|  
  
 <span data-ttu-id="09387-618">Anzusehen das Verhalten von der `Load` Methode in Bezug auf Datenvorgänge, berücksichtigen, die jede Zeile innerhalb einer <xref:System.Data.DataTable> behält den aktuellen Wert und der ursprüngliche Wert für jede Spalte.</span><span class="sxs-lookup"><span data-stu-id="09387-618">Before considering the behavior of the `Load` method in terms of data operations, consider that each row within a <xref:System.Data.DataTable> maintains both the current value and the original value for each column.</span></span> <span data-ttu-id="09387-619">Diese Werte können identisch sein, oder möglicherweise anders, wenn die Daten in die Zeile seit füllen geändert wurde die `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-619">These values may be equivalent, or may be different if the data in the row has been changed since filling the `DataTable`.</span></span> <span data-ttu-id="09387-620">Finden Sie unter [Zeilenstatus und Zeilenversionen](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) für Weitere Informationen.</span><span class="sxs-lookup"><span data-stu-id="09387-620">See [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md) for more information.</span></span>  
  
 <span data-ttu-id="09387-621">In diesem Methodenaufruf, der dem angegebenen <xref:System.Data.LoadOption> Parameter wirkt sich auf die Verarbeitung der eingehenden Daten.</span><span class="sxs-lookup"><span data-stu-id="09387-621">In this method call, the specified <xref:System.Data.LoadOption> parameter influences the processing of the incoming data.</span></span> <span data-ttu-id="09387-622">Behandelt die Load-Methode sollte wie Laden von Zeilen, die den gleiche Primärschlüssel wie vorhandene Zeilen haben?</span><span class="sxs-lookup"><span data-stu-id="09387-622">How should the Load method handle loading rows that have the same primary key as existing rows?</span></span> <span data-ttu-id="09387-623">Sollte es aktuelle Werte, die ursprünglichen Werte oder beides ändern?</span><span class="sxs-lookup"><span data-stu-id="09387-623">Should it modify current values, original values, or both?</span></span> <span data-ttu-id="09387-624">Diese Probleme und vieles mehr, hängen von der `loadOption` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09387-624">These issues, and more, are controlled by the `loadOption` parameter.</span></span>  
  
 <span data-ttu-id="09387-625">Wenn die vorhandene Zeile und die empfangene Zeile entsprechende primäre Schlüsselwerte enthalten, die Zeile mit den aktuellen Wert der Zeile Status verarbeitet, andernfalls wird dies als eine neue Zeile behandelt.</span><span class="sxs-lookup"><span data-stu-id="09387-625">If the existing row and the incoming row contain corresponding primary key values, the row is processed using its current row state value, otherwise it's treated as a new row.</span></span>  
  
 <span data-ttu-id="09387-626">In Bezug auf Ereignisvorgänge die <xref:System.Data.DataTable.RowChanging> Ereignis tritt auf, bevor jede Zeile geändert wird, und die <xref:System.Data.DataTable.RowChanged> Ereignis tritt auf, nachdem jede Zeile geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-626">In terms of event operations, the <xref:System.Data.DataTable.RowChanging> event occurs before each row is changed, and the <xref:System.Data.DataTable.RowChanged> event occurs after each row has been changed.</span></span> <span data-ttu-id="09387-627">In jedem Fall die <xref:System.Data.DataRowChangeEventArgs.Action%2A> Eigenschaft von der <xref:System.Data.DataRowChangeEventArgs> an den Ereignishandler übergebene Instanz enthält Informationen über die jeweilige Aktion, die dem Ereignis zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="09387-627">In each case, the <xref:System.Data.DataRowChangeEventArgs.Action%2A> property of the <xref:System.Data.DataRowChangeEventArgs> instance passed to the event handler contains information about the particular action associated with the event.</span></span> <span data-ttu-id="09387-628">Dieser Wert hängt vom Status der Zeile vor der Ladevorgang.</span><span class="sxs-lookup"><span data-stu-id="09387-628">This action value varies, depending on the state of the row before the load operation.</span></span> <span data-ttu-id="09387-629">In jedem Fall beide Ereignisse auftreten, und die Aktion ist für beide identisch.</span><span class="sxs-lookup"><span data-stu-id="09387-629">In each case, both events occur, and the action is the same for each.</span></span> <span data-ttu-id="09387-630">Die Aktion kann auf die aktuelle oder die ursprüngliche Version jeder Zeile oder beides, abhängig von den aktuellen Zeilenzustand angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="09387-630">The action may be applied to either the current or original version of each row, or both, depending on the current row state.</span></span>  
  
 <span data-ttu-id="09387-631">In der folgenden Tabelle wird das Verhalten für die Load-Methode, die bei einem Aufruf mit einzelnen der `LoadOption` Werte und zeigt außerdem, wie die Werte mit dem Zeilenstatus für die zu ladenden Zeile interagieren.</span><span class="sxs-lookup"><span data-stu-id="09387-631">The following table displays behavior for the Load method when called with each of the `LoadOption` values, and also shows how the values interact with the row state for the row being loaded.</span></span> <span data-ttu-id="09387-632">Die letzte Zeile (mit der Bezeichnung "(nicht vorhanden)") beschreibt das Verhalten für eingehende Zeilen, die keiner vorhandene Zeile nicht übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="09387-632">The final row (labeled "(Not present)") describes the behavior for incoming rows that don't match any existing row.</span></span> <span data-ttu-id="09387-633">Jede Zelle in dieser Tabelle beschreibt die aktuellen und ursprünglichen Wert für ein Feld innerhalb einer Zeile zusammen mit den <xref:System.Data.DataRowState> für den Wert nach der `Load` -Methode abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-633">Each cell in this table describes the current and original value for a field within a row, along with the <xref:System.Data.DataRowState> for the value after the `Load` method has completed.</span></span>  
  
|<span data-ttu-id="09387-634">Vorhandene DataRowState</span><span class="sxs-lookup"><span data-stu-id="09387-634">Existing DataRowState</span></span>|<span data-ttu-id="09387-635">Upsert</span><span class="sxs-lookup"><span data-stu-id="09387-635">Upsert</span></span>|<span data-ttu-id="09387-636">OverwriteChanges</span><span class="sxs-lookup"><span data-stu-id="09387-636">OverwriteChanges</span></span>|<span data-ttu-id="09387-637">PreserveChanges (Standardverhalten)</span><span class="sxs-lookup"><span data-stu-id="09387-637">PreserveChanges (Default behavior)</span></span>|  
|---------------------------|------------|----------------------|------------------------------------------|  
|<span data-ttu-id="09387-638">Hinzugefügt</span><span class="sxs-lookup"><span data-stu-id="09387-638">Added</span></span>|<span data-ttu-id="09387-639">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-639">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-640">Ursprüngliche = -\<nicht verfügbar ></span><span class="sxs-lookup"><span data-stu-id="09387-640">Original = -\<Not available></span></span><br /><br /> <span data-ttu-id="09387-641">Status = \<hinzugefügt ></span><span class="sxs-lookup"><span data-stu-id="09387-641">State = \<Added></span></span><br /><br /> <span data-ttu-id="09387-642">RowAction = ändern</span><span class="sxs-lookup"><span data-stu-id="09387-642">RowAction = Change</span></span>|<span data-ttu-id="09387-643">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-643">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-644">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-644">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-645">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-645">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-646">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-646">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-647">Aktuelle = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-647">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-648">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-648">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-649">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-649">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-650">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-650">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="09387-651">Modified</span><span class="sxs-lookup"><span data-stu-id="09387-651">Modified</span></span>|<span data-ttu-id="09387-652">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-652">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-653">Ursprüngliche = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-653">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-654">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-654">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-655">RowAction = ändern</span><span class="sxs-lookup"><span data-stu-id="09387-655">RowAction = Change</span></span>|<span data-ttu-id="09387-656">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-656">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-657">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-657">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-658">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-658">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-659">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-659">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-660">Aktuelle = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-660">Current = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-661">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-661">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-662">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-662">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-663">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-663">RowAction =ChangeOriginal</span></span>|  
<span data-ttu-id="09387-664">eleted</span><span class="sxs-lookup"><span data-stu-id="09387-664">eleted</span></span>|<span data-ttu-id="09387-665">(Last ist nicht auf Zeilen auswirken, die gelöscht)</span><span class="sxs-lookup"><span data-stu-id="09387-665">(Load does not affect deleted rows)</span></span><br /><br /> <span data-ttu-id="09387-666">Aktuelle =---</span><span class="sxs-lookup"><span data-stu-id="09387-666">Current = ---</span></span><br /><br /> <span data-ttu-id="09387-667">Ursprüngliche = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-667">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-668">Status = \<gelöscht ></span><span class="sxs-lookup"><span data-stu-id="09387-668">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="09387-669">(Neue Zeile wird mit den folgenden Merkmalen hinzugefügt)</span><span class="sxs-lookup"><span data-stu-id="09387-669">(New row is added with the following characteristics)</span></span><br /><br /> <span data-ttu-id="09387-670">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-670">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-671">Ursprüngliche = \<nicht verfügbar ></span><span class="sxs-lookup"><span data-stu-id="09387-671">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="09387-672">Status = \<hinzugefügt ></span><span class="sxs-lookup"><span data-stu-id="09387-672">State = \<Added></span></span><br /><br /> <span data-ttu-id="09387-673">RowAction = hinzufügen</span><span class="sxs-lookup"><span data-stu-id="09387-673">RowAction = Add</span></span>|<span data-ttu-id="09387-674">Löschvorgang rückgängig zu machen und</span><span class="sxs-lookup"><span data-stu-id="09387-674">Undo delete and</span></span><br /><br /> <span data-ttu-id="09387-675">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-675">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-676">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-676">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-677">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-677">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-678">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-678">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-679">Aktuelle = \<nicht verfügbar ></span><span class="sxs-lookup"><span data-stu-id="09387-679">Current = \<Not available></span></span><br /><br /> <span data-ttu-id="09387-680">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-680">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-681">Status = \<gelöscht ></span><span class="sxs-lookup"><span data-stu-id="09387-681">State = \<Deleted></span></span><br /><br /> <span data-ttu-id="09387-682">RowAction = ChangeOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-682">RowAction = ChangeOriginal</span></span>|  
|<span data-ttu-id="09387-683">Unchanged</span><span class="sxs-lookup"><span data-stu-id="09387-683">Unchanged</span></span>|<span data-ttu-id="09387-684">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-684">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-685">Ursprüngliche = \<vorhandenen ></span><span class="sxs-lookup"><span data-stu-id="09387-685">Original = \<Existing></span></span><br /><br /> <span data-ttu-id="09387-686">Wenn der neue Wert ist identisch mit den vorhandenen Wert dann</span><span class="sxs-lookup"><span data-stu-id="09387-686">If new value is the same as the existing value then</span></span><br /><br /> <span data-ttu-id="09387-687">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-687">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-688">RowAction = Nothing</span><span class="sxs-lookup"><span data-stu-id="09387-688">RowAction = Nothing</span></span><br /><br /> <span data-ttu-id="09387-689">Else</span><span class="sxs-lookup"><span data-stu-id="09387-689">Else</span></span><br /><br /> <span data-ttu-id="09387-690">Status = \<geändert ></span><span class="sxs-lookup"><span data-stu-id="09387-690">State = \<Modified></span></span><br /><br /> <span data-ttu-id="09387-691">RowAction = ändern</span><span class="sxs-lookup"><span data-stu-id="09387-691">RowAction = Change</span></span>|<span data-ttu-id="09387-692">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-692">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-693">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-693">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-694">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-694">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-695">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-695">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-696">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-696">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-697">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-697">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-698">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-698">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-699">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-699">RowAction = ChangeCurrentAndOriginal</span></span>|  
<span data-ttu-id="09387-700">Nicht vorhanden)</span><span class="sxs-lookup"><span data-stu-id="09387-700">Not present)</span></span>|<span data-ttu-id="09387-701">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-701">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-702">Ursprüngliche = \<nicht verfügbar ></span><span class="sxs-lookup"><span data-stu-id="09387-702">Original = \<Not available></span></span><br /><br /> <span data-ttu-id="09387-703">Status = \<hinzugefügt ></span><span class="sxs-lookup"><span data-stu-id="09387-703">State = \<Added></span></span><br /><br /> <span data-ttu-id="09387-704">RowAction = hinzufügen</span><span class="sxs-lookup"><span data-stu-id="09387-704">RowAction = Add</span></span>|<span data-ttu-id="09387-705">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-705">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-706">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-706">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-707">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-707">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-708">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-708">RowAction = ChangeCurrentAndOriginal</span></span>|<span data-ttu-id="09387-709">Aktuelle = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-709">Current = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-710">Ursprüngliche = \<eingehende ></span><span class="sxs-lookup"><span data-stu-id="09387-710">Original = \<Incoming></span></span><br /><br /> <span data-ttu-id="09387-711">Status = \<unverändert ></span><span class="sxs-lookup"><span data-stu-id="09387-711">State = \<Unchanged></span></span><br /><br /> <span data-ttu-id="09387-712">RowAction = ChangeCurrentAndOriginal</span><span class="sxs-lookup"><span data-stu-id="09387-712">RowAction = ChangeCurrentAndOriginal</span></span>|  
  
 <span data-ttu-id="09387-713">Werte in einer <xref:System.Data.DataColumn> kann durch Verwendung von Eigenschaften, eingeschränkt werden, z. B. <xref:System.Data.DataColumn.ReadOnly%2A> und <xref:System.Data.DataColumn.AutoIncrement%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-713">Values in a <xref:System.Data.DataColumn> can be constrained through use of properties such as <xref:System.Data.DataColumn.ReadOnly%2A> and <xref:System.Data.DataColumn.AutoIncrement%2A>.</span></span> <span data-ttu-id="09387-714">Die `Load` -Methode behandelt solche Spalten in einer Weise, die konsistent mit dem Verhalten, indem Sie die Eigenschaften der Spalte definiert ist.</span><span class="sxs-lookup"><span data-stu-id="09387-714">The `Load` method handles such columns in a manner that is consistent with the behavior defined by the column's properties.</span></span> <span data-ttu-id="09387-715">Die schreibgeschützte nur Einschränkung für eine <xref:System.Data.DataColumn> gilt nur für Änderungen, die im Arbeitsspeicher auftreten.</span><span class="sxs-lookup"><span data-stu-id="09387-715">The read only constraint on a <xref:System.Data.DataColumn> is applicable only for changes that occur in memory.</span></span> <span data-ttu-id="09387-716">Die `Load` Methode überschreibt die schreibgeschützte Spaltenwerte bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="09387-716">The `Load` method's overwrites the read-only column values, if needed.</span></span>  
  
 <span data-ttu-id="09387-717">Wenn Sie die Optionen OverwriteChanges oder PreserveChanges, beim Aufrufen angeben der `Load` -Methode, und klicken Sie dann auf der Annahme besteht, dass die eingehenden Daten stammen die `DataTable`des primäre Datenquelle und der DataTable Änderungen nachverfolgt und weitergeben können die Änderungen werden wieder an die Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-717">If you specify the OverwriteChanges or PreserveChanges options when calling the `Load` method, then the assumption is made that the incoming data is coming from the `DataTable`'s primary data source, and the DataTable tracks changes and can propagate the changes back to the data source.</span></span> <span data-ttu-id="09387-718">Wenn Sie die Upsert-Option auswählen, wird davon ausgegangen, dass die Daten aus einer sekundären Datenquelle, z. B. Daten von einer Komponente der mittleren Ebene stammen, z. B. von einem Benutzer geändert.</span><span class="sxs-lookup"><span data-stu-id="09387-718">If you select the Upsert option, it is assumed that the data is coming from one of a secondary data source, such as data provided by a middle-tier component, perhaps altered by a user.</span></span> <span data-ttu-id="09387-719">In diesem Fall wird von die Annahme, dass die Absicht zum Aggregieren von Daten aus einem oder mehreren Datenquellen in ist die `DataTable`, und klicken Sie dann möglicherweise die Daten zurück in die primäre Datenquelle übertragen.</span><span class="sxs-lookup"><span data-stu-id="09387-719">In this case, the assumption is that the intent is to aggregate data from one or more data sources in the `DataTable`, and then perhaps propagate the data back to the primary data source.</span></span> <span data-ttu-id="09387-720">Die <xref:System.Data.LoadOption> Parameter wird verwendet, um zu bestimmen die spezifische Version der Zeile, die für den primären Schlüssel Vergleich verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="09387-720">The <xref:System.Data.LoadOption> parameter is used for determining the specific version of the row that is to be used for primary key comparison.</span></span> <span data-ttu-id="09387-721">In der folgenden Tabelle enthält die Details an.</span><span class="sxs-lookup"><span data-stu-id="09387-721">The table below provides the details.</span></span>  
  
|<span data-ttu-id="09387-722">Laden Sie die option</span><span class="sxs-lookup"><span data-stu-id="09387-722">Load option</span></span>|<span data-ttu-id="09387-723">DataRow-Version, die für den primären Schlüssel Vergleich</span><span class="sxs-lookup"><span data-stu-id="09387-723">DataRow version used for primary key comparison</span></span>|  
|-----------------|-----------------------------------------------------|  
|`OverwriteChanges`|<span data-ttu-id="09387-724">Originalversion, falls vorhanden, andernfalls die aktuelle version</span><span class="sxs-lookup"><span data-stu-id="09387-724">Original version, if it exists, otherwise Current version</span></span>|  
|`PreserveChanges`|<span data-ttu-id="09387-725">Originalversion, falls vorhanden, andernfalls die aktuelle version</span><span class="sxs-lookup"><span data-stu-id="09387-725">Original version, if it exists, otherwise Current version</span></span>|  
|`Upsert`|<span data-ttu-id="09387-726">Aktuelle Version, falls vorhanden, andernfalls die ursprüngliche version</span><span class="sxs-lookup"><span data-stu-id="09387-726">Current version, if it exists, otherwise Original version</span></span>|  
  
 <span data-ttu-id="09387-727">Die `errorHandler` Parameter ist ein <xref:System.Data.FillErrorEventHandler> Delegat, der auf eine Prozedur, die aufgerufen wird verweist, tritt ein Fehler beim Laden von Daten.</span><span class="sxs-lookup"><span data-stu-id="09387-727">The `errorHandler` parameter is a <xref:System.Data.FillErrorEventHandler> delegate that refers to a procedure that is called when an error occurs while loading data.</span></span> <span data-ttu-id="09387-728">Die <xref:System.Data.FillErrorEventArgs> an die Prozedur übergebenen Parameter enthält Eigenschaften, die Sie zum Abrufen von Informationen zu den aufgetretenen Fehler, die aktuelle Zeile der Daten zu ermöglichen und die <xref:System.Data.DataTable> gefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="09387-728">The <xref:System.Data.FillErrorEventArgs> parameter passed to the procedure provides properties that allow you to retrieve information about the error that occurred, the current row of data, and the <xref:System.Data.DataTable> being filled.</span></span> <span data-ttu-id="09387-729">Mithilfe dieses Delegatmechanismus, anstatt ein einfacher Try/Catch-Block, können Sie den Fehler ermitteln die Situation zu behandeln, und die Verarbeitung fortzusetzen bei Bedarf.</span><span class="sxs-lookup"><span data-stu-id="09387-729">Using this delegate mechanism, rather than a simpler try/catch block, allows you to determine the error, handle the situation, and continue processing if you like.</span></span> <span data-ttu-id="09387-730">Die <xref:System.Data.FillErrorEventArgs> Parameter liefert eine <xref:System.Data.FillErrorEventArgs.Continue%2A> Eigenschaft: Legen Sie diese Eigenschaft auf `true` , um anzugeben, dass Sie den Fehler behandelt haben und die Verarbeitung ansonsten fortgesetzt werden soll.</span><span class="sxs-lookup"><span data-stu-id="09387-730">The <xref:System.Data.FillErrorEventArgs> parameter supplies a <xref:System.Data.FillErrorEventArgs.Continue%2A> property: set this property to `true` to indicate that you have handled the error and wish to continue processing.</span></span> <span data-ttu-id="09387-731">Legen Sie die Eigenschaft auf `false` um anzugeben, dass die Verarbeitung angehalten werden soll.</span><span class="sxs-lookup"><span data-stu-id="09387-731">Set the property to `false` to indicate that you wish to halt processing.</span></span> <span data-ttu-id="09387-732">Beachten Sie das Festlegen der Eigenschaft auf `false` bewirkt, dass den Code, der das Problem, um eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-732">Be aware that setting the property to `false` causes the code that triggered the problem to throw an exception.</span></span>  
  
   
  
## Examples  
 [!code-csharp[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableLoad.ErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableLoad.ErrorEventHandler/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadDataRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-733">Sucht eine bestimmte Zeile und aktualisiert diese.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-733">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="09387-734">Wenn keine übereinstimmende Zeile gefunden werden kann, wird eine neue Zeile mit den angegebenen Werten erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-734">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, bool fAcceptChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, bool fAcceptChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadDataRow (values As Object(), fAcceptChanges As Boolean) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, bool fAcceptChanges);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="fAcceptChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="09387-735">Ein Array von Werten, mit denen die neue Zeile erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-735">An array of values used to create the new row.</span>
          </span>
        </param>
        <param name="fAcceptChanges">
          <span data-ttu-id="09387-736">
            <see langword="true" />, um Änderungen anzunehmen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-736">
              <see langword="true" /> to accept changes; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-737">Sucht eine bestimmte Zeile und aktualisiert diese.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-737">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="09387-738">Wenn keine übereinstimmende Zeile gefunden werden kann, wird eine neue Zeile mit den angegebenen Werten erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-738">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-739">Die neue <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-739">The new <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-740">Die <xref:System.Data.DataTable.LoadDataRow%2A> Methode nimmt ein Array von Werten und sucht übereinstimmende Werte in die Primärschlüsselspalte(n).</span><span class="sxs-lookup"><span data-stu-id="09387-740">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="09387-741">Wenn eine Spalte einen Standardwert verfügt, übergeben Sie einen null-Wert im Array, der Standardwert für diese Spalte festgelegt.</span><span class="sxs-lookup"><span data-stu-id="09387-741">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="09387-742">Auf ähnliche Weise, wenn eine Spalte enthält die <xref:System.Data.DataColumn.AutoIncrement%2A> -Eigenschaft auf true festgelegt ist, übergeben einen null-Wert im Array, legen Sie den automatisch generierten Wert für die Zeile festgelegt.</span><span class="sxs-lookup"><span data-stu-id="09387-742">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="09387-743">Wenn die `fAcceptChanges` Parameter ist `true` oder nicht angegeben ist, werden die neuen Daten hinzugefügt und dann <xref:System.Data.DataTable.AcceptChanges%2A> wird aufgerufen, um alle Änderungen in akzeptieren die <xref:System.Data.DataTable>; Wenn das Argument ist `false`, neu hinzugefügten Zeilen werden als Einfüge- und Änderungen an vorhandene Zeilen werden als geändert markiert.</span><span class="sxs-lookup"><span data-stu-id="09387-743">If the `fAcceptChanges` parameter is `true` or not specified, the new data is added and then <xref:System.Data.DataTable.AcceptChanges%2A> is called to accept all changes in the <xref:System.Data.DataTable>; if the argument is `false`, newly added rows are marked as insertions, and changes to existing rows are marked as modifications.</span></span>  
  
 <span data-ttu-id="09387-744">Ausnahmen können auch auftreten, während eine <xref:System.Data.DataTable.ColumnChanging> oder <xref:System.Data.DataTable.RowChanging> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="09387-744">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="09387-745">Wenn eine Ausnahme auftritt, wird die Zeile der Tabelle nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09387-745">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="09387-746">Verwendung <xref:System.Data.DataTable.LoadDataRow%2A> in Verbindung mit <xref:System.Data.DataTable.BeginLoadData%2A> und <xref:System.Data.DataTable.EndLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-746">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-747">Im folgenden Beispiel wird die <xref:System.Data.DataTable.LoadDataRow%2A> Methode versucht, eine Zeile zu finden.</span><span class="sxs-lookup"><span data-stu-id="09387-747">The following example uses the <xref:System.Data.DataTable.LoadDataRow%2A> method to attempt to find a row.</span></span> <span data-ttu-id="09387-748">Wenn keine solche Zeile gefunden wird, werden die Werte verwendet, um eine neue Zeile zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="09387-748">If no such row is found, the values are used to create a new row.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.LoadDataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.LoadDataRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="09387-749">Das Array ist größer als die Anzahl der Spalten in der Tabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-749">The array is larger than the number of columns in the table.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="09387-750">Ein Wert stimmt nicht mit dem entsprechenden Spaltentyp überein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-750">A value doesn't match its respective column type.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.ConstraintException">
          <span data-ttu-id="09387-751">Durch das Hinzufügen der Zeile wird eine Einschränkung für ungültig erklärt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-751">Adding the row invalidates a constraint.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.NoNullAllowedException">
          <span data-ttu-id="09387-752">Es wird versucht, einen NULL-Wert in einer Spalte zu platzieren, in der <see cref="P:System.Data.DataColumn.AllowDBNull" /> False ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-752">Attempting to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull" /> is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LoadDataRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow LoadDataRow (object[] values, System.Data.LoadOption loadOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow LoadDataRow(object[] values, valuetype System.Data.LoadOption loadOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.LoadDataRow(System.Object[],System.Data.LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ LoadDataRow(cli::array &lt;System::Object ^&gt; ^ values, System::Data::LoadOption loadOption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
        <Parameter Name="loadOption" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="09387-753">Ein Array von Werten, mit denen die neue Zeile erstellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-753">An array of values used to create the new row.</span>
          </span>
        </param>
        <param name="loadOption">
          <span data-ttu-id="09387-754">Wird verwendet, um zu bestimmen, wie die Arraywerte auf die entsprechenden Werte in einer vorhandenen Zeile angewendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-754">Used to determine how the array values are applied to the corresponding values in an existing row.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-755">Sucht eine bestimmte Zeile und aktualisiert diese.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-755">Finds and updates a specific row.</span>
          </span>
          <span data-ttu-id="09387-756">Wenn keine übereinstimmende Zeile gefunden werden kann, wird eine neue Zeile mit den angegebenen Werten erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-756">If no matching row is found, a new row is created using the given values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-757">Die neue <see cref="T:System.Data.DataRow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-757">The new <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-758">Die <xref:System.Data.DataTable.LoadDataRow%2A> Methode nimmt ein Array von Werten und sucht übereinstimmende Werte in die Primärschlüsselspalte(n).</span><span class="sxs-lookup"><span data-stu-id="09387-758">The <xref:System.Data.DataTable.LoadDataRow%2A> method takes an array of values and finds the matching value(s) in the primary key column(s).</span></span>  
  
 <span data-ttu-id="09387-759">Wenn eine Spalte einen Standardwert verfügt, übergeben Sie einen null-Wert im Array, der Standardwert für diese Spalte festgelegt.</span><span class="sxs-lookup"><span data-stu-id="09387-759">If a column has a default value, pass a null value in the array to set the default value for that column.</span></span> <span data-ttu-id="09387-760">Auf ähnliche Weise, wenn eine Spalte enthält die <xref:System.Data.DataColumn.AutoIncrement%2A> -Eigenschaft auf true festgelegt ist, übergeben einen null-Wert im Array, legen Sie den automatisch generierten Wert für die Zeile festgelegt.</span><span class="sxs-lookup"><span data-stu-id="09387-760">Similarly, if a column has its <xref:System.Data.DataColumn.AutoIncrement%2A> property set to true, pass a null value in the array to set the automatically generated value for the row.</span></span>  
  
 <span data-ttu-id="09387-761">Der Wert, der die `loadOption` Parameter wird verwendet, um zu bestimmen, wie die Werte im Array auf eine vorhandene Zeile angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="09387-761">The value of the `loadOption` parameter is used to determine how the values in the array are applied to an existing row.</span></span> <span data-ttu-id="09387-762">Z. B. wenn `loadOption` festgelegt ist, um `OverwriteChanges`, die `Original` und `Current` Werte der einzelnen Spalten werden mit den Werten in der hinzukommenden Zeile ersetzt und die `RowState` -Eigenschaftensatz auf `Unchanged`.</span><span class="sxs-lookup"><span data-stu-id="09387-762">For example, if `loadOption` is set to `OverwriteChanges`, the `Original` and `Current` values of each column are replaced with the values in the incoming row and the `RowState` property is set to `Unchanged`.</span></span>  
  
 <span data-ttu-id="09387-763">Ausnahmen können auch auftreten, während eine <xref:System.Data.DataTable.ColumnChanging> oder <xref:System.Data.DataTable.RowChanging> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="09387-763">Exceptions can also occur during either a <xref:System.Data.DataTable.ColumnChanging> or <xref:System.Data.DataTable.RowChanging> event.</span></span> <span data-ttu-id="09387-764">Wenn eine Ausnahme auftritt, wird die Zeile der Tabelle nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09387-764">If an exception occurs, the row is not added to the table.</span></span>  
  
 <span data-ttu-id="09387-765">Verwendung <xref:System.Data.DataTable.LoadDataRow%2A> in Verbindung mit <xref:System.Data.DataTable.BeginLoadData%2A> und <xref:System.Data.DataTable.EndLoadData%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-765">Use <xref:System.Data.DataTable.LoadDataRow%2A> in conjunction with <xref:System.Data.DataTable.BeginLoadData%2A> and <xref:System.Data.DataTable.EndLoadData%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Locale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Locale" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Locale" />
      <MemberSignature Language="VB.NET" Value="Public Property Locale As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Locale { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-766">Ruft die Gebietsschemainformationen ab, die für den Vergleich von Zeichenfolgen in der Tabelle verwendet werden, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-766">Gets or sets the locale information used to compare strings within the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-767">Eine <see cref="T:System.Globalization.CultureInfo" />, die Daten zum Computergebietsschema des Benutzers enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-767">A <see cref="T:System.Globalization.CultureInfo" /> that contains data about the user's machine locale.</span>
          </span>
          <span data-ttu-id="09387-768">Der Standard ist die <see cref="T:System.Data.DataSet" /> des <see cref="T:System.Globalization.CultureInfo" />-Objekts (von der <see cref="P:System.Data.DataSet.Locale" />-Eigenschaft zurückgegeben), zu der die <see cref="T:System.Data.DataTable" /> gehört. Wenn die Tabelle keinem <see cref="T:System.Data.DataSet" /> angehört, wird die aktuelle <see cref="T:System.Globalization.CultureInfo" /> des Systems standardmäßig verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-768">The default is the <see cref="T:System.Data.DataSet" /> object's <see cref="T:System.Globalization.CultureInfo" /> (returned by the <see cref="P:System.Data.DataSet.Locale" /> property) to which the <see cref="T:System.Data.DataTable" /> belongs; if the table doesn't belong to a <see cref="T:System.Data.DataSet" />, the default is the current system <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-769">Ein <xref:System.Globalization.CultureInfo> stellt die Einstellungen für die Software von einer bestimmten Kultur oder der Community.</span><span class="sxs-lookup"><span data-stu-id="09387-769">A <xref:System.Globalization.CultureInfo> represents the software preferences of a particular culture or community.</span></span>  
  
 <span data-ttu-id="09387-770">Wenn Sie für Zeichenfolgenvergleiche verwendet die <xref:System.Globalization.CultureInfo> wirkt sich auf vergleichen, Sortieren und filtern.</span><span class="sxs-lookup"><span data-stu-id="09387-770">When used for string comparisons, the <xref:System.Globalization.CultureInfo> affects sorting, comparisons, and filtering.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-771">In Spalten, Ausdrücke, enthalten, die <xref:System.StringComparison.InvariantCulture> verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="09387-771">In columns that contain expressions, the <xref:System.StringComparison.InvariantCulture> is used.</span></span> <span data-ttu-id="09387-772">Die <xref:System.StringComparison.CurrentCulture> wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="09387-772">The <xref:System.StringComparison.CurrentCulture> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-773">Im folgenden Beispiel wird die <xref:System.Globalization.CultureInfo> über die <xref:System.Data.DataTable.Locale%2A> und gibt den Namen der ISO-Sprache.</span><span class="sxs-lookup"><span data-stu-id="09387-773">The following example sets the <xref:System.Globalization.CultureInfo> through the <xref:System.Data.DataTable.Locale%2A> and prints the ISO language name.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Locale Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Locale Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Locale Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Merge">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-774">Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-774">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-775">Die `Merge` Methode wird verwendet, um zwei merge <xref:System.Data.DataTable> Objekte, die Schemas weitgehend ähnlich sind.</span><span class="sxs-lookup"><span data-stu-id="09387-775">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="09387-776">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-776">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-777">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <xref:System.Data.DataTable> mit den neuesten Daten aus der Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-777">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="09387-778">Der Zusammenführungsvorgang berücksichtigt nur die ursprüngliche Tabelle, und die Tabelle zusammengeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="09387-778">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="09387-779">Untergeordnete Tabellen werden nicht beeinflusst oder enthalten.</span><span class="sxs-lookup"><span data-stu-id="09387-779">Child tables are not affected or included.</span></span> <span data-ttu-id="09387-780">Bei Tabellen mit einer oder mehreren untergeordneten Tabellen als Teil einer Beziehung definiert, muss jede untergeordnete Tabelle einzeln zusammengeführt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-780">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-781">Die folgende Konsolenanwendung veranschaulicht das Verhalten von der `missingSchemaAction` Parameter von der <xref:System.Data.DataTable.Merge%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-781">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="09387-782">Dieses Beispiel erstellt zwei Versionen der gleichen Tabelle aus, ändern das Schema für die zweite Version.</span><span class="sxs-lookup"><span data-stu-id="09387-782">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="09387-783">Der Code versucht, die zweite Tabelle mit dem ersten zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="09387-783">The code then attempts to merge the second table into the first.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-784">Dieses Beispiel zeigt, wie mit einer der überladenen Versionen der Zusammenführung.</span><span class="sxs-lookup"><span data-stu-id="09387-784">This example shows how to use one of the overloaded versions of Merge.</span></span> <span data-ttu-id="09387-785">Weitere Beispiele für die Verfügbarkeit, finden Sie unter den einzelnen Überladung-Themen.</span><span class="sxs-lookup"><span data-stu-id="09387-785">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTableMergeOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTableMergeOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTableMergeOverload/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="09387-786">Die <see cref="T:System.Data.DataTable" />, die mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammengeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-786">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-787">Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-787">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-788">Der Merge-Methode wird verwendet, um zwei merge <xref:System.Data.DataTable> Objekte, die Schemas weitgehend ähnlich sind.</span><span class="sxs-lookup"><span data-stu-id="09387-788">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="09387-789">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-789">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-790">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <xref:System.Data.DataTable> mit den neuesten Daten aus der Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-790">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="09387-791">Der Zusammenführungsvorgang berücksichtigt nur die ursprüngliche Tabelle, und die Tabelle zusammengeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="09387-791">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="09387-792">Untergeordnete Tabellen werden nicht beeinflusst oder enthalten.</span><span class="sxs-lookup"><span data-stu-id="09387-792">Child tables are not affected or included.</span></span> <span data-ttu-id="09387-793">Bei Tabellen mit einer oder mehreren untergeordneten Tabellen als Teil einer Beziehung definiert, muss jede untergeordnete Tabelle einzeln zusammengeführt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-793">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="09387-794">Die `Merge` Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-794">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="09387-795">Bei der Ausführung einer Zusammenführung werden Änderungen an die vorhandenen Daten vor der Zusammenführung während der Merge-Vorgang standardmäßig beibehalten.</span><span class="sxs-lookup"><span data-stu-id="09387-795">When performing a merge, changes made to the existing data before the merge are preserved by default during the merge operation.</span></span> <span data-ttu-id="09387-796">Entwickler können dieses Verhalten ändern, indem Sie eine der anderen zwei Überladungen für diese Methode aufrufen und Angeben von einen false-Wert für die `preserveChanges` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09387-796">Developers can modify this behavior by calling one of the other two overloads for this method, and specifying a false value for the `preserveChanges` parameter.</span></span>  
  
 <span data-ttu-id="09387-797">In einer Clientanwendung ist es üblich, haben ein einzelnes Optionsfeld an, dem der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene.</span><span class="sxs-lookup"><span data-stu-id="09387-797">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="09387-798">In diesem Szenario die <xref:System.Data.DataTable.GetChanges%2A> -Methode zuerst aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-798">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="09387-799">Eine zweite Methodenrückgabe <xref:System.Data.DataTable> für validieren und Zusammenführen optimiert.</span><span class="sxs-lookup"><span data-stu-id="09387-799">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="09387-800">Dieses zweite <xref:System.Data.DataTable> Objekt enthält nur die <xref:System.Data.DataRow> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-800">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-801">Diese Teilmenge wird in der Regel kleiner und somit effizienter an eine Komponente der mittleren Ebene zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="09387-801">This subset is generally smaller and thus more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="09387-802">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</span><span class="sxs-lookup"><span data-stu-id="09387-802">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="09387-803">Die mittlere Ebene kann dann zurücksenden entweder ein neues <xref:System.Data.DataTable> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="09387-803">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="09387-804">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <xref:System.Data.DataTable> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <xref:System.Data.DataTable> mit der <xref:System.Data.DataTable.Merge%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-804">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="09387-805">Beim Zusammenführen einer neuen Quelle <xref:System.Data.DataTable> in das Ziel Quellzeilen mit einer <xref:System.Data.DataRowState> Wert `Unchanged`, `Modified`, oder `Deleted`, zum von Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen wird.</span><span class="sxs-lookup"><span data-stu-id="09387-805">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted`, is matched to target rows with the same primary key values.</span></span> <span data-ttu-id="09387-806">Zeilen mit Quelle ein <xref:System.Data.DataRowState> Wert `Added` neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="09387-806">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-807">Die folgende Konsolenanwendung erstellt eine einfache <xref:System.Data.DataTable> und die Tabelle Daten hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09387-807">The following console application creates a simple <xref:System.Data.DataTable> and adds data to the table.</span></span> <span data-ttu-id="09387-808">Das Beispiel erstellt dann eine Kopie der Tabelle, die Kopie Zeilen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09387-808">The example then creates a copy of the table, adding rows to the copy.</span></span> <span data-ttu-id="09387-809">Zum Schluss das Beispiel ruft die <xref:System.Data.DataTable.Merge%2A> Methode, um die Daten in der zweiten Tabelle mit den Daten in der ersten Tabelle zusammenzuführen.</span><span class="sxs-lookup"><span data-stu-id="09387-809">Finally, the example calls the <xref:System.Data.DataTable.Merge%2A> method to merge the data in the second table with the data in the first table.</span></span>  
  
 [!code-csharp[DataWorks DataTable.Merge#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.Merge#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.Merge/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Merge (table As DataTable, preserveChanges As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="preserveChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="09387-810">Die <see langword="DataTable" />, die mit der aktuellen <see langword="DataTable" /> zusammengeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-810">The <see langword="DataTable" /> to be merged with the current <see langword="DataTable" />.</span>
          </span>
        </param>
        <param name="preserveChanges">
          <span data-ttu-id="09387-811">
            <see langword="true" />, um Änderungen in der aktuellen <see langword="DataTable" /> beizubehalten; andernfalls <see langword="false" />.<see langword="" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-811">
              <see langword="true" />, to preserve changes in the current <see langword="DataTable" />; otherwise <see langword="false" />.<see langword="" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-812">Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see langword="DataTable" /> zusammen, und geben Sie an, ob die Änderungen in der aktuellen <see langword="DataTable" /> beibehalten werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-812">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes in the current <see langword="DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-813">Der Merge-Methode wird verwendet, um zwei merge <xref:System.Data.DataTable> Objekte, die Schemas weitgehend ähnlich sind.</span><span class="sxs-lookup"><span data-stu-id="09387-813">The Merge method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="09387-814">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-814">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-815">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <xref:System.Data.DataTable> mit den neuesten Daten aus der Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-815">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="09387-816">Der Zusammenführungsvorgang berücksichtigt nur die ursprüngliche Tabelle, und die Tabelle zusammengeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="09387-816">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="09387-817">Untergeordnete Tabellen werden nicht beeinflusst oder enthalten.</span><span class="sxs-lookup"><span data-stu-id="09387-817">Child tables are not affected or included.</span></span> <span data-ttu-id="09387-818">Bei Tabellen mit einer oder mehreren untergeordneten Tabellen als Teil einer Beziehung definiert, muss jede untergeordnete Tabelle einzeln zusammengeführt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-818">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="09387-819">Die `Merge` Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-819">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="09387-820">Bei der Ausführung einer Zusammenführung werden Änderungen an die vorhandenen Daten vor der Zusammenführung während der Zusammenführung beibehalten, es sei denn, der Entwickler "false" für gibt die `preserveChanges` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09387-820">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="09387-821">Wenn die `preserveChanges` Parametersatz auf `true`, empfangenen Werten nicht vorhandene Werte in der aktuellen-Zeilenversion der vorhandenen Zeile überschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-821">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="09387-822">Wenn die `preserveChanges` Parametersatz auf `false`, empfangenen Werten werden die vorhandenen Werte in der aktuellen-Zeilenversion der vorhandenen Zeile überschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-822">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="09387-823">Weitere Informationen zu Zeilenversionen finden Sie unter [Zeilenstatus und Zeilenversionen](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span><span class="sxs-lookup"><span data-stu-id="09387-823">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="09387-824">In einer Clientanwendung ist es üblich, haben ein einzelnes Optionsfeld an, dem der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene.</span><span class="sxs-lookup"><span data-stu-id="09387-824">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="09387-825">In diesem Szenario die <xref:System.Data.DataTable.GetChanges%2A> -Methode zuerst aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-825">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="09387-826">Eine zweite Methodenrückgabe <xref:System.Data.DataTable> für validieren und Zusammenführen optimiert.</span><span class="sxs-lookup"><span data-stu-id="09387-826">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="09387-827">Dieses zweite <xref:System.Data.DataTable> Objekt enthält nur die <xref:System.Data.DataTable> und <xref:System.Data.DataRow> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-827">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-828">Diese Teilmenge wird in der Regel kleiner und wird daher effizienter an eine Komponente der mittleren Ebene zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="09387-828">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="09387-829">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</span><span class="sxs-lookup"><span data-stu-id="09387-829">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="09387-830">Die mittlere Ebene kann dann zurücksenden entweder ein neues <xref:System.Data.DataTable> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="09387-830">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="09387-831">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <xref:System.Data.DataTable> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <xref:System.Data.DataTable> mit der <xref:System.Data.DataTable.Merge%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-831">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="09387-832">Beim Zusammenführen einer neuen Quelle <xref:System.Data.DataTable> in das Ziel Quellzeilen mit einer <xref:System.Data.DataRowState> Wert `Unchanged`, `Modified`, oder `Deleted` Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen werden.</span><span class="sxs-lookup"><span data-stu-id="09387-832">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="09387-833">Zeilen mit Quelle ein <xref:System.Data.DataRowState> Wert `Added` neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="09387-833">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-834">Die folgende Konsolenanwendung erstellt eine <xref:System.Data.DataTable> mit Zeilen, einige der Daten in diesen Zeilen ändert und versucht, Daten aus einer anderen zusammengeführt <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-834">The following console application creates a <xref:System.Data.DataTable> containing rows, modifies some of the data in those rows, and attempts to merge data from a different <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-835">Im Beispiel wird veranschaulicht, die unterschiedliche Verhaltensweisen für die `preserveChanges` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09387-835">The example demonstrates the different behaviors for the `preserveChanges` parameter.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergePreserveChanges#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergePreserveChanges/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Merge">
      <MemberSignature Language="C#" Value="public void Merge (System.Data.DataTable table, bool preserveChanges, System.Data.MissingSchemaAction missingSchemaAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Merge(class System.Data.DataTable table, bool preserveChanges, valuetype System.Data.MissingSchemaAction missingSchemaAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Merge(System.Data.DataTable,System.Boolean,System.Data.MissingSchemaAction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Merge(System::Data::DataTable ^ table, bool preserveChanges, System::Data::MissingSchemaAction missingSchemaAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="preserveChanges" Type="System.Boolean" />
        <Parameter Name="missingSchemaAction" Type="System.Data.MissingSchemaAction" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="09387-836">Die <see cref="T:System.Data.DataTable" />, die mit der aktuellen <see cref="T:System.Data.DataTable" /> zusammengeführt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-836">The <see cref="T:System.Data.DataTable" /> to be merged with the current <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </param>
        <param name="preserveChanges">
          <span data-ttu-id="09387-837">
            <see langword="true" />, um an der aktuellen <see cref="T:System.Data.DataTable" /> vorgenommene Änderungen beizubehalten, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-837">
              <see langword="true" />, to preserve changes in the current <see cref="T:System.Data.DataTable" />; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="missingSchemaAction">
          <span data-ttu-id="09387-838">Einer der <see cref="T:System.Data.MissingSchemaAction" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-838">One of the <see cref="T:System.Data.MissingSchemaAction" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-839">Führen Sie die angegebene <see cref="T:System.Data.DataTable" /> mit der aktuellen <see langword="DataTable" /> zusammen, und geben Sie an, ob die Änderungen in der aktuellen <see langword="DataTable" /> beibehalten werden sollen und wie das fehlende Schema behandelt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-839">Merge the specified <see cref="T:System.Data.DataTable" /> with the current <see langword="DataTable" />, indicating whether to preserve changes and how to handle missing schema in the current <see langword="DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-840">Die `Merge` Methode wird verwendet, um zwei merge <xref:System.Data.DataTable> Objekte, die Schemas weitgehend ähnlich sind.</span><span class="sxs-lookup"><span data-stu-id="09387-840">The `Merge` method is used to merge two <xref:System.Data.DataTable> objects that have largely similar schemas.</span></span> <span data-ttu-id="09387-841">Eine Zusammenführung wird in der Regel auf eine Clientanwendung verwendet, um die aktuellen Änderungen aus einer Datenquelle in einer vorhandenen integrieren <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-841">A merge is typically used on a client application to incorporate the latest changes from a data source into an existing <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-842">Dies ermöglicht es der Clientanwendung ein aktualisiert haben <xref:System.Data.DataTable> mit den neuesten Daten aus der Datenquelle.</span><span class="sxs-lookup"><span data-stu-id="09387-842">This allows the client application to have a refreshed <xref:System.Data.DataTable> with the latest data from the data source.</span></span>  
  
 <span data-ttu-id="09387-843">Der Zusammenführungsvorgang berücksichtigt nur die ursprüngliche Tabelle, und die Tabelle zusammengeführt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="09387-843">The merge operation takes into account only the original table, and the table to be merged.</span></span> <span data-ttu-id="09387-844">Untergeordnete Tabellen werden nicht beeinflusst oder enthalten.</span><span class="sxs-lookup"><span data-stu-id="09387-844">Child tables are not affected or included.</span></span> <span data-ttu-id="09387-845">Bei Tabellen mit einer oder mehreren untergeordneten Tabellen als Teil einer Beziehung definiert, muss jede untergeordnete Tabelle einzeln zusammengeführt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-845">If a table has one or more child tables, defined as part of a relationship, each child table must be merged individually.</span></span>  
  
 <span data-ttu-id="09387-846">Die `Merge` Methodenaufrufs ist in der Regel am Ende einer Reihe von Verfahren, bei denen Änderungen überprüfen, Abgleichen der Fehler, die Datenquelle mit den Änderungen aktualisiert und schließlich aktualisieren die vorhandenen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-846">The `Merge` method is typically called at the end of a series of procedures that involve validating changes, reconciling errors, updating the data source with the changes, and finally refreshing the existing <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="09387-847">Bei der Ausführung einer Zusammenführung werden Änderungen an die vorhandenen Daten vor der Zusammenführung während der Zusammenführung beibehalten, es sei denn, der Entwickler "false" für gibt die `preserveChanges` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09387-847">When performing a merge, changes made to the existing data before the merge are preserved during the merge operation unless the developer specifies false for the `preserveChanges` parameter.</span></span> <span data-ttu-id="09387-848">Wenn die `preserveChanges` Parametersatz auf `true`, empfangenen Werten nicht vorhandene Werte in der aktuellen-Zeilenversion der vorhandenen Zeile überschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-848">If the `preserveChanges` parameter is set to `true`, incoming values do not overwrite existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="09387-849">Wenn die `preserveChanges` Parametersatz auf `false`, empfangenen Werten werden die vorhandenen Werte in der aktuellen-Zeilenversion der vorhandenen Zeile überschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-849">If the `preserveChanges` parameter is set to `false`, incoming values do overwrite the existing values in the Current row version of the existing row.</span></span> <span data-ttu-id="09387-850">Weitere Informationen zu Zeilenversionen finden Sie unter [Zeilenstatus und Zeilenversionen](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span><span class="sxs-lookup"><span data-stu-id="09387-850">For more information about row versions, see [Row States and Row Versions](~/docs/framework/data/adonet/dataset-datatable-dataview/row-states-and-row-versions.md).</span></span>  
  
 <span data-ttu-id="09387-851">In einer Clientanwendung ist es üblich, haben ein einzelnes Optionsfeld an, dem der Benutzer klicken kann, die die geänderten Daten erfasst und überprüft es vor dem Senden an eine Komponente der mittleren Ebene.</span><span class="sxs-lookup"><span data-stu-id="09387-851">In a client application, it is usual to have a single button that the user can click that gathers the changed data and validates it before sending it back to a middle tier component.</span></span> <span data-ttu-id="09387-852">In diesem Szenario die <xref:System.Data.DataTable.GetChanges%2A> -Methode zuerst aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-852">In this scenario, the <xref:System.Data.DataTable.GetChanges%2A> method is first invoked.</span></span> <span data-ttu-id="09387-853">Eine zweite Methodenrückgabe <xref:System.Data.DataTable> für validieren und Zusammenführen optimiert.</span><span class="sxs-lookup"><span data-stu-id="09387-853">That method returns a second <xref:System.Data.DataTable> optimized for validating and merging.</span></span> <span data-ttu-id="09387-854">Dieses zweite <xref:System.Data.DataTable> Objekt enthält nur die <xref:System.Data.DataTable> und <xref:System.Data.DataRow> Objekte, die geändert wurden, was zu einer Teilmenge des ursprünglichen <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-854">This second <xref:System.Data.DataTable> object contains only the <xref:System.Data.DataTable> and <xref:System.Data.DataRow> objects that were changed, resulting in a subset of the original <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-855">Diese Teilmenge wird in der Regel kleiner und wird daher effizienter an eine Komponente der mittleren Ebene zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="09387-855">This subset is generally smaller, and thus this subset is more efficiently passed back to a middle tier component.</span></span> <span data-ttu-id="09387-856">Die Komponente der mittleren Ebene aktualisiert dann die ursprüngliche Datenquelle mit den Änderungen mithilfe von gespeicherten Prozeduren.</span><span class="sxs-lookup"><span data-stu-id="09387-856">The middle tier component then updates the original data source with the changes through stored procedures.</span></span> <span data-ttu-id="09387-857">Die mittlere Ebene kann dann zurücksenden entweder ein neues <xref:System.Data.DataTable> enthält, die ursprünglichen Daten und die neuesten Daten aus der Datenquelle (durch die ursprüngliche Abfrage erneut ausführen), oder gesendet werden können, wieder die Teilmenge mit allen Änderungen, die darauf aus der Datenquelle vorgenommen wurden.</span><span class="sxs-lookup"><span data-stu-id="09387-857">The middle tier can then send back either a new <xref:System.Data.DataTable> that includes original data and the latest data from the data source (by running the original query again), or it can send back the subset with any changes that have been made to it from the data source.</span></span> <span data-ttu-id="09387-858">(Z. B. wenn die Datenquelle automatisch eindeutige Primärschlüsselwerte erstellt, können diese Werte an die Clientanwendung weitergegeben werden.) In beiden Fällen wird das zurückgegebene <xref:System.Data.DataTable> können zusammengeführt werden, wieder in die Clientanwendung ursprünglichen <xref:System.Data.DataTable> mit der <xref:System.Data.DataTable.Merge%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-858">(For example, if the data source automatically creates unique primary key values, these values can be propagated back to the client application.) In either case, the returned <xref:System.Data.DataTable> can be merged back into the client application's original <xref:System.Data.DataTable> with the <xref:System.Data.DataTable.Merge%2A> method.</span></span>  
  
 <span data-ttu-id="09387-859">Wenn die <xref:System.Data.DataTable.Merge%2A> -Methode aufgerufen wird, werden die Schemas der beiden <xref:System.Data.DataTable> Objekte verglichen werden, da es möglich ist, dass die Schemas möglicherweise geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="09387-859">When the <xref:System.Data.DataTable.Merge%2A> method is called, the schemas of the two <xref:System.Data.DataTable> objects are compared, because it is possible that the schemas may have been changed.</span></span> <span data-ttu-id="09387-860">Z. B. in einem Business-to-Business-Szenario wurden neue Spalten möglicherweise auf ein XML-Schema durch einen automatisierten Prozess hinzugefügt haben.</span><span class="sxs-lookup"><span data-stu-id="09387-860">For example, in a business-to-business scenario, new columns may have been added to an XML schema by an automated process.</span></span> <span data-ttu-id="09387-861">Wenn die Quelle <xref:System.Data.DataTable> Schemaelemente enthält (hinzugefügt <xref:System.Data.DataColumn> Objekte), die nicht im Ziel vorhanden sind, die Elemente des Schemas können mit dem Ziel hinzugefügt werden, durch Festlegen der `missingSchemaAction` Argument `MissingSchemaAction.Add`.</span><span class="sxs-lookup"><span data-stu-id="09387-861">If the source <xref:System.Data.DataTable> contains schema elements (added <xref:System.Data.DataColumn> objects) that are missing in the target, the schema elements can be added to the target by setting the `missingSchemaAction` argument to `MissingSchemaAction.Add`.</span></span> <span data-ttu-id="09387-862">In diesem Fall wird das zusammengeführte <xref:System.Data.DataTable> hinzugefügte Schema und Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="09387-862">In that case, the merged <xref:System.Data.DataTable> contains the added schema and data.</span></span>  
  
 <span data-ttu-id="09387-863">Nach dem Zusammenführen von Schemas, werden die Daten zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="09387-863">After merging schemas, the data is merged.</span></span>  
  
 <span data-ttu-id="09387-864">Beim Zusammenführen einer neuen Quelle <xref:System.Data.DataTable> in das Ziel Quellzeilen mit einer <xref:System.Data.DataRowState> Wert `Unchanged`, `Modified`, oder `Deleted` Zielzeilen mit den gleichen Primärschlüsselwerten abgeglichen werden.</span><span class="sxs-lookup"><span data-stu-id="09387-864">When merging a new source <xref:System.Data.DataTable> into the target, any source rows with a <xref:System.Data.DataRowState> value of `Unchanged`, `Modified`, or `Deleted` are matched to target rows with the same primary key values.</span></span> <span data-ttu-id="09387-865">Zeilen mit Quelle ein <xref:System.Data.DataRowState> Wert `Added` neue Zielzeilen mit den gleichen Primärschlüsselwerten als die neue Quellzeilen zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="09387-865">Source rows with a <xref:System.Data.DataRowState> value of `Added` are matched to new target rows with the same primary key values as the new source rows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-866">Die folgende Konsolenanwendung veranschaulicht das Verhalten von der `missingSchemaAction` Parameter von der <xref:System.Data.DataTable.Merge%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-866">The following console application demonstrates the behavior of the `missingSchemaAction` parameter of the <xref:System.Data.DataTable.Merge%2A> method.</span></span> <span data-ttu-id="09387-867">Dieses Beispiel erstellt zwei Versionen der gleichen Tabelle aus, ändern das Schema für die zweite Version.</span><span class="sxs-lookup"><span data-stu-id="09387-867">This example creates two versions of the same table, modifying the schema for the second version.</span></span> <span data-ttu-id="09387-868">Der Code versucht, die zweite Tabelle mit dem ersten zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="09387-868">The code then attempts to merge the second table into the first.</span></span>  
  
 [!code-csharp[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.MergeMissingSchemaAction#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.MergeMissingSchemaAction/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumCapacity">
      <MemberSignature Language="C#" Value="public int MinimumCapacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.MinimumCapacity" />
      <MemberSignature Language="VB.NET" Value="Public Property MinimumCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinimumCapacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-869">Ruft die Ausgangsgröße für diese Tabelle ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-869">Gets or sets the initial starting size for this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-870">Die Ausgangsgröße dieser Tabelle in Zeilen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-870">The initial starting size in rows of this table.</span>
          </span>
          <span data-ttu-id="09387-871">Der Standardwert ist 50.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-871">The default is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-872">Die <xref:System.Data.DataTable.MinimumCapacity%2A> kann das System vor dem Abrufen der Daten einen entsprechenden Satz von Ressourcen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="09387-872">The <xref:System.Data.DataTable.MinimumCapacity%2A> allows the system to create an appropriate set of resources before fetching data.</span></span> <span data-ttu-id="09387-873">In einer Situation Wenn Leistung kritisch ist, wird kann durch Festlegen dieser Eigenschaft Leistung optimiert.</span><span class="sxs-lookup"><span data-stu-id="09387-873">In a situation when performance is critical, setting this property can optimize performance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-874">Im folgenden Beispiel wird die <xref:System.Data.DataTable.MinimumCapacity%2A> von einem <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-874">The following example sets the <xref:System.Data.DataTable.MinimumCapacity%2A> of a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.MinimumCapacity Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.MinimumCapacity Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-875">Ruft den Namespace für die XML-Darstellung der in der <see cref="T:System.Data.DataTable" /> gespeicherten Daten ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-875">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-876">Der Namespace von <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-876">The namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow NewRow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow NewRow() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRow" />
      <MemberSignature Language="VB.NET" Value="Public Function NewRow () As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ NewRow();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-877">Erstellt eine neue <see cref="T:System.Data.DataRow" /> mit dem Schema der Tabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-877">Creates a new <see cref="T:System.Data.DataRow" /> with the same schema as the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-878">Eine <see cref="T:System.Data.DataRow" /> mit demselben Schema wie die <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-878">A <see cref="T:System.Data.DataRow" /> with the same schema as the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-879">Verwenden Sie die <xref:System.Data.DataTable.NewRow%2A> Methode zum Erstellen neuer <xref:System.Data.DataRow> Objekte mit dem gleichen Schema wie die <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-879">You must use the <xref:System.Data.DataTable.NewRow%2A> method to create new <xref:System.Data.DataRow> objects with the same schema as the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-880">Nach dem Erstellen einer <xref:System.Data.DataRow>, können Sie ihn zum Hinzufügen der <xref:System.Data.DataRowCollection>, bis die <xref:System.Data.DataTable> des Objekts <xref:System.Data.DataTable.Rows%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="09387-880">After creating a <xref:System.Data.DataRow>, you can add it to the <xref:System.Data.DataRowCollection>, through the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.Rows%2A> property.</span></span> <span data-ttu-id="09387-881">Bei Verwendung von <xref:System.Data.DataTable.NewRow%2A> um neue Zeilen zu erstellen, die Zeilen müssen hinzugefügt oder aus der Tabelle gelöscht wird, vor dem Aufruf <xref:System.Data.DataTable.Clear%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-881">When you use <xref:System.Data.DataTable.NewRow%2A> to create new rows, the rows must be added to or deleted from the data table before you call <xref:System.Data.DataTable.Clear%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-882">Das folgende Beispiel erstellt eine <xref:System.Data.DataTable>, addiert zwei <xref:System.Data.DataColumn> Objekte bestimmen das Schema der Tabelle, und erstellt mehrere neue <xref:System.Data.DataRow> -Objekten mit den <xref:System.Data.DataTable.NewRow%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-882">The following example creates a <xref:System.Data.DataTable>, adds two <xref:System.Data.DataColumn> objects that determine the table's schema, and creates several new <xref:System.Data.DataRow> objects using the <xref:System.Data.DataTable.NewRow%2A> method.</span></span> <span data-ttu-id="09387-883">Die <xref:System.Data.DataRow> Objekte werden dann hinzugefügt, um die <xref:System.Data.DataRowCollection> mithilfe der <xref:System.Data.DataRowCollection.Add%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-883">Those <xref:System.Data.DataRow> objects are then added to the <xref:System.Data.DataRowCollection> using the <xref:System.Data.DataRowCollection.Add%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.NewRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.NewRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowArray">
      <MemberSignature Language="C#" Value="protected internal System.Data.DataRow[] NewRowArray (int size);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Data.DataRow[] NewRowArray(int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function NewRowArray (size As Integer) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ NewRowArray(int size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="09387-884">Ein <see cref="T:System.Int32" />-Wert, der die Größe des Arrays beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-884">A <see cref="T:System.Int32" /> value that describes the size of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-885">Gibt ein Array von <see cref="T:System.Data.DataRow" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-885">Returns an array of <see cref="T:System.Data.DataRow" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-886">Das neue Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-886">The new array.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewRowFromBuilder">
      <MemberSignature Language="C#" Value="protected virtual System.Data.DataRow NewRowFromBuilder (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.DataRow NewRowFromBuilder(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.NewRowFromBuilder(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function NewRowFromBuilder (builder As DataRowBuilder) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::DataRow ^ NewRowFromBuilder(System::Data::DataRowBuilder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="09387-887">Ein <see cref="T:System.Data.DataRowBuilder" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-887">A <see cref="T:System.Data.DataRowBuilder" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-888">Erstellt eine neue Zeile aus einer vorhandenen Zeile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-888">Creates a new row from an existing row.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-889">Eine von <see cref="T:System.Data.DataRow" /> abgeleitete Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-889">A <see cref="T:System.Data.DataRow" /> derived class.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanged (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanged(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanged (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanged(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="09387-890">Ein <see cref="T:System.Data.DataColumnChangeEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-890">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-891">Löst das <see cref="E:System.Data.DataTable.ColumnChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-891">Raises the <see cref="E:System.Data.DataTable.ColumnChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-892">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-892">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-893">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-893">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="09387-894">Zum Überschreiben <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="09387-894">When overriding <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanged(System.Data.DataColumnChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnColumnChanging">
      <MemberSignature Language="C#" Value="protected internal virtual void OnColumnChanging (System.Data.DataColumnChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnColumnChanging(class System.Data.DataColumnChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnColumnChanging (e As DataColumnChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnColumnChanging(System::Data::DataColumnChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataColumnChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="09387-895">Ein <see cref="T:System.Data.DataColumnChangeEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-895">A <see cref="T:System.Data.DataColumnChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-896">Löst das <see cref="E:System.Data.DataTable.ColumnChanging" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-896">Raises the <see cref="E:System.Data.DataTable.ColumnChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-897">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-897">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-898">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-898">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="09387-899">Zum Überschreiben <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="09387-899">When overriding <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnColumnChanging(System.Data.DataColumnChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="09387-900">Ein <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-900">A <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-901">Löst das <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-901">Raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-902">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-902">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-903">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-903">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="09387-904">Zum Überschreiben <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="09387-904">When overriding <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRemoveColumn">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveColumn (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveColumn(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveColumn (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveColumn(System::Data::DataColumn ^ column);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">
          <span data-ttu-id="09387-905">Die <see cref="T:System.Data.DataColumn" />, die entfernt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-905">The <see cref="T:System.Data.DataColumn" /> being removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-906">Benachrichtigt die <see cref="T:System.Data.DataTable" />, dass eine <see cref="T:System.Data.DataColumn" /> entfernt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-906">Notifies the <see cref="T:System.Data.DataTable" /> that a <see cref="T:System.Data.DataColumn" /> is being removed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-907">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-907">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-908">Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-908">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="09387-909">Zum Überschreiben <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="09387-909">When overriding <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRemoveColumn(System.Data.DataColumn)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanged (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanged(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanged (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanged(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="09387-910">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-910">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-911">Löst das <see cref="E:System.Data.DataTable.RowChanged" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-911">Raises the <see cref="E:System.Data.DataTable.RowChanged" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-912">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-912">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-913">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-913">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="09387-914">Zum Überschreiben <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="09387-914">When overriding <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanged(System.Data.DataRowChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnRowChanging (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowChanging(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowChanging (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowChanging(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="09387-915">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-915">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-916">Löst das <see cref="E:System.Data.DataTable.RowChanging" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-916">Raises the <see cref="E:System.Data.DataTable.RowChanging" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-917">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-917">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-918">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-918">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="09387-919">Zum Überschreiben <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="09387-919">When overriding <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowChanging(System.Data.DataRowChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleted (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleted(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleted (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleted(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="09387-920">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-920">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-921">Löst das <see cref="E:System.Data.DataTable.RowDeleted" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-921">Raises the <see cref="E:System.Data.DataTable.RowDeleted" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-922">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-922">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-923">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-923">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="09387-924">Zum Überschreiben <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="09387-924">When overriding <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleted(System.Data.DataRowChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRowDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnRowDeleting (System.Data.DataRowChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRowDeleting(class System.Data.DataRowChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRowDeleting (e As DataRowChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRowDeleting(System::Data::DataRowChangeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataRowChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="09387-925">Ein <see cref="T:System.Data.DataRowChangeEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-925">A <see cref="T:System.Data.DataRowChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-926">Löst das <see cref="E:System.Data.DataTable.RowDeleting" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-926">Raises the <see cref="E:System.Data.DataTable.RowDeleting" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-927">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-927">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-928">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-928">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="09387-929">Zum Überschreiben <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> Methode.</span>
            <span class="sxs-lookup">
              <span data-stu-id="09387-929">When overriding <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Data.DataTable.OnRowDeleting(System.Data.DataRowChangeEventArgs)" /> method.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnTableCleared">
      <MemberSignature Language="C#" Value="protected virtual void OnTableCleared (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableCleared(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableCleared(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableCleared (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableCleared(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="09387-930">Ein <see cref="T:System.Data.DataTableClearEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-930">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-931">Löst das <see cref="E:System.Data.DataTable.TableCleared" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-931">Raises the <see cref="E:System.Data.DataTable.TableCleared" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-932">Löst das <xref:System.Data.DataTable.TableCleared> -Ereignis, das ausgelöst wird, sofort, nachdem alle Zeilen, jedoch bevor wurden erfolgreich gelöscht wurden die <xref:System.Data.DataTable.Clear%2A> -Methode die Steuerung wieder an den Aufrufer zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="09387-932">Raises the <xref:System.Data.DataTable.TableCleared> event, which is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span>  
  
 <span data-ttu-id="09387-933">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-933">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-934">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-934">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTableClearing">
      <MemberSignature Language="C#" Value="protected virtual void OnTableClearing (System.Data.DataTableClearEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableClearing(class System.Data.DataTableClearEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableClearing(System.Data.DataTableClearEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableClearing (e As DataTableClearEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableClearing(System::Data::DataTableClearEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableClearEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="09387-935">Ein <see cref="T:System.Data.DataTableClearEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-935">A <see cref="T:System.Data.DataTableClearEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-936">Löst das <see cref="E:System.Data.DataTable.TableClearing" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-936">Raises the <see cref="E:System.Data.DataTable.TableClearing" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-937">Löst das <xref:System.Data.DataTable.TableClearing> Ereignis, das ausgelöst wird, bevor die Verarbeitung der der <xref:System.Data.DataTable.Clear%2A> -Vorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="09387-937">Raises the <xref:System.Data.DataTable.TableClearing> event, which is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span>  
  
 <span data-ttu-id="09387-938">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-938">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-939">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-939">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTableNewRow">
      <MemberSignature Language="C#" Value="protected virtual void OnTableNewRow (System.Data.DataTableNewRowEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTableNewRow(class System.Data.DataTableNewRowEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.OnTableNewRow(System.Data.DataTableNewRowEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTableNewRow (e As DataTableNewRowEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTableNewRow(System::Data::DataTableNewRowEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Data.DataTableNewRowEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="09387-940">Ein <see cref="T:System.Data.DataTableNewRowEventArgs" />, das die Ereignisdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-940">A <see cref="T:System.Data.DataTableNewRowEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-941">Löst das <see cref="E:System.Data.DataTable.TableNewRow" />-Ereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-941">Raises the <see cref="E:System.Data.DataTable.TableNewRow" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-942">Löst das <xref:System.Data.DataTable.TableNewRow> Ereignis, das ausgelöst, nachdem ein neues wird <xref:System.Data.DataRow> mit erstellt wurde <xref:System.Data.DataTable.NewRow%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-942">Raises the <xref:System.Data.DataTable.TableNewRow> event, which fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span>  
  
 <span data-ttu-id="09387-943">Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="09387-943">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="09387-944">Eine Übersicht finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="09387-944">For an overview, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentRelations">
      <MemberSignature Language="C#" Value="public System.Data.DataRelationCollection ParentRelations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRelationCollection ParentRelations" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.ParentRelations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentRelations As DataRelationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRelationCollection ^ ParentRelations { System::Data::DataRelationCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRelationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-945">Ruft die Auflistung übergeordneter Beziehungen für diese <see cref="T:System.Data.DataTable" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-945">Gets the collection of parent relations for this <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-946">Eine <see cref="T:System.Data.DataRelationCollection" />, die die übergeordneten Beziehungen für die Tabelle enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-946">A <see cref="T:System.Data.DataRelationCollection" /> that contains the parent relations for the table.</span>
          </span>
          <span data-ttu-id="09387-947">Wenn keine <see cref="T:System.Data.DataRelation" />-Objekte vorhanden sind, wird eine leere Auflistung zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-947">An empty collection is returned if no <see cref="T:System.Data.DataRelation" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="09387-948">Im folgenden Beispiel wird die <xref:System.Data.DataTable.ParentRelations%2A> -Eigenschaft zum Zurückgeben von jedem übergeordneten Element <xref:System.Data.DataRelation> in einem <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-948">The following example uses the <xref:System.Data.DataTable.ParentRelations%2A> property to return each parent <xref:System.Data.DataRelation> in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-949">Jede Beziehung wird dann verwendet, als Argument in der <xref:System.Data.DataRow.GetParentRows%2A> Methode der <xref:System.Data.DataRow> ein Array von Zeilen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="09387-949">Each relation is then used as an argument in the <xref:System.Data.DataRow.GetParentRows%2A> method of the <xref:System.Data.DataRow> to return an array of rows.</span></span> <span data-ttu-id="09387-950">Der Wert der einzelnen Spalten in der Zeile wird dann ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="09387-950">The value of each column in the row is then printed.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ParentRelations Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ParentRelations Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-951">Ruft den Namespace für die XML-Darstellung der in der <see cref="T:System.Data.DataTable" /> gespeicherten Daten ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-951">Gets or sets the namespace for the XML representation of the data stored in the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-952">Das Präfix der <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-952">The prefix of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryKey">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] PrimaryKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataColumn[] PrimaryKey" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.PrimaryKey" />
      <MemberSignature Language="VB.NET" Value="Public Property PrimaryKey As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Data::DataColumn ^&gt; ^ PrimaryKey { cli::array &lt;System::Data::DataColumn ^&gt; ^ get(); void set(cli::array &lt;System::Data::DataColumn ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.PrimaryKeyEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.PrimaryKeyTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-953">Ruft ein Array von Spalten ab, die als Primärschlüssel für die Datentabelle verwendet werden, oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-953">Gets or sets an array of columns that function as primary keys for the data table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-954">Ein Array von <see cref="T:System.Data.DataColumn" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-954">An array of <see cref="T:System.Data.DataColumn" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-955">Der Primärschlüssel einer Tabelle muss zum Identifizieren des Datensatzes in der Tabelle eindeutig sein.</span><span class="sxs-lookup"><span data-stu-id="09387-955">The primary key of a table must be unique to identify the record in the table.</span></span> <span data-ttu-id="09387-956">Es ist auch möglich, eine Tabelle mit einem Primärschlüssel setzt sich aus zwei oder mehr Spalten enthalten.</span><span class="sxs-lookup"><span data-stu-id="09387-956">It's also possible to have a table with a primary key made up of two or more columns.</span></span> <span data-ttu-id="09387-957">Dies tritt auf, wenn eine einzelne Spalte genügend eindeutige Werte enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="09387-957">This occurs when a single column can't contain enough unique values.</span></span> <span data-ttu-id="09387-958">Beispielsweise kann ein Primärschlüssel zweispaltigen einer Spalte "FirstName" und "LastName" bestehen.</span><span class="sxs-lookup"><span data-stu-id="09387-958">For example, a two column primary key might consist of a "FirstName" and "LastName" column.</span></span> <span data-ttu-id="09387-959">Da der Primärschlüssel von mehr als eine Spalte vorgenommen werden können die <xref:System.Data.DataTable.PrimaryKey%2A> Eigenschaft besteht aus einem Array von <xref:System.Data.DataColumn> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09387-959">Because primary keys can be made up of more than one column, the <xref:System.Data.DataTable.PrimaryKey%2A> property consists of an array of <xref:System.Data.DataColumn> objects.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-960">Im erste Beispiel wird gezeigt, wie die Primärschlüsselspalten für die zurückzugebenden eine <xref:System.Data.DataTable> angezeigt, die einem `DataGrid`.</span><span class="sxs-lookup"><span data-stu-id="09387-960">The first example shows how to return the primary key columns for a <xref:System.Data.DataTable> displayed in a `DataGrid`.</span></span> <span data-ttu-id="09387-961">Im zweite Beispiel veranschaulicht das Festlegen der Primärschlüsselspalten für eine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-961">The second example demonstrates how to set the primary key columns for a <xref:System.Data.DataTable>.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.PrimaryKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.PrimaryKey Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DataException">
          <span data-ttu-id="09387-962">Der Schlüssel ist ein Fremdschlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-962">The key is a foreign key.</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="P:System.Data.DataTable.PrimaryKey" />
        <altmember cref="T:System.Data.DataColumnCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-963">Liest ein XML-Schema und XML-Daten in das <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-963">Reads XML schema and data into the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-964">Die <xref:System.Data.DataTable.ReadXml%2A> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <xref:System.Data.DataTable> aus einem XML-Dokument während der <xref:System.Data.DataTable.ReadXmlSchema%2A> Methode liest nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-964">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span> <span data-ttu-id="09387-965">Verwenden Sie zum Lesen von Daten und Schema eine der der `ReadXML` Überladungen, die die `XmlReadMode` Parameter, und legen Sie dessen Wert auf `ReadSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-965">To read both data and schema, use one of the `ReadXML` overloads that include the `XmlReadMode` parameter, and set its value to `ReadSchema`.</span></span>  
  
 <span data-ttu-id="09387-966">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.WriteXml%2A> und <xref:System.Data.DataTable.WriteXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-966">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-967">Zum Schreiben von XML-Daten oder Schema und Daten aus der `DataTable`, verwenden Sie die `WriteXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-967">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="09387-968">Um nur das Schema zu schreiben, verwenden die `WriteXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-968">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-969">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-969">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="09387-970">Ein von <see cref="T:System.IO.Stream" /> abgeleitetes Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-970">An object that derives from <see cref="T:System.IO.Stream" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-971">Liest mit dem angegebenen <see cref="T:System.Data.DataTable" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.Stream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-971">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-972">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-972">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-973">Die aktuelle <xref:System.Data.DataTable> und seine untergeordneten Objekte werden geladen, mit den Daten aus dem angegebenen <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="09387-973">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.Stream>.</span></span> <span data-ttu-id="09387-974">Das Verhalten dieser Methode ist identisch mit der <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> -Methode, mit Ausnahme der in diesem Fall, dass, Daten geladen wird, nur für die aktuelle Tabelle und seine Nachfolger.</span><span class="sxs-lookup"><span data-stu-id="09387-974">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="09387-975">Die <xref:System.Data.DataTable.ReadXml%2A> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <xref:System.Data.DataTable> aus einem XML-Dokument während der <xref:System.Data.DataTable.ReadXmlSchema%2A> Methode liest nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-975">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="09387-976">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.WriteXml%2A> und <xref:System.Data.DataTable.WriteXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-976">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-977">Zum Schreiben von XML-Daten oder Schema und Daten aus der `DataTable`, verwenden Sie die `WriteXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-977">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="09387-978">Um nur das Schema zu schreiben, verwenden die `WriteXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-978">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-979">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-979">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="09387-980">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</span><span class="sxs-lookup"><span data-stu-id="09387-980">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="09387-981">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-981">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="09387-982">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</span><span class="sxs-lookup"><span data-stu-id="09387-982">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="09387-983">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-983">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-984">Die `DataSet` ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen `DataColumn` oder `DataTable` beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</span><span class="sxs-lookup"><span data-stu-id="09387-984">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="09387-985">Die `DataSet` selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="09387-985">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="09387-986">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</span><span class="sxs-lookup"><span data-stu-id="09387-986">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-987">Das folgende Beispiel erstellt eine <xref:System.Data.DataTable> mit zwei Spalten und zehn Zeilen.</span><span class="sxs-lookup"><span data-stu-id="09387-987">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="09387-988">Das Beispiel schreibt die <xref:System.Data.DataTable> Schema und Daten in einen Speicherstream, durch den Aufruf der <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-988">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="09387-989">Das Beispiel erstellt eine zweite <xref:System.Data.DataTable> und ruft die <xref:System.Data.DataTable.ReadXml%2A> Methode, um mit dem Schema und Daten zu füllen.</span><span class="sxs-lookup"><span data-stu-id="09387-989">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As TextReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::IO::TextReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="09387-990">Der <see cref="T:System.IO.TextReader" />, der verwendet wird, um die Daten zu lesen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-990">The <see cref="T:System.IO.TextReader" /> that will be used to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-991">Liest mit dem angegebenen <see cref="T:System.Data.DataTable" /> das XML-Schema und die XML-Daten in die <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-991">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-992">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-992">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-993">Die aktuelle <xref:System.Data.DataTable> und seine untergeordneten Objekte werden geladen, mit den Daten aus dem angegebenen <xref:System.IO.TextReader>.</span><span class="sxs-lookup"><span data-stu-id="09387-993">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the supplied <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="09387-994">Das Verhalten dieser Methode ist identisch mit der <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> -Methode, mit Ausnahme der in diesem Fall, dass, Daten geladen wird, nur für die aktuelle Tabelle und seine Nachfolger.</span><span class="sxs-lookup"><span data-stu-id="09387-994">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="09387-995">Die <xref:System.Data.DataTable.ReadXml%2A> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <xref:System.Data.DataTable> aus einem XML-Dokument während der <xref:System.Data.DataTable.ReadXmlSchema%2A> Methode liest nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-995">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="09387-996">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.WriteXml%2A> und <xref:System.Data.DataTable.WriteXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-996">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-997">Zum Schreiben von XML-Daten oder Schema und Daten aus der `DataTable`, verwenden Sie die `WriteXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-997">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="09387-998">Um nur das Schema zu schreiben, verwenden die `WriteXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-998">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-999">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-999">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="09387-1000">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</span><span class="sxs-lookup"><span data-stu-id="09387-1000">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="09387-1001">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1001">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="09387-1002">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</span><span class="sxs-lookup"><span data-stu-id="09387-1002">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="09387-1003">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1003">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1004">Die `DataSet` ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen `DataColumn` oder `DataTable` beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</span><span class="sxs-lookup"><span data-stu-id="09387-1004">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="09387-1005">Die `DataSet` selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="09387-1005">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="09387-1006">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</span><span class="sxs-lookup"><span data-stu-id="09387-1006">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1007">Das folgende Beispiel erstellt eine <xref:System.Data.DataTable> mit zwei Spalten und zehn Zeilen.</span><span class="sxs-lookup"><span data-stu-id="09387-1007">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="09387-1008">Das Beispiel schreibt die <xref:System.Data.DataTable> Schema und Daten in einen Speicherstream, durch den Aufruf der <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1008">The example writes the <xref:System.Data.DataTable> schema and data to a memory stream, by invoking the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span> <span data-ttu-id="09387-1009">Das Beispiel erstellt eine zweite <xref:System.Data.DataTable> und ruft die <xref:System.Data.DataTable.ReadXml%2A> Methode, um mit dem Schema und Daten zu füllen.</span><span class="sxs-lookup"><span data-stu-id="09387-1009">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlText#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlText/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (fileName As String) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="09387-1010">Der Name der Datei, aus der die Daten gelesen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1010">The name of the file from which to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1011">Liest das XML-Schema und die XML-Daten in die <see cref="T:System.Data.DataTable" /> aus der angegebenen Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1011">Reads XML schema and data into the <see cref="T:System.Data.DataTable" /> from the specified file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-1012">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1012">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1013">Die aktuelle <xref:System.Data.DataTable> und seine untergeordneten Objekte werden geladen, mit den Daten aus der Datei mit dem Namen in der bereitgestellten <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="09387-1013">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.String>.</span></span> <span data-ttu-id="09387-1014">Das Verhalten dieser Methode ist identisch mit der <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> -Methode, mit Ausnahme der in diesem Fall, dass, Daten geladen wird, nur für die aktuelle Tabelle und seine Nachfolger.</span><span class="sxs-lookup"><span data-stu-id="09387-1014">The behavior of this method is identical to that of the <xref:System.Data.DataSet.ReadXml%2A?displayProperty=nameWithType> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="09387-1015">Die <xref:System.Data.DataTable.ReadXml%2A> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <xref:System.Data.DataTable> aus einem XML-Dokument während der <xref:System.Data.DataTable.ReadXmlSchema%2A> Methode liest nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1015">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="09387-1016">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.WriteXml%2A> und <xref:System.Data.DataTable.WriteXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1016">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1017">Zum Schreiben von XML-Daten oder Schema und Daten aus der `DataTable`, verwenden Sie die `WriteXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1017">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="09387-1018">Um nur das Schema zu schreiben, verwenden die `WriteXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1018">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1019">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1019">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="09387-1020">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</span><span class="sxs-lookup"><span data-stu-id="09387-1020">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="09387-1021">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1021">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="09387-1022">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</span><span class="sxs-lookup"><span data-stu-id="09387-1022">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="09387-1023">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1023">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1024">Die `DataSet` ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen `DataColumn` oder `DataTable` beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</span><span class="sxs-lookup"><span data-stu-id="09387-1024">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="09387-1025">Die `DataSet` selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="09387-1025">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="09387-1026">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</span><span class="sxs-lookup"><span data-stu-id="09387-1026">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
```csharp  
using System.Data;  
public class A {  
   static void Main(string[] args) {  
      DataTable tabl = new DataTable("mytable");  
      tabl.Columns.Add(new DataColumn("id", typeof(int)));  
      for (int i = 0; i < 10; i++) {  
         DataRow row = tabl.NewRow();  
         row["id"] = i;  
         tabl.Rows.Add(row);  
      }  
      tabl.WriteXml("f.xml", XmlWriteMode.WriteSchema);  
      DataTable newt = new DataTable();  
      newt.ReadXml("f.xml");  
   }  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="09387-1027">Das folgende Beispiel erstellt eine <xref:System.Data.DataTable> mit zwei Spalten und zehn Zeilen.</span><span class="sxs-lookup"><span data-stu-id="09387-1027">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="09387-1028">Das Beispiel schreibt die <xref:System.Data.DataTable> Schema und Daten auf dem Datenträger.</span><span class="sxs-lookup"><span data-stu-id="09387-1028">The example writes the <xref:System.Data.DataTable> schema and data to disk.</span></span> <span data-ttu-id="09387-1029">Das Beispiel erstellt eine zweite <xref:System.Data.DataTable> und ruft die <xref:System.Data.DataTable.ReadXml%2A> Methode, um mit dem Schema und Daten zu füllen.</span><span class="sxs-lookup"><span data-stu-id="09387-1029">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadXml">
      <MemberSignature Language="C#" Value="public System.Data.XmlReadMode ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.XmlReadMode ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadXml (reader As XmlReader) As XmlReadMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::XmlReadMode ReadXml(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.XmlReadMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="09387-1030">Der <see cref="T:System.Xml.XmlReader" />, der verwendet wird, um die Daten zu lesen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1030">The <see cref="T:System.Xml.XmlReader" /> that will be used to read the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1031">Liest das XML-Schema und die XML-Daten mit dem angegebenen <see cref="T:System.Data.DataTable" /> in die <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1031">Reads XML Schema and Data into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-1032">Der zum Lesen der Daten verwendete <see cref="T:System.Data.XmlReadMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1032">The <see cref="T:System.Data.XmlReadMode" /> used to read the data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1033">Die aktuelle <xref:System.Data.DataTable> und seine untergeordneten Objekte werden geladen, mit den Daten aus der Datei mit dem Namen in der bereitgestellten <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="09387-1033">The current <xref:System.Data.DataTable> and its descendents are loaded with the data from the file named in the supplied <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="09387-1034">Das Verhalten dieser Methode ist identisch mit der <xref:System.Data.DataTable.ReadXml%2A> -Methode, mit Ausnahme der in diesem Fall, dass, Daten geladen wird, nur für die aktuelle Tabelle und seine Nachfolger.</span><span class="sxs-lookup"><span data-stu-id="09387-1034">The behavior of this method is identical to that of the <xref:System.Data.DataTable.ReadXml%2A> method, except that in this case, data is loaded only for the current table and its descendants.</span></span>  
  
 <span data-ttu-id="09387-1035">Die <xref:System.Data.DataTable.ReadXml%2A> Methode bietet eine Möglichkeit, die entweder Daten nur lesen oder Schemas und Daten in einem <xref:System.Data.DataTable> aus einem XML-Dokument während der <xref:System.Data.DataTable.ReadXmlSchema%2A> Methode liest nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1035">The <xref:System.Data.DataTable.ReadXml%2A> method provides a way to read either data only, or both data and schema into a <xref:System.Data.DataTable> from an XML document, whereas the <xref:System.Data.DataTable.ReadXmlSchema%2A> method reads only the schema.</span></span>  
  
 <span data-ttu-id="09387-1036">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.WriteXml%2A> und <xref:System.Data.DataTable.WriteXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1036">Note that the same is true for the <xref:System.Data.DataTable.WriteXml%2A> and <xref:System.Data.DataTable.WriteXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1037">Zum Schreiben von XML-Daten oder Schema und Daten aus der `DataTable`, verwenden Sie die `WriteXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1037">To write XML data, or both schema and data from the `DataTable`, use the `WriteXml` method.</span></span> <span data-ttu-id="09387-1038">Um nur das Schema zu schreiben, verwenden die `WriteXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1038">To write just the schema, use the `WriteXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1039">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1039">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 <span data-ttu-id="09387-1040">Wenn ein Inline Schema angegeben ist, wird die Inline-Schema zum Erweitern der vorhandenen relationalen Struktur vor dem Laden der Daten verwendet.</span><span class="sxs-lookup"><span data-stu-id="09387-1040">If an in-line schema is specified, the in-line schema is used to extend the existing relational structure prior to loading the data.</span></span> <span data-ttu-id="09387-1041">Wenn vorliegen Konflikte (z. B. dieselbe Spalte in derselben Tabelle mit unterschiedlichen Datentypen definiert) wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1041">If there are any conflicts (for example, the same column in the same table defined with different data types) an exception is raised.</span></span>  
  
 <span data-ttu-id="09387-1042">Wenn kein in-Line-Schema angegeben ist, wird die relationale Struktur gemäß der Struktur des XML-Dokuments durch Rückschluss nach Bedarf erweitert.</span><span class="sxs-lookup"><span data-stu-id="09387-1042">If no in-line schema is specified, the relational structure is extended through inference, as necessary, according to the structure of the XML document.</span></span> <span data-ttu-id="09387-1043">Wenn das Schema durch Rückschluss erweitert werden kann um alle Daten verfügbar zu machen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1043">If the schema cannot be extended through inference in order to expose all data, an exception is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1044">Die `DataSet` ein XML-Element mit dem entsprechenden erfolgt keine Zuordnung zwischen `DataColumn` oder `DataTable` beim XML-Zeichen wie ("_") werden mit Escapezeichen versehen im serialisierten XML.</span><span class="sxs-lookup"><span data-stu-id="09387-1044">The `DataSet` does not associate an XML element with its corresponding `DataColumn` or `DataTable` when legal XML characters like ("_") are escaped in the serialized XML.</span></span> <span data-ttu-id="09387-1045">Die `DataSet` selbst nur schützt ungültige XML-Zeichen in XML-Elementnamen und kann daher nur diese verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="09387-1045">The `DataSet` itself only escapes illegal XML characters in XML element names and hence can only consume the same.</span></span> <span data-ttu-id="09387-1046">Wenn zulässige Zeichen in XML-Elementnamen in Escapezeichen eingeschlossen sind, wird das Element bei der Verarbeitung ignoriert.</span><span class="sxs-lookup"><span data-stu-id="09387-1046">When legal characters in XML element name are escaped, the element is ignored while processing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1047">Das folgende Beispiel erstellt eine <xref:System.Data.DataTable> mit zwei Spalten und zehn Zeilen.</span><span class="sxs-lookup"><span data-stu-id="09387-1047">The following example creates a <xref:System.Data.DataTable> containing two columns and ten rows.</span></span> <span data-ttu-id="09387-1048">Das Beispiel schreibt die <xref:System.Data.DataTable> Schemas und Daten zu einem <xref:System.Xml.XmlReader>.</span><span class="sxs-lookup"><span data-stu-id="09387-1048">The example writes the <xref:System.Data.DataTable> schema and data to an <xref:System.Xml.XmlReader>.</span></span> <span data-ttu-id="09387-1049">Das Beispiel erstellt eine zweite <xref:System.Data.DataTable> und ruft die <xref:System.Data.DataTable.ReadXml%2A> Methode, um mit dem Schema und Daten füllen die <xref:System.Xml.XmlReader> Instanz.</span><span class="sxs-lookup"><span data-stu-id="09387-1049">The example creates a second <xref:System.Data.DataTable> and calls the <xref:System.Data.DataTable.ReadXml%2A> method to fill it with schema and data from the <xref:System.Xml.XmlReader> instance.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlXmlReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlXmlReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1050">Liest ein XML-Schema in die <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1050">Reads an XML schema into the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1051">Verwenden der `ReadXmlSchema` Methode zum Erstellen des Schemas für eine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1051">Use the `ReadXmlSchema` method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-1052">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1052">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1053">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1053">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1054">Das XML-Schema wird gemäß dem XSD-standard interpretiert.</span><span class="sxs-lookup"><span data-stu-id="09387-1054">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1055">Die `ReadXmlSchema` Methode in der Regel aufgerufen wird, vor dem Aufrufen der <xref:System.Data.DataTable.ReadXml%2A> Methode dient zum Füllen der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1055">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Data.DataSet.ReadXmlSchema" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="09387-1056">Der zum Lesen des Schemas verwendete Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1056">The stream used to read the schema.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1057">Liest ein XML-Schema mit dem angegebenen Stream in die <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1057">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1058">Verwenden der <xref:System.Data.DataTable.ReadXmlSchema%2A> Methode zum Erstellen des Schemas für eine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1058">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-1059">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1059">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1060">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1060">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1061">Das XML-Schema wird gemäß dem XSD-standard interpretiert.</span><span class="sxs-lookup"><span data-stu-id="09387-1061">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1062">Beschädigte Daten kann auftreten, wenn die Msdata:DataType und die Typen xs: Type stimmen nicht überein.</span><span class="sxs-lookup"><span data-stu-id="09387-1062">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="09387-1063">Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1063">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="09387-1064">Die `ReadXmlSchema` Methode in der Regel aufgerufen wird, vor dem Aufrufen der <xref:System.Data.DataTable.ReadXml%2A> Methode dient zum Füllen der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1064">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="09387-1065">Verwenden Sie zum Erstellen einer geschachtelten Beziehungs mithilfe von XML-Schema implizite geschachtelte Elemente ein.</span><span class="sxs-lookup"><span data-stu-id="09387-1065">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="09387-1066">Sie können auch die geschachtelte Beziehung Verwendung expliziter Spaltennamen konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="09387-1066">You can also configure the nested relation to use explicit column names.</span></span> <span data-ttu-id="09387-1067">Elemente müssen implizit in der Reihenfolge für die entsprechenden DataTables zur Teilnahme an einer geschachtelten Beziehungs geschachtelt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-1067">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1068">Die folgende Konsolenanwendung erstellt eine neue <xref:System.Data.DataTable>, und schreibt das Schema für diese Tabelle zu einer <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="09387-1068">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="09387-1069">Klicken Sie dann das Beispiel erstellt ein neues <xref:System.Data.DataTable> und liest das Schema aus dem gespeicherten XML-Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1069">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlIOStream#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlIOStream/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As TextReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::IO::TextReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="09387-1070">Der zum Lesen der Schemainformationen verwendete <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1070">The <see cref="T:System.IO.TextReader" /> used to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1071">Liest ein XML-Schema mit dem angegebenen <see cref="T:System.Data.DataTable" /> in die <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1071">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1072">Verwenden der <xref:System.Data.DataTable.ReadXmlSchema%2A> Methode zum Erstellen des Schemas für eine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1072">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-1073">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1073">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1074">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1074">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1075">Das XML-Schema wird gemäß dem XSD-standard interpretiert.</span><span class="sxs-lookup"><span data-stu-id="09387-1075">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1076">Beschädigte Daten kann auftreten, wenn die Msdata:DataType und die Typen xs: Type stimmen nicht überein.</span><span class="sxs-lookup"><span data-stu-id="09387-1076">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="09387-1077">Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1077">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="09387-1078">Die `ReadXmlSchema` Methode in der Regel aufgerufen wird, vor dem Aufrufen der <xref:System.Data.DataTable.ReadXml%2A> Methode dient zum Füllen der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1078">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
 <span data-ttu-id="09387-1079">Verwenden Sie zum Erstellen einer geschachtelten Beziehungs mithilfe von XML-Schema implizite geschachtelte Elemente ein.</span><span class="sxs-lookup"><span data-stu-id="09387-1079">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="09387-1080">Sie können auch die geschachtelte Beziehung Verwendung expliziter Spaltennamen neu konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="09387-1080">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="09387-1081">Elemente müssen implizit in der Reihenfolge für die entsprechenden DataTables zur Teilnahme an einer geschachtelten Beziehungs geschachtelt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-1081">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1082">Die folgende Konsolenanwendung erstellt eine neue <xref:System.Data.DataTable>, und schreibt das Schema für diese Tabelle zu einer <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="09387-1082">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="09387-1083">Klicken Sie dann das Beispiel erstellt ein neues <xref:System.Data.DataTable> und liest das Schema aus dem gespeicherten XML-Schema mithilfe einer <xref:System.IO.StreamReader> (geerbt von <xref:System.IO.TextReader>) als Updatequelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1083">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.IO.StreamReader> (which inherits from <xref:System.IO.TextReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchema/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.IO.TextReader)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="09387-1084">Der Name der Datei, aus der die Schemainformationen gelesen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1084">The name of the file from which to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1085">Liest ein XML-Schema aus der angegebenen Datei in die <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1085">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> from the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1086">Verwenden der <xref:System.Data.DataTable.ReadXmlSchema%2A> Methode zum Erstellen des Schemas für eine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1086">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-1087">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1087">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1088">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1088">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1089">Das XML-Schema wird gemäß dem XSD-standard interpretiert.</span><span class="sxs-lookup"><span data-stu-id="09387-1089">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1090">Beschädigte Daten kann auftreten, wenn die Msdata:DataType und die Typen xs: Type stimmen nicht überein.</span><span class="sxs-lookup"><span data-stu-id="09387-1090">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="09387-1091">Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1091">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="09387-1092">Die `ReadXmlSchema` Methode in der Regel aufgerufen wird, vor dem Aufrufen der <xref:System.Data.DataTable.ReadXml%2A> Methode dient zum Füllen der `DataTable`.</span><span class="sxs-lookup"><span data-stu-id="09387-1092">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the `DataTable`.</span></span>  
  
 <span data-ttu-id="09387-1093">Verwenden Sie zum Erstellen einer geschachtelten Beziehungs mithilfe von XML-Schema implizite geschachtelte Elemente ein.</span><span class="sxs-lookup"><span data-stu-id="09387-1093">To create a nested relation using XML schema, use implicit nested elements.</span></span> <span data-ttu-id="09387-1094">Sie können auch die geschachtelte Beziehung Verwendung expliziter Spaltennamen neu konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="09387-1094">You can also reconfigure the nested relation to use explicit column names.</span></span> <span data-ttu-id="09387-1095">Elemente müssen implizit in der Reihenfolge für die entsprechenden DataTables zur Teilnahme an einer geschachtelten Beziehungs geschachtelt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-1095">Elements must be implicitly nested in order for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1096">Die folgende Konsolenanwendung erstellt eine neue <xref:System.Data.DataTable>, und das Schema für diese Tabelle in eine Datei schreibt.</span><span class="sxs-lookup"><span data-stu-id="09387-1096">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a file.</span></span> <span data-ttu-id="09387-1097">Klicken Sie dann das Beispiel erstellt ein neues <xref:System.Data.DataTable> und liest das Schema aus dem gespeicherten XML-Schema mithilfe der Datei als Quelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1097">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using the file as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaString#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaString/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSchema">
      <MemberSignature Language="C#" Value="public void ReadXmlSchema (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReadXmlSchema(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReadXmlSchema (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadXmlSchema(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="09387-1098">Der zum Lesen der Schemainformationen verwendete <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1098">The <see cref="T:System.Xml.XmlReader" /> used to read the schema information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1099">Liest ein XML-Schema mit dem angegebenen <see cref="T:System.Data.DataTable" /> in die <see cref="T:System.Xml.XmlReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1099">Reads an XML schema into the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1100">Verwenden der <xref:System.Data.DataTable.ReadXmlSchema%2A> Methode zum Erstellen des Schemas für eine <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1100">Use the <xref:System.Data.DataTable.ReadXmlSchema%2A> method to create the schema for a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-1101">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1101">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1102">Um ein Schema in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1102">To write a schema to an XML document, use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1103">Das XML-Schema wird gemäß dem XSD-standard interpretiert.</span><span class="sxs-lookup"><span data-stu-id="09387-1103">The XML schema is interpreted according to the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1104">Beschädigte Daten kann auftreten, wenn die Msdata:DataType und die Typen xs: Type stimmen nicht überein.</span><span class="sxs-lookup"><span data-stu-id="09387-1104">Data corruption can occur if the msdata:DataType and the xs:type types do not match.</span></span> <span data-ttu-id="09387-1105">Es wird keine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="09387-1105">No exception will be thrown.</span></span>  
  
 <span data-ttu-id="09387-1106">Die `ReadXmlSchema` Methode in der Regel aufgerufen wird, vor dem Aufrufen der <xref:System.Data.DataTable.ReadXml%2A> Methode dient zum Füllen der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1106">The `ReadXmlSchema` method is generally invoked before invoking the <xref:System.Data.DataTable.ReadXml%2A> method which is used to fill the <xref:System.Data.DataTable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1107">Die Möglichkeit zum Erstellen einer geschachtelten Beziehungs mithilfe von XML-Schema werden implizite geschachtelter Elemente aufweisen.</span><span class="sxs-lookup"><span data-stu-id="09387-1107">The way to create a nested relation using XML schema is to have implicit nested elements.</span></span> <span data-ttu-id="09387-1108">Darüber hinaus könnte die geschachtelte Beziehung neu konfiguriert werden, um explizite Spaltennamen sein.</span><span class="sxs-lookup"><span data-stu-id="09387-1108">Additionally, the nested relation could be re-wired, to use explicit column names.</span></span> <span data-ttu-id="09387-1109">Es ist zwingend erforderlich, für Elemente, die implizit für die entsprechenden DataTables zur Teilnahme an einer geschachtelten Beziehungs geschachtelt werden.</span><span class="sxs-lookup"><span data-stu-id="09387-1109">It is mandatory for elements to be implicitly nested for the corresponding DataTables to participate in a nested relation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1110">Die folgende Konsolenanwendung erstellt eine neue <xref:System.Data.DataTable>, und schreibt das Schema für diese Tabelle zu einer <xref:System.IO.MemoryStream>.</span><span class="sxs-lookup"><span data-stu-id="09387-1110">The following console application creates a new <xref:System.Data.DataTable>, and writes the schema for that table to a <xref:System.IO.MemoryStream>.</span></span> <span data-ttu-id="09387-1111">Klicken Sie dann das Beispiel erstellt ein neues <xref:System.Data.DataTable> und liest das Schema aus dem gespeicherten XML-Schema mithilfe einer <xref:System.Xml.XmlTextReader> (geerbt von <xref:System.Xml.XmlReader>) als Updatequelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1111">Then, the example creates a new <xref:System.Data.DataTable> and reads its schema from the saved XML schema, using a <xref:System.Xml.XmlTextReader> (which inherits from <xref:System.Xml.XmlReader>) as its source.</span></span>  
  
 [!code-csharp[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.ReadXmlSchemaReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.ReadXmlSchemaReader/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataSet.ReadXmlSchema(System.Xml.XmlReader)" />
      </Docs>
    </Member>
    <Member MemberName="ReadXmlSerializable">
      <MemberSignature Language="C#" Value="protected virtual void ReadXmlSerializable (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ReadXmlSerializable(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ReadXmlSerializable(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ReadXmlSerializable (reader As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ReadXmlSerializable(System::Xml::XmlReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="09387-1112">Ein <see cref="T:System.Xml.XmlReader" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1112">A <see cref="T:System.Xml.XmlReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1113">Liest aus einem XML-Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1113">Reads from an XML stream.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-1114">Führt einen Rollback aller Änderungen durch, die an der Tabelle seit dem Laden oder seit dem letzten Aufruf von <see cref="M:System.Data.DataTable.AcceptChanges" /> vorgenommen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1114">Rolls back all changes that have been made to the table since it was loaded, or the last time <see cref="M:System.Data.DataTable.AcceptChanges" /> was called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1115">Wenn <xref:System.Data.DataTable.RejectChanges%2A> aufgerufen wird, eine <xref:System.Data.DataRow> Objekte, die immer noch im Bearbeitungsmodus befinden Bearbeitungsvorgänge abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="09387-1115">When <xref:System.Data.DataTable.RejectChanges%2A> is called, any <xref:System.Data.DataRow> objects that are still in edit-mode cancel their edits.</span></span> <span data-ttu-id="09387-1116">Neue Zeilen werden entfernt.</span><span class="sxs-lookup"><span data-stu-id="09387-1116">New rows are removed.</span></span> <span data-ttu-id="09387-1117">Zeilen mit den <xref:System.Data.DataRowState> festgelegt `Modified` oder `Deleted` wieder auf den ursprünglichen Zustand zurück.</span><span class="sxs-lookup"><span data-stu-id="09387-1117">Rows with the <xref:System.Data.DataRowState> set to `Modified` or `Deleted` return back to their original state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1118">Im folgenden Beispiel werden mehrere Änderungen an einer <xref:System.Data.DataTable>, jedoch weist die Änderungen durch Aufrufen der <xref:System.Data.DataTable.RejectChanges%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1118">The following example makes several changes to a <xref:System.Data.DataTable>, but rejects the changes by invoking the <xref:System.Data.DataTable.RejectChanges%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RejectChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RejectChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotingFormat">
      <MemberSignature Language="C#" Value="public System.Data.SerializationFormat RemotingFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.SerializationFormat RemotingFormat" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.RemotingFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property RemotingFormat As SerializationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SerializationFormat RemotingFormat { System::Data::SerializationFormat get(); void set(System::Data::SerializationFormat value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.SerializationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1119">Ruft das Serialisierungsformat ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1119">Gets or sets the serialization format.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-1120">Eine <see cref="T:System.Data.SerializationFormat" />-Enumeration, die <see langword="Binary" />- oder <see langword="Xml" />-Serialisierung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1120">A <see cref="T:System.Data.SerializationFormat" /> enumeration specifying either <see langword="Binary" /> or <see langword="Xml" /> serialization.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-1121">Setzt die <see cref="T:System.Data.DataTable" /> auf den ursprünglichen Zustand zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1121">Resets the <see cref="T:System.Data.DataTable" /> to its original state.</span>
          </span>
          <span data-ttu-id="09387-1122">Zurücksetzen entfernt alle Daten, Indizes, Beziehungen und Spalten der Tabelle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1122">Reset removes all data, indexes, relations, and columns of the table.</span>
          </span>
          <span data-ttu-id="09387-1123">Wenn ein DataSet ein DataTable umfasst, ist die Tabelle noch ein Teil des DataSet, nachdem die Tabelle zurückgesetzt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1123">If a DataSet includes a DataTable, the table will still be part of the DataSet after the table is reset.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RowChanged">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanged As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1124">Tritt auf, nachdem eine <see cref="T:System.Data.DataRow" /> erfolgreich geändert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1124">Occurs after a <see cref="T:System.Data.DataRow" /> has been changed successfully.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1125">Weitere Informationen finden Sie unter [Behandeln von DataTable-Ereignissen](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="09387-1125">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanged Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanged Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowChanging">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowChanging" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowChanging As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1126">Tritt ein, wenn eine <see cref="T:System.Data.DataRow" /> geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1126">Occurs when a <see cref="T:System.Data.DataRow" /> is changing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1127">Weitere Informationen finden Sie unter [Behandeln von DataTable-Ereignissen](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="09387-1127">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowChanging Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowChanging Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleted">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleted As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1128">Tritt ein, nachdem eine Zeile in der Tabelle gelöscht wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1128">Occurs after a row in the table has been deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1129">Weitere Informationen finden Sie unter [Behandeln von DataTable-Ereignissen](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="09387-1129">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleted Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleted Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RowDeleting">
      <MemberSignature Language="C#" Value="public event System.Data.DataRowChangeEventHandler RowDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataRowChangeEventHandler RowDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.RowDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RowDeleting As DataRowChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataRowChangeEventHandler ^ RowDeleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1130">Tritt ein, bevor eine Zeile in der Tabelle gelöscht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1130">Occurs before a row in the table is about to be deleted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1131">Weitere Informationen finden Sie unter [Behandeln von DataTable-Ereignissen](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span><span class="sxs-lookup"><span data-stu-id="09387-1131">For more information, see [Handling DataTable Events](~/docs/framework/data/adonet/dataset-datatable-dataview/handling-datatable-events.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.RowDeleting Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.RowDeleting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rows">
      <MemberSignature Language="C#" Value="public System.Data.DataRowCollection Rows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataRowCollection Rows" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Rows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rows As DataRowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowCollection ^ Rows { System::Data::DataRowCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataRowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1132">Ruft die Auflistung der Zeilen ab, die zu dieser Tabelle gehören.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1132">Gets the collection of rows that belong to this table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-1133">Eine <see cref="T:System.Data.DataRowCollection" />, die <see cref="T:System.Data.DataRow" />-Objekte enthält, andernfalls ein NULL-Wert, wenn keine <see cref="T:System.Data.DataRow" />-Objekte vorhanden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1133">A <see cref="T:System.Data.DataRowCollection" /> that contains <see cref="T:System.Data.DataRow" /> objects; otherwise a null value if no <see cref="T:System.Data.DataRow" /> objects exist.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1134">Zum Erstellen eines neuen <xref:System.Data.DataRow>, verwenden Sie die <xref:System.Data.DataTable.NewRow%2A> Methode, um ein neues Objekt zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="09387-1134">To create a new <xref:System.Data.DataRow>, you must use the <xref:System.Data.DataTable.NewRow%2A> method to return a new object.</span></span> <span data-ttu-id="09387-1135">Ein solches Objekt wird automatisch konfiguriert, gemäß dem Schema definierten für die <xref:System.Data.DataTable> durch die Auflistung der <xref:System.Data.DataColumn> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09387-1135">Such an object is automatically configured according to the schema defined for the <xref:System.Data.DataTable> through its collection of <xref:System.Data.DataColumn> objects.</span></span> <span data-ttu-id="09387-1136">Fügen Sie nach dem Erstellen einer neuen Zeile, und Festlegen der Werte für jede Spalte in der Zeile, die Zeile an die <xref:System.Data.DataRowCollection> mithilfe der `Add` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1136">After creating a new row and setting the values for each column in the row, add the row to the <xref:System.Data.DataRowCollection> using the `Add` method.</span></span>  
  
 <span data-ttu-id="09387-1137">Jede <xref:System.Data.DataRow> in der Auflistung stellt eine Datenzeile in der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1137">Each <xref:System.Data.DataRow> in the collection represents a row of data in the table.</span></span> <span data-ttu-id="09387-1138">Um eine Änderung auf den Wert einer Spalte in der Zeile einen Commit auszuführen, rufen Sie die <xref:System.Data.DataTable.AcceptChanges%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1138">To commit a change to the value of a column in the row, you must invoke the <xref:System.Data.DataTable.AcceptChanges%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1139">Im folgenden sehen zwei Beispiele für zurückgeben und Festlegen von Zeilen.</span><span class="sxs-lookup"><span data-stu-id="09387-1139">The following shows two examples of returning and setting rows.</span></span> <span data-ttu-id="09387-1140">Im ersten Beispiel wird die <xref:System.Data.DataTable.Rows%2A> Eigenschaft und die Werte der einzelnen Spalten für jede Zeile ausgegeben.</span><span class="sxs-lookup"><span data-stu-id="09387-1140">The first example uses the <xref:System.Data.DataTable.Rows%2A> property and prints the value of each column for every row.</span></span> <span data-ttu-id="09387-1141">Im zweiten Beispiel wird die <xref:System.Data.DataTable> des Objekts <xref:System.Data.DataTable.NewRow%2A> Methode zum Erstellen eines neuen <xref:System.Data.DataRow> Objekt mit dem Schema der <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1141">The second example uses the <xref:System.Data.DataTable> object's <xref:System.Data.DataTable.NewRow%2A> method to create a new <xref:System.Data.DataRow> object with the schema of the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="09387-1142">Nach dem Festlegen der Werte der Zeilen, die Zeile hinzugefügt wird die <xref:System.Data.DataRowCollection> über die `Add` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1142">After setting the row values, the row is added to the <xref:System.Data.DataRowCollection> through the `Add` method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Rows Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Rows Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Rows Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="T:System.Data.DataRow" />
        <altmember cref="T:System.Data.DataRowCollection" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Select">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1143">Ruft ein Array von <see cref="T:System.Data.DataRow" />-Objekten ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1143">Gets an array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-1144">Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1144">Gets an array of all <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-1145">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1145">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1146">Um die richtigen Sortierreihenfolge sicherzustellen möchten, geben Sie Sortierkriterien mit <xref:System.Data.DataTable.Select%2A> oder <xref:System.Data.DataTable.Select%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-1146">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select%2A> or <xref:System.Data.DataTable.Select%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1147">Im folgende Beispiel gibt ein Array von <xref:System.Data.DataRow> Objekte über die <xref:System.Data.DataTable.Select%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1147">The following example returns an array of <xref:System.Data.DataRow> objects through the <xref:System.Data.DataTable.Select%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="09387-1148">Die beim Filtern der Zeilen zu verwendenden Kriterien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1148">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="09387-1149">Beispiele zum Filtern von Zeilen finden Sie unter [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1149">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1150">Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte ab, die den Filterkriterien entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1150">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-1151">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1151">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1152">Zum Erstellen der `filterExpression` Argument verwenden, gelten, die gleichen Regeln die <xref:System.Data.DataColumn> Klasse <xref:System.Data.DataColumn.Expression%2A> Eigenschaftswert für das Erstellen von Filtern.</span><span class="sxs-lookup"><span data-stu-id="09387-1152">To create the `filterExpression` argument, use the same rules that apply to the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value for creating filters.</span></span>  
  
 <span data-ttu-id="09387-1153">Um die richtigen Sortierreihenfolge sicherzustellen möchten, geben Sie Sortierkriterien mit <xref:System.Data.DataTable.Select%2A> oder <xref:System.Data.DataTable.Select%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-1153">To ensure the proper sort order, specify sort criteria with <xref:System.Data.DataTable.Select%2A> or <xref:System.Data.DataTable.Select%2A>.</span></span>  
  
 <span data-ttu-id="09387-1154">Wenn die Spalte für den Filter einen null-Wert enthält, werden sie nicht Teil des Resultsets.</span><span class="sxs-lookup"><span data-stu-id="09387-1154">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1155">Im folgenden Beispiel wird einen Filterausdruck, ein Array von zurückzugebenden <xref:System.Data.DataRow> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09387-1155">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
        <Parameter Name="sort" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="09387-1156">Die beim Filtern der Zeilen zu verwendenden Kriterien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1156">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="09387-1157">Beispiele zum Filtern von Zeilen finden Sie unter [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1157">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="09387-1158">Eine Zeichenfolge, die die Spalte und die Sortierrichtung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1158">A string specifying the column and sort direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1159">Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte, die die Filterkriterien erfüllen, in der angegebenen Sortierreihenfolge ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1159">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter criteria, in the specified sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-1160">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten, die dem Filterausdruck entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1160">An array of <see cref="T:System.Data.DataRow" /> objects matching the filter expression.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1161">In Form der `filterExpression` Argument, verwenden Sie die gleichen Regeln zum Erstellen der <xref:System.Data.DataColumn> Klasse <xref:System.Data.DataColumn.Expression%2A> Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="09387-1161">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="09387-1162">Die `Sort` Argument verwendet auch die gleichen Regeln zum Erstellen der Klasse <xref:System.Data.DataColumn.Expression%2A> Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="09387-1162">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="09387-1163">Wenn die Spalte für den Filter einen null-Wert enthält, werden sie nicht Teil des Resultsets.</span><span class="sxs-lookup"><span data-stu-id="09387-1163">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1164">Im folgenden Beispiel wird einen Filterausdruck, ein Array von zurückzugebenden <xref:System.Data.DataRow> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09387-1164">The following example uses a filter expression to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataTable.CaseSensitive" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] Select (string filterExpression, string sort, System.Data.DataViewRowState recordStates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] Select(string filterExpression, string sort, valuetype System.Data.DataViewRowState recordStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.Select(System.String,System.String,System.Data.DataViewRowState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (filterExpression As String, sort As String, recordStates As DataViewRowState) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ Select(System::String ^ filterExpression, System::String ^ sort, System::Data::DataViewRowState recordStates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filterExpression" Type="System.String" />
        <Parameter Name="sort" Type="System.String" />
        <Parameter Name="recordStates" Type="System.Data.DataViewRowState" />
      </Parameters>
      <Docs>
        <param name="filterExpression">
          <span data-ttu-id="09387-1165">Die beim Filtern der Zeilen zu verwendenden Kriterien.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1165">The criteria to use to filter the rows.</span>
          </span>
          <span data-ttu-id="09387-1166">Beispiele zum Filtern von Zeilen finden Sie unter [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1166">For examples on how to filter rows, see [DataView RowFilter Syntax [C#]](http://www.csharp-examples.net/dataview-rowfilter/).</span>
          </span>
        </param>
        <param name="sort">
          <span data-ttu-id="09387-1167">Eine Zeichenfolge, die die Spalte und die Sortierrichtung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1167">A string specifying the column and sort direction.</span>
          </span>
        </param>
        <param name="recordStates">
          <span data-ttu-id="09387-1168">Einer der <see cref="T:System.Data.DataViewRowState" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1168">One of the <see cref="T:System.Data.DataViewRowState" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1169">Ruft ein Array aller <see cref="T:System.Data.DataRow" />-Objekte ab, die die Filterkriterien in der Sortierreihenfolge erfüllen und zum angegebenen Zustand passen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1169">Gets an array of all <see cref="T:System.Data.DataRow" /> objects that match the filter in the order of the sort that match the specified state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-1170">Ein Array von <see cref="T:System.Data.DataRow" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1170">An array of <see cref="T:System.Data.DataRow" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1171">In Form der `filterExpression` Argument, verwenden Sie die gleichen Regeln zum Erstellen der <xref:System.Data.DataColumn> Klasse <xref:System.Data.DataColumn.Expression%2A> Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="09387-1171">To form the `filterExpression` argument, use the same rules for creating the <xref:System.Data.DataColumn> class's <xref:System.Data.DataColumn.Expression%2A> property value.</span></span> <span data-ttu-id="09387-1172">Die `Sort` Argument verwendet auch die gleichen Regeln zum Erstellen der Klasse <xref:System.Data.DataColumn.Expression%2A> Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="09387-1172">The `Sort` argument also uses the same rules for creating class's <xref:System.Data.DataColumn.Expression%2A> strings.</span></span>  
  
 <span data-ttu-id="09387-1173">Wenn die Spalte für den Filter einen null-Wert enthält, werden sie nicht Teil des Resultsets.</span><span class="sxs-lookup"><span data-stu-id="09387-1173">If the column on the filter contains a null value, it will not be part of the result.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1174">Im folgenden Beispiel wird ein Ausdruck und Datensatz-Filterstatus zurückzugebenden ein Array von <xref:System.Data.DataRow> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09387-1174">The following example uses a filter expression and record state to return an array of <xref:System.Data.DataRow> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.Select3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.Select3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1175">Ruft eine <see cref="T:System.ComponentModel.ISite" /> für den <see cref="T:System.Data.DataTable" /> ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1175">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-1176">Ein <see cref="T:System.ComponentModel.ISite" /> für das <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1176">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1177">Sites Binden einer <xref:System.ComponentModel.Component> auf eine <xref:System.ComponentModel.Container> und ermöglichen die Kommunikation zwischen diesen sowie bieten eine Möglichkeit für den Container, seine Komponenten zu verwalten.</span><span class="sxs-lookup"><span data-stu-id="09387-1177">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Container> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1178">Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1178">For a description of this member, see <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-1179">
            <see langword="true" />, wenn die Auflistung eine Auflistung von <see cref="T:System.Collections.IList" />-Objekten ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1179">
              <see langword="true" /> if the collection is a collection of <see cref="T:System.Collections.IList" /> objects; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1180">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="09387-1180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="09387-1181">Er kann nur verwendet werden, wenn die <xref:System.Data.DataTable>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="09387-1181">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-1182">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.ComponentModel.IListSource.GetList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1182">For a description of this member, see <see cref="M:System.ComponentModel.IListSource.GetList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-1183">Eine <see cref="T:System.Collections.IList" />, die an eine Datenquelle eines Objekts gebunden werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1183">An <see cref="T:System.Collections.IList" /> that can be bound to a data source from the object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1184">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="09387-1184">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="09387-1185">Er kann nur verwendet werden, wenn die <xref:System.Data.DataTable>-Instanz in eine <xref:System.ComponentModel.IListSource>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="09387-1185">It can be used only when the <xref:System.Data.DataTable> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.GetSchema">
      <MemberSignature Language="C#" Value="System.Xml.Schema.XmlSchema IXmlSerializable.GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Xml.Schema.XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#GetSchema" />
      <MemberSignature Language="VB.NET" Value="Function GetSchema () As XmlSchema Implements IXmlSerializable.GetSchema" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Xml::Schema::XmlSchema ^ System.Xml.Serialization.IXmlSerializable.GetSchema() = System::Xml::Serialization::IXmlSerializable::GetSchema;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.GetSchema</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-1186">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1186">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.GetSchema" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-1187">Ein <see cref="T:System.Xml.Schema.XmlSchema" /> zur Beschreibung der XML-Darstellung des Objekts, das von der <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />-Methode erstellt und von der <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />-Methode verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1187">An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1188">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="09387-1188">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="09387-1189">Er kann nur verwendet werden, wenn die <xref:System.Data.DataSet>-Instanz in eine <xref:System.Xml.Serialization.IXmlSerializable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="09387-1189">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.ReadXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.ReadXml (System.Xml.XmlReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.ReadXml(class System.Xml.XmlReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Sub ReadXml (reader As XmlReader) Implements IXmlSerializable.ReadXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.ReadXml(System::Xml::XmlReader ^ reader) = System::Xml::Serialization::IXmlSerializable::ReadXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="09387-1190">Ein XmlReader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1190">An XmlReader.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1191">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1191">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1192">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="09387-1192">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="09387-1193">Er kann nur verwendet werden, wenn die <xref:System.Data.DataSet>-Instanz in eine <xref:System.Xml.Serialization.IXmlSerializable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="09387-1193">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Xml.Serialization.IXmlSerializable.WriteXml">
      <MemberSignature Language="C#" Value="void IXmlSerializable.WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Xml.Serialization.IXmlSerializable.WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Sub WriteXml (writer As XmlWriter) Implements IXmlSerializable.WriteXml" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Xml.Serialization.IXmlSerializable.WriteXml(System::Xml::XmlWriter ^ writer) = System::Xml::Serialization::IXmlSerializable::WriteXml;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1194">Ein XmlWriter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1194">An XmlWriter.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1195">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1195">For a description of this member, see <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1196">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="09387-1196">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="09387-1197">Er kann nur verwendet werden, wenn die <xref:System.Data.DataSet>-Instanz in eine <xref:System.Xml.Serialization.IXmlSerializable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="09387-1197">It can be used only when the <xref:System.Data.DataSet> instance is cast to an <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableCleared">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableCleared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableCleared" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableCleared" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableCleared As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableCleared;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1198">Tritt ein, nachdem eine <see cref="T:System.Data.DataTable" /> gelöscht wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1198">Occurs after a <see cref="T:System.Data.DataTable" /> is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1199">Die <xref:System.Data.DataTable.TableCleared> Ereignis wird ausgelöst, unmittelbar nachdem alle Zeilen, jedoch bevor wurden erfolgreich gelöscht wurden die <xref:System.Data.DataTable.Clear%2A> -Methode die Steuerung wieder an den Aufrufer zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="09387-1199">The <xref:System.Data.DataTable.TableCleared> event is fired immediately after all rows have been successfully cleared but before the <xref:System.Data.DataTable.Clear%2A> method returns control back to the caller.</span></span> <span data-ttu-id="09387-1200">Die <xref:System.Data.DataTable.TableCleared> Ereignis wird nicht ausgelöst, wenn alle Ausnahmen während der Löschvorgang.</span><span class="sxs-lookup"><span data-stu-id="09387-1200">The <xref:System.Data.DataTable.TableCleared> event is not fired if there are any exceptions during the clear operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableClearing">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableClearEventHandler TableClearing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableClearEventHandler TableClearing" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableClearing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableClearing As DataTableClearEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableClearEventHandler ^ TableClearing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableClearEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1201">Tritt ein, wenn eine <see cref="T:System.Data.DataTable" /> gelöscht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1201">Occurs when a <see cref="T:System.Data.DataTable" /> is cleared.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1202">Die <xref:System.Data.DataTable.TableClearing> Ereignis wird ausgelöst, bevor die Verarbeitung der der <xref:System.Data.DataTable.Clear%2A> -Vorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="09387-1202">The <xref:System.Data.DataTable.TableClearing> event is fired before processing of the <xref:System.Data.DataTable.Clear%2A> operation begins.</span></span> <span data-ttu-id="09387-1203">Dieses Ereignis wird immer ausgelöst, wenn die <xref:System.Data.DataTable.Clear%2A> Methode aufgerufen wird, selbst wenn die Tabelle keine Zeilen enthält.</span><span class="sxs-lookup"><span data-stu-id="09387-1203">This event is always fired when the <xref:System.Data.DataTable.Clear%2A> method is invoked, even if the table contains zero rows.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataTable.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1204">Ruft den Namen der <see cref="T:System.Data.DataTable" /> ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1204">Gets or sets the name of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="09387-1205">Der Name des <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1205">The name of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1206">Die <xref:System.Data.DataTable.TableName%2A> wird verwendet, um diese Tabelle aus dem übergeordneten zurückgeben <xref:System.Data.DataSet> des Objekts <xref:System.Data.DataTableCollection> (zurückgegebenes der <xref:System.Data.DataSet.Tables%2A> Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="09387-1206">The <xref:System.Data.DataTable.TableName%2A> is used to return this table from the parent <xref:System.Data.DataSet> object's <xref:System.Data.DataTableCollection> (returned by the <xref:System.Data.DataSet.Tables%2A> property).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1207">Im folgenden Beispiel wird die <xref:System.Data.DataTable.TableName%2A> für jede Tabelle in einer Auflistung von <xref:System.Data.DataTable> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09387-1207">The following example prints the <xref:System.Data.DataTable.TableName%2A> for each table in a collection of <xref:System.Data.DataTable> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.TableName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.TableName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.TableName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="09387-1208">Es wird <see langword="null" /> oder eine leere Zeichenfolge ("") übergeben, und diese Tabelle gehört zu einer Auflistung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1208">
              <see langword="null" /> or empty string ("") is passed in and this table belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="09387-1209">Die Tabelle gehört zu einer Auflistung, die bereits eine Tabelle mit demselben Namen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1209">The table belongs to a collection that already has a table with the same name.</span>
          </span>
          <span data-ttu-id="09387-1210">(Beim Vergleich wird die Groß- und Kleinschreibung berücksichtigt.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1210">(Comparison is case-sensitive).</span>
          </span>
        </exception>
        <altmember cref="T:System.Data.DataSet" />
        <altmember cref="P:System.Data.DataSet.Tables" />
      </Docs>
    </Member>
    <Member MemberName="TableNewRow">
      <MemberSignature Language="C#" Value="public event System.Data.DataTableNewRowEventHandler TableNewRow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.DataTableNewRowEventHandler TableNewRow" />
      <MemberSignature Language="DocId" Value="E:System.Data.DataTable.TableNewRow" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TableNewRow As DataTableNewRowEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::DataTableNewRowEventHandler ^ TableNewRow;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTableNewRowEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1211">Tritt ein, wenn eine neue <see cref="T:System.Data.DataRow" /> eingefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1211">Occurs when a new <see cref="T:System.Data.DataRow" /> is inserted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1212">Wird ausgelöst, nachdem ein neues <xref:System.Data.DataRow> mit erstellt wurde <xref:System.Data.DataTable.NewRow%2A>.</span><span class="sxs-lookup"><span data-stu-id="09387-1212">Fires after a new <xref:System.Data.DataRow> has been created using <xref:System.Data.DataTable.NewRow%2A>.</span></span> <span data-ttu-id="09387-1213">Dieses Ereignis wird ausgelöst, bevor die aufgerufene `NewRow` -Methode zurückkehrt.</span><span class="sxs-lookup"><span data-stu-id="09387-1213">This event is fired before the invoked `NewRow` method returns.</span></span> <span data-ttu-id="09387-1214">Die neue <xref:System.Data.DataRow> Instanz getrennt ist, wurde nicht auf die Auflistung hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="09387-1214">The new <xref:System.Data.DataRow> instance is detached; it has not been added to the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="09387-1215">Ruft den <see cref="P:System.Data.DataTable.TableName" /> und den <see cref="P:System.Data.DataTable.DisplayExpression" />, sofern vorhanden, als verkettete Zeichenfolge ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1215">Gets the <see cref="P:System.Data.DataTable.TableName" /> and <see cref="P:System.Data.DataTable.DisplayExpression" />, if there is one as a concatenated string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="09387-1216">Eine Zeichenfolge, die aus dem <see cref="P:System.Data.DataTable.TableName" />-Wert und dem <see cref="P:System.Data.DataTable.DisplayExpression" />-Wert besteht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1216">A string consisting of the <see cref="P:System.Data.DataTable.TableName" /> and the <see cref="P:System.Data.DataTable.DisplayExpression" /> values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1217">Ruft die <xref:System.Data.DataTable.TableName%2A> und <xref:System.Data.DataTable.DisplayExpression%2A> für die <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1217">Gets the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> for the <xref:System.Data.DataTable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1218">Das folgende Beispiel gibt die <xref:System.Data.DataTable.TableName%2A> und <xref:System.Data.DataTable.DisplayExpression%2A> mithilfe der <xref:System.Data.DataTable.ToString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1218">The following example returns the <xref:System.Data.DataTable.TableName%2A> and <xref:System.Data.DataTable.DisplayExpression%2A> using the <xref:System.Data.DataTable.ToString%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData DataTable.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataTable.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataTable.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXml">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1219">Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataTable" /> als XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1219">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1220">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1220">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1221">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die implizit enthalten die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1221">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1222">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1222">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1223">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1223">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1224">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1224">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1225">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1225">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1226">Die folgende Konsolenanwendung erstellt zwei <xref:System.Data.DataTable> Instanzen, fügt Sie jedes Element eine <xref:System.Data.DataSet>, erstellt eine <xref:System.Data.DataRelation> verknüpfen die beiden Tabellen und verwendet dann die <xref:System.Data.DataTable.WriteXml%2A> -Methode, die Daten in der übergeordneten Tabelle, eine Schreiben<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="09387-1226">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="09387-1227">Das Beispiel veranschaulicht das Verhalten beim Festlegen der `writeHierarchy` Parameter für jeden seiner Werte.</span><span class="sxs-lookup"><span data-stu-id="09387-1227">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1228">Dieses Beispiel zeigt, wie Sie eine der überladenen Versionen von WriteXml verwenden.</span><span class="sxs-lookup"><span data-stu-id="09387-1228">This example shows how to use one of the overloaded versions of WriteXml.</span></span> <span data-ttu-id="09387-1229">Weitere Beispiele für die Verfügbarkeit, finden Sie unter den einzelnen Überladung-Themen.</span><span class="sxs-lookup"><span data-stu-id="09387-1229">For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="09387-1230">Im Beispiel wird die folgende Ausgabe im Konsolenfenster angezeigt:</span><span class="sxs-lookup"><span data-stu-id="09387-1230">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="09387-1231">Der Stream, in den die Daten geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1231">The stream to which the data will be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1232">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.Stream" /> im XML-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1232">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1233">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1233">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1234">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1234">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1235">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1235">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1236">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1236">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1237">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1237">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1238">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1238">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1239">
            <see cref="T:System.IO.TextWriter" />, mit dem der Inhalt geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1239">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1240">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.TextWriter" /> im XML-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1240">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1241">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1241">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1242">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1242">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1243">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1243">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1244">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1244">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1245">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1245">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1246">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1246">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="09387-1247">Die Datei, in die die XML-Daten geschrieben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1247">The file to which to write the XML data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1248">Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataTable" /> als XML mit der angegebenen Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1248">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1249">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1249">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1250">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1250">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1251">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1251">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1252">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1252">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1253">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1253">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1254">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1254">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1255">Der <see cref="T:System.Xml.XmlWriter" />, mit dem der Inhalt geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1255">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1256">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.Xml.XmlWriter" /> im XML-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1256">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1257">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1257">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1258">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die implizit enthalten die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1258">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1259">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1259">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1260">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1260">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1261">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1261">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1262">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1262">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="09387-1263">Der Stream, in den die Daten geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1263">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1264">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1264">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1265">Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1265">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1266">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.Stream" /> im XML-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1266">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.Stream" />.</span>
          </span>
          <span data-ttu-id="09387-1267">Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1267">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1268">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1268">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1269">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1269">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1270">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1270">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1271">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1271">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1272">Normalerweise die `WriteXml` Methode schreibt die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1272">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="09387-1273">Zum Schreiben der Daten für die aktuelle Tabelle und alle untergeordneten verknüpfte Tabellen, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1273">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1274">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1274">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="09387-1275">Der Stream, in den die Daten geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1275">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="09387-1276">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1276">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1277">Schreibt im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" /> in die angegebene Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1277">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="09387-1278">Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1278">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1279">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1279">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1280">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1280">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1281">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1281">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1282">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1282">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1283">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1283">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1284">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1284">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1285">
            <see cref="T:System.IO.TextWriter" />, mit dem der Inhalt geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1285">The <see cref="T:System.IO.TextWriter" /> with which to write the content.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1286">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1286">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1287">Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1287">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1288">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.IO.TextWriter" /> im XML-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1288">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="09387-1289">Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1289">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1290">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1290">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1291">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1291">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1292">Normalerweise die `WriteXml` Methode schreibt die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1292">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="09387-1293">Um die Daten für die aktuelle Tabelle und alle seine untergeordneten, verwandten Tabellen zu schreiben, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1293">To write the data for the current table and all its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1294">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1294">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1295">Die folgende Konsolenanwendung erstellt zwei <xref:System.Data.DataTable> Instanzen, fügt Sie jedes Element eine <xref:System.Data.DataSet>, erstellt eine <xref:System.Data.DataRelation> verknüpfen die beiden Tabellen und verwendet dann die <xref:System.Data.DataTable.WriteXml%2A> -Methode, die Daten in der übergeordneten Tabelle, eine Schreiben<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="09387-1295">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="09387-1296">Das Beispiel veranschaulicht das Verhalten beim Festlegen der `writeHierarchy` Parameter `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1296">The example demonstrates the behavior when setting the `writeHierarchy` parameter to `true`.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXml#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXml#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXml/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1297">Der zum Schreiben des Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1297">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="09387-1298">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1298">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1299">Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.IO.TextWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1299">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="09387-1300">Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1300">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1301">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1301">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1302">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1302">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1303">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1303">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1304">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1304">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1305">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1305">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1306">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1306">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="09387-1307">Die Datei, in die die XML-Daten geschrieben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1307">The file to which to write the XML data.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1308">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1308">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1309">Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1309">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1310">Schreibt den aktuellen Inhalt der <see cref="T:System.Data.DataTable" /> als XML mit der angegebenen Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1310">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified file.</span>
          </span>
          <span data-ttu-id="09387-1311">Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1311">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1312">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1312">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1313">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1313">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1314">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1314">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1315">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1315">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1316">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1316">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="09387-1317">Normalerweise die `WriteXml` Methode schreibt die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1317">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="09387-1318">Zum Schreiben der Daten für die aktuelle Tabelle und alle untergeordneten verknüpfte Tabellen, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1318">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1319">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1319">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="09387-1320">Der Name der Datei, in die die Daten geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1320">The name of the file to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="09387-1321">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1321">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1322">Schreibt mit der angegebenen Datei und im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für das <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1322">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="09387-1323">Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1323">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1324">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1324">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1325">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die implizit enthalten die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1325">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1326">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1326">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1327">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1327">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1328">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1328">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1329">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1329">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1330">Der <see cref="T:System.Xml.XmlWriter" />, mit dem der Inhalt geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1330">The <see cref="T:System.Xml.XmlWriter" /> with which to write the contents.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1331">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1331">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1332">Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1332">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1333">Schreibt den aktuellen Inhalt des <see cref="T:System.Data.DataTable" /> mithilfe des angegebenen <see cref="T:System.Xml.XmlWriter" /> im XML-Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1333">Writes the current contents of the <see cref="T:System.Data.DataTable" /> as XML using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1334">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1334">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1335">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die implizit enthalten die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1335">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1336">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1336">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1337">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1337">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1338">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1338">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="09387-1339">Normalerweise die `WriteXml` Methode schreibt die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1339">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="09387-1340">Um die Daten für die aktuelle Tabelle und ihre gesamten zugehörigen Tabellen zu schreiben, rufen Sie die Methode mit der `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1340">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1341">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1341">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1342">Der zum Schreiben des Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1342">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="09387-1343">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1343">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1344">Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.Xml.XmlWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1344">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="09387-1345">Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1345">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1346">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1346">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1347">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die implizit enthalten die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1347">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1348">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1348">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1349">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1349">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1350">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1350">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1351">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1351">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.Stream stream, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.Stream stream, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.Stream,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::Stream ^ stream, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="09387-1352">Der Stream, in den die Daten geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1352">The stream to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="09387-1353">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1353">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1354">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1354">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1355">Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1355">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1356">Schreibt im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" /> in die angegebene Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1356">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> to the specified file using the specified <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="09387-1357">Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1357">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="09387-1358">Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1358">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1359">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer `DataTable` in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1359">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1360">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die `XmlWriteMode` Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1360">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1361">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1361">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1362">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1362">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1363">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1363">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="09387-1364">In der Regel wird die `WriteXml` Methode speichert die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1364">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="09387-1365">Die `WriteXml` Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer `DataTable` in ein XML-Dokument während der `WriteXmlSchema` Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1365">The `WriteXml` method provides a way to write either data only, or both data and schema from a `DataTable` into an XML document, whereas the `WriteXmlSchema` method writes only the schema.</span></span> <span data-ttu-id="09387-1366">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die `XmlWriteMode` Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1366">To write both data and schema, use one of the overloads that includes the `XmlWriteMode` parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1367">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1367">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1368">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1368">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1369">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1369">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="09387-1370">Normalerweise die `WriteXml` Methode schreibt die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1370">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="09387-1371">Zum Schreiben der Daten für die aktuelle Tabelle und alle untergeordneten verknüpfte Tabellen, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1371">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1372">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1372">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.IO.TextWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.IO.TextWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.IO.TextWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As TextWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::IO::TextWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1373">Der zum Schreiben des Dokuments verwendete <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1373">The <see cref="T:System.IO.TextWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="09387-1374">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1374">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1375">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1375">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1376">Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1376">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1377">Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.IO.TextWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1377">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.IO.TextWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="09387-1378">Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1378">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="09387-1379">Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1379">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1380">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1380">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1381">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1381">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1382">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1382">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1383">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1383">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1384">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1384">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="09387-1385">In der Regel wird die `WriteXml` Methode speichert die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1385">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="09387-1386">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1386">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1387">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die enthält die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1387">To write both data and schema, use one of the overloads that includes the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1388">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1388">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1389">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1389">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1390">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1390">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="09387-1391">Normalerweise die `WriteXml` Methode schreibt die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1391">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="09387-1392">Zum Schreiben der Daten für die aktuelle Tabelle und alle untergeordneten verknüpfte Tabellen, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1392">To write the data for the current table and all of its descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1393">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1393">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1394">Die folgende Konsolenanwendung erstellt zwei <xref:System.Data.DataTable> Instanzen, fügt Sie jedes Element eine <xref:System.Data.DataSet>, erstellt eine <xref:System.Data.DataRelation> verknüpfen die beiden Tabellen und verwendet dann die <xref:System.Data.DataTable.WriteXml%2A> -Methode, die Daten in der übergeordneten Tabelle, eine Schreiben<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="09387-1394">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXml%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="09387-1395">Das Beispiel veranschaulicht das Verhalten beim Festlegen der `writeHierarchy` Parameter für jeden seiner Werte.</span><span class="sxs-lookup"><span data-stu-id="09387-1395">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlIO#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlIO/VB/source.vb#1)]  
  
 <span data-ttu-id="09387-1396">Im Beispiel wird die folgende Ausgabe im Konsolenfenster angezeigt:</span><span class="sxs-lookup"><span data-stu-id="09387-1396">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
</NewDataSet>  
==============================  
Customer table, with hierarchy  
==============================  
<NewDataSet>  
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema  
" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
      <xs:complexType>  
        <xs:choice minOccurs="0" maxOccurs="unbounded">  
          <xs:element name="Table1">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="ID" type="xs:int" />  
                <xs:element name="Name" type="xs:string" minOccurs="0" />  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
          <xs:element name="Table2">  
            <xs:complexType>  
              <xs:sequence>  
                <xs:element name="OrderID" type="xs:int" />  
                <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
                <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
  
              </xs:sequence>  
            </xs:complexType>  
          </xs:element>  
        </xs:choice>  
      </xs:complexType>  
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table1" />  
        <xs:field xpath="ID" />  
      </xs:unique>  
      <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" m  
sdata:PrimaryKey="true">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="OrderID" />  
      </xs:unique>  
      <xs:keyref name="CustomerOrder" refer="Constraint1">  
        <xs:selector xpath=".//Table2" />  
        <xs:field xpath="CustomerID" />  
      </xs:keyref>  
    </xs:element>  
  </xs:schema>  
  <Table1>  
    <ID>1</ID>  
    <Name>Mary</Name>  
  </Table1>  
  <Table1>  
    <ID>2</ID>  
    <Name>Andy</Name>  
  </Table1>  
  <Table1>  
    <ID>3</ID>  
    <Name>Peter</Name>  
  </Table1>  
  <Table1>  
    <ID>4</ID>  
    <Name>Russ</Name>  
  </Table1>  
  <Table2>  
    <OrderID>1</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2003-12-02T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>2</OrderID>  
    <CustomerID>1</CustomerID>  
    <OrderDate>2004-01-03T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>3</OrderID>  
    <CustomerID>2</CustomerID>  
    <OrderDate>2004-11-13T00:00:00.0000000-08:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>4</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-16T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>5</OrderID>  
    <CustomerID>3</CustomerID>  
    <OrderDate>2004-05-22T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
  <Table2>  
    <OrderID>6</OrderID>  
    <CustomerID>4</CustomerID>  
    <OrderDate>2004-06-15T00:00:00.0000000-07:00</OrderDate>  
  </Table2>  
</NewDataSet>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (string fileName, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(string fileName, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.String,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (fileName As String, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::String ^ fileName, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="09387-1397">Der Name der Datei, in die die Daten geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1397">The name of the file to which the data will be written.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="09387-1398">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1398">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1399">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1399">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1400">Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1400">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1401">Schreibt mit der angegebenen Datei und im angegebenen <see cref="T:System.Data.DataTable" /> die aktuellen Daten und bei Bedarf das Schema für das <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1401">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified file and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="09387-1402">Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1402">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="09387-1403">Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1403">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1404">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1404">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1405">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die implizit enthalten die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1405">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1406">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1406">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1407">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1407">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1408">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1408">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="09387-1409">In der Regel wird die `WriteXml` Methode speichert die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1409">Normally, the `WriteXml` method saves data only for the current table.</span></span> <span data-ttu-id="09387-1410">Wenn die Daten für die aktuelle Tabelle und alle Schemas gespeichert werden soll die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1410">If you want to save the data for the current table and all of schema, the <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1411">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die implizit enthalten die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1411">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1412">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1412">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1413">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1413">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1414">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1414">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="09387-1415">Normalerweise die `WriteXml` Methode schreibt die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1415">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="09387-1416">Um die Daten für die aktuelle Tabelle und alle abhängigen verknüpften Tabellen zu schreiben, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1416">To write the data for the current table and all descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1417">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1417">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXml">
      <MemberSignature Language="C#" Value="public void WriteXml (System.Xml.XmlWriter writer, System.Data.XmlWriteMode mode, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXml(class System.Xml.XmlWriter writer, valuetype System.Data.XmlWriteMode mode, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXml(System.Xml.XmlWriter,System.Data.XmlWriteMode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXml (writer As XmlWriter, mode As XmlWriteMode, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXml(System::Xml::XmlWriter ^ writer, System::Data::XmlWriteMode mode, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="mode" Type="System.Data.XmlWriteMode" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1418">Der zum Schreiben des Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1418">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="mode">
          <span data-ttu-id="09387-1419">Einer der <see cref="T:System.Data.XmlWriteMode" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1419">One of the <see cref="T:System.Data.XmlWriteMode" /> values.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1420">Wenn <see langword="true" />, wird der Inhalt der aktuellen Tabelle und ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1420">If <see langword="true" />, write the contents of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1421">Wenn <see langword="false" /> (der Standardwert), werden nur die Daten der aktuellen Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1421">If <see langword="false" /> (the default value), write the data for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1422">Schreibt mit dem angegebenen <see cref="T:System.Data.DataTable" /> und im angegebenen <see cref="T:System.Xml.XmlWriter" /> die aktuellen Daten und bei Bedarf das Schema für die <see cref="T:System.Data.XmlWriteMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1422">Writes the current data, and optionally the schema, for the <see cref="T:System.Data.DataTable" /> using the specified <see cref="T:System.Xml.XmlWriter" /> and <see cref="T:System.Data.XmlWriteMode" />.</span>
          </span>
          <span data-ttu-id="09387-1423">Um das Schema zu schreiben, legen Sie den Wert für den <paramref name="mode" />-Parameter auf <see langword="WriteSchema" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1423">To write the schema, set the value for the <paramref name="mode" /> parameter to <see langword="WriteSchema" />.</span>
          </span>
          <span data-ttu-id="09387-1424">Legen Sie zum Speichern der Daten für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1424">To save the data for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1425">Die <xref:System.Data.DataTable.WriteXml%2A> Methode bietet eine Möglichkeit, entweder nur Daten zu schreiben oder Schemas und Daten aus einer <xref:System.Data.DataTable> in ein XML-Dokument während der <xref:System.Data.DataTable.WriteXmlSchema%2A> Methode schreibt nur das Schema.</span><span class="sxs-lookup"><span data-stu-id="09387-1425">The <xref:System.Data.DataTable.WriteXml%2A> method provides a way to write either data only, or both data and schema from a <xref:System.Data.DataTable> into an XML document, whereas the <xref:System.Data.DataTable.WriteXmlSchema%2A> method writes only the schema.</span></span> <span data-ttu-id="09387-1426">Verwenden Sie zum Schreiben von Daten und Schema eine der Überladungen, die implizit enthalten die <xref:System.Data.XmlWriteMode> Parameter, und legen Sie dessen Wert auf `WriteSchema`.</span><span class="sxs-lookup"><span data-stu-id="09387-1426">To write both data and schema, use one of the overloads that include the <xref:System.Data.XmlWriteMode> parameter, and set its value to `WriteSchema`.</span></span>  
  
 <span data-ttu-id="09387-1427">Beachten Sie, dass der gleiche "true" für die <xref:System.Data.DataTable.ReadXml%2A> und <xref:System.Data.DataTable.ReadXmlSchema%2A> Methoden bzw..</span><span class="sxs-lookup"><span data-stu-id="09387-1427">Note that the same is true for the <xref:System.Data.DataTable.ReadXml%2A> and <xref:System.Data.DataTable.ReadXmlSchema%2A> methods, respectively.</span></span> <span data-ttu-id="09387-1428">Zum Lesen von XML-Daten oder Schema und Daten in der `DataTable`, verwenden Sie die `ReadXml` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1428">To read XML data, or both schema and data into the `DataTable`, use the `ReadXml` method.</span></span> <span data-ttu-id="09387-1429">Um nur das Schema zu lesen, verwenden die `ReadXmlSchema` Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1429">To read just the schema, use the `ReadXmlSchema` method.</span></span>  
  
 <span data-ttu-id="09387-1430">Normalerweise die `WriteXml` Methode schreibt die Daten nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1430">Normally the `WriteXml` method writes the data only for the current table.</span></span> <span data-ttu-id="09387-1431">Um die Daten für die aktuelle Tabelle und ihre gesamten zugehörigen Tabellen zu schreiben, rufen Sie die Methode mit der `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1431">To write the data for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1432">Ein <xref:System.InvalidOperationException> wird ausgelöst, wenn der Spaltentyp in der `DataRow` aus gelesen oder geschrieben werden, um implementiert <xref:System.Dynamic.IDynamicMetaObjectProvider> und implementiert nicht die <xref:System.Xml.Serialization.IXmlSerializable>.</span><span class="sxs-lookup"><span data-stu-id="09387-1432">An <xref:System.InvalidOperationException> will be thrown if a column type in the `DataRow` being read from or written to implements <xref:System.Dynamic.IDynamicMetaObjectProvider> and does not implement <xref:System.Xml.Serialization.IXmlSerializable>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteXmlSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="09387-1433">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1433">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1434">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1434">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1435">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1435">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1436">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1436">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1437">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1437">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1438">Die folgende Konsolenanwendung erstellt zwei <xref:System.Data.DataTable> Instanzen, fügt Sie jedes Element eine <xref:System.Data.DataSet>, erstellt eine <xref:System.Data.DataRelation> verknüpfen die beiden Tabellen und verwendet dann die <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, die Daten in der übergeordneten Tabelle, eine Schreiben<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="09387-1438">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="09387-1439">Das Beispiel veranschaulicht das Verhalten beim Festlegen der `writeHierarchy` Parameter für jeden seiner Werte.</span><span class="sxs-lookup"><span data-stu-id="09387-1439">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09387-1440">In diesem Beispiel wird gezeigt, wie mit einer der überladenen Versionen der `WriteXmlSchema` andere Beispiele, die möglicherweise verfügbar ist, finden Sie in den einzelnen Überladung Themen.</span><span class="sxs-lookup"><span data-stu-id="09387-1440">This example shows how to use one of the overloaded versions of `WriteXmlSchema` For other examples that might be available, see the individual overload topics.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchemaOverload#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchemaOverload/VB/source.vb#1)]  
  
 <span data-ttu-id="09387-1441">Im Beispiel wird die folgende Ausgabe im Konsolenfenster angezeigt:</span><span class="sxs-lookup"><span data-stu-id="09387-1441">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="09387-1442">Der Stream, in den das XML-Schema geschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1442">The stream to which the XML schema will be written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1443">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in den angegebenen Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1443">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1444">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1444">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1445">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1445">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1446">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1446">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1447">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1447">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1448">Der <see cref="T:System.IO.TextWriter" />, mit dem geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1448">The <see cref="T:System.IO.TextWriter" /> with which to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1449">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1449">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1450">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1450">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1451">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1451">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1452">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1452">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1453">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1453">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="09387-1454">Der Name der zu verwendenden Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1454">The name of the file to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1455">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in die angegebene Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1455">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1456">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1456">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1457">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1457">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1458">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1458">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1459">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1459">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1460">Der zu verwendende <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1460">The <see cref="T:System.Xml.XmlWriter" /> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1461">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1461">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1462">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1462">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1463">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1463">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1464">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1464">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1465">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1465">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.Stream stream, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.Stream stream, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::Stream ^ stream, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="09387-1466">Der Stream, in den das XML-Schema geschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1466">The stream to which the XML schema will be written.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1467">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1467">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1468">Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1468">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1469">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in den angegebenen Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1469">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified stream.</span>
          </span>
          <span data-ttu-id="09387-1470">Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1470">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1471">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1471">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1472">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1472">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1473">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1473">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1474">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1474">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1475">Normalerweise die `WriteXmlSchema` Methode schreibt das Schema nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1475">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="09387-1476">Um das Schema für die aktuelle Tabelle und ihre gesamten zugehörigen Tabellen zu schreiben, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1476">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.IO.TextWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.IO.TextWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.IO.TextWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As TextWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::IO::TextWriter ^ writer, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1477">Der <see cref="T:System.IO.TextWriter" />, mit dem geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1477">The <see cref="T:System.IO.TextWriter" /> with which to write.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1478">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1478">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1479">Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1479">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1480">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.IO.TextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1480">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
          <span data-ttu-id="09387-1481">Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1481">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1482">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1482">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1483">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1483">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1484">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1484">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1485">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1485">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1486">Normalerweise die `WriteXmlSchema` Methode schreibt das Schema nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1486">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="09387-1487">Um das Schema für die aktuelle Tabelle und ihre gesamten zugehörigen Tabellen zu schreiben, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1487">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09387-1488">Die folgende Konsolenanwendung erstellt zwei <xref:System.Data.DataTable> Instanzen, fügt Sie jedes Element eine <xref:System.Data.DataSet>, erstellt eine <xref:System.Data.DataRelation> verknüpfen die beiden Tabellen und verwendet dann die <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, die Daten in der übergeordneten Tabelle, eine Schreiben<xref:System.IO.TextWriter>.</span><span class="sxs-lookup"><span data-stu-id="09387-1488">The following console application creates two <xref:System.Data.DataTable> instances, adds each to a <xref:System.Data.DataSet>, creates a <xref:System.Data.DataRelation> relating the two tables, and then uses the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the data contained within the parent table to a <xref:System.IO.TextWriter>.</span></span> <span data-ttu-id="09387-1489">Das Beispiel veranschaulicht das Verhalten beim Festlegen der `writeHierarchy` Parameter für jeden seiner Werte.</span><span class="sxs-lookup"><span data-stu-id="09387-1489">The example demonstrates the behavior when setting the `writeHierarchy` parameter to each of its values.</span></span>  
  
 [!code-csharp[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/CS/source.cs#1)]
 [!code-vb[DataWorks DataTable.WriteXmlSchema#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks DataTable.WriteXmlSchema/VB/source.vb#1)]  
  
 <span data-ttu-id="09387-1490">Im Beispiel wird die folgende Ausgabe im Konsolenfenster angezeigt:</span><span class="sxs-lookup"><span data-stu-id="09387-1490">The example displays the following output in the console window:</span></span>  
  
```  
==============================  
Customer table, without hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Ta  
ble1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
  </xs:element>  
</xs:schema>  
==============================  
Customer table, with hierarchy  
==============================  
<?xml version="1.0" encoding="utf-16"?>  
<xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema"  
xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">  
  <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:MainDataTable="Table1">  
    <xs:complexType>  
      <xs:choice minOccurs="0" maxOccurs="unbounded">  
        <xs:element name="Table1">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="ID" type="xs:int" />  
              <xs:element name="Name" type="xs:string" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
        <xs:element name="Table2">  
          <xs:complexType>  
            <xs:sequence>  
              <xs:element name="OrderID" type="xs:int" />  
              <xs:element name="CustomerID" type="xs:int" minOccurs="0" />  
              <xs:element name="OrderDate" type="xs:dateTime" minOccurs="0" />  
            </xs:sequence>  
          </xs:complexType>  
        </xs:element>  
      </xs:choice>  
    </xs:complexType>  
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table1" />  
      <xs:field xpath="ID" />  
    </xs:unique>  
    <xs:unique name="Table2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="OrderID" />  
    </xs:unique>  
    <xs:keyref name="CustomerOrder" refer="Constraint1">  
      <xs:selector xpath=".//Table2" />  
      <xs:field xpath="CustomerID" />  
    </xs:keyref>  
  </xs:element>  
</xs:schema>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (string fileName, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(string fileName, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (fileName As String, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::String ^ fileName, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="09387-1491">Der Name der zu verwendenden Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1491">The name of the file to use.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1492">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1492">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1493">Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1493">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1494">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema in die angegebene Datei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1494">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema to the specified file.</span>
          </span>
          <span data-ttu-id="09387-1495">Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1495">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1496">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1496">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1497">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1497">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1498">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1498">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1499">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1499">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1500">Normalerweise die `WriteXmlSchema` Methode schreibt das Schema nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1500">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="09387-1501">Um das Schema für die aktuelle Tabelle und ihre gesamten zugehörigen Tabellen zu schreiben, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1501">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteXmlSchema">
      <MemberSignature Language="C#" Value="public void WriteXmlSchema (System.Xml.XmlWriter writer, bool writeHierarchy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteXmlSchema(class System.Xml.XmlWriter writer, bool writeHierarchy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTable.WriteXmlSchema(System.Xml.XmlWriter,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteXmlSchema (writer As XmlWriter, writeHierarchy As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteXmlSchema(System::Xml::XmlWriter ^ writer, bool writeHierarchy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="writeHierarchy" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="09387-1502">Der zum Schreiben des Dokuments verwendete <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1502">The <see cref="T:System.Xml.XmlWriter" /> used to write the document.</span>
          </span>
        </param>
        <param name="writeHierarchy">
          <span data-ttu-id="09387-1503">Wenn <see langword="true" />, wird das Schema der aktuellen Tabelle und aller ihrer Nachfolgerelemente geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1503">If <see langword="true" />, write the schema of the current table and all its descendants.</span>
          </span>
          <span data-ttu-id="09387-1504">Wenn <see langword="false" /> (der Standardwert), wird nur das Schema für die aktuelle Tabelle geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1504">If <see langword="false" /> (the default value), write the schema for the current table only.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="09387-1505">Schreibt die aktuelle Datenstruktur der <see cref="T:System.Data.DataTable" /> als XML-Schema unter Verwendung des angegebenen <see cref="T:System.Xml.XmlWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1505">Writes the current data structure of the <see cref="T:System.Data.DataTable" /> as an XML schema using the specified <see cref="T:System.Xml.XmlWriter" />.</span>
          </span>
          <span data-ttu-id="09387-1506">Legen Sie zum Speichern des Schemas für die Tabelle und ihre Nachfolgerelemente den <paramref name="writeHierarchy" />-Parameter auf <see langword="true" /> fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="09387-1506">To save the schema for the table and all its descendants, set the <paramref name="writeHierarchy" /> parameter to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09387-1507">Verwenden der <xref:System.Data.DataTable.WriteXmlSchema%2A> -Methode, schreiben das Schema für eine <xref:System.Data.DataTable> ein XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="09387-1507">Use the <xref:System.Data.DataTable.WriteXmlSchema%2A> method to write the schema for a <xref:System.Data.DataTable> to an XML document.</span></span> <span data-ttu-id="09387-1508">Das Schema enthält die Tabelle, Beziehung, und Einschränkungsdefinitionen.</span><span class="sxs-lookup"><span data-stu-id="09387-1508">The schema includes table, relation, and constraint definitions.</span></span>  
  
 <span data-ttu-id="09387-1509">Das XML-Schema wird mit dem XSD-Standard geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09387-1509">The XML schema is written using the XSD standard.</span></span>  
  
 <span data-ttu-id="09387-1510">Um die Daten in ein XML-Dokument zu schreiben, verwenden die <xref:System.Data.DataTable.WriteXml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="09387-1510">To write the data to an XML document, use the <xref:System.Data.DataTable.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="09387-1511">Normalerweise die `WriteXmlSchema` Methode schreibt das Schema nur für die aktuelle Tabelle.</span><span class="sxs-lookup"><span data-stu-id="09387-1511">Normally the `WriteXmlSchema` method writes the schema only for the current table.</span></span> <span data-ttu-id="09387-1512">Um das Schema für die aktuelle Tabelle und ihre gesamten zugehörigen Tabellen zu schreiben, rufen Sie die Methode mit dem `writeHierarchy` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="09387-1512">To write the schema for the current table and its entire descendant, related tables, call the method with the `writeHierarchy` parameter set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>