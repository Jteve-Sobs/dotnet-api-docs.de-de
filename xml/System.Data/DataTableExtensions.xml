<Type Name="DataTableExtensions" FullName="System.Data.DataTableExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="59598c85741a16bc4237fbd02b3ff537139f13a0" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75140810" /></Metadata><TypeSignature Language="C#" Value="public static class DataTableExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataTableExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataTableExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataTableExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert die Erweiterungsmethoden der <see cref="T:System.Data.DataTable" />-Klasse. <see cref="T:System.Data.DataTableExtensions" /> ist eine statische Klasse.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsDataView">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView (this System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView (table As DataTable) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.DataTable -&gt; System.Data.DataView" Usage="System.Data.DataTableExtensions.AsDataView table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" RefType="this" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="table">Die Quell-<see cref="T:System.Data.DataTable" />, aus der der LINQ-aktivierte <see cref="T:System.Data.DataView" /> erstellt wird.</param>
        <summary>Erstellt ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt und gibt es zurück.</summary>
        <returns>Ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataView> aktiviert Daten Bindungs Szenarien für [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] und kann über ein typisiertes oder nicht typisiertes <xref:System.Data.DataTable>erstellt werden, wodurch eine Standardansicht der Tabelle bereitgestellt wird. Nachdem die <xref:System.Data.DataView> auf der Grundlage einer <xref:System.Data.DataTable> erstellt wurde, können Filter- und Sortiereigenschaften für sie festgelegt werden. Der <xref:System.Data.DataView> wird dann an ein UI-Steuerelement gebunden, z. b. eine <xref:System.Windows.Forms.DataGrid> oder eine <xref:System.Windows.Forms.DataGridView>, das ein einfaches Daten Bindungs Modell bereitstellt.  
  
 Weitere Informationen und Beispiele finden Sie unter [Erstellen eines DataView-Objekts](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Data.DataView> aus der SalesOrderDetail-Tabelle erstellt und als Datenquelle für ein <xref:System.Windows.Forms.BindingSource>-Objekt festgelegt, das als Proxy für ein <xref:System.Windows.Forms.DataGridView>-Steuerelement fungiert:  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromtable)]
 [!code-vb[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromtable)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDataView&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView&lt;T&gt; (this System.Data.EnumerableRowCollection&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView&lt;(class System.Data.DataRow) T&gt;(class System.Data.EnumerableRowCollection`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView(Of T As DataRow) (source As EnumerableRowCollection(Of T)) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::EnumerableRowCollection&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.EnumerableRowCollection&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataView (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.AsDataView source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;T&gt;" RefType="this" Index="0" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">Die [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]-Quellabfrage, aus der der LINQ-aktivierte <see cref="T:System.Data.DataView" /> erstellt wird.</param>
        <summary>Erstellt ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt, das die [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)]-Abfrage darstellt, und gibt es zurück.</summary>
        <returns>Ein LINQ-aktiviertes <see cref="T:System.Data.DataView" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataView> aktiviert Daten Bindungs Szenarien für [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] und kann über eine [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] Abfrage erstellt werden. Der <xref:System.Data.DataView> stellt die Abfrage selbst dar und ist keine Ansicht oberhalb der Abfrage. Der neu erstellte <xref:System.Data.DataView> leitet die Filter-und Sortierungs Informationen aus der Abfrage ab, aus der er erstellt wurde. Der <xref:System.Data.DataView> wird dann an ein UI-Steuerelement gebunden, z. b. eine <xref:System.Windows.Forms.DataGrid> oder eine <xref:System.Windows.Forms.DataGridView>, das ein einfaches Daten Bindungs Modell bereitstellt.  
  
 Der Parameter `T` des Eingabeparameter `source` kann nur vom Typ <xref:System.Data.DataRow> oder von einem Typ sein, der von <xref:System.Data.DataRow>abgeleitet ist.  
  
 Die folgenden Abfrage Operatoren werden nur in einer Abfrage unterstützt, die zum Erstellen von <xref:System.Data.DataView>verwendet wird:  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>  
  
 Weitere Informationen und Beispiele finden Sie unter [Erstellen eines DataView-Objekts](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Data.DataView> von Online Bestellungen erstellt, geordnet nach Summe:  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquery1)]
 [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquery1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt; AsEnumerable (this System.Data.DataTable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;class System.Data.DataRow&gt; AsEnumerable(class System.Data.DataTable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable (source As DataTable) As EnumerableRowCollection(Of DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;System::Data::DataRow ^&gt; ^ AsEnumerable(System::Data::DataTable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsEnumerable : System.Data.DataTable -&gt; System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;" Usage="System.Data.DataTableExtensions.AsEnumerable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">Die Quell-<see cref="T:System.Data.DataTable" />, die als aufzählbar festgelegt werden soll.</param>
        <summary>Gibt ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt zurück, bei dem der generische Parameter <paramref name="T" /> gleich <see cref="T:System.Data.DataRow" /> ist. Dieses Objekt kann in einem [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)]-Ausdruck oder einer Methodenabfrage verwendet werden.</summary>
        <returns>Ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Objekt bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> hat.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] Abfragen arbeiten mit Datenquellen, die die <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle oder die <xref:System.Linq.IQueryable>-Schnittstelle implementieren.  Die <xref:System.Data.DataTable>-Klasse implementiert keine der beiden Schnittstellen, sodass Sie die <xref:System.Data.DataTableExtensions.AsEnumerable%2A>-Methode zum Verwenden des <xref:System.Data.DataTable> als Quelle in der `From`-Klausel einer [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] Abfrage verwenden müssen. Sie können auch benutzerdefinierte, domänenspezifische Operatoren (z. b. <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>) abrufen, indem Sie ein <xref:System.Collections.Generic.IEnumerable%601>-Objekt zurückgeben.  
  
 Das Aufzähl Bare Objekt, das von der <xref:System.Data.DataTableExtensions.AsEnumerable%2A>-Methode zurückgegeben wird, ist dauerhaft an den <xref:System.Data.DataTable> gebunden, der es erstellt hat. Mehrere Aufrufe der <xref:System.Data.DataTableExtensions.AsEnumerable%2A>-Methode geben mehrere unabhängige abfragbare Objekte zurück, die alle an die Quell <xref:System.Data.DataTable>gebunden sind.  
  
   
  
## Examples  
 Im folgenden Beispiel erhält die `DisplayProducts`-Methode eine Datentabelle, die eine datacolenn mit dem Namen `ProductName`enthält, die `ProductName` Werte extrahiert und dann die Werte ausgibt.  
  
 [!code-csharp[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/cs/source.cs#1)]
 [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die Quell <see cref="T:System.Data.DataTable" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToDataTable&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die Kopien der <see cref="T:System.Data.DataRow" />-Objekte enthält, wenn ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt vorhanden ist.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataTable CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataTable CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T)) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataTable ^ CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataTable (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz.</param>
        <summary>Gibt eine <see cref="T:System.Data.DataTable" /> zurück, die Kopien der <see cref="T:System.Data.DataRow" />-Objekte enthält, wenn ein <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt vorhanden ist, bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> hat.</summary>
        <returns>Eine <see cref="T:System.Data.DataTable" />, die die Eingabesequenz als den Typ von <see cref="T:System.Data.DataRow" />-Objekten enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Parameter `T` des Eingabeparameter `source` kann nur vom Typ <xref:System.Data.DataRow> oder von einem Typ sein, der von <xref:System.Data.DataRow>abgeleitet ist.  
  
 Die Eingabe Sequenz kann eine beliebige <xref:System.Collections.Generic.IEnumerable%601> Quelle sein, nicht nur eine Abfrage oder eine Abfrage über eine <xref:System.Data.DataTable>. Beachten Sie Folgendes: Wenn die Quell Sequenz eine Abfrage ist, wird durch das Aufrufen dieses Operators die sofortige Ausführung erzwungen. Das Auflisten der Quell Sequenz kann auch dazu führen, dass Ausnahmen ausgelöst werden.  
  
 Das Schema der Ziel Tabelle basiert auf dem Schema der ersten <xref:System.Data.DataRow> Zeile in der Quell Sequenz. Die Tabellen Metadaten werden aus den <xref:System.Data.DataRow> Metadaten und den Tabellenwerten aus den Spaltenwerten der <xref:System.Data.DataRow>extrahiert. Bei typisierten <xref:System.Data.DataTable>werden Typen nicht beibehalten. Die Daten und das Schema werden übertragen, aber die resultierenden Zeilen der Ausgabe Tabelle sind nicht vom typisierten <xref:System.Data.DataRow> Typs. Die Eigenschaften "<xref:System.Data.DataRow.RowState%2A>" und "<xref:System.Data.DataRow.RowError%2A>" werden während der Kopie von der Quell <xref:System.Data.DataRow> in die zurückgegebene <xref:System.Data.DataTable>nicht beibehalten.  
  
 Wenn ein **null** -Verweis oder ein Werte zulässt-Typ mit dem Wert **null** in einer Quell <xref:System.Data.DataRow>gefunden wird, ersetzt diese Methode den Wert im Ziel <xref:System.Data.DataTable> durch den Wert <xref:System.DBNull.Value>.  
  
 Die generierte Tabelle, die von der-Methode zurückgegeben wird, hat den Standard Tabellennamen. Wenn Sie die <xref:System.Data.DataTable>benennen, Sie an einen <xref:System.Data.DataSet>anfügen oder einen anderen <xref:System.Data.DataTable> bestimmten Vorgang ausführen möchten, müssen Sie dies nach dem Erstellen und Zurückgeben der Tabelle tun.  
  
 Weitere Informationen finden Sie unter [Erstellen einer Datentabelle aus einer Abfrage](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die SalesOrderHeader-Tabelle nach Bestellungen nach dem 8. August 2001 abgefragt, und es wird die <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>-Methode verwendet, um eine <xref:System.Data.DataTable> aus dieser Abfrage zu erstellen. Die <xref:System.Data.DataTable> wird dann an eine <xref:System.Windows.Forms.BindingSource> gebunden, die als Proxy für eine <xref:System.Windows.Forms.DataGridView> fungiert.  
  
 [!code-csharp[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#copytodatatable1)]
 [!code-vb[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#copytodatatable1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz ist <see langword="null" />, und es kann keine neue Tabelle erstellt werden.</exception>
        <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz hat einen Zustand von <see cref="F:System.Data.DataRowState.Deleted" />.  
  
Die Quellsequenz enthält keine <see cref="T:System.Data.DataRow" />-Objekte.  
  
Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz.</param>
        <param name="table">Der Ziel-<see cref="T:System.Data.DataTable" />.</param>
        <param name="options">Eine <see cref="T:System.Data.LoadOption" />-Enumeration, die die <see cref="T:System.Data.DataTable" />-Ladeoptionen angibt.</param>
        <summary>Kopiert <see cref="T:System.Data.DataRow" />-Objekte in die angegebene <see cref="T:System.Data.DataTable" />, bei einem <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt, bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> aufweist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Parameter `T` des Eingabeparameter `source` kann nur den Typ <xref:System.Data.DataRow>oder einen von <xref:System.Data.DataRow>abgeleiteten Typ aufweisen.  
  
 Die Eingabe Sequenz kann eine beliebige <xref:System.Collections.Generic.IEnumerable%601> Quelle sein, nicht nur eine Abfrage über eine <xref:System.Data.DataTable>. Beachten Sie Folgendes: Wenn die Quell Sequenz eine Abfrage ist, wird durch das Aufrufen dieses Operators die sofortige Ausführung erzwungen. Das Auflisten der Quell Sequenz kann auch dazu führen, dass Ausnahmen ausgelöst werden.  
  
 Das Schema der Ziel Tabelle basiert auf dem Schema der ersten <xref:System.Data.DataRow> Zeile in der Quell Sequenz. Die Tabellen Metadaten werden aus den <xref:System.Data.DataRow> Metadaten und den Tabellenwerten aus den Spaltenwerten der <xref:System.Data.DataRow>extrahiert. Bei typisierten <xref:System.Data.DataTable>werden Typen nicht beibehalten. Die Daten und das Schema werden übertragen, aber die resultierenden Zeilen der Ausgabe Tabelle sind nicht vom typisierten <xref:System.Data.DataRow> Typs. Die Eigenschaften "<xref:System.Data.DataRow.RowState%2A>" und "<xref:System.Data.DataRow.RowError%2A>" werden während der Kopie von der Quell <xref:System.Data.DataRow> in die zurückgegebene <xref:System.Data.DataTable>nicht beibehalten.  
  
 Wenn ein **null** -Verweis oder ein Werte zulässt-Typ mit dem Wert **null** in einer Quell <xref:System.Data.DataRow>gefunden wird, ersetzt diese Methode den Wert im Ziel <xref:System.Data.DataTable> durch den Wert <xref:System.DBNull.Value>.  
  
 Die generierte Tabelle, die von der-Methode zurückgegeben wird, hat den Standard Tabellennamen. Wenn Sie die <xref:System.Data.DataTable>benennen, Sie an einen <xref:System.Data.DataSet>anfügen oder einen anderen <xref:System.Data.DataTable> bestimmten Vorgang ausführen möchten, müssen Sie dies nach dem Erstellen und Zurückgeben der Tabelle tun.  
  
 Weitere Informationen finden Sie unter [Erstellen einer Datentabelle aus einer Abfrage](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die kopierten <see cref="T:System.Data.DataRow" />-Objekte stimmen nicht mit dem Schema der Ziel-<see cref="T:System.Data.DataTable" /> überein.</exception>
        <exception cref="T:System.ArgumentNullException">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz ist <see langword="null" />, oder die Ziel-<see cref="T:System.Data.DataTable" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz hat einen Zustand von <see cref="F:System.Data.DataRowState.Deleted" />.  
  
Die Quellsequenz enthält keine <see cref="T:System.Data.DataRow" />-Objekte.  
  
Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption, errorHandler As FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ der Objekte in der Quellsequenz, meist <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz.</param>
        <param name="table">Der Ziel-<see cref="T:System.Data.DataTable" />.</param>
        <param name="options">Eine <see cref="T:System.Data.LoadOption" />-Enumeration, die die <see cref="T:System.Data.DataTable" />-Ladeoptionen angibt.</param>
        <param name="errorHandler">Ein <see cref="T:System.Data.FillErrorEventHandler" />-Delegat, der die Methode darstellt, die einen Fehler behandelt.</param>
        <summary>Kopiert <see cref="T:System.Data.DataRow" />-Objekte in die angegebene <see cref="T:System.Data.DataTable" />, bei einem <see cref="T:System.Collections.Generic.IEnumerable`1" />-Eingabeobjekt, bei dem der generische Parameter <paramref name="T" /> den Wert <see cref="T:System.Data.DataRow" /> aufweist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Parameter `T` des Eingabeparameter `source` kann nur den Typ <xref:System.Data.DataRow>oder einen von <xref:System.Data.DataRow>abgeleiteten Typ aufweisen.  
  
 Die Eingabe Sequenz kann eine beliebige <xref:System.Collections.Generic.IEnumerable%601> Quelle sein, nicht nur eine Abfrage über eine <xref:System.Data.DataTable>. Beachten Sie Folgendes: Wenn die Quell Sequenz eine Abfrage ist, wird durch das Aufrufen dieses Operators die sofortige Ausführung erzwungen. Das Auflisten der Quell Sequenz kann auch dazu führen, dass Ausnahmen ausgelöst werden.  
  
 Das Schema der Ziel Tabelle basiert auf dem Schema der ersten <xref:System.Data.DataRow> Zeile in der Quell Sequenz. Die Tabellen Metadaten werden aus den <xref:System.Data.DataRow> Metadaten und den Tabellenwerten aus den Spaltenwerten der <xref:System.Data.DataRow>extrahiert. Bei typisierten <xref:System.Data.DataTable>werden Typen nicht beibehalten. Die Daten und das Schema werden übertragen, aber die resultierenden Zeilen der Ausgabe Tabelle sind nicht vom typisierten <xref:System.Data.DataRow> Typs. Die Eigenschaften "<xref:System.Data.DataRow.RowState%2A>" und "<xref:System.Data.DataRow.RowError%2A>" werden während der Kopie von der Quell <xref:System.Data.DataRow> in die zurückgegebene <xref:System.Data.DataTable>nicht beibehalten.  
  
 Wenn ein **null** -Verweis oder ein Werte zulässt-Typ mit dem Wert **null** in einer Quell <xref:System.Data.DataRow>gefunden wird, ersetzt diese Methode den Wert im Ziel <xref:System.Data.DataTable> durch den Wert <xref:System.DBNull.Value>.  
  
 Die generierte Tabelle, die von der-Methode zurückgegeben wird, hat den Standard Tabellennamen. Wenn Sie die <xref:System.Data.DataTable>benennen, Sie an einen <xref:System.Data.DataSet>anfügen oder einen anderen <xref:System.Data.DataTable> bestimmten Vorgang ausführen möchten, müssen Sie dies nach dem Erstellen und Zurückgeben der Tabelle tun.  
  
 Wenn eine Ausnahme während der Kopie einer Daten Zeile in die Ziel Tabelle ausgelöst wird, z. b. eine Einschränkungs Ausnahme, wird der `errorHandler` Delegat aufgerufen. Eine <xref:System.Data.FillErrorEventArgs> wird mit den folgenden Werten an den `errorHandler` Delegaten übermittelt:  
  
-   Die <xref:System.Data.FillErrorEventArgs.Values%2A>-Eigenschaft wird auf eine Kopie der Quelldaten festgelegt.  
  
-   Die <xref:System.Data.FillErrorEventArgs.DataTable%2A>-Eigenschaft wird auf den Ziel <xref:System.Data.DataTable>festgelegt.  
  
-   Die <xref:System.Data.FillErrorEventArgs.Errors%2A>-Eigenschaft wird auf die abgefangene Ausnahme festgelegt.  
  
 Die <xref:System.Data.FillErrorEventArgs.Continue%2A>-Eigenschaft wird gelesen, nachdem der Delegataufruf zurückgegeben wurde. Wenn die <xref:System.Data.FillErrorEventArgs.Continue%2A>-Eigenschaft `true`ist, wird die Quell Sequenz weiterhin aufgezählt und in die Datentabelle geladen. Wenn die <xref:System.Data.FillErrorEventArgs.Continue%2A>-Eigenschaft `false`ist, wird die ursprüngliche Ausnahme von der <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>-Methode ausgelöst.  
  
 Weitere Informationen finden Sie unter [Erstellen einer Datentabelle aus einer Abfrage](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die kopierten <see cref="T:System.Data.DataRow" />-Objekte stimmen nicht mit dem Schema der Ziel-<see cref="T:System.Data.DataTable" /> überein.</exception>
        <exception cref="T:System.ArgumentNullException">Die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Quellsequenz ist <see langword="null" />, oder die Ziel-<see cref="T:System.Data.DataTable" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz hat einen Zustand von <see cref="F:System.Data.DataRowState.Deleted" />.  
  
- oder - 
Die Quellsequenz enthält keine <see cref="T:System.Data.DataRow" />-Objekte.  
  
- oder - 
Eine <see cref="T:System.Data.DataRow" /> in der Quellsequenz ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
