<Type Name="DataReaderExtensions" FullName="System.Data.DataReaderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb252cfea8ac675c9adff8c2fc0cb68032a27d8f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69367975" /></Metadata><TypeSignature Language="C#" Value="public static class DataReaderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataReaderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataReaderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataReaderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReaderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataReaderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4960c-101">Stellt Erweiterungsmethoden für <see cref="T:System.Data.Common.DbDataReader" /> bereit.</span><span class="sxs-lookup"><span data-stu-id="4960c-101">Provides extension methods for <see cref="T:System.Data.Common.DbDataReader" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static bool GetBoolean (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetBoolean(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBoolean (reader As DbDataReader, name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetBoolean(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetBoolean : System.Data.Common.DbDataReader * string -&gt; bool" Usage="System.Data.DataReaderExtensions.GetBoolean (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-102">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-102">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-103">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-103">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-104">Ruft den Wert der angegebenen Spalte als booleschen Wert ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-104">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="4960c-105">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-105">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-106">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-106">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-107">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-107">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-108">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-108">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public static byte GetByte (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 GetByte(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetByte (reader As DbDataReader, name As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Byte GetByte(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetByte : System.Data.Common.DbDataReader * string -&gt; byte" Usage="System.Data.DataReaderExtensions.GetByte (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-109">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-109">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-110">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-110">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-111">Ruft den Wert der angegebenen Spalte als ein Byte ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-111">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="4960c-112">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-112">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-113">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-113">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-114">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-114">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-115">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-115">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static long GetBytes (this System.Data.Common.DbDataReader reader, string name, long dataOffset, byte[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetBytes(class System.Data.Common.DbDataReader reader, string name, int64 dataOffset, unsigned int8[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBytes (reader As DbDataReader, name As String, dataOffset As Long, buffer As Byte(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long GetBytes(System::Data::Common::DbDataReader ^ reader, System::String ^ name, long dataOffset, cli::array &lt;System::Byte&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="static member GetBytes : System.Data.Common.DbDataReader * string * int64 * byte[] * int * int -&gt; int64" Usage="System.Data.DataReaderExtensions.GetBytes (reader, name, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-116">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-116">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-117">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-117">The name of the column.</span></span></param>
        <param name="dataOffset"><span data-ttu-id="4960c-118">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-118">The index within the row from which to begin the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="4960c-119">Der Puffer, in den die Daten kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4960c-119">The buffer into which to copy the data.</span></span></param>
        <param name="bufferOffset"><span data-ttu-id="4960c-120">Der Index im Puffer, an den die Daten kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="4960c-120">The index with the buffer to which the data will be copied.</span></span></param>
        <param name="length"><span data-ttu-id="4960c-121">Die maximale Anzahl der zu lesenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="4960c-121">The maximum number of characters to read.</span></span></param>
        <summary><span data-ttu-id="4960c-122">Liest eine angegebene Anzahl Bytes, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer.</span><span class="sxs-lookup"><span data-stu-id="4960c-122">Reads a specified number of bytes from the specified column starting at a specified index and writes them to a buffer starting at a specified position in the buffer.</span></span></summary>
        <returns><span data-ttu-id="4960c-123">Die tatsächlich gelesene Anzahl von Bytes.</span><span class="sxs-lookup"><span data-stu-id="4960c-123">The actual number of bytes read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-124">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-124">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-125">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-125">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-126">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-126">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public static char GetChar (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char GetChar(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChar (reader As DbDataReader, name As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static char GetChar(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetChar : System.Data.Common.DbDataReader * string -&gt; char" Usage="System.Data.DataReaderExtensions.GetChar (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-127">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-127">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-128">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-128">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-129">Ruft den Wert der angegebenen Spalte als ein einzelnes Zeichen ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-129">Gets the value of the specified column as a single character.</span></span></summary>
        <returns><span data-ttu-id="4960c-130">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-130">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-131">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-131">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-132">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-132">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-133">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-133">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public static long GetChars (this System.Data.Common.DbDataReader reader, string name, long dataOffset, char[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetChars(class System.Data.Common.DbDataReader reader, string name, int64 dataOffset, char[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChars (reader As DbDataReader, name As String, dataOffset As Long, buffer As Char(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long GetChars(System::Data::Common::DbDataReader ^ reader, System::String ^ name, long dataOffset, cli::array &lt;char&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="static member GetChars : System.Data.Common.DbDataReader * string * int64 * char[] * int * int -&gt; int64" Usage="System.Data.DataReaderExtensions.GetChars (reader, name, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-134">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-134">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-135">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-135">The name of the column.</span></span></param>
        <param name="dataOffset"><span data-ttu-id="4960c-136">Der Index in der Zeile, an dem der Lesevorgang beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-136">The index within the row from which to begin the read operation.</span></span></param>
        <param name="buffer"><span data-ttu-id="4960c-137">Der Puffer, in den die Daten kopiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4960c-137">The buffer into which to copy the data.</span></span></param>
        <param name="bufferOffset"><span data-ttu-id="4960c-138">Der Index im Puffer, an den die Daten kopiert werden.</span><span class="sxs-lookup"><span data-stu-id="4960c-138">The index with the buffer to which the data will be copied.</span></span></param>
        <param name="length"><span data-ttu-id="4960c-139">Die maximale Anzahl der zu lesenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="4960c-139">The maximum number of characters to read.</span></span></param>
        <summary><span data-ttu-id="4960c-140">Liest eine angegebene Anzahl Zeichen, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer.</span><span class="sxs-lookup"><span data-stu-id="4960c-140">Reads a specified number of characters from a specified column starting at a specified index, and writes them to a buffer starting at a specified position.</span></span></summary>
        <returns><span data-ttu-id="4960c-141">Die tatsächlich gelesene Anzahl von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="4960c-141">The actual number of characters read.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-142">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-142">The name specified is not a valid column name.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-143">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-143">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbDataReader GetData (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbDataReader GetData(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetData (reader As DbDataReader, name As String) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::DbDataReader ^ GetData(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetData : System.Data.Common.DbDataReader * string -&gt; System.Data.Common.DbDataReader" Usage="System.Data.DataReaderExtensions.GetData (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-144">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-144">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-145">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-145">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-146">Gibt einen verschachtelten Datenreader für die angeforderte Spalte zurück.</span><span class="sxs-lookup"><span data-stu-id="4960c-146">Returns a nested data reader for the requested column.</span></span></summary>
        <returns><span data-ttu-id="4960c-147">Ein Datenreader.</span><span class="sxs-lookup"><span data-stu-id="4960c-147">A data reader.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-148">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-148">The name specified is not a valid column name.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-149">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-149">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public static string GetDataTypeName (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDataTypeName(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataTypeName (reader As DbDataReader, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetDataTypeName(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetDataTypeName : System.Data.Common.DbDataReader * string -&gt; string" Usage="System.Data.DataReaderExtensions.GetDataTypeName (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-150">Der Datenreader, bei dem der Name des Spaltentyps abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-150">The data reader to get the column type name from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-151">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-151">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-152">Ruft den Namen des Datentyps der angegebenen Spalte ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-152">Gets name of the data type of the specified column.</span></span></summary>
        <returns><span data-ttu-id="4960c-153">Der Name des Datentyps.</span><span class="sxs-lookup"><span data-stu-id="4960c-153">The name of the data type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-154">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-154">The name specified is not a valid column name.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-155">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-155">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public static DateTime GetDateTime (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetDateTime(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDateTime (reader As DbDataReader, name As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static DateTime GetDateTime(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetDateTime : System.Data.Common.DbDataReader * string -&gt; DateTime" Usage="System.Data.DataReaderExtensions.GetDateTime (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-156">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-156">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-157">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-157">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-158">Ruft den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-158">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="4960c-159">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-159">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-160">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-160">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-161">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-161">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-162">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-162">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public static decimal GetDecimal (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal GetDecimal(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDecimal (reader As DbDataReader, name As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal GetDecimal(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetDecimal : System.Data.Common.DbDataReader * string -&gt; decimal" Usage="System.Data.DataReaderExtensions.GetDecimal (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-163">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-163">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-164">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-164">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-165">Ruft den Wert der angegebenen Spalte als <see cref="T:System.Decimal" /> ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-165">Gets the value of the specified column as a <see cref="T:System.Decimal" />.</span></span></summary>
        <returns><span data-ttu-id="4960c-166">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-166">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-167">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-167">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-168">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-168">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-169">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-169">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static double GetDouble (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetDouble(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDouble (reader As DbDataReader, name As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double GetDouble(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetDouble : System.Data.Common.DbDataReader * string -&gt; double" Usage="System.Data.DataReaderExtensions.GetDouble (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-170">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-170">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-171">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-171">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-172">Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit doppelter Genauigkeit ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-172">Gets the value of the specified column as a double-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="4960c-173">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-173">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-174">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-174">The specified cast is not valid.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-175">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-175">The name specified is not a valid column name.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-176">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-176">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public static Type GetFieldType (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetFieldType(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFieldType (reader As DbDataReader, name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Type ^ GetFieldType(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetFieldType : System.Data.Common.DbDataReader * string -&gt; Type" Usage="System.Data.DataReaderExtensions.GetFieldType (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-177">Der Datenreader, bei dem der Feldtyp abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-177">The data reader to get the field type from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-178">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-178">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-179">Ruft den Datentyp der angegebenen Spalte ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-179">Gets the data type of the specified column.</span></span></summary>
        <returns><span data-ttu-id="4960c-180">Der Datentyp der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-180">The data type of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-181">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-181">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-182">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-182">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-183">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-183">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetFieldValue&lt;T&gt; (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetFieldValue&lt;T&gt;(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFieldValue(Of T) (reader As DbDataReader, name As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T GetFieldValue(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetFieldValue : System.Data.Common.DbDataReader * string -&gt; 'T" Usage="System.Data.DataReaderExtensions.GetFieldValue (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4960c-184">Der Typ des zurückzugebenden Werts.</span><span class="sxs-lookup"><span data-stu-id="4960c-184">The type of the value to be returned.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="4960c-185">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-185">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-186">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-186">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-187">Ruft den Wert der angegebenen Spalte als angeforderten Typ ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-187">Gets the value of the specified column as the requested type.</span></span></summary>
        <returns><span data-ttu-id="4960c-188">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-188">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4960c-189">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-189">The connection was dropped or closed during data retrieval.</span></span>  

<span data-ttu-id="4960c-190">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-190">-or-</span></span> 
<span data-ttu-id="4960c-191">Der Datenreader wurde während des Datenabrufs geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-191">The data reader was closed during data retrieval.</span></span>  
  
<span data-ttu-id="4960c-192">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-192">-or-</span></span>

<span data-ttu-id="4960c-193">Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).</span><span class="sxs-lookup"><span data-stu-id="4960c-193">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or it returned <see langword="false" />).</span></span>  

<span data-ttu-id="4960c-194">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-194">-or-</span></span>

<span data-ttu-id="4960c-195">Der Reader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.</span><span class="sxs-lookup"><span data-stu-id="4960c-195">The reader tried to read a previously-read column in sequential mode.</span></span>  

<span data-ttu-id="4960c-196">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-196">-or-</span></span>

<span data-ttu-id="4960c-197">Es gab einen aktiven asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="4960c-197">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="4960c-198">Dies gilt für alle Get\*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</span><span class="sxs-lookup"><span data-stu-id="4960c-198">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-199">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-199">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-200">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="4960c-200">The value returned by the database doesn't match or cannot be cast to <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (this System.Data.Common.DbDataReader reader, string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(class System.Data.Common.DbDataReader reader, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member GetFieldValueAsync : System.Data.Common.DbDataReader * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="System.Data.DataReaderExtensions.GetFieldValueAsync (reader, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="4960c-201">Der Typ des zurückzugebenden Werts.</span><span class="sxs-lookup"><span data-stu-id="4960c-201">The type of the value to be returned.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="4960c-202">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-202">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-203">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-203">The name of the column.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="4960c-204">Ein optionales Token zum Abbrechen des asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="4960c-204">An optional token to cancel the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="4960c-205">Ruft den Wert der angegebenen Spalte asynchron als angeforderten Typ ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-205">Asynchronously gets the value of the specified column as the requested type.</span></span></summary>
        <returns><span data-ttu-id="4960c-206">Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" /> den Wert der angegebenen Spalte enthält.</span><span class="sxs-lookup"><span data-stu-id="4960c-206">A task whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> contains the value of the specified column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
 <span data-ttu-id="4960c-207">Diese asynchrone Methode wird nur benötigt, um zu verhindern, dass der aufrufende Thread blockiert wird, wenn der Reader im sequenziellen Modus erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="4960c-207">This asynchronous method is only needed to avoid blocking the calling thread when the reader is created in sequential mode.</span></span>
 
 <span data-ttu-id="4960c-208">Wenn der sequenzielle Modus nicht angegeben wird, sollten alle Spaltenwerte im Arbeitsspeicher verfügbar werden, sobald "leseasync" abgeschlossen ist, und der Aufruf der synchronen Version der Methode sollte den aufrufenden Thread nicht blockieren.</span><span class="sxs-lookup"><span data-stu-id="4960c-208">If sequential mode isn't specified, all column values should become available in memory each time ReadAsync completes, and calling the synchronous version of the method shouldn't block the calling thread.</span></span>

 <span data-ttu-id="4960c-209">Die Standard Implementierung dieser asynchronen Methode ruft die synchrone Entsprechung auf und gibt eine abgeschlossene Aufgabe zurück, die möglicherweise den aufrufenden Thread blockiert.</span><span class="sxs-lookup"><span data-stu-id="4960c-209">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span> <span data-ttu-id="4960c-210">Die Standard Implementierung gibt auch eine abgebrochene Aufgabe zurück, wenn ein bereits abgebrochenes Abbruch Token übergangen wird.</span><span class="sxs-lookup"><span data-stu-id="4960c-210">The default implementation also returns a cancelled task if passed an already cancelled cancellation token.</span></span>

 <span data-ttu-id="4960c-211">Datenanbieter, die die [asynchrone Programmierung](~/docs/framework/data/adonet/asynchronous-programming.md) unterstützen, sollten die standardmäßige inmplementierung mithilfe von asynchronen e/a-Vorgängen überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4960c-211">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>

 <span data-ttu-id="4960c-212">Diese Methode nimmt ein Abbruchtoken an, das verwendet werden kann, um ein frühes Abbrechen des Vorgangs anzufordern.</span><span class="sxs-lookup"><span data-stu-id="4960c-212">This method accepts a cancellation token that can be used to request the operation to be cancelled early.</span></span> <span data-ttu-id="4960c-213">Implementierungen können diese Anforderung ignorieren.</span><span class="sxs-lookup"><span data-stu-id="4960c-213">Implementations may ignore this request.</span></span>
 
 <span data-ttu-id="4960c-214">Andere Methoden und Eigenschaften des DbDataReader-Objekts sollten nicht aufgerufen werden, während die zurückgegebene Aufgabe noch nicht abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="4960c-214">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4960c-215">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-215">The connection was dropped or closed during data retrieval.</span></span>  
  
<span data-ttu-id="4960c-216">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-216">-or-</span></span>

<span data-ttu-id="4960c-217">Der Datenreader wurde während des Datenabrufs geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-217">The data reader was closed during the data retrieval.</span></span>  

<span data-ttu-id="4960c-218">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-218">-or-</span></span>

<span data-ttu-id="4960c-219">Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).</span><span class="sxs-lookup"><span data-stu-id="4960c-219">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or it returned <see langword="false" />).</span></span>

<span data-ttu-id="4960c-220">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-220">-or-</span></span>

<span data-ttu-id="4960c-221">Es wurde versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.</span><span class="sxs-lookup"><span data-stu-id="4960c-221">Tried to read a previously-read column in sequential mode.</span></span>  

<span data-ttu-id="4960c-222">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-222">-or-</span></span>

<span data-ttu-id="4960c-223">Es gab einen aktiven asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="4960c-223">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="4960c-224">Dies gilt für alle Get_\*_-Methoden bei der Ausführung im sequenziellen Modus, da sie während des Lesens eines Datenstroms aufgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="4960c-224">This applies to all Get_\*_ methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-225">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-225">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-226">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</span><span class="sxs-lookup"><span data-stu-id="4960c-226">The value returned by the database doesn't match or cannot be cast to <typeparamref name="T" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static float GetFloat (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetFloat(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFloat (reader As DbDataReader, name As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float GetFloat(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetFloat : System.Data.Common.DbDataReader * string -&gt; single" Usage="System.Data.DataReaderExtensions.GetFloat (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-227">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-227">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-228">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-228">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-229">Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-229">Gets the value of the specified column as a single-precision floating point number.</span></span></summary>
        <returns><span data-ttu-id="4960c-230">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-230">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-231">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-231">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-232">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-232">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-233">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-233">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public static Guid GetGuid (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetGuid(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGuid (reader As DbDataReader, name As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Guid GetGuid(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetGuid : System.Data.Common.DbDataReader * string -&gt; Guid" Usage="System.Data.DataReaderExtensions.GetGuid (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-234">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-234">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-235">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-235">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-236">Ruft den Wert der angegebenen Spalte als global eindeutigen Bezeichner (Globally Unique Identifier, GUID) ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-236">Gets the value of the specified column as a globally unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="4960c-237">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-237">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-238">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-238">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-239">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-239">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-240">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-240">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public static short GetInt16 (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 GetInt16(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInt16 (reader As DbDataReader, name As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static short GetInt16(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetInt16 : System.Data.Common.DbDataReader * string -&gt; int16" Usage="System.Data.DataReaderExtensions.GetInt16 (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-241">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-241">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-242">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-242">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-243">Ruft den Wert der angegebenen Spalte als 16-Bit-Ganzzahl mit Vorzeichen ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-243">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4960c-244">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-244">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-245">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-245">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-246">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-246">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-247">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-247">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public static int GetInt32 (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetInt32(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInt32 (reader As DbDataReader, name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetInt32(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetInt32 : System.Data.Common.DbDataReader * string -&gt; int" Usage="System.Data.DataReaderExtensions.GetInt32 (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-248">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-248">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-249">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-249">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-250">Ruft den Wert der angegebenen Spalte als ganze Zahl mit Vorzeichen und einer Länge von 32 Bit ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-250">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4960c-251">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-251">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-252">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-252">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-253">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-253">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-254">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-254">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public static long GetInt64 (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetInt64(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInt64 (reader As DbDataReader, name As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long GetInt64(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetInt64 : System.Data.Common.DbDataReader * string -&gt; int64" Usage="System.Data.DataReaderExtensions.GetInt64 (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-255">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-255">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-256">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-256">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-257">Ruft den Wert der angegebenen Spalte als 64-Bit-Ganzzahl mit Vorzeichen ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-257">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="4960c-258">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-258">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-259">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-259">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-260">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-260">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-261">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-261">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public static Type GetProviderSpecificFieldType (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetProviderSpecificFieldType(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderSpecificFieldType (reader As DbDataReader, name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Type ^ GetProviderSpecificFieldType(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetProviderSpecificFieldType : System.Data.Common.DbDataReader * string -&gt; Type" Usage="System.Data.DataReaderExtensions.GetProviderSpecificFieldType (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-262">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-262">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-263">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-263">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-264">Ruft den anbieterspezifischen Typ der angegebenen Spalte ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-264">Gets the provider-specific type of the specified column.</span></span></summary>
        <returns><span data-ttu-id="4960c-265">Ein anbieterspezifischer .NET-Typ.</span><span class="sxs-lookup"><span data-stu-id="4960c-265">A provider-specific .NET type.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-266">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-266">The name specified is not a valid column name.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-267">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-267">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public static object GetProviderSpecificValue (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetProviderSpecificValue(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderSpecificValue (reader As DbDataReader, name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ GetProviderSpecificValue(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetProviderSpecificValue : System.Data.Common.DbDataReader * string -&gt; obj" Usage="System.Data.DataReaderExtensions.GetProviderSpecificValue (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-268">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-268">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-269">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-269">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-270">Ruft den Wert der angegebenen Spalte als Instanz eines anbieterspezifischen Typs ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-270">Gets the value of the specified column as an instance of a provider-specific type.</span></span></summary>
        <returns><span data-ttu-id="4960c-271">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-271">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-272">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-272">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-273">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-273">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-274">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-274">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetStream (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetStream(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStream (reader As DbDataReader, name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ GetStream(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetStream : System.Data.Common.DbDataReader * string -&gt; System.IO.Stream" Usage="System.Data.DataReaderExtensions.GetStream (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-275">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-275">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-276">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-276">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-277">Ruft einen Stream ab, um Daten aus der angegebenen Spalte abzurufen.</span><span class="sxs-lookup"><span data-stu-id="4960c-277">Gets a stream to retrieve data from the specified column.</span></span></summary>
        <returns><span data-ttu-id="4960c-278">Ein Stream.</span><span class="sxs-lookup"><span data-stu-id="4960c-278">A stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4960c-279"><xref:System.Data.Common.DbDataReader.GetStream%2A>unterstützt nur das Abrufen von Werten, die in Byte Arrays konvertiert werden können.</span><span class="sxs-lookup"><span data-stu-id="4960c-279"><xref:System.Data.Common.DbDataReader.GetStream%2A> only supports the retrieval of values that can be converted to byte arrays.</span></span>  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4960c-280">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-280">The connection was dropped or closed during the data retrieval.</span></span>  
  
<span data-ttu-id="4960c-281">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-281">-or-</span></span>

<span data-ttu-id="4960c-282">Der Datenreader wurde während des Datenabrufs geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-282">The data reader is closed during the data retrieval.</span></span>  

<span data-ttu-id="4960c-283">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-283">-or-</span></span>

<span data-ttu-id="4960c-284">Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).</span><span class="sxs-lookup"><span data-stu-id="4960c-284">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span></span>  

<span data-ttu-id="4960c-285">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-285">-or-</span></span>

<span data-ttu-id="4960c-286">Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.</span><span class="sxs-lookup"><span data-stu-id="4960c-286">The data reader tried to read a previously-read column in sequential mode.</span></span>  

<span data-ttu-id="4960c-287">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-287">-or-</span></span>

<span data-ttu-id="4960c-288">Es gab einen aktiven asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="4960c-288">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="4960c-289">Dies gilt für alle Get\*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</span><span class="sxs-lookup"><span data-stu-id="4960c-289">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-290">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-290">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-291">Die angegebene Spalte ist kein binärer Typ, der Lesevorgänge mit einem <see cref="T:System.IO.Stream" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4960c-291">The specified column isn't a binary type that supports reading with a <see cref="T:System.IO.Stream" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public static string GetString (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetString(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetString (reader As DbDataReader, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetString(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetString : System.Data.Common.DbDataReader * string -&gt; string" Usage="System.Data.DataReaderExtensions.GetString (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-292">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-292">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-293">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-293">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-294">Ruft den Wert der angegebenen Spalte als eine Instanz von <see cref="T:System.String" /> ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-294">Gets the value of the specified column as an instance of <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="4960c-295">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-295">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-296">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-296">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-297">Die angegebene Umwandlung ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="4960c-297">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-298">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-298">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader GetTextReader (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextReader GetTextReader(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTextReader (reader As DbDataReader, name As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::TextReader ^ GetTextReader(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetTextReader : System.Data.Common.DbDataReader * string -&gt; System.IO.TextReader" Usage="System.Data.DataReaderExtensions.GetTextReader (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-299">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-299">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-300">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-300">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-301">Ruft einen Textreader zum Auslesen von Daten aus der Spalte ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-301">Gets a text reader to retrieve data from the column.</span></span></summary>
        <returns><span data-ttu-id="4960c-302">Ein Textreader.</span><span class="sxs-lookup"><span data-stu-id="4960c-302">A text reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4960c-303"><xref:System.Data.Common.DbDataReader.GetTextReader%2A>unterstützt nur das Abrufen von Werten, die in Zeichen Arrays (Zeichen folgen) konvertiert werden können.</span><span class="sxs-lookup"><span data-stu-id="4960c-303"><xref:System.Data.Common.DbDataReader.GetTextReader%2A> only supports the retrieval of values that can be converted to character arrays (strings).</span></span>  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4960c-304">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-304">The connection was dropped or closed during the data retrieval.</span></span>  
  
<span data-ttu-id="4960c-305">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-305">-or-</span></span>

<span data-ttu-id="4960c-306">Der Datenreader wurde während des Datenabrufs geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-306">The data reader is closed during the data retrieval.</span></span>  

<span data-ttu-id="4960c-307">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-307">-or-</span></span>

<span data-ttu-id="4960c-308">Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).</span><span class="sxs-lookup"><span data-stu-id="4960c-308">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span></span>  

<span data-ttu-id="4960c-309">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-309">-or-</span></span>

<span data-ttu-id="4960c-310">Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.</span><span class="sxs-lookup"><span data-stu-id="4960c-310">The data reader tried to read a previously-read column in sequential mode.</span></span>  

<span data-ttu-id="4960c-311">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-311">-or-</span></span>

<span data-ttu-id="4960c-312">Es gab einen aktiven asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="4960c-312">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="4960c-313">Dies gilt für alle Get\*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</span><span class="sxs-lookup"><span data-stu-id="4960c-313">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-314">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-314">The name specified is not a valid column name.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="4960c-315">Die angegebene Spalte ist kein Texttyp, der Lesevorgänge mit einem <see cref="T:System.IO.TextReader" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4960c-315">The specified column isn't a text type that supports reading with a <see cref="T:System.IO.TextReader" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static object GetValue (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetValue(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValue (reader As DbDataReader, name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ GetValue(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetValue : System.Data.Common.DbDataReader * string -&gt; obj" Usage="System.Data.DataReaderExtensions.GetValue (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-316">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-316">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-317">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-317">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-318">Ruft den Wert der angegebenen Spalte als eine Instanz von <see cref="T:System.Object" /> ab.</span><span class="sxs-lookup"><span data-stu-id="4960c-318">Gets the value of the specified column as an instance of <see cref="T:System.Object" />.</span></span></summary>
        <returns><span data-ttu-id="4960c-319">Der Wert der angegebenen Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-319">The value of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-320">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-320">The name specified is not a valid column name.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-321">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-321">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDBNull(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDBNull (reader As DbDataReader, name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDBNull(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : System.Data.Common.DbDataReader * string -&gt; bool" Usage="System.Data.DataReaderExtensions.IsDBNull (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-322">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-322">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-323">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-323">The name of the column.</span></span></param>
        <summary><span data-ttu-id="4960c-324">Ruft einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="4960c-324">Gets a value that indicates whether the column contains nonexistent or missing values.</span></span></summary>
        <returns><span data-ttu-id="4960c-325"><see langword="true" />, wenn die angegebene Spalte <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4960c-325"><see langword="true" /> if the specified column is equivalent to <see cref="T:System.DBNull" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4960c-326">Rufen Sie diese Methode auf, um nach NULL-Spaltenwerten zu suchen, bevor Sie die typisierten get_ <xref:System.Data.Common.DbDataReader.GetByte%2A>\* <xref:System.Data.Common.DbDataReader.GetChar%2A>_-Methoden aufrufen (z. b., usw.), um das Auslösen einer Ausnahme zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="4960c-326">Call this method to check for null column values before calling the typed Get_\*_ methods (for example, <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>, and so on) to avoid throwing an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-327">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-327">The name specified is not a valid column name.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md"><span data-ttu-id="4960c-328">Übersicht über ADO.NET</span><span class="sxs-lookup"><span data-stu-id="4960c-328">ADO.NET Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (this System.Data.Common.DbDataReader reader, string name, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(class System.Data.Common.DbDataReader reader, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member IsDBNullAsync : System.Data.Common.DbDataReader * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Data.DataReaderExtensions.IsDBNullAsync (reader, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="4960c-329">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="4960c-329">The data reader to get the column value from.</span></span></param>
        <param name="name"><span data-ttu-id="4960c-330">Der Name der Spalte.</span><span class="sxs-lookup"><span data-stu-id="4960c-330">The name of the column.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="4960c-331">Ein optionales Token zum Abbrechen des asynchronen Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="4960c-331">An optional token to cancel the asynchronous operation.</span></span></param>
        <summary><span data-ttu-id="4960c-332">Ruft asynchron einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="4960c-332">Asynchronously gets a value that indicates whether the column contains non-existent or missing values.</span></span></summary>
        <returns><span data-ttu-id="4960c-333">Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn der angegebene Spaltenwert <see langword="DBNull" /> entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4960c-333">A <see cref="T:System.Threading.Tasks.Task`1" /> whose <see cref="P:System.Threading.Tasks.Task`1.Result" /> property is <see langword="true" /> if the specified column value is equivalent to <see langword="DBNull" /> or <see langword="false" /> if it is not.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks
 ## Remarks
 <span data-ttu-id="4960c-334">Diese asynchrone Methode wird nur benötigt, um zu verhindern, dass der aufrufende Thread blockiert wird, wenn der Reader im sequenziellen Modus erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="4960c-334">This asynchronous method is only needed to avoid blocking the calling thread when the reader is created in sequential mode.</span></span>
 
 <span data-ttu-id="4960c-335">Wenn der sequenzielle Modus nicht angegeben wird, sollten alle Spaltenwerte im Arbeitsspeicher verfügbar werden, sobald "leseasync" abgeschlossen ist, und der Aufruf der synchronen Version der Methode sollte den aufrufenden Thread nicht blockieren.</span><span class="sxs-lookup"><span data-stu-id="4960c-335">If sequential mode isn't specified, all column values should become available in memory each time ReadAsync completes, and calling the synchronous version of the method shouldn't block the calling thread.</span></span>

 <span data-ttu-id="4960c-336">Die Standard Implementierung dieser asynchronen Methode ruft die synchrone Entsprechung auf und gibt eine abgeschlossene Aufgabe zurück, die möglicherweise den aufrufenden Thread blockiert.</span><span class="sxs-lookup"><span data-stu-id="4960c-336">The default implementation of this asynchronous method invokes its synchronous counterpart and returns a completed Task, potentially blocking the calling thread.</span></span> <span data-ttu-id="4960c-337">Die Standard Implementierung gibt auch eine abgebrochene Aufgabe zurück, wenn ein bereits abgebrochenes Abbruch Token übergangen wird.</span><span class="sxs-lookup"><span data-stu-id="4960c-337">The default implementation also returns a cancelled task if passed an already cancelled cancellation token.</span></span>

 <span data-ttu-id="4960c-338">Datenanbieter, die die [asynchrone Programmierung](~/docs/framework/data/adonet/asynchronous-programming.md) unterstützen, sollten die standardmäßige inmplementierung mithilfe von asynchronen e/a-Vorgängen überschreiben.</span><span class="sxs-lookup"><span data-stu-id="4960c-338">Data providers that support [asynchronous programming](~/docs/framework/data/adonet/asynchronous-programming.md) should override the default inmplementation using asynchronous I/O operations.</span></span>

 <span data-ttu-id="4960c-339">Diese Methode nimmt ein Abbruchtoken an, das verwendet werden kann, um ein frühes Abbrechen des Vorgangs anzufordern.</span><span class="sxs-lookup"><span data-stu-id="4960c-339">This method accepts a cancellation token that can be used to request the operation to be cancelled early.</span></span> <span data-ttu-id="4960c-340">Implementierungen können diese Anforderung ignorieren.</span><span class="sxs-lookup"><span data-stu-id="4960c-340">Implementations may ignore this request.</span></span>
 
 <span data-ttu-id="4960c-341">Andere Methoden und Eigenschaften des DbDataReader-Objekts sollten nicht aufgerufen werden, während die zurückgegebene Aufgabe noch nicht abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="4960c-341">Other methods and properties of the DbDataReader object should not be invoked while the returned Task is not yet completed.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4960c-342">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-342">The connection was dropped or closed during the data retrieval.</span></span>  
  
<span data-ttu-id="4960c-343">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-343">-or-</span></span>

<span data-ttu-id="4960c-344">Der Datenreader wurde während des Datenabrufs geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4960c-344">The data reader is closed during the data retrieval.</span></span>  

<span data-ttu-id="4960c-345">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-345">-or-</span></span>

<span data-ttu-id="4960c-346">Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).</span><span class="sxs-lookup"><span data-stu-id="4960c-346">There is no data ready to be read (for example, the first <see cref="M:System.Data.Common.DbDataReader.Read" /> hasn't been called, or returned false).</span></span>  

<span data-ttu-id="4960c-347">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-347">-or-</span></span>

<span data-ttu-id="4960c-348">Es wird versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.</span><span class="sxs-lookup"><span data-stu-id="4960c-348">Trying to read a previously read column in sequential mode.</span></span>  

<span data-ttu-id="4960c-349">- oder -</span><span class="sxs-lookup"><span data-stu-id="4960c-349">-or-</span></span> 
<span data-ttu-id="4960c-350">Es gab einen aktiven asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="4960c-350">There was an asynchronous operation in progress.</span></span> <span data-ttu-id="4960c-351">Dies gilt für alle Get\*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</span><span class="sxs-lookup"><span data-stu-id="4960c-351">This applies to all Get\* methods when running in sequential mode, as they could be called while reading a stream.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="4960c-352">Der angegebene Name ist kein gültiger Spaltenname.</span><span class="sxs-lookup"><span data-stu-id="4960c-352">The name specified is not a valid column name.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
