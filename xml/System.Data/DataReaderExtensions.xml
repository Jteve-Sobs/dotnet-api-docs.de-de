<Type Name="DataReaderExtensions" FullName="System.Data.DataReaderExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e328ece4420a6983e2effb23f72c2dfc4cc1852d" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83460200" /></Metadata><TypeSignature Language="C#" Value="public static class DataReaderExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataReaderExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataReaderExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataReaderExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataReaderExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataReaderExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Data.Common" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Erweiterungsmethoden für <see cref="T:System.Data.Common.DbDataReader" /> bereit.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public static bool GetBoolean (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetBoolean(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetBoolean(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBoolean (reader As DbDataReader, name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool GetBoolean(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetBoolean : System.Data.Common.DbDataReader * string -&gt; bool" Usage="System.Data.DataReaderExtensions.GetBoolean (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als booleschen Wert ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public static byte GetByte (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 GetByte(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetByte(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetByte (reader As DbDataReader, name As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Byte GetByte(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetByte : System.Data.Common.DbDataReader * string -&gt; byte" Usage="System.Data.DataReaderExtensions.GetByte (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als Bytewert ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public static long GetBytes (this System.Data.Common.DbDataReader reader, string name, long dataOffset, byte[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetBytes(class System.Data.Common.DbDataReader reader, string name, int64 dataOffset, unsigned int8[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetBytes(System.Data.Common.DbDataReader,System.String,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetBytes (reader As DbDataReader, name As String, dataOffset As Long, buffer As Byte(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long GetBytes(System::Data::Common::DbDataReader ^ reader, System::String ^ name, long dataOffset, cli::array &lt;System::Byte&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="static member GetBytes : System.Data.Common.DbDataReader * string * int64 * byte[] * int * int -&gt; int64" Usage="System.Data.DataReaderExtensions.GetBytes (reader, name, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <param name="dataOffset">Der Index innerhalb der Zeile, bei der der Lesevorgang gestartet werden soll.</param>
        <param name="buffer">Der Puffer, in den die Daten kopiert werden.</param>
        <param name="bufferOffset">Der Index mit dem Puffer, in den die Daten kopiert werden.</param>
        <param name="length">Die maximale Anzahl der zu lesenden Zeichen.</param>
        <summary>Liest eine angegebene Anzahl Bytes, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer.</summary>
        <returns>Die tatsächliche Anzahl gelesener Bytes.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public static char GetChar (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char GetChar(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetChar(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChar (reader As DbDataReader, name As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static char GetChar(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetChar : System.Data.Common.DbDataReader * string -&gt; char" Usage="System.Data.DataReaderExtensions.GetChar (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als Einzelzeichen ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public static long GetChars (this System.Data.Common.DbDataReader reader, string name, long dataOffset, char[] buffer, int bufferOffset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetChars(class System.Data.Common.DbDataReader reader, string name, int64 dataOffset, char[] buffer, int32 bufferOffset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetChars(System.Data.Common.DbDataReader,System.String,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetChars (reader As DbDataReader, name As String, dataOffset As Long, buffer As Char(), bufferOffset As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long GetChars(System::Data::Common::DbDataReader ^ reader, System::String ^ name, long dataOffset, cli::array &lt;char&gt; ^ buffer, int bufferOffset, int length);" />
      <MemberSignature Language="F#" Value="static member GetChars : System.Data.Common.DbDataReader * string * int64 * char[] * int * int -&gt; int64" Usage="System.Data.DataReaderExtensions.GetChars (reader, name, dataOffset, buffer, bufferOffset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dataOffset" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferOffset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <param name="dataOffset">Der Index innerhalb der Zeile, bei der der Lesevorgang gestartet werden soll.</param>
        <param name="buffer">Der Puffer, in den die Daten kopiert werden.</param>
        <param name="bufferOffset">Der Index mit dem Puffer, in den die Daten kopiert werden.</param>
        <param name="length">Die maximale Anzahl der zu lesenden Zeichen.</param>
        <summary>Liest eine angegebene Anzahl Zeichen, beginnend bei einem angegebenen Index, aus der angegebenen Spalte und schreibt sie, beginnend bei einer angegebenen Position, in einen Puffer.</summary>
        <returns>Die tatsächliche Anzahl gelesener Zeichen.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public static System.Data.Common.DbDataReader GetData (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Common.DbDataReader GetData(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetData(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetData (reader As DbDataReader, name As String) As DbDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::Common::DbDataReader ^ GetData(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetData : System.Data.Common.DbDataReader * string -&gt; System.Data.Common.DbDataReader" Usage="System.Data.DataReaderExtensions.GetData (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Gibt einen verschachtelten Datenreader für die angeforderte Spalte zurück.</summary>
        <returns>Ein Datenleser.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public static string GetDataTypeName (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDataTypeName(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetDataTypeName(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDataTypeName (reader As DbDataReader, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetDataTypeName(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetDataTypeName : System.Data.Common.DbDataReader * string -&gt; string" Usage="System.Data.DataReaderExtensions.GetDataTypeName (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Name des Spaltentyps abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Namen des Datentyps der angegebenen Spalte ab.</summary>
        <returns>Der Name des Datentyps.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public static DateTime GetDateTime (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime GetDateTime(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetDateTime(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDateTime (reader As DbDataReader, name As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static DateTime GetDateTime(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetDateTime : System.Data.Common.DbDataReader * string -&gt; DateTime" Usage="System.Data.DataReaderExtensions.GetDateTime (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.DateTime" />-Objekt ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public static decimal GetDecimal (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal GetDecimal(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetDecimal(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDecimal (reader As DbDataReader, name As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Decimal GetDecimal(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetDecimal : System.Data.Common.DbDataReader * string -&gt; decimal" Usage="System.Data.DataReaderExtensions.GetDecimal (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als <see cref="T:System.Decimal" /> ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public static double GetDouble (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetDouble(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetDouble(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetDouble (reader As DbDataReader, name As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static double GetDouble(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetDouble : System.Data.Common.DbDataReader * string -&gt; double" Usage="System.Data.DataReaderExtensions.GetDouble (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit doppelter Genauigkeit ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public static Type GetFieldType (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetFieldType(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetFieldType(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFieldType (reader As DbDataReader, name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Type ^ GetFieldType(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetFieldType : System.Data.Common.DbDataReader * string -&gt; Type" Usage="System.Data.DataReaderExtensions.GetFieldType (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Feldtyp abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Datentyp der angegebenen Spalte ab.</summary>
        <returns>Der Datentyp der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetFieldValue&lt;T&gt; (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetFieldValue&lt;T&gt;(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetFieldValue``1(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFieldValue(Of T) (reader As DbDataReader, name As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T GetFieldValue(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetFieldValue : System.Data.Common.DbDataReader * string -&gt; 'T" Usage="System.Data.DataReaderExtensions.GetFieldValue (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zurückzugebenden Werts.</typeparam>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als angeforderten Typ ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  

Oder 
Der Datenreader wurde während des Datenabrufs geschlossen.  
  
Oder

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).  

Oder

Der Reader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

Oder

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;T&gt; GetFieldValueAsync&lt;T&gt; (this System.Data.Common.DbDataReader reader, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;!!T&gt; GetFieldValueAsync&lt;T&gt;(class System.Data.Common.DbDataReader reader, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetFieldValueAsync``1(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFieldValueAsync(Of T) (reader As DbDataReader, name As String, Optional cancellationToken As CancellationToken = null) As Task(Of T)" />
      <MemberSignature Language="F#" Value="static member GetFieldValueAsync : System.Data.Common.DbDataReader * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="System.Data.DataReaderExtensions.GetFieldValueAsync (reader, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des zurückzugebenden Werts.</typeparam>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs.</param>
        <summary>Ruft den Wert der angegebenen Spalte asynchron als angeforderten Typ ab.</summary>
        <returns>Eine Aufgabe, deren <see cref="P:System.Threading.Tasks.Task`1.Result" /> den Wert der angegebenen Spalte enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks
 Diese asynchrone Methode wird nur benötigt, um zu verhindern, dass der aufrufende Thread blockiert wird, wenn der Reader im sequenziellen Modus erstellt wird.
 
 Wenn der sequenzielle Modus nicht angegeben wird, sollten alle Spaltenwerte im Arbeitsspeicher verfügbar werden, sobald "leseasync" abgeschlossen ist, und der Aufruf der synchronen Version der Methode sollte den aufrufenden Thread nicht blockieren.

 Die Standard Implementierung dieser asynchronen Methode ruft die synchrone Entsprechung auf und gibt eine abgeschlossene Aufgabe zurück, die möglicherweise den aufrufenden Thread blockiert. Die Standard Implementierung gibt auch eine abgebrochene Aufgabe zurück, wenn ein bereits abgebrochenes Abbruch Token übergangen wird.

 Datenanbieter, die die [asynchrone Programmierung](~/docs/framework/data/adonet/asynchronous-programming.md) unterstützen, sollten die standardmäßige inmplementierung mithilfe von asynchronen e/a-Vorgängen überschreiben.

 Diese Methode nimmt ein Abbruchtoken an, das verwendet werden kann, um ein frühes Abbrechen des Vorgangs anzufordern. Implementierungen können diese Anforderung ignorieren.
 
 Andere Methoden und Eigenschaften des DbDataReader-Objekts sollten nicht aufgerufen werden, während die zurückgegebene Aufgabe noch nicht abgeschlossen ist.
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
Oder

Der Datenreader wurde während des Datenabrufs geschlossen.  

Oder

Es sind keine Daten zum Lesen vorhanden (beispielsweise wurde der erste <see cref="M:System.Data.Common.DbDataReader.Read" /> nicht aufgerufen oder hat <see langword="false" /> zurückgegeben).

Oder

Es wurde versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

Oder

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get_*_-Methoden bei der Ausführung im sequenziellen Modus, da sie während des Lesens eines Datenstroms aufgerufen werden können.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Der von der Datenbank zurückgegebene Wert passt nicht oder kann nicht in <typeparamref name="T" /> umgewandelt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public static float GetFloat (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetFloat(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetFloat(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetFloat (reader As DbDataReader, name As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static float GetFloat(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetFloat : System.Data.Common.DbDataReader * string -&gt; single" Usage="System.Data.DataReaderExtensions.GetFloat (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als Gleitkommazahl mit einfacher Genauigkeit ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public static Guid GetGuid (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid GetGuid(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetGuid(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetGuid (reader As DbDataReader, name As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Guid GetGuid(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetGuid : System.Data.Common.DbDataReader * string -&gt; Guid" Usage="System.Data.DataReaderExtensions.GetGuid (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als GUID (Globally Unique Identifier) ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public static short GetInt16 (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 GetInt16(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetInt16(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInt16 (reader As DbDataReader, name As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static short GetInt16(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetInt16 : System.Data.Common.DbDataReader * string -&gt; int16" Usage="System.Data.DataReaderExtensions.GetInt16 (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als 16-Bit-Ganzzahl mit Vorzeichen ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public static int GetInt32 (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetInt32(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetInt32(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInt32 (reader As DbDataReader, name As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static int GetInt32(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetInt32 : System.Data.Common.DbDataReader * string -&gt; int" Usage="System.Data.DataReaderExtensions.GetInt32 (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als 32-Bit-Ganzzahl mit Vorzeichen ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public static long GetInt64 (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 GetInt64(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetInt64(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetInt64 (reader As DbDataReader, name As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static long GetInt64(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetInt64 : System.Data.Common.DbDataReader * string -&gt; int64" Usage="System.Data.DataReaderExtensions.GetInt64 (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als 64-Bit-Ganzzahl mit Vorzeichen ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificFieldType">
      <MemberSignature Language="C#" Value="public static Type GetProviderSpecificFieldType (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetProviderSpecificFieldType(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetProviderSpecificFieldType(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderSpecificFieldType (reader As DbDataReader, name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Type ^ GetProviderSpecificFieldType(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetProviderSpecificFieldType : System.Data.Common.DbDataReader * string -&gt; Type" Usage="System.Data.DataReaderExtensions.GetProviderSpecificFieldType (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den anbieterspezifischen Typ der angegebenen Spalte ab.</summary>
        <returns>Ein anbieterspezifischer .NET-Typ.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetProviderSpecificValue">
      <MemberSignature Language="C#" Value="public static object GetProviderSpecificValue (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetProviderSpecificValue(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetProviderSpecificValue(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetProviderSpecificValue (reader As DbDataReader, name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ GetProviderSpecificValue(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetProviderSpecificValue : System.Data.Common.DbDataReader * string -&gt; obj" Usage="System.Data.DataReaderExtensions.GetProviderSpecificValue (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als Instanz eines anbieterspezifischen Typs ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream GetStream (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream GetStream(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetStream(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetStream (reader As DbDataReader, name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ GetStream(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetStream : System.Data.Common.DbDataReader * string -&gt; System.IO.Stream" Usage="System.Data.DataReaderExtensions.GetStream (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft einen Stream ab, um Daten aus der angegebenen Spalte abzurufen.</summary>
        <returns>Ein Datenstrom.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbDataReader.GetStream%2A> unterstützt nur das Abrufen von Werten, die in Byte Arrays konvertiert werden können.  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
Oder

Der Datenreader wurde während des Datenabrufs geschlossen.  

Oder

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

Oder

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

Oder

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Spalte ist kein binärer Typ, der Lesevorgänge mit einem <see cref="T:System.IO.Stream" /> unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public static string GetString (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetString(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetString(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetString (reader As DbDataReader, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::String ^ GetString(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetString : System.Data.Common.DbDataReader * string -&gt; string" Usage="System.Data.DataReaderExtensions.GetString (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als eine Instanz von <see cref="T:System.String" /> ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Umwandlung ist ungültig.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetTextReader">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader GetTextReader (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextReader GetTextReader(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetTextReader(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetTextReader (reader As DbDataReader, name As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::TextReader ^ GetTextReader(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetTextReader : System.Data.Common.DbDataReader * string -&gt; System.IO.TextReader" Usage="System.Data.DataReaderExtensions.GetTextReader (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft einen Textreader zum Auslesen von Daten aus der Spalte ab.</summary>
        <returns>Ein Textreader.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbDataReader.GetTextReader%2A> unterstützt nur das Abrufen von Werten, die in Zeichen Arrays (Zeichen folgen) konvertiert werden können.  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
Oder

Der Datenreader wurde während des Datenabrufs geschlossen.  

Oder

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

Oder

Der Datenreader hat versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

Oder

Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <exception cref="T:System.InvalidCastException">Die angegebene Spalte ist kein Texttyp, der Lesevorgänge mit einem <see cref="T:System.IO.TextReader" /> unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public static object GetValue (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetValue(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.GetValue(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetValue (reader As DbDataReader, name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Object ^ GetValue(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetValue : System.Data.Common.DbDataReader * string -&gt; obj" Usage="System.Data.DataReaderExtensions.GetValue (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft den Wert der angegebenen Spalte als eine Instanz von <see cref="T:System.Object" /> ab.</summary>
        <returns>Der Wert der angegebenen Spalte.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public static bool IsDBNull (this System.Data.Common.DbDataReader reader, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDBNull(class System.Data.Common.DbDataReader reader, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.IsDBNull(System.Data.Common.DbDataReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDBNull (reader As DbDataReader, name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDBNull(System::Data::Common::DbDataReader ^ reader, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member IsDBNull : System.Data.Common.DbDataReader * string -&gt; bool" Usage="System.Data.DataReaderExtensions.IsDBNull (reader, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <summary>Ruft einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
        <returns><see langword="true" />, wenn die angegebene Spalte <see cref="T:System.DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie diese Methode auf, um nach NULL-Spaltenwerten zu suchen, bevor Sie die typisierten get_ * _-Methoden aufrufen (z. b. <xref:System.Data.Common.DbDataReader.GetByte%2A>, <xref:System.Data.Common.DbDataReader.GetChar%2A>usw.), um das Auslösen einer Ausnahme zu vermeiden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ado-net-overview.md">Übersicht über ADO.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNullAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; IsDBNullAsync (this System.Data.Common.DbDataReader reader, string name, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; IsDBNullAsync(class System.Data.Common.DbDataReader reader, string name, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataReaderExtensions.IsDBNullAsync(System.Data.Common.DbDataReader,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDBNullAsync (reader As DbDataReader, name As String, Optional cancellationToken As CancellationToken = null) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="static member IsDBNullAsync : System.Data.Common.DbDataReader * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="System.Data.DataReaderExtensions.IsDBNullAsync (reader, name, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.Common.DbDataReader" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="reader">Der Datenreader, bei dem der Spaltenwert abgerufen werden soll.</param>
        <param name="name">Name der Spalte.</param>
        <param name="cancellationToken">Ein optionales Token zum Abbrechen des asynchronen Vorgangs.</param>
        <summary>Ruft asynchron einen Wert ab, der angibt, ob die Spalte nicht vorhandene oder fehlende Werte enthält.</summary>
        <returns>Eine <see cref="T:System.Threading.Tasks.Task`1" />, deren <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft <see langword="true" /> ist, wenn der angegebene Spaltenwert <see langword="DBNull" /> entspricht, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
 ## Remarks
 ## Remarks
 Diese asynchrone Methode wird nur benötigt, um zu verhindern, dass der aufrufende Thread blockiert wird, wenn der Reader im sequenziellen Modus erstellt wird.
 
 Wenn der sequenzielle Modus nicht angegeben wird, sollten alle Spaltenwerte im Arbeitsspeicher verfügbar werden, sobald "leseasync" abgeschlossen ist, und der Aufruf der synchronen Version der Methode sollte den aufrufenden Thread nicht blockieren.

 Die Standard Implementierung dieser asynchronen Methode ruft die synchrone Entsprechung auf und gibt eine abgeschlossene Aufgabe zurück, die möglicherweise den aufrufenden Thread blockiert. Die Standard Implementierung gibt auch eine abgebrochene Aufgabe zurück, wenn ein bereits abgebrochenes Abbruch Token übergangen wird.

 Datenanbieter, die die [asynchrone Programmierung](~/docs/framework/data/adonet/asynchronous-programming.md) unterstützen, sollten die standardmäßige inmplementierung mithilfe von asynchronen e/a-Vorgängen überschreiben.

 Diese Methode nimmt ein Abbruchtoken an, das verwendet werden kann, um ein frühes Abbrechen des Vorgangs anzufordern. Implementierungen können diese Anforderung ignorieren.
 
 Andere Methoden und Eigenschaften des DbDataReader-Objekts sollten nicht aufgerufen werden, während die zurückgegebene Aufgabe noch nicht abgeschlossen ist.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Verbindung wurde während des Datenabrufs gelöscht oder geschlossen.  
  
Oder

Der Datenreader wurde während des Datenabrufs geschlossen.  

Oder

Es gibt keine Daten, die gelesen werden können (der erste Aufruf von <see cref="M:System.Data.Common.DbDataReader.Read" /> hat z. B. nicht stattgefunden oder "false" zurückgegeben).  

Oder

Es wird versucht, eine zuvor gelesene Spalte im sequenziellen Modus zu lesen.  

Oder 
Es gab einen aktiven asynchronen Vorgang. Dies gilt für alle Get*-Methoden bei der Ausführung im sequenziellen Modus, da sie aufgerufen werden können, während des Lesens eines Datenstroms.</exception>
        <exception cref="T:System.IndexOutOfRangeException">Der angegebene Name ist kein gültiger Spaltenname.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
