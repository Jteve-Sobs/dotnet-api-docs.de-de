<Type Name="CommandBehavior" FullName="System.Data.CommandBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fb141d08702477118f3091614694b70053003c4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30389074" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum CommandBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CommandBehavior extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Data.CommandBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Enum CommandBehavior" />
  <TypeSignature Language="C++ CLI" Value="public enum class CommandBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Beschreibung der Abfrageergebnisse und deren Auswirkungen auf die Datenbank bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.CommandBehavior> Werte werden verwendet, indem Sie die <xref:System.Data.IDbCommand.ExecuteReader%2A> Methode <xref:System.Data.IDbCommand> und alle Klassen abgeleitet.  
  
 Eine bitweise Kombination der folgenden Werte kann verwendet werden.  
  
 <xref:System.Data.CommandBehavior> wird ignoriert, wenn Sie zum Definieren einer <xref:System.Data.Sql.SqlNotificationRequest> oder <xref:System.Data.SqlClient.SqlDependency> und sollte daher nicht verwendet werden. Verwenden Sie den Konstruktor, der keine erfordert eine `CommandBehavior` Parameter in diesen beiden Fällen.  
  
> [!NOTE]
>  Verwenden Sie SequentialAccess, um große Werte und Binärdaten abzurufen. Andernfalls ein <xref:System.OutOfMemoryException> auftreten und die Verbindung wird geschlossen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseConnection">
      <MemberSignature Language="C#" Value="CloseConnection" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior CloseConnection = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.CloseConnection" />
      <MemberSignature Language="VB.NET" Value="CloseConnection" />
      <MemberSignature Language="C++ CLI" Value="CloseConnection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Beim Ausführen des Befehls wird das zugeordnete <see langword="Connection" />-Objekt geschlossen, wenn das zugeordnete <see langword="DataReader" />-Objekt geschlossen wird.</summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Die Abfrage kann mehrere Resultsets zurückgeben. Die Ausführung der Abfrage kann sich auf den Zustand der Datenbank auswirken. <see langword="Default" /> legt keine <see cref="T:System.Data.CommandBehavior" />-Flags fest, daher entspricht die Funktion eines Aufrufs von <see langword="ExecuteReader(CommandBehavior.Default)" /> dem von <see langword="ExecuteReader()" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="KeyInfo" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior KeyInfo = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="KeyInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Die Abfrage gibt Informationen über Spalten und Primärschlüssel zurück.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn KeyInfo für die Ausführung des Befehls verwendet wird, wird der Anbieter zusätzliche Spalten im Resultset für die vorhandenen Primärschlüssel und Timestamp-Spalten angefügt.  
  
 Wenn KeyInfo verwenden zu können, ist die .NET Framework-Datenanbieter für SQL Server die Anweisung SET FMTONLY OFF und SET NO_BROWSETABLE ON vorangestellt. Der Benutzer muss mögliche Nebeneffekte beachten, z. B. Beeinträchtigungen bei der Verwendung von SET FMTONLY ON-Anweisungen. Weitere Informationen finden Sie in der SQL Server-Onlinedokumentation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaOnly">
      <MemberSignature Language="C#" Value="SchemaOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SchemaOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SchemaOnly" />
      <MemberSignature Language="VB.NET" Value="SchemaOnly" />
      <MemberSignature Language="C++ CLI" Value="SchemaOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Die Abfrage gibt nur Spalteninformationen zurück. Bei Verwendung von <see cref="F:System.Data.CommandBehavior.SchemaOnly" /> stellt der .NET Framework-Datenanbieter für SQL Server der auszuführenden Anweisung SET FMTONLY ON voran.</summary>
      </Docs>
    </Member>
    <Member MemberName="SequentialAccess">
      <MemberSignature Language="C#" Value="SequentialAccess" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SequentialAccess = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SequentialAccess" />
      <MemberSignature Language="VB.NET" Value="SequentialAccess" />
      <MemberSignature Language="C++ CLI" Value="SequentialAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Ermöglicht dem <see langword="DataReader" /> das Behandeln von Zeilen, die Spalten mit großen Binärwerten enthalten. Statt des Ladens der gesamten Zeile ermöglicht <see langword="SequentialAccess" /> dem <see langword="DataReader" /> das Laden der Daten als Stream. Anschließend können Sie mit der <see langword="GetBytes" />-Methode oder der <see langword="GetChars" />-Methode eine Byteposition für den Beginn des Lesevorgangs sowie eine eingeschränkte Puffergröße für die zurückgegebenen Daten angeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Geben Sie bei `SequentialAccess`, ist es erforderlich, das Lesen aus den Spalten in der Reihenfolge, die zurückgegeben werden, obwohl Sie nicht erforderlich sind, jede Spalte zu lesen. Sobald Sie nach einem Speicherort in den zurückgegebenen Datenstrom gelesen haben, Daten an oder vor diesem Speicherort können nicht mehr gelesen werden aus der `DataReader`. Bei Verwendung der <xref:System.Data.OleDb.OleDbDataReader>, Sie können den aktuellen Spaltenwert gelesen, bis darüber hinaus gelesen wird. Bei Verwendung der <xref:System.Data.SqlClient.SqlDataReader>, Sie können einen Spaltenwert nur einmal gelesen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleResult">
      <MemberSignature Language="C#" Value="SingleResult" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleResult = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleResult" />
      <MemberSignature Language="VB.NET" Value="SingleResult" />
      <MemberSignature Language="C++ CLI" Value="SingleResult" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Die Abfrage gibt ein einziges Resultset zurück.</summary>
      </Docs>
    </Member>
    <Member MemberName="SingleRow">
      <MemberSignature Language="C#" Value="SingleRow" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Data.CommandBehavior SingleRow = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Data.CommandBehavior.SingleRow" />
      <MemberSignature Language="VB.NET" Value="SingleRow" />
      <MemberSignature Language="C++ CLI" Value="SingleRow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandBehavior</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Von der Abfrage wird erwartet, dass eine einzige Zeile des ersten Resultsets zurückgegeben wird. Die Ausführung der Abfrage kann sich auf den Zustand der Datenbank auswirken. Einige .NET Framework-Datenprovider können mit diesen Informationen die Leistung des Befehls optimieren (dies ist jedoch nicht unbedingt erforderlich). Wenn Sie <see cref="F:System.Data.CommandBehavior.SingleRow" /> mit der <see cref="M:System.Data.OleDb.OleDbCommand.ExecuteReader" />-Methode des <see cref="T:System.Data.OleDb.OleDbCommand" />-Objekts angeben, führt der .NET Framework-Datenanbieter für OLE DB eine Bindung mithilfe der OLE DB <see langword="IRow" />-Schnittstelle durch, sofern diese verfügbar ist. Andernfalls wird die <see langword="IRowset" />-Schnittstelle verwendet. Wenn die SQL-Anweisung nur eine einzige Zeile zurückgeben soll, kann durch Angeben von <see cref="F:System.Data.CommandBehavior.SingleRow" /> auch die Leistung der Anwendung verbessert werden. <see langword="SingleRow" /> kann auch beim Ausführen von Abfragen angegeben werden, die mehrere Resultsets zurückgeben können.  In einem solchen Fall, in dem sowohl eine SQL-Abfrage für mehrere Resultsets als auch eine einzige Zeile angegeben werden, enthält das zurückgegebene Ergebnis nur die erste Zeile des ersten Resultsets. Die übrigen Resultsets der Abfrage werden nicht zurückgegeben.</summary>
      </Docs>
    </Member>
  </Members>
</Type>