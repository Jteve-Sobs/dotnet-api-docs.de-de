<Type Name="Capture" FullName="System.Text.RegularExpressions.Capture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8c6622a46ed260faf6d20df76bc89b8d28ce112" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37609796" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Capture extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="VB.NET" Value="Public Class Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Capture" />
  <TypeSignature Language="F#" Value="type Capture = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Ergebnisse einer einzelnen erfolgreichen Teilausdruckerfassung dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Text.RegularExpressions.Capture> -Objekt ist unveränderlich und besitzt keinen öffentlichen Konstruktor. Instanzen werden zurückgegeben, über die <xref:System.Text.RegularExpressions.CaptureCollection> -Objekt, das von zurückgegeben wird das `Match.Captures` und <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> Eigenschaften. Allerdings die `Match.Captures` -Eigenschaft stellt Informationen zur gleichen Übereinstimmung wie das <xref:System.Text.RegularExpressions.Match> Objekt.  
  
 Wenn Sie nicht übernehmen eine für eine Erfassungsgruppe der <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType> -Eigenschaft gibt eine <xref:System.Text.RegularExpressions.CaptureCollection> mit einem einzelnen <xref:System.Text.RegularExpressions.Capture> -Objekt, das Informationen über die gleiche Erfassung wie der <xref:System.Text.RegularExpressions.Group> Objekt. Wenn Sie einen Quantifizierer auf eine Erfassungsgruppe anwenden, die `Group.Index`, `Group.Length`, und `Group.Value` Eigenschaften stellen lediglich Informationen zu der zuletzt erfassten Gruppe bereit, während die <xref:System.Text.RegularExpressions.Capture> Objekte in der <xref:System.Text.RegularExpressions.CaptureCollection> bieten Informationen zu Teilausdruck erfasst. Dies wird im Beispiel veranschaulicht.  
  
   
  
## Examples  
 Das folgende Beispiel definiert einen regulären Ausdruck, der Sätze entspricht, die darf kein Satzzeichen stehen mit Ausnahme der einen Punkt enthalten (".").  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 Das Muster für reguläre Ausdrücke `((\w+)[\s.])+` wird entsprechend der folgenden Tabelle definiert: Beachten Sie, dass in diesen regulären Ausdruck ein Quantifizierer (+) klicken Sie auf den gesamten regulären Ausdruck angewendet wird.  
  
|Muster|Beschreibung |  
|-------------|-----------------|  
|`(\w+)`|Übereinstimmung mit mindestens einem Wortzeichen. Dies ist die zweite Erfassungsgruppe.|  
|`[\s.])`|Entspricht einem Leerzeichen oder einem Punkt (".").|  
|`((\w+)[\s.])`|Übereinstimmung mit mindestens einem Wortzeichen gefolgt von einem Leerzeichen oder einem Punkt ("."). Dies ist die erste Erfassungsgruppe.|  
|`((\w+)[\s.])+`|Übereinstimmung mit mindestens einem Wortzeichen oder Zeichen, gefolgt von einem Leerzeichen oder einem Punkt (".").|  
  
 In diesem Beispiel besteht aus zwei Sätze der Eingabezeichenfolge steht. Wie die Ausgabe zeigt, wird der erste Satz von nur einem Wort besteht also die <xref:System.Text.RegularExpressions.CaptureCollection> Objekt verfügt über eine einzelne <xref:System.Text.RegularExpressions.Capture> -Objekt, das die gleiche Erfassung wie stellt der <xref:System.Text.RegularExpressions.Group> Objekt. Der zweite Satz besteht aus mehreren Wörtern, sodass die <xref:System.Text.RegularExpressions.Group> -Objekte enthalten nur die Informationen zu den letzten übereinstimmenden Teilausdruck. Gruppe 1, in der erste Erfassung darstellt, enthält das letzte Wort des Satzes ein, die über einen Zeitraum schließende verfügt. Gruppe 2, die die zweite Erfassung darstellt, enthält das letzte Wort im Satz. Allerdings die <xref:System.Text.RegularExpressions.Capture> Objekte in der Gruppennamens <xref:System.Text.RegularExpressions.CaptureCollection> jedes teilausdrucksabgleichs capture-Objekt. Die <xref:System.Text.RegularExpressions.Capture> Objekte in der ersten Erfassungsgruppe Auflistung von Erfassungen enthalten Informationen über jeden erfassten Wort und Leerzeichen oder Punkt. Die <xref:System.Text.RegularExpressions.Capture> Objekte in der zweiten Erfassungsgruppe Auflistung von Erfassungen enthalten Informationen zu jedem erfassten Wort.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.CaptureCollection" />
  </Docs>
  <Members>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Index : int" Usage="System.Text.RegularExpressions.Capture.Index" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Position in der ursprünglichen Zeichenfolge, an der das erste Zeichen der aufgezeichneten Teilzeichenfolge gefunden wurde.</summary>
        <value>Die nullbasierte Anfangsposition in der ursprünglichen Zeichenfolge, an der die aufgezeichnete Teilzeichenfolge gefunden wurde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Text.RegularExpressions.Capture.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Länge der aufgezeichneten Teilzeichenfolge ab.</summary>
        <value>Die Länge der aufgezeichneten Teilzeichenfolge.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Capture.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="capture.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft die erfasste Teilzeichenfolge von der Eingabezeichenfolge durch Aufrufen der <see cref="P:System.Text.RegularExpressions.Capture.Value" />-Eigenschaft ab.</summary>
        <returns>Die Teilzeichenfolge, die von der Übereinstimmung aufgezeichnet wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ToString` ist tatsächlich ein interner Aufruf für die <xref:System.Text.RegularExpressions.Capture.Value%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Capture.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Text.RegularExpressions.Capture.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die aufgezeichnete Teilzeichenfolge aus der Eingabezeichenfolge ab.</summary>
        <value>Die Teilzeichenfolge, die von der Übereinstimmung aufgezeichnet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Aufruf von der <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> oder <xref:System.Text.RegularExpressions.Match.NextMatch%2A?displayProperty=nameWithType> Methode fehlschlägt, finden Sie eine Übereinstimmung, die den Wert des zurückgegebenen `Match.Value` Eigenschaft <xref:System.String.Empty?displayProperty=nameWithType>. Wenn die Engine für reguläre Ausdrücke eine Erfassungsgruppe entsprechen kann. der Wert des zurückgegebenen `Group.Value` Eigenschaft <xref:System.String.Empty?displayProperty=nameWithType>. Finden Sie im zweite Beispiel zur Veranschaulichung.  
  
   
  
## Examples  
 Das folgende Beispiel definiert einen regulären Ausdruck, der Sätze entspricht, die darf kein Satzzeichen stehen mit Ausnahme der einen Punkt enthalten ("."). Die `Match.Value` Eigenschaft zeigt an, die Ergebniszeichenfolge, die einen übereinstimmenden Satz ein, für jede Übereinstimmung besteht. Die `Group.Value` Eigenschaft zeigt an, die Ergebniszeichenfolge für jede Erfassungsgruppe; es besteht die letzte Zeichenfolge, die von dieser Erfassungsgruppe erfasst. Die <xref:System.Text.RegularExpressions.Capture.Value%2A?displayProperty=nameWithType> Eigenschaft zeigt an, die Ergebniszeichenfolge für jede Erfassung.  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/cs/example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.class/vb/example1.vb#1)]  
  
 Das Muster für reguläre Ausdrücke `((\w+)[\s.])+` wird entsprechend der folgenden Tabelle definiert: Beachten Sie, dass in diesen regulären Ausdruck ein Quantifizierer (+) klicken Sie auf den gesamten regulären Ausdruck angewendet wird.  
  
|Muster|Beschreibung |  
|-------------|-----------------|  
|`(\w+)`|Übereinstimmung mit mindestens einem Wortzeichen. Dies ist die zweite Erfassungsgruppe.|  
|`[\s.])`|Entspricht einem Leerzeichen oder einem Punkt (".").|  
|`((\w+)[\s.])`|Übereinstimmung mit mindestens einem Wortzeichen gefolgt von einem Leerzeichen oder einem Punkt ("."). Dies ist die erste Erfassungsgruppe.|  
|`((\w+)[\s.])+`|Übereinstimmung mit mindestens einem Wortzeichen oder Zeichen, gefolgt von einem Leerzeichen oder einem Punkt (".").|  
  
 In diesem Beispiel besteht aus zwei Sätze der Eingabezeichenfolge steht. Wie die Ausgabe zeigt, wird der erste Satz von nur einem Wort besteht also die <xref:System.Text.RegularExpressions.CaptureCollection> Objekt verfügt über eine einzelne <xref:System.Text.RegularExpressions.Capture> -Objekt, das die gleiche Erfassung wie stellt der <xref:System.Text.RegularExpressions.Group> Objekt. Der zweite Satz besteht aus mehreren Wörtern, sodass die <xref:System.Text.RegularExpressions.Group> -Objekte enthalten nur die Informationen zu den letzten übereinstimmenden Teilausdruck. Gruppe 1, in der erste Erfassung darstellt, enthält das letzte Wort des Satzes ein, die über einen Zeitraum schließende verfügt. Gruppe 2, die die zweite Erfassung darstellt, enthält das letzte Wort im Satz. Allerdings die <xref:System.Text.RegularExpressions.Capture> Objekte in der Gruppennamens <xref:System.Text.RegularExpressions.CaptureCollection> jedes teilausdrucksabgleichs capture-Objekt. Die <xref:System.Text.RegularExpressions.Capture> Objekte in der ersten Erfassungsgruppe Auflistung von Erfassungen enthalten Informationen über jeden erfassten Wort und Leerzeichen oder Punkt. Die <xref:System.Text.RegularExpressions.Capture> Objekte in der zweiten Erfassungsgruppe Auflistung von Erfassungen enthalten Informationen zu jedem erfassten Wort.  
  
 Im folgenden Beispiel wird ein Muster für reguläre Ausdrücke `^([a-z]+)(\d+)*\.([a-z]+(\d)*)$`, um eine Produkt-Anzahl entsprechen, die aus zwei durch einen Punkt getrennten Teilen besteht. Beide Teile bestehen aus Buchstaben, gefolgt von optionale Zahlen. Da die erste Eingabe Zeichenfolge nicht das Muster für den Wert des zurückgegebenen übereinstimmt <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> des Objekts `Value` Eigenschaft <xref:System.String.Empty?displayProperty=nameWithType>. Auf ähnliche Weise, wenn Muster des regulären Ausdrucks kann nicht entsprechend eine Erfassungsgruppe ist, den Wert des entsprechenden <xref:System.Text.RegularExpressions.Group> des Objekts `Value` Eigenschaft <xref:System.String.Empty?displayProperty=nameWithType>.  
  
 [!code-csharp[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/cs/value1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Capture.Value#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.capture.value/vb/value1.vb#1)]  
  
 Muster für reguläre Ausdrücke wird definiert, wie in der folgenden Tabelle dargestellt:  
  
|Muster|Beschreibung |  
|-------------|-----------------|  
|`^`|Beginnt die Suche am Anfang der Zeichenfolge.|  
|`([a-z]+)`|Entspricht einem oder mehreren Vorkommen eines beliebigen Zeichens aus einer bis Z. Da die Engine für reguläre Ausdrücke übergeben, wird die <xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType> Option diesem Vergleich wird die Groß-/Kleinschreibung. Dies ist die erste Erfassungsgruppe.|  
|`(\d+)?`|Übereinstimmung mit keinem oder einem Vorkommen von ein oder mehrere Dezimalstellen. Dies ist die zweite Erfassungsgruppe.|  
|`\.`|Mit übereinstimmen Sie Punkt als Literalzeichen.|  
|`([a-z]+`|Entspricht einem oder mehreren Vorkommen eines beliebigen Zeichens aus einer bis Z. Beim Vergleich wird die Groß- und Kleinschreibung nicht berücksichtigt.|  
|`(\d)*`|0 (null) oder mehr Dezimalstellen sollen übereinstimmen. Übereinstimmende Einstellig ist die vierte Erfassungsgruppe.|  
|`([a-z]+(\d)*)`|Findet eine oder mehrere Buchstaben von einem bis z gefolgt von 0 (null), einer oder mehreren Dezimalstellen. Dies ist die vierte Erfassungsgruppe.|  
|`$`|Schließen Sie die Übereinstimmung am Ende der Zeichenfolge.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>