<Type Name="MatchCollection" FullName="System.Text.RegularExpressions.MatchCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1adf6507c612a811afc88bc51d68456d69dd8c7" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82358895" /></Metadata><TypeSignature Language="C#" Value="public class MatchCollection : System.Collections.ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MatchCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.MatchCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class MatchCollection&#xA;Implements ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class MatchCollection : System::Collections::ICollection" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type MatchCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public class MatchCollection : System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.Generic.IReadOnlyCollection&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.Generic.IReadOnlyList&lt;System.Text.RegularExpressions.Match&gt;, System.Collections.IList" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MatchCollection extends System.Object implements class System.Collections.Generic.ICollection`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.Generic.IEnumerable`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.Generic.IList`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;class System.Text.RegularExpressions.Match&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public Class MatchCollection&#xA;Implements ICollection(Of Match), IEnumerable(Of Match), IList, IList(Of Match), IReadOnlyCollection(Of Match), IReadOnlyList(Of Match)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class MatchCollection : System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::Generic::IReadOnlyCollection&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::Generic::IReadOnlyList&lt;System::Text::RegularExpressions::Match ^&gt;, System::Collections::IList" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type MatchCollection = class&#xA;    interface ICollection&lt;Match&gt;&#xA;    interface seq&lt;Match&gt;&#xA;    interface IEnumerable&#xA;    interface IList&lt;Match&gt;&#xA;    interface IReadOnlyCollection&lt;Match&gt;&#xA;    interface IReadOnlyList&lt;Match&gt;&#xA;    interface ICollection&#xA;    interface IList" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type MatchCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface ICollection&lt;Match&gt;&#xA;    interface seq&lt;Match&gt;&#xA;    interface IList&lt;Match&gt;&#xA;    interface IReadOnlyCollection&lt;Match&gt;&#xA;    interface IReadOnlyList&lt;Match&gt;&#xA;    interface IList" FrameworkAlternate="netcore-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit MatchCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Text.RegularExpressions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="bfe90-101">Stellt alle gefundenen Übereinstimmungen dar, die durch iteratives Anwenden eines Musters für reguläre Ausdrücke auf die Eingabezeichenfolge gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-101">Represents the set of successful matches found by iteratively applying a regular expression pattern to the input string.</span></span>  <span data-ttu-id="bfe90-102">Die Auflistung ist unveränderlich (schreibgeschützt) und verfügt über keinen öffentlichen Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="bfe90-102">The collection is immutable (read-only) and has no public constructor.</span></span> <span data-ttu-id="bfe90-103">Die <see cref="T:System.Text.RegularExpressions.Regex.Matches(System.String)" />-Methode gibt ein <see cref="T:System.Text.RegularExpressions.MatchCollection" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="bfe90-103">The <see cref="T:System.Text.RegularExpressions.Regex.Matches(System.String)" /> method returns a <see cref="T:System.Text.RegularExpressions.MatchCollection" /> object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe90-104">Die Auflistung ist unveränderlich (schreibgeschützt) und verfügt über keinen öffentlichen Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="bfe90-104">The collection is immutable (read-only) and has no public constructor.</span></span> <span data-ttu-id="bfe90-105">Die <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType>-Methode gibt ein <xref:System.Text.RegularExpressions.MatchCollection>-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="bfe90-105">The <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method returns a <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span>  
  
 <span data-ttu-id="bfe90-106">Die Auflistung enthält keine oder mehrere <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> Objekte.</span><span class="sxs-lookup"><span data-stu-id="bfe90-106">The collection contains zero or more <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> objects.</span></span> <span data-ttu-id="bfe90-107">Wenn die Entsprechung erfolgreich ist, wird die Auflistung mit einem <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType>-Objekt für jede in der Eingabe Zeichenfolge gefundene Entsprechung aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-107">If the match is successful, the collection is populated with one <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> object for each match found in the input string.</span></span> <span data-ttu-id="bfe90-108">Wenn die Entsprechung nicht erfolgreich ist, enthält die Auflistung keine <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType>-Objekte, und ihre <xref:System.Text.RegularExpressions.MatchCollection.Count%2A>-Eigenschaft ist gleich 0 (null).</span><span class="sxs-lookup"><span data-stu-id="bfe90-108">If the match is unsuccessful, the collection contains no <xref:System.Text.RegularExpressions.Match?displayProperty=nameWithType> objects, and its <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property equals zero.</span></span>  
  
 <span data-ttu-id="bfe90-109">Beim Anwenden eines Musters für reguläre Ausdrücke auf eine bestimmte Eingabe Zeichenfolge verwendet das Modul für reguläre Ausdrücke eine der beiden folgenden Verfahren, um das <xref:System.Text.RegularExpressions.MatchCollection> Objekt zu erstellen:</span><span class="sxs-lookup"><span data-stu-id="bfe90-109">When applying a regular expression pattern to a particular input string, the regular expression engine uses either of two techniques to build the <xref:System.Text.RegularExpressions.MatchCollection> object:</span></span>  
  
-   <span data-ttu-id="bfe90-110">Direkt Evaluierung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-110">Direct evaluation.</span></span>  
  
     <span data-ttu-id="bfe90-111">Das <xref:System.Text.RegularExpressions.MatchCollection> Objekt wird alle gleichzeitig aufgefüllt, wobei alle Übereinstimmungen durch einen bestimmten Aufrufder <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> Methode entstehen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-111">The <xref:System.Text.RegularExpressions.MatchCollection> object is populated all at once, with all matches resulting from a particular call to the <xref:System.Text.RegularExpressions.Regex.Matches%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="bfe90-112">Diese Technik wird verwendet, wenn auf die <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> Eigenschaft der Auflistung zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="bfe90-112">This technique is used when the collection's <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property is accessed.</span></span> <span data-ttu-id="bfe90-113">In der Regel handelt es sich um eine kostengünstigere Methode zum Auffüllen der Auflistung, und es wird eine bessere Leistungssteigerung erzielt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-113">It typically is the more expensive method of populating the collection and entails a greater performance hit.</span></span>  
  
-   <span data-ttu-id="bfe90-114">Verzögerte Auswertung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-114">Lazy evaluation.</span></span>  
  
     <span data-ttu-id="bfe90-115">Das <xref:System.Text.RegularExpressions.MatchCollection> Objekt wird nach Bedarf entsprechend aufgefüllt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-115">The <xref:System.Text.RegularExpressions.MatchCollection> object is populated as needed on a match-by-match basis.</span></span> <span data-ttu-id="bfe90-116">Dies entspricht der Engine für reguläre Ausdrücke, die die <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType>-Methode wiederholt aufruft und jede Übereinstimmung der Auflistung hinzufügt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-116">It is equivalent to the regular expression engine calling the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method repeatedly and adding each match to the collection.</span></span> <span data-ttu-id="bfe90-117">Dieses Verfahren wird verwendet, wenn der Zugriff auf die Auflistung über die <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A>-Methode erfolgt oder wenn auf Sie mithilfe der `foreach`- C#Anweisung (in) oder der `For Each`...`Next`-Anweisung (in Visual Basic) zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="bfe90-117">This technique is used when the collection is accessed through its <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method, or when it is accessed using the `foreach` statement (in C#) or the `For Each`...`Next` statement (in Visual Basic).</span></span>  
  
 <span data-ttu-id="bfe90-118">Um die Elemente der Auflistung zu durchlaufen, sollten Sie das von Ihrer Sprache bereitgestellten Auflistung Iteration-Konstrukt verwenden (z. B. `foreach` in C# geschrieben und `For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="bfe90-118">To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="bfe90-119">in Visual Basic) anstatt den Enumerator abzurufen, der von der <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A>-Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="bfe90-119">in Visual Basic) instead of retrieving the enumerator that is returned by the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe90-120">Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Text.RegularExpressions.MatchCollection>-Klasse zum Abfragen eines Satzes von <xref:System.Text.RegularExpressions.Match>-Instanzen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-120">The following example illustrates the use of the <xref:System.Text.RegularExpressions.MatchCollection> class to interrogate a set of <xref:System.Text.RegularExpressions.Match> instances.</span></span>  
  
 [!code-cpp[Regex_Words#0](~/samples/snippets/cpp/VS_Snippets_CLR/Regex_Words/CPP/words.cpp#0)]
 [!code-csharp[Regex_Words#0](~/samples/snippets/csharp/VS_Snippets_CLR/Regex_Words/CS/words.cs#0)]
 [!code-vb[Regex_Words#0](~/samples/snippets/visualbasic/VS_Snippets_CLR/Regex_Words/VB/words.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Array, arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="matchCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="bfe90-121">Das Array, in das die Auflistung kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-121">The array the collection is to be copied into.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="bfe90-122">Die Position im Array, an der mit dem Kopieren begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-122">The position in the array where copying is to begin.</span></span></param>
        <summary><span data-ttu-id="bfe90-123">Kopiert alle Elemente der Auflistung ab dem angegebenen Index in das angegebene Array.</span><span class="sxs-lookup"><span data-stu-id="bfe90-123">Copies all the elements of the collection to the given array starting at the given index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe90-124">Da die Auflistung ab dem angegebenen Index in das Array kopiert wird, muss das Zielarray mindestens so groß wie die gesamte Auflistung sein.</span><span class="sxs-lookup"><span data-stu-id="bfe90-124">Because the collection is copied into the array starting at the given index, the destination array must be at least as large as the entire collection.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="bfe90-125">Dieser Member ist nicht in der [!INCLUDE[net_portable](~/includes/net-portable-md.md)]vorhanden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-125">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="bfe90-126">Wenn Sie Anwendungen entwickeln, die auf die [!INCLUDE[net_portable](~/includes/net-portable-md.md)]abzielen, verwenden Sie stattdessen die Methode <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="bfe90-126">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="bfe90-127">Da das <xref:System.Text.RegularExpressions.MatchCollection> Objekt in der Regel mithilfe der verzögerten Auswertung aufgefüllt wird, löst der Versuch, die Auflistung vor der vollständigen Auffüllung zu kopieren, eine <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="bfe90-127">Because the <xref:System.Text.RegularExpressions.MatchCollection> object is generally populated by using lazy evaluation, trying to copy the collection before it has been fully populated may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="bfe90-128">Diese Ausnahme kann ausgelöst werden, wenn ein Timeout Wert für übereinstimmende Vorgänge wirksam ist und der Versuch, eine einzelne Übereinstimmung zu finden, dieses Timeout Intervall überschreitet.</span><span class="sxs-lookup"><span data-stu-id="bfe90-128">This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfe90-129"><paramref name="array" /> ist ein mehrdimensionales Array.</span><span class="sxs-lookup"><span data-stu-id="bfe90-129"><paramref name="array" /> is a multi-dimensional array.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="bfe90-130"><paramref name="arrayIndex" /> liegt außerhalb der Grenzen von <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="bfe90-130"><paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.</span></span>  
  
<span data-ttu-id="bfe90-131">- oder -</span><span class="sxs-lookup"><span data-stu-id="bfe90-131">-or-</span></span> 
 <span data-ttu-id="bfe90-132"><paramref name="arrayIndex" /> und <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> liegen außerhalb der Grenzen von <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="bfe90-132"><paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> is outside the bounds of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="bfe90-133">Es ist ein Timeout aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="bfe90-133">A time-out occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Text.RegularExpressions.Match[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Text.RegularExpressions.Match[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.CopyTo(System.Text.RegularExpressions.Match[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Match(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Text::RegularExpressions::Match ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Text.RegularExpressions.Match[] * int -&gt; unit&#xA;override this.CopyTo : System.Text.RegularExpressions.Match[] * int -&gt; unit" Usage="matchCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Text.RegularExpressions.Match[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="bfe90-134">Das eindimensionale <see cref="T:System.Array" />, das das Ziel der aus der Auflistung kopierten Elemente ist.</span><span class="sxs-lookup"><span data-stu-id="bfe90-134">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the collection.</span></span> <span data-ttu-id="bfe90-135">Für das <see cref="T:System.Array" /> muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-135">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="bfe90-136">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-136">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="bfe90-137">Kopiert die Elemente der Auflistung in ein <see cref="T:System.Array" />, beginnend bei einem bestimmten <see cref="T:System.Array" />-Index.</span><span class="sxs-lookup"><span data-stu-id="bfe90-137">Copies the elements of the collection to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Text.RegularExpressions.MatchCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfe90-138">Ruft die Anzahl der Übereinstimmungen ab.</span><span class="sxs-lookup"><span data-stu-id="bfe90-138">Gets the number of matches.</span></span></summary>
        <value><span data-ttu-id="bfe90-139">Die Anzahl der Übereinstimmungen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-139">The number of matches.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe90-140">Der Zugriff auf einzelne Member des <xref:System.Text.RegularExpressions.MatchCollection> Objekts durch Abrufen des Werts der <xref:System.Text.RegularExpressions.MatchCollection.Count%2A>-Eigenschaft der Auflistung bewirkt, dass die Engine für reguläre Ausdrücke die Sammlung mithilfe der direkten Auswertung füllt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-140">Accessing individual members of the <xref:System.Text.RegularExpressions.MatchCollection> object by retrieving the value of the collection's <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property causes the regular expression engine to populate the collection using direct evaluation.</span></span> <span data-ttu-id="bfe90-141">im Gegensatz dazu bewirkt das Aufrufen der <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A>-Methode (oder der Verwendung C# der `foreach`-Anweisung in und der `For Each`...`Next`-Anweisung in Visual Basic), dass die Engine für reguläre Ausdrücke die Auflistung bei Bedarf mithilfe der verzögerten Auswertung füllt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-141">ln contrast, calling the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method (or using the `foreach` statement in C# and the `For Each`...`Next` statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation.</span></span> <span data-ttu-id="bfe90-142">Die direkte Auswertung kann eine viel aufwendigere Methode zum Aufbauen der Sammlung sein als die verzögerte Auswertung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-142">Direct evaluation can be a much more expensive method of building the collection than lazy evaluation.</span></span>  
  
 <span data-ttu-id="bfe90-143">Da das <xref:System.Text.RegularExpressions.MatchCollection> Objekt in der Regel mithilfe der verzögerten Auswertung aufgefüllt wird, löst der Versuch, die Anzahl der Elemente in der Auflistung zu ermitteln, bevor es vollständig aufgefüllt wurde, möglicherweise eine <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="bfe90-143">Because the <xref:System.Text.RegularExpressions.MatchCollection> object is generally populated by using lazy evaluation, trying to determine the number of elements in the collection before it has been fully populated may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="bfe90-144">Diese Ausnahme kann ausgelöst werden, wenn ein Timeout Wert für übereinstimmende Vorgänge wirksam ist und der Versuch, eine einzelne Übereinstimmung zu finden, dieses Timeout Intervall überschreitet.</span><span class="sxs-lookup"><span data-stu-id="bfe90-144">This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a single match exceeds that time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe90-145">Im folgenden Beispiel wird die <xref:System.Text.RegularExpressions.MatchCollection.Count%2A>-Eigenschaft verwendet, um zu bestimmen, ob der aufrufende der <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> Methode Übereinstimmungen gefunden hat.</span><span class="sxs-lookup"><span data-stu-id="bfe90-145">The following example uses the <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property to determine whether the call to the <xref:System.Text.RegularExpressions.Regex.Matches%28System.String%2CSystem.String%29?displayProperty=nameWithType> method found any matches.</span></span> <span data-ttu-id="bfe90-146">Wenn nicht, bedeutet dies, dass keine Übereinstimmungen gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-146">If not, it indicates that no matches were found.</span></span> <span data-ttu-id="bfe90-147">Andernfalls listet Sie die Übereinstimmungen auf und zeigt deren Wert und die Position in der Eingabe Zeichenfolge an, an der Sie gefunden wurden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-147">Otherwise, it enumerates the matches and displays their value and the position in the input string at which they were found.</span></span>  
 
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.matchcollection.count/cs/countex1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.matchcollection.count/vb/countex1.vb" id="Snippet1":::
  
 <span data-ttu-id="bfe90-148">Das Muster für reguläre Ausdrücke `\d+` mit einem oder mehreren Dezimalzeichen in einer Eingabe Zeichenfolge übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-148">The regular expression pattern `\d+` matches one or more decimal characters in an input string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="bfe90-149">Es ist ein Timeout aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="bfe90-149">A time-out occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="matchCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfe90-150">Stellt einen Enumerator bereit, der die Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="bfe90-150">Provides an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="bfe90-151">Ein Objekt, das alle <see cref="T:System.Text.RegularExpressions.Match" />-Objekte innerhalb von <see cref="T:System.Text.RegularExpressions.MatchCollection" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="bfe90-151">An object that contains all <see cref="T:System.Text.RegularExpressions.Match" /> objects within the <see cref="T:System.Text.RegularExpressions.MatchCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe90-152">Anstatt die <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A>-Methode aufzurufenden, um einen Enumerator abzurufen, mit dem Sie die <xref:System.Text.RegularExpressions.Match> Objekte in der Auflistung durchlaufen können, sollten Sie das gruppeniterations Konstrukt verwenden C# (z. b. `foreach` in und `For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="bfe90-152">Instead of  calling the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Match> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="bfe90-153">in Visual Basic), die von ihrer Programmiersprache bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-153">in Visual Basic) provided by your programming language.</span></span>  
  
 <span data-ttu-id="bfe90-154">Das Durchlaufen der Member des <xref:System.Text.RegularExpressions.MatchCollection> Objekts mithilfe der <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A>-Methode (oder der `foreach`- C# Anweisung in und der `For Each`...`Next`-Anweisung in Visual Basic) bewirkt, dass die Engine für reguläre Ausdrücke die Auflistung nach Bedarf mithilfe der verzögerten Auswertung füllt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-154">Iterating the members of the <xref:System.Text.RegularExpressions.MatchCollection> object using the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method (or the `foreach` statement in C# and the `For Each`...`Next` statement in Visual Basic) causes the regular expression engine to populate the collection on an as needed basis using lazy evaluation.</span></span> <span data-ttu-id="bfe90-155">Dies entspricht dem wiederholten Aufrufen der <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType>-Methode und dem anschließenden Hinzufügen der resultierenden Übereinstimmung zum <xref:System.Text.RegularExpressions.MatchCollection>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-155">This is analogous to repeatedly calling the <xref:System.Text.RegularExpressions.Regex.Match%2A?displayProperty=nameWithType> method, and then adding the resulting match to the <xref:System.Text.RegularExpressions.MatchCollection> object.</span></span> <span data-ttu-id="bfe90-156">Im Gegensatz dazu verwendet die Engine für reguläre Ausdrücke die direkte Auswertung, um die Auflistung gleichzeitig auszufüllen, wenn auf die <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> Eigenschaft zugegriffen wird.</span><span class="sxs-lookup"><span data-stu-id="bfe90-156">In contrast, the regular expression engine uses direct evaluation to populate the collection all at once when the <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property is accessed.</span></span> <span data-ttu-id="bfe90-157">Dies kann eine viel kostspiellichere Methode zum Entwickeln der Sammlung sein als die verzögerte Auswertung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-157">This can be a much more expensive method of building the collection than lazy evaluation.</span></span>  
  
 <span data-ttu-id="bfe90-158">Da das <xref:System.Text.RegularExpressions.MatchCollection> Objekt in der Regel mithilfe der verzögerten Auswertung aufgefüllt wird, löst der Versuch, zum nächsten Member der Auflistung zu navigieren, möglicherweise eine <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="bfe90-158">Because the <xref:System.Text.RegularExpressions.MatchCollection> object is generally populated by using lazy evaluation, trying to navigate to the next member of the collection may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="bfe90-159">Diese Ausnahme kann ausgelöst werden, wenn ein Timeout Wert für übereinstimmende Vorgänge wirksam ist und der Versuch, die nächste Übereinstimmung zu finden, dieses Timeout Intervall überschreitet.</span><span class="sxs-lookup"><span data-stu-id="bfe90-159">This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find the next match exceeds that time-out interval.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="bfe90-160">Es ist ein Timeout aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="bfe90-160">A time-out occurred.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Text.RegularExpressions.MatchCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfe90-161">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="bfe90-161">Gets a value that indicates whether the collection is read only.</span></span></summary>
        <value><span data-ttu-id="bfe90-162"><see langword="true" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-162"><see langword="true" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-163">Eine Auflistung, die schreibgeschützt ist, lässt das Hinzufügen oder Entfernen von Elementen nach dem Erstellen der Auflistung nicht zu.</span><span class="sxs-lookup"><span data-stu-id="bfe90-163">A collection that is read-only does not allow the addition or removal of elements after the collection is created.</span></span> <span data-ttu-id="bfe90-164">Beachten Sie, dass der Schreibschutz in diesem Kontext nicht angibt, ob einzelne Elemente der Auflistung geändert werden können, da die <xref:System.Collections.Generic.ICollection%601>-Schnittstelle nur Addition-und Entfernungs Vorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-164">Note that read-only in this context does not indicate whether individual elements of the collection can be modified, since the <xref:System.Collections.Generic.ICollection%601> interface only supports addition and removal operations.</span></span> <span data-ttu-id="bfe90-165">Beispielsweise gibt die <xref:System.Collections.Generic.ICollection%601.IsReadOnly%2A>-Eigenschaft eines Arrays, das in ein <xref:System.Collections.Generic.ICollection%601> Objekt umgewandelt oder konvertiert wird, `true`zurück, auch wenn einzelne Array Elemente geändert werden können.</span><span class="sxs-lookup"><span data-stu-id="bfe90-165">For example, the <xref:System.Collections.Generic.ICollection%601.IsReadOnly%2A> property of an array that is cast or converted to an <xref:System.Collections.Generic.ICollection%601> object returns `true`, even though individual array elements can be modified.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Text.RegularExpressions.MatchCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfe90-166">Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="bfe90-166">Gets a value indicating whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="bfe90-167"><see langword="false" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-167"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="bfe90-168">Dieser Member ist nicht in der [!INCLUDE[net_portable](~/includes/net-portable-md.md)]vorhanden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-168">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="bfe90-169">Wenn Sie Anwendungen entwickeln, die auf die [!INCLUDE[net_portable](~/includes/net-portable-md.md)]abzielen, verwenden Sie stattdessen die <xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="bfe90-169">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.MatchCollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Text.RegularExpressions.Match this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Match Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(i As Integer) As Match" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::RegularExpressions::Match ^ default[int] { System::Text::RegularExpressions::Match ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Text.RegularExpressions.Match" Usage="System.Text.RegularExpressions.MatchCollection.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="bfe90-170">Index in der <see cref="T:System.Text.RegularExpressions.Match" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-170">Index into the <see cref="T:System.Text.RegularExpressions.Match" /> collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-171">Ruft einen einzelnen Member der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="bfe90-171">Gets an individual member of the collection.</span></span></summary>
        <value><span data-ttu-id="bfe90-172">Die aufgezeichnete Teilzeichenfolge an Position <paramref name="i" /> der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-172">The captured substring at position <paramref name="i" /> in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bfe90-173">In C#handelt es sich bei der <xref:System.Text.RegularExpressions.MatchCollection.Item%2A> Eigenschaft um einen Indexer. Es wird nicht explizit im Code auf Sie verwiesen, sondern ermöglicht den Zugriff auf die <xref:System.Text.RegularExpressions.MatchCollection> Auflistung, als ob es sich um ein Array handelt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-173">In C#, the <xref:System.Text.RegularExpressions.MatchCollection.Item%2A> property is an indexer; it is not explicitly referenced in code, but instead allows the <xref:System.Text.RegularExpressions.MatchCollection> collection to be accessed as if it were an array.</span></span>  
  
 <span data-ttu-id="bfe90-174">In der Regel erfolgt der Zugriff auf einzelne Elemente im <xref:System.Text.RegularExpressions.MatchCollection> Objekt nur über ihren Index, wenn die Gesamtanzahl der Elemente in der Auflistung von der <xref:System.Text.RegularExpressions.MatchCollection.Count%2A>-Eigenschaft bestimmt wurde.</span><span class="sxs-lookup"><span data-stu-id="bfe90-174">Typically, individual items in the <xref:System.Text.RegularExpressions.MatchCollection> object are accessed by their index only after the total number of items in the collection has been determined from the <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property.</span></span> <span data-ttu-id="bfe90-175">Der Zugriff auf die <xref:System.Text.RegularExpressions.MatchCollection.Count%2A>-Eigenschaft bewirkt jedoch, dass die Engine für reguläre Ausdrücke die direkte Auswertung verwendet, um die Auflistung gleichzeitig zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-175">However, accessing the <xref:System.Text.RegularExpressions.MatchCollection.Count%2A> property causes the regular expression engine to use direct evaluation to build the collection all at once.</span></span> <span data-ttu-id="bfe90-176">Dies ist in der Regel teurer als das Iterieren der Auflistung mithilfe der <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A>- C# Methode, der `foreach`-Anweisung oder der Visual Basic `For Each`...`Next`-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-176">This is typically more expensive than iterating the collection using the <xref:System.Text.RegularExpressions.MatchCollection.GetEnumerator%2A> method, the C# `foreach` statement, or the Visual Basic `For Each`...`Next` statement.</span></span>  
  
 <span data-ttu-id="bfe90-177">Da das <xref:System.Text.RegularExpressions.MatchCollection> Objekt im Allgemeinen mithilfe der verzögerten Auswertung aufgefüllt wird, löst der Versuch, zu einer bestimmten Übereinstimmung zu navigieren, möglicherweise eine <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="bfe90-177">Because the <xref:System.Text.RegularExpressions.MatchCollection> object is generally populated by using lazy evaluation, trying to navigate to a specific match may throw a <xref:System.Text.RegularExpressions.RegexMatchTimeoutException> exception.</span></span> <span data-ttu-id="bfe90-178">Diese Ausnahme kann ausgelöst werden, wenn ein Timeout Wert für übereinstimmende Vorgänge wirksam ist und der Versuch, eine bestimmte Übereinstimmung zu finden, dieses Timeout Intervall überschreitet.</span><span class="sxs-lookup"><span data-stu-id="bfe90-178">This exception can be thrown if a time-out value for matching operations is in effect, and the attempt to find a specific match exceeds that time-out interval.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bfe90-179">Im folgenden Beispiel wird der erste Satz von Nathaniel Hawthorne *House der sieben Gables* analysiert und ein <xref:System.Text.RegularExpressions.MatchCollection> Objekt zurückgegeben, das alle Wörter enthält, die entweder mit einem groß-oder Kleinbuchstaben "h" beginnen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-179">The following example parses the first sentence of Nathaniel Hawthorne's *House of the Seven Gables* and returns a <xref:System.Text.RegularExpressions.MatchCollection> object that contains all words that begin with either an uppercase or lowercase "h".</span></span> <span data-ttu-id="bfe90-180">Die <xref:System.Text.RegularExpressions.MatchCollection.Item%2A>-Eigenschaft wird dann verwendet, um jedes Wort abzurufen und in der Konsole anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-180">The <xref:System.Text.RegularExpressions.MatchCollection.Item%2A> property is then used to retrieve each word and display it to the console.</span></span>  

 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.MatchCollection.Item/cs/RegEx_24804.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.MatchCollection.Item/vb/RegEx_24804.vb" id="Snippet1":::
  
 <span data-ttu-id="bfe90-181">Das Beispiel führt zur folgenden Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="bfe90-181">The example produces the following output:</span></span>  
  
```  
Half  
house  
huge  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="bfe90-182"><paramref name="i" /> ist kleiner als 0 (null) oder größer oder gleich <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</span><span class="sxs-lookup"><span data-stu-id="bfe90-182"><paramref name="i" /> is less than 0 or greater than or equal to <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" />.</span></span></exception>
        <exception cref="T:System.Text.RegularExpressions.RegexMatchTimeoutException"><span data-ttu-id="bfe90-183">Es ist ein Timeout aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="bfe90-183">A time-out occurred.</span></span></exception>
        <altmember cref="P:System.Text.RegularExpressions.MatchCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Text.RegularExpressions.MatchCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfe90-184">Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfe90-184">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="bfe90-185">Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfe90-185">An object that can be used to synchronize access to the collection.</span></span> <span data-ttu-id="bfe90-186">Diese Eigenschaft gibt immer das Objekt selbst zurück.</span><span class="sxs-lookup"><span data-stu-id="bfe90-186">This property always returns the object itself.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="bfe90-187">Dieser Member ist nicht in der [!INCLUDE[net_portable](~/includes/net-portable-md.md)]vorhanden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-187">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="bfe90-188">Wenn Sie Anwendungen entwickeln, die auf die [!INCLUDE[net_portable](~/includes/net-portable-md.md)]abzielen, verwenden Sie stattdessen die <xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="bfe90-188">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.MatchCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.MatchCollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;Match&gt;.Add (System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add(class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Match&gt;#Add(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As Match) Implements ICollection(Of Match).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add(System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add : System.Text.RegularExpressions.Match -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add : System.Text.RegularExpressions.Match -&gt; unit" Usage="matchCollection.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Add item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="bfe90-189">Das Objekt, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-189">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-190">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-190">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-191">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-191">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;Match&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Match&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of Match).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear() = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear : unit -&gt; unit&#xA;override this.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear : unit -&gt; unit" Usage="matchCollection.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfe90-192">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-192">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-193"><xref:System.Collections.Generic.ICollection%601.Count%2A> muss auf 0 festgelegt werden, und Verweise auf andere Objekte von Elementen der Auflistung müssen freigegeben werden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-193"><xref:System.Collections.Generic.ICollection%601.Count%2A> must be set to 0, and references to other objects from elements of the collection must be released.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-194">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-194">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Match&gt;.Contains (System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains(class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Match&gt;#Contains(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Match) As Boolean Implements ICollection(Of Match).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains(System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains : System.Text.RegularExpressions.Match -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains : System.Text.RegularExpressions.Match -&gt; bool" Usage="matchCollection.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Contains item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="bfe90-195">Das Objekt, das in der Auflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-195">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-196">Ermittelt, ob die Auflistung einen bestimmten Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="bfe90-196">Determines whether the collection contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="bfe90-197"><see langword="true" />, wenn sich der Wert <paramref name="item" /> in der Auflistung befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfe90-197"><see langword="true" /> if <paramref name="item" /> is found in the collection; otherwise, <see langword="false" />.</span></span></returns>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Match&gt;.Remove (System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove(class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Match&gt;#Remove(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As Match) As Boolean Implements ICollection(Of Match).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove(System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Match ^&gt;::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove : System.Text.RegularExpressions.Match -&gt; bool&#xA;override this.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove : System.Text.RegularExpressions.Match -&gt; bool" Usage="matchCollection.System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Match&gt;.Remove item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="bfe90-198">Das aus der Auflistung zu entfernende Objekt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-198">The object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-199">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-199">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="bfe90-200"><see langword="true" />, wenn <paramref name="item" /> erfolgreich aus der Auflistung entfernt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfe90-200"><see langword="true" /> if <paramref name="item" /> was successfully removed from the collection; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="bfe90-201">Diese Methode gibt auch dann <see langword="false" /> zurück, wenn <paramref name="item" /> nicht in der ursprünglichen Auflistung gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="bfe90-201">This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original collection.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-202">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-202">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Match&gt; IEnumerable&lt;Match&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Text.RegularExpressions.Match&gt; System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IEnumerable&lt;System#Text#RegularExpressions#Match&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Match) Implements IEnumerable(Of Match).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Text::RegularExpressions::Match ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Match ^&gt;::GetEnumerator;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Match&gt;&#xA;override this.System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Match&gt;" Usage="matchCollection.System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Match&gt;.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Match&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfe90-203">Gibt einen Enumerator zurück, der die Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="bfe90-203">Returns an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="bfe90-204">Ein Enumerator, der zum Durchlaufen der Auflistung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfe90-204">An enumerator that can be used to iterate through the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-205">Der zurückgegebene <xref:System.Collections.Generic.IEnumerator%601> bietet die Möglichkeit, die Auflistung durch das verfügbar machen einer <xref:System.Collections.Generic.IEnumerator%601.Current%2A> Eigenschaft zu durchlaufen. Sie können Enumeratoren verwenden, um die Daten in einer Auflistung zu lesen, jedoch nicht, um die Auflistung zu ändern.</span><span class="sxs-lookup"><span data-stu-id="bfe90-205">The returned <xref:System.Collections.Generic.IEnumerator%601> provides the ability to iterate through the collection by exposing a <xref:System.Collections.Generic.IEnumerator%601.Current%2A> property .You can use enumerators to read the data in a collection, but not to modify the collection.</span></span>   
 <span data-ttu-id="bfe90-206">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="bfe90-206">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="bfe90-207">An dieser Position ist <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="bfe90-207">At this position, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="bfe90-208">Daher müssen Sie die <xref:System.Collections.IEnumerator.MoveNext%2A>-Methode aufzurufen, um den Enumerator auf das erste Element der Auflistung zu setzen, bevor Sie den Wert von <xref:System.Collections.Generic.IEnumerator%601.Current%2A>lesen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-208">Therefore, you must call the <xref:System.Collections.IEnumerator.MoveNext%2A> method to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Generic.IEnumerator%601.Current%2A>.</span></span>   
 <span data-ttu-id="bfe90-209"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> gibt dasselbe Objekt zurück, bis <xref:System.Collections.IEnumerator.MoveNext%2A> erneut aufgerufen wird, wenn <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.Generic.IEnumerator%601.Current%2A> auf das nächste Element festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="bfe90-209"><xref:System.Collections.Generic.IEnumerator%601.Current%2A> returns the same object until <xref:System.Collections.IEnumerator.MoveNext%2A> is called again as <xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the next element.</span></span>   
 <span data-ttu-id="bfe90-210">Wenn <xref:System.Collections.IEnumerator.MoveNext%2A> das Ende der Auflistung übergibt, wird der Enumerator hinter dem letzten Element in der Auflistung platziert, und <xref:System.Collections.IEnumerator.MoveNext%2A> gibt `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="bfe90-210">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="bfe90-211">Wenn sich der Enumerator an dieser Position befindet, geben nachfolgende Aufrufe von <xref:System.Collections.IEnumerator.MoveNext%2A> auch `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="bfe90-211">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="bfe90-212">Wenn der letzte Aufruf <xref:System.Collections.IEnumerator.MoveNext%2A> zurückgegebene `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> ist nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="bfe90-212">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.Generic.IEnumerator%601.Current%2A> is undefined.</span></span> <span data-ttu-id="bfe90-213">Sie können <xref:System.Collections.Generic.IEnumerator%601.Current%2A> nicht erneut auf das erste Element der Auflistung festlegen, sondern müssen eine neue Enumeratorinstanz erstellen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-213">You cannot set <xref:System.Collections.Generic.IEnumerator%601.Current%2A> to the first element of the collection again; you must create a new enumerator instance instead.</span></span>   <span data-ttu-id="bfe90-214">Wenn Änderungen an der Auflistung vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, ist das Verhalten des Enumerators nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="bfe90-214">If changes are made to the collection, such as adding, modifying, or deleting elements, the behavior of the enumerator is undefined.</span></span>   
 <span data-ttu-id="bfe90-215">Ein Enumerator hat keinen exklusiven Zugriff auf die Auflistung, sodass ein Enumerator gültig bleibt, solange die Auflistung unverändert bleibt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-215">An enumerator does not have exclusive access to the collection so an enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="bfe90-216">Wenn an der Auflistung Änderungen vorgenommen werden, z. b. das Hinzufügen, ändern oder Löschen von Elementen, wird der Enumerator für ungültig erklärt, und Sie erhalten möglicherweise unerwartete Ergebnisse.</span><span class="sxs-lookup"><span data-stu-id="bfe90-216">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is invalidated and you may get unexpected results.</span></span> <span data-ttu-id="bfe90-217">Außerdem ist das Auflisten einer Auflistung keine Thread sichere Prozedur.</span><span class="sxs-lookup"><span data-stu-id="bfe90-217">Also, enumerating a collection is not a thread-safe procedure.</span></span> <span data-ttu-id="bfe90-218">Um die Thread Sicherheit zu gewährleisten, sollten Sie die Auflistung während des Enumerators sperren oder die Synchronisierung für die Auflistung implementieren.</span><span class="sxs-lookup"><span data-stu-id="bfe90-218">To guarantee thread-safety, you should lock the collection during enumerator or implement synchronization on the collection.</span></span>   
 <span data-ttu-id="bfe90-219">Standard Implementierungen von Auflistungen im <xref:System.Collections.Generic?displayProperty=nameWithType>-Namespace werden nicht synchronisiert.</span><span class="sxs-lookup"><span data-stu-id="bfe90-219">Default implementations of collections in the <xref:System.Collections.Generic?displayProperty=nameWithType> namespace aren't synchronized.</span></span>   
 
          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-220">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-220">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf">
      <MemberSignature Language="C#" Value="int IList&lt;Match&gt;.IndexOf (System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf(class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Match&gt;#IndexOf(System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Match) As Integer Implements IList(Of Match).IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf(System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match ^&gt;::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf : System.Text.RegularExpressions.Match -&gt; int&#xA;override this.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf : System.Text.RegularExpressions.Match -&gt; int" Usage="matchCollection.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.IndexOf item" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="bfe90-221">Das Objekt, das in der Auflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-221">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-222">Bestimmt den Index eines bestimmten Elements in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-222">Determines the index of a specific item in the collection.</span></span></summary>
        <returns><span data-ttu-id="bfe90-223">Der Index von <paramref name="item" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="bfe90-223">The index of <paramref name="item" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-224">Wenn ein Objekt in der Liste mehrfach vorhanden ist, gibt die <xref:System.Collections.Generic.IList%601.IndexOf%2A>-Methode immer die erste gefundene Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="bfe90-224">If an object occurs multiple times in the list, the <xref:System.Collections.Generic.IList%601.IndexOf%2A> method always returns the first instance found.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;Match&gt;.Insert (int index, System.Text.RegularExpressions.Match item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert(int32 index, class System.Text.RegularExpressions.Match item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Match&gt;#Insert(System.Int32,System.Text.RegularExpressions.Match)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Match) Implements IList(Of Match).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert(int index, System::Text::RegularExpressions::Match ^ item) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match ^&gt;::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert : int * System.Text.RegularExpressions.Match -&gt; unit&#xA;override this.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert : int * System.Text.RegularExpressions.Match -&gt; unit" Usage="matchCollection.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="item" Type="System.Text.RegularExpressions.Match" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfe90-225">Der nullbasierte Index, an dem <paramref name="item" /> eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-225">The zero-based index at which <paramref name="item" /> should be inserted.</span></span></param>
        <param name="item"><span data-ttu-id="bfe90-226">Das Objekt, das in die Auflistung eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-226">The object to insert into the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-227">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-227">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-228">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-228">The collection is read-only.</span></span></exception>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item">
      <MemberSignature Language="C#" Value="System.Text.RegularExpressions.Match System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Match System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Match&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Match Implements IList(Of Match).Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Text::RegularExpressions::Match ^ System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match&gt;::Item[int] { System::Text::RegularExpressions::Match ^ get(int index); void set(int index, System::Text::RegularExpressions::Match ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item(int) : System.Text.RegularExpressions.Match with get, set" Usage="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Match</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfe90-229">Der nullbasierte Index des abzurufenden Elements.</span><span class="sxs-lookup"><span data-stu-id="bfe90-229">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="bfe90-230">Ruft das Element am angegebenen Index ab.</span><span class="sxs-lookup"><span data-stu-id="bfe90-230">Gets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="bfe90-231">Das Element am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="bfe90-231">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-232">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe folgender Syntax: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="bfe90-232">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>   
 <span data-ttu-id="bfe90-233">Die C# Sprache verwendet das [this](~/docs/csharp/language-reference/keywords/this.md) -Schlüsselwort zum Definieren der Indexer, anstatt die <xref:System.Collections.Generic.IList%601.Item%2A>-Eigenschaft zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="bfe90-233">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.Generic.IList%601.Item%2A> property.</span></span> <span data-ttu-id="bfe90-234">Visual Basic implementiert <xref:System.Collections.Generic.IList%601.Item%2A> als [Standard Eigenschaft](~/docs/visual-basic/language-reference/modifiers/default.md), die die gleiche Indizierungs Funktionalität bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-234">Visual Basic implements <xref:System.Collections.Generic.IList%601.Item%2A> as a [default property](~/docs/visual-basic/language-reference/modifiers/default.md), which provides the same indexing functionality.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;Match&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Match&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of Match).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Match ^&gt;::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt : int -&gt; unit" Usage="matchCollection.System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Match&gt;.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfe90-235">Der nullbasierte Index des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="bfe90-235">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="bfe90-236">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-236">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-237">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-237">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (array As Array, arrayIndex As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.ICollection.CopyTo : Array * int -&gt; unit&#xA;override this.System.Collections.ICollection.CopyTo : Array * int -&gt; unit" Usage="matchCollection.System.Collections.ICollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="bfe90-238">Das eindimensionale Array, in das die Auflistung kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-238">The one-dimensional array the collection is to be copied into.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="bfe90-239">Der nullbasierte Index im Array, an dem der Kopiervorgang beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-239">The zero-based index in the array where copying is to begin.</span></span></param>
        <summary><span data-ttu-id="bfe90-240">Kopiert alle Elemente der Sammlung ab dem angegebenen Index in das angegebene Array.</span><span class="sxs-lookup"><span data-stu-id="bfe90-240">Copies all the elements of the collection to the specified array starting at the specified index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="bfe90-241"><paramref name="array" /> ist ein mehrdimensionales Array.</span><span class="sxs-lookup"><span data-stu-id="bfe90-241"><paramref name="array" /> is a multi-dimensional array.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="bfe90-242"><paramref name="arrayIndex" /> liegt außerhalb der Arraybegrenzung, oder <paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> liegt außerhalb der <paramref name="array" />-Begrenzung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-242"><paramref name="arrayIndex" /> is outside the bounds of array.-or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.MatchCollection.Count" /> is outside the bounds of <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.IsSynchronized : bool" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfe90-243">Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="bfe90-243">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="bfe90-244">False in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="bfe90-244">false in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-245">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe90-246">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.MatchCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="bfe90-246">It can be used only when the <xref:System.Text.RegularExpressions.MatchCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.ICollection.SyncRoot : obj" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfe90-247">Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfe90-247">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="bfe90-248">Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="bfe90-248">An object that can be used to synchronize access to the collection.</span></span> <span data-ttu-id="bfe90-249">Diese Eigenschaft gibt immer das Objekt selbst zurück.</span><span class="sxs-lookup"><span data-stu-id="bfe90-249">This property always returns the object itself.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-250">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-250">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe90-251">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.MatchCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="bfe90-251">It can be used only when the <xref:System.Text.RegularExpressions.MatchCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>
 
           ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Add : obj -&gt; int&#xA;override this.System.Collections.IList.Add : obj -&gt; int" Usage="matchCollection.System.Collections.IList.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bfe90-252">Das Objekt, das der Auflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-252">The object to add to the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-253">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-253">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="bfe90-254">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-254">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-255">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-255">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Clear : unit -&gt; unit&#xA;override this.System.Collections.IList.Clear : unit -&gt; unit" Usage="matchCollection.System.Collections.IList.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="bfe90-256">Entfernt alle Elemente aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-256">Removes all items from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-257">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-257">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe90-258">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.MatchCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="bfe90-258">It can be used only when the <xref:System.Text.RegularExpressions.MatchCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>
 
 
 
 <span data-ttu-id="bfe90-259">Implementierungen dieser Methode können unterschiedlich sein, wie die <xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> und die Kapazität einer Auflistung behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-259">Implementations of this method can vary in how they handle the <xref:System.Collections.ICollection.Count%2A?displayProperty=nameWithType> and the capacity of a collection.</span></span> <span data-ttu-id="bfe90-260">In der Regel wird die Anzahl auf 0 (null) festgelegt, und Verweise auf andere Objekte von Elementen der Auflistung werden ebenfalls freigegeben.</span><span class="sxs-lookup"><span data-stu-id="bfe90-260">Typically, the count is set to zero, and references to other objects from elements of the collection are also released.</span></span> <span data-ttu-id="bfe90-261">Die Kapazität kann auf 0 (null) oder einen Standardwert festgelegt werden, oder Sie kann unverändert bleiben.</span><span class="sxs-lookup"><span data-stu-id="bfe90-261">The capacity can be set to zero or a default value, or it can remain unchanged.</span></span>   
 
          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-262">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-262">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Contains : obj -&gt; bool&#xA;override this.System.Collections.IList.Contains : obj -&gt; bool" Usage="matchCollection.System.Collections.IList.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bfe90-263">Das Objekt, das in der Auflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-263">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-264">Ermittelt, ob die Auflistung einen bestimmten Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="bfe90-264">Determines whether the collection contains a specific value.</span></span></summary>
        <returns><span data-ttu-id="bfe90-265"><see langword="true" />, wenn die <see cref="T:System.Object" />-Klasse in der Auflistung enthalten ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="bfe90-265"><see langword="true" /> if the <see cref="T:System.Object" /> is found in the collection; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-266">Beginnend mit dem .NET Framework 2,0 verwendet diese Methode die <xref:System.Object.Equals%2A>-und <xref:System.IComparable.CompareTo%2A> Methoden der Auflistung der-Objekte auf `item`, um zu bestimmen, ob ein Element vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="bfe90-266">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="bfe90-267">In früheren Versionen der .NET Framework wurde diese Bestimmung mithilfe der Methoden <xref:System.Object.Equals%2A> und <xref:System.IComparable.CompareTo%2A> des `item`-Parameters für die Objekte in der Auflistung fest gemacht.</span><span class="sxs-lookup"><span data-stu-id="bfe90-267">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>   
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.IndexOf : obj -&gt; int&#xA;override this.System.Collections.IList.IndexOf : obj -&gt; int" Usage="matchCollection.System.Collections.IList.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bfe90-268">Das Objekt, das in der Auflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-268">The object to locate in the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-269">Bestimmt den Index eines bestimmten Elements in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-269">Determines the index of a specific item in the collection.</span></span></summary>
        <returns><span data-ttu-id="bfe90-270">Der Index von <paramref name="value" />, wenn das Element in der Liste gefunden wird, andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="bfe90-270">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-271">Beginnend mit dem .NET Framework 2,0 verwendet diese Methode die <xref:System.Object.Equals%2A>-und <xref:System.IComparable.CompareTo%2A> Methoden der Auflistung der-Objekte auf `item`, um zu bestimmen, ob ein Element vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="bfe90-271">Starting with the .NET Framework 2.0, this method uses the collection's objects' <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="bfe90-272">In früheren Versionen der .NET Framework wurde diese Bestimmung mithilfe der Methoden <xref:System.Object.Equals%2A> und <xref:System.IComparable.CompareTo%2A> des `item`-Parameters für die Objekte in der Auflistung fest gemacht.</span><span class="sxs-lookup"><span data-stu-id="bfe90-272">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>   
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Insert : int * obj -&gt; unit&#xA;override this.System.Collections.IList.Insert : int * obj -&gt; unit" Usage="matchCollection.System.Collections.IList.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfe90-273">Der nullbasierte Index, an dem <paramref name="value" /> eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-273">The zero-based index at which <paramref name="value" /> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="bfe90-274">Das Objekt, das in die Auflistung eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bfe90-274">The object to insert into the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-275">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-275">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-276">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-276">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.IsFixedSize : bool" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="bfe90-277">Ruft einen Wert ab, der angibt, ob die Auflistung eine feste Größe aufweist.</span><span class="sxs-lookup"><span data-stu-id="bfe90-277">Gets a value indicating whether the collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="bfe90-278"><see langword="true" /></span><span class="sxs-lookup"><span data-stu-id="bfe90-278"><see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-279">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="bfe90-279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="bfe90-280">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.MatchCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="bfe90-280">It can be used only when the <xref:System.Text.RegularExpressions.MatchCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span>
 
 
 
 <span data-ttu-id="bfe90-281">Eine Auflistung mit fester Größe lässt das Hinzufügen oder Entfernen von Elementen nach dem Erstellen der Auflistung nicht zu. Vorhandene Elemente können jedoch geändert werden.</span><span class="sxs-lookup"><span data-stu-id="bfe90-281">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>   
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Collections.IList.Item(int) : obj with get, set" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfe90-282">Der nullbasierte Index des abzurufenden Elements.</span><span class="sxs-lookup"><span data-stu-id="bfe90-282">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="bfe90-283">Ruft das Element am angegebenen Index ab.</span><span class="sxs-lookup"><span data-stu-id="bfe90-283">Gets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="bfe90-284">Das Element am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="bfe90-284">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="bfe90-285">Diese Eigenschaft ermöglicht den Zugriff auf ein bestimmtes Element in der Auflistung mithilfe folgender Syntax: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="bfe90-285">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>   
 <span data-ttu-id="bfe90-286">Die C# Sprache verwendet das [this](~/docs/csharp/language-reference/keywords/this.md) -Schlüsselwort zum Definieren der Indexer, anstatt die <xref:System.Collections.IList.Item%2A>-Eigenschaft zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="bfe90-286">The C# language uses the [this](~/docs/csharp/language-reference/keywords/this.md) keyword to define the indexers instead of implementing the <xref:System.Collections.IList.Item%2A> property.</span></span> <span data-ttu-id="bfe90-287">Visual Basic implementiert <xref:System.Collections.IList.Item%2A> als Standardeigenschaft und stellt auf diese Weise dieselbe Indizierungsfunktionalität bereit.</span><span class="sxs-lookup"><span data-stu-id="bfe90-287">Visual Basic implements <xref:System.Collections.IList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>   
 
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.Remove : obj -&gt; unit&#xA;override this.System.Collections.IList.Remove : obj -&gt; unit" Usage="matchCollection.System.Collections.IList.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="bfe90-288">Das aus der Auflistung zu entfernende Objekt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-288">The object to remove from the collection.</span></span></param>
        <summary><span data-ttu-id="bfe90-289">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-289">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-290">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-290">The collection is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.MatchCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberSignature Language="F#" Value="abstract member System.Collections.IList.RemoveAt : int -&gt; unit&#xA;override this.System.Collections.IList.RemoveAt : int -&gt; unit" Usage="matchCollection.System.Collections.IList.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="bfe90-291">Der nullbasierte Index des zu entfernenden Elements.</span><span class="sxs-lookup"><span data-stu-id="bfe90-291">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="bfe90-292">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="bfe90-292">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="bfe90-293">Die Auflistung ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="bfe90-293">The collection is read-only.</span></span></exception>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
