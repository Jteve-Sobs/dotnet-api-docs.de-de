<Type Name="GroupCollection" FullName="System.Text.RegularExpressions.GroupCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="305a8b9d8e98b7fb3da9ebf00b8c123e2e51f113" /><Meta Name="ms.sourcegitcommit" Value="5c332e8417c001736f7e2f33a84791feebba2cd7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/30/2019" /><Meta Name="ms.locfileid" Value="68632624" /></Metadata><TypeSignature Language="C#" Value="public class GroupCollection : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit GroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.GroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupCollection&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupCollection : System::Collections::ICollection" />
  <TypeSignature Language="F#" Value="type GroupCollection = class&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5aee3-101">Gibt die Menge der Erfassungsgruppen in einer einzelnen Übereinstimmung zurück.</span><span class="sxs-lookup"><span data-stu-id="5aee3-101">Returns the set of captured groups in a single match.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aee3-102">Bei <xref:System.Text.RegularExpressions.GroupCollection> der-Klasse handelt es sich um eine Null basierte Auflistungs Klasse <xref:System.Text.RegularExpressions.Group> , die aus einem oder mehreren-Objekten besteht, die Informationen über erfasste Gruppen in einer Entsprechung für reguläre Ausdrücke</span><span class="sxs-lookup"><span data-stu-id="5aee3-102">The <xref:System.Text.RegularExpressions.GroupCollection> class is a zero-based collection class that consists of one or more <xref:System.Text.RegularExpressions.Group> objects that provide information about captured groups in a regular expression match.</span></span> <span data-ttu-id="5aee3-103">Die Auflistung ist unveränderlich (schreibgeschützt) und verfügt über keinen öffentlichen Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="5aee3-103">The collection is immutable (read-only) and has no public constructor.</span></span> <span data-ttu-id="5aee3-104">Ein <xref:System.Text.RegularExpressions.GroupCollection> -Objekt wird von der <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> -Eigenschaft zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="5aee3-104">A <xref:System.Text.RegularExpressions.GroupCollection> object is returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="5aee3-105">Die-Auflistung enthält ein oder <xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType> mehrere-Objekte.</span><span class="sxs-lookup"><span data-stu-id="5aee3-105">The collection contains one or more <xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType> objects.</span></span> <span data-ttu-id="5aee3-106">Wenn die Übereinstimmung erfolgreich ist, enthält das erste Element in der- <xref:System.Text.RegularExpressions.Group> Auflistung das-Objekt, das der gesamten Übereinstimmung entspricht.</span><span class="sxs-lookup"><span data-stu-id="5aee3-106">If the match is successful, the first element in the collection contains the <xref:System.Text.RegularExpressions.Group> object that corresponds to the entire match.</span></span> <span data-ttu-id="5aee3-107">Jedes nachfolgende Element stellt eine erfasste Gruppe dar, wenn der reguläre Ausdruck Erfassungs Gruppen einschließt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-107">Each subsequent element represents a captured group, if the regular expression includes capturing groups.</span></span> <span data-ttu-id="5aee3-108">Übereinstimmungen aus nummerierten (unbenannten) Erfassungs Gruppen werden in numerischer Reihenfolge vor Übereinstimmungen aus benannten Erfassungs Gruppen angezeigt</span><span class="sxs-lookup"><span data-stu-id="5aee3-108">Matches from numbered (unnamed) capturing groups appear in numeric order before matches from named capturing groups.</span></span> <span data-ttu-id="5aee3-109">Wenn die Entsprechung nicht erfolgreich ist, enthält die Auflistung <xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType> ein einzelnes <xref:System.Text.RegularExpressions.Group.Success%2A> Objekt, `false` dessen- <xref:System.Text.RegularExpressions.Capture.Value%2A> Eigenschaft ist <xref:System.String.Empty?displayProperty=nameWithType>und dessen-Eigenschaft gleich ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-109">If the match is unsuccessful, the collection contains a single <xref:System.Text.RegularExpressions.Group?displayProperty=nameWithType> object whose <xref:System.Text.RegularExpressions.Group.Success%2A> property is `false` and whose <xref:System.Text.RegularExpressions.Capture.Value%2A> property equals <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="5aee3-110">Weitere Informationen finden Sie im Abschnitt "Gruppierungskonstrukte und Objekte für reguläre Ausdrücke" im Artikel [Gruppierungskonstrukte](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) .</span><span class="sxs-lookup"><span data-stu-id="5aee3-110">For more information, see the "Grouping Constructs and Regular Expression Objects" section in the [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md) article.</span></span>  
  
 <span data-ttu-id="5aee3-111">Um die Elemente der Auflistung zu durchlaufen, sollten Sie das von Ihrer Sprache bereitgestellten Auflistung Iteration-Konstrukt verwenden (z. B. `foreach` in C# geschrieben und `For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="5aee3-111">To iterate through the members of the collection, you should use the collection iteration construct provided by your language (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="5aee3-112">in Visual Basic) anstatt den Enumerator abzurufen, der von der <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> -Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-112">in Visual Basic) instead of retrieving the enumerator that is returned by the <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> method.</span></span> <span data-ttu-id="5aee3-113">Außerdem können Sie über die <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> -Eigenschaft (Indexer in C#) auf einzelne nummerierte erfasste Gruppen zugreifen, und Sie können über die <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> -Eigenschaft auf einzelne benannte erfasste Gruppen zugreifen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-113">In addition, you can access individual numbered captured groups from the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> property (the indexer in C#), and you can access individual named captured groups from the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> property.</span></span> <span data-ttu-id="5aee3-114">Beachten Sie, dass Sie ein Array, die die Zahlen und die Namen aller Erfassungsgruppen abrufen können durch den Aufruf enthält die <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> und <xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType> Methoden bzw.</span><span class="sxs-lookup"><span data-stu-id="5aee3-114">Note that you can retrieve an array that contains the numbers and names of all capturing groups by calling the <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> and <xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType> methods, respectively.</span></span> <span data-ttu-id="5aee3-115">Beides sind Instanzmethoden und erfordern, dass Sie ein <xref:System.Text.RegularExpressions.Regex> -Objekt instanziieren, das den zu übereinstimmenden regulären Ausdruck darstellt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-115">Both are instance methods and require that you instantiate a <xref:System.Text.RegularExpressions.Regex> object that represents the regular expression to be matched.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5aee3-116">Im folgenden Beispiel wird ein regulärer Ausdruck mit Erfassungs Gruppen verwendet, um Informationen zu Marken und registrierten Marken zu extrahieren, die in Text verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5aee3-116">The following example uses a regular expression with capturing groups to extract information about trademarks and registered trademarks used in text.</span></span> <span data-ttu-id="5aee3-117">Das Muster für reguläre Ausdrücke `\b(\w+?)([\u00AE\u2122])`ist, das wie in der folgenden Tabelle dargestellt interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-117">The regular expression pattern is `\b(\w+?)([\u00AE\u2122])`, which is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="5aee3-118">Muster</span><span class="sxs-lookup"><span data-stu-id="5aee3-118">Pattern</span></span>|<span data-ttu-id="5aee3-119">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="5aee3-119">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="5aee3-120">Suchen Sie nach einer Wort Grenze.</span><span class="sxs-lookup"><span data-stu-id="5aee3-120">Look for a word boundary.</span></span>|  
|`(\w+?)`|<span data-ttu-id="5aee3-121">Suchen Sie nach einem oder mehreren Wort Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-121">Look for one or more word characters.</span></span> <span data-ttu-id="5aee3-122">In der Zusammenfassung bilden diese den mit dem Namen markierten Namen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-122">Together, these form the trademarked name.</span></span> <span data-ttu-id="5aee3-123">(Beachten Sie, dass dieser reguläre Ausdruck annimmt, dass eine Marke aus einem einzelnen Wort besteht.) Dies ist die erste Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-123">(Note that this regular expression assumes that a trademark consists of a single word.) This is the first capturing group.</span></span>|  
|`([\u00AE\u2122])`|<span data-ttu-id="5aee3-124">Suchen Sie nach dem® oder dem™ Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-124">Look for either the ® or the ™ character.</span></span> <span data-ttu-id="5aee3-125">Dies ist die zweite Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-125">This is the second capturing group.</span></span>|  
  
 <span data-ttu-id="5aee3-126">Bei jeder Übereinstimmung <xref:System.Text.RegularExpressions.GroupCollection> enthält die <xref:System.Text.RegularExpressions.Group> drei-Objekte.</span><span class="sxs-lookup"><span data-stu-id="5aee3-126">For each match, the <xref:System.Text.RegularExpressions.GroupCollection> contains three <xref:System.Text.RegularExpressions.Group> objects.</span></span> <span data-ttu-id="5aee3-127">Das erste-Objekt enthält die Zeichenfolge, die mit dem gesamten regulären Ausdruck übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-127">The first object contains the string that matches the entire regular expression.</span></span> <span data-ttu-id="5aee3-128">Das zweite-Objekt, das die erste erfasste Gruppe darstellt, enthält den Produktnamen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-128">The second object, which represents the first captured group, contains the product name.</span></span> <span data-ttu-id="5aee3-129">Das dritte Objekt, das die zweite erfasste Gruppe darstellt, enthält das Marken Symbol oder das eingetragene Marken Symbol.</span><span class="sxs-lookup"><span data-stu-id="5aee3-129">The third object, which represents the second captured group, contains the trademark or registered trademark symbol.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.GroupCollection#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Text.RegularExpressions.GroupCollection/cs/Example1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.GroupCollection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Text.RegularExpressions.GroupCollection/vb/Example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.RegularExpressions.Group" />
  </Docs>
  <Members>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="groupCollection.ContainsKey key" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IReadOnlyDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5aee3-130">Eine Zeichenfolge mit dem Namen der erfassten Gruppe, die gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-130">A string with the name of the captured group to locate.</span></span></param>
        <summary><span data-ttu-id="5aee3-131">Bestimmt, ob die Gruppenauflistung eine erfasste Gruppe enthält, die durch den angegebenen Namen identifiziert wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-131">Determines whether the group collection contains a captured group identified by the specified name.</span></span></summary>
        <returns><span data-ttu-id="5aee3-132"><see langword="true" />, wenn die Gruppenauflistung eine erfasste Gruppe enthält, die durch <paramref name="key" /> identifiziert wird; anderenfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-132"><see langword="true" /> if the group collection contains a captured group identified by <paramref name="key" />; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="groupCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="5aee3-133">Das Array, in das die Auflistung kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-133">The array the collection is to be copied into.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="5aee3-134">Die Position im Zielarray, an der mit dem Kopieren begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-134">The position in the destination array where the copying is to begin.</span></span></param>
        <summary><span data-ttu-id="5aee3-135">Kopiert alle Elemente der Auflistung ab dem angegebenen Index in das angegebene Array.</span><span class="sxs-lookup"><span data-stu-id="5aee3-135">Copies all the elements of the collection to the given array beginning at the given index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aee3-136">Da die gesamte Auflistung ab dem angegebenen Index in das Array kopiert wird, muss das Zielarray mindestens so groß wie die Auflistung sein.</span><span class="sxs-lookup"><span data-stu-id="5aee3-136">Because the entire collection is copied into the array starting at the given index, the destination array must be at least as large as the collection.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="5aee3-137">Dieser Member ist im [!INCLUDE[net_portable](~/includes/net-portable-md.md)]nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="5aee3-137">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="5aee3-138">Wenn Sie Anwendungen entwickeln, die auf ausgerichtet [!INCLUDE[net_portable](~/includes/net-portable-md.md)]sind, verwenden <xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType> Sie stattdessen die-Methode.</span><span class="sxs-lookup"><span data-stu-id="5aee3-138">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23CopyTo%2A?displayProperty=nameWithType> method instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5aee3-139">Im folgenden Beispiel wird jedes Wort aus einem Satz extrahiert und in einer Erfassungs Gruppe erfasst. <xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A> anschließend wird die-Methode verwendet, um die Elemente im- <xref:System.Text.RegularExpressions.GroupCollection> Objekt der einzelnen Übereinstimmungen in ein Array zu kopieren, das die Erfassungs Gruppen aus allen Übereinstimmungen enthält.</span><span class="sxs-lookup"><span data-stu-id="5aee3-139">The following example extracts each word from a sentence and captures it in a capturing group, The <xref:System.Text.RegularExpressions.GroupCollection.CopyTo%2A> method is then used to copy the elements in each match's <xref:System.Text.RegularExpressions.GroupCollection> object to an array that contains the capturing groups from all matches.</span></span> <span data-ttu-id="5aee3-140">Die einzelnen erfassten Wörter werden dann in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-140">The individual captured words are then displayed to the console.</span></span>  
  
 [!code-csharp[System.Text.RegularExpressions.GroupCollection.CopyTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.copyto/cs/copyto1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.GroupCollection.CopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.copyto/vb/copyto1.vb#1)]  
  
 <span data-ttu-id="5aee3-141">Der reguläre Ausdruck ist wie folgt definiert:</span><span class="sxs-lookup"><span data-stu-id="5aee3-141">The regular expression is defined as follows:</span></span>  
  
|<span data-ttu-id="5aee3-142">Muster</span><span class="sxs-lookup"><span data-stu-id="5aee3-142">Pattern</span></span>|<span data-ttu-id="5aee3-143">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="5aee3-143">Description</span></span>|  
|-------------|-----------------|  
|`\b`|<span data-ttu-id="5aee3-144">Übereinstimmung mit einer Wortgrenze.</span><span class="sxs-lookup"><span data-stu-id="5aee3-144">Match a word boundary.</span></span>|  
|`(\S+?)`|<span data-ttu-id="5aee3-145">Entsprechung für mindestens ein nicht-Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-145">Match one or more non-white space characters.</span></span> <span data-ttu-id="5aee3-146">Weisen Sie Sie der ersten Erfassungs Gruppe zu.</span><span class="sxs-lookup"><span data-stu-id="5aee3-146">Assign them to the first capturing group.</span></span>|  
|`\b`|<span data-ttu-id="5aee3-147">Übereinstimmung mit einer Wortgrenze.</span><span class="sxs-lookup"><span data-stu-id="5aee3-147">Match a word boundary.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5aee3-148"><paramref name="array" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-148"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="5aee3-149"><paramref name="arrayIndex" /> liegt außerhalb der Grenzen von <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-149"><paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.</span></span>

<span data-ttu-id="5aee3-150">- oder -</span><span class="sxs-lookup"><span data-stu-id="5aee3-150">-or-</span></span>

<span data-ttu-id="5aee3-151"><paramref name="arrayIndex" /> und <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> liegen außerhalb der Grenzen von <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-151"><paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> is outside the bounds of <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Text.RegularExpressions.Group[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Text.RegularExpressions.Group[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.CopyTo(System.Text.RegularExpressions.Group[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As Group(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Text::RegularExpressions::Group ^&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : System.Text.RegularExpressions.Group[] * int -&gt; unit&#xA;override this.CopyTo : System.Text.RegularExpressions.Group[] * int -&gt; unit" Usage="groupCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Text.RegularExpressions.Group[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="5aee3-152">Das eindimensionales Array, bei dem es sich um das Ziel der aus der Gruppenauflistung kopierten Elemente handelt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-152">The one-dimensional array that is the destination of the elements copied from the group collection.</span></span> <span data-ttu-id="5aee3-153">Für das Array muss eine nullbasierte Indizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5aee3-153">The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="5aee3-154">Der nullbasierte Index im <paramref name="array" />, bei dem der Kopiervorgang beginnt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-154">The zero-based index in <paramref name="array" /> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="5aee3-155">Kopiert die Elemente der Gruppenauflistung in ein <see cref="T:System.Text.RegularExpressions.Group[]" />-Array, wobei an einem bestimmten Arrayindex begonnen wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-155">Copies the elements of the group collection to a <see cref="T:System.Text.RegularExpressions.Group[]" /> array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5aee3-156"><paramref name="array" /> ist NULL.</span><span class="sxs-lookup"><span data-stu-id="5aee3-156"><paramref name="array" /> is null.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="5aee3-157"><paramref name="arrayIndex" /> ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="5aee3-157"><paramref name="arrayIndex" /> is less than zero.</span></span>

<span data-ttu-id="5aee3-158">- oder -</span><span class="sxs-lookup"><span data-stu-id="5aee3-158">-or-</span></span>

<span data-ttu-id="5aee3-159"><paramref name="arrayIndex" /> ist größer als die Länge von <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-159"><paramref name="arrayIndex" /> is greater than the length of <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5aee3-160">Die Länge von <paramref name="array" /> - <paramref name="arrayIndex" /> ist kleiner als die Anzahl der Gruppen in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-160">The length of <paramref name="array" /> - <paramref name="arrayIndex" /> is less than the group collection count.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Text.RegularExpressions.GroupCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5aee3-161">Gibt die Anzahl der Gruppen in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="5aee3-161">Returns the number of groups in the collection.</span></span></summary>
        <value><span data-ttu-id="5aee3-162">Die Anzahl der Gruppen in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-162">The number of groups in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aee3-163">Das <xref:System.Text.RegularExpressions.GroupCollection> Objekt verfügt immer über mindestens einen Member.</span><span class="sxs-lookup"><span data-stu-id="5aee3-163">The <xref:System.Text.RegularExpressions.GroupCollection> object always has at least one member.</span></span> <span data-ttu-id="5aee3-164">Wenn eine Entsprechung nicht erfolgreich ist <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> , gibt die <xref:System.Text.RegularExpressions.GroupCollection> -Eigenschaft ein-Objekt zurück, das einen einzelnen Member enthält.</span><span class="sxs-lookup"><span data-stu-id="5aee3-164">If a match is unsuccessful, the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property returns a <xref:System.Text.RegularExpressions.GroupCollection> object that contains a single member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="groupCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5aee3-165">Stellt einen Enumerator bereit, der die Auflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="5aee3-165">Provides an enumerator that iterates through the collection.</span></span></summary>
        <returns><span data-ttu-id="5aee3-166">Ein Enumerator, der alle <see cref="T:System.Text.RegularExpressions.Group" />-Objekte in der <see cref="T:System.Text.RegularExpressions.GroupCollection" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="5aee3-166">An enumerator that contains all <see cref="T:System.Text.RegularExpressions.Group" /> objects in the <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aee3-167">Statt die <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> durchlaufen Sie die Methode, um einen Enumerator abzurufen, mit dem Sie die <xref:System.Text.RegularExpressions.Group> Objekte in der Auflistung, sollten Sie die Iteration Gruppenkonstrukt verwenden (z. B. `foreach` in C# geschrieben und `For Each`...`Next`</span><span class="sxs-lookup"><span data-stu-id="5aee3-167">Instead of calling the <xref:System.Text.RegularExpressions.GroupCollection.GetEnumerator%2A> method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="5aee3-168">in Visual Basic), das von ihrer Programmiersprache bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-168">in Visual Basic) that is provided by your programming language.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Text.RegularExpressions.GroupCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5aee3-169">Ruft einen Wert ab, der angibt, ob die Auflistung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-169">Gets a value that indicates whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="5aee3-170"><see langword="true" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-170"><see langword="true" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Text.RegularExpressions.GroupCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5aee3-171">Ruft einen Wert ab, der angibt, ob der Zugriff auf <see cref="T:System.Text.RegularExpressions.GroupCollection" /> synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-171">Gets a value that indicates whether access to the <see cref="T:System.Text.RegularExpressions.GroupCollection" /> is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="5aee3-172"><see langword="false" /> in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-172"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="5aee3-173">Dieser Member ist im [!INCLUDE[net_portable](~/includes/net-portable-md.md)]nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="5aee3-173">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="5aee3-174">Wenn Sie Anwendungen entwickeln, die auf ausgerichtet [!INCLUDE[net_portable](~/includes/net-portable-md.md)]sind, verwenden <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType> Sie stattdessen die-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5aee3-174">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.CaptureCollection.System%23Collections%23ICollection%23IsSynchronized%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.GroupCollection.SyncRoot" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5aee3-175">Ermöglicht den Zugriff auf einen einzelnen Member der Auflistung über einen Ganzzahlen- oder Zeichenfolgenindex.</span><span class="sxs-lookup"><span data-stu-id="5aee3-175">Enables access to a single member of the collection by integer or string index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Group this[int groupnum] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Group Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(groupnum As Integer) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::Group ^ default[int] { System::Text::RegularExpressions::Group ^ get(int groupnum); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.GroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupnum" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupnum"><span data-ttu-id="5aee3-176">Der nullbasierte Index des Auflistungsmembers, der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-176">The zero-based index of the collection member to be retrieved.</span></span></param>
        <summary><span data-ttu-id="5aee3-177">Ermöglicht den Zugriff auf einen Member der Auflistung über einen Ganzzahlenindex.</span><span class="sxs-lookup"><span data-stu-id="5aee3-177">Enables access to a member of the collection by integer index.</span></span></summary>
        <value><span data-ttu-id="5aee3-178">Der Member der Auflistung, die durch <paramref name="groupnum" /> angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-178">The member of the collection specified by <paramref name="groupnum" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aee3-179">Die <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> -Eigenschaft ist der Index ( C#in) oder die Default-Eigenschaft (in <xref:System.Text.RegularExpressions.GroupCollection> Visual Basic) der-Klasse.</span><span class="sxs-lookup"><span data-stu-id="5aee3-179">The <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> property is the index (in C#) or the default property (in Visual Basic) of the <xref:System.Text.RegularExpressions.GroupCollection> class.</span></span> <span data-ttu-id="5aee3-180">Sie ermöglicht das Auflisten der Member der Auflistung mithilfe einer `foreach` -Anweisung in C# oder einer `For Each` -Anweisung in Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="5aee3-180">It allows you to enumerate the members of the collection by using a `foreach` statement in C# or a `For Each` statement in Visual Basic.</span></span>  
  
 <span data-ttu-id="5aee3-181">Sie können diese Eigenschaft auch verwenden, um einzelne erfasste Gruppen nach ihrer Indexnummer abzurufen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-181">You can also use this property to retrieve individual captured groups by their index number.</span></span> <span data-ttu-id="5aee3-182">Sie können ein Array mit den Zahlen aller Erfassungs Gruppen in einem regulären Ausdruck abrufen, indem Sie die Instanzmethode <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> aufrufen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-182">You can retrieve an array that contains the numbers of all capturing groups in a regular expression by calling the instance <xref:System.Text.RegularExpressions.Regex.GetGroupNumbers%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5aee3-183">Sie können auch benannte Erfassungs Gruppen zu ihren Zahlen zuordnen, indem Sie <xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType> die Instanzmethode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-183">You can also map named capturing groups to their numbers by calling the instance <xref:System.Text.RegularExpressions.Regex.GroupNumberFromName%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5aee3-184">Sie können die Anzahl der Elemente in der Sammlung ermitteln, indem Sie den Wert der <xref:System.Text.RegularExpressions.GroupCollection.Count%2A> -Eigenschaft abrufen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-184">You can determine the number of items in the collection by retrieving the value of the <xref:System.Text.RegularExpressions.GroupCollection.Count%2A> property.</span></span> <span data-ttu-id="5aee3-185">Gültige Werte für den `groupnum` -Parameter liegen zwischen 0 und eins, das kleiner ist als die Anzahl der Elemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-185">Valid values for the `groupnum` parameter range from 0 to one less than the number of items in the collection.</span></span>  
  
 <span data-ttu-id="5aee3-186">Das <xref:System.Text.RegularExpressions.GroupCollection> von der <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> -Eigenschaft zurückgegebene-Objekt hat immer mindestens einen Member.</span><span class="sxs-lookup"><span data-stu-id="5aee3-186">The <xref:System.Text.RegularExpressions.GroupCollection> object returned by the <xref:System.Text.RegularExpressions.Match.Groups%2A?displayProperty=nameWithType> property always has at least one member.</span></span> <span data-ttu-id="5aee3-187">Wenn die Engine für reguläre Ausdrücke keine Übereinstimmungen in einer bestimmten Eingabe Zeichenfolge finden <xref:System.Text.RegularExpressions.Group> kann, <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> ist für das einzelne Objekt in der `false` Auflistung die `Group.Value` -Eigenschaft auf <xref:System.String.Empty?displayProperty=nameWithType>festgelegt, und die-Eigenschaft ist auf festgelegt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-187">If the regular expression engine cannot find any matches in a particular input string, the single <xref:System.Text.RegularExpressions.Group> object in the collection has its <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> property set to `false` and its `Group.Value` property set to <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="5aee3-188">Wenn `groupnum` nicht der Index eines Members der Auflistung ist oder wenn `groupnum` der Index einer Erfassungs Gruppe ist, der nicht in der Eingabe Zeichenfolge abgeglichen wurde, gibt die Methode ein <xref:System.Text.RegularExpressions.Group> -Objekt <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> zurück, `false` dessen-Eigenschaft ist und dessen die-Eigenschaft ist <xref:System.String.Empty?displayProperty=nameWithType>. `Group.Value`</span><span class="sxs-lookup"><span data-stu-id="5aee3-188">If `groupnum` is not the index of a member of the collection, or if `groupnum` is the index of a capturing group that has not been matched in the input string, the method returns a <xref:System.Text.RegularExpressions.Group> object whose <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> property is `false` and whose `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5aee3-189">Im folgenden Beispiel wird ein regulärer Ausdruck definiert, der aus zwei nummerierten Gruppen besteht.</span><span class="sxs-lookup"><span data-stu-id="5aee3-189">The following example defines a regular expression that consists of two numbered groups.</span></span> <span data-ttu-id="5aee3-190">Die erste Gruppe erfasst eine oder mehrere aufeinanderfolgende Ziffern.</span><span class="sxs-lookup"><span data-stu-id="5aee3-190">The first group captures one or more consecutive digits.</span></span> <span data-ttu-id="5aee3-191">Die zweite Gruppe entspricht einem einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-191">The second group matches a single character.</span></span> <span data-ttu-id="5aee3-192">Da die Engine für reguläre Ausdrücke nach NULL oder einem Vorkommen der ersten Gruppe sucht, findet Sie nicht immer eine Übereinstimmung, auch wenn die Entsprechung für reguläre Ausdrücke erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-192">Because the regular expression engine looks for zero or one occurrence of the first group, it does not always find a match even if the regular expression match is successful.</span></span> <span data-ttu-id="5aee3-193">Das Beispiel veranschaulicht dann das Ergebnis, wenn <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> die-Eigenschaft verwendet wird, um eine nicht übereinstimmende Gruppe, eine übereinstimmende Gruppe und eine Gruppe abzurufen, die nicht im regulären Ausdruck definiert ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-193">The example then illustrates the result when the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.Int32%29> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</span></span> <span data-ttu-id="5aee3-194">Im Beispiel wird ein Muster `(\d+)*(\w)\2`für reguläre Ausdrücke definiert, das wie in der folgenden Tabelle dargestellt interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-194">The example defines a regular expression pattern `(\d+)*(\w)\2`, which is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="5aee3-195">Muster</span><span class="sxs-lookup"><span data-stu-id="5aee3-195">Pattern</span></span>|<span data-ttu-id="5aee3-196">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="5aee3-196">Description</span></span>|  
|-------------|-----------------|  
|`(\d+)*`|<span data-ttu-id="5aee3-197">Entsprechung für ein oder mehrere Vorkommen einer Dezimal Ziffer.</span><span class="sxs-lookup"><span data-stu-id="5aee3-197">Match one or more occurrence of a decimal digit.</span></span> <span data-ttu-id="5aee3-198">Dies ist die erste Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-198">This is the first capturing group.</span></span> <span data-ttu-id="5aee3-199">Entspricht diesem Muster entweder NULL oder einmal.</span><span class="sxs-lookup"><span data-stu-id="5aee3-199">Match this pattern either zero or one time.</span></span>|  
|`(\w)`|<span data-ttu-id="5aee3-200">Dies ist die zweite Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-200">This is the second capturing group.</span></span>|  
|`\k`|<span data-ttu-id="5aee3-201">Entspricht der Zeichenfolge, die von der zweiten Erfassungs Gruppe erfasst wurde.</span><span class="sxs-lookup"><span data-stu-id="5aee3-201">Match the string captured by the second capturing group.</span></span>|  
  
 [!code-csharp[System.Text.RegularExpressions.GroupCollection.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.item/cs/item3.cs#2)]
 [!code-vb[System.Text.RegularExpressions.GroupCollection.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.item/vb/item3.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b"><span data-ttu-id="5aee3-202">Gruppierungskonstrukte</span><span class="sxs-lookup"><span data-stu-id="5aee3-202">Grouping Constructs</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.Group this[string groupname] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Group Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(groupname As String) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::Group ^ default[System::String ^] { System::Text::RegularExpressions::Group ^ get(System::String ^ groupname); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.GroupCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupname"><span data-ttu-id="5aee3-203">Der Name der Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-203">The name of a capturing group.</span></span></param>
        <summary><span data-ttu-id="5aee3-204">Ermöglicht den Zugriff auf einen Member der Auflistung über einen Zeichenfolgenindex.</span><span class="sxs-lookup"><span data-stu-id="5aee3-204">Enables access to a member of the collection by string index.</span></span></summary>
        <value><span data-ttu-id="5aee3-205">Der Member der Auflistung, die durch <paramref name="groupname" /> angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-205">The member of the collection specified by <paramref name="groupname" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5aee3-206">`groupName`kann entweder der Name einer Erfassungs Gruppe sein, die durch das `(?<` *Name* `>)` -Element in einem regulären Ausdruck definiert wird, oder die Zeichen folgen Darstellung der Nummer einer Erfassungs Gruppe, die durch ein Gruppierungs Konstrukt definiert wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-206">`groupName` can be either the name of a capturing group that is defined by the `(?<`*name*`>)` element in a regular expression, or the string representation of the number of a capturing group that is defined by a grouping construct.</span></span> <span data-ttu-id="5aee3-207">Weitere Informationen zu Gruppen in regulären Ausdrücken finden Sie unter [Gruppierungskonstrukte](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="5aee3-207">For more information about groups in regular expressions, see [Grouping Constructs](~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md).</span></span>  
  
 <span data-ttu-id="5aee3-208">Sie können die Namen aller erfassten Gruppen in einem <xref:System.Text.RegularExpressions.Regex> -Objekt abrufen, indem Sie die <xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType> -Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-208">You can retrieve the names of all the captured groups in a <xref:System.Text.RegularExpressions.Regex> object by calling the <xref:System.Text.RegularExpressions.Regex.GetGroupNames%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5aee3-209">Sie können auch die Anzahl der Erfassungs Gruppen in einem regulären Ausdruck den Namen zuordnen, indem Sie <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType> die-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-209">You can also map the numbers of capturing groups in a regular expression to their names by calling the <xref:System.Text.RegularExpressions.Regex.GroupNameFromNumber%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5aee3-210">Einzelne Namen aus dem Array können dann an die <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> -Eigenschaft weitergegeben werden, um die erfasste Zeichenfolge abzurufen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-210">Individual names from the array can then be passed to the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> property to retrieve the captured string.</span></span>  
  
 <span data-ttu-id="5aee3-211">Wenn `groupname` nicht der Name einer Erfassungs Gruppe in der Auflistung ist oder wenn `groupname` der Name einer Erfassungs Gruppe ist, die in der Eingabe Zeichenfolge nicht abgeglichen wurde, gibt die <xref:System.Text.RegularExpressions.Group> Methode ein <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> -Objekt `false` zurück, dessen-Eigenschaft ist. und, `Group.Value` dessen- <xref:System.String.Empty?displayProperty=nameWithType>Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-211">If `groupname` is not the name of a capturing group in the collection, or if `groupname` is the name of a capturing group that has not been matched in the input string, the method returns a <xref:System.Text.RegularExpressions.Group> object whose <xref:System.Text.RegularExpressions.Group.Success%2A?displayProperty=nameWithType> property is `false` and whose `Group.Value` property is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5aee3-212">Im folgenden Beispiel wird ein regulärer Ausdruck definiert, der aus zwei benannten Gruppen besteht.</span><span class="sxs-lookup"><span data-stu-id="5aee3-212">The following example defines a regular expression that consists of two named groups.</span></span> <span data-ttu-id="5aee3-213">Die erste Gruppe, `numbers`, erfasst eine oder mehrere aufeinanderfolgende Ziffern.</span><span class="sxs-lookup"><span data-stu-id="5aee3-213">The first group, `numbers`, captures one or more consecutive digits.</span></span> <span data-ttu-id="5aee3-214">Die zweite Gruppe, `letter`, entspricht einem einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-214">The second group, `letter`, matches a single character.</span></span> <span data-ttu-id="5aee3-215">Da die Engine für reguläre Ausdrücke nach NULL oder einem Vorkommen des von der `numbers` Gruppe definierten Musters sucht, ist die `numbers` Gruppe nicht immer vorhanden, auch wenn eine Entsprechung erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-215">Because the regular expression engine looks for zero or one occurrence of the pattern defined by the `numbers` group, the `numbers` group is not always present even if a match is successful.</span></span> <span data-ttu-id="5aee3-216">Das Beispiel veranschaulicht dann das Ergebnis, wenn <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> die-Eigenschaft verwendet wird, um eine nicht übereinstimmende Gruppe, eine übereinstimmende Gruppe und eine Gruppe abzurufen, die nicht im regulären Ausdruck definiert ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-216">The example then illustrates the result when the <xref:System.Text.RegularExpressions.GroupCollection.Item%28System.String%29> property is used to retrieve an unmatched group, a matched group, and a group that is not defined in the regular expression.</span></span> <span data-ttu-id="5aee3-217">Im Beispiel wird ein Muster `(?<numbers>\d+)*(?<letter>\w)\k<letter>`für reguläre Ausdrücke definiert, das wie in der folgenden Tabelle dargestellt interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-217">The example defines a regular expression pattern `(?<numbers>\d+)*(?<letter>\w)\k<letter>`, which is interpreted as shown in the following table.</span></span>  
  
|<span data-ttu-id="5aee3-218">Muster</span><span class="sxs-lookup"><span data-stu-id="5aee3-218">Pattern</span></span>|<span data-ttu-id="5aee3-219">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="5aee3-219">Description</span></span>|  
|-------------|-----------------|  
|`(?<numbers>\d+)*`|<span data-ttu-id="5aee3-220">Entsprechung für ein oder mehrere Vorkommen einer Dezimal Ziffer.</span><span class="sxs-lookup"><span data-stu-id="5aee3-220">Match one or more occurrence of a decimal digit.</span></span> <span data-ttu-id="5aee3-221">Nennen Sie dies `numbers` der Erfassungs Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-221">Name this the `numbers` capturing group.</span></span> <span data-ttu-id="5aee3-222">Entspricht diesem Muster entweder NULL oder einmal.</span><span class="sxs-lookup"><span data-stu-id="5aee3-222">Match this pattern either zero or one time.</span></span>|  
|`(?<letter>\w)`|<span data-ttu-id="5aee3-223">Entsprechung für ein einzelnes Wort Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-223">Match a single word character.</span></span> <span data-ttu-id="5aee3-224">Nennen Sie dies `letter` der Erfassungs Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-224">Name this the `letter` capturing group.</span></span>|  
|`\k<letter>`|<span data-ttu-id="5aee3-225">Entspricht der Zeichenfolge, die `letter` von der Erfassungs Gruppe erfasst wurde.</span><span class="sxs-lookup"><span data-stu-id="5aee3-225">Match the string captured by the `letter` capturing group.</span></span>|  
  
 [!code-csharp[System.Text.RegularExpressions.GroupCollection.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.item/cs/item2.cs#1)]
 [!code-vb[System.Text.RegularExpressions.GroupCollection.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.groupcollection.item/vb/item2.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/0fc18634-f590-4062-8d5c-f0b71abe405b"><span data-ttu-id="5aee3-226">Gruppierungskonstrukte</span><span class="sxs-lookup"><span data-stu-id="5aee3-226">Grouping Constructs</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IEnumerable(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ Keys { System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : seq&lt;string&gt;" Usage="System.Text.RegularExpressions.GroupCollection.Keys" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5aee3-227">Ruft eine Zeichenfolgenenumeration ab, die die Namensschlüssel der Gruppenauflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="5aee3-227">Gets a string enumeration that contains the name keys of the group collection.</span></span></summary>
        <value><span data-ttu-id="5aee3-228">Die namens Schlüssel der Gruppen Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-228">The name keys of the group collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Text.RegularExpressions.GroupCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5aee3-229">Ruft ein Objekt ab, mit dem der Zugriff auf <see cref="T:System.Text.RegularExpressions.GroupCollection" /> synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="5aee3-229">Gets an object that can be used to synchronize access to the <see cref="T:System.Text.RegularExpressions.GroupCollection" />.</span></span></summary>
        <value><span data-ttu-id="5aee3-230">Eine Kopie des zu synchronisierenden <see cref="T:System.Text.RegularExpressions.Match" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="5aee3-230">A copy of the <see cref="T:System.Text.RegularExpressions.Match" /> object to synchronize.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!WARNING]
>  <span data-ttu-id="5aee3-231">Dieser Member ist im [!INCLUDE[net_portable](~/includes/net-portable-md.md)]nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="5aee3-231">This member is not present in the [!INCLUDE[net_portable](~/includes/net-portable-md.md)].</span></span> <span data-ttu-id="5aee3-232">Wenn Sie Anwendungen entwickeln, die auf ausgerichtet [!INCLUDE[net_portable](~/includes/net-portable-md.md)]sind, verwenden <xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType> Sie stattdessen die-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5aee3-232">If you are developing applications that target the [!INCLUDE[net_portable](~/includes/net-portable-md.md)], use the <xref:System.Text.RegularExpressions.GroupCollection.System%23Collections%23ICollection%23SyncRoot%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Text.RegularExpressions.GroupCollection.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Add">
      <MemberSignature Language="C#" Value="void ICollection&lt;Group&gt;.Add (System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Add(class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Group&gt;#Add(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (item As Group) Implements ICollection(Of Group).Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Add(System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Group ^&gt;::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5aee3-233">Die zur Auflistung hinzuzufügende Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-233">The group to add to the collection.</span></span></param>
        <summary><span data-ttu-id="5aee3-234">Fügt der Auflistung eine <see cref="T:System.Text.RegularExpressions.Group" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="5aee3-234">Adds a <see cref="T:System.Text.RegularExpressions.Group" /> to the collection.</span></span> <span data-ttu-id="5aee3-235">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-235">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-236">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-236">This method is not supported.</span></span> <span data-ttu-id="5aee3-237">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-237">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Clear">
      <MemberSignature Language="C#" Value="void ICollection&lt;Group&gt;.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Group&gt;#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements ICollection(Of Group).Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Clear() = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Group ^&gt;::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5aee3-238">Löscht die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-238">Clears the collection.</span></span> <span data-ttu-id="5aee3-239">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-239">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-240">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-240">This method is not supported.</span></span> <span data-ttu-id="5aee3-241">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-241">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Contains">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Group&gt;.Contains (System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Contains(class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Group&gt;#Contains(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (item As Group) As Boolean Implements ICollection(Of Group).Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Contains(System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Group ^&gt;::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5aee3-242">Die Gruppe, die in der Gruppenauflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-242">The group to locate in the group collection.</span></span></param>
        <summary><span data-ttu-id="5aee3-243">Bestimmt, ob die Gruppenauflistung eine bestimmtes Gruppenelement enthält.</span><span class="sxs-lookup"><span data-stu-id="5aee3-243">Determines whether the group collection contains a specific group item.</span></span></summary>
        <returns><span data-ttu-id="5aee3-244"><see langword="true" />, wenn das Gruppenelement in der Gruppenauflistung gefunden wurde; anderenfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-244"><see langword="true" /> if the group item is found in the group collection; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5aee3-245">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5aee3-246">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.GroupCollection>-Instanz in eine <xref:System.Collections.Generic.ICollection%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-246">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span> 

         ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Remove">
      <MemberSignature Language="C#" Value="bool ICollection&lt;Group&gt;.Remove (System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Remove(class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#ICollection&lt;System#Text#RegularExpressions#Group&gt;#Remove(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Function Remove (item As Group) As Boolean Implements ICollection(Of Group).Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Generic.ICollection&lt;System.Text.RegularExpressions.Group&gt;.Remove(System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::ICollection&lt;System::Text::RegularExpressions::Group ^&gt;::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5aee3-247">Die zu entfernende Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-247">The group to remove.</span></span></param>
        <summary><span data-ttu-id="5aee3-248">Entfernt ein <see cref="T:System.Text.RegularExpressions.Group" /> aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-248">Removes a <see cref="T:System.Text.RegularExpressions.Group" /> from the collection.</span></span> <span data-ttu-id="5aee3-249">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-249">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="5aee3-250">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-250">This method is not supported.</span></span> <span data-ttu-id="5aee3-251">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="5aee3-251">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-252">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-252">This method is not supported.</span></span> <span data-ttu-id="5aee3-253">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-253">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Text.RegularExpressions.Group&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,System.Text.RegularExpressions.Group&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,Group&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, class System.Text.RegularExpressions.Group&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Text.RegularExpressions.Group&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Text#RegularExpressions#Group&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Group)) Implements IEnumerable(Of KeyValuePair(Of String, Group)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Text::RegularExpressions::Group ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Text.RegularExpressions.Group&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Text::RegularExpressions::Group ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Text.RegularExpressions.Group&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5aee3-254">Stellt einen Enumerator bereit, der die Gruppenauflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="5aee3-254">Provides an enumerator that iterates through the group collection.</span></span></summary>
        <returns><span data-ttu-id="5aee3-255">Ein Enumerator, der alle Namen und Objekte der <see cref="T:System.Text.RegularExpressions.Group" />-Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="5aee3-255">An enumerator that contains all names and objects in the <see cref="T:System.Text.RegularExpressions.Group" /> collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="5aee3-256">Anstatt diese Methode aufzurufenden, um einen Enumerator abzurufen, mit dem Sie <xref:System.Text.RegularExpressions.Group> die Objekte in der Auflistung durchlaufen können, sollten Sie das gruppeniterations Konstrukt `foreach` verwenden C# ( `For Each`z. b. in und...`Next`</span><span class="sxs-lookup"><span data-stu-id="5aee3-256">Instead of calling this method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="5aee3-257">in Visual Basic), das von ihrer Programmiersprache bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-257">in Visual Basic) that is provided by your programming language.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Group&gt; IEnumerable&lt;Group&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Text.RegularExpressions.Group&gt; System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IEnumerable&lt;System#Text#RegularExpressions#Group&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Group) Implements IEnumerable(Of Group).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Text::RegularExpressions::Group ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Group ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Text.RegularExpressions.Group&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5aee3-258">Stellt einen Enumerator bereit, der die Gruppenauflistung durchläuft.</span><span class="sxs-lookup"><span data-stu-id="5aee3-258">Provides an enumerator that iterates through the group collection.</span></span></summary>
        <returns><span data-ttu-id="5aee3-259">Ein Enumerator, der alle <see cref="T:System.Text.RegularExpressions.Group" />-Objekte der Gruppenauflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="5aee3-259">An enumerator that contains all <see cref="T:System.Text.RegularExpressions.Group" /> objects in the group collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="5aee3-260">Anstatt diese Methode aufzurufenden, um einen Enumerator abzurufen, mit dem Sie <xref:System.Text.RegularExpressions.Group> die Objekte in der Auflistung durchlaufen können, sollten Sie das gruppeniterations Konstrukt `foreach` verwenden C# ( `For Each`z. b. in und...`Next`</span><span class="sxs-lookup"><span data-stu-id="5aee3-260">Instead of calling this method to retrieve an enumerator that lets you iterate through the <xref:System.Text.RegularExpressions.Group> objects in the collection, you should use the group iteration construct (such as `foreach` in C# and `For Each`…`Next`</span></span> <span data-ttu-id="5aee3-261">in Visual Basic), das von ihrer Programmiersprache bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-261">in Visual Basic) that is provided by your programming language.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.IndexOf">
      <MemberSignature Language="C#" Value="int IList&lt;Group&gt;.IndexOf (System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.IndexOf(class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Group&gt;#IndexOf(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (item As Group) As Integer Implements IList(Of Group).IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.IndexOf(System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Group ^&gt;::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="5aee3-262">Die Gruppe, die in der Gruppenauflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-262">The group to locate in the group collection.</span></span></param>
        <summary><span data-ttu-id="5aee3-263">Bestimmt den Index einer bestimmten Gruppe in der Gruppenauflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-263">Determines the index of a specific group in the group collection.</span></span></summary>
        <returns><span data-ttu-id="5aee3-264">Der Index von <paramref. name="item" />, sofern gefunden; andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="5aee3-264">The index of the <paramref. name="item" /> if found; otherwise, -1.</span></span></returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5aee3-265">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-265">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5aee3-266">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.GroupCollection>-Instanz in eine <xref:System.Collections.Generic.IList%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-266">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>

         ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Insert">
      <MemberSignature Language="C#" Value="void IList&lt;Group&gt;.Insert (int index, System.Text.RegularExpressions.Group item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Insert(int32 index, class System.Text.RegularExpressions.Group item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Group&gt;#Insert(System.Int32,System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Group) Implements IList(Of Group).Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Insert(int index, System::Text::RegularExpressions::Group ^ item) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Group ^&gt;::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="item" Type="System.Text.RegularExpressions.Group" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5aee3-267">Die Position, an der die Gruppe eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-267">The position at which to insert the group.</span></span></param>
        <param name="item"><span data-ttu-id="5aee3-268">Die einzufügende Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-268">The group to insert.</span></span></param>
        <summary><span data-ttu-id="5aee3-269">Fügt ein <see cref="T:System.Text.RegularExpressions.Group" />-Element in die Auflistung ein.</span><span class="sxs-lookup"><span data-stu-id="5aee3-269">Inserts a <see cref="T:System.Text.RegularExpressions.Group" /> into the collection.</span></span> <span data-ttu-id="5aee3-270">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-270">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-271">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-271">This method is not supported.</span></span> <span data-ttu-id="5aee3-272">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-272">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Item">
      <MemberSignature Language="C#" Value="System.Text.RegularExpressions.Group System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.Group System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Group&gt;#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Group Implements IList(Of Group).Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Text::RegularExpressions::Group ^ System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Group&gt;::Item[int] { System::Text::RegularExpressions::Group ^ get(int index); void set(int index, System::Text::RegularExpressions::Group ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5aee3-273">Der nullbasierte Index der Gruppe in der Gruppenauflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-273">The zero-based index of the group in the group collection.</span></span></param>
        <summary><span data-ttu-id="5aee3-274">Ruft die Gruppe an der angegebenen Position in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="5aee3-274">Gets the group at the specified position in the collection.</span></span></summary>
        <value><span data-ttu-id="5aee3-275">Die Gruppe an der gewünschten Position.</span><span class="sxs-lookup"><span data-stu-id="5aee3-275">The group in the desired position.</span></span></value>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5aee3-276">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-276">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5aee3-277">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.GroupCollection>-Instanz in eine <xref:System.Collections.Generic.IList%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-277">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.Generic.IList%601> interface.</span></span>

         ]]></format>
         </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-278">Ein Element kann nicht festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="5aee3-278">Cannot set an item.</span></span> <span data-ttu-id="5aee3-279">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-279">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.RemoveAt">
      <MemberSignature Language="C#" Value="void IList&lt;Group&gt;.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#Generic#IList&lt;System#Text#RegularExpressions#Group&gt;#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList(Of Group).RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.Generic.IList&lt;System.Text.RegularExpressions.Group&gt;.RemoveAt(int index) = System::Collections::Generic::IList&lt;System::Text::RegularExpressions::Group ^&gt;::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5aee3-280">Der nullbasierte Index der zu entfernenden Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-280">The zero-based index of the group to remove.</span></span></param>
        <summary><span data-ttu-id="5aee3-281">Entfernt die <see cref="T:System.Text.RegularExpressions.Group" />-Klasse aus der Auflistung am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="5aee3-281">Removes the <see cref="T:System.Text.RegularExpressions.Group" /> from the collection at the specified index.</span></span> <span data-ttu-id="5aee3-282">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-282">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-283">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-283">This method is not supported.</span></span> <span data-ttu-id="5aee3-284">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-284">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int arrayIndex) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
        <Parameter Name="arrayIndex" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="5aee3-285">Das eindimensionale Array, in das die Auflistung kopiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-285">The one-dimensional array the collection is to be copied into.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="5aee3-286">Der nullbasierte Index im Zielarray, an dem der Kopiervorgang beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-286">The zero-based index in the destination array where copying is to begin.</span></span></param>
        <summary><span data-ttu-id="5aee3-287">Kopiert alle Elemente der Auflistung ab dem angegebenen Index in das angegebene Array.</span><span class="sxs-lookup"><span data-stu-id="5aee3-287">Copies all the elements of the collection to the specified array beginning at the specified index.</span></span></summary>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5aee3-288">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-288">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5aee3-289">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.GroupCollection>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-289">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span> 

         ]]></format>
         </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5aee3-290"><paramref name="array" /> ist NULL.</span><span class="sxs-lookup"><span data-stu-id="5aee3-290"><paramref name="array" /> is null.</span></span></exception>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="5aee3-291"><paramref name="arrayIndex" /> liegt außerhalb der <paramref name="array" />-Begrenzung, oder <paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> liegt außerhalb der <paramref name="array" />-Begrenzung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-291"><paramref name="arrayIndex" /> is outside the bounds of <paramref name="array" />.-or-<paramref name="arrayIndex" /> plus <see cref="P:System.Text.RegularExpressions.GroupCollection.Count" /> is outside the bounds of <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5aee3-292">Ruft einen Wert ab, der angibt, ob der Zugriff auf die Auflistung synchronisiert (threadsicher) ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-292">Gets a value that indicates whether access to the collection is synchronized (thread-safe).</span></span></summary>
        <value><span data-ttu-id="5aee3-293">False in allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="5aee3-293">false in all cases.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5aee3-294">Ruft ein Objekt ab, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="5aee3-294">Gets an object that can be used to synchronize access to the collection.</span></span></summary>
        <value><span data-ttu-id="5aee3-295">Ein Objekt, mit dem der Zugriff auf die Auflistung synchronisiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="5aee3-295">An object that can be used to synchronize access to the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5aee3-296">Das Objekt, das der Gruppenauflistung hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-296">The object to add to the group collection.</span></span></param>
        <summary><span data-ttu-id="5aee3-297">Fügt der Gruppenauflistung ein Objekt hinzu.</span><span class="sxs-lookup"><span data-stu-id="5aee3-297">Adds an object to the group collection.</span></span> <span data-ttu-id="5aee3-298">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-298">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-299">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-299">This method is not supported.</span></span> <span data-ttu-id="5aee3-300">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-300">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5aee3-301">Löscht die Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-301">Clears the collection.</span></span> <span data-ttu-id="5aee3-302">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-302">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-303">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-303">This method is not supported.</span></span> <span data-ttu-id="5aee3-304">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-304">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5aee3-305">Die Gruppe, die in der Gruppenauflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-305">The group to locate in the group collection.</span></span></param>
        <summary><span data-ttu-id="5aee3-306">Bestimmt, ob die Gruppenauflistung eine bestimmtes Gruppenelement enthält.</span><span class="sxs-lookup"><span data-stu-id="5aee3-306">Determines whether the group collection contains a specific group item.</span></span></summary>
        <returns><span data-ttu-id="5aee3-307"><see langword="true" />, wenn das Gruppenelement in der Gruppenauflistung gefunden wurde; anderenfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-307"><see langword="true" /> if the group item is found in the group collection; <see langword="false" /> otherwise.</span></span></returns>
         <remarks>
           <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5aee3-308">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-308">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5aee3-309">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.GroupCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-309">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span> 

           ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5aee3-310">Die Gruppe, die in der Gruppenauflistung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-310">The group to locate in the group collection.</span></span></param>
        <summary><span data-ttu-id="5aee3-311">Bestimmt den Index einer bestimmten Gruppe in der Gruppenauflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-311">Determines the index of a specific group in the group collection.</span></span></summary>
        <returns><span data-ttu-id="5aee3-312">Der Index von <paramref. name="item" />, sofern gefunden; andernfalls -1.</span><span class="sxs-lookup"><span data-stu-id="5aee3-312">The index of the <paramref. name="item" /> if found; otherwise, -1.</span></span></returns>
         <remarks>
           <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5aee3-313">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-313">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5aee3-314">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.GroupCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-314">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span> 

           ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5aee3-315">Die Position, an der die Gruppe eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="5aee3-315">The position at which to insert the group.</span></span></param>
        <param name="value"><span data-ttu-id="5aee3-316">Die einzufügende Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-316">The group to insert.</span></span></param>
        <summary><span data-ttu-id="5aee3-317">Fügt ein <see cref="T:System.Text.RegularExpressions.Group" />-Element in die Auflistung ein.</span><span class="sxs-lookup"><span data-stu-id="5aee3-317">Inserts a <see cref="T:System.Text.RegularExpressions.Group" /> into the collection.</span></span> <span data-ttu-id="5aee3-318">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-318">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-319">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-319">This method is not supported.</span></span> <span data-ttu-id="5aee3-320">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-320">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5aee3-321">Ruft einen Wert ab, der angibt, ob die Gruppenauflistung eine feste Größe aufweist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-321">Gets a value indicating whether the group collection has a fixed size.</span></span></summary>
        <value><span data-ttu-id="5aee3-322">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-322"><see langword="true" /> always.</span></span></value>
         <remarks>
           <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5aee3-323">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-323">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5aee3-324">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.GroupCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-324">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span> 

           ]]></format>
         </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5aee3-325">Die nullbasierte Indexposition der Gruppe in der Gruppenauflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-325">The zero-index position of the group in the group collection.</span></span></param>
        <summary><span data-ttu-id="5aee3-326">Ruft die Gruppe an der gewünschten Position ab.</span><span class="sxs-lookup"><span data-stu-id="5aee3-326">Gets the group in the desired position.</span></span></summary>
        <value><span data-ttu-id="5aee3-327">Die Gruppe an der gewünschten Position.</span><span class="sxs-lookup"><span data-stu-id="5aee3-327">The group in the desired position.</span></span></value>
         <remarks>
           <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5aee3-328">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-328">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5aee3-329">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.GroupCollection>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-329">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.IList> interface.</span></span> 

           ]]></format>
         </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-330">Ein Element kann nicht festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="5aee3-330">Cannot set an item.</span></span> <span data-ttu-id="5aee3-331">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-331">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5aee3-332">Die zu entfernende Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-332">The group to remove.</span></span></param>
        <summary><span data-ttu-id="5aee3-333">Entfernt ein <see cref="T:System.Text.RegularExpressions.Group" /> aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-333">Removes a <see cref="T:System.Text.RegularExpressions.Group" /> from the collection.</span></span> <span data-ttu-id="5aee3-334">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-334">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <returns><span data-ttu-id="5aee3-335">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-335">This method is not supported.</span></span> <span data-ttu-id="5aee3-336">Es wird kein Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="5aee3-336">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-337">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-337">This method is not supported.</span></span> <span data-ttu-id="5aee3-338">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-338">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="5aee3-339">Der nullbasierte Index der zu entfernenden Gruppe.</span><span class="sxs-lookup"><span data-stu-id="5aee3-339">The zero-based index of the group to remove.</span></span></param>
        <summary><span data-ttu-id="5aee3-340">Entfernt die <see cref="T:System.Text.RegularExpressions.Group" />-Klasse aus der Auflistung am angegebenen Index.</span><span class="sxs-lookup"><span data-stu-id="5aee3-340">Removes the <see cref="T:System.Text.RegularExpressions.Group" /> from the collection at the specified index.</span></span> <span data-ttu-id="5aee3-341">Beim Aufrufen dieser Methode wird immer eine <see cref="T:System.NotSupportedException" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5aee3-341">Calling this method always throws <see cref="T:System.NotSupportedException" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="5aee3-342">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5aee3-342">This method is not supported.</span></span> <span data-ttu-id="5aee3-343">Dies ist eine schreibgeschützte Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-343">This is a read-only collection.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out System.Text.RegularExpressions.Group value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] class System.Text.RegularExpressions.Group&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.GroupCollection.TryGetValue(System.String,System.Text.RegularExpressions.Group@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As Group) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] System::Text::RegularExpressions::Group ^ % value);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string *  -&gt; bool&#xA;override this.TryGetValue : string *  -&gt; bool" Usage="groupCollection.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" Index="0" FrameworkAlternate="netcore-3.0" />
        <Parameter Name="value" Type="System.Text.RegularExpressions.Group" RefType="out" Index="1" FrameworkAlternate="netcore-3.0" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="5aee3-344">Eine Zeichenfolge mit dem zu suchenden Gruppennamenschlüssel.</span><span class="sxs-lookup"><span data-stu-id="5aee3-344">A string with the group name key to look for.</span></span></param>
        <param name="value"><span data-ttu-id="5aee3-345">Wenn die Methode zurückgegeben wird, die Gruppe, deren Name <paramref name="key" /> ist, falls gefunden; anderenfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-345">When the method returns, the group whose name is <paramref name="key" />, if it is found; otherwise, <see langword="null" /> if not found.</span></span></param>
        <summary><span data-ttu-id="5aee3-346">Versucht, eine durch den angegebenen Namensschlüssel identifizierte Gruppe abzurufen, wenn diese in der Gruppenauflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="5aee3-346">Attempts to retrieve a group identified by the provided name key, if it exists in the group collection.</span></span></summary>
        <returns><span data-ttu-id="5aee3-347"><see langword="true" />, wenn eine anhand des angegebenen Namensschlüssel identifizierte Gruppe vor ist; anderenfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5aee3-347"><see langword="true" /> if a group identified by the provided name key exists; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Text.RegularExpressions.Group&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.GroupCollection.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IEnumerable(Of Group)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Group ^&gt; ^ Values { System::Collections::Generic::IEnumerable&lt;System::Text::RegularExpressions::Group ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : seq&lt;System.Text.RegularExpressions.Group&gt;" Usage="System.Text.RegularExpressions.GroupCollection.Values" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Text.RegularExpressions.Group&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5aee3-348">Ruft eine Gruppenenumeration mit allen Gruppen in der Gruppenauflistung ab.</span><span class="sxs-lookup"><span data-stu-id="5aee3-348">Gets a group enumeration with all the groups in the group collection.</span></span></summary>
        <value><span data-ttu-id="5aee3-349">Eine gruppenenumeration.</span><span class="sxs-lookup"><span data-stu-id="5aee3-349">A group enumeration.</span></span></value>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

## Remarks

<span data-ttu-id="5aee3-350">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="5aee3-350">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5aee3-351">Er kann nur verwendet werden, wenn die <xref:System.Text.RegularExpressions.GroupCollection>-Instanz in eine <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="5aee3-351">It can be used only when the <xref:System.Text.RegularExpressions.GroupCollection> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span> 

         ]]></format>
         </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
