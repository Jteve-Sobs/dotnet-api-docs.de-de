<Type Name="Group" FullName="System.Text.RegularExpressions.Group">
  <Metadata><Meta Name="ms.openlocfilehash" Value="30964121f92d2d5cd46997b52d4f25da9e93f043" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78785924" /></Metadata><TypeSignature Language="C#" Value="public class Group : System.Text.RegularExpressions.Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Group extends System.Text.RegularExpressions.Capture" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Text.RegularExpressions.Group" />
  <TypeSignature Language="VB.NET" Value="Public Class Group&#xA;Inherits Capture" />
  <TypeSignature Language="C++ CLI" Value="public ref class Group : System::Text::RegularExpressions::Capture" />
  <TypeSignature Language="F#" Value="type Group = class&#xA;    inherit Capture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Group extends System.Text.RegularExpressions.Capture" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Text.RegularExpressions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System" FromVersion="4.0.0.0" To="System.Text.RegularExpressions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Text.RegularExpressions.Capture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt die Ergebnisse einer einzelnen Erfassungsgruppe dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Erfassungs Gruppe kann aufgrund von quantifizierersätzen keine, eine oder mehrere Zeichen folgen in einer einzelnen Übereinstimmung erfassen. (Weitere Informationen finden Sie unter [Quantifizierer](~/docs/standard/base-types/quantifiers-in-regular-expressions.md).) Alle Teil Zeichenfolgen, die mit einer einzelnen Erfassungs Gruppe übereinstimmen, sind über die <xref:System.Text.RegularExpressions.Group.Captures%2A?displayProperty=nameWithType>-Eigenschaft verfügbar. Informationen zur letzten erfassten Teil Zeichenfolge können direkt über die Eigenschaften `Value` und `Index` aufgerufen werden. (Das heißt, die <xref:System.Text.RegularExpressions.Group> Instanz entspricht dem letzten Element der Auflistung, das von der <xref:System.Text.RegularExpressions.Group.Captures%2A>-Eigenschaft zurückgegeben wird, die die letzte von der Erfassungs Gruppe vorgenommene Erfassung widerspiegelt.)  
  
 Ein Beispiel hilft, diese Beziehung zwischen einem <xref:System.Text.RegularExpressions.Group>-Objekt und dem <xref:System.Text.RegularExpressions.CaptureCollection?displayProperty=nameWithType> zu verdeutlichen, das von der <xref:System.Text.RegularExpressions.Group.Captures%2A>-Eigenschaft zurückgegeben wird. Das Muster für reguläre Ausdrücke `(\b(\w+?)[,:;]?\s?)+[?.!]` mit ganzen Sätzen übereinstimmt. Der reguläre Ausdruck wird entsprechend der Darstellung in der folgenden Tabelle definiert:  
  
|Muster|BESCHREIBUNG|  
|-------------|-----------------|  
|`\b`|Der Vergleich beginnt an einer Wortgrenze.|  
|`(\w+?)`|Entspricht einem oder mehreren Wortzeichen, aber so wenigen Zeichen wie möglich. Dies ist die zweite (innere) Erfassungs Gruppe. (Die erste Erfassungs Gruppe enthält das `\b` Language-Element.)|  
|`[,:;]?`|Entspricht keinem oder einem Vorkommen eines Kommas, Doppelpunkts oder Semikolons.|  
|`\s?`|Entspricht keinem oder einem Vorkommen eines Leerzeichen.|  
|`(\b(\w+?)[,:;]?\s?)+`|Entsprechung für das Muster, das aus einer Wort Grenze besteht, einem oder mehreren Wort Zeichen, einem Interpunktions Zeichen und einem Leerzeichen. Dies ist die erste Erfassungsgruppe.|  
|`[?.!]`|Entspricht einem beliebigen Vorkommen eines Punkts, eines Fragezeichens oder eines Ausrufezeichens.|  
  
 In diesem Muster für reguläre Ausdrücke ist das unter Muster `(\w+?)` so konzipiert, dass es mehreren Wörtern innerhalb eines Satzes entspricht. Allerdings stellt der Wert des <xref:System.Text.RegularExpressions.Group> Objekts nur die letzte Übereinstimmung dar, die `(\w+?)` erfasst, während die <xref:System.Text.RegularExpressions.Group.Captures%2A>-Eigenschaft eine <xref:System.Text.RegularExpressions.CaptureCollection> zurückgibt, die den gesamten erfassten Text darstellt. Wie die Ausgabe zeigt, enthält der <xref:System.Text.RegularExpressions.CaptureCollection> für die zweite Erfassungs Gruppe vier Objekte. Die letzten entsprechen dem <xref:System.Text.RegularExpressions.Group> Objekt.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/cs/groupandcaptures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.class/vb/groupandcaptures1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Captures">
      <MemberSignature Language="C#" Value="public System.Text.RegularExpressions.CaptureCollection Captures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.RegularExpressions.CaptureCollection Captures" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Captures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captures As CaptureCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::RegularExpressions::CaptureCollection ^ Captures { System::Text::RegularExpressions::CaptureCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captures : System.Text.RegularExpressions.CaptureCollection" Usage="System.Text.RegularExpressions.Group.Captures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.CaptureCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung aller der Erfassungsgruppe entsprechenden Erfassungsübereinstimmungen in der Reihenfolge von innen nach außen und von links nach rechts ab (oder in der Reihenfolge von innen nach außen und von rechts nach links bei einer Änderung des regulären Ausdrucks mit der <see cref="F:System.Text.RegularExpressions.RegexOptions.RightToLeft" />-Option). Die Auflistung kann 0 (null) oder mehr Elemente enthalten.</summary>
        <value>Die Auflistung der Teilzeichenfolge, die mit der Gruppe übereinstimmen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Quantifizierer nicht für eine Erfassungs Gruppe übernommen wird, enthält die Auflistung, die von der <xref:System.Text.RegularExpressions.Group.Captures%2A>-Eigenschaft zurückgegeben wird, ein einzelnes <xref:System.Text.RegularExpressions.Capture> Objekt, das Informationen zur gleichen Teil Zeichenfolge wie das <xref:System.Text.RegularExpressions.Group>-Objekt bereitstellt. Dies wird im folgenden Beispiel veranschaulicht. Es definiert einen regulären Ausdruck, `\b(\w+)\b`, der ein einzelnes Wort aus einem Satz extrahiert. Das <xref:System.Text.RegularExpressions.Group>-Objekt erfasst das Wort "This", und das einzelne Objekt im <xref:System.Text.RegularExpressions.CaptureCollection> enthält Informationen zur gleichen Erfassung.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures1.cs#1)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures1.vb#1)]  
  
 Das tatsächliche Hilfsprogramm der <xref:System.Text.RegularExpressions.Group.Captures%2A>-Eigenschaft tritt auf, wenn ein Quantifizierer auf eine Erfassungs Gruppe angewendet wird, sodass die Gruppe mehrere Teil Zeichenfolgen in einem einzigen regulären Ausdruck erfasst. In diesem Fall enthält das <xref:System.Text.RegularExpressions.Group> Objektinformationen über die zuletzt erfasste Teil Zeichenfolge, während die Eigenschaft <xref:System.Text.RegularExpressions.Group.Captures%2A> Informationen zu allen von der Gruppe erfassten Teil Zeichenfolgen enthält. Im folgenden Beispiel entspricht der reguläre Ausdruck `\b(\w+\s*)+\.` einem vollständigen Satz, der in einem bestimmten Zeitraum endet. Die Gruppe `(\w+\s*)+` erfasst die einzelnen Wörter in der Auflistung. Da die <xref:System.Text.RegularExpressions.Group> Auflistung nur Informationen über die zuletzt erfasste Teil Zeichenfolge enthält, wird das letzte Wort im Satz "Satz" erfasst. Allerdings ist jedes von der Gruppe erfasste Wort in der Auflistung verfügbar, die von der <xref:System.Text.RegularExpressions.Group.Captures%2A>-Eigenschaft zurückgegeben wird.  
  
 [!code-csharp[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/cs/captures2.cs#2)]
 [!code-vb[System.Text.RegularExpressions.Group.Captures#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.text.regularexpressions.group.captures/vb/captures2.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/base-types/grouping-constructs-in-regular-expressions.md">Gruppierungskonstrukte in regulären Ausdrücken</related>
        <related type="Article" href="~/docs/standard/base-types/quantifiers-in-regular-expressions.md">Quantifizierer in regulären Ausdrücken</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Text.RegularExpressions.Group.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt der Name der Erfassungsgruppe, die die aktuelle Instanz darstellt.</summary>
        <value>Der Name der Erfassungsgruppe, die die aktuelle Instanz darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:System.Text.RegularExpressions.Group.Success" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Success As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Success : bool" Usage="System.Text.RegularExpressions.Group.Success" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Übereinstimmung erfolgreich ist.</summary>
        <value><see langword="true" />, wenn die Übereinstimmung erfolgreich ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Success`-Eigenschaft ist true, wenn mindestens eine Teil Zeichenfolge von dieser Gruppe aufgezeichnet wurde. Dies entspricht dem booleschen Ausdruck (Group. Erfassungen. Count > 0).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Text.RegularExpressions.Group Synchronized (System.Text.RegularExpressions.Group inner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.RegularExpressions.Group Synchronized(class System.Text.RegularExpressions.Group inner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.RegularExpressions.Group.Synchronized(System.Text.RegularExpressions.Group)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (inner As Group) As Group" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::RegularExpressions::Group ^ Synchronized(System::Text::RegularExpressions::Group ^ inner);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.Text.RegularExpressions.Group -&gt; System.Text.RegularExpressions.Group" Usage="System.Text.RegularExpressions.Group.Synchronized inner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Text.RegularExpressions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.RegularExpressions.Group</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inner" Type="System.Text.RegularExpressions.Group" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="inner">Das <see cref="T:System.Text.RegularExpressions.Group" />-Eingabeobjekt.</param>
        <summary>Gibt ein dem bereitgestellten Objekt entsprechendes <see langword="Group" />-Objekt zurück, das auf sichere Weise von mehreren Threads gemeinsam verwendet werden kann.</summary>
        <returns>Das <see langword="Group" />-Objekt eines regulären Ausdrucks.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="inner" /> ist <see langword="null" /></exception>
      </Docs>
    </Member>
  </Members>
</Type>
