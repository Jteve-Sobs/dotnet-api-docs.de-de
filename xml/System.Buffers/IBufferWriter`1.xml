<Type Name="IBufferWriter&lt;T&gt;" FullName="System.Buffers.IBufferWriter&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="674f0a0d53c9622f7a10d3a2b32626681056eef4" /><Meta Name="ms.sourcegitcommit" Value="9e7aa84070156026697d2898b5311e6c025a1e6a" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/28/2019" /><Meta Name="ms.locfileid" Value="56996719" /></Metadata><TypeSignature Language="C#" Value="public interface IBufferWriter&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBufferWriter`1&lt;T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.IBufferWriter`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBufferWriter(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IBufferWriter" />
  <TypeSignature Language="F#" Value="type IBufferWriter&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">Der Typ der Elemente in der <see cref="T:System.Buffers.IBufferWriter`1" />.</typeparam>
    <summary>Stellt eine Ausgabesenke dar, in die <typeparamref name="T" />-Daten geschrieben werden können.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public void Advance (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advance(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.Advance(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Advance (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Advance(int count);" />
      <MemberSignature Language="F#" Value="abstract member Advance : int -&gt; unit" Usage="iBufferWriter.Advance count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">Die Anzahl der in <see cref="T:System.Span`1" /> oder <see cref="T:System.Memory`1" /> geschriebenen Datenelemente.</param>
        <summary>Teilt <see cref="T:System.Buffers.IBufferWriter`1" /> mit, dass <paramref name="count" /> Datenelemente in die Ausgabe <see cref="T:System.Span`1" /> oder <see cref="T:System.Memory`1" /> geschrieben wurden.</summary>
        <remarks>Sie müssen einen neuen Puffer anfordern, nach dem Aufruf von vorab, um den Vorgang fortzusetzen, weitere Daten geschrieben. Sie können nicht auf einen Puffer, der zuvor abgerufenen schreiben.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemory">
      <MemberSignature Language="C#" Value="public Memory&lt;T&gt; GetMemory (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Memory`1&lt;!T&gt; GetMemory(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.GetMemory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemory (Optional sizeHint As Integer = 0) As Memory(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetMemory : int -&gt; Memory&lt;'T&gt;" Usage="iBufferWriter.GetMemory sizeHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint">Die Mindestlänge des zurückgegebenen <see cref="T:System.Memory`1" />-Elements. Wenn dieser Wert 0 lautet, wird ein nicht leerer Puffer zurückgegeben.</param>
        <summary>Gibt ein <see cref="T:System.Memory`1" />-Element zum Zurückschreiben zurück, das mindestens die angeforderte (von <paramref name="sizeHint" /> angegebene) Größe aufweist.</summary>
        <returns>Ein <see cref="T:System.Memory`1" />-Element, dessen Größe mindestens <paramref name="sizeHint" /> beträgt. Gibt einen nicht leeren Puffer zurück, wenn <paramref name="sizeHint" /> 0 ist.</returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[  

Es gibt keine Garantie, dass aufeinander folgende Aufrufe im gleichen Puffer oder in der gleichen Größe Puffer zurückgegeben werden.

Dies muss nie zurückgeben <xref:System.Span%601.Empty?displayProperty=nameWithType>, aber es kann auslösen, wenn die Größe des angeforderten Puffers nicht verfügbar ist.

Sie müssen einen neuen Puffer anfordern, nach dem Aufruf `Advance` um den Vorgang fortzusetzen, weitere Daten schreiben Sie können nicht auf einen Puffer, der zuvor abgerufenen geschrieben werden.

         ]]></format>
         </remarks>
         <exception cref="T:System.OutOfMemoryException">Die angeforderte Puffergröße ist nicht verfügbar.</exception>        
      </Docs>
    </Member>
    <Member MemberName="GetSpan">
      <MemberSignature Language="C#" Value="public Span&lt;T&gt; GetSpan (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Span`1&lt;!T&gt; GetSpan(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.IBufferWriter`1.GetSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpan (Optional sizeHint As Integer = 0) As Span(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetSpan : int -&gt; Span&lt;'T&gt;" Usage="iBufferWriter.GetSpan sizeHint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint">Die Mindestlänge des zurückgegebenen <see cref="T:System.Span`1" />-Elements. Wenn dieser Wert 0 lautet, wird ein nicht leerer Puffer zurückgegeben.</param>
        <summary>Gibt ein <see cref="T:System.Span`1" />-Element zum Zurückschreiben zurück, das mindestens die angeforderte (von <paramref name="sizeHint" /> angegebene) Größe aufweist.</summary>
        <returns>Ein <see cref="T:System.Span`1" />-Element, dessen Größe mindestens <paramref name="sizeHint" /> beträgt. Gibt einen nicht leeren Puffer zurück, wenn <paramref name="sizeHint" /> 0 ist.</returns>
        <remarks>  
          <format type="text/markdown"><![CDATA[
  
Es gibt keine Garantie, dass aufeinander folgende Aufrufe im gleichen Puffer oder in der gleichen Größe Puffer zurückgegeben werden.

Diese Methode muss nie zurückgeben <xref:System.Span%601.Empty?displayProperty=nameWithType>, aber es kann auslösen, wenn die Größe des angeforderten Puffers nicht verfügbar ist.

Sie müssen einen neuen Puffer anfordern, nach dem Aufruf `Advance` um den Vorgang fortzusetzen, weitere Daten schreiben Sie können nicht auf einen Puffer, der zuvor abgerufenen geschrieben werden.
         ]]></format>
         </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
