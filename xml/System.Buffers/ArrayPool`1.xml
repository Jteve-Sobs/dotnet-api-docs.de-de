<Type Name="ArrayPool&lt;T&gt;" FullName="System.Buffers.ArrayPool&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c365ab2f2412036b41ba89388ab6a1187f6696d2" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36647248" /></Metadata><TypeSignature Language="C#" Value="public abstract class ArrayPool&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ArrayPool`1&lt;T&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayPool`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArrayPool(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayPool abstract" />
  <TypeSignature Language="F#" Value="type ArrayPool&lt;'T&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Buffers</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="f0e6d-101">Der Typ der Objekte, die im Ressourcenpool.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-101">The type of the objects that are in the resource pool.</span></span></typeparam>
    <summary><span data-ttu-id="f0e6d-102">Stellt einen Ressourcenpool bereit, der die Wiederverwendung von Instanzen des Typs <see cref="T:T[]" /> erlaubt</span><span class="sxs-lookup"><span data-stu-id="f0e6d-102">Provides a resource pool that enables reusing instances of type <see cref="T:T[]" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="f0e6d-103">Mithilfe der <xref:System.Buffers.ArrayPool%601> Klasse mieten und Zurückgeben von Puffern (mithilfe der <xref:System.Buffers.ArrayPool%601.Rent%2A> und <xref:System.Buffers.ArrayPool%601.Return%2A> Methoden) kann die Leistung in Situationen, in denen Arrays erstellt und zerstört wird häufig, verbessert, was erhebliche hohe speicherauslastung auf dem Garbage Collector.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-103">Using the <xref:System.Buffers.ArrayPool%601> class to rent and return buffers (using the <xref:System.Buffers.ArrayPool%601.Rent%2A> and <xref:System.Buffers.ArrayPool%601.Return%2A> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</span></span>
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="f0e6d-104">Diese Klasse ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-104">This class is thread-safe.</span></span> <span data-ttu-id="f0e6d-105">Alle Member können von mehreren Threads gleichzeitig verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-105">All members may be used by multiple threads concurrently.</span></span></threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArrayPool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArrayPool();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0e6d-106">Initialisiert eine neue Instanz der <see cref="T:System.Buffers.ArrayPool`1" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-106">Initializes a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="f0e6d-107">Beachten Sie, dass dieser Konstruktor ist geschützt. Es kann nur von abgeleiteten Klassen aufgerufen werden die <xref:System.Buffers.ArrayPool%601> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-107">Note that this constructor is protected; it can only be called by classes derived from the <xref:System.Buffers.ArrayPool%601> class.</span></span> 
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f0e6d-108">Erstellt eine neue Instanz der <see cref="T:System.Buffers.ArrayPool`1" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-108">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></summary>
        <returns><span data-ttu-id="f0e6d-109">Eine neue Instanz der <see cref="T:System.Buffers.ArrayPool`1" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-109">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class.</span></span></returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Create (int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Buffers.ArrayPool`1&lt;!T&gt; Create(int32 maxArrayLength, int32 maxArraysPerBucket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (maxArrayLength As Integer, maxArraysPerBucket As Integer) As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Buffers::ArrayPool&lt;T&gt; ^ Create(int maxArrayLength, int maxArraysPerBucket);" />
      <MemberSignature Language="F#" Value="static member Create : int * int -&gt; System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Create (maxArrayLength, maxArraysPerBucket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxArrayLength" Type="System.Int32" />
        <Parameter Name="maxArraysPerBucket" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxArrayLength"><span data-ttu-id="f0e6d-110">Die maximale Länge einer Instanz des Arrays, die im Pool gespeichert werden kann.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-110">The maximum length of an array instance that may be stored in the pool.</span></span></param>
        <param name="maxArraysPerBucket"><span data-ttu-id="f0e6d-111">Die maximale Anzahl von Instanzen eines Arrays, die in jedem Bucket im Pool gespeichert werden kann.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-111">The maximum number of array instances that may be stored in each bucket in the pool.</span></span> <span data-ttu-id="f0e6d-112">Für einen schnelleren Zugriff gruppiert der Pool Arrays von unterschiedlicher Länge in Buckets.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-112">The pool groups arrays of similar lengths into buckets for faster access.</span></span></param>
        <summary><span data-ttu-id="f0e6d-113">Erstellt eine neue Instanz der <see cref="T:System.Buffers.ArrayPool`1" />-Klasse mit der angegebenen Konfiguration.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-113">Creates a new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class using the specifed configuration.</span></span></summary>
        <returns><span data-ttu-id="f0e6d-114">Eine neue Instanz der <see cref="T:System.Buffers.ArrayPool`1" />-Klasse mit dem angegebenen Konfigurationsnamen.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-114">A new instance of the <see cref="T:System.Buffers.ArrayPool`1" /> class with the specified configuration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<span data-ttu-id="f0e6d-115">Die Instanz von der <xref:System.Buffers.ArrayPool%601> Klasse, die von dieser Methode erstellte gruppiert Arrays in Buckets, ohne mehr als `maxArraysPerBucket` in jedem Bucket, und klicken Sie mit diesen Arrays nicht überschreiten `maxArrayLength` umfassen.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-115">The instance of the <xref:System.Buffers.ArrayPool%601> class created by this method will group arrays into buckets, with no more than `maxArraysPerBucket` in each bucket, and with those arrays not exceeding `maxArrayLength` in length.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rent">
      <MemberSignature Language="C#" Value="public abstract T[] Rent (int minimumLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] Rent(int32 minimumLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Rent (minimumLength As Integer) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;T&gt; ^ Rent(int minimumLength);" />
      <MemberSignature Language="F#" Value="abstract member Rent : int -&gt; 'T[]" Usage="arrayPool.Rent minimumLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minimumLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minimumLength"><span data-ttu-id="f0e6d-116">Die minimale Länge des Arrays.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-116">The minimum length of the array.</span></span></param>
        <summary><span data-ttu-id="f0e6d-117">Ruft einen Puffer ab, der die erforderliche Mindestlänge aufweist.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-117">Retrieves a buffer that is at least the requested length.</span></span></summary>
        <returns><span data-ttu-id="f0e6d-118">Ein Array vom Typ <see cref="T:T[]" />, das mindestens <paramref name="minimumLength" /> lang ist.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-118">An array of type <see cref="T:T[]" /> that is at least <paramref name="minimumLength" /> in length.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f0e6d-119">Dieser Puffer wird an den Aufrufer ausgeliehen und zurückgegeben werden sollen, auf dem gleichen Pool unter Verwendung der <xref:System.Buffers.ArrayPool%601.Return%2A> Methode, sodass die It bei nachfolgenden Aufrufen wiederverwendet werden kann die <xref:System.Buffers.ArrayPool%601.Rent%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-119">This buffer is loaned to the caller and should be returned to the same pool using the <xref:System.Buffers.ArrayPool%601.Return%2A> method, so that it can be reused in subsequent calls to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method.</span></span> <span data-ttu-id="f0e6d-120">Fehler bei der ein gepachteten Puffer zurückgegeben ist kein schwerwiegender Fehler.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-120">Failure to return a rented buffer is not a fatal error.</span></span> <span data-ttu-id="f0e6d-121">Allerdings kann auf die Anwendungsleistung verringert, führen wie der Pool möglicherweise erstellen Sie einen neuen Puffer ersetzt die verloren gehen.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-121">However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Return">
      <MemberSignature Language="C#" Value="public abstract void Return (T[] array, bool clearArray = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Return(!T[] array, bool clearArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Return (array As T(), Optional clearArray As Boolean = false)" />
      <MemberSignature Language="F#" Value="abstract member Return : 'T[] * bool -&gt; unit" Usage="arrayPool.Return (array, clearArray)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="clearArray" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="f0e6d-122">Ein Puffer, der dem Pool zurückgegeben werden soll, der zuvor mithilfe der <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />-Methode abgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-122">A buffer to return to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method.</span></span></param>
        <param name="clearArray"><span data-ttu-id="f0e6d-123">Gibt an, ob die Inhalte des Puffers vor der Wiederverwendung gelöscht werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-123">Indicates whether the contents of the buffer should be cleared before reuse.</span></span> <span data-ttu-id="f0e6d-124">Wenn <paramref name="clearArray" /> auf <see langword="true" /> festgelegt ist, und wenn der Pool den Puffer für eine weitere Wiederverwendung speichert, löscht die Methode <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> die Inhalte des <paramref name="array" />-Objekts, sodass der folgende Aufrufer, der die <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />-Methode verwendet, den Inhalt des vorherigen Aufrufers nicht sieht.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-124">If <paramref name="clearArray" /> is set to <see langword="true" />, and if the pool will store the buffer to enable subsequent reuse, the <see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /> method will clear the <paramref name="array" /> of its contents so that a subsequent caller using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method will not see the content of the previous caller.</span></span> <span data-ttu-id="f0e6d-125">Wenn <paramref name="clearArray" /> auf <see langword="false" /> festgelegt ist, oder wenn der Pool den Puffer freigibt, bleiben die Inhalte des Arrays unverändert.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-125">If <paramref name="clearArray" /> is set to <see langword="false" /> or if the pool will release the buffer, the array's contents are left unchanged.</span></span></param>
        <summary><span data-ttu-id="f0e6d-126">Ein Array wird dem Pool zurückgegeben, das zuvor mithilfe der <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" />-Methode auf der gleichen <see cref="T:System.Buffers.ArrayPool`1" />-Instanz abgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-126">Returns an array to the pool that was previously obtained using the <see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /> method on the same <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f0e6d-127">Nachdem Sie ein Puffer an den Pool zurückgegeben wurde, kann der Aufrufer gibt alle den Besitz des Puffers und muss nicht verwenden.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-127">Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</span></span> <span data-ttu-id="f0e6d-128">Der Verweis zurückgegeben wird, über einen Aufruf der <xref:System.Buffers.ArrayPool%601.Rent%2A> Methode muss nur zurückgegeben werden, mithilfe der <xref:System.Buffers.ArrayPool%601.Return%2A> -Methode einmal.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-128">The reference returned from a given call to the <xref:System.Buffers.ArrayPool%601.Rent%2A> method must only be returned using the <xref:System.Buffers.ArrayPool%601.Return%2A> method once.</span></span> <span data-ttu-id="f0e6d-129">Der Standardwert <xref:System.Buffers.ArrayPool%601> möglicherweise daran Festhalten der zurückgegebene Puffer um Mieten ihn dann erneut, oder er kann frei, den zurückgegebenen Puffer Wenn festgestellt wird, der Pool bereits genügend Puffer gespeichert hat.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-129">The default <xref:System.Buffers.ArrayPool%601> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Shared">
      <MemberSignature Language="C#" Value="public static System.Buffers.ArrayPool&lt;T&gt; Shared { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Buffers.ArrayPool`1&lt;!T&gt; Shared" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayPool`1.Shared" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Shared As ArrayPool(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Buffers::ArrayPool&lt;T&gt; ^ Shared { System::Buffers::ArrayPool&lt;T&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Shared : System.Buffers.ArrayPool&lt;'T&gt;" Usage="System.Buffers.ArrayPool&lt;'T&gt;.Shared" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Buffers</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Buffers.ArrayPool&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f0e6d-130">Ruft eine freigegebene <see cref="T:System.Buffers.ArrayPool`1" />-Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-130">Gets a shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></summary>
        <value><span data-ttu-id="f0e6d-131">Eine freigegebene <see cref="T:System.Buffers.ArrayPool`1" /> Instanz.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-131">A shared <see cref="T:System.Buffers.ArrayPool`1" /> instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="f0e6d-132">Der freigegebene Pool stellt eine Standardimplementierung von der <xref:System.Buffers.ArrayPool%601> -Klasse, die für die allgemeine Anwendbarkeit vorgesehen ist.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-132">The shared pool provides a default implementation of the <xref:System.Buffers.ArrayPool%601> class that's intended for general applicability.</span></span> <span data-ttu-id="f0e6d-133">Eine freigegebene Klasse verwaltet Arrays mit mehreren Größen und möglicherweise übergeben wieder ein größeres Array als angefordert wurde, aber es wird nie übergeben wieder ein kleineres Array als angefordert wurden.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-133">A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</span></span> <span data-ttu-id="f0e6d-134">Rackplatz einen Puffer über eine gemeinsam genutzte Klasse mit dem <xref:System.Buffers.ArrayPool%601.Rent%2A> Methode führt dazu, in einem vorhandenen Puffer aus dem Pool ausgeführt wird, wenn es sich bei ein entsprechenden Puffer verfügbar ist oder in einem neuen Puffer zugeordnet werden, wenn eine nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f0e6d-134">Renting a buffer from a shared class using the <xref:System.Buffers.ArrayPool%601.Rent%2A> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</span></span>
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>