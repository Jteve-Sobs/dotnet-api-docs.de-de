<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ArrayPool`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5924af3bcdfd42b06e9a7eaf3e33460653c01b53b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">924af3bcdfd42b06e9a7eaf3e33460653c01b53b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>The type of the objects that are in the resource pool.</source>
          <target state="translated">Der Typ der Objekte, die im Ressourcenpool sind.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Buffers.ArrayPool`1">
          <source>Provides a resource pool that enables reusing instances of type <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph>.</source>
          <target state="translated">Stellt einen Ressourcenpool bereit, der die Wiederverwendung von Instanzen des Typs <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph> erlaubt</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>Using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class to rent and return buffers (using the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> methods) can improve performance in situations where arrays are created and destroyed frequently, resulting in significant memory pressure on the garbage collector.</source>
          <target state="translated">Mithilfe der <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> Klasse zu vermieten und Zurückgeben von Puffern (mithilfe der <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> Methoden) kann die Leistung in Situationen, in denen Arrays erstellt und zerstört häufig, verbessern, was Belastung für den Arbeitsspeicher auf dem Garbage Collector.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>This class is thread-safe.</source>
          <target state="translated">Diese Klasse ist threadsicher.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Buffers.ArrayPool`1">
          <source>All members may be used by multiple threads concurrently.</source>
          <target state="translated">Alle Member können von mehreren Threads gleichzeitig verwendet werden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.#ctor">
          <source>Note that this constructor is protected; it can only be called by classes derived from the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class.</source>
          <target state="translated">Beachten Sie, dass dieser Konstruktor ist geschützt. Es kann nur von von abgeleiteten Klassen aufgerufen werden der <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">Erstellt eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class.</source>
          <target state="translated">Eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The maximum length of an array instance that may be stored in the pool.</source>
          <target state="translated">Die maximale Länge einer Instanz des Arrays, die im Pool gespeichert werden kann.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The maximum number of array instances that may be stored in each bucket in the pool.</source>
          <target state="translated">Die maximale Anzahl von Instanzen eines Arrays, die in jedem Bucket im Pool gespeichert werden kann.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The pool groups arrays of similar lengths into buckets for faster access.</source>
          <target state="translated">Für einen schnelleren Zugriff gruppiert der Pool Arrays von unterschiedlicher Länge in Buckets.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class using the specifed configuration.</source>
          <target state="translated">Erstellt eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>-Klasse mit der angegebenen Konfiguration.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>A new instance of the <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> class with the specified configuration.</source>
          <target state="translated">Eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>-Klasse mit dem angegebenen Konfigurationsnamen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Create(System.Int32,System.Int32)">
          <source>The instance of the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class created by this method will group arrays into buckets, with no more than <ph id="ph2">`maxArraysPerBucket`</ph> in each bucket, and with those arrays not exceeding <ph id="ph3">`maxArrayLength`</ph> in length.</source>
          <target state="translated">Die Instanz von der <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> Klasse, die von dieser Methode erstellt werden Arrays in Buckets gruppieren und ohne mehr als <ph id="ph2">`maxArraysPerBucket`</ph> in einem Bucket, und klicken Sie mit diesen Arrays nicht überschreiten <ph id="ph3">`maxArrayLength`</ph> lang.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>The minimum length of the array.</source>
          <target state="translated">Die minimale Länge des Arrays.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>Retrieves a buffer that is at least the requested length.</source>
          <target state="translated">Ruft einen Puffer ab, der die erforderliche Mindestlänge aufweist.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph> that is at least <ph id="ph2">&lt;paramref name="minimumLength" /&gt;</ph> in length.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:T[]" /&gt;</ph>, das mindestens <ph id="ph2">&lt;paramref name="minimumLength" /&gt;</ph> lang ist.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>This buffer is loaned to the caller and should be returned to the same pool using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> method, so that it can be reused in subsequent calls to the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method.</source>
          <target state="translated">Dieser Puffer wird an den Aufrufer ausgeliehen und zurückgegeben werden soll, auf dem gleichen Pool unter Verwendung der <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> Methode, sodass die It in nachfolgenden Aufrufen wiederverwendet werden kann die <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>Failure to return a rented buffer is not a fatal error.</source>
          <target state="translated">Fehler zurückzugebenden gepachteten Puffer ist nicht schwerwiegender Fehler.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Rent(System.Int32)">
          <source>However, it may lead to decreased application performance, as the pool may need to create a new buffer to replace the lost one.</source>
          <target state="translated">Es kann jedoch für eine eine verringerte Anwendungsleistung, führen, wie der Pool möglicherweise erstellen Sie einen neuen Puffer um verlorene zu ersetzen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>A buffer to return to the pool that was previously obtained using the <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method.</source>
          <target state="translated">Ein Puffer, der dem Pool zurückgegeben werden soll, der zuvor mithilfe der <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph>-Methode abgerufen wurde.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Indicates whether the contents of the buffer should be cleared before reuse.</source>
          <target state="translated">Gibt an, ob die Inhalte des Puffers vor der Wiederverwendung gelöscht werden sollen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="true" /&gt;</ph>, and if the pool will store the buffer to enable subsequent reuse, the <ph id="ph3">&lt;see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /&gt;</ph> method will clear the <ph id="ph4">&lt;paramref name="array" /&gt;</ph> of its contents so that a subsequent caller using the <ph id="ph5">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method will not see the content of the previous caller.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> auf <ph id="ph2">&lt;see langword="true" /&gt;</ph> festgelegt ist, und wenn der Pool den Puffer für eine weitere Wiederverwendung speichert, löscht die Methode <ph id="ph3">&lt;see cref="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)" /&gt;</ph> die Inhalte des <ph id="ph4">&lt;paramref name="array" /&gt;</ph>-Objekts, sodass der folgende Aufrufer, der die <ph id="ph5">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph>-Methode verwendet, den Inhalt des vorherigen Aufrufers nicht sieht.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> is set to <ph id="ph2">&lt;see langword="false" /&gt;</ph> or if the pool will release the buffer, the array's contents are left unchanged.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;paramref name="clearArray" /&gt;</ph> auf <ph id="ph2">&lt;see langword="false" /&gt;</ph> festgelegt ist, oder wenn der Pool den Puffer freigibt, bleiben die Inhalte des Arrays unverändert.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Returns an array to the pool that was previously obtained using the <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph> method on the same <ph id="ph2">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">Ein Array wird dem Pool zurückgegeben, das zuvor mithilfe der <ph id="ph1">&lt;see cref="M:System.Buffers.ArrayPool`1.Rent(System.Int32)" /&gt;</ph>-Methode auf der gleichen <ph id="ph2">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>-Instanz abgerufen wurde.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>Once a buffer has been returned to the pool, the caller gives up all ownership of the buffer and must not use it.</source>
          <target state="translated">Nachdem Sie ein Puffer an den Pool zurückgegeben wurde, kann der Aufrufer aufgibt alle den Besitz des Puffers und muss nicht verwenden.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>The reference returned from a given call to the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method must only be returned using the <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> method once.</source>
          <target state="translated">Der Verweis zurückgegeben wird, über einen Aufruf der <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> -Methode muss nur zurückgegeben werden, mithilfe der <ph id="ph2">&lt;xref:System.Buffers.ArrayPool%601.Return%2A&gt;</ph> -Methode einmal.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Buffers.ArrayPool`1.Return(`0[],System.Boolean)">
          <source>The default <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> may hold onto the returned buffer in order to rent it again, or it may release the returned buffer if it's determined that the pool already has enough buffers stored.</source>
          <target state="translated">Die Standardeinstellung <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> möglicherweise daran Festhalten der zurückgegebene Puffer um vermieten erneut, oder es kann freigeben den zurückgegebenen Puffer, wenn feststellbar ist, dass der Pool bereits ausreichend Puffer gespeichert ist.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>Gets a shared <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">Ruft eine freigegebene <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph>-Instanz ab.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>A shared <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> instance.</source>
          <target state="translated">Eine freigegebene <ph id="ph1">&lt;see cref="T:System.Buffers.ArrayPool`1" /&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>The shared pool provides a default implementation of the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> class that's intended for general applicability.</source>
          <target state="translated">Der freigegebene Pool stellt eine Standardimplementierung von der <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601&gt;</ph> -Klasse, die für die allgemeine Anwendbarkeit vorgesehen ist.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>A shared class maintains arrays of multiple sizes, and may hand back a larger array than was actually requested, but it will never hand back a smaller array than was requested.</source>
          <target state="translated">Eine gemeinsam genutzte Klasse verwaltet Arrays mit verschiedenen Größen und möglicherweise weiter wieder ein größeres Array als angefordert wurde, aber es wird nie manuell wieder eine kleinere Array als angefordert wurde.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Buffers.ArrayPool`1.Shared">
          <source>Renting a buffer from a shared class using the <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> method will result in an existing buffer being taken from the pool if an appropriate buffer is available or in a new buffer being allocated if one is not available.</source>
          <target state="translated">Mieten einen Puffer mit einer freigegebenen Klasse unter Verwendung der <ph id="ph1">&lt;xref:System.Buffers.ArrayPool%601.Rent%2A&gt;</ph> Methode führt zu einem vorhandenen Puffer aus dem Pool entnommen werden, falls ein geeigneter Puffer verfügbar ist oder in ein neuer Puffer reserviert werden, wenn mindestens eine nicht verfügbar ist.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>