<Type Name="ArrayBufferWriter&lt;T&gt;" FullName="System.Buffers.ArrayBufferWriter&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="282a8090e79b268709a4302666f83e718742e97b" /><Meta Name="ms.sourcegitcommit" Value="2b0967e04b047f6709322418d97215dfcef6a938" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/20/2019" /><Meta Name="ms.locfileid" Value="74235434" /></Metadata><TypeSignature Language="C#" Value="public sealed class ArrayBufferWriter&lt;T&gt; : System.Buffers.IBufferWriter&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ArrayBufferWriter`1&lt;T&gt; extends System.Object implements class System.Buffers.IBufferWriter`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Buffers.ArrayBufferWriter`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ArrayBufferWriter(Of T)&#xA;Implements IBufferWriter(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ArrayBufferWriter sealed : System::Buffers::IBufferWriter&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ArrayBufferWriter&lt;'T&gt; = class&#xA;    interface IBufferWriter&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Memory</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Buffers.IBufferWriter&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T"><span data-ttu-id="20d78-101">Der Typ der Elemente in dieser <see cref="T:System.Buffers.ArrayBufferWriter`1" /> Instanz.</span><span class="sxs-lookup"><span data-stu-id="20d78-101">The type of the items in this <see cref="T:System.Buffers.ArrayBufferWriter`1" /> instance.</span></span></typeparam>
    <summary><span data-ttu-id="20d78-102">Stellt eine heapbasierte, arraygesicherte Ausgabesenke dar, in die</span><span class="sxs-lookup"><span data-stu-id="20d78-102">Represents a heap-based, array-backed output sink into which</span></span> <typeparam name="T" /> <span data-ttu-id="20d78-103">Daten geschrieben werden können.</span><span class="sxs-lookup"><span data-stu-id="20d78-103">data can be written.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayBufferWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayBufferWriter`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayBufferWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d78-104">Erstellt eine <see cref="T:System.Buffers.ArrayBufferWriter`1" />-Instanz, in die Daten geschrieben werden können, mit der standardmäßigen Anfangskapazität.</span><span class="sxs-lookup"><span data-stu-id="20d78-104">Creates an instance of an <see cref="T:System.Buffers.ArrayBufferWriter`1" /> to which data can be written, with the default initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayBufferWriter (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayBufferWriter`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayBufferWriter(int initialCapacity);" />
      <MemberSignature Language="F#" Value="new System.Buffers.ArrayBufferWriter&lt;'T&gt; : int -&gt; System.Buffers.ArrayBufferWriter&lt;'T&gt;" Usage="new System.Buffers.ArrayBufferWriter&lt;'T&gt; initialCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity"><span data-ttu-id="20d78-105">Die Mindestkapazität zum Initialisieren der zugrunde liegenden Puffer.</span><span class="sxs-lookup"><span data-stu-id="20d78-105">The minimum capacity with which to initialize the underlying buffer.</span></span></param>
        <summary><span data-ttu-id="20d78-106">Erstellt eine <see cref="T:System.Buffers.ArrayBufferWriter`1" />-Instanz, in die Daten geschrieben werden können, mit einer angegebenen Anfangskapazität.</span><span class="sxs-lookup"><span data-stu-id="20d78-106">Creates an instance of an <see cref="T:System.Buffers.ArrayBufferWriter`1" /> to which data can be written, with a specified initial capacity.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20d78-107"><paramref name="initialCapacity" /> ist kleiner oder gleich 0.</span><span class="sxs-lookup"><span data-stu-id="20d78-107"><paramref name="initialCapacity" /> is less than or equal to 0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public void Advance (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Advance(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayBufferWriter`1.Advance(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Advance (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Advance(int count);" />
      <MemberSignature Language="F#" Value="abstract member Advance : int -&gt; unit&#xA;override this.Advance : int -&gt; unit" Usage="arrayBufferWriter.Advance count" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Buffers.IBufferWriter`1.Advance(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="20d78-108">Die Anzahl der geschriebenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="20d78-108">The number of items written.</span></span></param>
        <summary><span data-ttu-id="20d78-109">Teilt <see cref="T:System.Buffers.IBufferWriter`1" /> mit, dass <paramref name="count" /> Elemente in die Ausgabe <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="20d78-109">Notifies the <see cref="T:System.Buffers.IBufferWriter`1" /> that <paramref name="count" /> items were written to the output <see cref="T:System.Span`1" />/<see cref="T:System.Memory`1" /></span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="20d78-110">Nachdem Sie `Advance` aufgerufen haben, müssen Sie einen neuen Puffer anfordern, um weitere Daten zu schreiben und in einen zuvor erworbenen Puffer schreiben zu können.</span><span class="sxs-lookup"><span data-stu-id="20d78-110">You must request a new buffer after calling `Advance` to continue writing more data and cannot write to a previously acquired buffer.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20d78-111"><paramref name="count" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="20d78-111"><paramref name="count" /> is negative.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="20d78-112">Der Methodenaufruf versucht, hinter das Ende des zugrunde liegenden Puffer zu gelangen.</span><span class="sxs-lookup"><span data-stu-id="20d78-112">The method call attempts to advance past the end of the underlying buffer.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public int Capacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayBufferWriter`1.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Capacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Capacity : int" Usage="System.Buffers.ArrayBufferWriter&lt;'T&gt;.Capacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d78-113">Ruft die Gesamtmenge des Speicherplatzes im zugrunde liegenden Puffer ab.</span><span class="sxs-lookup"><span data-stu-id="20d78-113">Gets the total amount of space within the underlying buffer.</span></span></summary>
        <value><span data-ttu-id="20d78-114">Die Gesamtkapazität des zugrunde liegenden Puffers.</span><span class="sxs-lookup"><span data-stu-id="20d78-114">The total capacity of the underlying buffer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayBufferWriter`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="arrayBufferWriter.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20d78-115">Löscht die in den zugrunde liegenden Puffer geschriebenen Daten.</span><span class="sxs-lookup"><span data-stu-id="20d78-115">Clears the data written to the underlying buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="20d78-116">Sie müssen die <xref:System.Buffers.ArrayBufferWriter`1> löschen, bevor Sie versuchen, sie wiederzuverwenden.</span><span class="sxs-lookup"><span data-stu-id="20d78-116">You must clear the <xref:System.Buffers.ArrayBufferWriter`1> before trying to reuse it.</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FreeCapacity">
      <MemberSignature Language="C#" Value="public int FreeCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FreeCapacity" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayBufferWriter`1.FreeCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FreeCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FreeCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FreeCapacity : int" Usage="System.Buffers.ArrayBufferWriter&lt;'T&gt;.FreeCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d78-117">Ruft die Menge des verfügbaren Speicherplatzes ab, in den geschrieben werden kann, ohne dass der zugrunde liegende Puffer gezwungen wird, zu wachsen.</span><span class="sxs-lookup"><span data-stu-id="20d78-117">Gets the amount of available space that can be written to without forcing the underlying buffer to grow.</span></span></summary>
        <value><span data-ttu-id="20d78-118">Der zum Schreiben verfügbare Speicherplatz, ohne dass der zugrunde liegende Puffer vergrößert werden soll.</span><span class="sxs-lookup"><span data-stu-id="20d78-118">The space available for writing without forcing the underlying buffer to grow.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMemory">
      <MemberSignature Language="C#" Value="public Memory&lt;T&gt; GetMemory (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Memory`1&lt;!T&gt; GetMemory(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayBufferWriter`1.GetMemory(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemory (Optional sizeHint As Integer = 0) As Memory(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetMemory : int -&gt; Memory&lt;'T&gt;&#xA;override this.GetMemory : int -&gt; Memory&lt;'T&gt;" Usage="arrayBufferWriter.GetMemory sizeHint" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Buffers.IBufferWriter`1.GetMemory(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Memory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint"><span data-ttu-id="20d78-119">Die mindestens angeforderte Länge von <see cref="T:System.Memory`1" />.</span><span class="sxs-lookup"><span data-stu-id="20d78-119">The minimum requested length of the <see cref="T:System.Memory`1" />.</span></span></param>
        <summary><span data-ttu-id="20d78-120">Gibt ein <see cref="T:System.Memory`1" />-Element zurück, in das geschrieben werden kann, das mindestens die durch <paramref name="sizeHint" /> angegebene Länge aufweist.</span><span class="sxs-lookup"><span data-stu-id="20d78-120">Returns a <see cref="T:System.Memory`1" /> to write to that is at least the length specified by <paramref name="sizeHint" />.</span></span></summary>
        <returns><span data-ttu-id="20d78-121">Ein <see cref="T:System.Memory`1" />-Element, dessen Länge mindestens <paramref name="sizeHint" /> beträgt.</span><span class="sxs-lookup"><span data-stu-id="20d78-121">A <see cref="T:System.Memory`1" /> whose length is at least <paramref name="sizeHint" />.</span></span>  <span data-ttu-id="20d78-122">Wenn <paramref name="sizeHint" /> nicht angegeben oder gleich null (0) ist, wird ein nicht leerer Puffer zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="20d78-122">If <paramref name="sizeHint" /> is not provided or is equal to 0, some non-empty buffer is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="20d78-123">Diese Methode gibt nie <xref:System.Memory%601.Empty?displayProperty=nameWithType>zurück.</span><span class="sxs-lookup"><span data-stu-id="20d78-123">This method never returns <xref:System.Memory%601.Empty?displayProperty=nameWithType>.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20d78-124"><paramref name="sizeHint" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="20d78-124"><paramref name="sizeHint" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpan">
      <MemberSignature Language="C#" Value="public Span&lt;T&gt; GetSpan (int sizeHint = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Span`1&lt;!T&gt; GetSpan(int32 sizeHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Buffers.ArrayBufferWriter`1.GetSpan(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpan (Optional sizeHint As Integer = 0) As Span(Of T)" />
      <MemberSignature Language="F#" Value="abstract member GetSpan : int -&gt; Span&lt;'T&gt;&#xA;override this.GetSpan : int -&gt; Span&lt;'T&gt;" Usage="arrayBufferWriter.GetSpan sizeHint" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Buffers.IBufferWriter`1.GetSpan(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Span&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sizeHint"><span data-ttu-id="20d78-125">Die mindestens angeforderte Länge von <see cref="T:System.Span`1" />.</span><span class="sxs-lookup"><span data-stu-id="20d78-125">The minimum requested length of the <see cref="T:System.Span`1" />.</span></span></param>
        <summary><span data-ttu-id="20d78-126">Gibt ein <see cref="T:System.Span`1" />-Element zurück, in das geschrieben werden kann, das mindestens die angegebene Länge aufweist.</span><span class="sxs-lookup"><span data-stu-id="20d78-126">Returns a <see cref="T:System.Span`1" /> to write to that is at least a specified length.</span></span></summary>
        <returns><span data-ttu-id="20d78-127">Eine Spanne mit einer Länge von mindestens <paramref name="sizeHint" />.</span><span class="sxs-lookup"><span data-stu-id="20d78-127">A span of at least <paramref name="sizeHint" /> in length.</span></span> <span data-ttu-id="20d78-128">Wenn <paramref name="sizeHint" /> nicht angegeben oder gleich null (0) ist, wird ein nicht leerer Puffer zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="20d78-128">If <paramref name="sizeHint" /> is not provided or is equal to 0, some non-empty buffer is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="20d78-129">Diese Methode gibt nie <xref:System.Memory%601.Empty?displayProperty=nameWithType>zurück.</span><span class="sxs-lookup"><span data-stu-id="20d78-129">This method never returns <xref:System.Memory%601.Empty?displayProperty=nameWithType>.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20d78-130"><paramref name="sizeHint" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="20d78-130"><paramref name="sizeHint" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WrittenCount">
      <MemberSignature Language="C#" Value="public int WrittenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WrittenCount" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayBufferWriter`1.WrittenCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrittenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WrittenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.WrittenCount : int" Usage="System.Buffers.ArrayBufferWriter&lt;'T&gt;.WrittenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d78-131">Ruft die Menge der in den zugrunde liegenden Puffer geschriebenen Daten ab.</span><span class="sxs-lookup"><span data-stu-id="20d78-131">Gets the amount of data written to the underlying buffer.</span></span></summary>
        <value><span data-ttu-id="20d78-132">Die Menge der Daten, die in den zugrunde liegenden Puffer geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="20d78-132">The amount of data written to the underlying buffer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrittenMemory">
      <MemberSignature Language="C#" Value="public ReadOnlyMemory&lt;T&gt; WrittenMemory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlyMemory`1&lt;!T&gt; WrittenMemory" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayBufferWriter`1.WrittenMemory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrittenMemory As ReadOnlyMemory(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlyMemory&lt;T&gt; WrittenMemory { ReadOnlyMemory&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.WrittenMemory : ReadOnlyMemory&lt;'T&gt;" Usage="System.Buffers.ArrayBufferWriter&lt;'T&gt;.WrittenMemory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlyMemory&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d78-133">Ruft ein <see cref="T:System.ReadOnlyMemory`1" />-Element ab, das die bisher in den zugrunde liegenden Puffer geschriebenen Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="20d78-133">Gets a <see cref="T:System.ReadOnlyMemory`1" /> that contains the data written to the underlying buffer so far.</span></span></summary>
        <value><span data-ttu-id="20d78-134">Die Daten, die in den zugrunde liegenden Puffer geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="20d78-134">The data written to the underlying buffer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WrittenSpan">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;T&gt; WrittenSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;!T&gt; WrittenSpan" />
      <MemberSignature Language="DocId" Value="P:System.Buffers.ArrayBufferWriter`1.WrittenSpan" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WrittenSpan As ReadOnlySpan(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;T&gt; WrittenSpan { ReadOnlySpan&lt;T&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.WrittenSpan : ReadOnlySpan&lt;'T&gt;" Usage="System.Buffers.ArrayBufferWriter&lt;'T&gt;.WrittenSpan" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Memory</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20d78-135">Ruft ein <see cref="T:System.ReadOnlySpan`1" />-Element ab, das die bisher in den zugrunde liegenden Puffer geschriebenen Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="20d78-135">Gets a <see cref="T:System.ReadOnlySpan`1" /> that contains the data written to the underlying buffer so far.</span></span></summary>
        <value><span data-ttu-id="20d78-136">Die Daten, die in den zugrunde liegenden Puffer geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="20d78-136">The data written to the underlying buffer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
