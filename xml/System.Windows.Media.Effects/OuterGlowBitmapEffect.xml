<Type Name="OuterGlowBitmapEffect" FullName="System.Windows.Media.Effects.OuterGlowBitmapEffect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="158d3931e79bc2817e5c07c1ea474dc562256a20" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36494297" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OuterGlowBitmapEffect : System.Windows.Media.Effects.BitmapEffect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed OuterGlowBitmapEffect extends System.Windows.Media.Effects.BitmapEffect" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OuterGlowBitmapEffect&#xA;Inherits BitmapEffect" />
  <TypeSignature Language="C++ CLI" Value="public ref class OuterGlowBitmapEffect sealed : System::Windows::Media::Effects::BitmapEffect" />
  <TypeSignature Language="F#" Value="type OuterGlowBitmapEffect = class&#xA;    inherit BitmapEffect" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Effects.BitmapEffect</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Creates a halo of color around objects or areas of color.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Bitmapeffekte handelt es sich um Software gerendert. Jedes Objekt, das einen Effekt anwendet, wird auch in der Software gerendert werden. Bitmapeffekte sollten nicht auf große visuelle Objekte oder Animationen angewendet werden, da dies die Leistung beeinträchtigen kann.  
  
 <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect> ist einer von mehreren Effekten, die im Lieferumfang enthalten sind die [!INCLUDE[TLA2#tla_lhsdk](~/includes/tla2sharptla-lhsdk-md.md)]. Andere Effekte gehören:  
  
-   <xref:System.Windows.Media.Effects.BlurBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.DropShadowBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.EmbossBitmapEffect>  
  
-   <xref:System.Windows.Media.Effects.BevelBitmapEffect>  
  
 Die folgende Abbildung zeigt ein <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect> auf ein visuelles Objekt angewendet (in diesem Fall angewendet, um eine <xref:System.Windows.Controls.TextBox>).  
  
 ![Bildschirmabbildung: OuterGlowBitmapEffect-Bitmapeffekt](~/add/media/effects-outerglowsimple.png "Bildschirmabbildung: OuterGlowBitmapEffect-Bitmapeffekt")  
  
 Die folgenden Abbildungen zeigen die Auswirkungen von mehreren grundlegenden Eigenschaften von <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.  
  
-   Die <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize%2A> Eigenschaft gibt die Größe des Halo-Lichteffekts:  
  
 ![Bildschirmabbildung: OuterGlowBitmapEffect-Bitmapeffekt](~/add/media/effects-outerglowglowsize.png "Bildschirmabbildung: OuterGlowBitmapEffect-Bitmapeffekt")  
  
-   Die <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise%2A> Eigenschaft gibt die Ebene der Rauschen in der Leuchteffekt:  
  
 ![Bildschirmabbildung: Vergleichen von rauscheigenschaftswerten](~/add/media/effects-outerglownoise.png "Bildschirmabbildung: Vergleichen rauscheigenschaftswerten")  
  
-   Die <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity%2A> Eigenschaft gibt an, wie transparent der Leuchteffekt ist:  
  
 ![Bildschirmabbildung: Vergleichen von leuchtdeckkraft-Eigenschaftswerten](~/add/media/effects-outerglowopacity.png "Bildschirmabbildung: Vergleichen von leuchtdeckkraft-Eigenschaftswerten")  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">Erstellen Sie eine Instanz der <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" /> Klasse. Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <altmember cref="T:System.Windows.Media.Effects.BlurBitmapEffect" />
    <altmember cref="T:System.Windows.Media.Effects.DropShadowBitmapEffect" />
    <altmember cref="T:System.Windows.Media.Effects.EmbossBitmapEffect" />
    <altmember cref="T:System.Windows.Media.Effects.BevelBitmapEffect" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OuterGlowBitmapEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OuterGlowBitmapEffect();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Initializes a new instance of the <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.OuterGlowBitmapEffect Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.OuterGlowBitmapEffect Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As OuterGlowBitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::OuterGlowBitmapEffect ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Effects.OuterGlowBitmapEffect" Usage="outerGlowBitmapEffect.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.OuterGlowBitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" />, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</summary>
        <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um änderbare Kopien erzeugen fixierte <xref:System.Windows.Freezable> Objekte (oder eine beliebige <xref:System.Windows.Freezable> Objekt). Der Einfachheit halber führt Shadowing für diese Methode die geerbte Version.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.OuterGlowBitmapEffect CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Effects.OuterGlowBitmapEffect CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As OuterGlowBitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Effects::OuterGlowBitmapEffect ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Effects.OuterGlowBitmapEffect" Usage="outerGlowBitmapEffect.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.OuterGlowBitmapEffect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Creates a modifiable clone of this <see cref="T:System.Windows.Media.Effects.OuterGlowBitmapEffect" /> object, making deep copies of this object's current values. Resource references, data bindings, and animations are not copied, but their current values are.</summary>
        <returns>A modifiable clone of the current object. The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um änderbare Kopien erzeugen fixierte <xref:System.Windows.Freezable> Objekte (oder eine beliebige <xref:System.Windows.Freezable> Objekt). Der Einfachheit halber führt Shadowing für diese Methode die geerbte Version.  
  
 Weitere Informationen finden Sie unter <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="outerGlowBitmapEffect.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUnmanagedEffect">
      <MemberSignature Language="C#" Value="protected override System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CreateUnmanagedEffect" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateUnmanagedEffect () As SafeHandle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Runtime::InteropServices::SafeHandle ^ CreateUnmanagedEffect();" />
      <MemberSignature Language="F#" Value="override this.CreateUnmanagedEffect : unit -&gt; System.Runtime.InteropServices.SafeHandle" Usage="outerGlowBitmapEffect.CreateUnmanagedEffect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.SafeHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlowColor">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Color GlowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Color GlowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property GlowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Color GlowColor { System::Windows::Media::Color get(); void set(System::Windows::Media::Color value); };" />
      <MemberSignature Language="F#" Value="member this.GlowColor : System.Windows.Media.Color with get, set" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Gets or sets the color of the halo glow.</summary>
        <value>Die Farbe des Halo-Lichteffekts. Der Standardwert ist Weiß.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_GlowColor"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty>|  
|Metadaten-Eigenschaften festgelegt auf. `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlowColorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty GlowColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty GlowColorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GlowColorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ GlowColorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable GlowColorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Identifies the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlowSize">
      <MemberSignature Language="C#" Value="public double GlowSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 GlowSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" />
      <MemberSignature Language="VB.NET" Value="Public Property GlowSize As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double GlowSize { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.GlowSize : double with get, set" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Gets or sets the thickness of the halo glow.</summary>
        <value>Die Dicke des Halo-Lichteffekts in [! Include[TLA#tla_dipixel](~/Includes/tlasharptla-dipixel-MD.MD)]. Der gültige Wertebereich liegt zwischen 1 und 199. Die Standardeinstellung ist 20.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Abbildung veranschaulicht die Wirkung dieser Eigenschaft.  
  
 ![Bildschirmabbildung: OuterGlowBitmapEffect-Bitmapeffekt](~/add/media/effects-outerglowglowsize.png "Bildschirmabbildung: OuterGlowBitmapEffect-Bitmapeffekt")  
  
<a name="dependencyPropertyInfo_GlowSize"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty>|  
|Metadaten-Eigenschaften festgelegt auf. `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlowSizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty GlowSizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty GlowSizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GlowSizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ GlowSizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable GlowSizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Identifies the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSize" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Noise">
      <MemberSignature Language="C#" Value="public double Noise { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Noise" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" />
      <MemberSignature Language="VB.NET" Value="Public Property Noise As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Noise { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Noise : double with get, set" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Gets or sets the graininess of the halo glow.</summary>
        <value>Die Körnigkeit (der Rauschpegel) des Halo-Lichteffekts. Der gültige Wertebereich reicht von 0,0 bis 1,0, wobei 0,0 kein Rauschen und 1,0 maximales Rauschen angibt. Der Wert 0,5 gibt ein 50%iges Rauschen an, der Wert 0,75 ein 75%iges Rauschen usw. Der Standardwert ist 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Abbildung veranschaulicht die Wirkung dieser Eigenschaft.  
  
 ![Bildschirmabbildung: Vergleichen von rauscheigenschaftswerten](~/add/media/effects-outerglownoise.png "Bildschirmabbildung: Vergleichen rauscheigenschaftswerten")  
  
<a name="dependencyPropertyInfo_Noise"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty>|  
|Metadaten-Eigenschaften festgelegt auf. `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoiseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NoiseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NoiseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoiseProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NoiseProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoiseProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.NoiseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Identifies the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Noise" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Opacity : double with get, set" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Gets or sets the degree of opacity of the halo glow.</summary>
        <value>Die Deckkraft des Leuchteffekts. Der Wert 0 gibt an, dass der Lichthof-Leuchteffekt völlig transparent ist, während der Wert 1 angibt, dass der Leuchteffekt vollständig deckend ist. Der Wert 0,5 gibt an, dass der Leuchteffekt zu 50 Prozent deckt, der Wert 0,725 bedeutet, dass der Leuchteffekt zu 72,5 Prozent deckend ist, usw. Kleinere Werte als 0 werden als 0 behandelt, größere Werte als 1 als 1. Der Standard ist 1.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Abbildung veranschaulicht die Wirkung dieser Eigenschaft:  
  
 ![Bildschirmabbildung: Vergleichen von leuchtdeckkraft-Eigenschaftswerten](~/add/media/effects-outerglowopacity.png "Bildschirmabbildung: Vergleichen von leuchtdeckkraft-Eigenschaftswerten")  
  
 Deckkraft kann auch angegeben werden mit den Alphawert <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColor%2A>.  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty>|  
|Metadaten-Eigenschaften festgelegt auf. `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**Note: This API is now obsolete.** The non-obsolete alternative is <see cref="T:System.Windows.Media.Effects.BlurEffect" />. Identifies the <see cref="P:System.Windows.Media.Effects.OuterGlowBitmapEffect.Opacity" /> dependency property.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateUnmanagedPropertyState">
      <MemberSignature Language="C#" Value="protected override void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void UpdateUnmanagedPropertyState(class System.Runtime.InteropServices.SafeHandle unmanagedEffect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub UpdateUnmanagedPropertyState (unmanagedEffect As SafeHandle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void UpdateUnmanagedPropertyState(System::Runtime::InteropServices::SafeHandle ^ unmanagedEffect);" />
      <MemberSignature Language="F#" Value="override this.UpdateUnmanagedPropertyState : System.Runtime.InteropServices.SafeHandle -&gt; unit" Usage="outerGlowBitmapEffect.UpdateUnmanagedPropertyState unmanagedEffect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedEffect" Type="System.Runtime.InteropServices.SafeHandle" />
      </Parameters>
      <Docs>
        <param name="unmanagedEffect">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>