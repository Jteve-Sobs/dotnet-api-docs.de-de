<Type Name="XamlLoadPermission" FullName="System.Xaml.Permissions.XamlLoadPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a76b027fa00ee1420eb0706f04f35374598cc39" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720094" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XamlLoadPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit XamlLoadPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Permissions.XamlLoadPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XamlLoadPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlLoadPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Deklariert Berechtigungen zum Laden von Typen aus Assemblys, die von einem XAML-Reader oder -Writer verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.Permissions.XamlLoadPermission> ist relevant für Szenarien, z. B., ob die interne Typen zulässig sind, unter teilweiser Vertrauenswürdigkeit geladen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Collections.Generic.IEnumerable{System.Xaml.Permissions.XamlAccessLevel})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowedAccess As IEnumerable(Of XamlAccessLevel))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Collections::Generic::IEnumerable&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ allowedAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Collections.Generic.IEnumerable&lt;System.Xaml.Permissions.XamlAccessLevel&gt;" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">Ein aufzählbarer Satz von bestimmten <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werten.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse und verwendet einen aufzählbaren Satz bestimmter <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Aufruf an diesen Konstruktor initialisiert die <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> Auflistung mit den einzelnen `allowedAccess` Eintrag als Element und legt die Rückgabe von <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> zu `false` in die erstellte Instanz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="allowedAccess" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="allowedAccess" /> enthielt ungültige Informationen, z. B. ein NULL-Element.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Security::Permissions::PermissionState state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">Ein <see cref="T:System.Security.Permissions.PermissionState" />-Enumerationswert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse mithilfe von vorhandenen Berechtigungen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Permissions.PermissionState.Unrestricted> Legt die Rückgabe von <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> auf `true` in die erstellte Instanz. Jedem Aufruf dieses Konstruktors legt die <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> Auflistung `null` , da er nicht relevant ist, wenn Berechtigungen gemeldet werden statt <xref:System.Xaml.Permissions.XamlAccessLevel>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlLoadPermission (System.Xaml.Permissions.XamlAccessLevel allowedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.Permissions.XamlAccessLevel allowedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.#ctor(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowedAccess As XamlAccessLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlLoadPermission(System::Xaml::Permissions::XamlAccessLevel ^ allowedAccess);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="allowedAccess">Der definierende <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Wert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse unter Verwendung eines einzelnen <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Aufruf an diesen Konstruktor initialisiert die <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> Auflistung mit `allowedAccess` als das einzige Element, und legt die Rückgabe von <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> auf `false` in die erstellte Instanz.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="allowedAccess" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedAccess">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.Permissions.XamlAccessLevel&gt; AllowedAccess" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedAccess As IList(Of XamlAccessLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ AllowedAccess { System::Collections::Generic::IList&lt;System::Xaml::Permissions::XamlAccessLevel ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.Permissions.XamlAccessLevel&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Liste aller <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werte ab, die diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse darstellt.</summary>
        <value>Eine schreibgeschützte Liste mit <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Werten oder <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die aktuelle <xref:System.Xaml.Permissions.XamlLoadPermission> initialisiert wird, dass <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> ist `true`, <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> möglicherweise `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine identische Kopie der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und gibt die Kopie zurück.</summary>
        <returns>Eine Kopie der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pro Schnittstellenvertrag von <xref:System.Security.IPermission> dieser Wert ist <xref:System.Security.IPermission> in der Signatur jedoch umgewandelt werden kann, um <xref:System.Xaml.Permissions.XamlLoadPermission>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement elem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement elem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (elem As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ elem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elem" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="elem">Die XML-Codierung zur Wiederherstellung des Sicherheitsobjekts.</param>
        <summary>Stellt ein Sicherheitsobjekt mit einem angegebenen Zustand aus einer XML-Codierung wieder her.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="elem" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="elem" /> enthält die XML-Codierung nicht für einen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.  
  
 - oder -   
  
 Das Versionsattribut in <paramref name="elem" /> wird nicht unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Includes">
      <MemberSignature Language="C#" Value="public bool Includes (System.Xaml.Permissions.XamlAccessLevel requestedAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Includes(class System.Xaml.Permissions.XamlAccessLevel requestedAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Includes(System.Xaml.Permissions.XamlAccessLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Includes (requestedAccess As XamlAccessLevel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Includes(System::Xaml::Permissions::XamlAccessLevel ^ requestedAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestedAccess" Type="System.Xaml.Permissions.XamlAccessLevel" />
      </Parameters>
      <Docs>
        <param name="requestedAccess">Die spezielle <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse, nach der gesucht werden soll.</param>
        <summary>Gibt zurück ob diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse eine angegebene <see cref="T:System.Xaml.Permissions.XamlAccessLevel" />-Klasse in der <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> enthält.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="requestedAccess" /> als Element in der <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" />-Liste der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse vorhanden ist. Andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestedAccess" /> ist NULL.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Ein <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, dessen Schnittmenge mit dem aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> gebildet werden soll. Kann <see langword="null" /> sein.</param>
        <summary>Erstellt eine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse, bei der es sich um die Schnittmenge der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse und der angegebenen Berechtigung handelt.</summary>
        <returns>Ein neuer Berechtigungssatz, der die Schnittmenge der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse und der angegebenen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse darstellt. Diese neue Berechtigung ist <see langword="null" />, wenn die Schnittmenge leer ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für Union, intersect, und die Teilmengenlogik <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> wird zuerst überprüft, und möglicherweise ausschließlich abhängig von dieser Überprüfung ein Ergebnis zurück. Als Nächstes <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> aktiviert ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> ist nicht <see langword="null" /> oder keine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">Eine Berechtigung, die auf die Teilmengenbeziehung geprüft werden soll. Kann <see langword="null" /> sein.</param>
        <summary>Bestimmt, ob die aktuelle <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> eine Teilmenge der angegebenen Berechtigung ist.</summary>
        <returns>
          <see langword="true" />, wenn die aktuelle <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> eine Teilmenge der angegebenen Berechtigung ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für Union, intersect, und die Teilmengenlogik <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> wird zuerst überprüft, und möglicherweise ausschließlich abhängig von dieser Überprüfung ein Ergebnis zurück. Als Nächstes <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> aktiviert ist.  
  
 Wenn `target` ist `null` und der aktuelle <xref:System.Xaml.Permissions.XamlLoadPermission> sowohl <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> `false` und hat einen leeren <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> aufzulisten, gibt diese Methode `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> ist nicht <see langword="null" /> oder keine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse uneingeschränkte Berechtigungen bezeichnet.</summary>
        <returns>
          <see langword="true" />, wenn diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> uneingeschränkte Berechtigungen bezeichnet. <see langword="false" />, wenn für diese <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> bestimmte Zugriffsebeneneinschränkungen in <see cref="P:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess" /> gelten oder wenn keine Berechtigungen vorhanden sind.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine XML-Codierung dieser <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse und ihres aktuellen Zustands.</summary>
        <returns>Eine XML-Codierung dieser <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />-Klasse, einschließlich Zustandsinformationen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Permissions.XamlLoadPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (other As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="other">Eine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, die mit der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> kombiniert werden soll. Kann <see langword="null" /> sein.</param>
        <summary>Erstellt eine Berechtigung, die die Gesamtmenge der aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und der angegebenen Berechtigung darstellt.</summary>
        <returns>Ein neues <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />, das die Gesamtmenge des aktuellen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> und des angegebenen <see cref="T:System.Xaml.Permissions.XamlLoadPermission" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für Union, intersect, und die Teilmengenlogik <xref:System.Xaml.Permissions.XamlLoadPermission.IsUnrestricted%2A> wird zuerst überprüft, und möglicherweise ausschließlich abhängig von dieser Überprüfung ein Ergebnis zurück. Als Nächstes <xref:System.Xaml.Permissions.XamlLoadPermission.AllowedAccess%2A> aktiviert ist.  
  
 Wenn `other` ist `null`, das aktuelle <xref:System.Xaml.Permissions.XamlLoadPermission> zurückgegeben wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="other" /> ist nicht <see langword="null" /> oder keine <see cref="T:System.Xaml.Permissions.XamlLoadPermission" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>