<Type Name="RemoteCertificateValidationCallback" FullName="System.Net.Security.RemoteCertificateValidationCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a48e601c8d6f29b653a5b5a024b6be798c8a8a32" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75111976" /></Metadata><TypeSignature Language="C#" Value="public delegate bool RemoteCertificateValidationCallback(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RemoteCertificateValidationCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Net.Security.RemoteCertificateValidationCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function RemoteCertificateValidationCallback(sender As Object, certificate As X509Certificate, chain As X509Chain, sslPolicyErrors As SslPolicyErrors) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool RemoteCertificateValidationCallback(System::Object ^ sender, X509Certificate ^ certificate, X509Chain ^ chain, SslPolicyErrors sslPolicyErrors);" />
  <TypeSignature Language="F#" Value="type RemoteCertificateValidationCallback = delegate of obj * X509Certificate * X509Chain * SslPolicyErrors -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    <Parameter Name="chain" Type="System.Security.Cryptography.X509Certificates.X509Chain" />
    <Parameter Name="sslPolicyErrors" Type="System.Net.Security.SslPolicyErrors" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Ein Objekt mit Zustandsinformationen für diese Validierung.</param>
    <param name="certificate">Das zum Authentifizieren der Remoteseite verwendete Zertifikat.</param>
    <param name="chain">Die Kette der dem Remotezertifikat zugeordneten Zertifizierungsstellen.</param>
    <param name="sslPolicyErrors">Ein oder mehrere Fehler, die dem Remotezertifikat zugeordnet sind.</param>
    <summary>Überprüft das für die Authentifizierung verwendete SSL (Secure Sockets Layer)-Remotezertifikat.</summary>
    <returns>Ein <see cref="T:System.Boolean" />-Wert, der bestimmt, ob das angegebene Zertifikat für die Authentifizierung akzeptiert wird.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das `sslPolicyErrors` Argument des Delegaten enthält alle Zertifikat Fehler, die von SSPI beim Authentifizieren des Clients oder Servers zurückgegeben werden. Der <xref:System.Boolean> Wert, der von der von diesem Delegaten aufgerufenen Methode zurückgegeben wird, bestimmt, ob die Authentifizierung erfolgreich ausgeführt werden kann.  
  
 Dieser Delegat wird mit der <xref:System.Net.Security.SslStream>-Klasse verwendet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine Methode implementiert, die von einer Instanz der <xref:System.Net.Security.RemoteCertificateValidationCallback>-Klasse aufgerufen wird. Wenn Validierungs Fehler vorliegen, werden diese von dieser Methode angezeigt, und es wird `false`zurückgegeben, wodurch die Kommunikation mit dem nicht authentifizierten Server verhindert wird.  
  
 [!code-cpp[NCLSslClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#1)]
 [!code-csharp[NCLSslClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#1)]  
  
 Im folgenden Codebeispiel wird der-Delegat mit der im vorangehenden Codebeispiel definierten-Methode erstellt.  
  
 [!code-cpp[NCLSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]
 [!code-csharp[NCLSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Security.LocalCertificateSelectionCallback" />
  </Docs>
</Type>
