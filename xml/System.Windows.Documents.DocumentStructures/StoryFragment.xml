<Type Name="StoryFragment" FullName="System.Windows.Documents.DocumentStructures.StoryFragment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba0a8ad7ffd84e6c7510ea701a1472abaad36332" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69209653" /></Metadata><TypeSignature Language="C#" Value="public class StoryFragment : System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StoryFragment extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.DocumentStructures.StoryFragment" />
  <TypeSignature Language="VB.NET" Value="Public Class StoryFragment&#xA;Implements IAddChild, IEnumerable(Of BlockElement)" />
  <TypeSignature Language="C++ CLI" Value="public ref class StoryFragment : System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type StoryFragment = class&#xA;    interface IAddChild&#xA;    interface seq&lt;BlockElement&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.ContentProperty("BlockElementList")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt den gesamten oder einen Teil eines Textabschnitts in einem XPS-Dokument dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine XPS-Story in [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] einem Dokument ähnelt ungefähr einer Story in einer Zeitung oder einem Magazin. Dabei handelt es sich um einen Text-und Grafik Inhalt, der in der Regel in einem einzelnen [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] Thema in einem einzelnen Dokument enthalten ist. In der Regel erstreckt sie sich über mehrere Seiten, kann jedoch kürzer sein als eine Seite, wie z. b. eine Rand Leiste in einem Magazin. Eine Story kann auch unkontinuierlich sein, z. b. eine Front Page-Webstory, die auf Seite 4 fortgesetzt wird. Folglich kann eine bestimmte Seite mehr als eine Story und Teile von mehr als einer Story enthalten. Eine Kopf-oder Fußzeile ist auch eine besondere Art von Story, die vollständig auf einer einzelnen Seite enthalten ist.  
  
 Ein <xref:System.Windows.Documents.DocumentStructures.StoryFragment> stellt alle oder einen Teil einer Story dar. Sie kann sich nie über mehrere Seiten erstrecken, Sie kann jedoch die gesamte Seite einer Seite belegen oder eine Seite mit anderen Fragmenten gemeinsam verwenden. Wenn sich eine Story auf mehr als einer Seite befindet, ist jeder Teil auf jeder Seite ein separates Fragment. Obwohl Stories über diskontinuierliche Sätze von Fragmenten verfügen können, kann kein Fragment selbst diskontinuierlich sein.  
  
 Nur ein- <xref:System.Windows.Documents.DocumentStructures.StoryFragment>Element kann ein übergeordnetes Element eines sein. <xref:System.Windows.Documents.DocumentStructures.StoryFragments>  Der Speicherort <xref:System.Windows.Documents.DocumentStructures.StoryBreak> der Elemente in einem <xref:System.Windows.Documents.DocumentStructures.StoryFragment> gibt an, ob die Story in mehreren Fragmenten enthalten ist, und ob die zusätzlichen Fragmente dem aktuellen Fragment vorangestellt oder folgen.  
  
 Wenn ein <xref:System.Windows.Documents.DocumentStructures.StoryFragment> in der Mitte eines strukturellen Elements endet, z. & `<TableRowGroupStructure>`# # [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] h., dann müssen Anwendungen, die Anwendungen erzeugen, ein entsprechendes Endtag für das `</TableRowGroupStructure>`Element (in `</StoryFragment>` diesem Fall) vor dem Tag einfügen, auch Obwohl die Struktur in einem späteren Fragment fortgesetzt wird. (Dies ist erforderlich, um sicherzustellen, dass die- <xref:System.Windows.Documents.DocumentStructures.StoryFragment> Elementstruktur in gültiges XML ist.) Das Fragment, das die Story fortsetzt, muss mit einem öffnenden Tag für die unterbrochene Struktur beginnen. Die gesamte Struktur der unterbrochenen Strukturen muss auf die gleiche Weise behandelt werden (mit einer Ausnahme, die unten erläutert wird): Endtags müssen für jedes nicht übereinstimmende Starttag über dem Punkt der Unterbrechung hinzugefügt werden.  
  
 Die Ausnahme tritt auf, wenn die Story-Unterbrechung `</TableCellStructure>` unmittelbar nach einem Tag auftritt, dann muss die Produktionsanwendung eine leere Tabellen`<TableCellStructure></TableCellStructure>`Zellen Struktur () an der entsprechenden Stelle im Fragment einfügen, die die Story fortsetzt. Dies ist erforderlich, damit Anwendungen, die alle Fragmente einer bestimmten Story zusammenführen müssen, einen einfachen Algorithmus verwenden können.  
  
 Nehmen wir beispielsweise an, dass eine Anwendung das folgende Material einem [!INCLUDE[TLA2#tla_xps](~/includes/tla2sharptla-xps-md.md)] Dokument hinzufügen wollte:  
  
```  
<SectionStructure>  
   <TableStructure>  
      <TableRowGroupStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="SomeContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="MoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
         <TableRowStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="EvenMoreContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
            <TableCellStructure>  
               <ParagraphStructure>  
                  <NamedElement NameReference="LastContent" />  
               </ParagraphStructure>  
            </TableCellStructure>  
         </TableRowStructure>  
      </TableRowGroupStructure>  
   </TableStructure>  
</SectionStructure>  
```  
  
 Wenn ein Seitenumbruch ein Ende des Fragments direkt nach dem `</TableCellStructure>` für "SomeContent" erzwingt, muss die Anwendung die Teilung erstellen, wie im folgenden Beispiel gezeigt:  
  
```  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="SomeContent" />  
                </ParagraphStructure>   
             </TableCellStructure>  
<!-- lines from here to end of fragment added by producer-->  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
  
<StoryFragment StoryName="MyStory" FragmentType="Content">  
 <SectionStructure>  
    <TableStructure>  
       <TableRowGroupStructure>  
          <TableRowStructure>  
             <TableCellStructure>   
              <!-- extra cell added by producer-->  
             </TableCellStructure>  
<!-- lines from here to start of fragment added by producer-->  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="MoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
          <TableRowStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="EvenMoreContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
             <TableCellStructure>  
                <ParagraphStructure>  
                   <NamedElement NameReference="LastContent" />  
                </ParagraphStructure>  
             </TableCellStructure>  
          </TableRowStructure>  
       </TableRowGroupStructure>  
    </TableStructure>  
 </SectionStructure>  
</StoryFragment>  
```  
  
 Eine Anwendung, die das Dokument liest, muss diesen Inhalt möglicherweise zusammenführen. Stellen Sie sich z. b. einen XPS-Viewer mit der Schaltfläche **ganze Story in Zwischenablage kopieren** vor. oder ein **XPS für die blinde** Anwendung, die Stories an einen Sprachsynthesizer übermittelt hat.  Einige Anwendungen, die das Dokument lesen, müssen möglicherweise eine Teilmenge der Fragmente einer Story zusammenführen. Beispielsweise muss eine Funktion, die einen ganzen Absatz in die Zwischenablage kopiert, indem Sie dreimal darauf klickt, eine Zusammenführung durchführen, wenn der Absatz einen Seitenumbruch überspannt, da ein solcher Absatz zwischen <xref:System.Windows.Documents.DocumentStructures.StoryFragment>zwei n teilen würde.  
  
 **Verwenden Sie zum Zusammenführen den folgenden Algorithmus:**  
  
1.  Löschen Sie `</StoryFragment>` die am Ende des ersten zu mergenden Fragments, und löschen Sie `<StoryFragment>` die vom Anfang der zweiten.  
  
2.  Wenn das letzte Endtag des ersten Fragments denselben Typ wie das erste öffnende Tag des zweiten Fragments hat (und keine `<NamedElement>` Tags sind), löschen Sie beide.  
  
3.  Wiederholen Sie Schritt 2, bis sich die ** beiden Fragmente in einem der folgenden Zustände befinden:  
  
    -   Es gibt keine Typübereinstimmung zwischen dem letzten Endtag des führenden Fragments und dem ersten Starttag des nachfolgenden Fragments.  
  
    -   Das letzte Endtag des führenden Fragments das erste Starttag des nachfolgenden Fragments ist beide `<NamedElement>` Tags.  
  
 Wenn die leere Zelle im obigen Beispiel nicht von der erzeugten Anwendung hinzugefügt wurde, erzeugt eine Zusammenführung der Fragmente eine Tabelle, deren erste Zeile nur eine Zelle mit den verweisen "SomeContent" und "morecontent" anstelle des ursprünglichen enthält. Zeile mit zwei Zellen, die jeweils einen einzelnen Verweis enthalten  
  
 Wenn die gesamte Story zusammengeführt wird, sollte der Algorithmus für jedes nachfolgende Fragment, das Teil derselben Story ist, wiederholt werden. Die Fragmente, die zu einer Story gehören, werden im `<Story>` -Element indiziert. Weitere Informationen finden Sie im [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Abschnitt 9.1.15 der Spezifikation, die [Sie unter XPS abrufen können: Spezifikation und Lizenz Downloads](https://www.microsoft.com/whdc/xps/downloads.mspx). Das letzte Fragment für eine bestimmte Story verfügt über ein <xref:System.Windows.Documents.DocumentStructures.StoryBreak> -Element als letztes untergeordnetes Element.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt den `<StoryFragment>` Teil [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] eines Dokuments.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryBreak" />
    <altmember cref="T:System.Windows.Documents.DocumentStructures.StoryFragments" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StoryFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StoryFragment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Documents.DocumentStructures.StoryFragment" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Documents.DocumentStructures.BlockElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Documents.DocumentStructures.BlockElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.Add(System.Windows.Documents.DocumentStructures.BlockElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As BlockElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Documents::DocumentStructures::BlockElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Windows.Documents.DocumentStructures.BlockElement -&gt; unit" Usage="storyFragment.Add element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.Documents.DocumentStructures.BlockElement" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element">Der hinzuzufügende Block.</param>
        <summary>Fügt dem Textabschnittsfragment einen Block hinzu.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der übergebene Block ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FragmentName">
      <MemberSignature Language="C#" Value="public string FragmentName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FragmentName : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Textabschnittsfragments ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Namen dieses Fragments darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere `FragmentName` Informationen zum-Attribut [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] `</StoryFragment>` des-Teils eines Dokuments finden Sie in Kapitel 9 der [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Spezifikation, die Sie bei [XPS abrufen können: Spezifikation und Lizenz Downloads](https://www.microsoft.com/whdc/xps/downloads.mspx).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      </Docs>
    </Member>
    <Member MemberName="FragmentType">
      <MemberSignature Language="C#" Value="public string FragmentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FragmentType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
      <MemberSignature Language="VB.NET" Value="Public Property FragmentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FragmentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FragmentType : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des Fragments ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Typ des Fragments darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mögliche Werte sind "Header", "Fußzeile" und "Inhalt".  
  
 Weitere `FragmentType` Informationen zum-Attribut [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] `</StoryFragment>` des-Teils eines Dokuments finden Sie in Kapitel 9 der [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Spezifikation, die Sie bei [XPS abrufen können: Spezifikation und Lizenz Downloads](https://www.microsoft.com/whdc/xps/downloads.mspx).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das `FragmentType` -Attribut `<StoryFragment>` des-Teils eines [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Dokuments.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="StoryName">
      <MemberSignature Language="C#" Value="public string StoryName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StoryName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      <MemberSignature Language="VB.NET" Value="Public Property StoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StoryName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StoryName : string with get, set" Usage="System.Windows.Documents.DocumentStructures.StoryFragment.StoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Textabschnitts ab oder legt diesen fest.</summary>
        <value>Ein <see cref="T:System.String" />, der den Namen des aktuellen Textabschnitts darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Fragmente einer bestimmten Story müssen denselben Wert für diese Eigenschaft aufweisen. Er muss dem `StoryName` -Attribut `<Story>` des-Elements entsprechen. Weitere Informationen finden Sie im [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Abschnitt 9.1.15 der Spezifikation, die [Sie unter XPS abrufen können: Spezifikation und Lizenz Downloads](https://www.microsoft.com/whdc/xps/downloads.mspx).  
  
 Diese Eigenschaft kann nicht angegeben werden, <xref:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentType%2A> wenn eine Kopf-oder Fußzeile ist.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das `StoryName` -Attribut `<StoryFragment>` des-Teils eines [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Dokuments.  
  
 [!code-xaml[DocumentStructure#DocStructStoryFragContent1](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentStructure/CSharp/Content/FixedPage1_structure.xaml#docstructstoryfragcontent1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.DocumentStructures.StoryFragment.FragmentName" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt; IEnumerable&lt;BlockElement&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.Documents.DocumentStructures.BlockElement&gt; System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#Generic#IEnumerable&lt;System#Windows#Documents#DocumentStructures#BlockElement&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of BlockElement) Implements IEnumerable(Of BlockElement).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Windows::Documents::DocumentStructures::BlockElement ^&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.Documents.DocumentStructures.BlockElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Diese Methode wurde nicht implementiert.</summary>
        <returns>Löst immer <see cref="T:System.NotSupportedException" /> aus.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Diese Methode wurde nicht implementiert.</summary>
        <returns>Löst immer <see cref="T:System.NotSupportedException" /> aus.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das hinzugefügte untergeordnete <see cref="T:System.Object" />.</param>
        <summary>Dieser Member unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fügt dem <xref:System.Windows.Documents.DocumentStructures.StoryFragment>-Objekt ein untergeordnetes Objekt hinzu.  
  
 Es muss mindestens ein untergeordnetes Element von <xref:System.Windows.Documents.DocumentStructures.StoryFragment> vorhanden sein, und die untergeordneten Elemente können nur von folgenden Typen sein: <xref:System.Windows.Documents.DocumentStructures.SectionStructure> <xref:System.Windows.Documents.DocumentStructures.ParagraphStructure>, <xref:System.Windows.Documents.DocumentStructures.FigureStructure>, <xref:System.Windows.Documents.DocumentStructures.StoryBreak> <xref:System.Windows.Documents.DocumentStructures.ListStructure>, <xref:System.Windows.Documents.DocumentStructures.TableStructure>, und.  
  
 Ein <xref:System.Windows.Documents.DocumentStructures.StoryBreak> kann nur das erste oder das letzte <xref:System.Windows.Documents.DocumentStructures.StoryFragment>untergeordnete Element eines sein.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> ist kein Typ, der als untergeordnetes Element dieser Klasse fungieren kann. Siehe **Hinweise**.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.DocumentStructures.StoryFragment.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der dem Objekt hinzuzufügende Text.</param>
        <summary>Fügt dem Objekt den Textinhalt eines Knotens hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
