<Type Name="PromptBuilder" FullName="System.Speech.Synthesis.PromptBuilder">
  <TypeSignature Language="C#" Value="public class PromptBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit PromptBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Synthesis.PromptBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class PromptBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class PromptBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7ce0f-101">Erstellt ein leeres <see cref="T:System.Speech.Synthesis.Prompt" />-Objekt und stellt Methoden zum Hinzufügen von Inhalt, Auswählen von Stimmen, das Steuern von Stimmenattributen und das Steuern der Aussprache der gesprochenen Wörter bereit.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-101">Creates an empty <see cref="T:System.Speech.Synthesis.Prompt" /> object and provides methods for adding content, selecting voices, controlling voice attributes, and controlling the pronunciation of spoken words.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-102">Mit <xref:System.Speech.Synthesis.PromptBuilder>, Sie können eine Vielzahl von Inhaltstypen auf eine Eingabeaufforderung, die nur-Text, Markup SSML (als Zeichenfolge oder eine Datei), einschließlich aufgezeichnet Audio hinzufügen oder sogar eine andere <xref:System.Speech.Synthesis.PromptBuilder> Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-102">With <xref:System.Speech.Synthesis.PromptBuilder>, you can add a variety of content types to a prompt, including plain text, SSML markup (as a string or a file), recorded audio, or even another <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span>  
  
 <span data-ttu-id="7ce0f-103">Anzufügende Text, der eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt und optional Stimme Attribute steuern, wie z. B. Hervorhebung und Lautstärke, eines verwenden die <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-103">To append text to a <xref:System.Speech.Synthesis.PromptBuilder> object and optionally control voice attributes such as emphasis, rate, and volume, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> methods.</span></span>  <span data-ttu-id="7ce0f-104">Sie können auch die Sprach-Attribute steuern, als eine Gruppe mit den <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> und <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-104">You can also control voice attributes as a group with the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> methods.</span></span>  
  
 <span data-ttu-id="7ce0f-105">Sie Anfügen von Text und steuern, welche gesprochen wird bzw. wie es ausgesprochen wird mithilfe der <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>, oder <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-105">You can append text and control what is spoken or how it is pronounced using the <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A>,  <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> methods.</span></span>  
  
 <span data-ttu-id="7ce0f-106">Ändern Sie die aktuell ausgewählte Stimme bei der Aufforderung, die mit einer der überladenen <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> Methoden, die Benennung zu verwenden oder das Angeben einer bestimmten Stimme erforderlich Voice-Merkmale, wie Alter und Geschlecht sind.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-106">Change the currently selected speaking voice in the prompt using one of the overloaded <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods, naming a specific voice to use or specifying required voice characteristics, such as age and gender.</span></span>  
  
 <span data-ttu-id="7ce0f-107">Zum Generieren von Sprache eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt als Argument übergeben der <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-107">To generate speech from a <xref:System.Speech.Synthesis.PromptBuilder> object, you can pass it as an argument to the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A> method.</span></span>  
  
 <span data-ttu-id="7ce0f-108">Weitere Informationen finden Sie unter [Erstellen komplexer Prompt](http://msdn.microsoft.com/library/552cb356-7344-473e-b0f2-7a9983f8c1a4).</span><span class="sxs-lookup"><span data-stu-id="7ce0f-108">For more information, see [Constructing a Complex Prompt](http://msdn.microsoft.com/library/552cb356-7344-473e-b0f2-7a9983f8c1a4).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ce0f-109">Erstellt eine neue Instanz der <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-109">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-110">Erstellt eine neue Instanz der <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-110">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ce0f-111">Das folgende Beispiel erstellt ein neues <xref:System.Speech.Synthesis.PromptBuilder> -Instanz und eine Textzeichenfolge hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-111">The following example creates a new <xref:System.Speech.Synthesis.PromptBuilder> instance and adds a text string to it.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="7ce0f-112">Das folgende Markup zeigt das Äquivalent in die Spracherkennung Sprachsynthese Markup Language (SSML), (`xml:lang` ist ein erforderliches Attribut des der `speak` Element):</span><span class="sxs-lookup"><span data-stu-id="7ce0f-112">The following markup shows the equivalent in Speech Synthesis Markup Language (SSML), (`xml:lang` is a required attribute of the `speak` element):</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PromptBuilder (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.#ctor(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PromptBuilder(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="7ce0f-113">Enthält Informationen über eine bestimmte Kultur, wie ihre Sprache, den Namen der Kultur, das Schreibsystem, den verwendeten Kalender und darüber, wie Datumsangaben formatiert und Zeichenfolgen sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-113">Provides information about a specific culture, such as its language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="7ce0f-114">Erstellt eine neue Instanz der <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Klasse und gibt eine Kultur an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-114">Creates a new instance of the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> class and specifies a culture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-115">Dieser Konstruktor legt den Wert für die <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-115">This constructor sets the value for the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="7ce0f-116">Die <xref:System.Speech.Synthesis.SpeechSynthesizer> Objekt versucht, eine installierte Stimme auswählen, die die angegebene Sprache unterstützt die `culture` Parameter an die Eingabeaufforderung zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-116">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the `culture` parameter to process the prompt.</span></span> <span data-ttu-id="7ce0f-117">Wenn eine Sprache mit der angegebenen Kultur gefunden wird, wird er verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-117">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="7ce0f-118">Wenn eine Sprache mit der angegebenen Kultur nicht gefunden werden kann, wird eine Stimme an Standardeinstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-118">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="7ce0f-119">Um Wörter in die angegebene Sprache richtig ausgesprochen der `culture` Parameter, eine Sprache (Sprachausgabe oder Sprachausgabe) sprachsynthesemodul die Sprache unterstützt muss installiert sein.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-119">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="7ce0f-120">Eine installierte Sprachausgabe-Modul aufgerufen wird, eine Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-120">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="7ce0f-121">Verwenden Sie zum Abrufen von Informationen darüber, welche stimmen installiert sind für eine bestimmte Kultur der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-121">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="7ce0f-122">Microsoft Windows und die System.Speech-API können Sie alle gültigen Sprache / Land-Codes als Werte für `culture`.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-122">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="7ce0f-123">Die Sprachausgabe-Module, die mit den im Lieferumfang von Windows 7 unterstützen die folgenden Sprache / Land-Codes:</span><span class="sxs-lookup"><span data-stu-id="7ce0f-123">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="7ce0f-124">En-US.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-124">en-US.</span></span> <span data-ttu-id="7ce0f-125">Englisch (Vereinigte Staaten)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-125">English (United States)</span></span>  
  
-   <span data-ttu-id="7ce0f-126">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-126">zh-CN.</span></span> <span data-ttu-id="7ce0f-127">Chinesisch (China)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-127">Chinese (China)</span></span>  
  
-   <span data-ttu-id="7ce0f-128">Zh-TW.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-128">zh-TW.</span></span> <span data-ttu-id="7ce0f-129">Chinesisch (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-129">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="7ce0f-130">Zwei Buchstaben bestehende Sprachcode, z. B. "En" sind ebenfalls zulässig.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-130">Two-letter language codes such as "en" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-131">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> -Instanz und gibt seine <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-131">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies its <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A>.</span></span>  
  
```csharp  
using System.Speech.Synthesis;  
  
public void MySimpleText ()  
{  
    PromptBuilder builder = new PromptBuilder(new System.Globalization.CultureInfo("en-US"));  
    builder.AppendText("Hello world!");  
}  
```  
  
 <span data-ttu-id="7ce0f-132">Das folgende Markup zeigt das entsprechende SSML:</span><span class="sxs-lookup"><span data-stu-id="7ce0f-132">The following markup shows the equivalent SSML:</span></span>  
  
```xml  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-US">  
  Hello world!  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendAudio">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ce0f-133">Fügt einem <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt eine angegebene Audiodatei an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-133">Appends a specified audio file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="7ce0f-134">Der vollqualifizierte Pfad zu der Audiodatei.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-134">A fully qualified path to the audio file.</span></span></param>
        <summary><span data-ttu-id="7ce0f-135">Fügt die angegebene Audiodatei dem <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-135">Appends the specified audio file to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="audioFile"><span data-ttu-id="7ce0f-136">URI für die Audiodatei.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-136">URI for the audio file.</span></span></param>
        <summary><span data-ttu-id="7ce0f-137">Fügt die Audio-Datei am angegebenen URI an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-137">Appends the audio file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ce0f-138">Im folgende Beispiel initialisiert eine neue Instanz der dem <xref:System.Speech.Synthesis.PromptBuilder> -Klasse und fügt dann Text, gefolgt von einer Audiodatei.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-138">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class and then adds text to it, followed by an audio file.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
    // Add a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendText("How are you today?");  
    builder.AppendAudio(new Uri ("http://www.speech.microsoft.com/ding.wav"));  
}  
```  
  
 <span data-ttu-id="7ce0f-139">Das folgende Markup zeigt das entsprechende SSML-Markup.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-139">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  How are you today?  
  <audio src="http://www.speech.microsoft.com/ding.wav" />  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendAudio">
      <MemberSignature Language="C#" Value="public void AppendAudio (Uri audioFile, string alternateText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendAudio(class System.Uri audioFile, string alternateText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendAudio(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendAudio (audioFile As Uri, alternateText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendAudio(Uri ^ audioFile, System::String ^ alternateText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFile" Type="System.Uri" />
        <Parameter Name="alternateText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="audioFile"><span data-ttu-id="7ce0f-140">URI für die Audiodatei.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-140">URI for the audio file.</span></span></param>
        <param name="alternateText"><span data-ttu-id="7ce0f-141">Eine Zeichenfolge, die den alternativen Text enthält, der das Audio darstellt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-141">A string containing alternate text representing the audio.</span></span></param>
        <summary><span data-ttu-id="7ce0f-142">Fügt die angegebene Audiodatei und den alternativen Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-142">Appends the specified audio file and alternate text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-143">Die Spracherkennung sprachsynthesemodul wird den alternativen Text gesprochen, wenn die Audiodatei nicht wiedergegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-143">The speech synthesis engine will speak the alternate text if the audio file cannot be played.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-144">In den folgenden Beispielen Fügt eine Audiodatei an eine <xref:System.Speech.Synthesis.PromptBuilder> -Instanz und gibt den Text, sprechen, wenn die Audiodatei nicht wiedergegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-144">The following examples adds an audio file to a <xref:System.Speech.Synthesis.PromptBuilder> instance and specifies text to speak if the audio file cannot be played.</span></span>  
  
```csharp  
using System.Speech.PromptBuilder;  
  
public void SimpleConcatenation()  
{  
  
    // Concatenate a prompt fragment from a .wav file.  
    PromptBuilder builder = new PromptBuilder ();  
    builder.AppendAudio(new Uri ("C:\\OnHold.wav"), "Your call will be answered in the order it was received");  
}  
```  
  
 <span data-ttu-id="7ce0f-145">Das folgende Markup zeigt das entsprechende SSML-Markup.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-145">The following markup shows the equivalent SSML markup.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis"  
       xmlns:ms="http://www.microsoft.com/speech/synthesis" xml:lang="en">  
  
  <audio src="C:\OnHold.wav"> Your call will be answered in the order it was received. </audio>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBookmark">
      <MemberSignature Language="C#" Value="public void AppendBookmark (string bookmarkName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBookmark(string bookmarkName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBookmark(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBookmark (bookmarkName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBookmark(System::String ^ bookmarkName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bookmarkName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="bookmarkName"><span data-ttu-id="7ce0f-146">Eine Zeichenfolge mit dem Namen des angefügten Lesezeichens.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-146">A string containing the name of the appended bookmark.</span></span></param>
        <summary><span data-ttu-id="7ce0f-147">Fügt ein Lesezeichen an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-147">Appends a bookmark to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-148">Einem sprachsynthesemodul Spracherkennung generiert eine <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> Ereignis festgestellten ein Lesezeichen beim Sprechen mit einer der Aufforderung der <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, oder <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-148">A speech synthesis engine will generate a <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event if it encounters a bookmark while speaking a prompt using any of the <xref:System.Speech.Synthesis.SpeechSynthesizer.Speak%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakAsync%2A>, <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsml%2A>, or <xref:System.Speech.Synthesis.SpeechSynthesizer.SpeakSsmlAsync%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-149">Das folgende Beispiel erstellt eine Aufforderung, die zwei Textmarken enthält, und sendet die Ausgabe an eine WAV-Datei für die Wiedergabe.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-149">The following example creates a prompt that includes two bookmarks and sends the output to a WAV file for playback.</span></span> <span data-ttu-id="7ce0f-150">Der Handler für das <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> Ereignis schreibt den Namen des Lesezeichens und seine Position in den Audiostream aus, wenn das Ereignis, an die Konsole ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-150">The handler for the <xref:System.Speech.Synthesis.SpeechSynthesizer.BookmarkReached> event writes the name of the bookmark and its position in the audio stream when the event was raised to the console.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt and append bookmarks.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "The weather forecast for today is partly cloudy with some sun breaks.");  
        builder.AppendBookmark("Daytime forecast");  
        builder.AppendText(  
          "Tonight's weather will be cloudy with a 30% chance of showers.");  
        builder.AppendBookmark("Nightime forecast");  
  
        // Add a handler for the BookmarkReached event.  
        synth.BookmarkReached +=  
          new EventHandler<BookmarkReachedEventArgs>(synth_BookmarkReached);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  
    // Write the name and position of the bookmark to the console.  
    static void synth_BookmarkReached(object sender, BookmarkReachedEventArgs e)  
    {  
      Console.WriteLine("Bookmark ({0}) reached at: {1} ",  
        e.Bookmark, e.AudioPosition);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendBreak">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ce0f-151">Fügt eine Unterbrechung (Anhalten) im Inhalt eines <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekts ein.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-151">Inserts a break (pause) in the content of a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-152">Fügt dem <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt eine Unterbrechung an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-152">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-153">Diese Methode gibt keine Dauer für die Unterbrechung an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-153">This method does not specify a duration for the break.</span></span> <span data-ttu-id="7ce0f-154">Die <xref:System.Speech.Synthesis.SpeechSynthesizer> einen Duration-Wert, der auf Grundlage des Kontexts linguistische bestimmt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-154">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will determine a duration value based on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-155">Das folgende Beispiel erstellt eine Aufforderung, enthält zwei Sätze, die durch eine Unterbrechung getrennt und spricht der aus, um das Standardaudiogerät auf dem Computer.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-155">The following example builds a prompt containing two sentences separated by a break and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45.");  
        builder.AppendBreak();  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:30, and 9:15.");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (System.Speech.Synthesis.PromptBreak strength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.Speech.Synthesis.PromptBreak strength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.Speech.Synthesis.PromptBreak)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (strength As PromptBreak)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(System::Speech::Synthesis::PromptBreak strength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strength" Type="System.Speech.Synthesis.PromptBreak" />
      </Parameters>
      <Docs>
        <param name="strength"><span data-ttu-id="7ce0f-156">Gibt die Dauer der Unterbrechung an, mit den folgenden Erhöhungswerten:</span><span class="sxs-lookup"><span data-stu-id="7ce0f-156">Indicates the duration of the break, with the following increasing values:</span></span></param>
        <summary><span data-ttu-id="7ce0f-157">Fügt dem <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt eine Unterbrechung an und gibt die Stärke (Dauer) an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-157">Appends a break to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its strength (duration).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-158">Die Werte in der <xref:System.Speech.Synthesis.PromptBreak> Enumeration einen Bereich der Trennung Intervalle (angehalten) zwischen Wortgrenzen darstellen.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-158">The values in the <xref:System.Speech.Synthesis.PromptBreak> enumeration represent a range of separation intervals (pauses) between word boundaries.</span></span> <span data-ttu-id="7ce0f-159">Die Spracherkennung sprachsynthesemodul bestimmt die genaue Dauer des Intervalls.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-159">The speech synthesis engine determines the exact duration of the interval.</span></span> <span data-ttu-id="7ce0f-160">Eine Unterbrechung angefordert wird, wird einen der folgenden Werte an das Modul für die Sprachausgabe-(Sprachausgabe), übergeben die eine Zuordnung zwischen diesen Werten und die entsprechenden Millisekunde Break Werte enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-160">When a break is requested, one of these values is passed to the text-to-speech (TTS) engine, which contains a mapping between these values and the corresponding millisecond break values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-161">Im folgenden Beispiel wird eine Aufforderung, enthält zwei Sätze, die durch eine Unterbrechung getrennt erstellt und sendet die Ausgabe an eine WAV-Datei für die Wiedergabe.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-161">The following example builds a prompt containing two sentences separated by a break and sends the output to a WAV file for playback.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(PromptBreak.Medium);  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendBreak">
      <MemberSignature Language="C#" Value="public void AppendBreak (TimeSpan duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendBreak(valuetype System.TimeSpan duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendBreak(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendBreak (duration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendBreak(TimeSpan duration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="duration"><span data-ttu-id="7ce0f-162">Die Zeit in Ticks, wobei ein Tick 100 Nanosekunden entspricht.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-162">The time in ticks, where one tick equals 100 nanoseconds.</span></span></param>
        <summary><span data-ttu-id="7ce0f-163">Fügt an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt eine Unterbrechung der angegebenen Dauer an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-163">Appends a break of the specified duration to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-164">Eine Unterbrechung kann verwendet werden, angehalten oder andere prosodische Grenzen zwischen Wörtern zu steuern.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-164">A break can be used to control pauses or other prosodic boundaries between words.</span></span> <span data-ttu-id="7ce0f-165">Eine Unterbrechung ist optional.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-165">A break is optional.</span></span> <span data-ttu-id="7ce0f-166">Wenn eine Unterbrechung nicht vorhanden ist, bestimmt die vom Synthesizer die Pause zwischen Wörtern je nach linguistischen Kontext.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-166">If a break is not present, the synthesizer determines the break between words depending on the linguistic context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-167">Das folgende Beispiel erstellt eine Aufforderung, enthält zwei Sätze, die durch eine Unterbrechung der 15,000,000 Ticks (1,5 Sekunden) getrennt und spricht der aus, um das Standardaudiogerät auf dem Computer.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-167">The following example builds a prompt containing two sentences separated by a break of 15,000,000 ticks (1.5 seconds), and speaks the prompt to the default audio device on the computer.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt with two sentences separated by a break.  
        PromptBuilder builder = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        builder.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 8:45");  
        builder.AppendBreak(new TimeSpan(15000000));  
        builder.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendPromptBuilder">
      <MemberSignature Language="C#" Value="public void AppendPromptBuilder (System.Speech.Synthesis.PromptBuilder promptBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendPromptBuilder(class System.Speech.Synthesis.PromptBuilder promptBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendPromptBuilder(System.Speech.Synthesis.PromptBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendPromptBuilder(System::Speech::Synthesis::PromptBuilder ^ promptBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="promptBuilder" Type="System.Speech.Synthesis.PromptBuilder" />
      </Parameters>
      <Docs>
        <param name="promptBuilder"><span data-ttu-id="7ce0f-168">Der Inhalt, der angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-168">The content to append.</span></span></param>
        <summary><span data-ttu-id="7ce0f-169">Fügt ein <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an ein anderes <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-169">Appends a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object to another <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ce0f-170">Das folgende Beispiel erstellt zwei <xref:System.Speech.Synthesis.PromptBuilder> Instanzen und fügt sie dann in einer dritten <xref:System.Speech.Synthesis.PromptBuilder>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-170">The example that follows creates two <xref:System.Speech.Synthesis.PromptBuilder> instances and then appends them to a third <xref:System.Speech.Synthesis.PromptBuilder>.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\showtimes.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\showtimes.wav");  
  
        // Build child prompts.  
        PromptBuilder theatreA = new PromptBuilder();  
        theatreA.AppendText(  
          "Tonight's movie showings in theater A are at 5:45, 7:15, and 9:30");  
        theatreA.AppendBreak(PromptBreak.Large);  
        PromptBuilder theatreB = new PromptBuilder();  
        theatreB.AppendText(  
          "Tonight's movie showings in theater B are at 5:15, 7:15, and 9:15");  
  
        // Build the parent prompt and append the two child prompts.  
        PromptBuilder showTimes = new PromptBuilder(  
          new System.Globalization.CultureInfo("en-US"));  
        showTimes.AppendText(  
          "The following are the show times for tonight's movies:");  
        showTimes.AppendPromptBuilder(theatreA);  
        showTimes.AppendPromptBuilder(theatreB);  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(showTimes);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSsml">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ce0f-171">Fügt eine SSML-Datei an ein <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-171">Appends an SSML file to a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="7ce0f-172">Ein vollqualifizierter Pfad zu der SSML-Datei, die angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-172">A fully qualified path to the SSML file to append.</span></span></param>
        <summary><span data-ttu-id="7ce0f-173">Fügt die SSML-Datei am angegebenen Pfad an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-173">Appends the SSML file at the specified path to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-174">Die SSML-Datei muss eine XML-Formatdatei, entspricht, die [Speech Sprachsynthese Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-174">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specification.</span></span>  
  
 <span data-ttu-id="7ce0f-175">Sie können auch die SSML-Markup als Zeichenfolge mithilfe Anfügen <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-175">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-176">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt und fügt den Inhalt eines SSML-Datei mithilfe der <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-176">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml("c:\\test\\Weather.ssml");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 <span data-ttu-id="7ce0f-177">Im folgenden finden die SSML-Datei, die im vorherige Beispiel verweist.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-177">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (Uri ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Uri ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(Uri ^ ssmlFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="ssmlFile"><span data-ttu-id="7ce0f-178">Ein vollqualifizierter URI zu der SSML-Datei, die angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-178">A fully qualified URI to the SSML file to append.</span></span></param>
        <summary><span data-ttu-id="7ce0f-179">Fügt die SSML-Datei am angegebenen URI an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-179">Appends the SSML file at the specified URI to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-180">Die SSML-Datei muss eine XML-Formatdatei, entspricht, die [Speech Sprachsynthese Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-180">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="7ce0f-181">Sie können auch die SSML-Markup als Zeichenfolge mithilfe Anfügen <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-181">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-182">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt und fügt den Inhalt eines SSML-Datei mithilfe der <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-182">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends the contents of an SSML file using the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a file that defines an SSML prompt.  
        PromptBuilder ssmlFile = new PromptBuilder();  
        ssmlFile.AppendSsml(new Uri("c:\\test\\Weather.ssml"));  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(ssmlFile);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 <span data-ttu-id="7ce0f-183">Im folgenden finden die SSML-Datei, die im vorherige Beispiel verweist.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-183">The following is the SSML file that the preceding example references.</span></span>  
  
```xml  
<?xml version="1.0" encoding="ISO-8859-1"?>  
<speak version="1.0"  
 xmlns="http://www.w3.org/2001/10/synthesis"  
 xml:lang="en-US">  
  
  <s> The weather forecast for today is partly cloudy with some sun breaks. </s>  
  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsml">
      <MemberSignature Language="C#" Value="public void AppendSsml (System.Xml.XmlReader ssmlFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsml(class System.Xml.XmlReader ssmlFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsml(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsml (ssmlFile As XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsml(System::Xml::XmlReader ^ ssmlFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlFile" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="ssmlFile"><span data-ttu-id="7ce0f-184">Der vollqualifizierte Name der XML-Datei, die angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-184">A fully qualified name to the XML file to append.</span></span></param>
        <summary><span data-ttu-id="7ce0f-185">Fügt ein <c>XMLReader</c>-Objekt an, das auf eine SSML-Eingabeaufforderung auf das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt verweist.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-185">Appends an <c>XMLReader</c> object that references an SSML prompt to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-186">Die SSML-Datei muss eine XML-Formatdatei, entspricht, die [Speech Sprachsynthese Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) Spezifikation.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-186">The SSML file must be an XML-format file that conforms to the [Speech Synthesis Markup Language (SSML) Version 1.0](https://www.w3.org/TR/speech-synthesis/) specification.</span></span>  
  
 <span data-ttu-id="7ce0f-187">Sie können auch die SSML-Markup als Zeichenfolge mithilfe Anfügen <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-187">You can also append SSML markup as a string using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-188">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt aus einer <xref:System.Xml.XmlReader> Objekt, das eine Datei, die Spracherkennung Sprachsynthese Markup Language (SSML) Markup verweist.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-188">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object from an <xref:System.Xml.XmlReader> object that references a file containing Speech Synthesis Markup Language (SSML) markup.</span></span>  
  
```csharp  
using System;  
using System.Xml;  
using System.IO;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToWaveFile(@"C:\test\weather.wav");  
  
        // Create a SoundPlayer instance to play the output audio file.  
        System.Media.SoundPlayer m_SoundPlayer =  
          new System.Media.SoundPlayer(@"C:\test\weather.wav");  
  
        // Create the path to the SSML file.  
        string weatherFile = Path.GetFullPath("c:\\test\\Weather.xml");  
        PromptBuilder builder = null;  
  
        // Create an XML Reader from the file, create a PromptBuilder and   
        // append the XmlReader.  
        if (File.Exists(weatherFile))  
        {  
          XmlReader reader = XmlReader.Create(weatherFile);  
          builder = new PromptBuilder();  
          builder.AppendSsml(reader);  
          reader.Close();  
        }  
  
        // Speak the prompt and play back the output file.  
        synth.Speak(builder);  
        m_SoundPlayer.Play();  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSsmlMarkup">
      <MemberSignature Language="C#" Value="public void AppendSsmlMarkup (string ssmlMarkup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSsmlMarkup(string ssmlMarkup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSsmlMarkup (ssmlMarkup As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSsmlMarkup(System::String ^ ssmlMarkup);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssmlMarkup" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ssmlMarkup"><span data-ttu-id="7ce0f-189">Eine Zeichenfolge, die SSML-Code enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-189">A string containing SSML markup.</span></span></param>
        <summary><span data-ttu-id="7ce0f-190">Fügt die angegebene Zeichenfolge, die SSML-Code enthält, an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-190">Appends the specified string containing SSML markup to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-191">Sie müssen die entsprechenden Escapezeichen verwenden, wenn Markup SSML anfügen.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-191">You must use the appropriate escape characters when appending SSML markup.</span></span> <span data-ttu-id="7ce0f-192">Beachten Sie die Abwärtskompatibilität Schrägstriche vor die Anführungszeichen, die den Wert der einschließenden der `interpret-as` Attribut im folgenden Beispiel:</span><span class="sxs-lookup"><span data-stu-id="7ce0f-192">Notice the backward-slashes preceding the quotation marks enclosing the value of the `interpret-as` attribute in the following example:</span></span>  
  
```csharp  
builder.AppendSsmlMarkup("<say-as interpret-as = \"characters\"> chair </say-as>");  
```  
  
> [!NOTE]
>  <span data-ttu-id="7ce0f-193">Die Zeichenfolge als Argument an <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> keine enthalten eine `speak` Element.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-193">The string used as an argument to <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> cannot include a `speak` element.</span></span>  
  
 <span data-ttu-id="7ce0f-194">Bei Verwendung <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> an Inline Aussprache in einem `phoneme` -Element, können Sie Telefone mithilfe eines der folgenden Phonetic Alphabete, angegeben, dass das aktuelle Sprachmodul unterstützt:</span><span class="sxs-lookup"><span data-stu-id="7ce0f-194">When using <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A> to specify inline pronunciations in a `phoneme` element, you can use phones from any of the following phonetic alphabets, provided that the current speech engine supports it:</span></span>  
  
-   <span data-ttu-id="7ce0f-195">Internationalen Lautalphabet (IPA)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-195">International Phonetic Alphabet (IPA)</span></span>  
  
-   <span data-ttu-id="7ce0f-196">Universelle Phone Satz (USV)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-196">Universal Phone Set (UPS)</span></span>  
  
-   <span data-ttu-id="7ce0f-197">SAPI Phone festlegen</span><span class="sxs-lookup"><span data-stu-id="7ce0f-197">SAPI Phone Set</span></span>  
  
 <span data-ttu-id="7ce0f-198">Alle SSML-kompatible Sprachmodul wird aus dem IPA Telefone gesprochen.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-198">Any SSML-compliant speech engine will speak phones from the IPA.</span></span>  
  
 <span data-ttu-id="7ce0f-199">Sie können auch eine Datei, die mit einer der SSML-Markup Anfügen der <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-199">You can also append a file containing SSML markup using one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendSsml%2A> methods.</span></span> <span data-ttu-id="7ce0f-200">Um den zu sprechenden Text angefügt werden soll, die nicht mit Markupsprache formatiert ist, gehen die <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, oder <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-200">To append text to be spoken that is not formatted with markup language, use one of the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias%2A>, <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint%2A>, or <xref:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendText">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ce0f-201">Fügt Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-201">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="7ce0f-202">Eine Zeichenfolge, die den zu sprechenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-202">A string containing the text to be spoken.</span></span></param>
        <summary><span data-ttu-id="7ce0f-203">Bezeichnet Text, der an das Objekt <see cref="T:System.Speech.Synthesis.PromptBuilder" /> anzufügen ist.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-203">Specifies text to append to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-204">Verwenden Sie zum Anfügen von Text, die SSML-Markupsprache formatiert ist, <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-204">To append text that is formatted as SSML markup language, use <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-205">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt und fügt eine Zeichenfolge mit Text die <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-205">The example that follows creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends a text string using the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and append a text string.  
        PromptBuilder speakText = new PromptBuilder();  
        speakText.AppendText("Say the name of the song you want to hear");  
  
        // Speak the contents of the prompt.  
        synth.Speak(speakText);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptEmphasis emphasis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptEmphasis emphasis) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptEmphasis)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, emphasis As PromptEmphasis)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptEmphasis emphasis);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="emphasis" Type="System.Speech.Synthesis.PromptEmphasis" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="7ce0f-206">Eine Zeichenfolge, die den zu sprechenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-206">A string containing the text to be spoken.</span></span></param>
        <param name="emphasis"><span data-ttu-id="7ce0f-207">Der auf den Text anzuwendende Wert für Nachdruck oder Betonung.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-207">The value for the emphasis or stress to apply to the text.</span></span></param>
        <summary><span data-ttu-id="7ce0f-208">Fügt Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an und gibt den Grad der Betonung für den Text an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-208">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the degree of emphasis for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-209">Die Spracherkennung Sprachsynthesemodule in Windows unterstützt zu diesem Zeitpunkt nicht den Schwerpunkt Parameter.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-209">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="7ce0f-210">Festlegen von Werten für den Parameter Betonung erzeugt keine akustische Änderung in der Ausgabe gebildeter Sprache.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-210">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptRate rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptRate rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptRate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, rate As PromptRate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptRate rate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="rate" Type="System.Speech.Synthesis.PromptRate" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="7ce0f-211">Eine Zeichenfolge, die den zu sprechenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-211">A string containing the text to be spoken.</span></span></param>
        <param name="rate"><span data-ttu-id="7ce0f-212">Der auf den Text anzuwendende Wert für die Sprechgeschwindigkeit.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-212">The value for the speaking rate to apply to the text.</span></span></param>
        <summary><span data-ttu-id="7ce0f-213">Fügt Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an und gibt die Sprechgeschwindigkeit für den Text an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-213">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the speaking rate for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7ce0f-214">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt und fügt Sie Textzeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-214">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="7ce0f-215">Im Beispiel wird die <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> Methode, um eine langsame sprechen anzugeben rate für die Zeichenfolge, die hinzugefügt wird, der den Inhalt einer Bestellung aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-215">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder speakRate = new PromptBuilder();  
        speakRate.AppendText("Your order for");  
        speakRate.AppendText("one kitchen sink and one faucet", PromptRate.Slow);  
        speakRate.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(speakRate);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textToSpeak, System.Speech.Synthesis.PromptVolume volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textToSpeak, valuetype System.Speech.Synthesis.PromptVolume volume) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendText(System.String,System.Speech.Synthesis.PromptVolume)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textToSpeak As String, volume As PromptVolume)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textToSpeak, System::Speech::Synthesis::PromptVolume volume);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="volume" Type="System.Speech.Synthesis.PromptVolume" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="7ce0f-216">Eine Zeichenfolge, die den zu sprechenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-216">A string containing the text to be spoken.</span></span></param>
        <param name="volume"><span data-ttu-id="7ce0f-217">Der auf den Text anzuwendende Wert für die Sprecherlautstärke.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-217">The value for the speaking volume (loudness) to apply to the text.</span></span></param>
        <summary><span data-ttu-id="7ce0f-218">Fügt Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an und gibt die Lautstärke an, mit der der Text gesprochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-218">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the volume to speak the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-219">Die <xref:System.Speech.Synthesis.PromptVolume.Default> festlegen für <xref:System.Speech.Synthesis.PromptVolume> ist ganzer Volumes, die die gleiche ist als <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-219">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="7ce0f-220">Die anderen Einstellungen Verringern der Lautstärke der Sprachausgabe relativ zum vollständige Volumeverschlüsselung.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-220">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-221">Im folgenden Beispiel wird die <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> Methode, um die Volumeeinstellungen angeben, die die <xref:System.Speech.Synthesis.SpeechSynthesizer> sollten auf Sprechpause anwenden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-221">The following example uses the <xref:System.Speech.Synthesis.PromptBuilder.AppendText%2A> method to specify volume settings that the <xref:System.Speech.Synthesis.SpeechSynthesizer> should apply to speech output.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Build a prompt that applies different volume settings.  
        PromptBuilder builder = new PromptBuilder();  
        builder.AppendText("This is the default speaking volume.", PromptVolume.Default);  
        builder.AppendBreak();  
        builder.AppendText("This is the extra loud speaking volume.", PromptVolume.ExtraLoud);  
        builder.AppendBreak();  
        builder.AppendText("This is the medium speaking volume.", PromptVolume.Medium);  
  
        // Speak the prompt.  
        synth.Speak(builder);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithAlias">
      <MemberSignature Language="C#" Value="public void AppendTextWithAlias (string textToSpeak, string substitute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithAlias(string textToSpeak, string substitute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithAlias(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithAlias (textToSpeak As String, substitute As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithAlias(System::String ^ textToSpeak, System::String ^ substitute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="substitute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="7ce0f-222">Eine Zeichenfolge, die die Textdarstellung enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-222">A string containing the text representation.</span></span></param>
        <param name="substitute"><span data-ttu-id="7ce0f-223">Eine Zeichenfolge, die den zu sprechenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-223">A string containing the text to be spoken.</span></span></param>
        <summary><span data-ttu-id="7ce0f-224">Fügt Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an und gibt den Aliastext an, der anstelle des angefügten Texts gesprochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-224">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the alias text to be spoken in place of the appended text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-225">Dadurch wird ein Dokument einen gesprochenen und eine geschriebene Form für eine Aufforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-225">This allows a document to contain both a spoken and a written form for a prompt.</span></span> <span data-ttu-id="7ce0f-226">Z. B. geschriebene Form ist möglicherweise ein Akronym, z. B. SAPI, und die gesprochene Form erweiterten Text für die Abkürzung, in diesem Fall Speech Application Programming Interface werden konnte.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-226">For example, the written form could be an acronym, such as SAPI, and the spoken form could be the expanded text for the acronym, in this case Speech Application Programming Interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-227">Das folgende Beispiel fügt eine Textzeichenfolge ("Spracherkennung Sprachsynthese Markup Language") und den Alias ("SSML") an eine <xref:System.Speech.Synthesis.PromptBuilder> Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-227">The following example appends a text string ("Speech Synthesis Markup Language") and its alias ("SSML") to a <xref:System.Speech.Synthesis.PromptBuilder> object.</span></span> <span data-ttu-id="7ce0f-228">Die vom Synthesizer wird "S, S, M, L" ausgesprochen.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-228">The synthesizer will pronounce "S S M L".</span></span>  
  
```  
PromptBuilder alias = new PromptBuilder();  
alias.AppendTextWithAlias("Speech Synthesis Markup Language","SSML");   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendTextWithHint">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ce0f-229">Fügt Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an und gibt den Inhaltstyp des Texts an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-229">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type of the text.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, System.Speech.Synthesis.SayAs sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, valuetype System.Speech.Synthesis.SayAs sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.Speech.Synthesis.SayAs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::Speech::Synthesis::SayAs sayAs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.Speech.Synthesis.SayAs" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="7ce0f-230">Eine Zeichenfolge, die den zu sprechenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-230">A string containing the text to be spoken.</span></span></param>
        <param name="sayAs"><span data-ttu-id="7ce0f-231">Der Inhaltstyps des Texts.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-231">The content type of the text.</span></span></param>
        <summary><span data-ttu-id="7ce0f-232">Fügt Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an und gibt den Inhaltstyp mithilfe eines Members der <see cref="T:System.Speech.Synthesis.SayAs" />-Enumeration an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-232">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the content type using a member of the <see cref="T:System.Speech.Synthesis.SayAs" /> enumeration.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-233">Durch angegebene Inhaltstyp `sayAs` bietet Unterstützung, die Spracherkennung sprachsynthesemodul dazu, wie Sie den Inhalt der ausgesprochen `textToSpeak`.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-233">The content type specified by `sayAs` can provide guidance to the speech synthesis engine about how to pronounce the contents of `textToSpeak`.</span></span>  
  
   
  
## Examples  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and define the data types for some of the added strings.  
        PromptBuilder sayAs = new PromptBuilder();  
        sayAs.AppendText("Your");  
        sayAs.AppendTextWithHint("1st", SayAs.NumberOrdinal);  
        sayAs.AppendText("request was for");  
        sayAs.AppendTextWithHint("1", SayAs.NumberCardinal);  
        sayAs.AppendText("room, on");  
        sayAs.AppendTextWithHint("10/19/2012,", SayAs.MonthDayYear);  
        sayAs.AppendText("with early arrival at");  
        sayAs.AppendTextWithHint("12:35pm", SayAs.Time12);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(sayAs);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithHint">
      <MemberSignature Language="C#" Value="public void AppendTextWithHint (string textToSpeak, string sayAs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithHint(string textToSpeak, string sayAs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithHint(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithHint (textToSpeak As String, sayAs As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithHint(System::String ^ textToSpeak, System::String ^ sayAs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="sayAs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="7ce0f-234">Eine Zeichenfolge, die den zu sprechenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-234">A string containing the text to be spoken.</span></span></param>
        <param name="sayAs"><span data-ttu-id="7ce0f-235">Der Inhaltstyps des Texts.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-235">The content type of the text.</span></span></param>
        <summary><span data-ttu-id="7ce0f-236">Fügt Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an und eine <see cref="T:System.String" />, die den Inhaltstyp des Texts angibt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-236">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and a <see cref="T:System.String" /> that specifies the content type of the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-237">Sie können diese Methode verwenden, um einen Inhaltstyp anzugeben, die nicht in der <xref:System.Speech.Synthesis.SayAs> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-237">You can use this method to specify a content type that is not included in the <xref:System.Speech.Synthesis.SayAs> enumeration.</span></span> <span data-ttu-id="7ce0f-238">Das Modul für die Sprachausgabe muss jedoch der Parameter unterstützt, den Sie angeben.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-238">However, the TTS engine must support the parameter that you specify.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithPronunciation">
      <MemberSignature Language="C#" Value="public void AppendTextWithPronunciation (string textToSpeak, string pronunciation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextWithPronunciation(string textToSpeak, string pronunciation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.AppendTextWithPronunciation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextWithPronunciation (textToSpeak As String, pronunciation As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextWithPronunciation(System::String ^ textToSpeak, System::String ^ pronunciation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToSpeak" Type="System.String" />
        <Parameter Name="pronunciation" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToSpeak"><span data-ttu-id="7ce0f-239">Eine Zeichenfolge, die die im konventionellen Alphabet einer Sprache geschriebene Form des Worts enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-239">A string containing the written form of the word using the conventional alphabet for a language.</span></span></param>
        <param name="pronunciation"><span data-ttu-id="7ce0f-240">Eine Zeichenfolge, die die zu sprechenden Sprachlaute aus dem internationalen Lautalphabet (IPA) enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-240">A string containing phones to be spoken from the International Phonetic Alphabet (IPA).</span></span></param>
        <summary><span data-ttu-id="7ce0f-241">Fügt Text an das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt an und gibt die Aussprache für den Text an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-241">Appends text to the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the pronunciation for the text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-242">Die vom Synthesizer spricht, den Inhalt der der `pronunciation` Parameter, die nicht den Inhalt der `textToSpeak` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-242">The synthesizer speaks the contents of the `pronunciation` parameter, not the contents of the `textToSpeak` parameter.</span></span>  
  
 <span data-ttu-id="7ce0f-243">Aussprache angegebenen Inline im eingabeaufforderungen gelten nur für die einzelnen Vorkommen eines Worts und Aussprache das Sprachmodul oder eines seiner derzeit aktiven Lexika überschreiben.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-243">Pronunciations specified inline in prompts apply only to the individual occurrence of a word and override pronunciations of the speech engine or any of its currently active lexicons.</span></span> <span data-ttu-id="7ce0f-244">In der Regel verwenden Sie Inline Aussprache für benutzerdefinierte Aussprache der vorhandenen Wörter oder Aussprache ungewöhnlich, dass Wörter, z. B. Eigennamen, die die Spracherkennung sprachsynthesemodul möglicherweise nicht ausgesprochen als auch erwartet.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-244">Typically, you will use inline pronunciations for custom pronunciations of existing words or for pronunciation of uncommon words, such as proper names, which the speech synthesis engine may not pronounce as well as expected.</span></span>  
  
 <span data-ttu-id="7ce0f-245">Inline-Aussprache müssen mit Smartphones aus internationalen Lautalphabet (IPA) angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-245">Inline pronunciations must be specified using phones from the International Phonetic Alphabet (IPA).</span></span> <span data-ttu-id="7ce0f-246">Ein Telefon ist ein Buchstabe oder ein Zeichen, das einen einzelne Sound Sprache darstellt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-246">A phone is a letter or character that represents a discreet sound of speech.</span></span> <span data-ttu-id="7ce0f-247">Spracherkennungsmodule, die die Einhaltung der [Speech Sprachsynthese Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) Spezifikation Telefone aus IPA ausgesprochen werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-247">Speech engines that comply with the [Speech Synthesis Markup Language (SSML) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201763) specification will pronounce phones from the IPA.</span></span> <span data-ttu-id="7ce0f-248">Inline-Aussprache mit anderen Phonetic Alphabete angeben zu können, finden Sie unter <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-248">To specify inline pronunciations using other phonetic alphabets, see <xref:System.Speech.Synthesis.PromptBuilder.AppendSsmlMarkup%2A>.</span></span>  
  
 <span data-ttu-id="7ce0f-249">Das IPA veröffentlicht eine [Diagramm](http://go.microsoft.com/fwlink/?LinkId=58362) , listet seine Telefone und ordnet diese den Unicode-Ziffern.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-249">The IPA publishes a [chart](http://go.microsoft.com/fwlink/?LinkId=58362) that lists its phones and maps them to Unicode numbers.</span></span>  
  
 <span data-ttu-id="7ce0f-250">Einige Telefone im Alphabet IPA haben die gleiche Darstellung als Buchstaben im lateinischen Alphabet.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-250">Some phones in the IPA alphabet have the same representations as letters in the Latin alphabet.</span></span> <span data-ttu-id="7ce0f-251">In diesen Fällen ist es möglich, geben die lateinischen Zeichensatz und die ordnungsgemäße Darstellung für ein Telefon haben.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-251">In those cases, it is possible to type the Latin character and have the proper representation for a phone.</span></span> <span data-ttu-id="7ce0f-252">Da die lateinischen Zeichen, wie häufig im Text verwendet mehrere Telefone IPA-Phone-Satz darstellen können, kommen Geben Sie einfach die lateinischen Zeichensatz nicht präzise IPA Telefon gewünscht.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-252">Because the Latin characters as commonly used in text may represent several phones of the IPA phone set, simply typing the Latin character might not result in the precise IPA phone desired.</span></span> <span data-ttu-id="7ce0f-253">Andere Telefone IPA Alphabet müssen im Code als dargestellt werden Zeichen Verweise besteht ein kaufmännisches und-Zeichen (&), Nummernzeichen (#), und eine Unicode-Anzahl für den gewünschten Phone im Hexadezimal- oder Decimal, alle gefolgt von einem Semikolon (;).</span><span class="sxs-lookup"><span data-stu-id="7ce0f-253">Other phones of the IPA alphabet need to be represented in code as character references consisting of an ampersand (&), the number sign (#), and a Unicode number for the desired phone in hexadecimal or decimal, all followed by a semicolon (;).</span></span> <span data-ttu-id="7ce0f-254">Z. B. eine Schwa (&\#X0259;) dargestellt werden würde `&#x0259;`.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-254">For example, a schwa (&\#x0259;) would be represented by `&#x0259;`.</span></span>  
  
 <span data-ttu-id="7ce0f-255">Um neue oder benutzerdefinierte Aussprache für mehrere Wörter hinzuzufügen, z. B. mit express regionale Dialekte oder Hinzufügen von Eigennamen oder Vokabular, das für eine Bildungseinrichtung oder medizinischen Disziplin spezifisch ist, erstellen Sie ein Lexikon und fügen Sie diese der <xref:System.Speech.Synthesis.SpeechSynthesizer> mit <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-255">To add new or custom pronunciations for multiple words, for example to express regional dialects or to add proper names or vocabulary that is specific to an educational or medical discipline, build a lexicon and add it to the <xref:System.Speech.Synthesis.SpeechSynthesizer> using <xref:System.Speech.Synthesis.SpeechSynthesizer.AddLexicon%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-256">Im folgende Beispiel initialisiert eine neue Instanz der dem <xref:System.Speech.Synthesis.PromptBuilder> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-256">The following example initializes a new instance of the <xref:System.Speech.Synthesis.PromptBuilder> class.</span></span> <span data-ttu-id="7ce0f-257">Er fügt die Zeichenfolge "Mein Name ist" mit der Instanz.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-257">It then appends the text string "My name is" to the instance.</span></span> <span data-ttu-id="7ce0f-258">Schließlich Fügt eine Zeichenfolge mit dem richtigen Namen "DuBois" an und gibt die Aussprache des Namens.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-258">Finally, it appends a string containing the proper name "DuBois" and specifies the pronunciation of the name.</span></span>  
  
```csharp  
public void ProperName()  
{  
    PromptBuilder builder = new PromptBuilder();  
    builder.AppendText("My name is");  
  
    // Add a proper name and its pronunciation.  
    builder.AppendTextWithPronunciation("DuBois", "duˈbwɑ");     
}  
```  
  
 <span data-ttu-id="7ce0f-259">Das folgende Markup zeigt das SSML, die von diesem <xref:System.Speech.Synthesis.PromptBuilder> -Objekts generiert.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-259">The following markup shows the SSML that this <xref:System.Speech.Synthesis.PromptBuilder> object generates.</span></span>  
  
```xml  
<speak xmlns="http://www.w3.org/2001/10/synthesis" xml:lang="en-us">  
  My name is <phoneme ph="duˈbwɑ"> DuBois </phoneme>  
</speak>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="C#" Value="public void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ClearContent" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-260">Löscht den Inhalt des <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-260">Clears the content from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ce0f-261">Ruft die Kulturinformationen für das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-261">Gets or sets the culture information for the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-262">Die <xref:System.Speech.Synthesis.SpeechSynthesizer> Objekt versucht, eine installierte Stimme auswählen, die die angegebene Sprache unterstützt die <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Eigenschaft, um die Eingabeaufforderung zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-262">The <xref:System.Speech.Synthesis.SpeechSynthesizer> object will attempt to select an installed voice that supports the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property to process the prompt.</span></span> <span data-ttu-id="7ce0f-263">Wenn eine Sprache mit der angegebenen Kultur gefunden wird, wird er verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-263">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="7ce0f-264">Wenn eine Sprache mit der angegebenen Kultur nicht gefunden werden kann, wird eine Stimme an Standardeinstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-264">If a voice with the specified culture cannot be found, the default voice will be used.</span></span>  
  
 <span data-ttu-id="7ce0f-265">Eine Kultur kann auch angegeben werden, in die Eingabeaufforderung zur Abschnitte von Inhalten mithilfe der <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, und <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-265">A culture may also be specified within the prompt for discreet sections of content using the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, and <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> methods.</span></span> <span data-ttu-id="7ce0f-266">Eine Kultur angegeben, für ein Teil des Inhalts mithilfe einer der oben genannten Methoden außer Kraft setzen die <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Eigenschaft beim aktiviert ist, und die <xref:System.Speech.Synthesis.SpeechSynthesizer> wird versucht, eine installierte Stimme auswählen, die die angegebene Sprache unterstützt die `culture` die Parameter der Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-266">A culture specified for a portion of content using one of the above methods will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property while in effect, and the <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter of the method.</span></span>  
  
 <span data-ttu-id="7ce0f-267">Um Wörter in die angegebene Sprache richtig ausgesprochen der <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> -Eigenschaft, ein Sprachmodul für die Sprachsynthese (Sprachausgabe oder Sprachausgabe), die die Sprache unterstützt muss installiert sein.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-267">To correctly pronounce words in the language specified by the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="7ce0f-268">Eine installierte Sprachausgabe-Modul aufgerufen wird, eine Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-268">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="7ce0f-269">Verwenden Sie zum Abrufen von Informationen darüber, welche stimmen installiert sind für eine bestimmte Kultur der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-269">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="7ce0f-270">Microsoft Windows und die System.Speech-API können Sie alle gültigen Sprache / Land-Codes als Werte für `culture`.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-270">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="7ce0f-271">Die Sprachausgabe-Module, die mit den im Lieferumfang von Windows 7 unterstützen die folgenden Sprache / Land-Codes:</span><span class="sxs-lookup"><span data-stu-id="7ce0f-271">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="7ce0f-272">En-US.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-272">en-US.</span></span> <span data-ttu-id="7ce0f-273">Englisch (Vereinigte Staaten)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-273">English (United States)</span></span>  
  
-   <span data-ttu-id="7ce0f-274">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-274">zh-CN.</span></span> <span data-ttu-id="7ce0f-275">Chinesisch (China)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-275">Chinese (China)</span></span>  
  
-   <span data-ttu-id="7ce0f-276">Zh-TW.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-276">zh-TW.</span></span> <span data-ttu-id="7ce0f-277">Chinesisch (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-277">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="7ce0f-278">Zwei Buchstaben bestehende Sprachcode, z. B. "En" sind ebenfalls zulässig.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-278">Two-letter language codes such as "en" are also permitted.</span></span>  <span data-ttu-id="7ce0f-279">Finden Sie unter [Sprache Bezeichner Konstanten und Zeichenfolgen](http://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) eine umfassende Liste von Sprachcodes.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-279">See [Language Identifier Constants and Strings](http://msdn.microsoft.com/library/dd318693\(VS.85\).aspx) for a comprehensive list of language codes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndParagraph">
      <MemberSignature Language="C#" Value="public void EndParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndParagraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-280">Bezeichnet das Ende eines Absatzes im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-280">Specifies the end of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-281">Lange eingabeaufforderungen können eher wie menschliche Sprache gerendert werden, wenn sie in den Sätzen und Absätzen unterteilt werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-281">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="7ce0f-282">Ein Beispiel finden Sie unter <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-282">See <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSentence">
      <MemberSignature Language="C#" Value="public void EndSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSentence();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-283">Bezeichnet das Ende eines Satzes im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-283">Specifies the end of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-284">Lange eingabeaufforderungen können eher wie menschliche Sprache gerendert werden, wenn sie in den Sätzen und Absätzen unterteilt werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-284">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span> <span data-ttu-id="7ce0f-285">Ein Beispiel finden Sie unter <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-285">See <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndStyle">
      <MemberSignature Language="C#" Value="public void EndStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-286">Bezeichnet das Ende eines Stils im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-286">Specifies the end of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-287">Die <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> -Methode hält den aktuellen sprechgeschwindigkeit Stil.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-287">The <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method stops the current speaking style.</span></span> <span data-ttu-id="7ce0f-288">Der Sprecherstimme Stil wird auf die Einstellung, die wirksam vor wurde zurückgesetzt. die <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> Methode initiiert eine neue Sprecherstimme Formatvorlage.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-288">The speaking style reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method initiated a new speaking style.</span></span> <span data-ttu-id="7ce0f-289">Ein Beispiel finden Sie unter <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-289">See <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> for an example.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndVoice">
      <MemberSignature Language="C#" Value="public void EndVoice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndVoice() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.EndVoice" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndVoice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndVoice();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-290">Bezeichnet das Ende der Verwendung einer Stimme im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-290">Specifies the end of use of a voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-291">Die <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> Methode wird die Verwendung der aktuellen Stimme für Sprechpause beendet.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-291">The <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A> method stops the use of the current voice for speech output.</span></span> <span data-ttu-id="7ce0f-292">Die Stimme wird auf die Einstellung, die wirksam vor wurde zurückgesetzt. die <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> Methode initiiert eine neue Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-292">The voice reverts to the setting that was in effect before the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> method initiated a new voice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Synthesis.PromptBuilder.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7ce0f-293">Ruft ab, ob das <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt leer ist.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-293">Gets whether the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> is empty.</span></span></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartParagraph">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ce0f-294">Bezeichnet den Anfang eines Absatzes im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt; optional wird auch eine Sprache angegeben.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-294">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-295">Lange eingabeaufforderungen können eher wie menschliche Sprache gerendert werden, wenn sie in den Sätzen und Absätzen unterteilt werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-295">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-296">Bezeichnet das Anfang eines Absatzes im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-296">Specifies the start of a paragraph in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-297">Lange eingabeaufforderungen können eher wie menschliche Sprache gerendert werden, wenn sie in den Sätzen und Absätzen unterteilt werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-297">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-298">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt, fügt Inhalt und den Inhalt in der Absätze und Sätze organisiert.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-298">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartParagraph">
      <MemberSignature Language="C#" Value="public void StartParagraph (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartParagraph(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartParagraph(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartParagraph (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartParagraph(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="7ce0f-299">Enthält Informationen über eine bestimmte Kultur, wie die Sprache, den Namen der Kultur, das Schreibsystem, den verwendeten Kalender und darüber, wie Datumsangaben formatiert und Zeichenfolgen sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-299">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="7ce0f-300">Bezeichnet den Anfang eines Absatzes in der angegebenen Kultur im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-300">Specifies the start of a paragraph in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-301">Lange eingabeaufforderungen können eher wie menschliche Sprache gerendert werden, wenn sie in den Sätzen und Absätzen unterteilt werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-301">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="7ce0f-302">Die `culture` -Parameter für einen Absatz unterschiedlich sein der <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Eigenschaft von der <xref:System.Speech.Synthesis.PromptBuilder> -Objekt, das sie enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-302">The `culture` parameter for a paragraph can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span> <span data-ttu-id="7ce0f-303">Aktiviert ist, den Wert der während der `culture` Parameter außer Kraft setzen die <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-303">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="7ce0f-304">Die <xref:System.Speech.Synthesis.SpeechSynthesizer> wird versucht, eine installierte Stimme auswählen, die die angegebene Sprache unterstützt die `culture` Parameter, den Absatz zu sprechen.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-304">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the paragraph.</span></span> <span data-ttu-id="7ce0f-305">Wenn eine Sprache mit der angegebenen Kultur gefunden wird, wird er verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-305">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="7ce0f-306">Wenn eine Sprache mit der angegebenen Kultur nicht gefunden werden kann, wird eine Stimme an Standardeinstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-306">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="7ce0f-307">Beenden der Verwendung von angegebenen Stimme <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, rufen Sie <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-307">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartParagraph%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndParagraph%2A>.</span></span>  
  
 <span data-ttu-id="7ce0f-308">Um Wörter in die angegebene Sprache richtig ausgesprochen der `culture` Parameter, eine Sprache (Sprachausgabe oder Sprachausgabe) sprachsynthesemodul die Sprache unterstützt muss installiert sein.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-308">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="7ce0f-309">Eine installierte Sprachausgabe-Modul aufgerufen wird, eine Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-309">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="7ce0f-310">Verwenden Sie zum Abrufen von Informationen darüber, welche stimmen installiert sind für eine bestimmte Kultur der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-310">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="7ce0f-311">Microsoft Windows und die System.Speech-API können Sie alle gültigen Sprache / Land-Codes als Werte für `culture`.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-311">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="7ce0f-312">Die Sprachausgabe-Module, die mit den im Lieferumfang von Windows 7 unterstützen die folgenden Sprache / Land-Codes:</span><span class="sxs-lookup"><span data-stu-id="7ce0f-312">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="7ce0f-313">En-US.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-313">en-US.</span></span> <span data-ttu-id="7ce0f-314">Englisch (Vereinigte Staaten)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-314">English (United States)</span></span>  
  
-   <span data-ttu-id="7ce0f-315">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-315">zh-CN.</span></span> <span data-ttu-id="7ce0f-316">Chinesisch (China)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-316">Chinese (China)</span></span>  
  
-   <span data-ttu-id="7ce0f-317">Zh-TW.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-317">zh-TW.</span></span> <span data-ttu-id="7ce0f-318">Chinesisch (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-318">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="7ce0f-319">Zwei Buchstaben bestehende Sprachcode, z. B. "En" sind ebenfalls zulässig.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-319">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartSentence">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ce0f-320">Bezeichnet den Anfang eines Satzes im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt; optional wird auch eine Sprache angegeben.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-320">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object, and optionally specifies a language.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-321">Lange eingabeaufforderungen können eher wie menschliche Sprache gerendert werden, wenn sie in den Sätzen und Absätzen unterteilt werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-321">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-322">Bezeichnet den Anfang eines Satzes im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-322">Specifies the start of a sentence in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-323">Lange eingabeaufforderungen können eher wie menschliche Sprache gerendert werden, wenn sie in den Sätzen und Absätzen unterteilt werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-323">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-324">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt, fügt Inhalt und den Inhalt in der Absätze und Sätze organisiert.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-324">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends content, and organizes the content into paragraphs and sentences.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content as paragraphs and sentences.  
        PromptBuilder parSent = new PromptBuilder();  
        parSent.StartParagraph();  
        parSent.StartSentence();  
        parSent.AppendText("Introducing the sentence element.");  
        parSent.EndSentence();  
        parSent.StartSentence();  
        parSent.AppendText("You can use it to mark individual sentences.");  
        parSent.EndSentence();  
        parSent.EndParagraph();  
        parSent.StartParagraph();  
        parSent.AppendText("Another simple paragraph. Sentence structure in this paragraph" +  
          "is not explicitly marked.");  
        parSent.EndParagraph();  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(parSent);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartSentence">
      <MemberSignature Language="C#" Value="public void StartSentence (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartSentence(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartSentence(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartSentence (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartSentence(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="7ce0f-325">Enthält Informationen über eine bestimmte Kultur, wie die Sprache, den Namen der Kultur, das Schreibsystem, den verwendeten Kalender und darüber, wie Datumsangaben formatiert und Zeichenfolgen sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-325">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="7ce0f-326">Bezeichnet den Anfang eines Satzes in der angegebenen Kultur im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-326">Specifies the start of a sentence in the specified culture in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-327">Lange eingabeaufforderungen können eher wie menschliche Sprache gerendert werden, wenn sie in den Sätzen und Absätzen unterteilt werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-327">Long prompts can be rendered more like human speech if they are broken into sentences and paragraphs.</span></span>  
  
 <span data-ttu-id="7ce0f-328">Die `culture` -Parameter für einen Satz unterschiedlich sein der `culture` -Parameter für den Absatz, den Satz enthält, oder die <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Eigenschaft von der <xref:System.Speech.Synthesis.PromptBuilder> Objekt, das sie enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-328">The `culture` parameter for a sentence can be different than the `culture` parameter for the paragraph that contains the sentence or the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains them.</span></span>  
  
 <span data-ttu-id="7ce0f-329">Während aktiviert ist, den Wert des der `culture` Parameter außer Kraft setzen die <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Eigenschaft und die `culture` Parameter für den Absatz, die den Satz enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-329">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property and the `culture` parameter for the paragraph that contains the sentence.</span></span> <span data-ttu-id="7ce0f-330">Die <xref:System.Speech.Synthesis.SpeechSynthesizer> wird versucht, eine installierte Stimme auswählen, die die angegebene Sprache unterstützt die `culture` Parameter, den Satz zu sprechen.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-330">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the sentence.</span></span> <span data-ttu-id="7ce0f-331">Wenn eine Sprache mit der angegebenen Kultur gefunden wird, wird er verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-331">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="7ce0f-332">Wenn eine Sprache mit der angegebenen Kultur nicht gefunden werden kann, wird eine Stimme an Standardeinstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-332">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="7ce0f-333">Beenden der Verwendung von angegebenen Stimme <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, rufen Sie <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-333">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartSentence%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndSentence%2A>.</span></span>  
  
 <span data-ttu-id="7ce0f-334">Um Wörter in die angegebene Sprache richtig ausgesprochen der `culture` Parameter, eine Sprache (Sprachausgabe oder Sprachausgabe) sprachsynthesemodul die Sprache unterstützt muss installiert sein.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-334">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="7ce0f-335">Eine installierte Sprachausgabe-Modul aufgerufen wird, eine Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-335">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="7ce0f-336">Verwenden Sie zum Abrufen von Informationen darüber, welche stimmen installiert sind für eine bestimmte Kultur der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-336">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="7ce0f-337">Microsoft Windows und die System.Speech-API können Sie alle gültigen Sprache / Land-Codes als Werte für `culture`.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-337">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="7ce0f-338">Die Sprachausgabe-Module, die mit den im Lieferumfang von Windows 7 unterstützen die folgenden Sprache / Land-Codes:</span><span class="sxs-lookup"><span data-stu-id="7ce0f-338">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="7ce0f-339">En-US.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-339">en-US.</span></span> <span data-ttu-id="7ce0f-340">Englisch (Vereinigte Staaten)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-340">English (United States)</span></span>  
  
-   <span data-ttu-id="7ce0f-341">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-341">zh-CN.</span></span> <span data-ttu-id="7ce0f-342">Chinesisch (China)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-342">Chinese (China)</span></span>  
  
-   <span data-ttu-id="7ce0f-343">Zh-TW.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-343">zh-TW.</span></span> <span data-ttu-id="7ce0f-344">Chinesisch (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-344">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="7ce0f-345">Zwei Buchstaben bestehende Sprachcode, z. B. "En" sind ebenfalls zulässig.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-345">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartStyle">
      <MemberSignature Language="C#" Value="public void StartStyle (System.Speech.Synthesis.PromptStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartStyle(class System.Speech.Synthesis.PromptStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartStyle(System.Speech.Synthesis.PromptStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartStyle (style As PromptStyle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartStyle(System::Speech::Synthesis::PromptStyle ^ style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Speech.Synthesis.PromptStyle" />
      </Parameters>
      <Docs>
        <param name="style"><span data-ttu-id="7ce0f-346">Der zu startende Stil.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-346">The style to start.</span></span></param>
        <summary><span data-ttu-id="7ce0f-347">Bezeichnet den Anfang eines Stils im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-347">Specifies the start of a style in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-348">Die <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> -Methode übernimmt ein <xref:System.Speech.Synthesis.PromptStyle> -Objekt als Argument.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-348">The <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method takes a <xref:System.Speech.Synthesis.PromptStyle> object as its argument.</span></span> <span data-ttu-id="7ce0f-349">Können Sie die Eigenschaften der <xref:System.Speech.Synthesis.PromptStyle> -Objekt, legen Sie die Betonung, sprechgeschwindigkeit und Volume (Lautstärke) gelten für die Sprachausgabe, während das Format aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-349">You can use the properties of the <xref:System.Speech.Synthesis.PromptStyle> object to set the emphasis, speaking rate, and volume (loudness) to apply to speech output while the style is in effect.</span></span> <span data-ttu-id="7ce0f-350">Um mit dem aktuellen Stil zu beenden, rufen die <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-350">To stop using the current style, call the <xref:System.Speech.Synthesis.PromptBuilder.EndStyle%2A> method.</span></span>  
  
> [!NOTE]
>  -   <span data-ttu-id="7ce0f-351">Die Spracherkennung Sprachsynthesemodule in Windows unterstützt zu diesem Zeitpunkt nicht den Schwerpunkt Parameter.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-351">The speech synthesis engines in Windows do not support the emphasis parameter at this time.</span></span> <span data-ttu-id="7ce0f-352">Festlegen von Werten für den Parameter Betonung erzeugt keine akustische Änderung in der Ausgabe gebildeter Sprache.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-352">Setting values for the emphasis parameter will produce no audible change in the synthesized speech output.</span></span>  
> -   <span data-ttu-id="7ce0f-353">Die <xref:System.Speech.Synthesis.PromptVolume.Default> festlegen für <xref:System.Speech.Synthesis.PromptVolume> ist ganzer Volumes, die die gleiche ist als <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-353">The <xref:System.Speech.Synthesis.PromptVolume.Default> setting for <xref:System.Speech.Synthesis.PromptVolume> is full volume, which is the same as <xref:System.Speech.Synthesis.PromptVolume.ExtraLoud>.</span></span> <span data-ttu-id="7ce0f-354">Die anderen Einstellungen Verringern der Lautstärke der Sprachausgabe relativ zum vollständige Volumeverschlüsselung.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-354">The other settings decrease the volume of speech output relative to full volume.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-355">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> -Objekt und fügt Sie Textzeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-355">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object and appends text strings.</span></span> <span data-ttu-id="7ce0f-356">Im Beispiel wird die <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> Methode, um eine langsame sprechen anzugeben rate für die Zeichenfolge, die hinzugefügt wird, der den Inhalt einer Bestellung aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-356">The example uses the <xref:System.Speech.Synthesis.PromptBuilder.StartStyle%2A> method to specify a slow speaking rate for the string being added, which enumerates the contents of an order.</span></span>  
  
```csharp  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartVoice">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7ce0f-357">Weist den Synthesizer an, die Stimme in einem <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt zu ändern.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-357">Instructs the synthesizer to change the voice in a <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-358">Eine Stimme darstellt Motor Sprachausgabe installiert.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-358">A voice represents an installed TTS engine.</span></span> <span data-ttu-id="7ce0f-359">Verwenden der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methoden und <xref:System.Speech.Synthesis.VoiceInfo> Klasse den Namen und die Attribute der abzurufenden installiert Sprachausgabe (Sprachausgabe) stimmen, die Sie auswählen können.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-359">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="7ce0f-360">Wenn eine Anwendung ruft <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, die Methode überprüft, ob jede der gefundenen, in der Registrierung stimmen bestimmte minimale Kriterien erfüllt.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-360">When an application calls <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A>, the method verifies that each of the voices it finds in the registry meets certain minimum criteria.</span></span> <span data-ttu-id="7ce0f-361">Für alle Stimme an, die Überprüfung schlägt fehl, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> legt seine <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Eigenschaft `False`.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-361">For any voice that fails verification, <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> sets its <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property to `False`.</span></span> <span data-ttu-id="7ce0f-362">Eine Anwendung kann nicht aufgerufen werden, keines der <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> Methoden für eine Sprache, deren <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Eigenschaft ist `False`.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-362">An application cannot call any of the <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> methods on a voice whose <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property is `False`.</span></span> <span data-ttu-id="7ce0f-363">Anwendungen werden in der Regel nicht festlegen einer Stimme <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-363">Typically, applications will not set a voice’s <xref:System.Speech.Synthesis.InstalledVoice.Enabled%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="7ce0f-364">Enthält Informationen über eine bestimmte Kultur, wie die Sprache, den Namen der Kultur, das Schreibsystem, den verwendeten Kalender und darüber, wie Datumsangaben formatiert und Zeichenfolgen sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-364">Provides information about a specific culture, such as the language, the name of the culture, the writing system, the calendar used, and how to format dates and sort strings.</span></span></param>
        <summary><span data-ttu-id="7ce0f-365">Weist den Synthesizer an, die Stimme im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt zu ändern und gibt die Kultur der zu verwendenden Stimme an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-365">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the culture of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-366">Die `culture` -Parameter für <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> unterschiedlich sein der <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Eigenschaft von der <xref:System.Speech.Synthesis.PromptBuilder> -Objekt, das sie enthält.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-366">The `culture` parameter for <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> can be different than the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property of the <xref:System.Speech.Synthesis.PromptBuilder> object that contains it.</span></span>  <span data-ttu-id="7ce0f-367">Aktiviert ist, den Wert der während der `culture` Parameter außer Kraft setzen die <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-367">While in effect, the value of the `culture` parameter will override the <xref:System.Speech.Synthesis.PromptBuilder.Culture%2A> property.</span></span> <span data-ttu-id="7ce0f-368">Die <xref:System.Speech.Synthesis.SpeechSynthesizer> wird versucht, eine installierte Stimme auswählen, die die angegebene Sprache unterstützt die `culture` Parameter, den Inhalt von eingeschlossen sprechen <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> und <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-368">The <xref:System.Speech.Synthesis.SpeechSynthesizer> will attempt to select an installed voice that supports the language specified by the `culture` parameter to speak the content enclosed by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> and <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span> <span data-ttu-id="7ce0f-369">Wenn eine Sprache mit der angegebenen Kultur gefunden wird, wird er verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-369">If a voice with the specified culture is found, it will be used.</span></span> <span data-ttu-id="7ce0f-370">Wenn eine Sprache mit der angegebenen Kultur nicht gefunden werden kann, wird eine Stimme an Standardeinstellung verwendet.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-370">If a voice with the specified culture cannot be found, the default voice will be used.</span></span> <span data-ttu-id="7ce0f-371">Beenden der Verwendung von angegebenen Stimme <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, rufen Sie <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-371">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A>, call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 <span data-ttu-id="7ce0f-372">Um Wörter in die angegebene Sprache richtig ausgesprochen der `culture` Parameter, eine Sprache (Sprachausgabe oder Sprachausgabe) sprachsynthesemodul die Sprache unterstützt muss installiert sein.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-372">To correctly pronounce words in the language specified by the `culture` parameter, a speech synthesis (text-to-speech or TTS) engine that supports the language must be installed.</span></span> <span data-ttu-id="7ce0f-373">Eine installierte Sprachausgabe-Modul aufgerufen wird, eine Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-373">An installed TTS engine is called a voice.</span></span> <span data-ttu-id="7ce0f-374">Verwenden Sie zum Abrufen von Informationen darüber, welche stimmen installiert sind für eine bestimmte Kultur der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-374">To get information about which voices are installed for a specific culture, use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> method.</span></span>  
  
 <span data-ttu-id="7ce0f-375">Microsoft Windows und die System.Speech-API können Sie alle gültigen Sprache / Land-Codes als Werte für `culture`.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-375">Microsoft Windows and the System.Speech API accept all valid language-country codes as values for `culture`.</span></span> <span data-ttu-id="7ce0f-376">Die Sprachausgabe-Module, die mit den im Lieferumfang von Windows 7 unterstützen die folgenden Sprache / Land-Codes:</span><span class="sxs-lookup"><span data-stu-id="7ce0f-376">The TTS engines that shipped with Windows 7 support the following language-country codes:</span></span>  
  
-   <span data-ttu-id="7ce0f-377">En-US.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-377">en-US.</span></span> <span data-ttu-id="7ce0f-378">Englisch (Vereinigte Staaten)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-378">English (United States)</span></span>  
  
-   <span data-ttu-id="7ce0f-379">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-379">zh-CN.</span></span> <span data-ttu-id="7ce0f-380">Chinesisch (China)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-380">Chinese (China)</span></span>  
  
-   <span data-ttu-id="7ce0f-381">Zh-TW.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-381">zh-TW.</span></span> <span data-ttu-id="7ce0f-382">Chinesisch (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="7ce0f-382">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="7ce0f-383">Zwei Buchstaben bestehende Sprachcode, z. B. "En" sind ebenfalls zulässig.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-383">Two-letter language codes such as "en" are also permitted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="7ce0f-384">Das Geschlecht der zu verwendenden Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-384">The gender of the voice to use.</span></span></param>
        <summary><span data-ttu-id="7ce0f-385">Weist den Synthesizer an, die Stimme im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt zu ändern und gibt das Geschlecht der zu verwendenden Stimme an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-385">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-386">Verwenden der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methoden und <xref:System.Speech.Synthesis.VoiceInfo> Klasse den Namen und die Attribute der abzurufenden installiert Sprachausgabe (Sprachausgabe) stimmen, die Sie auswählen können.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-386">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="7ce0f-387">Beenden der Verwendung von angegebenen Stimme <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> Aufrufen <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-387">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceInfo voice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(class System.Speech.Synthesis.VoiceInfo voice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (voice As VoiceInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceInfo ^ voice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="voice" Type="System.Speech.Synthesis.VoiceInfo" />
      </Parameters>
      <Docs>
        <param name="voice"><span data-ttu-id="7ce0f-388">Die Kriterien für die zu verwendende Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-388">The criteria for the voice to use.</span></span></param>
        <summary><span data-ttu-id="7ce0f-389">Weist den Synthesizer an, die Stimme im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt zu ändern und gibt Kriterien für die neue Stimme an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-389">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies criteria for the new voice.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-390">Verwenden der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methoden und <xref:System.Speech.Synthesis.VoiceInfo> Klasse den Namen und die Attribute der abzurufenden installiert Sprachausgabe (Sprachausgabe) stimmen, die Sie auswählen können.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-390">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="7ce0f-391">Beenden der Verwendung von angegebenen Stimme <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> Aufrufen <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-391">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7ce0f-392">Der Name der Stimme, die verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-392">The name of the voice to use.</span></span></param>
        <summary><span data-ttu-id="7ce0f-393">Weist den Synthesizer an, die Stimme im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt zu ändern und gibt den Namen der zu verwendenden Stimme an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-393">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the name of the voice to use.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-394">Abrufen von Informationen darüber, welche stimmen installiert gehen die <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-394">To get information about which voices are installed, use one of the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods.</span></span>  
  
 <span data-ttu-id="7ce0f-395">Beenden der Verwendung von angegebenen Stimme <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> Aufrufen <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-395">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="7ce0f-396">Das Geschlecht der neuen zu verwendenden Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-396">The gender of the new voice to use.</span></span></param>
        <param name="age"><span data-ttu-id="7ce0f-397">Das Alter der zu verwendenden Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-397">The age of the voice to use.</span></span></param>
        <summary><span data-ttu-id="7ce0f-398">Weist den Synthesizer an, die Stimme im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt zu ändern und gibt das Geschlecht und das Alter der neuen Stimme an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-398">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies the gender and the age of the new voice.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-399">Verwenden der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methoden und <xref:System.Speech.Synthesis.VoiceInfo> Klasse den Namen und die Attribute der abzurufenden installiert Sprachausgabe (Sprachausgabe) stimmen, die Sie auswählen können.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-399">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="7ce0f-400">Beenden der Verwendung von angegebenen Stimme <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> Aufrufen <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-400">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartVoice">
      <MemberSignature Language="C#" Value="public void StartVoice (System.Speech.Synthesis.VoiceGender gender, System.Speech.Synthesis.VoiceAge age, int voiceAlternate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartVoice(valuetype System.Speech.Synthesis.VoiceGender gender, valuetype System.Speech.Synthesis.VoiceAge age, int32 voiceAlternate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartVoice (gender As VoiceGender, age As VoiceAge, voiceAlternate As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartVoice(System::Speech::Synthesis::VoiceGender gender, System::Speech::Synthesis::VoiceAge age, int voiceAlternate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gender" Type="System.Speech.Synthesis.VoiceGender" />
        <Parameter Name="age" Type="System.Speech.Synthesis.VoiceAge" />
        <Parameter Name="voiceAlternate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="gender"><span data-ttu-id="7ce0f-401">Das Geschlecht der zu verwendenden Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-401">The gender of the voice to use.</span></span></param>
        <param name="age"><span data-ttu-id="7ce0f-402">Das Alter der zu verwendenden Stimme.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-402">The age of the voice to use.</span></span></param>
        <param name="voiceAlternate"><span data-ttu-id="7ce0f-403">Eine ganze Zahl, die eine bevorzugte Stimme angibt, wenn mehr als eine Stimme den Parametern <c>gender</c> und <c>age</c> entspricht.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-403">An integer that specifies a preferred voice when more than one voice matches the <c>gender</c> and <c>age</c> parameters.</span></span></param>
        <summary><span data-ttu-id="7ce0f-404">Weist den Synthesizer an, die Stimme im <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt zu ändern und gibt ihr Geschlecht, Alter und eine bevorzugte Stimme an, die dem angegebenen Geschlecht und Alter entspricht.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-404">Instructs the synthesizer to change the voice in the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object and specifies its gender, age, and a preferred voice that matches the specified gender and age.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-405">Einem sprachsynthesemodul Spracherkennung zählt die Übereinstimmungen, wird für die angegebenen Parameter und gibt die Stimme, erreicht der Verweiszähler den Wert, der `voiceAlternate` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-405">A speech synthesis engine counts the matches it finds for the specified parameters, and returns the voice when the count equals the `voiceAlternate` parameter.</span></span>  
  
 <span data-ttu-id="7ce0f-406">Verwenden der <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> Methoden und <xref:System.Speech.Synthesis.VoiceInfo> Klasse den Namen und die Attribute der abzurufenden installiert Sprachausgabe (Sprachausgabe) stimmen, die Sie auswählen können.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-406">Use the <xref:System.Speech.Synthesis.SpeechSynthesizer.GetInstalledVoices%2A> methods and <xref:System.Speech.Synthesis.VoiceInfo> class to obtain the names and attributes of installed text-to-speech (TTS) voices that you can select.</span></span>  
  
 <span data-ttu-id="7ce0f-407">Beenden der Verwendung von angegebenen Stimme <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> Aufrufen <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-407">To stop using the voice specified by <xref:System.Speech.Synthesis.PromptBuilder.StartVoice%2A> call <xref:System.Speech.Synthesis.PromptBuilder.EndVoice%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Synthesis.PromptBuilder.StartVoice(System.Speech.Synthesis.VoiceGender,System.Speech.Synthesis.VoiceAge)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Synthesis.PromptBuilder.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7ce0f-408">Gibt das SSML zurück, das aus dem <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt generiert wird.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-408">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="7ce0f-409">Gibt das SSML zurück, das aus dem <see cref="T:System.Speech.Synthesis.PromptBuilder" />-Objekt als einzelne Zeile generiert wird.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-409">Returns the SSML generated from the <see cref="T:System.Speech.Synthesis.PromptBuilder" /> object as a single line.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7ce0f-410">Die <xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> Methode unternimmt keinen Versuch, das zurückgegebene SSML in keiner Weise zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-410">The <xref:System.Speech.Synthesis.PromptBuilder.ToXml%2A> method makes no attempt to format the returned SSML in any way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7ce0f-411">Das folgende Beispiel erstellt eine <xref:System.Speech.Synthesis.PromptBuilder> Objekt, fügt Text an und schreibt dann die SSML-Entsprechung der Aufforderung an die Konsole vor dem sprechen den Inhalt der Aufforderung an.</span><span class="sxs-lookup"><span data-stu-id="7ce0f-411">The following example creates a <xref:System.Speech.Synthesis.PromptBuilder> object, appends text, and then writes the SSML equivalent of the prompt to the console before speaking the contents of the prompt.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Synthesis;  
  
namespace SampleSynthesis  
{  
  class Program  
  {  
    static void Main(string[] args)  
    {  
  
      // Initialize a new instance of the SpeechSynthesizer.  
      using (SpeechSynthesizer synth = new SpeechSynthesizer())  
      {  
  
        // Configure the audio output.   
        synth.SetOutputToDefaultAudioDevice();  
  
        // Create a PromptBuilder object and add content.  
        PromptBuilder style = new PromptBuilder();  
        style.AppendText("Your order for");  
        style.StartStyle(new PromptStyle(PromptRate.Slow));  
        style.AppendText("one kitchen sink and one faucet");  
        style.EndStyle();  
        style.AppendText("has been confirmed.");  
  
        // Write the contents of the PromptBuilder object to the console as  
        // an SSML-compatible XML file.  
        string myXml = style.ToXml();  
        Console.WriteLine("This is the SSML equivalent of the PromptBuilder: \n\n" + myXml);  
  
        // Speak the contents of the SSML prompt.  
        synth.Speak(style);  
      }  
  
      Console.WriteLine();  
      Console.WriteLine("Press any key to exit...");  
      Console.ReadKey();  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>