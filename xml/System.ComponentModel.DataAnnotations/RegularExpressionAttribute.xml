<Type Name="RegularExpressionAttribute" FullName="System.ComponentModel.DataAnnotations.RegularExpressionAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9280edcc9828e134c707235a82362d25a2f9d2bd" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70689162" /></Metadata><TypeSignature Language="C#" Value="public class RegularExpressionAttribute : System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RegularExpressionAttribute extends System.ComponentModel.DataAnnotations.ValidationAttribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class RegularExpressionAttribute&#xA;Inherits ValidationAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegularExpressionAttribute : System::ComponentModel::DataAnnotations::ValidationAttribute" />
  <TypeSignature Language="F#" Value="type RegularExpressionAttribute = class&#xA;    inherit ValidationAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.DataAnnotations.ValidationAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;dotnet-uwp-10.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.Property, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netcore-1.0;netcore-1.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.AttributeUsage</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="3575b-101">Gibt an, dass ein Datenfeldwert in ASP.NET Dynamic Data mit dem angegebenen regulären Ausdruck übereinstimmen muss.</span><span class="sxs-lookup"><span data-stu-id="3575b-101">Specifies that a data field value in ASP.NET Dynamic Data must match the specified regular expression.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3575b-102">Sie wenden das RegularExpressionAttribute-Attribut auf eine Eigenschaft an, wenn Sie Werte für die Eigenschaft mit einem regulären Ausdruck validieren müssen.</span><span class="sxs-lookup"><span data-stu-id="3575b-102">You apply the RegularExpressionAttribute attribute to a property when you need to validate values for the property against a regular expression.</span></span> <span data-ttu-id="3575b-103">Der reguläre Ausdruck ermöglicht es Ihnen, das Format gültiger Werte genau anzugeben.</span><span class="sxs-lookup"><span data-stu-id="3575b-103">The regular expression enables you to specify very precisely the format of valid values.</span></span> <span data-ttu-id="3575b-104">Die Pattern-Eigenschaft enthält den regulären Ausdruck. Wenn der Wert der-Eigenschaft NULL oder eine leere Zeichenfolge ("") ist, übergibt der Wert automatisch die Validierung für das RegularExpressionAttribute-Attribut.</span><span class="sxs-lookup"><span data-stu-id="3575b-104">The Pattern property contains the regular expression.If the value of the property is null or an empty string (""), the value automatically passes validation for the RegularExpressionAttribute attribute.</span></span> <span data-ttu-id="3575b-105">Um zu überprüfen, ob der `null` Wert nicht oder eine leere Zeichenfolge ist, verwenden Sie das Attribut "Requirements **dattribute** ".</span><span class="sxs-lookup"><span data-stu-id="3575b-105">To validate that the value is not `null` or an empty string, use the **RequiredAttribute** attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3575b-106">Im folgenden Beispiel wird gezeigt, wie das <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> -Attribut verwendet wird, um die Datenfelder FirstName und LastName zu validieren.</span><span class="sxs-lookup"><span data-stu-id="3575b-106">The following example shows how to use the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to validate the FirstName and LastName data fields.</span></span> <span data-ttu-id="3575b-107">Der reguläre Ausdruck lässt bis zu 40 groß-und Kleinbuchstaben zu.</span><span class="sxs-lookup"><span data-stu-id="3575b-107">The regular expression allows up to 40 uppercase and lowercase characters.</span></span> <span data-ttu-id="3575b-108">Das Beispiel führt die folgenden Aufgaben aus:</span><span class="sxs-lookup"><span data-stu-id="3575b-108">The example performs the following tasks:</span></span>  
  
-   <span data-ttu-id="3575b-109">Implementiert eine partielle Metadatenklasse und die zugehörige Metadatenklasse.</span><span class="sxs-lookup"><span data-stu-id="3575b-109">Implements a metadata partial class and the associated metadata class.</span></span>  
  
-   <span data-ttu-id="3575b-110">Wendet in der zugeordneten Metadatenklasse <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> das-Attribut auf die Datenfelder FirstName und LastName an und gibt das Muster und die benutzerdefinierten Fehlermeldungen an.</span><span class="sxs-lookup"><span data-stu-id="3575b-110">In the associated metadata class, applies the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> attribute to the FirstName and LastName data fields, specifying the pattern and custom error messages.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#1)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegularExpressionAttribute (string pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pattern As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegularExpressionAttribute(System::String ^ pattern);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute : string -&gt; System.ComponentModel.DataAnnotations.RegularExpressionAttribute" Usage="new System.ComponentModel.DataAnnotations.RegularExpressionAttribute pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern"><span data-ttu-id="3575b-111">Der reguläre Ausdruck, mit dem der Datenfeldwert überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="3575b-111">The regular expression that is used to validate the data field value.</span></span></param>
        <summary><span data-ttu-id="3575b-112">Initialisiert eine neue Instanz der <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3575b-112">Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3575b-113">Im folgenden Beispiel wird gezeigt, wie das <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> auf ein Datenfeld angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="3575b-113">The following example shows how to apply the <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute> to a data field.</span></span> <span data-ttu-id="3575b-114">Wenn die Validierung fehlschlägt, zeigt der Code im Beispiel die Validierungs Fehlermeldung an, die von dynamische Daten bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="3575b-114">If validation fails, the code in the example displays the validation error message that is provided by Dynamic Data.</span></span>  
  
 [!code-csharp[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/CS/Customer.cs#2)]
 [!code-vb[System.ComponentModel.DataAnnotations.RegularExpressionAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.ComponentModel.DataAnnotations.RegularExpressionAttribute/VB/Customer.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="3575b-115"><paramref name="pattern" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3575b-115"><paramref name="pattern" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FormatErrorMessage">
      <MemberSignature Language="C#" Value="public override string FormatErrorMessage (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string FormatErrorMessage(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FormatErrorMessage (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ FormatErrorMessage(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.FormatErrorMessage : string -&gt; string" Usage="regularExpressionAttribute.FormatErrorMessage name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="3575b-116">Der Name des Felds, das den Validierungsfehler verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="3575b-116">The name of the field that caused the validation failure.</span></span></param>
        <summary><span data-ttu-id="3575b-117">Formatiert die anzuzeigende Fehlermeldung, wenn die Validierung des regulären Ausdrucks fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="3575b-117">Formats the error message to display if the regular expression validation fails.</span></span></summary>
        <returns><span data-ttu-id="3575b-118">Die formatierte Fehlermeldung.</span><span class="sxs-lookup"><span data-stu-id="3575b-118">The formatted error message.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3575b-119">Der <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> erstellt die Fehlermeldung unter Verwendung des Namens des Daten Felds, das den Validierungs Fehler verursacht hat.</span><span class="sxs-lookup"><span data-stu-id="3575b-119">The <xref:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.FormatErrorMessage%2A> creates the error message by using the name of the data field that caused the validation failure.</span></span> <span data-ttu-id="3575b-120">Sie können diese Methode in benutzerdefinierten Validierungs Attributen überschreiben, um die Art und Weise anzupassen, wie Fehler erstellt werden, oder eine komplexere Meldung bereitstellen, die Parameter enthält, die Sie zur Laufzeit auswerten.</span><span class="sxs-lookup"><span data-stu-id="3575b-120">You can override this method in custom validation attributes to customize how errors are created or to provide a more complex message that contains parameters that you evaluate at run time.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3575b-121">Das aktuelle Attribut ist falsch formatiert.</span><span class="sxs-lookup"><span data-stu-id="3575b-121">The current attribute is ill-formed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3575b-122"><see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> ist kein gültiger regulärer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="3575b-122">The <see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> is not a valid regular expression.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public override bool IsValid (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsValid(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.IsValid(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValid (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsValid(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.IsValid : obj -&gt; bool" Usage="regularExpressionAttribute.IsValid value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="3575b-123">Der zu überprüfende Datenfeldwert.</span><span class="sxs-lookup"><span data-stu-id="3575b-123">The data field value to validate.</span></span></param>
        <summary><span data-ttu-id="3575b-124">Überprüft, ob der vom Benutzer eingegebene Wert mit dem Muster des regulären Ausdrucks übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="3575b-124">Checks whether the value entered by the user matches the regular expression pattern.</span></span></summary>
        <returns><span data-ttu-id="3575b-125"><see langword="true" /> wenn die Validierung erfolgreich ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3575b-125"><see langword="true" /> if validation is successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
<span data-ttu-id="3575b-126">Diese außer Kraft Setzung führt die spezifische Übereinstimmung `value` des regulären Ausdrucks des Felds aus.</span><span class="sxs-lookup"><span data-stu-id="3575b-126">This override performs the specific regular expression matching of `value` field.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><span data-ttu-id="3575b-127">Der Datenfeldwert hat nicht mit dem Muster des regulären Ausdrucks übereingestimmt.</span><span class="sxs-lookup"><span data-stu-id="3575b-127">The data field value did not match the regular expression pattern.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3575b-128">Das aktuelle Attribut ist falsch formatiert.</span><span class="sxs-lookup"><span data-stu-id="3575b-128">The current attribute is ill-formed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3575b-129"><see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> ist kein gültiger regulärer Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="3575b-129"><see cref="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" /> is not a valid regular expression.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MatchTimeoutInMilliseconds">
      <MemberSignature Language="C#" Value="public int MatchTimeoutInMilliseconds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MatchTimeoutInMilliseconds" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchTimeoutInMilliseconds As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MatchTimeoutInMilliseconds { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MatchTimeoutInMilliseconds : int with get, set" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.MatchTimeoutInMilliseconds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3575b-130">Dient zum Abrufen oder Festlegen des Zeitraums in Millisekunden zum Ausführen eines einzelnen Übereinstimmungsvorgangs, ehe das Zeitlimit des Vorgangs überschritten wird.</span><span class="sxs-lookup"><span data-stu-id="3575b-130">Gets or sets the amount of time in milliseconds to execute a single matching operation before the operation times out.</span></span></summary>
        <value><span data-ttu-id="3575b-131">Der Zeitraum in Millisekunden, um einen einzelnen übereinstimmenden Vorgang auszuführen.</span><span class="sxs-lookup"><span data-stu-id="3575b-131">The amount of time in milliseconds to execute a single matching operation.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pattern">
      <MemberSignature Language="C#" Value="public string Pattern { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pattern" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pattern As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pattern { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pattern : string" Usage="System.ComponentModel.DataAnnotations.RegularExpressionAttribute.Pattern" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3575b-132">Ruft das Muster des regulären Ausdrucks ab.</span><span class="sxs-lookup"><span data-stu-id="3575b-132">Gets the regular expression pattern.</span></span></summary>
        <value><span data-ttu-id="3575b-133">Das Muster für die Übereinstimmung.</span><span class="sxs-lookup"><span data-stu-id="3575b-133">The pattern to match.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
