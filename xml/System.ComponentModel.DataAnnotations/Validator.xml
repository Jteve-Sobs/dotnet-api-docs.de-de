<Type Name="Validator" FullName="System.ComponentModel.DataAnnotations.Validator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4fac7c450cd603136abba3c79d65d699377805e" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53290494" /></Metadata><TypeSignature Language="C#" Value="public static class Validator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Validator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.Validator" />
  <TypeSignature Language="VB.NET" Value="Public Class Validator" />
  <TypeSignature Language="C++ CLI" Value="public ref class Validator abstract sealed" />
  <TypeSignature Language="F#" Value="type Validator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Definiert eine Hilfsklasse, die zum Überprüfen von Objekten, Eigenschaften und Methoden verwendet werden kann, indem sie in die zugehörigen <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />-Attribute eingeschlossen wird.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="TryValidateObject">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob das angegebene Objekt gültig ist.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryValidateObject">
      <MemberSignature Language="C#" Value="public static bool TryValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults);" />
      <MemberSignature Language="F#" Value="static member TryValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateObject (instance, validationContext, validationResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="instance">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
        <param name="validationContext">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
        <param name="validationResults">Eine Auflistung aller Validierungen, bei denen ein Fehler aufgetreten ist.</param>
        <summary>Bestimmt anhand des Validierungskontexts und der Validierungsergebnisauflistung, ob das angegebene Objekt gültig ist.</summary>
        <returns><see langword="true" />, wenn das Objekt erfolgreich überprüft wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet jede <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> -Instanz, die auf das Objekt zugeordnet ist. Außerdem überprüft, ob jede Eigenschaft, die mit markierten <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> wird bereitgestellt. Es ist nicht rekursiv überprüfen Sie die Eigenschaftswerte des Objekts.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateObject">
      <MemberSignature Language="C#" Value="public static bool TryValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, bool validateAllProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, bool validateAllProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults, bool validateAllProperties);" />
      <MemberSignature Language="F#" Value="static member TryValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; * bool -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateObject (instance, validationContext, validationResults, validateAllProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
        <Parameter Name="validateAllProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
        <param name="validationContext">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
        <param name="validationResults">Eine Auflistung aller Validierungen, bei denen ein Fehler aufgetreten ist.</param>
        <param name="validateAllProperties"><see langword="true" /> um alle Eigenschaften zu überprüfen; wenn <see langword="false" />, werden nur die erforderlichen Attribute überprüft.</param>
        <summary>Bestimmt anhand des Validierungskontexts, der Validierungsergebnisauflistung und eines Werts, der angibt, ob alle Eigenschaften überprüft werden sollen, ob das angegebene Objekt gültig ist.</summary>
        <returns><see langword="true" />, wenn das Objekt erfolgreich überprüft wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet jede <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> -Instanz, die auf das Objekt zugeordnet ist. Außerdem überprüft, ob jede Eigenschaft, die mit markierten <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> wird bereitgestellt. Er überprüft die Eigenschaftswerte des Objekts, wenn `validateAllProperties` ist `true` jedoch nicht rekursiv prüfen Eigenschaften der Objekte, die von den Eigenschaften zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateProperty">
      <MemberSignature Language="C#" Value="public static bool TryValidateProperty (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateProperty(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateProperty(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults);" />
      <MemberSignature Language="F#" Value="static member TryValidateProperty : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateProperty (value, validationContext, validationResults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu überprüfende Wert.</param>
        <param name="validationContext">Der Kontext, der die zu überprüfende Eigenschaft beschreibt.</param>
        <param name="validationResults">Eine Auflistung aller Validierungen, bei denen ein Fehler aufgetreten ist.</param>
        <summary>Überprüft die Eigenschaft.</summary>
        <returns><see langword="true" />, wenn die Eigenschaft erfolgreich überprüft wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode testet jede <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> Instanz, die der Eigenschaft zugeordnet ist, die durch identifiziert wird die `validationContext` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> kann der Eigenschaft nicht zugewiesen werden.  
  
- oder -  
 <paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryValidateValue">
      <MemberSignature Language="C#" Value="public static bool TryValidateValue (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryValidateValue(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.ICollection`1&lt;class System.ComponentModel.DataAnnotations.ValidationResult&gt; validationResults, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryValidateValue(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::ICollection&lt;System::ComponentModel::DataAnnotations::ValidationResult ^&gt; ^ validationResults, System::Collections::Generic::IEnumerable&lt;System::ComponentModel::DataAnnotations::ValidationAttribute ^&gt; ^ validationAttributes);" />
      <MemberSignature Language="F#" Value="static member TryValidateValue : obj * System.ComponentModel.DataAnnotations.ValidationContext * System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt; * seq&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; -&gt; bool" Usage="System.ComponentModel.DataAnnotations.Validator.TryValidateValue (value, validationContext, validationResults, validationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationResults" Type="System.Collections.Generic.ICollection&lt;System.ComponentModel.DataAnnotations.ValidationResult&gt;" />
        <Parameter Name="validationAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu überprüfende Wert.</param>
        <param name="validationContext">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
        <param name="validationResults">Eine Auflistung für Validierungen, bei denen ein Fehler aufgetreten ist.</param>
        <param name="validationAttributes">Die Validierungsattribute.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob der angegebene Wert in Bezug auf die angegebenen Attribute gültig ist.</summary>
        <returns><see langword="true" />, wenn das Objekt erfolgreich überprüft wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft jedes Validierungsattribut in der `validationAttributes` Parameter für die `value` Parameter. Wenn die `validationResults` -Parameter ist kein `null`, diese Methode fügt eine <xref:System.ComponentModel.DataAnnotations.ValidationResult> -Objekt für jeden Überprüfungsfehler auf die Überprüfung führt die Auflistung. Wenn die `validationResults` Parameter `null`, diese Methode wird nicht hinzugefügt werden. eine <xref:System.ComponentModel.DataAnnotations.ValidationResult> Objekt, das der Auflistung. Wenn eine <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> Attribut befindet sich auf die `validationAttributes` -Parameter der <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> Attribut wird zuerst ausgewertet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateObject">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob das angegebene Objekt gültig ist.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateObject">
      <MemberSignature Language="C#" Value="public static void ValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext);" />
      <MemberSignature Language="F#" Value="static member ValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateObject (instance, validationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="instance">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
        <param name="validationContext">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
        <summary>Bestimmt anhand des Validierungskontexts, ob das angegebene Objekt gültig ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet jede <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> -Instanz, die auf das Objekt zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">Das Objekt ist nicht gültig.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateObject">
      <MemberSignature Language="C#" Value="public static void ValidateObject (object instance, System.ComponentModel.DataAnnotations.ValidationContext validationContext, bool validateAllProperties);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateObject(object instance, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, bool validateAllProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateObject(System::Object ^ instance, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, bool validateAllProperties);" />
      <MemberSignature Language="F#" Value="static member ValidateObject : obj * System.ComponentModel.DataAnnotations.ValidationContext * bool -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateObject (instance, validationContext, validateAllProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validateAllProperties" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">Das Objekt, dessen Gültigkeit überprüft werden soll.</param>
        <param name="validationContext">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
        <param name="validateAllProperties"><see langword="true" />, um alle Eigenschaften zu überprüfen, andernfalls <see langword="false" />.</param>
        <summary>Bestimmt anhand des Validierungskontexts und eines Werts, der angibt, ob alle Eigenschaften überprüft werden sollen, ob das angegebene Objekt gültig ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wertet jede <xref:System.ComponentModel.DataAnnotations.ValidationAttribute> -Instanz, die auf das Objekt zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException"><paramref name="instance" /> ist nicht gültig.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateProperty">
      <MemberSignature Language="C#" Value="public static void ValidateProperty (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateProperty(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateProperty(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext);" />
      <MemberSignature Language="F#" Value="static member ValidateProperty : obj * System.ComponentModel.DataAnnotations.ValidationContext -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateProperty (value, validationContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
      </Parameters>
      <Docs>
        <param name="value">Der zu überprüfende Wert.</param>
        <param name="validationContext">Der Kontext, der die zu überprüfende Eigenschaft beschreibt.</param>
        <summary>Überprüft die Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode testet jede <xref:System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute%2A> -Instanz, die die identifizierte Eigenschaft zugeordnet ist die `validationContext` Parameter.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> kann der Eigenschaft nicht zugewiesen werden.</exception>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">Der <paramref name="value" />-Parameter ist ungültig.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateValue">
      <MemberSignature Language="C#" Value="public static void ValidateValue (object value, System.ComponentModel.DataAnnotations.ValidationContext validationContext, System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ValidateValue(object value, class System.ComponentModel.DataAnnotations.ValidationContext validationContext, class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.DataAnnotations.ValidationAttribute&gt; validationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ValidateValue(System::Object ^ value, System::ComponentModel::DataAnnotations::ValidationContext ^ validationContext, System::Collections::Generic::IEnumerable&lt;System::ComponentModel::DataAnnotations::ValidationAttribute ^&gt; ^ validationAttributes);" />
      <MemberSignature Language="F#" Value="static member ValidateValue : obj * System.ComponentModel.DataAnnotations.ValidationContext * seq&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt; -&gt; unit" Usage="System.ComponentModel.DataAnnotations.Validator.ValidateValue (value, validationContext, validationAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Annotations</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="validationContext" Type="System.ComponentModel.DataAnnotations.ValidationContext" />
        <Parameter Name="validationAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.DataAnnotations.ValidationAttribute&gt;" />
      </Parameters>
      <Docs>
        <param name="value">Der zu überprüfende Wert.</param>
        <param name="validationContext">Der Kontext, der das zu überprüfende Objekt beschreibt.</param>
        <param name="validationAttributes">Die Validierungsattribute.</param>
        <summary>Überprüft die angegebenen Attribute.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode überprüft jedes Validierungsattribut in der `validationAttributes` Parameter für die `value` Parameter.  Wenn eine <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> Attribut enthalten ist, die <xref:System.ComponentModel.DataAnnotations.RequiredAttribute> Attribut wird zuerst ausgewertet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="validationContext" />-Parameter ist <see langword="null" />.</exception>
        <exception cref="T:System.ComponentModel.DataAnnotations.ValidationException">Der <paramref name="value" />-Parameter wird nicht zusammen mit dem <paramref name="validationAttributes" />-Parameter validiert.</exception>
      </Docs>
    </Member>
  </Members>
</Type>