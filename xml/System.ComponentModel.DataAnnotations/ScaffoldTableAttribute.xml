<Type Name="ScaffoldTableAttribute" FullName="System.ComponentModel.DataAnnotations.ScaffoldTableAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="92fb9924ebb11876c46e7089008864ffbe691559" /><Meta Name="ms.sourcegitcommit" Value="1bb00d2f4343e73ae8d58668f02297a3cf10a4c1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="06/15/2019" /><Meta Name="ms.locfileid" Value="63904686" /></Metadata><TypeSignature Language="C#" Value="public class ScaffoldTableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScaffoldTableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ScaffoldTableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScaffoldTableAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ScaffoldTableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, ob eine Klasse oder eine Datentabelle Gerüstbau verwendet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gerüstbau ist der Mechanismus zum Generieren von auf Datenbankschemas basierenden Webseitenvorlagen. ASP.NET Dynamic Data verwendet Gerüstbau webbasierte Benutzeroberfläche, mit dem einen Benutzer zum Anzeigen und Aktualisieren einer Datenbank zu generieren. Diese Klasse verwendet die <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold%2A> Eigenschaft um Gerüstbau für einzelne Tabellen in einer Dynamic Data-Website zu aktivieren. Gerüstbau wird das ASP.NET-Seitenframework erweitert, von dynamisch basierende auf dem Datenmodell keine physische Seiten benötigt Seiten angezeigt werden.  
  
 Gerüstbau stellt Folgendes bereit:  
  
-   Minimaler oder ohne Code zum Erstellen einer datengesteuerten Webanwendung.  
  
-   Zeitpunkt der schnelle Entwicklung.  
  
-   Seiten, die voll funktionsfähige, einschließlich der Anzeige, Insert, bearbeiten, löschen, Sortieren und Paging-Funktionen sind.  
  
-   Integrierte Überprüfung, die basierend auf dem Datenbankschema.  
  
-   Filter, die erstellt werden für jede foreign key- oder boolesche Felder.  
  
 Diese Klasse kann verwendet werden, aktivieren oder Deaktivieren der Gerüstbau von Datentabellen in einem Datenmodell durch Anwenden dieses Attributs auf die partielle Klasse, die in der Tabelle darstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird Blendet die ErrorLog-Tabelle in der AdventureWorksLT-Datenbank durch Anwenden von Scaffold-Attribut der partiellen ErrorLog-Klasse, die die ErrorLog-Tabelle darstellt. Die Scaffold-Eigenschaft ist auf festgelegt `false.`  
  
```csharp  
[MetadataType (typeof(ErrorLogMetadata))]  
[ScaffoldTable(false)]  
public partial class ErrorLog  
{  
  
}  
  
public class ErrorLogMetadata  
{  
  
}  
```  

```vb  
<MetadataType(GetType(ErrorLogMetadata))> _   
<ScaffoldTable(False)>   
Public Partial Class ErrorLog   
  
End Class   
  
Public Class ErrorLogMetadata  
  
End Class   
```  
  
 Um den Beispielcode kompilieren zu können, benötigen Sie Folgendes:  
  
-   Visual Studio 2008 Service Pack 1 oder Visual Developer 2008 Express Edition Service Pack 1.  
  
-   Die Beispieldatenbank "AdventureWorksLT". Informationen zum Herunterladen und Installieren der SQL Server-Beispieldatenbank, finden Sie unter [Microsoft SQL Server Product Samples: Datenbank](https://github.com/Microsoft/sql-server-samples/releases) auf GitHub. Stellen Sie sicher, dass Sie die richtige Version der Beispieldatenbank für die Version von SQL Server installieren, die Sie ausgeführt werden.  
  
-   Eine Dynamic Data-Website. Dadurch können Sie einen Datenkontext für die Datenbank und die Klasse, die das Datenfeld anpassen enthält und der zu überschreibenden Methoden erstellen. Darüber hinaus wird die Umgebung, in denen Sie die zuvor beschriebene Seite verwenden. Weitere Informationen finden Sie unter [Exemplarische Vorgehensweise: Erstellen einer neuen Dynamic Data-Website mithilfe eines Gerüsts](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12">ASP.NET Dynamic Data-Gerüstbau</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a">Exemplarische Vorgehensweise: Erstellen einer neuen Dynamic Data-Website mithilfe eines Gerüsts</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScaffoldTableAttribute (bool scaffold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool scaffold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scaffold As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScaffoldTableAttribute(bool scaffold);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.ScaffoldTableAttribute : bool -&gt; System.ComponentModel.DataAnnotations.ScaffoldTableAttribute" Usage="new System.ComponentModel.DataAnnotations.ScaffoldTableAttribute scaffold" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scaffold" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scaffold">Der Wert, der angibt, ob der Gerüstbau aktiviert ist.</param>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute" /> mit der <see cref="P:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold" />-Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können festlegen, `scaffold` zu `true` für das gesamte Datenmodell alle Datentabellen in der Datenbank für CRUD (Create, Read, Update und Delete), oder machen CRUD-Vorgänge für einzelne Tabellen, durch Festlegen `scaffold` für einzelne Tabellen `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scaffold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool" Usage="System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der angibt, ob der Gerüstbau aktiviert ist, oder legt ihn fest.</summary>
        <value><see langword="true" />, wenn Gerüstbau aktiviert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gerüstbau ist ein Mechanismus zum Generieren von auf Datenbankschemas basierenden Webseitenvorlagen. ASP.NET Dynamic Data verwendet Gerüstbau webbasierte Benutzeroberfläche, mit dem einen Benutzer zum Anzeigen und Aktualisieren einer Datenbank zu generieren. Weitere Informationen über das Gerüst-Attribut finden Sie unter <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>