<Type Name="ScaffoldTableAttribute" FullName="System.ComponentModel.DataAnnotations.ScaffoldTableAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9bf8539bc4566396306970bdad627f75bd62a2f9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70432446" /></Metadata><TypeSignature Language="C#" Value="public class ScaffoldTableAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScaffoldTableAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ScaffoldTableAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScaffoldTableAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ScaffoldTableAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, ob eine Klasse oder eine Datentabelle Gerüstbau verwendet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gerüstbau ist der Mechanismus zum Erstellen von Webseiten Vorlagen auf der Grundlage von Datenbankschemas. ASP.net dynamische Daten verwendet Gerüstbau zum Generieren einer webbasierten Benutzeroberfläche, mit der ein Benutzer eine Datenbank anzeigen und aktualisieren kann. Diese Klasse verwendet die <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold%2A> -Eigenschaft, um das Gerüst einzelner Tabellen in einer dynamische Daten-Website zu aktivieren. Gerüstbau erweitert das ASP.NET-Seiten Framework durch dynamisches Anzeigen von Seiten auf der Grundlage des Datenmodells ohne erforderliche physische Seiten.  
  
 Gerüstbau bietet Folgendes:  
  
-   Minimaler oder kein Code zum Erstellen einer datengesteuerten Webanwendung.  
  
-   Schnelle Entwicklungszeit.  
  
-   Seiten, die voll funktionsfähig sind, einschließlich Anzeige-, Einfüge-, Bearbeitungs-, Lösch-, Sortier-und Pagingfunktionen.  
  
-   Integrierte Datenvalidierung auf Grundlage des Datenbankschemas.  
  
-   Filter, die für jeden Fremdschlüssel oder booleschen Bereich erstellt werden.  
  
 Diese Klasse kann verwendet werden, um das Gerüst von Datentabellen in einem Datenmodell zu aktivieren bzw. zu deaktivieren, indem dieses Attribut auf die partielle Klasse angewendet wird, die die Tabelle darstellt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird die ErrorLog-Tabelle in der AdventureWorksLT-Datenbank ausgeblendet, indem das Gerüst Attribut auf die partielle ErrorLog-Klasse angewendet wird, die die ErrorLog-Tabelle darstellt. Die Gerüst Eigenschaft ist auf festgelegt.`false.`  
  
```csharp  
[MetadataType (typeof(ErrorLogMetadata))]  
[ScaffoldTable(false)]  
public partial class ErrorLog  
{  
  
}  
  
public class ErrorLogMetadata  
{  
  
}  
```  

```vb  
<MetadataType(GetType(ErrorLogMetadata))> _   
<ScaffoldTable(False)>   
Public Partial Class ErrorLog   
  
End Class   
  
Public Class ErrorLogMetadata  
  
End Class   
```  
  
 Um den Beispielcode zu kompilieren, benötigen Sie Folgendes:  
  
-   Visual Studio 2008 Service Pack 1 oder Visual Developer 2008 Express Edition Service Pack 1.  
  
-   Die AdventureWorksLT-Beispieldatenbank. Informationen zum herunterladen und Installieren der SQL Server-Beispieldatenbank finden Sie unter [Microsoft SQL Server Product Samples: Database](https://github.com/Microsoft/sql-server-samples/releases) on GitHub. Stellen Sie sicher, dass Sie die richtige Version der-Beispieldatenbank für die Version der SQL Server installieren, die Sie ausführen.  
  
-   Eine dynamische Daten Website. Auf diese Weise können Sie einen Datenkontext für die Datenbank und die Klasse, die das zu anpassbare Datenfeld enthält, und die zu über schreibenden Methoden erstellen. Außerdem wird die Umgebung erstellt, in der die zuvor beschriebene Seite verwendet werden soll. Weitere Informationen finden Sie unter Exemplarische Vorgehensweise [: Erstellen einer neuen dynamische Daten Website mithilfe von Gerüstbau](https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e0166a58-9178-4660-81a6-175994b11b12">ASP.net dynamische Daten Gerüstbau</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1564aef2-9103-436a-9806-c8ad7abd616a">Exemplarische Vorgehensweise: Erstellen einer neuen dynamische Daten Website mithilfe von Gerüstbau</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScaffoldTableAttribute (bool scaffold);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool scaffold) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scaffold As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScaffoldTableAttribute(bool scaffold);" />
      <MemberSignature Language="F#" Value="new System.ComponentModel.DataAnnotations.ScaffoldTableAttribute : bool -&gt; System.ComponentModel.DataAnnotations.ScaffoldTableAttribute" Usage="new System.ComponentModel.DataAnnotations.ScaffoldTableAttribute scaffold" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scaffold" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scaffold">Der Wert, der angibt, ob der Gerüstbau aktiviert ist.</param>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute" /> mit der <see cref="P:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold" />-Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können `true` für `scaffold` das gesamte Datenmodell auf festlegen, um alle Datentabellen in der Datenbank für CRUD-Vorgänge (erstellen, lesen, aktualisieren und löschen) verfügbar zu machen oder einzelne Tabellen für CRUD `scaffold` -Vorgänge verfügbar zu machen, indem Sie für einzelne Tabellen auf festlegen. `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaffold">
      <MemberSignature Language="C#" Value="public bool Scaffold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Scaffold" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scaffold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Scaffold { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Scaffold : bool" Usage="System.ComponentModel.DataAnnotations.ScaffoldTableAttribute.Scaffold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.DataAnnotations</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der angibt, ob der Gerüstbau aktiviert ist, oder legt ihn fest.</summary>
        <value><see langword="true" />, wenn Gerüstbau aktiviert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gerüstbau ist der Mechanismus zum Erstellen von Webseiten Vorlagen auf der Grundlage von Datenbankschemas. ASP.net dynamische Daten verwendet Gerüstbau zum Generieren einer webbasierten Benutzeroberfläche, mit der ein Benutzer eine Datenbank anzeigen und aktualisieren kann. Weitere Informationen zum Gerüst Attribut finden <xref:System.ComponentModel.DataAnnotations.ScaffoldTableAttribute>Sie unter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
