<Type Name="Cer" FullName="System.Runtime.ConstrainedExecution.Cer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0c17aa271602e026ebeb560d0ecb0a3346e38f0" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52365574" /></Metadata><TypeSignature Language="C#" Value="public enum Cer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Cer extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Cer" />
  <TypeSignature Language="VB.NET" Value="Public Enum Cer" />
  <TypeSignature Language="C++ CLI" Value="public enum class Cer" />
  <TypeSignature Language="F#" Value="type Cer = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="aada6-101">Gibt das Verhalten einer Methode beim Aufruf innerhalb eines eingeschränkten Ausführungsbereichs an.</span><span class="sxs-lookup"><span data-stu-id="aada6-101">Specifies a method's behavior when called within a constrained execution region.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aada6-102">Die <xref:System.Runtime.ConstrainedExecution.Cer> -Enumeration gibt an, das Verhalten einer Methode, den Typ oder die Assembly in einen eingeschränkten Ausführungsbereich (CER).</span><span class="sxs-lookup"><span data-stu-id="aada6-102">The <xref:System.Runtime.ConstrainedExecution.Cer> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</span></span> <span data-ttu-id="aada6-103">Verwenden Sie eine der drei verfügbaren Werte, um anzugeben, dass die Entität erfolgreich ist, hat keine Kenntnis von einem eingeschränkten Ausführungsbereich oder (deterministisch) möglicherweise zum Erfolg oder Fehler zu melden.</span><span class="sxs-lookup"><span data-stu-id="aada6-103">Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</span></span>  
  
 <span data-ttu-id="aada6-104">Ein eingeschränkter Ausführungsbereich gewährleistet, dass die ausgeführt wird, dass Sie der Codebereich ohne Unterbrechung auch wenn eine asynchrone Ausnahme wie die Out-of-Memory-Ausnahme abgebrochene Thread oder Stapelüberlauf ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="aada6-104">A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="aada6-105">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Runtime.ConstrainedExecution.Cer> Enumeration angezeigt, wenn für eine Methode einen eingeschränkten Ausführungsbereich angeben.</span><span class="sxs-lookup"><span data-stu-id="aada6-105">The following code example demonstrates the use of the <xref:System.Runtime.ConstrainedExecution.Cer> enumeration when specifying a constrained execution region for a method.</span></span> <span data-ttu-id="aada6-106">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="aada6-106">This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
 [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions" />
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle)" />
    <related type="Article" href="https://msdn.microsoft.com/library/99354547-39c1-4b0b-8553-938e8f8d1808"><span data-ttu-id="aada6-107">Eingeschränkte Ausführungsbereiche (CERs)</span><span class="sxs-lookup"><span data-stu-id="aada6-107">Constrained Execution Regions</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/cf624c1f-c160-46a1-bb2b-213587688da7"><span data-ttu-id="aada6-108">Empfohlene Vorgehensweisen für die Zuverlässigkeit</span><span class="sxs-lookup"><span data-stu-id="aada6-108">Reliability Best Practices</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="MayFail">
      <MemberSignature Language="C#" Value="MayFail" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer MayFail = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberSignature Language="VB.NET" Value="MayFail" />
      <MemberSignature Language="C++ CLI" Value="MayFail" />
      <MemberSignature Language="F#" Value="MayFail = 1" Usage="System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="aada6-109">Unter Ausnahmebedingungen könnte die Methode fehlschlagen.</span><span class="sxs-lookup"><span data-stu-id="aada6-109">In the face of exceptional conditions, the method might fail.</span></span> <span data-ttu-id="aada6-110">In diesem Fall signalisiert die Methode der aufrufenden Methode, ob die Ausführung erfolgreich war oder fehlgeschlagen ist.</span><span class="sxs-lookup"><span data-stu-id="aada6-110">In this case, the method will report back to the calling method whether it succeeded or failed.</span></span> <span data-ttu-id="aada6-111">Der Rumpf der Methode muss in einen eingeschränkten Ausführungsbereich eingeschlossen werden, um sicherzustellen, dass der Rückgabewert ausgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="aada6-111">The method must have a CER around the method body to ensure that it can report the return value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="aada6-112">Die Methode, der Typ oder die Assembly verfügt über keinen eingeschränkten Ausführungsbereich.</span><span class="sxs-lookup"><span data-stu-id="aada6-112">The method, type, or assembly has no concept of a CER.</span></span> <span data-ttu-id="aada6-113">CER-Garantien können nicht genutzt werden.</span><span class="sxs-lookup"><span data-stu-id="aada6-113">It does not take advantage of CER guarantees.</span></span> <span data-ttu-id="aada6-114">Dies impliziert Folgendes:</span><span class="sxs-lookup"><span data-stu-id="aada6-114">This implies the following:</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="aada6-115">Die Methode kann unter Ausnahmebedingungen fehlschlagen.</span><span class="sxs-lookup"><span data-stu-id="aada6-115">In the face of exceptional conditions the method might fail.</span></span>  
  
-   <span data-ttu-id="aada6-116">Die Methode kann oder möglicherweise nicht Bericht, der fehlgeschlagen ist (es ist nicht deterministisch).</span><span class="sxs-lookup"><span data-stu-id="aada6-116">The method might or might not report that it failed (it is non-deterministic).</span></span>  
  
-   <span data-ttu-id="aada6-117">Die Methode wird nicht mit CERs Bedenken geschrieben (das das wahrscheinlichste Szenario ist).</span><span class="sxs-lookup"><span data-stu-id="aada6-117">The method is not written with CERs in mind (which is the most likely scenario).</span></span>  
  
 <span data-ttu-id="aada6-118">Wenn eine Methode, den Typ oder die Assembly nicht explizit markiert ist erfolgreich ist, wird implizit als markiert `Cer.None`.</span><span class="sxs-lookup"><span data-stu-id="aada6-118">If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as `Cer.None`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="Success" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer Success = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberSignature Language="VB.NET" Value="Success" />
      <MemberSignature Language="C++ CLI" Value="Success" />
      <MemberSignature Language="F#" Value="Success = 2" Usage="System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="aada6-119">Unter Ausnahmebedingungen wird die Methode garantiert erfolgreich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="aada6-119">In the face of exceptional conditions, the method is guaranteed to succeed.</span></span> <span data-ttu-id="aada6-120">Sie sollten immer einen eingeschränkten Ausführungsbereich um die aufgerufene Methode herum erstellen, auch wenn diese aus einem nicht eingeschränkten Ausführungsbereich heraus aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="aada6-120">You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</span></span> <span data-ttu-id="aada6-121">Die Ausführung einer Methode ist erfolgreich, wenn dabei das erreicht wird, was beabsichtigt wurde.</span><span class="sxs-lookup"><span data-stu-id="aada6-121">A method is successful if it accomplishes what is intended.</span></span> <span data-ttu-id="aada6-122">Das Markieren von <see cref="P:System.Collections.ArrayList.Count" /> mit <c>ReliabilityContractAttribute(Cer.Success)</c> gibt z.B. an, dass bei der Ausführung in einem eingeschränkten Ausführungsbereich immer die Anzahl der Elemente in der <see cref="T:System.Collections.ArrayList" /> zurückgegeben wird und die internen Felder nie in einem unbestimmten Zustand belassen werden.</span><span class="sxs-lookup"><span data-stu-id="aada6-122">For example, marking <see cref="P:System.Collections.ArrayList.Count" /> with <c>ReliabilityContractAttribute(Cer.Success)</c> implies that when it is run under a CER, it always returns a count of the number of elements in the <see cref="T:System.Collections.ArrayList" /> and it can never leave the internal fields in an undetermined state.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>