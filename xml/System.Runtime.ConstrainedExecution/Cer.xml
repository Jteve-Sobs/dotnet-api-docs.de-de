<Type Name="Cer" FullName="System.Runtime.ConstrainedExecution.Cer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac470bff59f11addb66604e46af25f3ade4f4d27" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Cer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Cer extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Cer" />
  <TypeSignature Language="VB.NET" Value="Public Enum Cer" />
  <TypeSignature Language="C++ CLI" Value="public enum class Cer" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="a832d-101">Gibt das Verhalten einer Methode beim Aufruf innerhalb eines eingeschränkten Ausführungsbereichs an.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a832d-101">Specifies a method's behavior when called within a constrained execution region.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a832d-102">Die <xref:System.Runtime.ConstrainedExecution.Cer> Enumeration gibt das Verhalten einer Methode, den Typ oder die Assembly in einem eingeschränkten Ausführungsbereich (CER).</span><span class="sxs-lookup"><span data-stu-id="a832d-102">The <xref:System.Runtime.ConstrainedExecution.Cer> enumeration specifies the behavior of a method, type, or assembly within a constrained execution region (CER).</span></span> <span data-ttu-id="a832d-103">Verwenden Sie eines der drei verfügbaren Werte, um anzugeben, dass die Entität erfolgreich ist, hat keine Kenntnis von einem eingeschränkten Ausführungsbereich sonst möglicherweise (deterministisch) in der Lage, Erfolg oder Fehler melden.</span><span class="sxs-lookup"><span data-stu-id="a832d-103">Use one of the three available values to indicate that the entity will succeed, has no knowledge of a CER, or might (deterministically) be able to report success or failure.</span></span>  
  
 <span data-ttu-id="a832d-104">Eine Ausführungsbereich garantiert, die ausgeführt wird, der Codebereich an ununterbrochen ausgeführt, selbst wenn eine asynchrone Ausnahme z. B. eine abgebrochene Thread-Out-of-Memory-Ausnahme oder ein Stapelüberlauf ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="a832d-104">A CER provides guarantees that the region of code will execute uninterrupted even if an asynchronous exception such as an aborted thread out-of-memory exception, or stack overflow is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a832d-105">Das folgende Codebeispiel veranschaulicht die Verwendung von der <xref:System.Runtime.ConstrainedExecution.Cer> -Enumeration fest, wenn eine constrained Execution Region für eine Methode angeben.</span><span class="sxs-lookup"><span data-stu-id="a832d-105">The following code example demonstrates the use of the <xref:System.Runtime.ConstrainedExecution.Cer> enumeration when specifying a constrained execution region for a method.</span></span> <span data-ttu-id="a832d-106">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="a832d-106">This code example is part of a larger example provided for the <xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A> constructor.</span></span>  
  
 [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
 [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions" />
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle)" />
  </Docs>
  <Members>
    <Member MemberName="MayFail">
      <MemberSignature Language="C#" Value="MayFail" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer MayFail = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberSignature Language="VB.NET" Value="MayFail" />
      <MemberSignature Language="C++ CLI" Value="MayFail" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a832d-107">Unter Ausnahmebedingungen könnte die Methode fehlschlagen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-107">In the face of exceptional conditions, the method might fail.</span>
          </span>
          <span data-ttu-id="a832d-108">In diesem Fall signalisiert die Methode der aufrufenden Methode, ob die Ausführung erfolgreich war oder fehlgeschlagen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-108">In this case, the method will report back to the calling method whether it succeeded or failed.</span>
          </span>
          <span data-ttu-id="a832d-109">Der Rumpf der Methode muss in einen eingeschränkten Ausführungsbereich eingeschlossen werden, um sicherzustellen, dass der Rückgabewert ausgegeben werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-109">The method must have a CER around the method body to ensure that it can report the return value.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a832d-110">Die Methode, der Typ oder die Assembly verfügt über keinen eingeschränkten Ausführungsbereich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-110">The method, type, or assembly has no concept of a CER.</span>
          </span>
          <span data-ttu-id="a832d-111">CER-Garantien können nicht genutzt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-111">It does not take advantage of CER guarantees.</span>
          </span>
          <span data-ttu-id="a832d-112">Dies impliziert Folgendes:</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-112">This implies the following:</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="a832d-113">Ausnahmebedingungen könnte die Methode fehl.</span><span class="sxs-lookup"><span data-stu-id="a832d-113">In the face of exceptional conditions the method might fail.</span></span>  
  
-   <span data-ttu-id="a832d-114">Die Methode kann oder möglicherweise nicht Bericht, der fehlgeschlagen ist (es ist nicht deterministisch).</span><span class="sxs-lookup"><span data-stu-id="a832d-114">The method might or might not report that it failed (it is non-deterministic).</span></span>  
  
-   <span data-ttu-id="a832d-115">Die Methode wird nicht mit CERs Bedenken geschrieben (Dies ist das wahrscheinlichste Szenario).</span><span class="sxs-lookup"><span data-stu-id="a832d-115">The method is not written with CERs in mind (which is the most likely scenario).</span></span>  
  
 <span data-ttu-id="a832d-116">Wenn eine Methode, den Typ oder die Assembly nicht explizit markiert wurde erfolgreich ist, wird es implizit markiert als `Cer.None`.</span><span class="sxs-lookup"><span data-stu-id="a832d-116">If a method, type, or assembly is not explicitly marked to succeed, it is implicitly marked as `Cer.None`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="Success" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer Success = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberSignature Language="VB.NET" Value="Success" />
      <MemberSignature Language="C++ CLI" Value="Success" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="a832d-117">Unter Ausnahmebedingungen wird die Methode garantiert erfolgreich ausgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-117">In the face of exceptional conditions, the method is guaranteed to succeed.</span>
          </span>
          <span data-ttu-id="a832d-118">Sie sollten immer einen eingeschränkten Ausführungsbereich um die aufgerufene Methode herum erstellen, auch wenn diese aus einem nicht eingeschränkten Ausführungsbereich heraus aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-118">You should always construct a CER around the method that is called, even when it is called from within a non-CER region.</span>
          </span>
          <span data-ttu-id="a832d-119">Die Ausführung einer Methode ist erfolgreich, wenn dabei das erreicht wird, was beabsichtigt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-119">A method is successful if it accomplishes what is intended.</span>
          </span>
          <span data-ttu-id="a832d-120">Das Markieren von <see cref="P:System.Collections.ArrayList.Count" /> mit <c>ReliabilityContractAttribute(Cer.Success)</c> gibt z.B. an, dass bei der Ausführung in einem eingeschränkten Ausführungsbereich immer die Anzahl der Elemente in der <see cref="T:System.Collections.ArrayList" /> zurückgegeben wird und die internen Felder nie in einem unbestimmten Zustand belassen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a832d-120">For example, marking <see cref="P:System.Collections.ArrayList.Count" /> with <c>ReliabilityContractAttribute(Cer.Success)</c> implies that when it is run under a CER, it always returns a count of the number of elements in the <see cref="T:System.Collections.ArrayList" /> and it can never leave the internal fields in an undetermined state.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>