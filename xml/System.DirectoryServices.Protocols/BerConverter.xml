<Type Name="BerConverter" FullName="System.DirectoryServices.Protocols.BerConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcd13a1f1b1676bff591dd253cec61094fea62ef" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37660965" /></Metadata><TypeSignature Language="C#" Value="public sealed class BerConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BerConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.BerConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BerConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BerConverter sealed" />
  <TypeSignature Language="F#" Value="type BerConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.DirectoryServices.Protocols.BerConverter" />-Klasse codiert und decodiert strukturierte Daten anhand grundlegender Codierungsregeln (BER, Basis Encoding Rules).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public static object[] Decode (string format, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] Decode(string format, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decode (format As String, value As Byte()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ Decode(System::String ^ format, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Decode : string * byte[] -&gt; obj[]" Usage="System.DirectoryServices.Protocols.BerConverter.Decode (format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="format">Die Formatzeichenfolge.</param>
        <param name="value">Ein Array von BER-Daten.</param>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.BerConverter.Decode(System.String,System.Byte[])" />-Methode decodiert eine binäre Darstellung der Daten mithilfe von BER, um strukturierte Daten abzurufen.</summary>
        <returns>Die decodierten Daten.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="format" />-Parameter enthält einen NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="format" />-Parameter enthält ein nicht definiertes Zeichen.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.BerConversionException">Die zugrunde liegende Decodierung schlägt fehl. Die Decodierungsregeln schließen Folgendes ein:  
  
 <list type="table"><listheader><term> Code  </term><description> Übereinstimmendes Ergebnis  </description></listheader><item><term> '{' '}' '[' ']' 'n' 'x'  </term><description> Nicht übereinstimmendes Ergebnis  </description></item><item><term> 'i' 'e'  </term><description> int  </description></item><item><term> 'b'  </term><description> bool  </description></item><item><term> 'a'  </term><description> string  </description></item><item><term> 'O'  </term><description> byte[]  </description></item><item><term> 'B'  </term><description> byte [] mit Bitfolgen  </description></item><item><term> 'v'  </term><description> string[]  </description></item><item><term> 'V'  </term><description> byte[][]  </description></item></list></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static byte[] Encode (string format, params object[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Encode(string format, object[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (format As String, ParamArray value As Object()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Encode(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Encode : string * obj[] -&gt; byte[]" Usage="System.DirectoryServices.Protocols.BerConverter.Encode (format, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="value" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">Die Formatzeichenfolge.</param>
        <param name="value">Ein Array formatierter Daten.</param>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.BerConverter.Encode(System.String,System.Object[])" />-Methode codiert strukturierte Daten mithilfe von BER, um eine binäre Darstellung der Daten abzurufen.</summary>
        <returns>Ein Array von BER-codierter Daten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im folgenden werden die gültigen Zeichen.  
  
 Die Codierungsregeln:  
  
|Code|Entsprechende Argument|  
|----------|----------------------------|  
|"{" "}" "[" "]" "n"|Nicht übereinstimmendes argument|  
|' t ' 'i', 'e'|int|  
|'a'|Oktettzeichenfolge|  
|'b'|bool|  
|die '|Zeichenfolge|  
|' o' 'X'|byte[]|  
|'v'|string[]|  
|'V'|byte[][]|  
  
> [!NOTE]
>  'V' und 'V' werden in diesem speziellen Double {} ist erforderlich. Z. B. Verwenden von {{V}} und {{Version}}.  
  
## <a name="exceptions"></a>Ausnahmen  
  
|Ausnahme|Bedingung|  
|---------------|---------------|  
|ArgumentNullException|`format` ist ein NULL-Verweis (`Nothing` in Visual Basic).|  
|ArgumentException|Diese Ausnahme tritt in einem der folgenden Bedingungen:<br /><br /> – Es sind nicht genügend Argumente für die Formatzeichenfolge.<br />-Das Argument der Format-Zeichenfolge ist falsch.<br />-Die Formatzeichenfolge enthält ein nicht definiertes Zeichen.|  
|BerConversionException|Fehler beim Verarbeiten der Rückgabewert.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>