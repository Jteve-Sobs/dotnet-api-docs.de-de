<Type Name="DsmlSoapHttpConnection" FullName="System.DirectoryServices.Protocols.DsmlSoapHttpConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50bef9d4c0a8fada01c7b2216091a7161f847be1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36671890" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DsmlSoapHttpConnection extends System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class DsmlSoapHttpConnection&#xA;Inherits DsmlSoapConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlSoapHttpConnection : System::DirectoryServices::Protocols::DsmlSoapConnection" />
  <TypeSignature Language="F#" Value="type DsmlSoapHttpConnection = class&#xA;    inherit DsmlSoapConnection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DsmlSoapConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />-Klasse stellt mit SOAP über HTTP eine Verbindung zu einem DSML-Gateway dar.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz einer <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As DsmlDirectoryIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(System::DirectoryServices::Protocols::DsmlDirectoryIdentifier ^ identifier);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlDirectoryIdentifier -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection identifier" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />
      </Parameters>
      <Docs>
        <param name="identifier">Ein <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />-Objekt, das den Server für die Verbindung angibt.</param>
        <summary>Der <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier)" />-Konstruktor initialisiert eine neue Instanz einer <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identifier" /> ist NULL (<see langword="Nothing" /> in Visual Basic).</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : Uri -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Ein <see cref="T:System.Uri" />-Objekt, das den Server für die Verbindung angibt.</param>
        <summary>Der <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.Uri)" />-Konstruktor initialisiert eine neue Instanz einer <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uri" /> ist NULL (<see langword="Nothing" /> in Visual Basic).</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identifier As DsmlDirectoryIdentifier, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(System::DirectoryServices::Protocols::DsmlDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlDirectoryIdentifier * System.Net.NetworkCredential -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection (identifier, credential)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="identifier">Ein <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />-Objekt, das den Server für die Verbindung angibt.</param>
        <param name="credential">Ein <see cref="T:System.Net.NetworkCredential" />-Objekt, das die Netzwerkanmeldeinformationen enthält.</param>
        <summary>Der <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential)" />-Konstruktor initialisiert eine neue Instanz einer <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identifier" /> ist NULL (<see langword="Nothing" /> in Visual Basic).</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DsmlSoapHttpConnection (System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, System.Net.NetworkCredential credential, System.DirectoryServices.Protocols.AuthType authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.Protocols.DsmlDirectoryIdentifier identifier, class System.Net.NetworkCredential credential, valuetype System.DirectoryServices.Protocols.AuthType authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DsmlSoapHttpConnection(System::DirectoryServices::Protocols::DsmlDirectoryIdentifier ^ identifier, System::Net::NetworkCredential ^ credential, System::DirectoryServices::Protocols::AuthType authType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection : System.DirectoryServices.Protocols.DsmlDirectoryIdentifier * System.Net.NetworkCredential * System.DirectoryServices.Protocols.AuthType -&gt; System.DirectoryServices.Protocols.DsmlSoapHttpConnection" Usage="new System.DirectoryServices.Protocols.DsmlSoapHttpConnection (identifier, credential, authType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identifier" Type="System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" />
        <Parameter Name="authType" Type="System.DirectoryServices.Protocols.AuthType" />
      </Parameters>
      <Docs>
        <param name="identifier">Ein <see cref="T:System.DirectoryServices.Protocols.DsmlDirectoryIdentifier" />-Objekt, das den Server für die Verbindung angibt.</param>
        <param name="credential">Ein <see cref="T:System.Net.NetworkCredential" />-Objekt, das die Netzwerkanmeldeinformationen enthält.</param>
        <param name="authType">Der <see cref="T:System.DirectoryServices.Protocols.AuthType" />-Wert, der den Authentifizierungstyp für diese Verbindung angibt.</param>
        <summary>Der <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.#ctor(System.DirectoryServices.Protocols.DsmlDirectoryIdentifier,System.Net.NetworkCredential,System.DirectoryServices.Protocols.AuthType)" />-Konstruktor erstellt mithilfe des angegebenen Bezeichners, der Netzwerkanmeldeinformationen und des Authentifizierungstyps eine Instanz der <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identifier" /> ist ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">Der <paramref name="authType" />-Wert ist kein von DSML unterstützter Wert. DSML unterstützt nur Anonymous, Ntlm, Basic, Negotiate und digest.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="authType" />-Wert ist keine in der <see cref="T:System.DirectoryServices.Protocols.AuthType" />-Enumeration definierte Konstante.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">Wert der Anforderung: <see cref="F:System.Security.Permissions.SecurityAction.Demand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.Abort : IAsyncResult -&gt; unit" Usage="dsmlSoapHttpConnection.Abort asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Ein aus <see cref="T:System.IAsyncResult" /> abgeleitetes Objekt, das auf die asynchrone Anforderung verweist.</param>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Abort(System.IAsyncResult)" />-Methode bricht die asynchrone Anforderung ab.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> ist NULL (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="asyncResult" /> wurde nicht vom entsprechenden Aufruf von <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> zurückgegeben.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AuthType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.AuthType AuthType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.Protocols.AuthType AuthType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthType As AuthType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::Protocols::AuthType AuthType { System::DirectoryServices::Protocols::AuthType get(); void set(System::DirectoryServices::Protocols::AuthType value); };" />
      <MemberSignature Language="F#" Value="member this.AuthType : System.DirectoryServices.Protocols.AuthType with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.AuthType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.AuthType" />-Eigenschaft enthält einen Wert der <see cref="T:System.DirectoryServices.Protocols.AuthType" />-Enumeration, der den Authentifizierungstyp festlegt.</summary>
        <value>Ein Wert der <see cref="T:System.DirectoryServices.Protocols.AuthType" />-Enumeration, der den Authentifizierungstyp angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSendRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendRequest (System.DirectoryServices.Protocols.DsmlRequestDocument request, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendRequest(class System.DirectoryServices.Protocols.DsmlRequestDocument request, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendRequest (request As DsmlRequestDocument, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendRequest(System::DirectoryServices::Protocols::DsmlRequestDocument ^ request, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendRequest : System.DirectoryServices.Protocols.DsmlRequestDocument * AsyncCallback * obj -&gt; IAsyncResult" Usage="dsmlSoapHttpConnection.BeginSendRequest (request, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DsmlRequestDocument" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="request">Das zu sendende <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />-Objekt.</param>
        <param name="callback">Die <see cref="T:System.AsyncCallback" />-Funktion.</param>
        <param name="state">Ein <see cref="T:System.Object" />, das die Zustandsdaten für diese Anforderung enthält.</param>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" />-Methode beginnt die asynchrone Übertragung des angegebenen <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />-Objekts an den Server.</summary>
        <returns>Ein aus <see cref="T:System.IAsyncResult" /> abgeleitetes Objekt, das auf den asynchronen Sendevorgang verweist.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist NULL (<see langword="Nothing" /> in Visual Basic).</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="BeginSession">
      <MemberSignature Language="C#" Value="public override void BeginSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void BeginSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub BeginSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void BeginSession();" />
      <MemberSignature Language="F#" Value="override this.BeginSession : unit -&gt; unit" Usage="dsmlSoapHttpConnection.BeginSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" />-Methode weist den DSML-Server an, eine neue Sitzung zu starten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode wird beim Warten auf einer Antwort vom DSML-Server blockiert werden und tritt ein Timeout gemäß der <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn auf der Verbindung bereits eine Sitzung geöffnet ist.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Wird ausgelöst, wenn der als Antwort auf <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSession" /> vom Server zurückgegebene XML-Code nicht wohlgeformt ist.</exception>
        <exception cref="T:System.Net.WebException">Wird ausgelöst, wenn ein Kommunikationsfehler mit dem DSML-Server vorliegt oder wenn der Server keine verfügbaren Sitzungen mehr hosten kann.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EndSendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DsmlResponseDocument EndSendRequest (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DsmlResponseDocument EndSendRequest(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSendRequest (asyncResult As IAsyncResult) As DsmlResponseDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DsmlResponseDocument ^ EndSendRequest(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSendRequest : IAsyncResult -&gt; System.DirectoryServices.Protocols.DsmlResponseDocument" Usage="dsmlSoapHttpConnection.EndSendRequest asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DsmlResponseDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">Ein aus <see cref="T:System.IAsyncResult" /> abgeleitetes Objekt, das die Zustandsinformationen für diese Anforderung enthält.</param>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSendRequest(System.IAsyncResult)" />-Methode schließt eine asynchrone Sendeanforderung ab.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" />-Objekt, das die Ergebnisse der Anforderung enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Wird ausgelöst, wenn <paramref name="asyncResult" /> gleich <see langword="null" /> ist.</exception>
        <exception cref="T:System.ArgumentException">Wird ausgelöst, wenn <paramref name="asyncResult" /> nicht durch die aktuellen Instanz eines Anrufs von <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.BeginSendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument,System.AsyncCallback,System.Object)" /> zurückgegeben wurde.</exception>
        <exception cref="T:System.IO.IOException">Die Anforderung wurde nicht abgeschlossen. Kein Stream verfügbar.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Wird ausgelöst, wenn die vom Server zurückgegebene Antwort nicht gültig ist.</exception>
        <exception cref="T:System.Net.WebException">Wird ausgelöst, wenn zuvor ein Abbruch aufgerufen wurde, oder wenn während der Anforderungsverarbeitung ein Fehler auftrat.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSession">
      <MemberSignature Language="C#" Value="public override void EndSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EndSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub EndSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EndSession();" />
      <MemberSignature Language="F#" Value="override this.EndSession : unit -&gt; unit" Usage="dsmlSoapHttpConnection.EndSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.EndSession" />-Methode beendet die Sitzung mit dem DSML-Server und löscht die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" />-Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode wird beim Warten auf einer Antwort vom DSML-Server blockiert werden und tritt ein Timeout gemäß der <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> Eigenschaft.  
  
 Wenn der DSML-Server die Sitzung auf dem eigenen bereits beendet wurde eine <xref:System.Net.WebException> ausgelöst.  Wenn die <xref:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId%2A> noch gültig ist, nachdem die Ausnahme wird ausgelöst, die Anforderung den Server nicht erreicht und die Verbindung wird immer noch als gültig betrachtet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">Wird ausgelöst, wenn es einen Kommunikationsfehler mit dem DSML-Server gibt.</exception>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn keine Sitzung geöffnet ist.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SendRequest">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sendet ein Objekt an den DSML-Server.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public override System.DirectoryServices.Protocols.DirectoryResponse SendRequest (System.DirectoryServices.Protocols.DirectoryRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.DirectoryServices.Protocols.DirectoryResponse SendRequest(class System.DirectoryServices.Protocols.DirectoryRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function SendRequest (request As DirectoryRequest) As DirectoryResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::DirectoryServices::Protocols::DirectoryResponse ^ SendRequest(System::DirectoryServices::Protocols::DirectoryRequest ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DirectoryRequest -&gt; System.DirectoryServices.Protocols.DirectoryResponse" Usage="dsmlSoapHttpConnection.SendRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DirectoryResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DirectoryRequest" />
      </Parameters>
      <Docs>
        <param name="request">Ein <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" />-Objekt mit der Anforderung.</param>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DirectoryRequest)" />-Methode sendet ein einzelnes <see cref="T:System.DirectoryServices.Protocols.DirectoryRequest" />-Objekt.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.Protocols.DirectoryResponse" />-Objekt, das die Ergebnisse der Anforderung enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist NULL (<see langword="Nothing" /> in Visual Basic).</exception>
        <exception cref="T:System.DirectoryServices.Protocols.ErrorResponseException">Der DSML-Server hat eine Fehlermeldung zurückgegeben.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DirectoryOperationException">Die Operation hat einen Fehlercode zurückgegeben.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SendRequest">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.Protocols.DsmlResponseDocument SendRequest (System.DirectoryServices.Protocols.DsmlRequestDocument request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.Protocols.DsmlResponseDocument SendRequest(class System.DirectoryServices.Protocols.DsmlRequestDocument request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendRequest (request As DsmlRequestDocument) As DsmlResponseDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::Protocols::DsmlResponseDocument ^ SendRequest(System::DirectoryServices::Protocols::DsmlRequestDocument ^ request);" />
      <MemberSignature Language="F#" Value="override this.SendRequest : System.DirectoryServices.Protocols.DsmlRequestDocument -&gt; System.DirectoryServices.Protocols.DsmlResponseDocument" Usage="dsmlSoapHttpConnection.SendRequest request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.Protocols.DsmlResponseDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.DirectoryServices.Protocols.DsmlRequestDocument" />
      </Parameters>
      <Docs>
        <param name="request">Ein an den Server gesendetes <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />-Objekt.</param>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SendRequest(System.DirectoryServices.Protocols.DsmlRequestDocument)" />-Methode sendet ein <see cref="T:System.DirectoryServices.Protocols.DsmlRequestDocument" />-Objekt an den DSML-Server.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.Protocols.DsmlResponseDocument" />-Objekt, das die Ergebnisse der Anforderung enthält.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> ist NULL (<see langword="Nothing" /> in Visual Basic).</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public override string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SessionId" />-Eigenschaft enthält die ID der aktiven Sitzung.</summary>
        <value>Die aktive Sitzungs-ID.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapActionHeader">
      <MemberSignature Language="C#" Value="public string SoapActionHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SoapActionHeader" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapActionHeader As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SoapActionHeader { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapActionHeader : string with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.SoapActionHeader" />-Eigenschaft enthält die mit anderen HTTP-Headern gesendeten Action-SOAP-Header.</summary>
        <value>Die mit anderen HTTP-Headern gesendeten Action-SOAP-Header.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Standardwert dieser Eigenschaft ist "#batchRequest".  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public override TimeSpan Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property TimeSpan Timeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapHttpConnection.Timeout" />-Eigenschaft enthält die Zeitdauer in Sekunden, bis das Timeout der <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> erreicht ist.</summary>
        <value>Die Zeitdauer in Sekunden, bis das Timeout der <see cref="T:System.DirectoryServices.Protocols.DsmlSoapHttpConnection" /> erreicht ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>