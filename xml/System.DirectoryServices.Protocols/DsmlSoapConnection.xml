<Type Name="DsmlSoapConnection" FullName="System.DirectoryServices.Protocols.DsmlSoapConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="22a4110be3fecd87f633b8b275e882b6305b77c5" /><Meta Name="ms.sourcegitcommit" Value="a8ff98b48bda124cfcb2605f5da9b21bc6dcd791" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/14/2020" /><Meta Name="ms.locfileid" Value="77227706" /></Metadata><TypeSignature Language="C#" Value="public abstract class DsmlSoapConnection : System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DsmlSoapConnection extends System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DsmlSoapConnection&#xA;Inherits DirectoryConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlSoapConnection abstract : System::DirectoryServices::Protocols::DirectoryConnection" />
  <TypeSignature Language="F#" Value="type DsmlSoapConnection = class&#xA;    inherit DirectoryConnection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DirectoryConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />-Klasse ist eine abstrakte Klasse, die nicht instanziiert werden kann. Sie ermöglicht durch die Bereitstellung sitzungsorientierter Features, dass zustandsfreie Protokolle ähnlich behandelt werden.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DsmlSoapConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DsmlSoapConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Der <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" />-Konstruktor initialisiert eine neue Instanz einer <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSession">
      <MemberSignature Language="C#" Value="public abstract void BeginSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginSession();" />
      <MemberSignature Language="F#" Value="abstract member BeginSession : unit -&gt; unit" Usage="dsmlSoapConnection.BeginSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" />-Methode weist den DSML-Server an, eine neue Sitzung zu starten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die-Methode wird blockiert, wenn auf eine Antwort vom DSML-Server gewartet wird und das Timeout gemäß der <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A>-Eigenschaft erfolgt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn auf der Verbindung bereits eine Sitzung geöffnet ist.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Wird ausgelöst, wenn der als Antwort auf BeginSession vom Server zurückgegebene XML-Code nicht wohlgeformt ist.</exception>
        <exception cref="T:System.Net.WebException">Wird ausgelöst, wenn es einen Kommunikationsfehler mit dem DSML-Server gibt.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSession">
      <MemberSignature Language="C#" Value="public abstract void EndSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndSession();" />
      <MemberSignature Language="F#" Value="abstract member EndSession : unit -&gt; unit" Usage="dsmlSoapConnection.EndSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" />-Methode beendet die Sitzung mit dem DSML-Server und löscht die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />-Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die-Methode wird blockiert, wenn auf eine Antwort vom DSML-Server gewartet wird und das Timeout gemäß der <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A>-Eigenschaft erfolgt.  
  
 Wenn die Sitzung vom DSML-Server beendet wird, wird ein <xref:System.Net.WebException>  
  
 wird ausgelöst. Wenn <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> nach dem Auslösen der Ausnahme noch gültig ist, hat die Anforderung nie den Server erreicht, und die Verbindung wird weiterhin als gültig betrachtet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">Wird bei einem Kommunikationsfehler mit dem DSML-Server ausgelöst.</exception>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn keine Sitzung geöffnet ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public abstract string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />-Eigenschaft enthält die ID der aktiven Sitzung.</summary>
        <value>Die aktive Sitzungs-ID.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein NULL-Wert bedeutet keine aktive Sitzung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapRequestHeader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SoapRequestHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode SoapRequestHeader" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapRequestHeader As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNode ^ SoapRequestHeader { System::Xml::XmlNode ^ get(); void set(System::Xml::XmlNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapRequestHeader : System.Xml.XmlNode with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />-Eigenschaft enthält den SOAP-Header, der an ausgehende Anforderungen angefügt wird.</summary>
        <value>Der an ausgehende Anforderungen angefügte SOAP-Header.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die API verwendet <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A> und <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A>, um die Lebensdauer einer Sitzung zu verfolgen.  
  
 **Vorsicht** Das Anfügen eines EndSession-Headers an den <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader%2A> bewirkt, dass die API mit der Verbindung inkonsistent wird und daher vermieden werden sollte.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
