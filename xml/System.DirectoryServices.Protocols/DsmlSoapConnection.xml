<Type Name="DsmlSoapConnection" FullName="System.DirectoryServices.Protocols.DsmlSoapConnection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fbd41f0ee98a64da2b6f40089f14467055f82553" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63884585" /></Metadata><TypeSignature Language="C#" Value="public abstract class DsmlSoapConnection : System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DsmlSoapConnection extends System.DirectoryServices.Protocols.DirectoryConnection" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DsmlSoapConnection&#xA;Inherits DirectoryConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class DsmlSoapConnection abstract : System::DirectoryServices::Protocols::DirectoryConnection" />
  <TypeSignature Language="F#" Value="type DsmlSoapConnection = class&#xA;    inherit DirectoryConnection" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.Protocols.DirectoryConnection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Die <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />-Klasse ist eine abstrakte Klasse, die nicht instanziiert werden kann. Sie ermöglicht durch die Bereitstellung sitzungsorientierter Features, dass zustandsfreie Protokolle ähnlich behandelt werden.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DsmlSoapConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DsmlSoapConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Der <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.#ctor" />-Konstruktor initialisiert eine neue Instanz einer <see cref="T:System.DirectoryServices.Protocols.DsmlSoapConnection" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSession">
      <MemberSignature Language="C#" Value="public abstract void BeginSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginSession();" />
      <MemberSignature Language="F#" Value="abstract member BeginSession : unit -&gt; unit" Usage="dsmlSoapConnection.BeginSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession" />-Methode weist den DSML-Server an, eine neue Sitzung zu starten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode beim Warten auf einer Antwort von dem DSML-Server blockiert und tritt ein Timeout gemäß der <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn auf der Verbindung bereits eine Sitzung geöffnet ist.</exception>
        <exception cref="T:System.DirectoryServices.Protocols.DsmlInvalidDocumentException">Wird ausgelöst, wenn der als Antwort auf BeginSession vom Server zurückgegebene XML-Code nicht wohlgeformt ist.</exception>
        <exception cref="T:System.Net.WebException">Wird ausgelöst, wenn es einen Kommunikationsfehler mit dem DSML-Server gibt.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EndSession">
      <MemberSignature Language="C#" Value="public abstract void EndSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndSession();" />
      <MemberSignature Language="F#" Value="abstract member EndSession : unit -&gt; unit" Usage="dsmlSoapConnection.EndSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Die <see cref="M:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession" />-Methode beendet die Sitzung mit dem DSML-Server und löscht die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />-Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Methode beim Warten auf einer Antwort von dem DSML-Server blockiert und tritt ein Timeout gemäß der <xref:System.DirectoryServices.Protocols.DirectoryConnection.Timeout%2A> Eigenschaft.  
  
 Wenn es sich bei der DSML-Server die Sitzung beendet, wird eine <xref:System.Net.WebException>  
  
 wird ausgelöst. Wenn <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId%2A> ist weiterhin gültig, nachdem die Ausnahme wird ausgelöst, die Anforderung den Server nicht erreicht und die Verbindung wird immer noch als gültig betrachtet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.WebException">Wird bei einem Kommunikationsfehler mit dem DSML-Server ausgelöst.</exception>
        <exception cref="T:System.InvalidOperationException">Wird ausgelöst, wenn keine Sitzung geöffnet ist.</exception>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission"><see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
      </Docs>
    </Member>
    <Member MemberName="SessionId">
      <MemberSignature Language="C#" Value="public abstract string SessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SessionId" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SessionId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ SessionId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SessionId : string" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SessionId" />-Eigenschaft enthält die ID der aktiven Sitzung.</summary>
        <value>Die aktive Sitzungs-ID.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein null-Wert gibt keine aktive Sitzung an.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SoapRequestHeader">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNode SoapRequestHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNode SoapRequestHeader" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberSignature Language="VB.NET" Value="Public Property SoapRequestHeader As XmlNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNode ^ SoapRequestHeader { System::Xml::XmlNode ^ get(); void set(System::Xml::XmlNode ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SoapRequestHeader : System.Xml.XmlNode with get, set" Usage="System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.Protocols</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die <see cref="P:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader" />-Eigenschaft enthält den SOAP-Header, der an ausgehende Anforderungen angefügt wird.</summary>
        <value>Der an ausgehende Anforderungen angefügte SOAP-Header.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die API verwendet <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.BeginSession%2A> und <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.EndSession%2A> zum Nachverfolgen der Lebensdauer einer Sitzung.  
  
 **Vorsicht** Anfügen eines EndSession-Headers, um die <xref:System.DirectoryServices.Protocols.DsmlSoapConnection.SoapRequestHeader%2A> bewirkt, dass die API inkonsistent mit der Verbindung werden und sollte vermieden werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>