<Type Name="ReadOnlyMetadataCollection&lt;T&gt;" FullName="System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd2d8996cb8d5fb4a9874cf7a7799985b40b4cd5" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63976817" /></Metadata><TypeSignature Language="C#" Value="public class ReadOnlyMetadataCollection&lt;T&gt; : System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; where T : MetadataItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ReadOnlyMetadataCollection`1&lt;(class System.Data.Metadata.Edm.MetadataItem) T&gt; extends System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ReadOnlyMetadataCollection(Of T)&#xA;Inherits ReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : MetadataItempublic ref class ReadOnlyMetadataCollection : System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ReadOnlyMetadataCollection&lt;'T (requires 'T :&gt; MetadataItem)&gt; = class&#xA;    inherit ReadOnlyCollection&lt;'T (requires 'T :&gt; MetadataItem)&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Data.Metadata.Edm.MetadataItem</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">T</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="5bcc0-101">Der Typ der Elemente in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-101">The type of elements in the collection.</span></span></typeparam>
    <summary><span data-ttu-id="5bcc0-102">Stellt eine Auflistung von Membern in der ADO.NET-Metadatenhierarchie dar, indem eine schreibgeschützte Auflistung mit erweiterten Suchfunktionen zur Verfügung gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-102">Represents a collection of members in the ADO.NET metadata hierarchy by providing a read-only collection with advanced lookup capabilities.</span></span> <span data-ttu-id="5bcc0-103">Diese Klasse wird von der <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />-Klasse abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-103">This class is derived from the <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> class.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (string identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (identity As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::String ^ identity);" />
      <MemberSignature Language="F#" Value="override this.Contains : string -&gt; bool" Usage="readOnlyMetadataCollection.Contains identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="5bcc0-104">Die Identität des Elements.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-104">The identity of the item.</span></span></param>
        <summary><span data-ttu-id="5bcc0-105">Bestimmt, ob die Auflistung ein Element mit der angegebenen Identität enthält.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-105">Determines whether the collection contains an item with the specified identity.</span></span></summary>
        <returns><span data-ttu-id="5bcc0-106"><see langword="true" />, wenn die Auflistung das zu suchende Element enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-106"><see langword="true" /> if the collection contains the item to be searched for; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="5bcc0-107">Der Standardwert ist "False".</span><span class="sxs-lookup"><span data-stu-id="5bcc0-107">The default is false.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As ReadOnlyMetadataCollection(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Metadata::Edm::ReadOnlyMetadataCollection&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.MetadataItem)&gt;.Enumerator" Usage="readOnlyMetadataCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5bcc0-108">Gibt einen Enumerator zurück, der diese Auflistung durchlaufen kann.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-108">Returns an enumerator that can iterate through this collection.</span></span></summary>
        <returns><span data-ttu-id="5bcc0-109">Ein <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator" />, der zum Durchlaufen dieser <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" /> verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-109">A <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator" /> that can be used to iterate through this <see cref="T:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual T GetValue (string identity, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T GetValue(string identity, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (identity As String, ignoreCase As Boolean) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual T GetValue(System::String ^ identity, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : string * bool -&gt; 'T&#xA;override this.GetValue : string * bool -&gt; 'T" Usage="readOnlyMetadataCollection.GetValue (identity, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="5bcc0-110">Die Identität des Elements, das gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-110">The identity of the item to be searched for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="5bcc0-111"><see langword="true" />, wenn ohne Berücksichtigung der Groß- und Kleinschreibung gesucht werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-111"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="5bcc0-112">Ruft unter Verwendung der angegebenen Identität ein Element aus dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-112">Retrieves an item from this collection by using the specified identity.</span></span></summary>
        <returns><span data-ttu-id="5bcc0-113">Ein Element aus dieser Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-113">An item from this collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberSignature Language="F#" Value="override this.IndexOf : 'T -&gt; int" Usage="readOnlyMetadataCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="5bcc0-114">Ein zu suchender Wert.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-114">A value to seek.</span></span></param>
        <summary><span data-ttu-id="5bcc0-115">Gibt den Index des angegebenen Werts in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-115">Returns the index of the specified value in this collection.</span></span></summary>
        <returns><span data-ttu-id="5bcc0-116">Der Index des angegebenen Werts in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-116">The index of the specified value in this collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.MetadataItem)&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5bcc0-117">Ruft einen Wert ab, der angibt, ob diese Auflistung schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-117">Gets a value indicating whether this collection is read-only.</span></span></summary>
        <value><span data-ttu-id="5bcc0-118"><see langword="true" />, wenn diese Auflistung schreibgeschützt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-118"><see langword="true" /> if this collection is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual T this[string identity] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(identity As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property T default[System::String ^] { T get(System::String ^ identity); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : 'T" Usage="System.Data.Metadata.Edm.ReadOnlyMetadataCollection&lt;'T (requires 'T :&gt; System.Data.Metadata.Edm.MetadataItem)&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="5bcc0-119">Die Identität des Elements, das gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-119">The identity of the item to be searched for.</span></span></param>
        <summary><span data-ttu-id="5bcc0-120">Ruft unter Verwendung der angegebenen Identität ein Element aus dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-120">Gets an item from this collection by using the specified identity.</span></span></summary>
        <value><span data-ttu-id="5bcc0-121">Ein Element aus dieser Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-121">An item from this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public virtual bool TryGetValue (string identity, bool ignoreCase, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string identity, bool ignoreCase, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.TryGetValue(System.String,System.Boolean,`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TryGetValue (identity As String, ignoreCase As Boolean, ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ identity, bool ignoreCase, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="abstract member TryGetValue : string * bool *  -&gt; bool&#xA;override this.TryGetValue : string * bool *  -&gt; bool" Usage="readOnlyMetadataCollection.TryGetValue (identity, ignoreCase, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="identity"><span data-ttu-id="5bcc0-122">Die Identität des Elements, das gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-122">The identity of the item to be searched for.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="5bcc0-123"><see langword="true" />, wenn ohne Berücksichtigung der Groß- und Kleinschreibung gesucht werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-123"><see langword="true" /> to perform the case-insensitive search; otherwise, <see langword="false" />.</span></span></param>
        <param name="item"><span data-ttu-id="5bcc0-124">Nach dem Beenden dieser Methode enthält dieser Ausgabeparameter ein Element aus der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-124">When this method returns, this output parameter contains an item from the collection.</span></span> <span data-ttu-id="5bcc0-125">Wenn kein übereinstimmendes Element vorhanden ist, enthält dieser Ausgabeparameter NULL.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-125">If there is no matched item, this output parameter contains null.</span></span></param>
        <summary><span data-ttu-id="5bcc0-126">Ruft unter Verwendung der angegebenen Identität ein Element aus dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-126">Retrieves an item from this collection by using the specified identity.</span></span></summary>
        <returns><span data-ttu-id="5bcc0-127"><see langword="true" />, wenn ein Element vorhanden ist, das mit den Suchkriterien übereinstimmt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5bcc0-127"><see langword="true" /> if there is an item that matches the search criteria; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>