<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9487a-101">Stellt die abstrakte Basisklasse zum Implementieren eines benutzerdefinierten Typresolvers bereit.</span><span class="sxs-lookup"><span data-stu-id="9487a-101">Provides the abstract base class for implementing a custom type resolver.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487a-102">Die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> -Klasse stellt die Dienste für:</span><span class="sxs-lookup"><span data-stu-id="9487a-102">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class provides the services for:</span></span>  
  
-   <span data-ttu-id="9487a-103">Zum Konvertieren von verwalteten Typinformationen in eine Zeichenfolge durch die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9487a-103">Converting managed type information to a string value through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method.</span></span>  
  
-   <span data-ttu-id="9487a-104">Auflösen von einen Zeichenfolgenwert zurück in den entsprechenden verwalteten Typ über die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9487a-104">Resolving a string value back to the appropriate managed type through the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method.</span></span>  
  
 <span data-ttu-id="9487a-105">Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Objekt serialisiert, benutzerdefinierte Typen, es kann optional enthalten in der serialisierten Zeichenfolge mit JavaScript Object Notation (JSON) einen Wert, der Typinformationen enthalten.</span><span class="sxs-lookup"><span data-stu-id="9487a-105">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> object serializes custom types, it can optionally include in the serialized JavaScript Object Notation (JSON) string a value that contains type information.</span></span> <span data-ttu-id="9487a-106">Während der Deserialisierung <xref:System.Web.Script.Serialization.JavaScriptSerializer> können dann diese Zeichenfolgenwert Bestimmung des entsprechenden verwalteten Verweis geben, die die JSON-Zeichenfolge konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="9487a-106">During deserialization, <xref:System.Web.Script.Serialization.JavaScriptSerializer> can then reference this string value to determine the appropriate managed type to which the JSON string will be converted.</span></span>  
  
 <span data-ttu-id="9487a-107">Wenn Sie einen Typresolver zum Angeben der <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Instanz, verwendet das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> und <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> Methoden, um die Zuordnung zwischen dem verwalteten Typ und den Zeichenfolgenwert während der Serialisierung und Deserialisierung werden bzw. verwenden.</span><span class="sxs-lookup"><span data-stu-id="9487a-107">If you provide a type resolver to the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer will use the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> and <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> methods to map between the managed type and the string value during the serialization and deserialization process, respectively.</span></span>  
  
 <span data-ttu-id="9487a-108">Die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> Klasse ist die Basisklasse für die <xref:System.Web.Script.Serialization.SimpleTypeResolver> Klasse, die eine Implementierung der einen Typresolver bereitstellt, die der verwalteten Assembly qualifizierte Name verwendet.</span><span class="sxs-lookup"><span data-stu-id="9487a-108">The <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> class is the base class for the <xref:System.Web.Script.Serialization.SimpleTypeResolver> class, which provides an implementation of a type resolver that uses the managed type assembly-qualified name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9487a-109">Im folgenden Beispiel wird veranschaulicht, wie auf einen benutzerdefinierten Typresolver zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="9487a-109">The following example demonstrates how to create a custom type resolver.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="9487a-110">Beim Implementieren eines Typresolvers die Zeichenfolge, die von zurückgegeben wird das <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> Methode muss wieder in den gleichen verwalteten Typ zugeordnet, wenn der Zeichenfolgenwert, um übergeben wird die <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="9487a-110">When you implement a type resolver, the string that is returned by the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> method must map back to the same managed type when the string value is passed to the <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> method.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9487a-111">Initialisiert eine neue Instanz der <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="9487a-111">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id"><span data-ttu-id="9487a-112">Der Name des verwalteten Typs.</span><span class="sxs-lookup"><span data-stu-id="9487a-112">The name of the managed type.</span></span></param>
        <summary><span data-ttu-id="9487a-113">Gibt beim Überschreiben in einer abgeleiteten Klasse das <see cref="T:System.Type" />-Objekt zurück, das dem angegebenen Typnamen zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="9487a-113">When overridden in a derived class, returns the <see cref="T:System.Type" /> object that is associated with the specified type name.</span></span></summary>
        <returns><span data-ttu-id="9487a-114">Das <see cref="T:System.Type" />-Objekt, das dem angegebenen Typnamen zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="9487a-114">The <see cref="T:System.Type" /> object that is associated with the specified type name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487a-115">Wenn ein Typresolver zugeordnet ist ein <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz, verwendet das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> Methode beim Durchlaufen einer JSON-Zeichenfolge zum Bestimmen des bestimmten verwalteten Typs, die in den JSON-Typ konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="9487a-115">When a type resolver is associated with a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, the serializer uses the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> method when it iterates through a JSON string to determine the specific managed type to which the JSON type should be converted.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="9487a-116">Einen String-Wert wird angegeben, muss der Resolver des Typs zurückgeben einer <see cref="T:System.Type" /> -Objekt, das entsprechende darstellt, verwalteten Typs.</span><span class="sxs-lookup"><span data-stu-id="9487a-116">Given a string value, the type resolver must return a <see cref="T:System.Type" /> object that represents the corresponding managed type.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="9487a-117">Der aufzulösende verwaltete Typ.</span><span class="sxs-lookup"><span data-stu-id="9487a-117">The managed type to be resolved.</span></span></param>
        <summary><span data-ttu-id="9487a-118">Gibt beim Überschreiben in einer abgeleiteten Klasse den Typnamen für das angegebene <see cref="T:System.Type" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="9487a-118">When overridden in a derived class, returns the type name for the specified <see cref="T:System.Type" /> object.</span></span></summary>
        <returns><span data-ttu-id="9487a-119">Der Name des angegebenen verwalteten Typs.</span><span class="sxs-lookup"><span data-stu-id="9487a-119">The name of the specified managed type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487a-120">Wenn die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> Methodenrückgabe entweder `null` oder <xref:System.String.Empty>, und klicken Sie dann der Resolver des Typs den Typ nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9487a-120">If the <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> method returns either `null` or <xref:System.String.Empty>, then the type resolver does not support the type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>