<Type Name="JavaScriptTypeResolver" FullName="System.Web.Script.Serialization.JavaScriptTypeResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4dc31196e934281669ede6b17126f8707740c3e9" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70510961" /></Metadata><TypeSignature Language="C#" Value="public abstract class JavaScriptTypeResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptTypeResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptTypeResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptTypeResolver abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptTypeResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die abstrakte Basisklasse zum Implementieren eines benutzerdefinierten Typresolvers bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> -Klasse stellt die Dienste für bereit:  
  
-   Informationen zu verwalteten Typen werden mithilfe der <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> -Methode in einen Zeichen folgen Wert umgerechnet.  
  
-   Auflösen eines Zeichen folgen Werts zurück in den entsprechenden verwalteten Typ durch <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> die-Methode.  
  
 Wenn das <xref:System.Web.Script.Serialization.JavaScriptSerializer> Objekt benutzerdefinierte Typen serialisiert, kann es optional in die serialisierte JavaScript Object Notation (JSON)-Zeichenfolge einen Wert einschließen, der Typinformationen enthält. Während der Deserialisierung <xref:System.Web.Script.Serialization.JavaScriptSerializer> kann dann auf diesen Zeichen folgen Wert verweisen, um den entsprechenden verwalteten Typ zu bestimmen, in den die JSON-Zeichenfolge konvertiert wird.  
  
 Wenn Sie einen Typresolver für die <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Instanz bereitstellen, verwendet das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> -Methode und die- <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> Methode, um den verwalteten Typ und den Zeichen folgen Wert während des Serialisierungs-bzw. Deserialisierungsprozesses zuzuordnen.  
  
 Die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver> -Klasse ist die Basisklasse für <xref:System.Web.Script.Serialization.SimpleTypeResolver> die-Klasse, die eine Implementierung eines Typresolvers bereitstellt, der den durch die Assembly qualifizierten Namen des verwalteten Typs verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie ein benutzerdefinierter typanresolver erstellt wird.  
  
 [!code-csharp[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/CS/App_Code/TypeResolver.cs#2)]
 [!code-vb[System.Web.Script.Serialization.TypeResolver#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization.TypeResolver/VB/App_Code/TypeResolver.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Wenn Sie einen Typresolver implementieren, muss die Zeichenfolge, die von <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" /> der-Methode zurückgegeben wird, wieder dem gleichen verwalteten Typ zugeordnet werden, wenn der <see cref="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" /> Zeichen folgen Wert an die-Methode übermittelt wird.</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptTypeResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptTypeResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveType">
      <MemberSignature Language="C#" Value="public abstract Type ResolveType (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type ResolveType(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ResolveType (id As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Type ^ ResolveType(System::String ^ id);" />
      <MemberSignature Language="F#" Value="abstract member ResolveType : string -&gt; Type" Usage="javaScriptTypeResolver.ResolveType id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Der Name des verwalteten Typs.</param>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse das <see cref="T:System.Type" />-Objekt zurück, das dem angegebenen Typnamen zugeordnet ist.</summary>
        <returns>Das <see cref="T:System.Type" />-Objekt, das dem angegebenen Typnamen zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Typresolver einer <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Instanz zugeordnet ist, verwendet das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType%2A> -Methode, wenn es eine JSON-Zeichenfolge durchläuft, um den spezifischen verwalteten Typ zu bestimmen, in den der JSON-Typ konvertiert werden soll.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn ein Zeichen folgen Wert angegeben ist, muss der Typresolver ein <see cref="T:System.Type" /> -Objekt zurückgeben, das den entsprechenden verwalteten Typ darstellt.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ResolveTypeId">
      <MemberSignature Language="C#" Value="public abstract string ResolveTypeId (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ResolveTypeId(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ResolveTypeId(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member ResolveTypeId : Type -&gt; string" Usage="javaScriptTypeResolver.ResolveTypeId type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Der aufzulösende verwaltete Typ.</param>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse den Typnamen für das angegebene <see cref="T:System.Type" />-Objekt zurück.</summary>
        <returns>Der Name des angegebenen verwalteten Typs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId%2A> Methode `null` oder <xref:System.String.Empty>zurückgibt, wird der-Typ vom Typresolver nicht unterstützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
