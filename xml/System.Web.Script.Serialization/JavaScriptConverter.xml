<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c9e5a480cbae2f463e4846af1036150671d2e08" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39880977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ee8c2-101">Stellt eine abstrakte Basisklasse für einen benutzerdefinierten Typkonverter bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee8c2-101">Provides an abstract base class for a custom type converter.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee8c2-102">Die <xref:System.Web.Script.Serialization.JavaScriptConverter> -Klasse ermöglicht Ihnen, implementieren die Serialisierung und Deserialisierung der Prozesse für verwaltete Typen, die nicht nativ durch unterstützt werden die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Klasse.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="ee8c2-103">Sie können auch <xref:System.Web.Script.Serialization.JavaScriptConverter> , wenn Sie mehr Kontrolle über die Serialisierung und Deserialisierung Prozess benötigen.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="ee8c2-104">Die <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> -Eigenschaft gibt die Typen, die für die ein benutzerdefinierter Konverter Konverterdienste bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="ee8c2-105">Um anzugeben, dass ein benutzerdefinierter Konverter von verwendet werden, muss die <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Instanz müssen Sie den Konverter bei der Instanz registrieren.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="ee8c2-106">Bei Verwendung der <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Klasse direkt, sollten Sie mit der <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> Methode zum Registrieren des Konverters.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="ee8c2-107">Andernfalls, wenn Sie Webmethoden von ECMAScript (JavaScript) aufrufen und den benutzerdefinierten Konverter verwenden möchten, können Sie ihn registrieren durch Hinzufügen einer `converters` Element in der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="ee8c2-108">Weitere Informationen finden Sie unter [Vorgehensweise: Konfigurieren von ASP.NET-Dienste in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span><span class="sxs-lookup"><span data-stu-id="ee8c2-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="ee8c2-109">Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz einen Typ für die sie über einen benutzerdefinierten Konverter registriert, verfügt, ruft das Serialisierungsprogramm serialisiert die <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="ee8c2-110">Auf ähnliche Weise, wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Instanz ist eine JavaScript Object Notation (JSON)-Zeichenfolge deserialisieren und erkennt, dass es sich bei einem Typ in der JSON-Zeichenfolge einen benutzerdefinierten Konverter zugeordnet, ruft das Serialisierungsprogramm ist die <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee8c2-111">Das folgende Beispiel zeigt, wie Sie einen benutzerdefinierten Konverter für erstellen die <xref:System.Web.UI.WebControls.ListItemCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="ee8c2-112">
        <para>Beim Erben von <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, müssen Sie die folgenden Member überschreiben:- <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />   
  
-    <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> bietet die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> -Methode, die von den Implementierungen von verwendet wird <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Konvertercode können einen Wert, der im Wörterbuch enthalten ist, die das Serialisierungsprogramm an sie übergeben muss und anschließend diesen Wert in ein Objekt vom Typ konvertieren <paramref name="T" />. Statt den Code eine benutzerdefinierte Konvertierung zu diesem Zweck neu zu implementieren, rufen Sie die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Methode.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="ee8c2-112">
          <para>When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:  -   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />. Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />. Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee8c2-113">Initialisiert eine neue Instanz der <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-113">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">
          <span data-ttu-id="ee8c2-114">Eine <see cref="T:System.Collections.Generic.IDictionary`2" />-Instanz aus Eigenschaftendaten, die als Name-Wert-Paare gespeichert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-114">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="ee8c2-115">Der Typ des resultierenden Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-115">The type of the resulting object.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="ee8c2-116">Die <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />-Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-116">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee8c2-117">Beim Überschreiben in einer abgeleiteten Klasse wird das bereitgestellte Wörterbuch in ein Objekt des angegebenen Typs konvertiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-117">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee8c2-118">Das deserialisierte Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-118">The deserialized object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ee8c2-119">
            <para>Die <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> Methode durchläuft die Werte in der <paramref name="dictionary" /> Parameter zum Erstellen einer Instanz des Typs im angeforderten der <paramref name="type" /> Parameter. Ein Konverter kann Werte direkt verwenden <paramref name="dictionary" />, es wird empfohlen, dass die Implementierung des Konverters verwenden die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Methode stattdessen. Der Konverter sollten diese Methode aufrufen der <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> Instanz zur Verfügung, aus der <paramref name="serializer" /> Parameter.  Die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Methode kann vom Konverter übergeben Sie einen Eigenschaftswert <paramref name="dictionary" />, und klicken Sie dann den Wert des erwarteten Typs zurückgibt. In einigen Fällen ein Konverter für einen benutzerdefinierten Typ vielleicht arbeiten Sie mit Eigenschaften, die selbst Konverter registriert haben (z. B. Geben Sie einen besitzt eine Eigenschaft vom Typ B und Typ B ist auch einen benutzerdefinierten Konverter zugeordnet). In diesem Fall aufrufen <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> stellt sicher, dass benutzerdefinierte Konverter werden rekursiv aufgerufen wird, für die Daten, die im Wörterbuch enthalten ist. Wenn der Konverter alle Einträge im Wörterbuch durchlaufen wurden, wird eine erstellte Instanz des Zieltyps zurückgegeben.  Wenn der Konverter ein Problem bei der Deserialisierung auftritt, lösen sie eine <see cref="T:System.InvalidOperationException" /> Fehler, der das Problem beschreibt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-119">
              <para>The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter. Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead. The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.  The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type. In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter). In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary. When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.  If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ee8c2-120">Das zu serialisierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-120">The object to serialize.</span>
          </span>
        </param>
        <param name="serializer">
          <span data-ttu-id="ee8c2-121">Das für die Serialisierung verantwortliche Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-121">The object that is responsible for the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee8c2-122">Beim Überschreiben in einer abgeleiteten Klasse wird ein Wörterbuch mit Name-Wert-Paaren erstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-122">When overridden in a derived class, builds a dictionary of name/value pairs.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee8c2-123">Ein Objekt, das Schlüssel-Wert-Paare enthält, die die Objektdaten darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-123">An object that contains key/value pairs that represent the object’s data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee8c2-124">Beim Serialisieren eines Typs, für den ein benutzerdefinierter Konverter registriert ist, die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz ruft die <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-124">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ee8c2-125">
            <para>Der Rückgabewert von <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> muss ein <see cref="T:System.Collections.Generic.IDictionary`2" /> -Instanz mit NULL oder mehr Name/Wert-Paaren, die darstellen, die Daten eines Objekts in JSON konvertiert werden. Der Konverter selbst wird nicht Daten als JSON serialisiert. Stattdessen erstellt der Konverter ein Wörterbuch mit Name/Wert-Paaren, das die Eigenschaftennamen (für das Wörterbuch der Zeichenfolgenschlüssel ") und die entsprechende Eigenschaft enthalten, Werte (die Objektwert im Wörterbuch). Die <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> Instanz anschließend diese in JSON konvertiert.  Wenn der Konverter eine Ausnahme auftritt, lösen sie eine <see cref="T:System.InvalidOperationException" /> Fehler, der das Problem beschreibt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-125">
              <para>The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON. The converter itself does not serialize data as JSON. Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary). The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.  If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee8c2-126">Ruft beim Überschreiben in einer abgeleiteten Klasse eine Auflistung der unterstützten Typen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-126">When overridden in a derived class, gets a collection of the supported types.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee8c2-127">Ein Objekt, das <see cref="T:System.Collections.Generic.IEnumerable`1" /> als die vom Konverter unterstützten Typen implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-127">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee8c2-128">Die <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> -Eigenschaft listet die Typen, die vom Konverter unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-128">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="ee8c2-129">Zur Laufzeit eine <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz wird diese Eigenschaft verwendet, um die Zuordnung von verwalteten Typen an den entsprechenden benutzerdefinierten Konvertern zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-129">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ee8c2-130">Das folgende Beispiel veranschaulicht das Überschreiben der <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> Eigenschaft in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-130">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="ee8c2-131">In diesem Beispiel der Konverter unterstützt nur die <xref:System.Web.UI.WebControls.ListItemCollection> Typ.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-131">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="ee8c2-132">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Script.Serialization.JavaScriptConverter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="ee8c2-132">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ee8c2-133">
            <para>
              <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> muss immer zurückgeben, eine Sammlung und die Sammlung muss mindestens einen Eintrag enthalten.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ee8c2-133">
              <para>
                <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>