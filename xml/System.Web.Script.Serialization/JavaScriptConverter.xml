<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba7beca8ec749ce6463983ff8c1cab8784dfba1d" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69135910" /></Metadata><TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <TypeSignature Language="F#" Value="type JavaScriptConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine abstrakte Basisklasse für einen benutzerdefinierten Typkonverter bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit <xref:System.Web.Script.Serialization.JavaScriptConverter> der-Klasse können Sie Serialisierungs-und Deserialisierungsprozesse für verwaltete Typen implementieren, die von der <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Klasse nicht nativ unterstützt werden. Sie können auch verwenden <xref:System.Web.Script.Serialization.JavaScriptConverter> , wenn Sie mehr Kontrolle über den Serialisierungs-und Deserialisierungsprozess benötigen.  
  
 Die <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> -Eigenschaft gibt die Typen an, für die ein benutzerdefinierter Konverter Konverterdienste bereitstellt.  
  
 Um anzugeben, dass ein benutzerdefinierter Konverter von der <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Instanz verwendet werden muss, müssen Sie den Konverter bei der-Instanz registrieren. Wenn Sie die <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Klasse direkt verwenden, sollten Sie die- <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> Methode verwenden, um den Konverter zu registrieren. Andernfalls können Sie, wenn Sie Webmethoden aus ECMAScript (JavaScript) aufrufen und den benutzerdefinierten Konverter verwenden möchten, ihn registrieren, indem Sie ein `converters` -Element in der Konfigurationsdatei hinzufügen. Weitere Informationen finden Sie unter [Vorgehensweise: Konfigurieren von ASP.NET Services in Microsoft](https://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)AJAX.  
  
 Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz einen Typ serialisiert, für den Sie einen benutzerdefinierten Konverter registriert hat, ruft das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> -Methode auf. Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz eine JavaScript Object Notation (JSON)-Zeichenfolge deserialisiert und erkennt, dass einem Typ in der JSON-Zeichenfolge ein benutzerdefinierter Konverter zugeordnet ist, ruft das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> -Methode auf.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein benutzerdefinierter Konverter für <xref:System.Web.UI.WebControls.ListItemCollection> die-Klasse erstellt wird.  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Wenn Sie von <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />erben, müssen Sie die folgenden Member überschreiben: 
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />stellt die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Methode bereit, die von Implementierern von <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />verwendet wird. Konvertercode muss in der Lage sein, einen Wert zu verwenden, der im Wörterbuch enthalten ist, das das Serialisierungsprogramm übergibt, und diesen Wert dann in <paramref name="T" />ein Objekt des Typs umzuwandeln. Anstatt den benutzerdefinierten Konvertierungs Code zu diesem Zweck erneut zu implementieren, können Sie die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> -Methode aufzurufen.</para></block>
    <altmember cref="T:System.Web.Configuration.Converter" />
    <related type="Article" href="https://msdn.microsoft.com/library/8290e543-7eff-47a4-aace-681f3c07229b">Webdienste in ASP.NET AJAX</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Deserialize : System.Collections.Generic.IDictionary&lt;string, obj&gt; * Type * System.Web.Script.Serialization.JavaScriptSerializer -&gt; obj" Usage="javaScriptConverter.Deserialize (dictionary, type, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary">Eine <see cref="T:System.Collections.Generic.IDictionary`2" />-Instanz aus Eigenschaftendaten, die als Name-Wert-Paare gespeichert sind.</param>
        <param name="type">Der Typ des resultierenden Objekts.</param>
        <param name="serializer">Die <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />-Instanz.</param>
        <summary>Beim Überschreiben in einer abgeleiteten Klasse wird das bereitgestellte Wörterbuch in ein Objekt des angegebenen Typs konvertiert.</summary>
        <returns>Das deserialisierte Objekt.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para>Die <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> -Methode durchläuft die Werte <paramref name="dictionary" /> im-Parameter, um eine Instanz des im <paramref name="type" /> -Parameter angeforderten Typs zu erstellen. Obwohl ein Konverter direkt Werte aus <paramref name="dictionary" />verwenden kann, empfiehlt es sich, stattdessen die konverterimplementierung zu <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> verwenden. Der Konverter sollte diese Methode der- <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> Instanz aufrufen, die über den <paramref name="serializer" /> -Parameter verfügbar ist.  
  
Die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> -Methode ermöglicht Konvertern, einen Eigenschafts <paramref name="dictionary" />Wert von zu übergeben, und gibt dann einen Wert des erwarteten Typs zurück. In einigen Fällen kann ein Konverter für einen benutzerdefinierten Typ mit Eigenschaften arbeiten, die selbst über registrierte Konverter verfügen (Typ a hat z. b. eine Eigenschaft vom Typ B, und Typ b ist ebenfalls einem benutzerdefinierten Konverter zugeordnet). In diesem Fall wird durch <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> das Aufrufen von sichergestellt, dass benutzerdefinierte Konverter rekursiv für Eigenschafts Daten aufgerufen werden, die im Wörterbuch enthalten sind. Wenn der Konverter alle Einträge im Wörterbuch durchlaufen hat, gibt er eine konstruierte Instanz des Zieltyps zurück.  
  
Wenn der Konverter während der Deserialisierung auf ein Problem stößt, sollte er <see cref="T:System.InvalidOperationException" /> einen Fehler auslösen, der das Problem beschreibt.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberSignature Language="F#" Value="abstract member Serialize : obj * System.Web.Script.Serialization.JavaScriptSerializer -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="javaScriptConverter.Serialize (obj, serializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj">Das zu serialisierende Objekt.</param>
        <param name="serializer">Das für die Serialisierung verantwortliche Objekt.</param>
        <summary>Beim Überschreiben in einer abgeleiteten Klasse wird ein Wörterbuch mit Name-Wert-Paaren erstellt.</summary>
        <returns>Ein Objekt, das Schlüssel-Wert-Paare enthält, die die Objektdaten darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie einen Typ serialisieren, für den ein benutzerdefinierter Konverter registriert ist <xref:System.Web.Script.Serialization.JavaScriptSerializer> , ruft die <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> -Instanz die-Methode auf.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Der Rückgabewert von <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> muss eine <see cref="T:System.Collections.Generic.IDictionary`2" /> Instanz mit 0 (null) oder mehr Name/Wert-Paaren sein, die die Daten eines Objekts darstellen, die in JSON konvertiert werden sollen. Der Konverter selbst serialisiert keine Daten als JSON. Stattdessen erstellt der Konverter ein Wörterbuch mit Name-Wert-Paaren, die die Eigenschaftsnamen (den Zeichen folgen Schlüssel für das Wörterbuch) und die entsprechenden Eigenschaftswerte (den Objektwert im Wörterbuch) enthalten. Die <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> Instanz konvertiert diese anschließend in JSON.  
  
Wenn der Konverter auf eine Ausnahme stößt, sollte er einen <see cref="T:System.InvalidOperationException" /> Fehler auslösen, der das Problem beschreibt.</para></block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportedTypes : seq&lt;Type&gt;" Usage="System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine Auflistung der unterstützten Typen ab.</summary>
        <value>Ein Objekt, das <see cref="T:System.Collections.Generic.IEnumerable`1" /> als die vom Konverter unterstützten Typen implementiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> -Eigenschaft listet die Typen auf, die vom Konverter unterstützt werden. Zur Laufzeit wird diese Eigenschaft <xref:System.Web.Script.Serialization.JavaScriptSerializer> von einer-Instanz verwendet, um die Zuordnung verwalteter Typen zu den entsprechenden benutzerdefinierten Konvertern zu bestimmen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> -Eigenschaft in einer abgeleiteten Klasse überschrieben wird. In diesem Beispiel unterstützt der Konverter nur den <xref:System.Web.UI.WebControls.ListItemCollection> -Typ. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Script.Serialization.JavaScriptConverter> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />muss immer eine Auflistung zurückgeben, und die Auflistung muss mindestens einen Eintrag enthalten.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
