<Type Name="JavaScriptConverter" FullName="System.Web.Script.Serialization.JavaScriptConverter">
  <TypeSignature Language="C#" Value="public abstract class JavaScriptConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit JavaScriptConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class JavaScriptConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptConverter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="112ce-101">Stellt eine abstrakte Basisklasse für einen benutzerdefinierten Typkonverter bereit.</span><span class="sxs-lookup"><span data-stu-id="112ce-101">Provides an abstract base class for a custom type converter.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="112ce-102">Die <xref:System.Web.Script.Serialization.JavaScriptConverter> -Klasse ermöglicht es Ihnen, implementieren die Serialisierung und Deserialisierung der Prozesse für verwaltete Typen, die keine systemeigene Unterstützung der <xref:System.Web.Script.Serialization.JavaScriptSerializer> Klasse.</span><span class="sxs-lookup"><span data-stu-id="112ce-102">The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class.</span></span> <span data-ttu-id="112ce-103">Sie können auch <xref:System.Web.Script.Serialization.JavaScriptConverter> Wenn Sie mehr Kontrolle über die Serialisierung und Deserialisierung benötigen.</span><span class="sxs-lookup"><span data-stu-id="112ce-103">You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.</span></span>  
  
 <span data-ttu-id="112ce-104">Die <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> -Eigenschaft gibt die Typen, die für den benutzerdefinierter Konverter Konverterdienste bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="112ce-104">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.</span></span>  
  
 <span data-ttu-id="112ce-105">Um anzugeben, dass ein benutzerdefinierter Konverter von verwendet werden, muss die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz müssen Sie den Konverter bei der Instanz registrieren.</span><span class="sxs-lookup"><span data-stu-id="112ce-105">To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance.</span></span> <span data-ttu-id="112ce-106">Bei Verwendung der <xref:System.Web.Script.Serialization.JavaScriptSerializer> -Klasse direkt verwendet, sollten Sie mit der <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> Methode, um den Konverter zu registrieren.</span><span class="sxs-lookup"><span data-stu-id="112ce-106">If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter.</span></span> <span data-ttu-id="112ce-107">Andernfalls, wenn Sie Webmethoden von ECMAScript (JavaScript) aufrufen, und Sie den benutzerdefinierten Konverter verwenden möchten, können Sie ihn registrieren durch Hinzufügen einer `converters` Element in der Konfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="112ce-107">Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file.</span></span> <span data-ttu-id="112ce-108">Weitere Informationen finden Sie unter [Vorgehensweise: Konfigurieren von ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span><span class="sxs-lookup"><span data-stu-id="112ce-108">For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).</span></span>  
  
 <span data-ttu-id="112ce-109">Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> serialisieren Instanz ein Typs für die, die es einen benutzerdefinierten Konverter registriert besitzt, ruft das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="112ce-109">When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span> <span data-ttu-id="112ce-110">Auf ähnliche Weise, wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz deserialisiert eine Zeichenfolge JavaScript Object Notation (JSON) und erkennt, dass ein Typ in der JSON-Zeichenfolge einen benutzerdefinierten Konverter zugeordnet, ruft das Serialisierungsprogramm hat die <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="112ce-110">Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="112ce-111">Das folgende Beispiel zeigt, wie Sie einen benutzerdefinierten Konverter zum Erstellen der <xref:System.Web.UI.WebControls.ListItemCollection> Klasse.</span><span class="sxs-lookup"><span data-stu-id="112ce-111">The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]
 [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="112ce-112">Beim Erben von <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, müssen Sie die folgenden Member überschreiben:</span><span class="sxs-lookup"><span data-stu-id="112ce-112">When you inherit from <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />, you must override the following members:</span></span>  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />  
  
-   <span data-ttu-id="112ce-113"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> Stellt die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> -Methode, die verwendeten Implementierer <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span><span class="sxs-lookup"><span data-stu-id="112ce-113"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /><see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> provides the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method that will be used by implementers of <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />.</span></span> <span data-ttu-id="112ce-114">Konvertercode muss einen Wert annehmen, der im Wörterbuch enthalten ist, die das Serialisierungsprogramm an sie übergibt, und konvertieren Sie diesen Wert in ein Objekt vom Typ <paramref name="T" />.</span><span class="sxs-lookup"><span data-stu-id="112ce-114">Converter code must be able to take a value that is contained in the dictionary that the serializer passes to it, and then convert that value into an object of type <paramref name="T" />.</span></span> <span data-ttu-id="112ce-115">Statt den Code benutzerdefinierte Konvertierung zu diesem Zweck neu zu implementieren, rufen Sie die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Methode.</span><span class="sxs-lookup"><span data-stu-id="112ce-115">Rather than re-implementing the custom conversion code to accomplish this, you can call the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method.</span></span></para>
    </block>
    <altmember cref="T:System.Web.Configuration.Converter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JavaScriptConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; JavaScriptConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="112ce-116">Initialisiert eine neue Instanz der <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="112ce-116">Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public abstract object Deserialize (System.Collections.Generic.IDictionary&lt;string,object&gt; dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Deserialize(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; dictionary, class System.Type type, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Deserialize(System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ dictionary, Type ^ type, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="112ce-117">Eine <see cref="T:System.Collections.Generic.IDictionary`2" />-Instanz aus Eigenschaftendaten, die als Name-Wert-Paare gespeichert sind.</span><span class="sxs-lookup"><span data-stu-id="112ce-117">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</span></span></param>
        <param name="type"><span data-ttu-id="112ce-118">Der Typ des resultierenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="112ce-118">The type of the resulting object.</span></span></param>
        <param name="serializer"><span data-ttu-id="112ce-119">Die <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="112ce-119">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</span></span></param>
        <summary><span data-ttu-id="112ce-120">Beim Überschreiben in einer abgeleiteten Klasse wird das bereitgestellte Wörterbuch in ein Objekt des angegebenen Typs konvertiert.</span><span class="sxs-lookup"><span data-stu-id="112ce-120">When overridden in a derived class, converts the provided dictionary into an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="112ce-121">Das deserialisierte Objekt.</span><span class="sxs-lookup"><span data-stu-id="112ce-121">The deserialized object.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="112ce-122">Die <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> Methode durchläuft die Werte in der <paramref name="dictionary" /> Parameter So erstellen Sie eine Instanz des Typs im angeforderten der <paramref name="type" /> Parameter.</span><span class="sxs-lookup"><span data-stu-id="112ce-122">The <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)" /> method iterates through the values in the <paramref name="dictionary" /> parameter to construct an instance of the type requested in the <paramref name="type" /> parameter.</span></span> <span data-ttu-id="112ce-123">Ein Konverter kann Werte direkt verwenden <paramref name="dictionary" />, es wird empfohlen, dass die Implementierung des Konverters verwenden die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="112ce-123">Although a converter can directly use values from <paramref name="dictionary" />, we recommend that the converter implementer use the <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method instead.</span></span> <span data-ttu-id="112ce-124">Der Konverter sollten diese Methode aufrufen, die <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> Instanz, die von der <paramref name="serializer" /> Parameter.</span><span class="sxs-lookup"><span data-stu-id="112ce-124">The converter should call this method of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance available from the <paramref name="serializer" /> parameter.</span></span>  
  
 <span data-ttu-id="112ce-125">Die <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> Methode ermöglicht Konverter übergeben Sie einen Eigenschaftswert aus <paramref name="dictionary" />, und klicken Sie dann den Wert der erwartete Typ zurück.</span><span class="sxs-lookup"><span data-stu-id="112ce-125">The <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> method enables converter to pass a property value from <paramref name="dictionary" />, and then return a value of the expected type.</span></span> <span data-ttu-id="112ce-126">In einigen Fällen möglicherweise ein Konverter für einen benutzerdefinierten Typ mit Eigenschaften, die selbst Konverter registriert haben arbeiten (z. B. Geben Sie einen verfügt über eine Eigenschaft vom Typ B und Typ B ist auch einen benutzerdefinierten Konverter zugeordnet).</span><span class="sxs-lookup"><span data-stu-id="112ce-126">In some cases, a converter for a custom type might be working with properties that themselves have registered converters (for example, type A has a property of type B, and type B is also associated with a custom converter).</span></span> <span data-ttu-id="112ce-127">In diesem Fall aufrufen <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> wird sichergestellt, dass benutzerdefinierte Konverter können rekursiv aufgerufen werden, für die Daten, die im Wörterbuch enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="112ce-127">In that case, invoking <see cref="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" /> makes sure that custom converters will be recursively invoked for property data that is contained in the dictionary.</span></span> <span data-ttu-id="112ce-128">Wenn Sie alle Einträge im Wörterbuch vom Konverter durchlaufen hat, wird eine konstruierte Instanz des Zieltyps zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="112ce-128">When the converter has iterated through all entries in the dictionary, it returns a constructed instance of the target type.</span></span>  
  
 <span data-ttu-id="112ce-129">Wenn der Konverter während der Deserialisierung ein Problem auftritt, lösen sie eine <see cref="T:System.InvalidOperationException" /> Fehler, der das Problem beschreibt.</span><span class="sxs-lookup"><span data-stu-id="112ce-129">If the converter encounters a problem during deserialization, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Serialize(object obj, class System.Web.Script.Serialization.JavaScriptSerializer serializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Serialize (obj As Object, serializer As JavaScriptSerializer) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Serialize(System::Object ^ obj, System::Web::Script::Serialization::JavaScriptSerializer ^ serializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="serializer" Type="System.Web.Script.Serialization.JavaScriptSerializer" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="112ce-130">Das zu serialisierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="112ce-130">The object to serialize.</span></span></param>
        <param name="serializer"><span data-ttu-id="112ce-131">Das für die Serialisierung verantwortliche Objekt.</span><span class="sxs-lookup"><span data-stu-id="112ce-131">The object that is responsible for the serialization.</span></span></param>
        <summary><span data-ttu-id="112ce-132">Beim Überschreiben in einer abgeleiteten Klasse wird ein Wörterbuch mit Name-Wert-Paaren erstellt.</span><span class="sxs-lookup"><span data-stu-id="112ce-132">When overridden in a derived class, builds a dictionary of name/value pairs.</span></span></summary>
        <returns><span data-ttu-id="112ce-133">Ein Objekt, das Schlüssel-Wert-Paare enthält, die die Objektdaten darstellen.</span><span class="sxs-lookup"><span data-stu-id="112ce-133">An object that contains key/value pairs that represent the object’s data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="112ce-134">Beim Serialisieren eines Typs, für den benutzerdefinierter Konverter registriert ist, die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz ruft die <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="112ce-134">When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="112ce-135">Der Rückgabewert der <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> muss ein <see cref="T:System.Collections.Generic.IDictionary`2" /> -Instanz mit NULL oder mehr Name/Wert-Paare, die darstellen, die Daten eines Objekts in JSON konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="112ce-135">The return value of <see cref="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)" /> must be an <see cref="T:System.Collections.Generic.IDictionary`2" /> instance with zero or more name/value pairs that represent an object’s data to be converted to JSON.</span></span> <span data-ttu-id="112ce-136">Der Konverter selbst ist Daten nicht als JSON serialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="112ce-136">The converter itself does not serialize data as JSON.</span></span> <span data-ttu-id="112ce-137">Stattdessen erstellt der Konverter ein Wörterbuch von Name/Wert-Paaren, das die Eigenschaftennamen (für das Wörterbuch der Zeichenfolgenschlüssel ") und die entsprechende Eigenschaft enthalten, Werte (die Objektwert im Wörterbuch).</span><span class="sxs-lookup"><span data-stu-id="112ce-137">Instead, the converter builds a dictionary of name/value pairs that contain the property names (the string key for the dictionary) and corresponding property values (the object value in the dictionary).</span></span> <span data-ttu-id="112ce-138">Die <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> Instanz anschließend diese in JSON konvertiert.</span><span class="sxs-lookup"><span data-stu-id="112ce-138">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance subsequently converts these to JSON.</span></span>  
  
 <span data-ttu-id="112ce-139">Wenn der Konverter eine Ausnahme auftritt, lösen sie eine <see cref="T:System.InvalidOperationException" /> Fehler, der das Problem beschreibt.</span><span class="sxs-lookup"><span data-stu-id="112ce-139">If the converter encounters an exception, it should throw an <see cref="T:System.InvalidOperationException" /> error that describes the problem.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SupportedTypes">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; SupportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; SupportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SupportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ SupportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="112ce-140">Ruft beim Überschreiben in einer abgeleiteten Klasse eine Auflistung der unterstützten Typen ab.</span><span class="sxs-lookup"><span data-stu-id="112ce-140">When overridden in a derived class, gets a collection of the supported types.</span></span></summary>
        <value><span data-ttu-id="112ce-141">Ein Objekt, das <see cref="T:System.Collections.Generic.IEnumerable`1" /> als die vom Konverter unterstützten Typen implementiert.</span><span class="sxs-lookup"><span data-stu-id="112ce-141">An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="112ce-142">Die <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> Eigenschaft führt die Objekttypen auf, die vom Konverter unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="112ce-142">The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter.</span></span> <span data-ttu-id="112ce-143">Zur Laufzeit eine <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz verwendet diese Eigenschaft, um die Zuordnung von verwalteten Typen an den entsprechenden benutzerdefinierten Konvertern zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="112ce-143">At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="112ce-144">Das folgende Beispiel veranschaulicht das Überschreiben der <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> Eigenschaft in einer abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="112ce-144">The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class.</span></span> <span data-ttu-id="112ce-145">In diesem Beispiel wird der Konverter unterstützt nur die <xref:System.Web.UI.WebControls.ListItemCollection> Typ.</span><span class="sxs-lookup"><span data-stu-id="112ce-145">In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type.</span></span> <span data-ttu-id="112ce-146">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.Script.Serialization.JavaScriptConverter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="112ce-146">This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.</span></span>  
  
 [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]
 [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="112ce-147"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> muss immer zurückgeben, eine Auflistung und der Sammlung muss mindestens einen Eintrag enthalten.</span><span class="sxs-lookup"><span data-stu-id="112ce-147"><see cref="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes" /> must always return a collection, and the collection must contain at least one entry.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>