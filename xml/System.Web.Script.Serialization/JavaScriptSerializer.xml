<Type Name="JavaScriptSerializer" FullName="System.Web.Script.Serialization.JavaScriptSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1f24e659692acfb24a4aa0a75578cec9934372e" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82432072" /></Metadata><TypeSignature Language="C#" Value="public class JavaScriptSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JavaScriptSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Script.Serialization.JavaScriptSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JavaScriptSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JavaScriptSerializer" />
  <TypeSignature Language="F#" Value="type JavaScriptSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwenden Sie im Fall von .NET Framework 4.7.2 und späteren Versionen die APIs im <see cref="N:System.Text.Json" />-Namespace für die Serialisierung und Deserialisierung. Verwenden Sie <see href="https://www.newtonsoft.com/json">Newtonsoft.Json</see> für frühere Versionen von .NET Framework. Mit diesem Typ sollten die Serialisierungs- und Deserialisierungsfunktionen für AJAX-aktivierte Anwendungen bereitgestellt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

> [!IMPORTANT]
> Für .NET Framework 4.7.2 und spätere Versionen sollten die APIs im <xref:System.Text.Json>-Namespace für die Serialisierung und Deserialisierung verwendet werden. Verwenden Sie für frühere Versionen von .NET Framework [Newton Soft. JSON](https://www.newtonsoft.com/json).

Die <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Klasse wird intern von der asynchronen Kommunikationsschicht verwendet, um die Daten zu serialisieren und zu deserialisieren, die zwischen dem Browser und dem Webserver übermittelt werden. Sie können nicht auf diese Instanz des Serialisierungsprogramms zugreifen. Diese Klasse macht jedoch eine öffentliche API verfügbar. Daher können Sie die-Klasse verwenden, wenn Sie mit JavaScript Object Notation (JSON) in verwaltetem Code arbeiten möchten.  
  
Verwenden Sie die <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>-Methode, um ein Objekt zu serialisieren. Um eine JSON-Zeichenfolge zu deserialisieren, verwenden Sie die Methoden <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> oder <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>. Zum Serialisieren und Deserialisieren von Typen, die nicht System intern von <xref:System.Web.Script.Serialization.JavaScriptSerializer>unterstützt werden, implementieren Sie benutzerdefinierte Konverter mithilfe der <xref:System.Web.Script.Serialization.JavaScriptConverter>-Klasse. Registrieren Sie dann die Konverter mithilfe der <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>-Methode.  
  
## <a name="mapping-between-managed-types-and-json"></a>Zuordnung zwischen verwalteten Typen und JSON  
 Die folgende Tabelle zeigt die Zuordnung zwischen verwalteten Typen und JSON für den Serialisierungsprozess. Diese verwalteten Typen werden von <xref:System.Web.Script.Serialization.JavaScriptSerializer>nativ unterstützt. Wenn Sie von einer JSON-Zeichenfolge in einen verwalteten Typ deserialisieren, gilt dieselbe Zuordnung. Die Deserialisierung kann jedoch asymmetrisch sein. nicht alle serialisierbaren verwalteten Typen können aus JSON deserialisiert werden.  
  
> [!NOTE]
>  Ein mehrdimensionales Array wird als eindimensionales Array serialisiert, und Sie sollten es als flaches Array verwenden.  
  
|Verwalteter Typ|JSON-Entsprechung|  
|------------------|---------------------|  
|<xref:System.String> (nur UTF-8-Codierung).|Zeichenfolge|  
|<xref:System.Char>|Zeichenfolge|  
|Einzelnes Null char (z. b., \ 0)|NULL|  
|<xref:System.Boolean>|Boolesch. In JSON als `true` oder `false` dargestellt|  
|`null` (`null` Objekt Verweise und <xref:System.Nullable> Werttypen).|Ein Zeichen folgen Wert von NULL.|  
|<xref:System.DBNull>|Ein Zeichen folgen Wert von NULL.|  
|Primitive numerische Typen (oder numerisch kompatible Typen): <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>, <xref:System.Double>und <xref:System.Single>. Die Kultur unveränderliche Zeichen folgen Darstellung wird verwendet.|Anzahl|  
|<xref:System.DateTime>|Date-Objekt, das in JSON als "\\/Date (Anzahl der Ticks)\\/" dargestellt wird. Die Anzahl der Ticks ist ein positiver oder negativer Long-Wert, der die Anzahl der Ticks (Millisekunden) angibt, die seit Mitternacht 01. Januar 1970 UTC verstrichen sind.<br /><br /> Der maximal unterstützte Datumswert ist <xref:System.DateTime.MaxValue> (12/31/9999 11:59:59 Uhr), und der unterstützte Mindestwert ist <xref:System.DateTime.MinValue> (1/1/0001 12:00:00 Uhr).|  
|Enumerationen des ganzzahligen Typs|Ganzzahlige Entsprechung des-Enumerationswerts|  
|Typen, die <xref:System.Collections.IEnumerable> oder <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> implementieren, die nicht auch Implementierungen von <xref:System.Collections.IDictionary> oder <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>sind. Dies schließt Typen ein, z. b. <xref:System.Array>, <xref:System.Collections.ArrayList>und <xref:System.Collections.Generic.List%601>.|Array, das JSON-Array Syntax verwendet|  
|Typen, die <xref:System.Collections.IDictionary> oder <xref:System.Collections.Generic.IDictionary%602?displayProperty=nameWithType>implementieren. Dies schließt Typen ein, z. b. <xref:System.Collections.Generic.Dictionary%602> und <xref:System.Collections.Hashtable>.|JavaScript-Objekt, das JSON-Wörterbuch Syntax verwendet|  
|Benutzerdefinierte konkrete (nicht abstrakte) Typen mit öffentlichen Instanzeigenschaften, die über Get-Accessoren oder öffentliche Instanzfelder verfügen.<br /><br /> Beachten Sie, dass öffentliche schreibgeschützte Eigenschaften, öffentliche Eigenschaften oder öffentliche Feld Attribute, die mit <xref:System.Web.Script.Serialization.ScriptIgnoreAttribute>gekennzeichnet sind, und öffentliche indizierte Eigenschaften in diesen Typen ignoriert werden.|JavaScript-Objekt, das die JSON-Wörterbuch Syntax verwendet. Eine spezielle Metadateneigenschaft mit dem Namen "__type" ist enthalten, um die korrekte Deserialisierung sicherzustellen. Stellen Sie sicher, dass Public instance Properties über Get-und Set-Accessoren verfügen, um eine korrekte Deserialisierung sicherzustellen.|  
|<xref:System.Guid>|Zeichen folgen Darstellung einer GUID|  
|<xref:System.Uri>|Zeichen folgen Darstellung des Rückgabewerts von <xref:System.Uri.GetComponents%2A>|  
  
   
  
## Examples  
 Im ersten Beispiel wird eine einfache Abbildung der Serialisierung und Deserialisierung von Datenobjekten veranschaulicht. Hierfür ist eine Klasse namens "Person" erforderlich, die unten dargestellt ist.  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  
  
 [!code-csharp[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]
 [!code-vb[System.Web.Script.Serialization.JavaScriptSerializer#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 Das nächste Beispiel zeigt ein komplizierteres und ausführlichere Projekt, das die <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Klasse verwendet, um den Zustand eines Objekts mithilfe der JSON-Serialisierung zu speichern und wiederherzustellen. In diesem Code wird ein benutzerdefinierter Konverter verwendet, der für die <xref:System.Web.Script.Serialization.JavaScriptConverter>-Klasse bereitgestellt wird.  
  
 [!code-aspx-csharp[System.Web.Script.Serialization#4](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#4)]
 [!code-aspx-vb[System.Web.Script.Serialization#4](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb515101(v=vs.100)">Verwenden von Webdiensten in ASP.NET AJAX</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb398995(v=vs.100)">Aufrufen von Webdiensten aus Client Skripts in ASP.NET AJAX</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />-Klasse, die über keinen Typresolver verfügt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Instanz der <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Klasse ohne Typkonflikt Löser schließt keine Typmetadateneigenschaften (mit dem Namen "__type") in der serialisierten JSON-Zeichenfolge ein. Eine Eigenschaft vom Typ Metadata wird von den Methoden <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> und <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A> verwendet, um den entsprechenden verwalteten Typ zu bestimmen, in den die JSON-Zeichenfolge konvertiert wird. Weitere Informationen zu Typresolvern finden Sie in der <xref:System.Web.Script.Serialization.JavaScriptTypeResolver>-Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JavaScriptSerializer (System.Web.Script.Serialization.JavaScriptTypeResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Script.Serialization.JavaScriptTypeResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As JavaScriptTypeResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JavaScriptSerializer(System::Web::Script::Serialization::JavaScriptTypeResolver ^ resolver);" />
      <MemberSignature Language="F#" Value="new System.Web.Script.Serialization.JavaScriptSerializer : System.Web.Script.Serialization.JavaScriptTypeResolver -&gt; System.Web.Script.Serialization.JavaScriptSerializer" Usage="new System.Web.Script.Serialization.JavaScriptSerializer resolver" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Web.Script.Serialization.JavaScriptTypeResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">Das benutzerdefinierte Typresolverobjekt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />-Klasse, die über einen benutzerdefinierten Typresolver verfügt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Serialisieren eines Objekts verwendet die <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Klasse den `resolver`-Parameter, um den entsprechenden Wert zu bestimmen, der in die serialisierte JSON-Zeichenfolge für die Type Metadata-Eigenschaft ("__type") aufgenommen werden soll. Ebenso, wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Klasse eine JSON-Zeichenfolge deserialisiert, wird der Eigenschafts Wert des Typs Metadata in den entsprechenden verwalteten Typ aufgelöst, indem die Konflikt Löser-Instanz verwendet wird.  
  
 Sie können den `resolver`-Parameter auf `null`festlegen, was dem Aufrufen des <xref:System.Web.Script.Serialization.JavaScriptSerializer.%23ctor%2A>-Konstruktors entspricht.  
  
 Die Instanz von <xref:System.Web.Script.Serialization.JavaScriptSerializer>, die von der asynchronen Kommunikationsschicht zum Aufrufen von Webdiensten aus Client Skripts verwendet wird, verwendet einen speziellen Typresolver. Dieser Typresolver schränkt die Typen ein, die auf die in der Methoden Signatur des Webdiensts definierten Typen deserialisiert werden können, oder die Typen, auf die die <xref:System.Web.Script.Services.GenerateScriptTypeAttribute> angewendet wurden. Dieser integrierte Typresolver kann nicht Programm gesteuert geändert werden.  
  
> [!IMPORTANT]
>  Die Verwendung einer Instanz dieses Objekts, die mit einem benutzerdefinierten typanresolver initialisiert wurde, kann ein Sicherheitsrisiko darstellen. Verwenden Sie dieses Objekt nur mit vertrauenswürdigen Daten. Weitere Informationen finden Sie unter [Data Validation (Datenüberprüfung)](https://www.owasp.org/index.php/Data_Validation).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" />
        <altmember cref="T:System.Web.Script.Serialization.SimpleTypeResolver" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb515101(v=vs.100)">Verwenden von Webdiensten in ASP.NET AJAX</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType">
      <MemberSignature Language="C#" Value="public object ConvertToType (object obj, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ConvertToType(object obj, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType (obj As Object, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertToType(System::Object ^ obj, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj * Type -&gt; obj" Usage="javaScriptSerializer.ConvertToType (obj, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="obj">Das zu konvertierende Objekt.</param>
        <param name="targetType">Der Typ, in den das Objekt konvertiert werden soll.</param>
        <summary>Konvertiert das angegebene Objekt in den angegebenen Typ.</summary>
        <returns>Die serialisierte JSON-Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz einen Typ serialisiert, für den ein benutzerdefinierter Konverter registriert ist, ruft das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>-Methode auf, um das Wörterbuch mit Name-Wert-Paaren abzurufen, das in eine JSON-formatierte Zeichenfolge konvertiert wird.  
  
 Die <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>-Methode kann auch Ausnahmen auslösen, wenn das Objekt Diagramm zu komplex ist, oder wenn registrierte Instanzen von <xref:System.Web.Script.Serialization.JavaScriptConverter> eine Konverterrekursion verursacht haben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die resultierende JSON-formatierte Zeichenfolge überschreitet den Wert von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- oder - 
 <paramref name="obj" /> enthält einen Zirkelverweis. Bei einem zirkulären Verweis enthält das untergeordnete Objekt einen Verweis auf das übergeordnete Objekt und umgekehrt.</exception>
        <exception cref="T:System.ArgumentException">Die von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> definierte Rekursionsgrenze wurde überschritten.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertToType&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T ConvertToType&lt;T&gt; (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T ConvertToType&lt;T&gt;(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertToType(Of T) (obj As Object) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T ConvertToType(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.ConvertToType : obj -&gt; 'T" Usage="javaScriptSerializer.ConvertToType obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ, in den <paramref name="obj" /> konvertiert wird.</typeparam>
        <param name="obj">Das zu konvertierende Objekt.</param>
        <summary>Konvertiert das angegebene Objekt in den angegebenen Typ.</summary>
        <returns>Das Objekt, das in den Zieltyp konvertiert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>-Methode versucht, die Objektinstanz, die durch `obj` dargestellt wird, in eine Instanz des Typs `T`zu konvertieren. Während dieser Konvertierung gibt es keine Garantie dafür, dass die Objekt Verweis Gleichheit beibehalten wird. Daher können Sie nicht davon ausgehen, dass `obj` und `T` auf das gleiche Objekt verweisen.  
  
 <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A> ist für die Verwendung bestimmt, wenn Sie eine Klasse implementieren, die von <xref:System.Web.Script.Serialization.JavaScriptConverter>abgeleitet ist. Konvertercode muss in der Lage sein, einen Wert im Wörterbuch zu verwenden, den das Serialisierungsprogramm übergibt, und diesen Wert dann in eine Instanz des Typs `T`konvertieren. Anstatt den benutzerdefinierten Konvertierungs Code zum Ausführen dieser Aufgabe erneut zu implementieren, können Sie die <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>-Methode aus dem Konvertercode abrufen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType%2A>-Methode verwendet wird, um ein <xref:System.Web.UI.WebControls.ListItem> Objekt aus einem Wert im Wörterbuch abzurufen, das an den Konverter übermittelt wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Script.Serialization#5](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#5)]
 [!code-vb[System.Web.Script.Serialization#5](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="obj" /> (oder ein geschachtelter Member von <paramref name="obj" />) enthält eine "__type"-Eigenschaft, die einen benutzerdefinierten Typ angibt, jedoch kann der dem Serialisierungsprogramm zugeordnete Typresolver keinen zugehörigen verwalteten Typ finden.  
  
- oder - 
 <paramref name="obj" /> (oder ein geschachtelter Member von <paramref name="obj" />) enthält eine "__type"-Eigenschaft, die einen benutzerdefinierten Typ angibt, jedoch kann das Deserialisierungsergebnis für die entsprechende JSON-Zeichenfolge nicht dem zugehörigen Zieltyp zugewiesen werden.  
  
- oder - 
 <paramref name="obj" /> (oder ein geschachtelter Member von <paramref name="obj" />) enthält eine "__type"-Eigenschaft, die <see cref="T:System.Object" /> oder einen nicht instanziierbaren Typ angibt (z. B. einen abstrakten Typ oder eine Schnittstelle).  
  
- oder - 
Es wurde versucht, <paramref name="obj" /> in einen arrayähnlichen verwalteten Typ zu konvertieren, der als Deserialisierungsziel nicht unterstützt wird.  
  
- oder - 
Es ist nicht möglich, <paramref name="obj" /> in <paramref name="T" /> zu konvertieren.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="obj" /> ist ein Wörterbuchtyp, und es wurde ein Schlüsselwert gefunden, der nicht aus einer Zeichenfolge besteht.  
  
- oder - 
 <paramref name="obj" /> enthält Memberdefinitionen, die für den Typ <paramref name="T" /> nicht verfügbar sind.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public object Deserialize (string input, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object Deserialize(string input, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize (input As String, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Deserialize(System::String ^ input, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string * Type -&gt; obj" Usage="javaScriptSerializer.Deserialize (input, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="targetType" Type="System.Type" Index="1" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="input">Die zu deserialisierende JSON-Zeichenfolge.</param>
        <param name="targetType">Der Typ des resultierenden Objekts.</param>
        <summary>Konvertiert eine JSON-formatierte Zeichenfolge in ein Objekt des angegebenen Typs.</summary>
        <returns>Das deserialisierte Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Deserialisierungsmethode wird nicht versucht, den Stamm des Objekt Diagramms in einen bestimmten Typ umzuwandeln, wie dies bei der <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A> Methode der Fall ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die Länge von <paramref name="input" /> überschreitet den Wert von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- oder - 
Die von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> definierte Rekursionsgrenze wurde überschritten.  
  
- oder - 
 <paramref name="input" /> enthält eine unerwartete Zeichensequenz.  
  
- oder - 
 <paramref name="input" /> ist ein Wörterbuchtyp, und es wurde ein Schlüsselwert gefunden, der nicht aus einer Zeichenfolge besteht.  
  
- oder - 
 <paramref name="input" /> enthält Memberdefinitionen, die für den Zieltyp nicht verfügbar sind.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> enthält eine "__type"-Eigenschaft, die einen benutzerdefinierten Typ angibt, jedoch kann der derzeit dem Serialisierungsprogramm zugeordnete Typresolver keinen zugehörigen verwalteten Typ finden.  
  
- oder - 
 <paramref name="input" /> enthält eine "__type"-Eigenschaft, die einen benutzerdefinierten Typ angibt, jedoch kann das Deserialisierungsergebnis für die entsprechende JSON-Zeichenfolge nicht dem zugehörigen Zieltyp zugewiesen werden.  
  
- oder - 
 <paramref name="input" /> enthält eine "__type"-Eigenschaft, die <see cref="T:System.Object" /> oder einen nicht instanziierbaren Typ angibt (z. B. einen abstrakten Typ oder eine Schnittstelle).  
  
- oder - 
Es wurde versucht, ein JSON-Array in einen arrayähnlichen verwalteten Typ zu konvertieren, der als JSON-Deserialisierungsziel nicht unterstützt wird.  
  
- oder - 
Es ist nicht möglich, <paramref name="input" /> in den Zieltyp zu konvertieren.</exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Deserialize&lt;T&gt; (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Deserialize&lt;T&gt;(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Deserialize(Of T) (input As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Deserialize(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.Deserialize : string -&gt; 'T" Usage="javaScriptSerializer.Deserialize input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Der Typ des resultierenden Objekts.</typeparam>
        <param name="input">Die zu deserialisierende JSON-Zeichenfolge.</param>
        <summary>Konvertiert die angegebene JSON-Zeichenfolge in ein Objekt vom Typ <paramref name="T" />.</summary>
        <returns>Das deserialisierte Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>-Methode entspricht der ersten Verwendung der <xref:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject%2A>-Methode zum Abrufen eines Objekt Diagramms und dem anschließenden Versuch, das Ergebnis in den Typ `T`umzuwandeln.  
  
 Während der Deserialisierung wird auf den aktuellen Typresolver des Serialisierungsprogramms verwiesen, der den verwalteten Typ bestimmt, der beim wandeln von Elementen verwendet wird, die in Arrays und Wörterbuchtypen geschachtelt sind. Folglich durchläuft der Deserialisierungsprozess alle geschposteten Elemente `input`. Weitere Informationen zu Typresolvern finden Sie in der <xref:System.Web.Script.Serialization.JavaScriptTypeResolver>-Klasse.  
  
   
  
## Examples  
Das folgende Beispiel zeigt eine einfache Abbildung der Serialisierung und Deserialisierung von Datenobjekten.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Hierfür ist eine Klasse mit dem Namen "`Person`" erforderlich, die im folgenden Beispiel gezeigt wird. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Länge von <paramref name="input" /> überschreitet den Wert von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- oder - 
Die von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> definierte Rekursionsgrenze wurde überschritten.  
  
- oder - 
 <paramref name="input" /> enthält eine unerwartete Zeichensequenz.  
  
- oder - 
 <paramref name="input" /> ist ein Wörterbuchtyp, und es wurde ein Schlüsselwert gefunden, der nicht aus einer Zeichenfolge besteht.  
  
- oder - 
 <paramref name="input" /> enthält Memberdefinitionen, die für den Typ <paramref name="T" /> nicht verfügbar sind.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> enthält eine "__type"-Eigenschaft, die einen benutzerdefinierten Typ angibt, jedoch kann der dem Serialisierungsprogramm zugeordnete Typresolver keinen zugehörigen verwalteten Typ finden.  
  
- oder - 
 <paramref name="input" /> enthält eine "__type"-Eigenschaft, die einen benutzerdefinierten Typ angibt, jedoch kann das Deserialisierungsergebnis für die entsprechende JSON-Zeichenfolge nicht dem zugehörigen Zieltyp zugewiesen werden.  
  
- oder - 
 <paramref name="input" /> enthält eine "__type"-Eigenschaft, die <see cref="T:System.Object" /> oder einen nicht instanziierbaren Typ angibt (z. B. einen abstrakten Typ oder eine Schnittstelle).  
  
- oder - 
Es wurde versucht, ein JSON-Array in einen arrayähnlichen verwalteten Typ zu konvertieren, der als JSON-Deserialisierungsziel nicht unterstützt wird.  
  
- oder - 
Es ist nicht möglich, <paramref name="input" /> in <paramref name="T" /> zu konvertieren.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeObject">
      <MemberSignature Language="C#" Value="public object DeserializeObject (string input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DeserializeObject(string input) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeserializeObject (input As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DeserializeObject(System::String ^ input);" />
      <MemberSignature Language="F#" Value="member this.DeserializeObject : string -&gt; obj" Usage="javaScriptSerializer.DeserializeObject input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="input">Die zu deserialisierende JSON-Zeichenfolge.</param>
        <summary>Konvertiert die angegebene JSON-Zeichenfolge in ein Objektdiagramm.</summary>
        <returns>Das deserialisierte Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Deserialisierungsmethode wird nicht versucht, den Stamm des Objekt Diagramms wie bei der <xref:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize%2A>-Methode in einen bestimmten Typ umzuwandeln.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="input" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Die Länge von <paramref name="input" /> überschreitet den Wert von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- oder - 
Die von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> definierte Rekursionsgrenze wurde überschritten.  
  
- oder - 
 <paramref name="input" /> enthält eine unerwartete Zeichensequenz.  
  
- oder - 
 <paramref name="input" /> ist ein Wörterbuchtyp, und es wurde ein Schlüsselwert gefunden, der nicht aus einer Zeichenfolge besteht.  
  
- oder - 
 <paramref name="input" /> enthält Memberdefinitionen, die für den Zieltyp nicht verfügbar sind.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="input" /> enthält eine "__type"-Eigenschaft, die einen benutzerdefinierten Typ angibt, jedoch kann der derzeit dem Serialisierungsprogramm zugeordnete Typresolver keinen zugehörigen verwalteten Typ finden.  
  
- oder - 
 <paramref name="input" /> enthält eine "__type"-Eigenschaft, die einen benutzerdefinierten Typ angibt, jedoch kann das Deserialisierungsergebnis für die entsprechende JSON-Zeichenfolge nicht dem zugehörigen Zieltyp zugewiesen werden.  
  
- oder - 
 <paramref name="input" /> enthält eine "__type"-Eigenschaft, die <see cref="T:System.Object" /> oder einen nicht instanziierbaren Typ angibt (z. B. einen abstrakten Typ oder eine Schnittstelle).  
  
- oder - 
Es wurde versucht, ein JSON-Array in einen arrayähnlichen verwalteten Typ zu konvertieren, der als JSON-Deserialisierungsziel nicht unterstützt wird.  
  
- oder - 
Es ist nicht möglich, <paramref name="input" /> in den Zieltyp zu konvertieren.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxJsonLength">
      <MemberSignature Language="C#" Value="public int MaxJsonLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxJsonLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxJsonLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxJsonLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxJsonLength : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die maximale Länge von JSON-Zeichenfolgen ab, die von der <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" />-Klasse akzeptiert werden, oder legt diese fest.</summary>
        <value>Die maximale Länge von JSON-Zeichenfolgen. Der Standardwert ist 2097152 Zeichen. Dies entspricht 4 MB Unicode-Zeichen folgen Daten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength%2A>-Eigenschaft gilt nur, wenn Sie explizit eine Instanz der <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Klasse erstellen. Verwenden Sie das `jsonSerialization`-Element der Konfigurationsdatei, um die maximale Länge für die interne serialisierungsinstanz festzulegen, die von der asynchronen Kommunikationsschicht verwendet wird. Weitere Informationen zu den Konfigurationselementen für die Serialisierung finden Sie unter Vorgehens [Weise: Konfigurieren von ASP.NET Services in Microsoft AJAX](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf einen Wert kleiner als 1 festgelegt.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength" />
      </Docs>
    </Member>
    <Member MemberName="RecursionLimit">
      <MemberSignature Language="C#" Value="public int RecursionLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecursionLimit" />
      <MemberSignature Language="DocId" Value="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property RecursionLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RecursionLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RecursionLimit : int with get, set" Usage="System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Grenzwert für die Anzahl von Objektebenen für die Verarbeitung ab oder legt diesen fest.</summary>
        <value>Die Anzahl der Objektebenen. Der Standard ist 100.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A>-Eigenschaft bezieht sich auf die Anzahl der Ebenen in der Objekthierarchie, die <xref:System.Web.Script.Serialization.JavaScriptSerializer> in den folgenden Fällen verarbeiten wird:  
  
-   Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Klasse eine JSON-Zeichenfolge deserialisiert.  
  
-   Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Klasse während der Serialisierung ein Objekt Diagramm durchläuft.  
  
 Der Wert von <xref:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit%2A> gilt nur, wenn Sie explizit eine Instanz der <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Klasse erstellen. Verwenden Sie das `jsonSerialization`-Element der Konfigurationsdatei, um die Anzahl von Objektebenen festzulegen, die für die interne serialisierungsinstanz, die von der asynchronen Kommunikationsschicht verwendet wird, verarbeitet werden. Weitere Informationen zu den Konfigurationselementen für die Serialisierung finden Sie unter Vorgehens [Weise: Konfigurieren von ASP.NET Services in Microsoft AJAX](https://docs.microsoft.com/previous-versions/aspnet/bb763183(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die Eigenschaft wird auf einen Wert kleiner als 1 festgelegt.</exception>
        <altmember cref="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit" />
      </Docs>
    </Member>
    <Member MemberName="RegisterConverters">
      <MemberSignature Language="C#" Value="public void RegisterConverters (System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; converters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterConverters(class System.Collections.Generic.IEnumerable`1&lt;class System.Web.Script.Serialization.JavaScriptConverter&gt; converters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterConverters (converters As IEnumerable(Of JavaScriptConverter))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterConverters(System::Collections::Generic::IEnumerable&lt;System::Web::Script::Serialization::JavaScriptConverter ^&gt; ^ converters);" />
      <MemberSignature Language="F#" Value="member this.RegisterConverters : seq&lt;System.Web.Script.Serialization.JavaScriptConverter&gt; -&gt; unit" Usage="javaScriptSerializer.RegisterConverters converters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="converters" Type="System.Collections.Generic.IEnumerable&lt;System.Web.Script.Serialization.JavaScriptConverter&gt;" />
      </Parameters>
      <Docs>
        <param name="converters">Ein Array, das die zu registrierenden benutzerdefinierten Konverter enthält.</param>
        <summary>Registriert bei der Instanz von <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> einen benutzerdefinierten Konverter.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A>-Methode können Sie einen oder mehrere benutzerdefinierte Konverter bei einer <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Instanz registrieren. Wenn benutzerdefinierte Konverter registriert werden, verwendet <xref:System.Web.Script.Serialization.JavaScriptSerializer> die Konverter zum Serialisieren verwalteter Typen und zum Deserialisieren von JSON-Zeichen folgen in verwaltete Typen.  
  
 Mehrere Konverter können mit derselben <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz registriert werden, und diese Konverter können auf die Unterstützung desselben Typs hindeuten. Folglich ist der letzte Konverter, der für einen bestimmten Typ registriert wird, der, der von <xref:System.Web.Script.Serialization.JavaScriptSerializer> zum Serialisieren des Typs verwendet wird.  
  
 Weitere Informationen zu benutzerdefinierten Konvertern finden Sie in der <xref:System.Web.Script.Serialization.JavaScriptConverter>-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein benutzerdefinierter Konverter bei einer <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Instanz registriert wird. Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.Script.Serialization.JavaScriptSerializer>-Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.Script.Serialization#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/Default.aspx#1)]
 [!code-vb[System.Web.Script.Serialization#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="converters" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Serialize">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Konvertiert ein Objekt in eine JSON-Zeichenfolge.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public string Serialize (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Serialize(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Serialize (obj As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Serialize(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj -&gt; string" Usage="javaScriptSerializer.Serialize obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Das zu serialisierende Objekt.</param>
        <summary>Konvertiert ein Objekt in eine JSON-Zeichenfolge.</summary>
        <returns>Die serialisierte JSON-Zeichenfolge.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz einen Typ serialisiert, für den ein benutzerdefinierter Konverter registriert ist, ruft das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>-Methode auf, um das Wörterbuch mit Name-Wert-Paaren abzurufen, das in eine JSON-Zeichenfolge konvertiert wird.  
  
 Die <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>-Methode kann auch Ausnahmen auslösen, wenn das Objekt Diagramm zu komplex ist, oder wenn registrierte Instanzen von <xref:System.Web.Script.Serialization.JavaScriptConverter> eine Konverterrekursion verursacht haben.  
  
   
  
## Examples  
Das folgende Beispiel zeigt eine einfache Abbildung der Serialisierung und Deserialisierung von Datenobjekten.  
  
[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#1)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#1)]  

Hierfür ist eine Klasse mit dem Namen "`Person`" erforderlich, die im folgenden Beispiel gezeigt wird. 

[!code-csharp[System.Web.Script.JavaScriptSerializer](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/cs/default.aspx.cs#2)]  
[!code-vb[System.Web.Script.JavaScriptSerializer](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.script.serialization.javascriptserializer/vb/default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die resultierende JSON-Zeichenfolge überschreitet den Wert von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- oder - 
 <paramref name="obj" /> enthält einen Zirkelverweis. Bei einem zirkulären Verweis enthält das untergeordnete Objekt einen Verweis auf das übergeordnete Objekt und umgekehrt.</exception>
        <exception cref="T:System.ArgumentException">Die von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> definierte Rekursionsgrenze wurde überschritten.</exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public void Serialize (object obj, System.Text.StringBuilder output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Serialize(object obj, class System.Text.StringBuilder output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Serialize (obj As Object, output As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Serialize(System::Object ^ obj, System::Text::StringBuilder ^ output);" />
      <MemberSignature Language="F#" Value="member this.Serialize : obj * System.Text.StringBuilder -&gt; unit" Usage="javaScriptSerializer.Serialize (obj, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="output" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="obj">Das zu serialisierende Objekt.</param>
        <param name="output">Das <see cref="T:System.Text.StringBuilder" />-Objekt, das zum Schreiben der JSON-Zeichenfolge verwendet wird.</param>
        <summary>Serialisiert ein Objekt und schreibt die resultierende JSON-Zeichenfolge in das angegebene <see cref="T:System.Text.StringBuilder" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.Script.Serialization.JavaScriptSerializer> Instanz einen Typ serialisiert, für den ein benutzerdefinierter Konverter registriert ist, ruft das Serialisierungsprogramm die <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A>-Methode auf, um das Wörterbuch mit Name-Wert-Paaren abzurufen, das in eine JSON-Zeichenfolge konvertiert wird.  
  
 Die <xref:System.Web.Script.Serialization.JavaScriptSerializer.Serialize%2A>-Methode kann auch Ausnahmen auslösen, wenn das Objekt Diagramm zu komplex ist, oder wenn registrierte Instanzen von <xref:System.Web.Script.Serialization.JavaScriptConverter> eine Konverterrekursion verursacht haben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die resultierende JSON-Zeichenfolge überschreitet den Wert von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />.  
  
- oder - 
 <paramref name="obj" /> enthält einen Zirkelverweis. Bei einem zirkulären Verweis enthält das untergeordnete Objekt einen Verweis auf das übergeordnete Objekt und umgekehrt.</exception>
        <exception cref="T:System.ArgumentException">Die von <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> definierte Rekursionsgrenze wurde überschritten.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="output" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
