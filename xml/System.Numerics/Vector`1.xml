<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Vector`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f010be3bdb0eb8add39f3d12d4b064a83009da87.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f010be3bdb0eb8add39f3d12d4b064a83009da87</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The vector type.</source>
          <target state="translated">Der Vektortyp.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> can be any primitive numeric type.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>T<ept id="p1">&lt;/c&gt;</ept> kann alle primitiven numerischen Typen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Numerics.Vector`1">
          <source>Represents a single vector of a specified numeric type that is suitable for low-level optimization of parallel algorithms.</source>
          <target state="translated">Stellt einen einzelnen Vektor eines angegebenen numerischen Typs bereit, der für die Low-Level-Optimierung paralleler Algorithmen geeignet ist.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> is an immutable structure that represents a single vector of a specified numeric type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> ist eine unveränderliche Struktur, die einen einzelnen Vektor eines angegebenen numerischen Typs darstellt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The count of a <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> instance is fixed, but its upper limit is CPU-register dependent.</source>
          <target state="translated">Die Anzahl der einem <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> Instanz wurde behoben, aber die Obergrenze beträgt die CPU-Register abhängig.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>It is intended to be used as a building block for vectorizing large algorithms.</source>
          <target state="translated">Sie dient als ein grundlegender Baustein für Vektorisierung große Algorithmen verwendet werden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Numerics.Vector`1">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> structure provides support for hardware acceleration.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601&gt;</ph> Struktur bietet Unterstützung für die Hardwarebeschleunigung.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source>The numeric type that defines the type of the components in the vector.</source>
          <target state="translated">Der numerische Typ, der den Typ der Komponenten im Vektor definiert.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source>Creates a vector whose components are of a specified type.</source>
          <target state="translated">Erstellt einen Vektor, dessen Komponenten einem bestimmten Typ entsprechen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0)">
          <source><ph id="ph1">`value`</ph> can be any primitive numeric type (that is, a numeric type whose <ph id="ph2">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> property returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`value`</ph> kann alle primitiven numerischen Typen (d. h. ein numerischen Typ, dessen <ph id="ph2">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=nameWithType&gt;</ph> -Eigenschaft gibt <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source>A numeric array.</source>
          <target state="translated">Ein numerisches Array.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source>Creates a vector from a specified array.</source>
          <target state="translated">Erstellt einen Vektor aus einem angegebenen Array.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source><ph id="ph1">`values`</ph> must contain at least <ph id="ph2">&lt;xref:System.Numerics.Vector%601.Count%2A&gt;</ph> elements.</source>
          <target state="translated"><ph id="ph1">`values`</ph> muss mindestens <ph id="ph2">&lt;xref:System.Numerics.Vector%601.Count%2A&gt;</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[])">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>A numeric array.</source>
          <target state="translated">Ein numerisches Array.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The starting index position from which to create the vector.</source>
          <target state="translated">Die Indexanfangsposition, ab der der Vektor erstellt wird.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>Creates a vector from a specified array starting at a specified index position.</source>
          <target state="translated">Erstellt einen Vektor aus einem Array beginnend bei einer angegebenen Indexposition.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The array must contain at least [Vector(T) Constructor (T<ph id="ph1">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt; elements from the specified index.</source>
          <target state="translated">Das Array muss mindestens [Vector(T)-Konstruktor (T<ph id="ph1">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType &gt;-Elemente am angegebenen Index.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="values" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="values" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.#ctor(`0[],System.Int32)">
          <source>The length of <ph id="ph1">&lt;paramref name="values" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph3">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</source>
          <target state="translated">Die Länge von <ph id="ph1">&lt;paramref name="values" /&gt;</ph> minus <ph id="ph2">&lt;paramref name="index" /&gt;</ph> ist kleiner als <ph id="ph3">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The array to receive a copy of the vector values.</source>
          <target state="translated">Das Array, das eine Kopie der Vektorwerte erhalten soll.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>Copies the vector instance to a specified destination array.</source>
          <target state="translated">Kopiert die Vektorinstanz in ein angegebenes Zielarray.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The copy operation begins at index 0 of <ph id="ph1">`destination`</ph>.</source>
          <target state="translated">Der Kopiervorgang beginnt am Index 0 <ph id="ph1">`destination`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The destination array must have at least <ph id="ph1">&lt;xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt;</ph> elements.</source>
          <target state="translated">Das Zielarray benötigen mindestens <ph id="ph1">&lt;xref:System.Numerics.Vector%601.Count%2A?displayProperty=nameWithType&gt;</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[])">
          <source>The number of elements in the current vector is greater than the number of elements available in the <ph id="ph1">&lt;paramref name="destination" /&gt;</ph> array.</source>
          <target state="translated">Die Anzahl von Elementen im aktuellen Vektor ist größer als die Anzahl von Elementen, die im <ph id="ph1">&lt;paramref name="destination" /&gt;</ph>-Array verfügbar sind.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The array to receive a copy of the vector values.</source>
          <target state="translated">Das Array, das eine Kopie der Vektorwerte erhalten soll.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The starting index in <bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept> at which to begin the copy operation.</source>
          <target state="translated">Der Startindex in <bpt id="p1">&lt;c&gt;</bpt>destination<ept id="p1">&lt;/c&gt;</ept>, bei dem der Kopiervorgang beginnen soll.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>Copies the vector instance to a specified destination array starting at a specified index position.</source>
          <target state="translated">Kopiert die Vektorinstanz ab einer angegebenen Indexposition in ein angegebenes Zielarray.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The copy operation begins at index <ph id="ph1">`startIndex`</ph> of <ph id="ph2">`destination`</ph>.</source>
          <target state="translated">Der Kopiervorgang beginnt am Index <ph id="ph1">`startIndex`</ph> von <ph id="ph2">`destination`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The destination array must have at least <ph id="ph1">`startIndex`</ph> + [CopyTo Method (T<ph id="ph2">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A&gt; – 1 elements.</source>
          <target state="translated">Das Zielarray benötigen mindestens <ph id="ph1">`startIndex`</ph> + [CopyTo-Methode (T<ph id="ph2">\&lt;</ph>xref:System.Numerics.Vector%601.Count%2A &gt; – 1 Elemente.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="destination" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source>The number of elements in the current instance is greater than the number of elements available from <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> to the end of the <ph id="ph2">&lt;paramref name="destination" /&gt;</ph> array.</source>
          <target state="translated">Die Anzahl von Elementen in der aktuellen Instanz ist größer als die Anzahl von Elementen, die ab <ph id="ph1">&lt;paramref name="startIndex" /&gt;</ph> bis zum Ende des <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>-Arrays verfügbar sind.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.CopyTo(`0[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero or greater than the last index in <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als 0 (null) oder größer als der letzte Index in <ph id="ph2">&lt;paramref name="destination" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Count">
          <source>Returns the number of elements stored in the vector.</source>
          <target state="translated">Gibt die Anzahl der im Vektor gespeicherten Elemente zurück.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Count">
          <source>The number of elements stored in the vector.</source>
          <target state="translated">Die Anzahl der im Vektor gespeicherten Elemente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Count">
          <source>Access to the property getter via reflection is not supported.</source>
          <target state="translated">Zugriff auf den Eigenschaftengetter über Reflektion wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>The vector to compare with this instance.</source>
          <target state="translated">Der mit dieser Instanz zu vergleichende Vektor.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether this instance is equal to a specified vector.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Vektor ist.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and <ph id="ph2">&lt;paramref name="other" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die angegebene Instanz und <ph id="ph2">&lt;paramref name="other" /&gt;</ph> gleich sind, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Zwei Vektoren gleich sind, wenn sie vom selben Typ sind, haben die gleiche Anzahl von Werten, und jeder Wert in der aktuellen Instanz ist gleich dem entsprechenden Wert in <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>The object to compare with this instance.</source>
          <target state="translated">Das Objekt, das mit dieser Instanz verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the current instance and <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> are equal; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die angegebene Instanz und <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> gleich sind, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>The method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is null, or if <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> is a vector of a different type than the current instance.</source>
          <target state="translated">Die Methode gibt <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurück, wenn <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> null ist oder wenn <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> ein Vektor eines anderen Typs als die aktuelle Instanz ist.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.Equals(System.Object)">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in the current instance is equal to the corresponding value in <ph id="ph1">`other`</ph>.</source>
          <target state="translated">Zwei Vektoren gleich sind, wenn sie vom selben Typ sind, haben die gleiche Anzahl von Werten, und jeder Wert in der aktuellen Instanz ist gleich dem entsprechenden Wert in <ph id="ph1">`other`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">Gibt den Hashcode für diese Instanz zurück.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.GetHashCode">
          <source>The hash code.</source>
          <target state="translated">Der Hashcode.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>The index of the element to return.</source>
          <target state="translated">Der Index des zurückzugebenden Elements.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>Gets the element at a specified index.</source>
          <target state="translated">Ruft das Element bei einem angegebenen Index ab.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>The element at index <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</source>
          <target state="translated">Das Element bei Index <ph id="ph1">&lt;paramref name="index" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist kleiner als Null.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than or equal to <ph id="ph2">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ist größer gleich <ph id="ph2">&lt;see cref="P:System.Numerics.Vector`1.Count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.One">
          <source>Returns a vector containing all ones.</source>
          <target state="translated">Gibt einen Vektor zurück, der ausschließlich Einsen enthält.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.One">
          <source>A vector containing all ones.</source>
          <target state="translated">Ein Vektor, der ausschließlich Einsen enthält.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to add.</source>
          <target state="translated">Der erste zu addierende Vektor.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to add.</source>
          <target state="translated">Der zweite zu addierende Vektor.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Adds two vectors together.</source>
          <target state="translated">Addiert zwei Vektoren.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The summed vector.</source>
          <target state="translated">Der Summenvektor.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Addition%2A&gt;</ph> method defines the addition operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Addition%2A&gt;</ph> Methode definiert die Additionsoperation für <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Der erste Vektor.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Der zweite Vektor.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">Gibt einen neuen Vektor zurück, indem für jedes Element in zwei Vektoren eine bitweise <ph id="ph1">&lt;see langword="And" /&gt;</ph>-Operation durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="And" /&gt;</ph> of <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Der Vektor, der sich aus der bitweisen <ph id="ph1">&lt;see langword="And" /&gt;</ph>-Operation von <ph id="ph2">&lt;paramref name="left" /&gt;</ph> und <ph id="ph3">&lt;paramref name="right" /&gt;</ph> ergibt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseAnd%2A&gt;</ph> method defines the bitwise <ph id="ph2">`And`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseAnd%2A&gt;</ph> -Methode definiert die bitweise <ph id="ph2">`And`</ph> Vorgang für <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Der erste Vektor.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Der zweite Vektor.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">Gibt einen neuen Vektor zurück, indem für jedes Element in zwei Vektoren eine bitweise <ph id="ph1">&lt;see langword="Or" /&gt;</ph>-Operation durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="Or" /&gt;</ph> of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Der Vektor, der sich aus der bitweisen <ph id="ph1">&lt;see langword="Or" /&gt;</ph>-Operation der Elemente in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> und <ph id="ph3">&lt;paramref name="right" /&gt;</ph> ergibt.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`Or`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_BitwiseOr%2A&gt;</ph> -Methode definiert die bitweise <ph id="ph2">`Or`</ph> Vorgang für <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Der erste Vektor.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Der zweite Vektor.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Divides the first vector by the second.</source>
          <target state="translated">Dividiert den ersten Vektor durch den zweiten.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from dividing <ph id="ph1">&lt;paramref name="left" /&gt;</ph> by <ph id="ph2">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Der Vektor, der aus der Division von <ph id="ph1">&lt;paramref name="left" /&gt;</ph> durch <ph id="ph2">&lt;paramref name="right" /&gt;</ph> resultiert.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Division%2A&gt;</ph> method defines the division operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Division%2A&gt;</ph> Methode definiert die Divisionsoperation für <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to compare.</source>
          <target state="translated">Der erste zu vergleichende Vektor.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to compare.</source>
          <target state="translated">Der zweite zu vergleichende Vektor.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether each pair of elements in two specified vectors are equal.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob jedes Elementpaar in zwei angegebenen Vektoren gleich ist.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="left" /&gt;</ph> und <ph id="ph3">&lt;paramref name="right" /&gt;</ph> gleich sind, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Two vectors are equal if they are of the same type, have the same number of values, and each value in <ph id="ph1">`left`</ph> is equal to the corresponding value in <ph id="ph2">`right`</ph>.</source>
          <target state="translated">Zwei Vektoren sind gleich, wenn sie vom selben Typ sind, haben die gleiche Anzahl von Werten, und für jeden Wert in <ph id="ph1">`left`</ph> gleich den entsprechenden Wert in <ph id="ph2">`right`</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Der erste Vektor.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Der zweite Vektor.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a new vector by performing a bitwise <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> operation on each of the elements in two vectors.</source>
          <target state="translated">Gibt einen neuen Vektor zurück, indem für jedes Element in zwei Vektoren eine bitweise <ph id="ph1">&lt;see langword="XOr" /&gt;</ph>-Operation durchgeführt wird.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from the bitwise <ph id="ph1">&lt;see langword="XOr" /&gt;</ph> of the elements in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph>.</source>
          <target state="translated">Der Vektor, der sich aus der bitweisen <ph id="ph1">&lt;see langword="XOr" /&gt;</ph>-Operation der Elemente in <ph id="ph2">&lt;paramref name="left" /&gt;</ph> und <ph id="ph3">&lt;paramref name="right" /&gt;</ph> ergibt.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_ExclusiveOr%2A&gt;</ph> method defines the bitwise <ph id="ph2">`XOr`</ph> operation for <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_ExclusiveOr%2A&gt;</ph> -Methode definiert die bitweise <ph id="ph2">`XOr`</ph> Vorgang für <ph id="ph3">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The vector to reinterpret.</source>
          <target state="translated">Der Vektor, der neu interpretiert werden soll.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>Reinterprets the bits of the specified vector into a vector of type <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Interpretiert die Bits des angegebenen Vektors in einen Vektor des Typs <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> um.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The reinterpreted vector.</source>
          <target state="translated">Der neu interpretierte Vektor.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> operator defines a narrowing conversion; it requires a casting operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Explicit%2A&gt;</ph> Operator definiert eine einschränkende Konvertierung; dafür einen Typumwandlungsoperator (in c#) oder eine Konvertierungsmethode (in Visual Basic).</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector to compare.</source>
          <target state="translated">Der erste zu vergleichende Vektor.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector to compare.</source>
          <target state="translated">Der zweite zu vergleichende Vektor.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Returns a value that indicates whether any single pair of elements in the specified vectors is equal.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob jedes Elementpaar in den angegebenen Vektoren gleich ist.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if any element pairs in left and right are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn alle Elementpaare in "left" und "right" gleich sind.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if no element pairs are equal.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="false" /&gt;</ph>, wenn keine Elementpaare gleich sind.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Der erste Vektor.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Der zweite Vektor.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Multiplies two vectors together.</source>
          <target state="translated">Multipliziert zwei Vektoren miteinander.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The product vector.</source>
          <target state="translated">Der Produktvektor.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> Methode definiert, dem der Multiplikationsvorgang für <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The source vector.</source>
          <target state="translated">Der Quellvektor.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>A scalar value.</source>
          <target state="translated">Ein Skalarwert.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>Multiplies a vector by a specified scalar value.</source>
          <target state="translated">Multipliziert einen Vektor mit einem angegebenen Skalarwert.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The scaled vector.</source>
          <target state="translated">Der skalierte Vektor.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> Methode definiert, dem der Multiplikationsvorgang für <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The scalar value.</source>
          <target state="translated">Der Skalarwert.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The source vector.</source>
          <target state="translated">Der Quellvektor.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>Multiplies a vector by the given scalar.</source>
          <target state="translated">Multipliziert einen Vektor mit dem angegebenen Skalarwert.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The scaled vector.</source>
          <target state="translated">Der skalierte Vektor.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> method defines the multiplication operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Multiply%2A&gt;</ph> Methode definiert, dem der Multiplikationsvorgang für <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>The source vector.</source>
          <target state="translated">Der Quellvektor.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>Returns a new vector whose elements are obtained by taking the one's complement of a specified vector's elements.</source>
          <target state="translated">Gibt einen neuen Vektor zurück, dessen Elemente sich aus dem Einerkomplement der Elemente eines angegebenen Vektors ergeben.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})">
          <source>The one's complement vector.</source>
          <target state="translated">Der Einerkomplementvektor.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The first vector.</source>
          <target state="translated">Der erste Vektor.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The second vector.</source>
          <target state="translated">Der zweite Vektor.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>Subtracts the second vector from the first.</source>
          <target state="translated">Subtrahiert den zweiten Vektor vom ersten.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The vector that results from subtracting <ph id="ph1">&lt;paramref name="right" /&gt;</ph> from <ph id="ph2">&lt;paramref name="left" /&gt;</ph>.</source>
          <target state="translated">Der Vektor, der aus der Subtraktion von <ph id="ph1">&lt;paramref name="right" /&gt;</ph> von <ph id="ph2">&lt;paramref name="left" /&gt;</ph> resultiert.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Subtraction%2A&gt;</ph> method defines the subtraction operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_Subtraction%2A&gt;</ph> Methode definiert, dem der Subtraktionsvorgang für <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The vector to negate.</source>
          <target state="translated">Der zu negierende Vektor.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>Negates a given vector.</source>
          <target state="translated">Negiert einen angegebenen Vektor.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The negated vector.</source>
          <target state="translated">Der negierte Vektor.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_UnaryNegation%2A&gt;</ph> method defines the unary negation operation for <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> objects.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Numerics.Vector%601.op_UnaryNegation%2A&gt;</ph> Methode definiert, die unäre Negation-Operation für <ph id="ph2">&lt;xref:System.Numerics.Vector%601&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString">
          <source>Returns the string representation of this vector using default formatting.</source>
          <target state="translated">Gibt die Zeichenfolgendarstellung dieses Vektors in Standardformatierung zurück.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString">
          <source>The string representation of this vector.</source>
          <target state="translated">Die Zeichenfolgendarstellung dieses Vektors.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString">
          <source>This method returns a string in which each element of the vector is formatted using the "G" (general) format string and the formatting conventions of the current thread culture.</source>
          <target state="translated">Diese Methode gibt eine Zeichenfolge, die mithilfe der (Allgemein) Formatzeichenfolge "G" und der Formatierungskonventionen der aktuellen Threadkultur, in der jedes Element des Vektors formatiert wird.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString">
          <source>The current culture's <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">Der aktuellen Kultur <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> gefolgt von einem Leerzeichen Eigenschaft wird verwendet, um jedes Element getrennt.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>A  or  that defines the format of individual elements.</source>
          <target state="translated">Eine  oder , die das Format einzelner Elemente definiert.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>Returns the string representation of this vector using the specified format string to format individual elements.</source>
          <target state="translated">Gibt die Zeichenfolgendarstellung dieses Vektors zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>The string representation of the current instance.</source>
          <target state="translated">Die Zeichenfolgendarstellung der aktuellen Instanz.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>This method returns a string in which each element of the vector is formatted using <ph id="ph1">`format`</ph> and the current culture's formatting conventions.</source>
          <target state="translated">Diese Methode gibt eine Zeichenfolge, die in dem jedes Element des Vektors wird formatiert mit <ph id="ph1">`format`</ph> und die aktuelle Kultur des Formatierungskonventionen.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String)">
          <source>The current culture's <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">Der aktuellen Kultur <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> gefolgt von einem Leerzeichen Eigenschaft wird verwendet, um jedes Element getrennt.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>A  or  that defines the format of individual elements.</source>
          <target state="translated">Eine  oder , die das Format einzelner Elemente definiert.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>A format provider that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Formatanbieter, der kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>Returns the string representation of this vector using the specified format string to format individual elements and the specified format provider to define culture-specific formatting.</source>
          <target state="translated">Gibt die Zeichenfolgendarstellung dieses Vektors zurück und verwendet dazu die angegebene Formatierungszeichenfolge, um einzelne Elemente zu formatieren, sowie den angegebenen Formatanbieter, um kulturspezifische Formatierung zu definieren.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the current instance.</source>
          <target state="translated">Die Zeichenfolgendarstellung der aktuellen Instanz.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)">
          <source>This method returns a string in which each element of the vector is formatted using <ph id="ph1">`format`</ph> and <ph id="ph2">`formatProvider`</ph>, and the format provider's <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> property followed by a space is used to separate each element.</source>
          <target state="translated">Diese Methode gibt eine Zeichenfolge, die in dem jedes Element des Vektors wird formatiert mit <ph id="ph1">`format`</ph> und <ph id="ph2">`formatProvider`</ph>, sowie den Formatanbieter <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A?displayProperty=nameWithType&gt;</ph> gefolgt von einem Leerzeichen Eigenschaft wird verwendet, um jedes Element getrennt.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Numerics.Vector`1.Zero">
          <source>Returns a vector containing all zeroes.</source>
          <target state="translated">Gibt einen Vektor zurück, der ausschließlich Nullen enthält.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Numerics.Vector`1.Zero">
          <source>A vector containing all zeroes.</source>
          <target state="translated">Ein Vektor, der ausschließlich Nullen enthält.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>