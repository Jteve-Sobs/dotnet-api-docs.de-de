<Type Name="BitOperations" FullName="System.Numerics.BitOperations">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d26e5e4166260019074fa595254402de25c31a60" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75107764" /></Metadata><TypeSignature Language="C#" Value="public static class BitOperations" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit BitOperations extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.BitOperations" />
  <TypeSignature Language="VB.NET" Value="Public Class BitOperations" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitOperations abstract sealed" />
  <TypeSignature Language="F#" Value="type BitOperations = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ba908-101">Stellt Hilfsmethoden für intrinsische Bitanpassungsoperationen bereit.</span><span class="sxs-lookup"><span data-stu-id="ba908-101">Provides utility methods for intrinsic bit-twiddling operations.</span></span> <span data-ttu-id="ba908-102">Die Methoden verwenden systeminterne Hardwarefunktionen, wenn sie auf der zugrunde liegenden Plattform verfügbar sind, ansonsten verwenden sie optimierte Softwarefallbacks.</span><span class="sxs-lookup"><span data-stu-id="ba908-102">The methods use hardware intrinsics when available on the underlying platform; otherwise, they use optimized software fallbacks.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static int LeadingZeroCount (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LeadingZeroCount(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LeadingZeroCount(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : uint32 -&gt; int" Usage="System.Numerics.BitOperations.LeadingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-103">Die Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-103">The mask.</span></span></param>
        <summary><span data-ttu-id="ba908-104">Zählt die Anzahl der führenden Nullbits in einer 32-Bit-Ganzzahlmaske ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="ba908-104">Counts the number of leading zero bits in an unsigned 32-bit integer mask.</span></span></summary>
        <returns><span data-ttu-id="ba908-105">Die Anzahl der führenden Nullbits in einer Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-105">The number of leading zero bits in a mask.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-106">Diese Methode ähnelt dem Verhalten der x86-Anweisung [lzcnt](xref:System.Runtime.Intrinsics.X86.Lzcnt).</span><span class="sxs-lookup"><span data-stu-id="ba908-106">This method is similar in behavior to the x86 instruction [LZCNT](xref:System.Runtime.Intrinsics.X86.Lzcnt).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeadingZeroCount">
      <MemberSignature Language="C#" Value="public static int LeadingZeroCount (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LeadingZeroCount(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.LeadingZeroCount(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LeadingZeroCount (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LeadingZeroCount(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member LeadingZeroCount : uint64 -&gt; int" Usage="System.Numerics.BitOperations.LeadingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-107">Die Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-107">The mask.</span></span></param>
        <summary><span data-ttu-id="ba908-108">Zählt die Anzahl der führenden Nullbits in einer 64-Bit-Ganzzahlmaske ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="ba908-108">Counts the number of leading zero bits in an unsigned 64-bit integer mask.</span></span></summary>
        <returns><span data-ttu-id="ba908-109">Die Anzahl der führenden Nullbits in einer Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-109">The number of leading zero bits in a mask.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-110">Diese Methode ähnelt dem Verhalten der x86-Anweisung [lzcnt](xref:System.Runtime.Intrinsics.X86.Lzcnt).</span><span class="sxs-lookup"><span data-stu-id="ba908-110">This method is similar in behavior to the x86 instruction [LZCNT](xref:System.Runtime.Intrinsics.X86.Lzcnt).</span></span>
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static int Log2 (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Log2(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.Log2(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Log2(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member Log2 : uint32 -&gt; int" Usage="System.Numerics.BitOperations.Log2 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-111">Die Zahl, aus der der Logarithmus erhalten wird.</span><span class="sxs-lookup"><span data-stu-id="ba908-111">The number from which to obtain the logarithm.</span></span></param>
        <summary><span data-ttu-id="ba908-112">Gibt den Logarithmus einer ganzen Zahl (Floor) des angegebenen Werts zur Basis 2 zurück.</span><span class="sxs-lookup"><span data-stu-id="ba908-112">Returns the integer (floor) log of the specified value, base 2.</span></span></summary>
        <returns><span data-ttu-id="ba908-113">Der Logarithmus des angegebenen Werts zur Basis 2.</span><span class="sxs-lookup"><span data-stu-id="ba908-113">The log of the specified value, base 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-114">Beachten Sie, dass der Eingabe Wert 0 gemäß der Konvention 0 zurückgibt, da Log (0) nicht definiert ist.</span><span class="sxs-lookup"><span data-stu-id="ba908-114">Note that by convention, input value 0 returns 0 since Log(0) is undefined.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Log2">
      <MemberSignature Language="C#" Value="public static int Log2 (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Log2(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.Log2(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log2 (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Log2(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member Log2 : uint64 -&gt; int" Usage="System.Numerics.BitOperations.Log2 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-115">Die Zahl, aus der der Logarithmus erhalten wird.</span><span class="sxs-lookup"><span data-stu-id="ba908-115">The number from which to obtain the logarithm.</span></span></param>
        <summary><span data-ttu-id="ba908-116">Gibt den Logarithmus einer ganzen Zahl (Floor) des angegebenen Werts zur Basis 2 zurück.</span><span class="sxs-lookup"><span data-stu-id="ba908-116">Returns the integer (floor) log of the specified value, base 2.</span></span></summary>
        <returns><span data-ttu-id="ba908-117">Der Logarithmus des angegebenen Werts zur Basis 2.</span><span class="sxs-lookup"><span data-stu-id="ba908-117">The log of the specified value, base 2.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-118">Beachten Sie, dass der Eingabe Wert 0 gemäß der Konvention 0 zurückgibt, da Log (0) nicht definiert ist.</span><span class="sxs-lookup"><span data-stu-id="ba908-118">Note that by convention, input value 0 returns 0 since Log(0) is undefined.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static int PopCount (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 PopCount(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.PopCount(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int PopCount(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member PopCount : uint32 -&gt; int" Usage="System.Numerics.BitOperations.PopCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-119">Die Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-119">The mask.</span></span></param>
        <summary><span data-ttu-id="ba908-120">Gibt die Auffüllungsanzahl (Anzahl festgelegter Bits) einer Maske zurück.</span><span class="sxs-lookup"><span data-stu-id="ba908-120">Returns the population count (number of bits set) of a mask.</span></span></summary>
        <returns><span data-ttu-id="ba908-121">Die Auffüllungsanzahl einer Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-121">The population count of a mask.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-122">Diese Methode ähnelt dem Verhalten der x86-Anweisung [popcnt](xref:System.Runtime.Intrinsics.X86.Popcnt).</span><span class="sxs-lookup"><span data-stu-id="ba908-122">This method is similar in behavior to the x86 instruction [POPCNT](xref:System.Runtime.Intrinsics.X86.Popcnt).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PopCount">
      <MemberSignature Language="C#" Value="public static int PopCount (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 PopCount(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.PopCount(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PopCount (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int PopCount(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member PopCount : uint64 -&gt; int" Usage="System.Numerics.BitOperations.PopCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-123">Die Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-123">The mask.</span></span></param>
        <summary><span data-ttu-id="ba908-124">Gibt die Auffüllungsanzahl (Anzahl festgelegter Bits) einer 64-Bit-Ganzzahlmaske ohne Vorzeichen zurück.</span><span class="sxs-lookup"><span data-stu-id="ba908-124">Returns the population count (number of bits set) of an unsigned 64-bit integer mask.</span></span></summary>
        <returns><span data-ttu-id="ba908-125">Die Auffüllungsanzahl der Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-125">The population count of the mask.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-126">Diese Methode ähnelt dem Verhalten der x86-Anweisung [popcnt](xref:System.Runtime.Intrinsics.X86.Popcnt).</span><span class="sxs-lookup"><span data-stu-id="ba908-126">This method is similar in behavior to the x86 instruction [POPCNT](xref:System.Runtime.Intrinsics.X86.Popcnt).</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateLeft">
      <MemberSignature Language="C#" Value="public static uint RotateLeft (uint value, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 RotateLeft(unsigned int32 value, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.RotateLeft(System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RotateLeft (value As UInteger, offset As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 RotateLeft(System::UInt32 value, int offset);" />
      <MemberSignature Language="F#" Value="static member RotateLeft : uint32 * int -&gt; uint32" Usage="System.Numerics.BitOperations.RotateLeft (value, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-127">Der zu drehende Wert.</span><span class="sxs-lookup"><span data-stu-id="ba908-127">The value to rotate.</span></span></param>
        <param name="offset"><span data-ttu-id="ba908-128">Die Anzahl der Bits, um die gedreht wird.</span><span class="sxs-lookup"><span data-stu-id="ba908-128">The number of bits to rotate by.</span></span> <span data-ttu-id="ba908-129">Jeder Wert außerhalb des Bereichs [0..31] wird als kongruenter Mod 32 behandelt.</span><span class="sxs-lookup"><span data-stu-id="ba908-129">Any value outside the range [0..31] is treated as congruent mod 32.</span></span></param>
        <summary><span data-ttu-id="ba908-130">Dreht den angegebenen Wert um die angegebene Anzahl von Bits nach links.</span><span class="sxs-lookup"><span data-stu-id="ba908-130">Rotates the specified value left by the specified number of bits.</span></span></summary>
        <returns><span data-ttu-id="ba908-131">Der gedrehte Wert.</span><span class="sxs-lookup"><span data-stu-id="ba908-131">The rotated value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-132">Diese Methode ähnelt dem Verhalten der x86-Anweisungs-Rol.</span><span class="sxs-lookup"><span data-stu-id="ba908-132">This method is similar in behavior to the x86 instruction ROL.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateLeft">
      <MemberSignature Language="C#" Value="public static ulong RotateLeft (ulong value, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 RotateLeft(unsigned int64 value, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.RotateLeft(System.UInt64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RotateLeft (value As ULong, offset As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 RotateLeft(System::UInt64 value, int offset);" />
      <MemberSignature Language="F#" Value="static member RotateLeft : uint64 * int -&gt; uint64" Usage="System.Numerics.BitOperations.RotateLeft (value, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-133">Der zu drehende Wert.</span><span class="sxs-lookup"><span data-stu-id="ba908-133">The value to rotate.</span></span></param>
        <param name="offset"><span data-ttu-id="ba908-134">Die Anzahl der Bits, um die gedreht wird.</span><span class="sxs-lookup"><span data-stu-id="ba908-134">The number of bits to rotate by.</span></span> <span data-ttu-id="ba908-135">Jeder Wert außerhalb des Bereichs [0..63] wird als kongruenter Mod 64 behandelt.</span><span class="sxs-lookup"><span data-stu-id="ba908-135">Any value outside the range [0..63] is treated as congruent mod 64.</span></span></param>
        <summary><span data-ttu-id="ba908-136">Dreht den angegebenen Wert um die angegebene Anzahl von Bits nach links.</span><span class="sxs-lookup"><span data-stu-id="ba908-136">Rotates the specified value left by the specified number of bits.</span></span></summary>
        <returns><span data-ttu-id="ba908-137">Der gedrehte Wert.</span><span class="sxs-lookup"><span data-stu-id="ba908-137">The rotated value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-138">Diese Methode ähnelt dem Verhalten der x86-Anweisungs-Rol.</span><span class="sxs-lookup"><span data-stu-id="ba908-138">This method is similar in behavior to the x86 instruction ROL.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateRight">
      <MemberSignature Language="C#" Value="public static uint RotateRight (uint value, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 RotateRight(unsigned int32 value, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.RotateRight(System.UInt32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RotateRight (value As UInteger, offset As Integer) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 RotateRight(System::UInt32 value, int offset);" />
      <MemberSignature Language="F#" Value="static member RotateRight : uint32 * int -&gt; uint32" Usage="System.Numerics.BitOperations.RotateRight (value, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-139">Der zu drehende Wert.</span><span class="sxs-lookup"><span data-stu-id="ba908-139">The value to rotate.</span></span></param>
        <param name="offset"><span data-ttu-id="ba908-140">Die Anzahl der Bits, um die gedreht wird.</span><span class="sxs-lookup"><span data-stu-id="ba908-140">The number of bits to rotate by.</span></span> <span data-ttu-id="ba908-141">Jeder Wert außerhalb des Bereichs [0..31] wird als kongruenter Mod 32 behandelt.</span><span class="sxs-lookup"><span data-stu-id="ba908-141">Any value outside the range [0..31] is treated as congruent mod 32.</span></span></param>
        <summary><span data-ttu-id="ba908-142">Dreht den angegebenen Wert um die angegebene Anzahl von Bits nach rechts.</span><span class="sxs-lookup"><span data-stu-id="ba908-142">Rotates the specified value right by the specified number of bits.</span></span></summary>
        <returns><span data-ttu-id="ba908-143">Der gedrehte Wert.</span><span class="sxs-lookup"><span data-stu-id="ba908-143">The rotated value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-144">Diese Methode ähnelt dem Verhalten der x86-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="ba908-144">This method is similar in behavior to the x86 instruction ROR.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotateRight">
      <MemberSignature Language="C#" Value="public static ulong RotateRight (ulong value, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 RotateRight(unsigned int64 value, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.RotateRight(System.UInt64,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RotateRight (value As ULong, offset As Integer) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 RotateRight(System::UInt64 value, int offset);" />
      <MemberSignature Language="F#" Value="static member RotateRight : uint64 * int -&gt; uint64" Usage="System.Numerics.BitOperations.RotateRight (value, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-145">Der zu drehende Wert.</span><span class="sxs-lookup"><span data-stu-id="ba908-145">The value to rotate.</span></span></param>
        <param name="offset"><span data-ttu-id="ba908-146">Die Anzahl der Bits, um die gedreht wird.</span><span class="sxs-lookup"><span data-stu-id="ba908-146">The number of bits to rotate by.</span></span> <span data-ttu-id="ba908-147">Jeder Wert außerhalb des Bereichs [0..63] wird als kongruenter Mod 64 behandelt.</span><span class="sxs-lookup"><span data-stu-id="ba908-147">Any value outside the range [0..63] is treated as congruent mod 64.</span></span></param>
        <summary><span data-ttu-id="ba908-148">Dreht den angegebenen Wert um die angegebene Anzahl von Bits nach rechts.</span><span class="sxs-lookup"><span data-stu-id="ba908-148">Rotates the specified value right by the specified number of bits.</span></span></summary>
        <returns><span data-ttu-id="ba908-149">Der gedrehte Wert.</span><span class="sxs-lookup"><span data-stu-id="ba908-149">The rotated value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-150">Diese Methode ähnelt dem Verhalten der x86-Anweisung.</span><span class="sxs-lookup"><span data-stu-id="ba908-150">This method is similar in behavior to the x86 instruction ROR.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingZeroCount">
      <MemberSignature Language="C#" Value="public static int TrailingZeroCount (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TrailingZeroCount(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrailingZeroCount (value As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TrailingZeroCount(int value);" />
      <MemberSignature Language="F#" Value="static member TrailingZeroCount : int -&gt; int" Usage="System.Numerics.BitOperations.TrailingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-151">Die Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-151">The mask.</span></span></param>
        <summary><span data-ttu-id="ba908-152">Zählt die Anzahl der nachstehenden Nullbits in einer 32-Bit-Ganzzahlmaske.</span><span class="sxs-lookup"><span data-stu-id="ba908-152">Counts the number of trailing zero bits in an 32-bit integer value mask.</span></span></summary>
        <returns><span data-ttu-id="ba908-153">Die Anzahl der nachstehenden Nullbits im ganzzahligen Wert.</span><span class="sxs-lookup"><span data-stu-id="ba908-153">The number of trailing zero bits in the integer value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-154">Diese Methode ähnelt dem Verhalten der x86-Anweisung "tzcnt".</span><span class="sxs-lookup"><span data-stu-id="ba908-154">This method is similar in behavior to the x86 instruction TZCNT.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingZeroCount">
      <MemberSignature Language="C#" Value="public static int TrailingZeroCount (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TrailingZeroCount(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.TrailingZeroCount(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrailingZeroCount (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TrailingZeroCount(long value);" />
      <MemberSignature Language="F#" Value="static member TrailingZeroCount : int64 -&gt; int" Usage="System.Numerics.BitOperations.TrailingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-155">Die Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-155">The mask.</span></span></param>
        <summary><span data-ttu-id="ba908-156">Zählt die Anzahl der nachstehenden Nullbits in einer 64-Bit-Ganzzahlmaske.</span><span class="sxs-lookup"><span data-stu-id="ba908-156">Counts the number of trailing zero bits in a 64-bit integer value mask.</span></span></summary>
        <returns><span data-ttu-id="ba908-157">Die Anzahl der nachstehenden Nullbits in der Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-157">The number of trailing zero bits in the mask.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-158">Diese Methode ähnelt dem Verhalten der x86-Anweisung "tzcnt".</span><span class="sxs-lookup"><span data-stu-id="ba908-158">This method is similar in behavior to the x86 instruction TZCNT.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingZeroCount">
      <MemberSignature Language="C#" Value="public static int TrailingZeroCount (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TrailingZeroCount(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrailingZeroCount (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TrailingZeroCount(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member TrailingZeroCount : uint32 -&gt; int" Usage="System.Numerics.BitOperations.TrailingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-159">Die Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-159">The mask.</span></span></param>
        <summary><span data-ttu-id="ba908-160">Zählt die Anzahl der nachstehenden Nullbits in einer 32-Bit-Ganzzahlmaske ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="ba908-160">Counts the number of trailing zero bits in an unsigned 32-bit integer value mask.</span></span></summary>
        <returns><span data-ttu-id="ba908-161">Die Anzahl der nachstehenden Nullbits in der Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-161">The number of trailing zero bits in the mask.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-162">Diese Methode ähnelt dem Verhalten der x86-Anweisung "tzcnt".</span><span class="sxs-lookup"><span data-stu-id="ba908-162">This method is similar in behavior to the x86 instruction TZCNT.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrailingZeroCount">
      <MemberSignature Language="C#" Value="public static int TrailingZeroCount (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 TrailingZeroCount(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BitOperations.TrailingZeroCount(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrailingZeroCount (value As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int TrailingZeroCount(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member TrailingZeroCount : uint64 -&gt; int" Usage="System.Numerics.BitOperations.TrailingZeroCount value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ba908-163">Die Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-163">The mask.</span></span></param>
        <summary><span data-ttu-id="ba908-164">Zählt die Anzahl der nachstehenden Nullbits in einer 64-Bit-Ganzzahlmaske ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="ba908-164">Count the number of trailing zero bits in an unsigned 64-bit integer value mask.</span></span></summary>
        <returns><span data-ttu-id="ba908-165">Die Anzahl der nachstehenden Nullbits in der Maske.</span><span class="sxs-lookup"><span data-stu-id="ba908-165">The number of trailing zero bits in the mask.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

### Remarks

<span data-ttu-id="ba908-166">Dieses meethod ähnelt dem Verhalten der x86-Anweisung "tzcnt".</span><span class="sxs-lookup"><span data-stu-id="ba908-166">This meethod is similar in behavior to the x86 instruction TZCNT.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
