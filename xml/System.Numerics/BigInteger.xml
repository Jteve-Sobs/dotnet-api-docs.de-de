<Type Name="BigInteger" FullName="System.Numerics.BigInteger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="efd418e89cc117ce9591fb47a62b60bea717ad41" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36549254" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct BigInteger : IComparable, IComparable&lt;System.Numerics.BigInteger&gt;, IEquatable&lt;System.Numerics.BigInteger&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit BigInteger extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IEquatable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.BigInteger" />
  <TypeSignature Language="VB.NET" Value="Public Structure BigInteger&#xA;Implements IComparable, IComparable(Of BigInteger), IEquatable(Of BigInteger), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class BigInteger : IComparable, IComparable&lt;System::Numerics::BigInteger&gt;, IEquatable&lt;System::Numerics::BigInteger&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type BigInteger = struct&#xA;    interface IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Numerics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Numerics</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="1f479-101">Stellt eine beliebig große ganze Zahl mit Vorzeichen dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f479-101">Represents an arbitrarily large signed integer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-102">Die <xref:System.Numerics.BigInteger> Typ ist ein unveränderlicher Typ, der eine beliebig große ganze Zahl darstellt, dessen Wert theoretisch keine oberen und unteren Grenzen hat.</span><span class="sxs-lookup"><span data-stu-id="1f479-102">The <xref:System.Numerics.BigInteger> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</span></span> <span data-ttu-id="1f479-103">Die Mitglieder der <xref:System.Numerics.BigInteger> -Typs ähneln im Wesentlichen denen der anderen ganzzahligen Typen (die <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, und <xref:System.UInt64> Typen).</span><span class="sxs-lookup"><span data-stu-id="1f479-103">The members of the <xref:System.Numerics.BigInteger> type closely parallel those of other integral types (the <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> types).</span></span> <span data-ttu-id="1f479-104">Dieser Typ unterscheidet sich von der anderen ganzzahligen Typen in der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], wofür einen Bereich von ihren `MinValue` und `MaxValue` Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="1f479-104">This type differs from the other integral types in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], which have a range indicated by their `MinValue` and `MaxValue` properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f479-105">Da die <xref:System.Numerics.BigInteger> Typ ist unveränderlich (finden Sie unter [Veränderlichkeit und BigInteger-Struktur](#mutability)) und da er keine oberen und unteren Grenzen hat ein <xref:System.OutOfMemoryException> ausgelöst werden kann, für jeden Vorgang, der bewirkt, dass ein <xref:System.Numerics.BigInteger> Wert zu vergrößern. große.</span><span class="sxs-lookup"><span data-stu-id="1f479-105">Because the <xref:System.Numerics.BigInteger> type is immutable (see [Mutability and the BigInteger Structure](#mutability)) and because it has no upper or lower bounds, an <xref:System.OutOfMemoryException> can be thrown for any operation that causes a <xref:System.Numerics.BigInteger> value to grow too large.</span></span>  
  
## <a name="instantiating-a-biginteger-object"></a><span data-ttu-id="1f479-106">Instanziieren eines BigInteger-Objekts</span><span class="sxs-lookup"><span data-stu-id="1f479-106">Instantiating a BigInteger Object</span></span>  
 <span data-ttu-id="1f479-107">Instanziieren Sie ein <xref:System.Numerics.BigInteger> Objekt auf verschiedene Weise:</span><span class="sxs-lookup"><span data-stu-id="1f479-107">You can instantiate a <xref:System.Numerics.BigInteger> object in several ways:</span></span>  
  
-   <span data-ttu-id="1f479-108">Sie können die `new` Schlüsselwort, und geben Sie einen beliebigen ganzzahligen oder Gleitkomma-Wert als Parameter an die <xref:System.Numerics.BigInteger> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1f479-108">You can use the `new` keyword and provide any integral or floating-point value as a parameter to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="1f479-109">(Gleitkommawerte werden abgeschnitten, bevor sie zugewiesen sind die <xref:System.Numerics.BigInteger>.) Das folgende Beispiel zeigt, wie die `new` Schlüsselwort instanziieren <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-109">(Floating-point values are truncated before they are assigned to the <xref:System.Numerics.BigInteger>.) The following example illustrates how to use the `new` keyword to instantiate <xref:System.Numerics.BigInteger> values.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#1)]
     [!code-vb[System.Numerics.BigInteger.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#1)]  
  
-   <span data-ttu-id="1f479-110">Sie können Deklarieren einer <xref:System.Numerics.BigInteger> Variable und weisen Sie ein Wert an, wie Sie würden alle numerischen Typen, solange dieser Wert einen ganzzahligen Typ ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-110">You can declare a <xref:System.Numerics.BigInteger> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</span></span> <span data-ttu-id="1f479-111">Im folgenden Beispiel wird die Zuordnung zum Erstellen einer <xref:System.Numerics.BigInteger> Wert aus einer <xref:System.Int64>.</span><span class="sxs-lookup"><span data-stu-id="1f479-111">The following example uses assignment to create a <xref:System.Numerics.BigInteger> value from an <xref:System.Int64>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#2)]
     [!code-vb[System.Numerics.BigInteger.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#2)]  
  
-   <span data-ttu-id="1f479-112">Sie können einen Wert decimal "oder" Gleitkomma Zuweisen einer <xref:System.Numerics.BigInteger> Objekt, wenn Sie den Wert wandelt, oder konvertieren Sie ihn zuerst.</span><span class="sxs-lookup"><span data-stu-id="1f479-112">You can assign a decimal or floating-point value to a <xref:System.Numerics.BigInteger> object if you cast the value or convert it first.</span></span> <span data-ttu-id="1f479-113">Im folgenden Beispiel explizit umgewandelt (in c#) oder (in Visual Basic) konvertiert eine <xref:System.Double> und ein <xref:System.Decimal> -Wert in einen <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-113">The following example explicitly casts (in C#) or converts (in Visual Basic) a <xref:System.Double> and a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#3)]
     [!code-vb[System.Numerics.BigInteger.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#3)]  
  
 <span data-ttu-id="1f479-114">Diese Methoden ermöglichen es Ihnen, beim Instanziieren einer <xref:System.Numerics.BigInteger> Objekt, dessen Wert im Bereich eines der vorhandenen numerischen nur Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-114">These methods enable you to instantiate a <xref:System.Numerics.BigInteger> object whose value is in the range of one of the existing numeric types only.</span></span> <span data-ttu-id="1f479-115">Instanziieren Sie ein <xref:System.Numerics.BigInteger> Objekt, dessen Wert den Bereich der vorhandenen numerischen Typen in einer von drei Methoden überschreiten kann:</span><span class="sxs-lookup"><span data-stu-id="1f479-115">You can instantiate a <xref:System.Numerics.BigInteger> object whose value can exceed the range of the existing numeric types in one of three ways:</span></span>  
  
-   <span data-ttu-id="1f479-116">Können Sie die `new` Schlüsselwort, und geben Sie ein Bytearray von beliebiger Größe für den <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1f479-116">You can use the `new` keyword and provide a byte array of any size to the <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="1f479-117">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="1f479-117">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#4)]
     [!code-vb[System.Numerics.BigInteger.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#4)]  
  
-   <span data-ttu-id="1f479-118">Sie erreichen die <xref:System.Numerics.BigInteger.Parse%2A> oder <xref:System.Numerics.BigInteger.TryParse%2A> Methoden konvertiert die Zeichenfolgendarstellung einer Zahl in eine <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-118">You can call the <xref:System.Numerics.BigInteger.Parse%2A> or <xref:System.Numerics.BigInteger.TryParse%2A> methods to convert the string representation of a number to a <xref:System.Numerics.BigInteger>.</span></span> <span data-ttu-id="1f479-119">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="1f479-119">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#5)]
     [!code-vb[System.Numerics.BigInteger.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#5)]  
  
-   <span data-ttu-id="1f479-120">Sie erreichen eine `static` (`Shared` in Visual Basic) <xref:System.Numerics.BigInteger> Methode, die einen Vorgang für einen numerischen Ausdruck ausführt, und gibt einen berechneten <xref:System.Numerics.BigInteger> Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="1f479-120">You can call a `static` (`Shared` in Visual Basic) <xref:System.Numerics.BigInteger> method that performs some operation on a numeric expression and returns a calculated <xref:System.Numerics.BigInteger> result.</span></span> <span data-ttu-id="1f479-121">Im folgende Beispiel wird dies durch cuberstellung <xref:System.UInt64.MaxValue?displayProperty=nameWithType> und erneute Zuordnen des Ergebnisses an eine <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-121">The following example does this by cubing <xref:System.UInt64.MaxValue?displayProperty=nameWithType> and assigning the result to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#6)]
     [!code-vb[System.Numerics.BigInteger.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#6)]  
  
 <span data-ttu-id="1f479-122">Der nicht initialisierte Wert, der eine <xref:System.Numerics.BigInteger> ist <xref:System.Numerics.BigInteger.Zero%2A>.</span><span class="sxs-lookup"><span data-stu-id="1f479-122">The uninitialized value of a <xref:System.Numerics.BigInteger> is <xref:System.Numerics.BigInteger.Zero%2A>.</span></span>  
  
## <a name="performing-operations-on-biginteger-values"></a><span data-ttu-id="1f479-123">Ausführen von Vorgängen für BigInteger-Werte</span><span class="sxs-lookup"><span data-stu-id="1f479-123">Performing Operations on BigInteger Values</span></span>  
 <span data-ttu-id="1f479-124">Sie können eine <xref:System.Numerics.BigInteger> Instanz wie alle anderen ganzzahligen Typs verwenden.</span><span class="sxs-lookup"><span data-stu-id="1f479-124">You can use a <xref:System.Numerics.BigInteger> instance as you would use any other integral type.</span></span> <span data-ttu-id="1f479-125"><xref:System.Numerics.BigInteger> Überladungen die standardmäßigen numerischen Operatoren, damit Sie grundlegende mathematische Operationen wie Addition, Subtraktion, Division, Multiplikation, Subtraktion, Negation und unäre Negation ausführen können.</span><span class="sxs-lookup"><span data-stu-id="1f479-125"><xref:System.Numerics.BigInteger> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="1f479-126">Sie können auch die standardmäßigen numerischen Operatoren Vergleichen zweier <xref:System.Numerics.BigInteger> Werte miteinander.</span><span class="sxs-lookup"><span data-stu-id="1f479-126">You can also use the standard numeric operators to compare two <xref:System.Numerics.BigInteger> values with each other.</span></span> <span data-ttu-id="1f479-127">Wie die anderen ganzzahligen Typen <xref:System.Numerics.BigInteger> unterstützt auch das bitweise `And`, `Or`, `XOr`, linke UMSCHALTTASTE und right Shift-Operatoren.</span><span class="sxs-lookup"><span data-stu-id="1f479-127">Like the other integral types, <xref:System.Numerics.BigInteger> also supports the bitwise `And`, `Or`, `XOr`, left shift, and right shift operators.</span></span> <span data-ttu-id="1f479-128">Für Sprachen, die keine benutzerdefinierte Operatoren unterstützen die <xref:System.Numerics.BigInteger> Struktur bietet auch entsprechende Funktionen zur Durchführung von mathematischer Operations.</span><span class="sxs-lookup"><span data-stu-id="1f479-128">For languages that do not support custom operators, the <xref:System.Numerics.BigInteger> structure also provides equivalent methods for performing mathematical operations.</span></span> <span data-ttu-id="1f479-129">Dazu gehören <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>, und einigen weiteren Bildschirmen.</span><span class="sxs-lookup"><span data-stu-id="1f479-129">These include <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>, and several others.</span></span>  
  
 <span data-ttu-id="1f479-130">Viele Elemente der der <xref:System.Numerics.BigInteger> Struktur entsprechen direkt Membern der anderen ganzzahligen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-130">Many members of the <xref:System.Numerics.BigInteger> structure correspond directly to members of the other integral types.</span></span> <span data-ttu-id="1f479-131">Darüber hinaus <xref:System.Numerics.BigInteger> fügt z. B. die folgenden Elemente:</span><span class="sxs-lookup"><span data-stu-id="1f479-131">In addition, <xref:System.Numerics.BigInteger> adds members such as the following:</span></span>  
  
-   <span data-ttu-id="1f479-132"><xref:System.Numerics.BigInteger.Sign%2A>, einen Wert, der das Vorzeichen des gibt an, womit eine <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-132"><xref:System.Numerics.BigInteger.Sign%2A>, which returns a value that indicates the sign of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="1f479-133"><xref:System.Numerics.BigInteger.Abs%2A>, womit der Absolute Wert des einem <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-133"><xref:System.Numerics.BigInteger.Abs%2A>, which returns the absolute value of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="1f479-134"><xref:System.Numerics.BigInteger.DivRem%2A>, die den Quotienten und den Rest einer Division zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="1f479-134"><xref:System.Numerics.BigInteger.DivRem%2A>, which returns both the quotient and remainder of a division operation.</span></span>  
  
-   <span data-ttu-id="1f479-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, womit den größten gemeinsamen Teiler zweier <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, which returns the greatest common divisor of two <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="1f479-136">Viele dieser zusätzlichen Member entsprechen den Elementen von der <xref:System.Math> Klasse, die die Funktionen zum Arbeiten mit den primitiven numerischen Typen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-136">Many of these additional members correspond to the members of the <xref:System.Math> class, which provides the functionality to work with the primitive numeric types.</span></span>  
  
<a name="mutability"></a>   
## <a name="mutability-and-the-biginteger-structure"></a><span data-ttu-id="1f479-137">Veränderlichkeit und BigInteger-Struktur</span><span class="sxs-lookup"><span data-stu-id="1f479-137">Mutability and the BigInteger Structure</span></span>  
 <span data-ttu-id="1f479-138">Das folgende Beispiel instanziiert einen <xref:System.Numerics.BigInteger> Objekt, und klicken Sie dann seinen Wert um eins erhöht.</span><span class="sxs-lookup"><span data-stu-id="1f479-138">The following example instantiates a <xref:System.Numerics.BigInteger> object and then increments its value by one.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#1)]  
  
 <span data-ttu-id="1f479-139">Obwohl in diesem Beispiel wird zum Ändern des Werts des vorhandenen Objekts angezeigt werden, ist dies nicht der Fall.</span><span class="sxs-lookup"><span data-stu-id="1f479-139">Although this example appears to modify the value of the existing object, this is not the case.</span></span> <span data-ttu-id="1f479-140"><xref:System.Numerics.BigInteger> -Objekte sind unveränderlich, d. h., intern, die common Language Runtime tatsächlich erstellt ein neues <xref:System.Numerics.BigInteger> Objekt, und weist ihr den Wert eins größer als der vorherige Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-140"><xref:System.Numerics.BigInteger> objects are immutable, which means that internally, the common language runtime actually creates a new <xref:System.Numerics.BigInteger> object and assigns it a value one greater than its previous value.</span></span> <span data-ttu-id="1f479-141">Dieses neue Objekt wird dann an den Aufrufer zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="1f479-141">This new object is then returned to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f479-142">Die numerischen Typen in .NET Framework sind auch unveränderlich.</span><span class="sxs-lookup"><span data-stu-id="1f479-142">The other numeric types in the .NET Framework are also immutable.</span></span> <span data-ttu-id="1f479-143">Jedoch, da die <xref:System.Numerics.BigInteger> Typ verfügt über keine oberen und unteren Grenzen, dessen Werte sehr groß und messbaren Auswirkungen auf die Leistung haben können.</span><span class="sxs-lookup"><span data-stu-id="1f479-143">However, because the <xref:System.Numerics.BigInteger> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</span></span>  
  
 <span data-ttu-id="1f479-144">Obwohl dieser Prozess an den Aufrufer transparent ist, es eine Leistungseinbußen.</span><span class="sxs-lookup"><span data-stu-id="1f479-144">Although this process is transparent to the caller, it does incur a performance penalty.</span></span> <span data-ttu-id="1f479-145">In einigen Fällen, insbesondere wenn wiederholte Vorgänge ausgeführt werden in einer Schleife sehr große <xref:System.Numerics.BigInteger> Werte, diese Leistungseinbußen kann sehr erheblich sein.</span><span class="sxs-lookup"><span data-stu-id="1f479-145">In some cases, especially when repeated operations are performed in a loop on very large <xref:System.Numerics.BigInteger> values, that performance penalty can be significant.</span></span> <span data-ttu-id="1f479-146">Z. B. im folgenden Beispiel ein Vorgang wird wiederholt bis zu eine Millionen Mal ausgeführt, und ein <xref:System.Numerics.BigInteger> Wert wird um eins erhöht, jedes Mal, wenn der Vorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-146">For example, in the following example, an operation is performed repetitively up to a million times, and a <xref:System.Numerics.BigInteger> value is incremented by one every time the operation succeeds.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#12)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#12)]  
  
 <span data-ttu-id="1f479-147">In diesem Fall können Sie die Leistung verbessern, indem ausführen alle intermediate Zuweisungen zu einer <xref:System.Int32> Variable.</span><span class="sxs-lookup"><span data-stu-id="1f479-147">In such a case, you can improve performance by performing all intermediate assignments to an <xref:System.Int32> variable.</span></span> <span data-ttu-id="1f479-148">Kann der endgültige Wert der Variable dann zugewiesen werden die <xref:System.Numerics.BigInteger> Objekt, wenn die Schleife beendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-148">The final value of the variable can then be assigned to the <xref:System.Numerics.BigInteger> object when the loop exits.</span></span> <span data-ttu-id="1f479-149">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1f479-149">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#3)]  
  
## <a name="working-with-byte-arrays-and-hexadecimal-strings"></a><span data-ttu-id="1f479-150">Arbeiten mit Bytearrays und Hexadezimalzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="1f479-150">Working with Byte Arrays and Hexadecimal Strings</span></span>  
 <span data-ttu-id="1f479-151">Konvertieren von <xref:System.Numerics.BigInteger> Werte auf Bytearrays oder Byte-Arrays zum Konvertieren von <xref:System.Numerics.BigInteger> Werte, berücksichtigen Sie die Reihenfolge der Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f479-151">If you convert <xref:System.Numerics.BigInteger> values to byte arrays, or if you convert byte arrays to <xref:System.Numerics.BigInteger> values, you must consider the order of bytes.</span></span> <span data-ttu-id="1f479-152">Die <xref:System.Numerics.BigInteger> Struktur erwartet, dass die einzelnen Bytes in einem Bytearray in little-Endian-Reihenfolge angezeigt werden (d. h. die niederwertigen Bytes des Wertes vor stehen die höherwertigen Bytes).</span><span class="sxs-lookup"><span data-stu-id="1f479-152">The <xref:System.Numerics.BigInteger> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</span></span> <span data-ttu-id="1f479-153">Sie können einen Roundtrip eine <xref:System.Numerics.BigInteger> -Wert durch Aufrufen der <xref:System.Numerics.BigInteger.ToByteArray%2A> -Methode und übergeben das resultierende Byte-array an die <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-153">You can round-trip a <xref:System.Numerics.BigInteger> value by calling the <xref:System.Numerics.BigInteger.ToByteArray%2A> method and then passing the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#1)]  
  
 <span data-ttu-id="1f479-154">Instanziiert eine <xref:System.Numerics.BigInteger> Wert aus einem Bytearray, das einen Wert eines anderen ganzzahligen Typs darstellt, können Sie den ganzzahligen Wert zu übergeben der <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> Methode, und klicken Sie dann das resultierende Bytearray, übergeben die <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1f479-154">To instantiate a <xref:System.Numerics.BigInteger> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method, and then pass the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span> <span data-ttu-id="1f479-155">Das folgende Beispiel instanziiert einen <xref:System.Numerics.BigInteger> Wert aus einem Bytearray, das darstellt ein <xref:System.Int16> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-155">The following example instantiates a <xref:System.Numerics.BigInteger> value from a byte array that represents an <xref:System.Int16> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#2)]  
  
 <span data-ttu-id="1f479-156">Die <xref:System.Numerics.BigInteger> Struktur wird davon ausgegangen, dass negative Werte gespeichert werden, mithilfe der zwei Komplement Darstellung.</span><span class="sxs-lookup"><span data-stu-id="1f479-156">The <xref:System.Numerics.BigInteger> structure assumes that negative values are stored by using two's complement representation.</span></span> <span data-ttu-id="1f479-157">Da die <xref:System.Numerics.BigInteger> Struktur stellt einen numerischen Wert ohne feste Länge der <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor immer das höchstwertige Bit des letzten Bytes im Array als Vorzeichenbit interpretiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-157">Because the <xref:System.Numerics.BigInteger> structure represents a numeric value with no fixed length, the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</span></span> <span data-ttu-id="1f479-158">Um zu verhindern, dass die <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor aus verwirrend erscheinen die beiden Komplement Darstellung eines negativen Werts durch die Zeichen und Größe Darstellung des einen positiven Wert positive Werte in der die meisten niederwertigste Bit des letzten Bytes im Bytearray wäre normalerweise sollte eine zusätzliche Byte, dessen Wert 0 ist, enthalten.</span><span class="sxs-lookup"><span data-stu-id="1f479-158">To prevent the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</span></span> <span data-ttu-id="1f479-159">Beispielsweise 0xC0 0xBD 0xF0 0xFF ist die hexadezimale Darstellung der little-Endian--1,000,000 oder 4,293,967,296.</span><span class="sxs-lookup"><span data-stu-id="1f479-159">For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</span></span> <span data-ttu-id="1f479-160">Da das höchstwertige Bit des letzten Bytes im Array auf ist, würde der Wert des Bytearrays von interpretiert werden die <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor als-1.000.000.</span><span class="sxs-lookup"><span data-stu-id="1f479-160">Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor as -1,000,000.</span></span> <span data-ttu-id="1f479-161">Beim Instanziieren einer <xref:System.Numerics.BigInteger> , dessen Wert positiv ist, wird ein Byte-Array, dessen Elemente 0xC0, 0xBD 0xF0 0xFF 0x00 muss an den Konstruktor übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="1f479-161">To instantiate a <xref:System.Numerics.BigInteger> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</span></span> <span data-ttu-id="1f479-162">Dies wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1f479-162">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#3)]  
  
 <span data-ttu-id="1f479-163">Bytearrays erstellt, indem die <xref:System.Numerics.BigInteger.ToByteArray%2A> -Methode von positive Werte enthalten, diese Byte zusätzlichen NULL-Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-163">Byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method from positive values include this extra zero-value byte.</span></span> <span data-ttu-id="1f479-164">Aus diesem Grund die <xref:System.Numerics.BigInteger> Struktur können erfolgreich in Werte, indem sie zum zuweisen, und klicken Sie dann wiederhergestellt werden diese Bytearrays, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-164">Therefore, the <xref:System.Numerics.BigInteger> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#4)]  
  
 <span data-ttu-id="1f479-165">Allerdings müssen Bytearrays dieses zusätzliche Byte mit dem Wert 0 (null) hinzugefügt werden, die dynamisch vom Entwickler erstellt werden oder durch Methoden, die ganze Zahlen ohne Vorzeichen in Bytearrays konvertieren zurückgegeben werden (z. B. <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, und <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="1f479-165">However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, and <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="1f479-166">Bei der Analyse einer hexadezimalen Zeichenfolge, die <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> und <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methoden angenommen, wenn das höchstwertige Bit des ersten Bytes in der Zeichenfolge festgelegt ist, oder wenn die erste hexadezimale Ziffer der Zeichenfolge die unteren vier Bits eines Bytewerts darstellt, der Wert ist Mithilfe der zwei Komplement-Darstellung dargestellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-166">When parsing a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> and <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</span></span> <span data-ttu-id="1f479-167">Zum Beispiel darstellen "FF01" und "F01" den Dezimalwert-255 dar.</span><span class="sxs-lookup"><span data-stu-id="1f479-167">For example, both "FF01" and "F01" represent the decimal value -255.</span></span> <span data-ttu-id="1f479-168">Um positive von negativen Werten zu unterscheiden, sollte positive Werte eine führende 0 (null) enthalten.</span><span class="sxs-lookup"><span data-stu-id="1f479-168">To differentiate positive from negative values, positive values should include a leading zero.</span></span> <span data-ttu-id="1f479-169">Die entsprechenden Überladungen der <xref:System.Numerics.BigInteger.ToString%2A> Methode, wenn sie die Formatzeichenfolge "X" übergeben werden, fügen eine führende 0 auf die zurückgegebenen hexadezimale Zeichenfolge für positive Werte zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="1f479-169">The relevant overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</span></span> <span data-ttu-id="1f479-170">Auf diese Weise für den roundtripvorgang <xref:System.Numerics.BigInteger> Werte mithilfe der <xref:System.Numerics.BigInteger.ToString%2A> und <xref:System.Numerics.BigInteger.Parse%2A> Methoden, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-170">This makes it possible to round-trip <xref:System.Numerics.BigInteger> values by using the <xref:System.Numerics.BigInteger.ToString%2A> and <xref:System.Numerics.BigInteger.Parse%2A> methods, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#5)]  
  
 <span data-ttu-id="1f479-171">Jedoch die Hexadezimalzeichenfolgen erstellt durch Aufrufen der `ToString` der anderen ganzzahligen Typen oder Überladungen der Methoden der <xref:System.Convert.ToString%2A> Methode, die implizit enthalten eine `toBase` Parameter nicht angegeben wird, die Vorzeichen des Werts oder der Quelldatentyp aus dem die hexadezimale Zeichenfolge abgeleitet wurde.</span><span class="sxs-lookup"><span data-stu-id="1f479-171">However, the hexadecimal strings created by calling the `ToString` methods of the other integral types or the overloads of the <xref:System.Convert.ToString%2A> method that include a `toBase` parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</span></span> <span data-ttu-id="1f479-172">Instanziieren erfolgreich eine <xref:System.Numerics.BigInteger> Wert von solch eine Zeichenfolge erfordert zusätzliche Logik.</span><span class="sxs-lookup"><span data-stu-id="1f479-172">Successfully instantiating a <xref:System.Numerics.BigInteger> value from such a string requires some additional logic.</span></span> <span data-ttu-id="1f479-173">Das folgende Beispiel veranschaulicht eine mögliche Implementierung.</span><span class="sxs-lookup"><span data-stu-id="1f479-173">The following example provides one possible implementation.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-174">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-174">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : byte[] -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-175">Ein Array der Bytewerte in Little-Endian-Reihenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-175">An array of byte values in little-endian order.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-176">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung der Werte in einem Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-176">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using the values in a byte array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-177">Die einzelnen Bytes in den `value` Array sollte in der little-Endian-Reihenfolge, Byte der niedrigsten zum höchsten Byte sein.</span><span class="sxs-lookup"><span data-stu-id="1f479-177">The individual bytes in the `value` array should be in little-endian order, from lowest-order byte to highest-order byte.</span></span> <span data-ttu-id="1f479-178">Der numerische Wert 1.000.000.000.000 wird beispielsweise dargestellt, wie in der folgenden Tabelle dargestellt:</span><span class="sxs-lookup"><span data-stu-id="1f479-178">For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="1f479-179">Hexadezimale Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="1f479-179">Hexadecimal string</span></span>|<span data-ttu-id="1f479-180">E8D4A51000</span><span class="sxs-lookup"><span data-stu-id="1f479-180">E8D4A51000</span></span>|  
|<span data-ttu-id="1f479-181">Byte-Array (niedrigste zuerst index)</span><span class="sxs-lookup"><span data-stu-id="1f479-181">Byte array (lowest index first)</span></span>|<span data-ttu-id="1f479-182">00 10 A5 D4 E8 00</span><span class="sxs-lookup"><span data-stu-id="1f479-182">00 10 A5 D4 E8 00</span></span>|  
  
 <span data-ttu-id="1f479-183">Die meisten Methoden, die numerische Werte in Bytearrays, z. B. konvertieren <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> und <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, Bytearrays in little-Endian-Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="1f479-183">Most methods that convert numeric values to byte arrays, such as <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> and <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, return byte arrays in little-endian order.</span></span>  
  
 <span data-ttu-id="1f479-184">Der Konstruktor erwartet positive Werte zulässig sind, in der das Bytearray, das Vorzeichen-Wert-Darstellung und negative Werte verwenden, um zwei des Komplement Darstellung verwenden.</span><span class="sxs-lookup"><span data-stu-id="1f479-184">The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</span></span> <span data-ttu-id="1f479-185">Das heißt, wenn es sich bei der das höchstwertige Byte in der höchsten bit `value` festgelegt ist, wird das resultierende <xref:System.Numerics.BigInteger> Wert ist negativ.</span><span class="sxs-lookup"><span data-stu-id="1f479-185">In other words, if the highest-order bit of the highest-order byte in `value` is set, the resulting <xref:System.Numerics.BigInteger> value is negative.</span></span> <span data-ttu-id="1f479-186">Abhängig von der Quelle des Bytearrays kann dies dazu führen, dass einen positiven Wert als einen negativen Wert fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="1f479-186">Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</span></span> <span data-ttu-id="1f479-187">Bytearrays werden i. d. r. folgendermaßen generiert:</span><span class="sxs-lookup"><span data-stu-id="1f479-187">Byte arrays are typically generated in the following ways:</span></span>  
  
-   <span data-ttu-id="1f479-188">Durch Aufrufen der <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-188">By calling the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1f479-189">Da diese Methode ein Bytearray mit dem höchsten Bit das höchstwertige Byte im Array Satz auf 0 für positive Werte zurückgibt, ist gibt es keine Chance Formatelementen einen positiven Wert als negativ.</span><span class="sxs-lookup"><span data-stu-id="1f479-189">Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</span></span> <span data-ttu-id="1f479-190">Unverändert bleiben sollen Bytearrays erstellt, indem die <xref:System.Numerics.BigInteger.ToByteArray%2A> Methode immer erfolgreich zurückkonvertiert, wenn es sich bei der Übergabe an die <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1f479-190">Unmodified byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method always successfully round-trip when they are passed to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
-   <span data-ttu-id="1f479-191">Durch Aufrufen der <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> -Methode und eine Ganzzahl mit Vorzeichen als Parameter übergeben.</span><span class="sxs-lookup"><span data-stu-id="1f479-191">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it a signed integer as a parameter.</span></span> <span data-ttu-id="1f479-192">Da Ganzzahlen mit Vorzeichen Vorzeichen-Wert-Darstellung und zwei der Komplement Darstellung zu behandeln, besteht keine Chance Formatelementen einen positiven Wert als negativ.</span><span class="sxs-lookup"><span data-stu-id="1f479-192">Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</span></span>  
  
-   <span data-ttu-id="1f479-193">Durch Aufrufen der <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> -Methode und eine Ganzzahl ohne Vorzeichen als Parameter übergeben.</span><span class="sxs-lookup"><span data-stu-id="1f479-193">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it an unsigned integer as a parameter.</span></span> <span data-ttu-id="1f479-194">Da Ganzzahlen ohne Vorzeichen, die nur durch ihre Größe dargestellt werden, können positive Werte als negative Werte fehlinterpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="1f479-194">Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</span></span> <span data-ttu-id="1f479-195">Um diese Fehlinterpretation zu verhindern, können Sie bis zum Ende des Arrays einen NULL-Byte-Wert hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="1f479-195">To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</span></span> <span data-ttu-id="1f479-196">Im Beispiel im nächsten Abschnitt veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1f479-196">The example in the next section provides an illustration.</span></span>  
  
-   <span data-ttu-id="1f479-197">Durch Erstellen eines Bytearrays entweder dynamisch oder statisch ohne unbedingt Aufrufen einer der vorherigen Methoden oder Ändern eines vorhandenen Bytearrays.</span><span class="sxs-lookup"><span data-stu-id="1f479-197">By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</span></span> <span data-ttu-id="1f479-198">Um zu verhindern, dass positive Werte als negative Werte fehlinterpretiert wird, können Sie bis zum Ende des Arrays einen NULL-Byte-Wert hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="1f479-198">To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</span></span>  
  
 <span data-ttu-id="1f479-199">Wenn `value` ist eine leere <xref:System.Byte> Array, das neue <xref:System.Numerics.BigInteger> -Objekt initialisiert wird, auf den Wert <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-199">If `value` is an empty <xref:System.Byte> array, the new <xref:System.Numerics.BigInteger> object is initialized to a value of <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1f479-200">Wenn `value` ist `null`, löst der Konstruktor ein <xref:System.ArgumentNullException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-200">If `value` is `null`, the constructor throws an <xref:System.ArgumentNullException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-201">Das folgende Beispiel instanziiert einen <xref:System.Numerics.BigInteger> Objekt aus, dessen Wert {5, 4, 3, 2, 1} einem Bytearray auf 5-Element.</span><span class="sxs-lookup"><span data-stu-id="1f479-201">The following example instantiates a <xref:System.Numerics.BigInteger> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</span></span> <span data-ttu-id="1f479-202">Es zeigt dann die <xref:System.Numerics.BigInteger> als dezimaler und hexadezimaler Ziffern in der Konsole dargestellten Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-202">It then displays the <xref:System.Numerics.BigInteger> value, represented as both decimal and hexadecimal numbers, to the console.</span></span> <span data-ttu-id="1f479-203">Ein Vergleich des Eingabearrays mit der Textausgabe macht verdeutlichen, warum diese Überladung von der <xref:System.Numerics.BigInteger> Klassenkonstruktor erstellt ein <xref:System.Numerics.BigInteger> Objekt, dessen Wert 4328719365 (oder 0 x 102030405).</span><span class="sxs-lookup"><span data-stu-id="1f479-203">A comparison of the input array with the text output makes it clear why this overload of the <xref:System.Numerics.BigInteger> class constructor creates a <xref:System.Numerics.BigInteger> object whose value is 4328719365 (or 0x102030405).</span></span> <span data-ttu-id="1f479-204">Das erste Element des Bytearrays, dessen Wert 5 ist, definiert den Wert von der niedrigsten Ordnung Byte der <xref:System.Numerics.BigInteger> -Objekt, das 0 x 05 fungiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-204">The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <xref:System.Numerics.BigInteger> object, which is 0x05.</span></span> <span data-ttu-id="1f479-205">Das zweite Element des Bytearrays, dessen Wert 4 ist, definiert den Wert, der das zweite Byte der <xref:System.Numerics.BigInteger> -Objekt, das 0 x 04 fungiert und So weiter.</span><span class="sxs-lookup"><span data-stu-id="1f479-205">The second element of the byte array, whose value is 4, defines the value of the second byte of the <xref:System.Numerics.BigInteger> object, which is 0x04, and so on.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#1)]  
  
 <span data-ttu-id="1f479-206">Im folgenden Beispiel wird eine Positive und Negative <xref:System.Numerics.BigInteger> -Wert, übergibt sie an der <xref:System.Numerics.BigInteger.ToByteArray%2A> -Methode, und klicken Sie dann die ursprüngliche wiederhergestellt <xref:System.Numerics.BigInteger> Werte aus dem resultierenden Bytearray.</span><span class="sxs-lookup"><span data-stu-id="1f479-206">The following example instantiates a positive and a negative <xref:System.Numerics.BigInteger> value, passes them to the <xref:System.Numerics.BigInteger.ToByteArray%2A> method, and then restores the original <xref:System.Numerics.BigInteger> values from the resulting byte array.</span></span> <span data-ttu-id="1f479-207">Beachten Sie, dass die beiden Werte durch identische Bytearrays dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="1f479-207">Note that the two values are represented by identical byte arrays.</span></span> <span data-ttu-id="1f479-208">Der einzige Unterschied zwischen ihnen wird in das höchstwertige Bit des letzten Elements im Bytearray.</span><span class="sxs-lookup"><span data-stu-id="1f479-208">The only difference between them is in the most significant bit of the last element in the byte array.</span></span> <span data-ttu-id="1f479-209">Dieses Bit ist festgelegt (der Wert des Bytes ist 0xFF), bei der Erstellung des Arrays von eine Negative <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-209">This bit is set (the value of the byte is 0xFF) if the array is created from a negative <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="1f479-210">Das Bit nicht festgelegt ist (der Wert des Bytes ist 0 (null)), bei der Erstellung des Arrays von einem positiven <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-210">The bit is not set (the value of the byte is zero), if the array is created from a positive <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#2)]  
  
 <span data-ttu-id="1f479-211">Das folgende Beispiel veranschaulicht, wie Sie sicherstellen, dass ein positiver Wert nicht nicht ordnungsgemäß als ein negativer Wert instanziiert wird durch Hinzufügen von ein Byte, dessen Wert auf 0 (null) bis zum Ende des Arrays ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-211">The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f479-212">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-212">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Numerics.BigInteger.ToByteArray" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : decimal -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-213">Eine Dezimalzahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-213">A decimal number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-214">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur mit einem <see cref="T:System.Decimal" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-214">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a <see cref="T:System.Decimal" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-215">Das Ergebnis des Aufrufs dieser Konstruktor ist identisch mit dem expliziten Zuweisen einer <xref:System.Decimal> -Wert in einen <xref:System.Numerics.BigInteger> Variable.</span><span class="sxs-lookup"><span data-stu-id="1f479-215">The result of calling this constructor is identical to explicitly assigning a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger> variable.</span></span>  
  
 <span data-ttu-id="1f479-216">Dieser Konstruktor aufrufen, kann zu Datenverlust führen; Jeder Bruchteil des `value` wird abgeschnitten, bei der Instanziierung einer <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-216">Calling this constructor can cause data loss; any fractional part of `value` is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-217">Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> Konstruktor zum Instanziieren einer <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-217">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="1f479-218">Definiert ein Array von <xref:System.Decimal> Werte und übergibt dann jedes einzelnen Werts der <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1f479-218">It defines an array of <xref:System.Decimal> values, and then passes each value to the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor.</span></span> <span data-ttu-id="1f479-219">Beachten Sie, dass die <xref:System.Decimal> Wert abgeschnitten und nicht gerundet wird, wenn er zugewiesen wurde die <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-219">Note that the <xref:System.Decimal> value is truncated instead of rounded when it is assigned to the <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(double value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : double -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-220">Ein Gleitkommawert mit doppelter Genauigkeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-220">A double-precision floating-point value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-221">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung eines Gleitkommawerts mit doppelter Genauigkeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-221">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a double-precision floating-point value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-222">Jeder Bruchteil der `value` Parameter wird abgeschnitten, bei der Instanziierung einer <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-222">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="1f479-223">Aufgrund des Mangels an Genauigkeit von der <xref:System.Double> -Datentyp, der Aufruf dieses Konstruktors kann dazu führen, dass Daten verloren gehen.</span><span class="sxs-lookup"><span data-stu-id="1f479-223">Because of the lack of precision of the <xref:System.Double> data type, calling this constructor can cause data loss.</span></span>  
  
 <span data-ttu-id="1f479-224">Die <xref:System.Numerics.BigInteger> -Wert, der aus der Aufruf dieses Konstruktors ist identisch mit dem Wert, der explizit zugewiesen führt eine <xref:System.Double> -Wert an ein <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-224">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Double> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-225">Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> Konstruktor zum Instanziieren einer <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-225">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="1f479-226">Es veranschaulicht auch den Verlust an Genauigkeit, die auftreten können, bei der Verwendung der <xref:System.Double> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-226">It also illustrates the loss of precision that may occur when you use the <xref:System.Double> data type.</span></span> <span data-ttu-id="1f479-227">Ein <xref:System.Double> erhält einen hohen Wert fest, der dann zugewiesen wird ein <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-227">A <xref:System.Double> is assigned a large value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="1f479-228">Die Ausgabe zeigt, dass diese Zuweisung ein Genauigkeitsverlust umfasst.</span><span class="sxs-lookup"><span data-stu-id="1f479-228">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="1f479-229">Beide Werte werden dann um eins erhöht.</span><span class="sxs-lookup"><span data-stu-id="1f479-229">Both values are then incremented by one.</span></span> <span data-ttu-id="1f479-230">Die Ausgabe zeigt, dass die <xref:System.Numerics.BigInteger> Objekt gibt den geänderten Wert wieder, während die <xref:System.Double> Objekt verweist, das nicht.</span><span class="sxs-lookup"><span data-stu-id="1f479-230">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Double> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#5)]
 [!code-vb[System.Numerics.BigInteger.ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-231">Der Wert von <paramref name="value" /> ist <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-231">The value of <paramref name="value" /> is <see cref="F:System.Double.NaN" />.</span>
          </span>
          <span data-ttu-id="1f479-232">Oder:  Der Wert von <paramref name="value" /> ist <see cref="F:System.Double.NegativeInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-232">-or-  The value of <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
          <span data-ttu-id="1f479-233">Oder:  Der Wert von <paramref name="value" /> ist <see cref="F:System.Double.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-233">-or-  The value of <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(int value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-234">Eine 32-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-234">A 32-bit signed integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-235">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung des Werts einer 32-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-235">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 32-bit signed integer value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-236">Es gibt kein Verlust der Genauigkeit, beim Instanziieren einer <xref:System.Numerics.BigInteger> Objekt die Verwendung dieses Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="1f479-236">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="1f479-237">Die <xref:System.Numerics.BigInteger> -Wert, der aus der Aufruf dieses Konstruktors ist identisch mit dem Wert, die durch das Zuweisen von entsteht eine <xref:System.Int32> -Wert an ein <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-237">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
 <span data-ttu-id="1f479-238">Die <xref:System.Numerics.BigInteger> Struktur enthält keine Konstruktoren mit einem Parameter vom Typ <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, oder <xref:System.UInt16>.</span><span class="sxs-lookup"><span data-stu-id="1f479-238">The <xref:System.Numerics.BigInteger> structure does not include constructors with a parameter of type <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, or <xref:System.UInt16>.</span></span> <span data-ttu-id="1f479-239">Allerdings die <xref:System.Int32> Typ unterstützt die implizite Konvertierung von 8-Bit- und 16-Bit-Ganzzahlen mit und ohne Vorzeichen in 32-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-239">However, the <xref:System.Int32> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</span></span> <span data-ttu-id="1f479-240">Daher wird dieser Konstruktor aufgerufen, wenn `value` ist eine der folgenden vier ganzzahligen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-240">As a result, this constructor is called if `value` is any one of these four integral types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-241">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> Konstruktor zum Instanziieren <xref:System.Numerics.BigInteger> Werte aus einem Array von 32-Bit-Ganzzahlen.</span><span class="sxs-lookup"><span data-stu-id="1f479-241">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 32-bit integers.</span></span> <span data-ttu-id="1f479-242">Darüber hinaus implizite Konvertierung, weisen Sie jeder 32-Bit-Ganzzahlwert verwendet eine <xref:System.Numerics.BigInteger> Variable.</span><span class="sxs-lookup"><span data-stu-id="1f479-242">It also uses implicit conversion to assign each 32-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="1f479-243">Es vergleicht dann die beiden Werte herstellen, die das resultierende <xref:System.Numerics.BigInteger> Werte entsprechen.</span><span class="sxs-lookup"><span data-stu-id="1f479-243">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.ctors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(long value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-244">Eine 64-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-244">A 64-bit signed integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-245">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung des Werts einer 64-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-245">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 64-bit signed integer value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-246">Es gibt kein Verlust der Genauigkeit, beim Instanziieren einer <xref:System.Numerics.BigInteger> Objekt die Verwendung dieses Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="1f479-246">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="1f479-247">Die <xref:System.Numerics.BigInteger> -Wert, der aus der Aufruf dieses Konstruktors ist identisch mit dem Wert, die durch das Zuweisen von entsteht eine <xref:System.Int64> -Wert an ein <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-247">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-248">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> Konstruktor zum Instanziieren <xref:System.Numerics.BigInteger> Werte aus einem Array von 64-Bit-Ganzzahlen.</span><span class="sxs-lookup"><span data-stu-id="1f479-248">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 64-bit integers.</span></span> <span data-ttu-id="1f479-249">Verwendet auch implizite Konvertierung jeder 64-Bit-Ganzzahlwert zum Zuweisen einer <xref:System.Numerics.BigInteger> Variable.</span><span class="sxs-lookup"><span data-stu-id="1f479-249">It also uses implicit conversion to assign each 64-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="1f479-250">Es vergleicht dann die beiden Werte herstellen, die das resultierende <xref:System.Numerics.BigInteger> Werte entsprechen.</span><span class="sxs-lookup"><span data-stu-id="1f479-250">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#7)]
 [!code-vb[System.Numerics.BigInteger.ctors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(float value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : single -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-251">Ein Gleitkommawert mit einfacher Genauigkeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-251">A single-precision floating-point value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-252">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung eines Gleitkommawerts mit einfacher Genauigkeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-252">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a single-precision floating-point value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-253">Jeder Bruchteil der `value` Parameter wird abgeschnitten, bei der Instanziierung einer <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-253">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="1f479-254">Aufgrund des Mangels an Genauigkeit von der <xref:System.Single> -Datentyp, der Aufruf dieses Konstruktors kann zu Datenverlust führen.</span><span class="sxs-lookup"><span data-stu-id="1f479-254">Because of the lack of precision of the <xref:System.Single> data type, calling this constructor can result in data loss.</span></span>  
  
 <span data-ttu-id="1f479-255">Die <xref:System.Numerics.BigInteger> -Wert, der aus der Aufruf dieses Konstruktors ist identisch mit dem Wert, der explizit zugewiesen führt eine <xref:System.Single> -Wert an ein <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-255">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Single> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-256">Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> Konstruktor zum Instanziieren einer <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-256">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="1f479-257">Es veranschaulicht auch den Verlust an Genauigkeit, die auftreten können, bei der Verwendung der <xref:System.Single> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-257">It also illustrates the loss of precision that may occur when you use the <xref:System.Single> data type.</span></span> <span data-ttu-id="1f479-258">Ein <xref:System.Single> erhält einen großen negativen Wert, der dann zugewiesen wird ein <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-258">A <xref:System.Single> is assigned a large negative value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="1f479-259">Die Ausgabe zeigt, dass diese Zuweisung ein Genauigkeitsverlust umfasst.</span><span class="sxs-lookup"><span data-stu-id="1f479-259">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="1f479-260">Beide Werte werden dann um eins erhöht.</span><span class="sxs-lookup"><span data-stu-id="1f479-260">Both values are then incremented by one.</span></span> <span data-ttu-id="1f479-261">Die Ausgabe zeigt, dass die <xref:System.Numerics.BigInteger> Objekt gibt den geänderten Wert wieder, während die <xref:System.Single> Objekt verweist, das nicht.</span><span class="sxs-lookup"><span data-stu-id="1f479-261">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Single> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#8)]
 [!code-vb[System.Numerics.BigInteger.ctors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-262">Der Wert von <paramref name="value" /> ist <see cref="F:System.Single.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-262">The value of <paramref name="value" /> is <see cref="F:System.Single.NaN" />.</span>
          </span>
          <span data-ttu-id="1f479-263">Oder:  Der Wert von <paramref name="value" /> ist <see cref="F:System.Single.NegativeInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-263">-or-  The value of <paramref name="value" /> is <see cref="F:System.Single.NegativeInfinity" />.</span>
          </span>
          <span data-ttu-id="1f479-264">Oder:  Der Wert von <paramref name="value" /> ist <see cref="F:System.Single.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-264">-or-  The value of <paramref name="value" /> is <see cref="F:System.Single.PositiveInfinity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint32 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-265">Ein 32-Bit-Ganzzahlwert ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-265">An unsigned 32-bit integer value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-266">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung des Werts einer 32-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-266">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using an unsigned 32-bit integer value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-267">Es gibt kein Verlust der Genauigkeit, beim Instanziieren einer <xref:System.Numerics.BigInteger> Verwendung dieses Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="1f479-267">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="1f479-268">Die <xref:System.Numerics.BigInteger> -Wert, der aus der Aufruf dieses Konstruktors ist identisch mit dem Wert, die durch das Zuweisen von entsteht eine <xref:System.UInt32> -Wert an ein <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-268">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-269">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> Konstruktor und zum Initialisieren einer zuweisungsanweisung <xref:System.Numerics.BigInteger> Werte aus einem Array von 32-Bit-Ganzzahlen ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-269">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> constructor and an assignment statement to initialize <xref:System.Numerics.BigInteger> values from an array of unsigned 32-bit integers.</span></span> <span data-ttu-id="1f479-270">Klicken Sie dann die zwei Werte verglichen, veranschaulicht die zwei Methoden stehen zum Initialisieren einer <xref:System.Numerics.BigInteger> Wert werden identische Ergebnisse erzielt.</span><span class="sxs-lookup"><span data-stu-id="1f479-270">It then compares the two values to demonstrate that the two methods of initializing a <xref:System.Numerics.BigInteger> value produce identical results.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#9)]
 [!code-vb[System.Numerics.BigInteger.ctors#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-271">Eine 64-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-271">An unsigned 64-bit integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-272">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur mit dem Wert einer 64-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-272">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure with an unsigned 64-bit integer value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-273">Es gibt kein Verlust der Genauigkeit, beim Instanziieren einer <xref:System.Numerics.BigInteger> Verwendung dieses Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="1f479-273">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="1f479-274">Die <xref:System.Numerics.BigInteger> -Wert, der aus der Aufruf dieses Konstruktors ist identisch mit dem Wert, die durch das Zuweisen von entsteht eine <xref:System.UInt64> -Wert an ein <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-274">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-275">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> Konstruktor zum Instanziieren einer <xref:System.Numerics.BigInteger> Objekt, dessen Wert gleich <xref:System.UInt64.MaxValue>.</span><span class="sxs-lookup"><span data-stu-id="1f479-275">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object whose value is equal to <xref:System.UInt64.MaxValue>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#10)]
 [!code-vb[System.Numerics.BigInteger.ctors#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ReadOnlySpan&lt;byte&gt; value, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ReadOnlySpan(Of Byte), Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : ReadOnlySpan&lt;byte&gt; * bool * bool -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger (value, isUnsigned, isBigEndian)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Abs (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Abs(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Abs(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-276">Eine Zahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-276">A number.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-277">Ruft den absoluten Wert eines <see cref="T:System.Numerics.BigInteger" />-Objekts ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-277">Gets the absolute value of a <see cref="T:System.Numerics.BigInteger" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-278">Der Absolutbetrag von <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-278">The absolute value of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-279">Der Absolute Wert einer Zahl ist diese Zahl ohne Vorzeichen, wie in der folgenden Tabelle gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-279">The absolute value of a number is that number without its sign, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1f479-280">`value`-Parameter</span><span class="sxs-lookup"><span data-stu-id="1f479-280">`value` parameter</span></span>|<span data-ttu-id="1f479-281">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="1f479-281">Return value</span></span>|  
|-----------------------|------------------|  
|<span data-ttu-id="1f479-282">`value` >= 0</span><span class="sxs-lookup"><span data-stu-id="1f479-282">`value` >= 0</span></span>|`value`|  
|<span data-ttu-id="1f479-283">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="1f479-283">`value` < 0</span></span>|<span data-ttu-id="1f479-284">`value` \* -1</span><span class="sxs-lookup"><span data-stu-id="1f479-284">`value` \* -1</span></span>|  
  
 <span data-ttu-id="1f479-285">Die <xref:System.Numerics.BigInteger.Abs%2A> Methode entspricht der <xref:System.Math.Abs%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-285">The <xref:System.Numerics.BigInteger.Abs%2A> method is equivalent to the <xref:System.Math.Abs%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-286">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.Abs%2A> -Methode zum Konvertieren einer <xref:System.Numerics.BigInteger> Wert zwischen zwei des Komplement Darstellung und Vorzeichen-Wert-Darstellung vornehmen, bevor es in eine Datei zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="1f479-286">The following example uses the <xref:System.Numerics.BigInteger.Abs%2A> method to convert a <xref:System.Numerics.BigInteger> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</span></span> <span data-ttu-id="1f479-287">Daten in der Datei anschließend deserialisiert und zugewiesen werden, um ein neues <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-287">Data in the file is then deserialized and assigned to a new <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Abs(System.SByte)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Add (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Add(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Add(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Add (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-288">Der erste zu addierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-288">The first value to add.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-289">Der zweite zu addierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-289">The second value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-290">Addiert zwei <see cref="T:System.Numerics.BigInteger" />-Werte und gibt das Ergebnis zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-290">Adds two <see cref="T:System.Numerics.BigInteger" /> values and returns the result.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-291">Die Summe von <paramref name="left" /> und <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-291">The sum of <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-292">Sprachen, die Überladen von Operatoren oder benutzerdefinierten Operatoren nicht unterstützen können die <xref:System.Numerics.BigInteger.Add%2A> Methode, um mithilfe der Addition ausführen <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-292">Languages that do not support operator overloading or custom operators can use the <xref:System.Numerics.BigInteger.Add%2A> method to perform addition using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="1f479-293">Die <xref:System.Numerics.BigInteger.Add%2A> Methode ist ein geeigneter Ersatz für die Addition-Operator, bei der Instanziierung einer <xref:System.Numerics.BigInteger> Variable, indem sie eine Summe, die sich aus einer Addition ergibt zuweisen, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-293">The <xref:System.Numerics.BigInteger.Add%2A> method is a useful substitute for the addition operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a sum that results from addition, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (left As BigInteger, right As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.Compare (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-294">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-294">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-295">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-295">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-296">Vergleicht zwei <see cref="T:System.Numerics.BigInteger" />-Werte und gibt eine ganze Zahl zurück, die angibt, ob der erste Wert kleiner oder größer als der zweite Wert oder gleich dem zweiten Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-296">Compares two <see cref="T:System.Numerics.BigInteger" /> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-297">Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="left" /> und <paramref name="right" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-297">A signed integer that indicates the relative values of <paramref name="left" /> and <paramref name="right" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="1f479-298">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description>
                  <paramref name="left" /> ist kleiner als <paramref name="right" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description>
                  <paramref name="left" /> ist gleich <paramref name="right" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description>
                  <paramref name="left" /> ist größer als <paramref name="right" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-298">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="left" /> is less than <paramref name="right" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="left" /> equals <paramref name="right" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="left" /> is greater than <paramref name="right" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-299">Obwohl die <xref:System.Numerics.BigInteger> Typ hat keine feste Bereich, Vergleiche von <xref:System.Numerics.BigInteger> Werte sind nicht gekennzeichnet, durch das Fehlen der Genauigkeit, die den Vergleich von Gleitkommazahlen charakterisiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-299">Although the <xref:System.Numerics.BigInteger> type has no fixed range, comparisons of <xref:System.Numerics.BigInteger> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</span></span> <span data-ttu-id="1f479-300">Im folgenden Beispiel werden zwei <xref:System.Numerics.BigInteger> Werte, die durch und jede unterscheiden hat 1,896 Ziffern haben.</span><span class="sxs-lookup"><span data-stu-id="1f479-300">The following example compares two <xref:System.Numerics.BigInteger> values that differ by one and that each have 1,896 digits.</span></span> <span data-ttu-id="1f479-301">Die <xref:System.Numerics.BigInteger.Compare%2A> Methode meldet ordnungsgemäß, dass die beiden Werte nicht gleich sind.</span><span class="sxs-lookup"><span data-stu-id="1f479-301">The <xref:System.Numerics.BigInteger.Compare%2A> method correctly reports that the two values are not equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.CompareTo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-302">Vergleicht den Wert dieser Instanz mit einem anderen Wert und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der andere Wert ist oder mit diesem übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-302">Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(long other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : int64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="1f479-303">Die 64-Bit-Ganzzahl mit Vorzeichen für den Vergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-303">The signed 64-bit integer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-304">Vergleicht diese Instanz mit einer 64-Bit-Ganzzahl mit Vorzeichen und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert der 64-Bit-Ganzzahl mit Vorzeichen ist oder mit diesem übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-304">Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-305">Der Wert einer ganzen Zahl mit Vorzeichen, der die Beziehung dieser Instanz zu <paramref name="other" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-305">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="1f479-306">
            <list type="table">
              <listheader>
                <term> Rückgabewert  </term>
                <description> Beschreibung </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die aktuelle Instanz ist kleiner als <paramref name="other" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die aktuelle Instanz ist gleich <paramref name="other" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die aktuelle Instanz ist größer als <paramref name="other" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-306">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The current instance is less than <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The current instance equals <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The current instance is greater than <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-307">Wenn `other` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, eine <xref:System.Int64> Wert der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-307">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-308">Das folgende Beispiel veranschaulicht das Ergebnis des Aufrufs der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> Methode mit ganzzahligen Werten.</span><span class="sxs-lookup"><span data-stu-id="1f479-308">The following example illustrates the result of calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method with integral values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#3)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Numerics.BigInteger -&gt; int&#xA;override this.CompareTo : System.Numerics.BigInteger -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="1f479-309">Das zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-309">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-310">Vergleicht diese Instanz mit einem zweiten <see cref="T:System.Numerics.BigInteger" /> und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert des angegebenen Objekts ist oder mit diesem übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-310">Compares this instance to a second <see cref="T:System.Numerics.BigInteger" /> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-311">Der Wert einer ganzen Zahl mit Vorzeichen, der die Beziehung dieser Instanz zu <paramref name="other" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-311">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="1f479-312">
            <list type="table">
              <listheader>
                <term> Rückgabewert  </term>
                <description> Beschreibung </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die aktuelle Instanz ist kleiner als <paramref name="other" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die aktuelle Instanz ist gleich <paramref name="other" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die aktuelle Instanz ist größer als <paramref name="other" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-312">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The current instance is less than <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The current instance equals <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The current instance is greater than <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-313">Diese Überladung von der <xref:System.Numerics.BigInteger.CompareTo%2A> Methode implementiert die <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-313">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1f479-314">Es wird von generischen Auflistungsobjekten verwendet, um die Elemente in der Auflistung zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="1f479-314">It is used by generic collection objects to order the items in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-315">Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> Methode, um eine Liste der order `StarInfo` Objekte.</span><span class="sxs-lookup"><span data-stu-id="1f479-315">The following example illustrates the use of the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> method to order a list of `StarInfo` objects.</span></span> <span data-ttu-id="1f479-316">Jede `StarInfo` Objekt enthält Informationen über einen Stern-Name und der Entfernung von der Erde in Meilen.</span><span class="sxs-lookup"><span data-stu-id="1f479-316">Each `StarInfo` object provides information about a star's name and its distance from the Earth in miles.</span></span> <span data-ttu-id="1f479-317">`StarInfo` implementiert die <xref:System.IComparable%601> Schnittstelle, wodurch `StarInfo` Objekte nach generischer Auflistungsklassen sortiert werden.</span><span class="sxs-lookup"><span data-stu-id="1f479-317">`StarInfo` implements the <xref:System.IComparable%601> interface, which enables `StarInfo` objects to be sorted by generic collection classes.</span></span> <span data-ttu-id="1f479-318">Die <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> -Implementierung schließt nur einen Aufruf von <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span><span class="sxs-lookup"><span data-stu-id="1f479-318">Its <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementation just wraps a call to <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#1)]  
  
 <span data-ttu-id="1f479-319">Klicken Sie dann instanziiert der folgende Code vier `StarInfo` Objekte und speichert sie in einem generischen <xref:System.Collections.Generic.List%601> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-319">The following code then instantiates four `StarInfo` objects and stores them in a generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="1f479-320">Nach der <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> -Methode aufgerufen wird, `StarInfo` Objekte werden in der Reihenfolge ihrer Entfernung von der Erde angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-320">After the <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> method is called, `StarInfo` objects are displayed in order of their distance from the Earth.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bigInteger.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1f479-321">Das zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-321">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-322">Vergleicht diese Instanz mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert des angegebenen Objekts ist oder mit diesem übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-322">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-323">Eine ganze Zahl mit Vorzeichen, die die Beziehung der aktuellen Instanz zum <paramref name="obj" />-Parameter angibt, wie in der folgenden Tabelle veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-323">A signed integer that indicates the relationship of the current instance to the <paramref name="obj" /> parameter, as shown in the following table.</span>
          </span>
          <span data-ttu-id="1f479-324">
            <list type="table">
              <listheader>
                <term> Rückgabewert  </term>
                <description> Beschreibung </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die aktuelle Instanz ist kleiner als <paramref name="obj" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die aktuelle Instanz ist gleich <paramref name="obj" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die aktuelle Instanz ist größer als <paramref name="obj" />, oder der <paramref name="obj" />-Parameter ist <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-324">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The current instance is less than <paramref name="obj" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The current instance equals <paramref name="obj" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The current instance is greater than <paramref name="obj" />, or the <paramref name="obj" /> parameter is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-325">Diese Überladung von der <xref:System.Numerics.BigInteger.CompareTo%2A> Methode implementiert die <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-325">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1f479-326">Es ist nicht generische Auflistung von Objekten verwendet, um die Elemente in der Auflistung zu bestellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-326">It is used by non-generic collection objects to order the items in the collection.</span></span>  
  
 <span data-ttu-id="1f479-327">Die `obj` Parameter muss einen der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="1f479-327">The `obj` parameter must be one of the following:</span></span>  
  
-   <span data-ttu-id="1f479-328">Ein Objekt, dessen Typ zur Laufzeit ist <xref:System.Numerics.BigInteger>.</span><span class="sxs-lookup"><span data-stu-id="1f479-328">An object whose run-time type is <xref:System.Numerics.BigInteger>.</span></span>  
  
-   <span data-ttu-id="1f479-329">Ein <xref:System.Object> Variable, deren Wert `null`.</span><span class="sxs-lookup"><span data-stu-id="1f479-329">An <xref:System.Object> variable whose value is `null`.</span></span> <span data-ttu-id="1f479-330">Wenn der Wert der `obj` Parameter ist `null`, die Methode gibt 1 zurück, das anzeigt, die die aktuelle Instanz größer ist `obj`.</span><span class="sxs-lookup"><span data-stu-id="1f479-330">If the value of the `obj` parameter is `null`, the method returns 1, which indicates that that the current instance is greater than `obj`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-331">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> -Methode zum Vergleichen einer <xref:System.Numerics.BigInteger> Wert, wobei jedes Element in einem Objektarray</span><span class="sxs-lookup"><span data-stu-id="1f479-331">The following example calls the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method to compare a <xref:System.Numerics.BigInteger> value with each element in an object array</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f479-332">
            <paramref name="obj" /> ist keine <see cref="T:System.Numerics.BigInteger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-332">
              <paramref name="obj" /> is not a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : uint64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="1f479-333">Die 64-Bit-Ganzzahl ohne Vorzeichen für den Vergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-333">The unsigned 64-bit integer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-334">Vergleicht diese Instanz mit einer 64-Bit-Ganzzahl ohne Vorzeichen und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert der 64-Bit-Ganzzahl ohne Vorzeichen ist oder mit diesem übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-334">Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-335">Eine ganze Zahl mit Vorzeichen, die den relativen Wert dieser Instanz und von <paramref name="other" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-335">A signed integer that indicates the relative value of this instance and <paramref name="other" />, as shown in the following table.</span>
          </span>
          <span data-ttu-id="1f479-336">
            <list type="table">
              <listheader>
                <term> Rückgabewert  </term>
                <description> Beschreibung </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die aktuelle Instanz ist kleiner als <paramref name="other" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die aktuelle Instanz ist gleich <paramref name="other" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die aktuelle Instanz ist größer als <paramref name="other" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-336">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The current instance is less than <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The current instance equals <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The current instance is greater than <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Divide (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Divide(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Divide(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Divide (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend">
          <span data-ttu-id="1f479-337">Der zu dividierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-337">The value to be divided.</span>
          </span>
        </param>
        <param name="divisor">
          <span data-ttu-id="1f479-338">Der Wert, durch den dividiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-338">The value to divide by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-339">Dividiert einen <see cref="T:System.Numerics.BigInteger" />-Wert durch einen anderen und gibt das Ergebnis zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-339">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another and returns the result.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-340">Der Quotient der Division.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-340">The quotient of the division.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-341">Die <xref:System.Numerics.BigInteger.Divide%2A> -Methode führt Ganzzahldivision; die aus der Division resultiert der Rest wird verworfen.</span><span class="sxs-lookup"><span data-stu-id="1f479-341">The <xref:System.Numerics.BigInteger.Divide%2A> method performs integer division; any remainder that results from the division is discarded.</span></span> <span data-ttu-id="1f479-342">Rufen Sie zum Ausführen der ganzzahligen Division Beibehaltung den Rest der <xref:System.Numerics.BigInteger.DivRem%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-342">To perform integer division while preserving the remainder, call the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span> <span data-ttu-id="1f479-343">Um nur den Restwert abzurufen, rufen Sie die <xref:System.Numerics.BigInteger.Remainder%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-343">To retrieve only the remainder, call the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="1f479-344">Die <xref:System.Numerics.BigInteger.Divide%2A> Methode kann verwendet werden, von Sprachen, die Überladen von Operatoren nicht unterstützen.</span><span class="sxs-lookup"><span data-stu-id="1f479-344">The <xref:System.Numerics.BigInteger.Divide%2A> method can be used by languages that do not support operator overloading.</span></span> <span data-ttu-id="1f479-345">Das Verhalten ist identisch mit der Division mit dem Divisionsoperator.</span><span class="sxs-lookup"><span data-stu-id="1f479-345">Its behavior is identical to division using the division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-346">Das folgende Beispiel erstellt ein Array von <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-346">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-347">Anschließend wird jedes Element als der Quotient bei einer Division, die verwendet die <xref:System.Numerics.BigInteger.Divide%2A> -Methode, den Divisionsoperator (/) enthält, und die <xref:System.Numerics.BigInteger.DivRem%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-347">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="1f479-348">
            <paramref name="divisor" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-348">
              <paramref name="divisor" /> is 0 (zero).</span>
          </span>
        </exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger DivRem (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor, out System.Numerics.BigInteger remainder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger DivRem(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor, [out] valuetype System.Numerics.BigInteger&amp; remainder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (dividend As BigInteger, divisor As BigInteger, ByRef remainder As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger DivRem(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor, [Runtime::InteropServices::Out] System::Numerics::BigInteger % remainder);" />
      <MemberSignature Language="F#" Value="static member DivRem : System.Numerics.BigInteger * System.Numerics.BigInteger *  -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.DivRem (dividend, divisor, remainder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
        <Parameter Name="remainder" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dividend">
          <span data-ttu-id="1f479-349">Der zu dividierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-349">The value to be divided.</span>
          </span>
        </param>
        <param name="divisor">
          <span data-ttu-id="1f479-350">Der Wert, durch den dividiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-350">The value to divide by.</span>
          </span>
        </param>
        <param name="remainder">
          <span data-ttu-id="1f479-351">Die Rückgabe dieser Methode enthält einen <see cref="T:System.Numerics.BigInteger" />-Wert, der den Rest der Division darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-351">When this method returns, contains a <see cref="T:System.Numerics.BigInteger" /> value that represents the remainder from the division.</span>
          </span>
          <span data-ttu-id="1f479-352">Dieser Parameter wird nicht initialisiert übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-352">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-353">Dividiert einen <see cref="T:System.Numerics.BigInteger" />-Wert durch einen anderen, gibt das Ergebnis zurück und gibt den Rest in einem Ausgabeparameter zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-353">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another, returns the result, and returns the remainder in an output parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-354">Der Quotient der Division.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-354">The quotient of the division.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-355">Diese Methode behält den Quotienten und den Rest, der aus der ganzzahligen Division resultiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-355">This method preserves both the quotient and the remainder that results from integer division.</span></span> <span data-ttu-id="1f479-356">Wenn Sie nicht den Rest interessiert sind, verwenden Sie die <xref:System.Numerics.BigInteger.Divide%2A> -Methode oder der Divisionsoperator; Wenn Sie sind nur in den übrigen "interested" Verwenden der <xref:System.Numerics.BigInteger.Remainder%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-356">If you are not interested in the remainder, use the <xref:System.Numerics.BigInteger.Divide%2A> method or the division operator; if you are only interested in the remainder, use the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="1f479-357">Das Vorzeichen des zurückgegebenen `remainder` Wert ist identisch mit der das Vorzeichen der `dividend` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-357">The sign of the returned `remainder` value is the same as the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="1f479-358">Das Verhalten der <xref:System.Numerics.BigInteger.DivRem%2A> Methode ist identisch mit der <xref:System.Math.DivRem%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-358">The behavior of the <xref:System.Numerics.BigInteger.DivRem%2A> method is identical to that of the <xref:System.Math.DivRem%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-359">Das folgende Beispiel erstellt ein Array von <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-359">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-360">Anschließend wird jedes Element als der Quotient bei einer Division, die verwendet die <xref:System.Numerics.BigInteger.Divide%2A> -Methode, den Divisionsoperator (/) enthält, und die <xref:System.Numerics.BigInteger.DivRem%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-360">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="1f479-361">
            <paramref name="divisor" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-361">
              <paramref name="divisor" /> is 0 (zero).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-362">Gibt einen Wert zurück, der angibt, ob zwei numerische Werte gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-362">Returns a value that indicates whether two numeric values are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(long other);" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="1f479-363">Der Wert der 64-Bit-Ganzzahl mit Vorzeichen für den Vergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-363">The signed 64-bit integer value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-364">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und eine 64-Bit-Ganzzahl mit Vorzeichen über den gleichen Wert verfügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-364">Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-365">
            <see langword="true" />, wenn die 64-Bit-Ganzzahl mit Vorzeichen und die aktuelle Instanz über den gleichen Wert verfügen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-365">
              <see langword="true" /> if the signed 64-bit integer and the current instance have the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-366">Wenn `other` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-366">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the method is called.</span></span>  
  
 <span data-ttu-id="1f479-367">Um die Beziehung zwischen den beiden Objekten statt nur Testen auf Gleichheit zu bestimmen, rufen die <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-367">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-368">Das folgende Beispiel instanziiert einen <xref:System.Numerics.BigInteger> Objekt aus jedem ganzzahligen Typ außer <xref:System.UInt64>.</span><span class="sxs-lookup"><span data-stu-id="1f479-368">The following example instantiates a <xref:System.Numerics.BigInteger> object from each integral type except <xref:System.UInt64>.</span></span> <span data-ttu-id="1f479-369">Er ruft dann die <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> Methode zum Vergleichen der <xref:System.Numerics.BigInteger> Wert mit dem ursprünglichen Integer-Wert, der zum übergeben wurde die <xref:System.Numerics.BigInteger> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1f479-369">It then calls the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> method to compare the <xref:System.Numerics.BigInteger> value with the original integer value that was passed to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="1f479-370">Wie die Ausgabe zeigt, sind die Werte in jedem Fall gleich.</span><span class="sxs-lookup"><span data-stu-id="1f479-370">As the output shows, the values are equal in each case.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals.cpp#1)]
 [!code-csharp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Numerics.BigInteger -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="1f479-371">Das zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-371">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-372">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und ein angegebenes <see cref="T:System.Numerics.BigInteger" />-Objekt über den gleichen Wert verfügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-372">Returns a value that indicates whether the current instance and a specified <see cref="T:System.Numerics.BigInteger" /> object have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-373">
            <see langword="true" />, wenn dieses <see cref="T:System.Numerics.BigInteger" />-Objekt und <paramref name="other" /> über den gleichen Wert verfügen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-373">
              <see langword="true" /> if this <see cref="T:System.Numerics.BigInteger" /> object and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-374">Diese Methode implementiert die <xref:System.IEquatable%601> Schnittstelle und führt etwas bessere Leistung als <xref:System.Numerics.BigInteger.Equals%28System.Object%29> , da sie keinen konvertieren die `other` Parameter an eine <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-374">This method implements the <xref:System.IEquatable%601> interface and performs slightly better than <xref:System.Numerics.BigInteger.Equals%28System.Object%29> because it does not have to convert the `other` parameter to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="1f479-375">Um zu bestimmen, die Beziehung zwischen den beiden <xref:System.Numerics.BigInteger> Objekte anstelle von nur Testen auf Gleichheit, rufen die <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-375">To determine the relationship between the two <xref:System.Numerics.BigInteger> objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-376">Im folgenden Beispiel wird die ungefähre Entfernung mehrerer Sterne von der Erde mit der Entfernung von Epsilon Dateisystemeinstellung von der Erde zu bestimmen, ob sie gleich sind.</span><span class="sxs-lookup"><span data-stu-id="1f479-376">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="1f479-377">Im Beispiel wird jeder Überladung der <xref:System.Numerics.BigInteger.Equals%2A> Methode auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="1f479-377">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bigInteger.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="1f479-378">Das zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-378">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-379">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und ein angegebenes Objekt über den gleichen Wert verfügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-379">Returns a value that indicates whether the current instance and a specified object have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-380">
            <see langword="true" />, wenn das <paramref name="obj" />-Argument ein <see cref="T:System.Numerics.BigInteger" />-Objekt darstellt und dessen Wert der aktuellen <see cref="T:System.Numerics.BigInteger" />-Instanz entspricht, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-380">
              <see langword="true" /> if the <paramref name="obj" /> argument is a <see cref="T:System.Numerics.BigInteger" /> object, and its value is equal to the value of the current <see cref="T:System.Numerics.BigInteger" /> instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-381">Wenn die `obj` Argument ist ein <xref:System.Numerics.BigInteger> -Wert, der Methodenrückgabe `false`.</span><span class="sxs-lookup"><span data-stu-id="1f479-381">If the `obj` argument is not a <xref:System.Numerics.BigInteger> value, the method returns `false`.</span></span> <span data-ttu-id="1f479-382">Gibt die Methode `true` nur, wenn `obj` ist eine <xref:System.Numerics.BigInteger> -Instanz, deren Wert gleich der aktuellen Instanz ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-382">The method returns `true` only if `obj` is a <xref:System.Numerics.BigInteger> instance whose value is equal to the current instance.</span></span>  
  
 <span data-ttu-id="1f479-383">Um die Beziehung zwischen den beiden Objekten statt nur Testen auf Gleichheit zu bestimmen, rufen die <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-383">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-384">Das folgende Beispiel definiert Parallel <xref:System.Object> und <xref:System.Numerics.BigInteger> Arrays.</span><span class="sxs-lookup"><span data-stu-id="1f479-384">The following example defines parallel <xref:System.Object> and <xref:System.Numerics.BigInteger> arrays.</span></span> <span data-ttu-id="1f479-385">Jedes Element eines Arrays hat den gleichen Wert wie das entsprechende Element im zweiten Array.</span><span class="sxs-lookup"><span data-stu-id="1f479-385">Each element of one array has the same value as the corresponding element of the second array.</span></span> <span data-ttu-id="1f479-386">Wie die Ausgabe des Beispiels zeigt, die Instanz in der <xref:System.Numerics.BigInteger> Array gilt gleich der Instanz in der <xref:System.Object> array nur, wenn die zweite Datei ist eine <xref:System.Numerics.BigInteger> und deren Werte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="1f479-386">As the output from the example shows, the instance in the <xref:System.Numerics.BigInteger> array is considered to be equal to the instance in the <xref:System.Object> array only if the latter is a <xref:System.Numerics.BigInteger> and their values are equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/Equals_Obj1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/Equals_Obj1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="1f479-387">Die 64-Bit-Ganzzahl ohne Vorzeichen für den Vergleich.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-387">The unsigned 64-bit integer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-388">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und eine 64-Bit-Ganzzahl ohne Vorzeichen über den gleichen Wert verfügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-388">Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-389">
            <see langword="true" />, wenn die aktuelle Instanz und die 64-Bit-Ganzzahl ohne Vorzeichen über den gleichen Wert verfügen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-389">
              <see langword="true" /> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-390">Um die Beziehung zwischen den beiden Objekten statt nur Testen auf Gleichheit zu bestimmen, rufen die <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-390">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-391">Im folgenden Beispiel wird die ungefähre Entfernung mehrerer Sterne von der Erde mit der Entfernung von Epsilon Dateisystemeinstellung von der Erde zu bestimmen, ob sie gleich sind.</span><span class="sxs-lookup"><span data-stu-id="1f479-391">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="1f479-392">Im Beispiel wird jeder Überladung der <xref:System.Numerics.BigInteger.Equals%2A> Methode auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="1f479-392">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (bool isUnsigned = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(bool isUnsigned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (Optional isUnsigned As Boolean = false) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetByteCount : bool -&gt; int" Usage="bigInteger.GetByteCount isUnsigned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bigInteger.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f479-393">Gibt den Hashcode für das aktuelle <see cref="T:System.Numerics.BigInteger" />-Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-393">Returns the hash code for the current <see cref="T:System.Numerics.BigInteger" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-394">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-394">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreatestCommonDivisor">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger GreatestCommonDivisor (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger GreatestCommonDivisor(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreatestCommonDivisor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger GreatestCommonDivisor(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member GreatestCommonDivisor : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.GreatestCommonDivisor (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-395">Der erste Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-395">The first value.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-396">Der zweite Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-396">The second value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-397">Sucht den größten gemeinsamen Divisor von zwei <see cref="T:System.Numerics.BigInteger" />-Werten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-397">Finds the greatest common divisor of two <see cref="T:System.Numerics.BigInteger" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-398">Der größte gemeinsame Divisor von <paramref name="left" /> und <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-398">The greatest common divisor of <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-399">Der größte gemeinsame Teiler ist die größte Zahl in die beiden <xref:System.Numerics.BigInteger> Werte unterteilt werden können, ohne einen Rest zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="1f479-399">The greatest common divisor is the largest number into which the two <xref:System.Numerics.BigInteger> values can be divided without returning a remainder.</span></span>  
  
 <span data-ttu-id="1f479-400">Wenn die `left` und `right` Parameter sind Zahlen ungleich 0 (null), die Methode gibt immer mindestens den Wert 1 zurück, da alle Zahlen von 1 geteilt werden können.</span><span class="sxs-lookup"><span data-stu-id="1f479-400">If the `left` and `right` parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</span></span> <span data-ttu-id="1f479-401">Wenn beide Parameter NULL ist, gibt die Methode den absoluten Wert des Parameters nicht 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="1f479-401">If either parameter is zero, the method returns the absolute value of the non-zero parameter.</span></span> <span data-ttu-id="1f479-402">Wenn beide Werte NULL sind, gibt die Methode NULL zurück.</span><span class="sxs-lookup"><span data-stu-id="1f479-402">If both values are zero, the method returns zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f479-403">Berechnen den größten gemeinsamen Teiler von sehr großen Werten für `left` und `right` kann ein sehr zeitraubender Vorgang sein.</span><span class="sxs-lookup"><span data-stu-id="1f479-403">Computing the greatest common divisor of very large values of `left` and `right` can be a very time-consuming operation.</span></span>  
  
 <span data-ttu-id="1f479-404">Der zurückgegebene Wert den <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> Methode ist immer positive unabhängig vom Vorzeichen der `left` und `right` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-404">The value returned by the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method is always positive regardless of the sign of the `left` and `right` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-405">Das folgende Beispiel veranschaulicht einen Aufruf der <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> -Methode und erforderlich, die nützlichsten Informationen zur Ausnahmebehandlung eine <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-405">The following example illustrates a call to the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method and the exception handling necessary to provide useful information about an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="1f479-406">Das Ergebnis gibt an, dass der größte gemeinsame Teiler dieser zwei Zahlen 1 ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-406">The result indicates that the greatest common divisor of these two numbers is 1.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#10)]
 [!code-vb[System.Numeric.BigInteger.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEven" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsEven" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEven As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEven { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEven : bool" Usage="System.Numerics.BigInteger.IsEven" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-407">Gibt an, ob der Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts eine gerade Zahl ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-407">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is an even number.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f479-408">
            <see langword="true" />, wenn der Wert des <see cref="T:System.Numerics.BigInteger" />-Objekts eine gerade Zahl ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-408">
              <see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is an even number; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-409">Diese Eigenschaft ist eine Annehmlichkeit, der angibt, ob ein <xref:System.Numerics.BigInteger> Wert durch zwei teilbar ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-409">This property is a convenience feature that indicates whether a <xref:System.Numerics.BigInteger> value is evenly divisible by two.</span></span> <span data-ttu-id="1f479-410">Dies entspricht dem folgenden Ausdruck:</span><span class="sxs-lookup"><span data-stu-id="1f479-410">It is equivalent to the following expression:</span></span>  
  
```csharp   
value % 2 == 0;  
```  
  
```vb  
value Mod 2 = 0  
```  
  
 <span data-ttu-id="1f479-411">Wenn der Wert des aktuellen <xref:System.Numerics.BigInteger> Objekt <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, gibt die Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="1f479-411">If the value of the current <xref:System.Numerics.BigInteger> object is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, the property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOne">
      <MemberSignature Language="C#" Value="public bool IsOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsOne" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOne As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOne { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOne : bool" Usage="System.Numerics.BigInteger.IsOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-412">Gibt an, ob der Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts <see cref="P:System.Numerics.BigInteger.One" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-412">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f479-413">
            <see langword="true" />, wenn der Wert des <see cref="T:System.Numerics.BigInteger" />-Objekts <see cref="P:System.Numerics.BigInteger.One" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-413">
              <see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-414">Diese Eigenschaft bietet deutlich bessere Leistung als andere Vergleiche mit einem, z. B. `thisBigInteger.Equals(BigInteger.One)`.</span><span class="sxs-lookup"><span data-stu-id="1f479-414">This property offers significantly better performance than other comparisons with one, such as `thisBigInteger.Equals(BigInteger.One)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
      </Docs>
    </Member>
    <Member MemberName="IsPowerOfTwo">
      <MemberSignature Language="C#" Value="public bool IsPowerOfTwo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerOfTwo" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerOfTwo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerOfTwo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerOfTwo : bool" Usage="System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-415">Gibt an, ob der Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts eine Potenz von Zwei ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-415">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is a power of two.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f479-416">
            <see langword="true" />, wenn der Wert des <see cref="T:System.Numerics.BigInteger" />-Objekts eine Potenz von Zwei ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-416">
              <see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is a power of two; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-417">Diese Eigenschaft bestimmt, ob ein <xref:System.Numerics.BigInteger> Wert verfügt über ein einzelnes ungleich NULL-Bit festgelegt.</span><span class="sxs-lookup"><span data-stu-id="1f479-417">This property determines whether a <xref:System.Numerics.BigInteger> value has a single non-zero bit set.</span></span> <span data-ttu-id="1f479-418">Dies bedeutet, dass zurückgegeben `true` Wenn der Wert des aktuellen <xref:System.Numerics.BigInteger> Objekt 1 ist (d. h. 2<sup>0</sup>) oder eine höhere Potenz von zwei.</span><span class="sxs-lookup"><span data-stu-id="1f479-418">This means that it returns `true` if the value of the current <xref:System.Numerics.BigInteger> object is 1 (that is, 2<sup>0</sup>) or any greater power of two.</span></span> <span data-ttu-id="1f479-419">Es gibt `false` Wenn der Wert des aktuellen <xref:System.Numerics.BigInteger> Objekt ist 0.</span><span class="sxs-lookup"><span data-stu-id="1f479-419">It returns `false` if the value of the current <xref:System.Numerics.BigInteger> object is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsZero" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsZero { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsZero : bool" Usage="System.Numerics.BigInteger.IsZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-420">Gibt an, ob der Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts <see cref="P:System.Numerics.BigInteger.Zero" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-420">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f479-421">
            <see langword="true" />, wenn der Wert des <see cref="T:System.Numerics.BigInteger" />-Objekts <see cref="P:System.Numerics.BigInteger.Zero" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-421">
              <see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-422">Diese Eigenschaft bietet deutlich bessere Leistung als `BigInteger.Equals(BigInteger.Zero)`.</span><span class="sxs-lookup"><span data-stu-id="1f479-422">This property offers significantly better performance than `BigInteger.Equals(BigInteger.Zero)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.Zero" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-423">Gibt den Logarithmus der angegebenen Zahl zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-423">Returns the logarithm of a specified number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-424">Die Zahl, deren Logarithmus bestimmt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-424">The number whose logarithm is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-425">Gibt den natürlichen Logarithmus (zur Basis <see langword="e" />) der angegebenen Zahl zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-425">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-426">Der natürliche Logarithmus (Basis <see langword="e" />) von <paramref name="value" />, wie in der Tabelle im Abschnitt "Hinweise" veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-426">The natural (base <see langword="e" />) logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-427">Die `value` -Parameter wird als Zahl zur Basis 10 angegeben.</span><span class="sxs-lookup"><span data-stu-id="1f479-427">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="1f479-428">Der genaue zurückgeben dieser Methode hängt das Vorzeichen des `value`, wie in die folgende Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-428">The precise return value of this method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="1f479-429">Signieren von `value` Parameter</span><span class="sxs-lookup"><span data-stu-id="1f479-429">Sign of `value` parameter</span></span>|<span data-ttu-id="1f479-430">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="1f479-430">Return value</span></span>|  
|-------------------------------|------------------|  
|<span data-ttu-id="1f479-431">Positiv</span><span class="sxs-lookup"><span data-stu-id="1f479-431">Positive</span></span>|<span data-ttu-id="1f479-432">Der natürliche Logarithmus des `value`; d. h. ln `value`, oder der Protokolldatei e`value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-432">The natural logarithm of `value`; that is, ln `value`, or log e`value`.</span></span>|  
|<span data-ttu-id="1f479-433">Zero</span><span class="sxs-lookup"><span data-stu-id="1f479-433">Zero</span></span>|<span data-ttu-id="1f479-434"><xref:System.Double.NegativeInfinity></span><span class="sxs-lookup"><span data-stu-id="1f479-434"><xref:System.Double.NegativeInfinity>.</span></span>|  
|<span data-ttu-id="1f479-435">Negativ</span><span class="sxs-lookup"><span data-stu-id="1f479-435">Negative</span></span>|<span data-ttu-id="1f479-436"><xref:System.Double.NaN></span><span class="sxs-lookup"><span data-stu-id="1f479-436"><xref:System.Double.NaN>.</span></span>|  
  
 <span data-ttu-id="1f479-437">Der Logarithmus zur Basis 10 Berechnen einer <xref:System.Numerics.BigInteger> -Wert, rufen Sie die <xref:System.Numerics.BigInteger.Log10%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-437">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="1f479-438">Um den Logarithmus einer Zahl in einem anderen zu berechnen, rufen Sie die <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-438">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> method.</span></span>  
  
 <span data-ttu-id="1f479-439">Sie finden die Quadratwurzel einer Zahl durch Aufrufen der <xref:System.Numerics.BigInteger.Log%2A> Methode zusammen mit der <xref:System.Math.Exp%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-439">You can find the square root of a number by calling the <xref:System.Numerics.BigInteger.Log%2A> method along with the <xref:System.Math.Exp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1f479-440">Beachten Sie, dass das Ergebnis <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> ist das Ergebnis größer als <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-440">Note that the result is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> if the result is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1f479-441">Das folgende Beispiel berechnet die Quadratwurzel jedes Elements in ein Array von <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-441">The following example calculates the square root of each element in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Log#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.biginteger.log/cs/log1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Log#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.biginteger.log/vb/log1.vb#1)]
  
 <span data-ttu-id="1f479-442">Diese Methode entspricht der <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-442">This method corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1f479-443">Der natürliche Logarithmus von <paramref name="value" /> liegt außerhalb des Bereichs des <see cref="T:System.Double" />-Datentyps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-443">The natural log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value, double baseValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value, float64 baseValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger, baseValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value, double baseValue);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger * double -&gt; double" Usage="System.Numerics.BigInteger.Log (value, baseValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-444">Eine Zahl, deren Logarithmus gesucht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-444">A number whose logarithm is to be found.</span>
          </span>
        </param>
        <param name="baseValue">
          <span data-ttu-id="1f479-445">Die Basis des Logarithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-445">The base of the logarithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-446">Gibt den Logarithmus einer angegebenen Zahl bezüglich einer angegebenen Basis zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-446">Returns the logarithm of a specified number in a specified base.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-447">Der Logarithmus zur Basis <paramref name="baseValue" /> von <paramref name="value" />, wie in der Tabelle im Abschnitt "Hinweise" veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-447">The base <paramref name="baseValue" /> logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-448">Die `value` und `baseValue` Parameter werden als Zahlen zur Basis 10 angegeben.</span><span class="sxs-lookup"><span data-stu-id="1f479-448">The `value` and `baseValue` parameters are specified as base 10 numbers.</span></span>  
  
 <span data-ttu-id="1f479-449">Der genaue Rückgabewert Wert der Methode hängt von der das Vorzeichen `value` und für die Anmeldung und der Wert `baseValue`, wie in die folgende Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-449">The precise return value of the method depends on the sign of `value` and on the sign and value of `baseValue`, as the following table shows.</span></span>  
  
|<span data-ttu-id="1f479-450">`value`-Parameter</span><span class="sxs-lookup"><span data-stu-id="1f479-450">`value` parameter</span></span>|<span data-ttu-id="1f479-451">`baseValue`-Parameter</span><span class="sxs-lookup"><span data-stu-id="1f479-451">`baseValue` parameter</span></span>|<span data-ttu-id="1f479-452">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="1f479-452">Return value</span></span>|  
|-----------------------|---------------------------|------------------|  
|<span data-ttu-id="1f479-453">`value` > 0</span><span class="sxs-lookup"><span data-stu-id="1f479-453">`value` > 0</span></span>|<span data-ttu-id="1f479-454">(0 < `baseValue` < 1) – oder – (`baseValue` > 1)</span><span class="sxs-lookup"><span data-stu-id="1f479-454">(0 < `baseValue` < 1) -or-(`baseValue` > 1)</span></span>|<span data-ttu-id="1f479-455">logbaseValue(`value`)</span><span class="sxs-lookup"><span data-stu-id="1f479-455">logbaseValue(`value`)</span></span>|  
|<span data-ttu-id="1f479-456">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="1f479-456">`value` < 0</span></span>|<span data-ttu-id="1f479-457">(beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="1f479-457">(any value)</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="1f479-458">(beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="1f479-458">(any value)</span></span>|<span data-ttu-id="1f479-459">`baseValue` < 0</span><span class="sxs-lookup"><span data-stu-id="1f479-459">`baseValue` < 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="1f479-460">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="1f479-460">`value` != 1</span></span>|<span data-ttu-id="1f479-461">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="1f479-461">`baseValue` = 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="1f479-462">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="1f479-462">`value` != 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="1f479-463">(beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="1f479-463">(any value)</span></span>|`baseValue` = <xref:System.Double.NaN?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="1f479-464">(beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="1f479-464">(any value)</span></span>|<span data-ttu-id="1f479-465">`baseValue` = 1</span><span class="sxs-lookup"><span data-stu-id="1f479-465">`baseValue` = 1</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="1f479-466">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="1f479-466">`value` = 0</span></span>|<span data-ttu-id="1f479-467">0 < `baseValue` < 1</span><span class="sxs-lookup"><span data-stu-id="1f479-467">0 < `baseValue` < 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="1f479-468">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="1f479-468">`value` = 0</span></span>|<span data-ttu-id="1f479-469">`baseValue` > 1</span><span class="sxs-lookup"><span data-stu-id="1f479-469">`baseValue` > 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="1f479-470">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="1f479-470">`value` = 1</span></span>|<span data-ttu-id="1f479-471">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="1f479-471">`baseValue` = 0</span></span>|<span data-ttu-id="1f479-472">0</span><span class="sxs-lookup"><span data-stu-id="1f479-472">0</span></span>|  
|<span data-ttu-id="1f479-473">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="1f479-473">`value` = 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<span data-ttu-id="1f479-474">0</span><span class="sxs-lookup"><span data-stu-id="1f479-474">0</span></span>|  
  
 <span data-ttu-id="1f479-475">Der Logarithmus zur Basis 10 Berechnen einer <xref:System.Numerics.BigInteger> -Wert, rufen Sie die <xref:System.Numerics.BigInteger.Log10%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-475">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="1f479-476">Um den natürlichen Logarithmus einer Zahl zu berechnen, rufen Sie die <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-476">To calculate the natural logarithm of a number, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> method.</span></span>  
  
 <span data-ttu-id="1f479-477">Diese Methode entspricht der <xref:System.Math.Log%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-477">This method corresponds to the <xref:System.Math.Log%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1f479-478">Das Protokoll von <paramref name="value" /> liegt außerhalb des Bereichs des <see cref="T:System.Double" />-Datentyps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-478">The log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log10 : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log10 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-479">Eine Zahl, deren Logarithmus gesucht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-479">A number whose logarithm is to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-480">Gibt den Logarithmus einer angegebenen Zahl zur Basis 10 zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-480">Returns the base 10 logarithm of a specified number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-481">Der Logarithmus zur Basis 10 von <paramref name="value" />, wie in der Tabelle im Abschnitt "Hinweise" veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-481">The base 10 logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-482">Die `value` -Parameter wird als Zahl zur Basis 10 angegeben.</span><span class="sxs-lookup"><span data-stu-id="1f479-482">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="1f479-483">Der genaue Rückgabewert Wert der Methode hängt von der das Vorzeichen `value`, wie in die folgende Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-483">The precise return value of the method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="1f479-484">Vorzeichen von "Value"-Parameter</span><span class="sxs-lookup"><span data-stu-id="1f479-484">Sign of value parameter</span></span>|<span data-ttu-id="1f479-485">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="1f479-485">Return value</span></span>|  
|-----------------------------|------------------|  
|<span data-ttu-id="1f479-486">Positiv</span><span class="sxs-lookup"><span data-stu-id="1f479-486">Positive</span></span>|<span data-ttu-id="1f479-487">Der Logarithmus zur Basis 10 von `value`; d. h. log10`value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-487">The base 10 log of `value`; that is, log10`value`.</span></span>|  
|<span data-ttu-id="1f479-488">Zero</span><span class="sxs-lookup"><span data-stu-id="1f479-488">Zero</span></span>|<span data-ttu-id="1f479-489"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1f479-489"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="1f479-490">Negativ</span><span class="sxs-lookup"><span data-stu-id="1f479-490">Negative</span></span>|<span data-ttu-id="1f479-491"><xref:System.Double.NaN?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1f479-491"><xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>|  
  
 <span data-ttu-id="1f479-492">Berechnet den natürlichen Logarithmus einer <xref:System.Numerics.BigInteger> -Wert, rufen Sie die <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-492">To calculate the natural logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="1f479-493">Um den Logarithmus einer Zahl in einem anderen zu berechnen, rufen Sie die <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-493">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="1f479-494">Diese Methode entspricht der <xref:System.Math.Log10%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-494">This method corresponds to the <xref:System.Math.Log10%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1f479-495">Der Logarithmus zur Basis 10 von <paramref name="value" /> liegt außerhalb des Bereichs des <see cref="T:System.Double" />-Datentyps.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-495">The base 10 log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Max (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Max(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Max(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Max (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-496">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-496">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-497">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-497">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-498">Gibt den größeren der beiden <see cref="T:System.Numerics.BigInteger" />-Werte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-498">Returns the larger of two <see cref="T:System.Numerics.BigInteger" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-499">Der größere der Parameter <paramref name="left" /> und <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-499">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is larger.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-500">Diese Methode entspricht der <xref:System.Math.Max%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-500">This method corresponds to the <xref:System.Math.Max%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-501">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.Max%2A> aufzurufende Methode wählen Sie die größte Zahl in einem Array von <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-501">The following example uses the <xref:System.Numerics.BigInteger.Max%2A> method to select the largest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/cs/Max1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/vb/Max1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Min (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Min(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Min(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Min (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-502">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-502">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-503">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-503">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-504">Gibt den kleineren der beiden <see cref="T:System.Numerics.BigInteger" />-Werte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-504">Returns the smaller of two <see cref="T:System.Numerics.BigInteger" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-505">Der kleinere der Parameter <paramref name="left" /> und <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-505">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is smaller.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-506">Diese Methode entspricht der <xref:System.Math.Min%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-506">This method corresponds to the <xref:System.Math.Min%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-507">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.Min%2A> aufzurufende Methode wählen Sie die kleinste Zahl in einem Array von <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-507">The following example uses the <xref:System.Numerics.BigInteger.Min%2A> method to select the smallest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/cs/Min1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/vb/Min1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger MinusOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger MinusOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinusOne As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger MinusOne { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.MinusOne : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.MinusOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-508">Ruft einen Wert ab, der die Zahl -1 darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-508">Gets a value that represents the number negative one (-1).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f479-509">Eine ganze Zahl, deren Wert -1 ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-509">An integer whose value is negative one (-1).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-510">Die <xref:System.Numerics.BigInteger.MinusOne%2A> Eigenschaft wird verwendet, um den Vergleich ein <xref:System.Numerics.BigInteger> Wert auf-1 oder Zuweisen von-1 an, um eine <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-510">The <xref:System.Numerics.BigInteger.MinusOne%2A> property is used to compare a <xref:System.Numerics.BigInteger> value to -1 or to assign -1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
      </Docs>
    </Member>
    <Member MemberName="ModPow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger ModPow (System.Numerics.BigInteger value, System.Numerics.BigInteger exponent, System.Numerics.BigInteger modulus);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger ModPow(valuetype System.Numerics.BigInteger value, valuetype System.Numerics.BigInteger exponent, valuetype System.Numerics.BigInteger modulus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModPow (value As BigInteger, exponent As BigInteger, modulus As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger ModPow(System::Numerics::BigInteger value, System::Numerics::BigInteger exponent, System::Numerics::BigInteger modulus);" />
      <MemberSignature Language="F#" Value="static member ModPow : System.Numerics.BigInteger * System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.ModPow (value, exponent, modulus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Numerics.BigInteger" />
        <Parameter Name="modulus" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-511">Die Zahl, deren <c>exponent</c> Potenz berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-511">The number to raise to the <c>exponent</c> power.</span>
          </span>
        </param>
        <param name="exponent">
          <span data-ttu-id="1f479-512">Der Exponent, mit dem <c>value</c> potenziert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-512">The exponent to raise <c>value</c> by.</span>
          </span>
        </param>
        <param name="modulus">
          <span data-ttu-id="1f479-513">Die Zahl, durch die <c>value</c> hoch <c>exponent</c> dividiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-513">The number by which to divide <c>value</c> raised to the <c>exponent</c> power.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-514">Führt eine Modulodivision für eine zur Potenz einer anderen Zahl erhobene Zahl aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-514">Performs modulus division on a number raised to the power of another number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-515">Der Rest nach der Division von <paramref name="value" /><sup>exponent</sup> durch <paramref name="modulus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-515">The remainder after dividing <paramref name="value" /><sup>exponent</sup> by <paramref name="modulus" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-516">Die <xref:System.Numerics.BigInteger.ModPow%2A> Methode wertet der folgende Ausdruck:</span><span class="sxs-lookup"><span data-stu-id="1f479-516">The <xref:System.Numerics.BigInteger.ModPow%2A> method evaluates the following expression:</span></span>  
  
 <span data-ttu-id="1f479-517">(BaseValue ^ Exponent) MOD-Modulo</span><span class="sxs-lookup"><span data-stu-id="1f479-517">(baseValue ^ exponent) Mod modulus</span></span>  
  
 <span data-ttu-id="1f479-518">Zum Ausführen von Potenzierung für <xref:System.Numerics.BigInteger> Werte ohne Modulo-Division verwenden die <xref:System.Numerics.BigInteger.Pow%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-518">To perform exponentiation on <xref:System.Numerics.BigInteger> values without modulus division, use the <xref:System.Numerics.BigInteger.Pow%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-519">Das folgende Beispiel bietet eine einfache Veranschaulichung eines Aufrufs der <xref:System.Numerics.BigInteger.ModPow%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-519">The following example provides a simple illustration of calling the <xref:System.Numerics.BigInteger.ModPow%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/cs/ModPow1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/vb/ModPow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="1f479-520">
            <paramref name="modulus" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-520">
              <paramref name="modulus" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1f479-521">
            <paramref name="exponent" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-521">
              <paramref name="exponent" /> is negative.</span>
          </span>
        </exception>
        <altmember cref="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Multiply (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Multiply(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-522">Die erste zu multiplizierende Zahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-522">The first number to multiply.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-523">Die zweite zu multiplizierende Zahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-523">The second number to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-524">Gibt das Produkt der beiden <see cref="T:System.Numerics.BigInteger" />-Werte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-524">Returns the product of two <see cref="T:System.Numerics.BigInteger" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-525">Das Produkt des <paramref name="left" />-Parameters und des <paramref name="right" />-Parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-525">The product of the <paramref name="left" /> and <paramref name="right" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-526">Die <xref:System.Numerics.BigInteger.Multiply%2A> Methode ist für Sprachen, die Überladen von Operatoren nicht unterstützen, implementiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-526">The <xref:System.Numerics.BigInteger.Multiply%2A> method is implemented for languages that do not support operator overloading.</span></span> <span data-ttu-id="1f479-527">Das Verhalten ist identisch mit der Multiplikation mit der Multiplikationsoperator.</span><span class="sxs-lookup"><span data-stu-id="1f479-527">Its behavior is identical to multiplication using the multiplication operator.</span></span> <span data-ttu-id="1f479-528">Darüber hinaus die <xref:System.Numerics.BigInteger.Multiply%2A> Methode ist ein geeigneter Ersatz für den Multiplikationsoperator, bei der Instanziierung einer <xref:System.Numerics.BigInteger> Variable, indem sie ein Produkt, das aus einer Multiplikation ergibt zuweisen, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-528">In addition, the <xref:System.Numerics.BigInteger.Multiply%2A> method is a useful substitute for the multiplication operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a product that results from multiplication, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#1)]  
  
 <span data-ttu-id="1f479-529">Wenn erforderlich, führt diese Methode automatisch implizite Konvertierung eines anderen ganzzahligen Typen zu <xref:System.Numerics.BigInteger> Objekte.</span><span class="sxs-lookup"><span data-stu-id="1f479-529">If necessary, this method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="1f479-530">Dies wird im Beispiel im nächsten Abschnitt veranschaulicht, in dem die <xref:System.Numerics.BigInteger.Multiply%2A> -Methode übergeben zwei <xref:System.Int64> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-530">This is illustrated in the example in the next section, where the <xref:System.Numerics.BigInteger.Multiply%2A> method is passed two <xref:System.Int64> values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-531">Im folgenden Beispiel wird versucht, die Multiplikation mit zwei langen ganzen Zahlen ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="1f479-531">The following example tries to perform multiplication with two long integers.</span></span> <span data-ttu-id="1f479-532">Da das Ergebnis des Bereichs einer langen ganzen Zahl überschreitet eine <xref:System.OverflowException> ausgelöst wird, und die <xref:System.Numerics.BigInteger.Multiply%2A> Methode wird aufgerufen, um die Multiplikation zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="1f479-532">Because the result exceeds the range of a long integer, an <xref:System.OverflowException> is thrown, and the <xref:System.Numerics.BigInteger.Multiply%2A> method is called to handle the multiplication.</span></span> <span data-ttu-id="1f479-533">Beachten Sie, dass c# setzt voraus, dass Sie beide verwenden den `checked` Schlüsselwort (wie in diesem Beispiel) oder die `/checked+` Compileroption, um sicherzustellen, dass bei einem numerischen Überlauf eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="1f479-533">Note that C# requires that you use either the `checked` keyword (as in this example) or the `/checked+` compiler option to make sure an exception is thrown on a numeric overflow.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#7)]
 [!code-vb[System.Numeric.BigInteger.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Negate (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Negate(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Negate(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Negate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-534">Der zu negierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-534">The value to negate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-535">Negiert einen angegebenen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-535">Negates a specified <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-536">Das Ergebnis des <paramref name="value" />-Parameters, multipliziert mit -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-536">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-537">Negation erhält die Additive Inverse einer Zahl.</span><span class="sxs-lookup"><span data-stu-id="1f479-537">Negation obtains the additive inverse of a number.</span></span> <span data-ttu-id="1f479-538">Die Additive Inverse einer Zahl ist eine Zahl, die einen Wert von 0 (null) erzeugt, wenn die ursprüngliche Nummer hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-538">The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</span></span>  
  
 <span data-ttu-id="1f479-539">Die <xref:System.Numerics.BigInteger.Negate%2A> Methode ist für Sprachen, die keine benutzerdefinierte Operatoren unterstützen implementiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-539">The <xref:System.Numerics.BigInteger.Negate%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="1f479-540">Das Verhalten ist identisch mit den unären Negationsoperator Negation.</span><span class="sxs-lookup"><span data-stu-id="1f479-540">Its behavior is identical to negation using the unary negation operator.</span></span> <span data-ttu-id="1f479-541">Darüber hinaus die <xref:System.Numerics.BigInteger.Negate%2A> Methode ist ein geeigneter Ersatz für den Negationsoperator, bei der Instanziierung einer <xref:System.Numerics.BigInteger> Variable, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-541">In addition, the <xref:System.Numerics.BigInteger.Negate%2A> method is a useful substitute for the negation operator when instantiating a <xref:System.Numerics.BigInteger> variable, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="1f479-542">Das folgende Beispiel veranschaulicht die drei Möglichkeiten, um den Wert des Negieren einer <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-542">The following example illustrates three ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger One { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.One : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-543">Ruft einen Wert ab, der die Zahl 1 darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-543">Gets a value that represents the number one (1).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f479-544">Ein Objekt, dessen Wert 1 ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-544">An object whose value is one (1).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-545">Die <xref:System.Numerics.BigInteger.One%2A> Eigenschaft wird normalerweise verwendet, um Vergleichen einer <xref:System.Numerics.BigInteger> Wert auf 1 oder Zuweisen von 1 bis eine <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-545">The <xref:System.Numerics.BigInteger.One%2A> property is usually used to compare a <xref:System.Numerics.BigInteger> value to 1 or to assign 1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
        <altmember cref="P:System.Numerics.BigInteger.MinusOne" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Addition(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-546">Der erste zu addierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-546">The first value to add.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-547">Der zweite zu addierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-547">The second value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-548">Addiert die Werte von zwei angegebenen <see cref="T:System.Numerics.BigInteger" />-Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-548">Adds the values of two specified <see cref="T:System.Numerics.BigInteger" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-549">Die Summe von <paramref name="left" /> und <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-549">The sum of <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-550">Die <xref:System.Numerics.BigInteger.op_Addition%2A> Methode definiert die Additionsoperation für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-550">The <xref:System.Numerics.BigInteger.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-551">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-551">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#12)]
 [!code-vb[System.Numeric.BigInteger.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#12)]  
  
 <span data-ttu-id="1f479-552">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Add%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-552">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Add%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &amp; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseAnd(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &amp;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left &amp;&amp;&amp; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-553">Der erste Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-553">The first value.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-554">Der zweite Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-554">The second value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-555">Führt eine bitweise <see langword="And" />-Operation für zwei <see cref="T:System.Numerics.BigInteger" />-Werte aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-555">Performs a bitwise <see langword="And" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-556">Das Ergebnis der bitweisen <see langword="And" />-Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-556">The result of the bitwise <see langword="And" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-557">Die <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> -Methode definiert die bitweise `And` Vorgang für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-557">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-558">Der bitweise `And` Vorgang legt ein Ergebnis nur fest, wenn die entsprechenden Bits in `left` und `right` werden festgelegt, wie in der folgenden Tabelle gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-558">The bitwise `And` operation sets a result bit only if the corresponding bits in `left` and `right` are also set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1f479-559">Bit `left`</span><span class="sxs-lookup"><span data-stu-id="1f479-559">Bit in `left`</span></span>|<span data-ttu-id="1f479-560">Bit `right`</span><span class="sxs-lookup"><span data-stu-id="1f479-560">Bit in `right`</span></span>|<span data-ttu-id="1f479-561">Bit im Ergebnis</span><span class="sxs-lookup"><span data-stu-id="1f479-561">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="1f479-562">0</span><span class="sxs-lookup"><span data-stu-id="1f479-562">0</span></span>|<span data-ttu-id="1f479-563">0</span><span class="sxs-lookup"><span data-stu-id="1f479-563">0</span></span>|<span data-ttu-id="1f479-564">0</span><span class="sxs-lookup"><span data-stu-id="1f479-564">0</span></span>|  
|<span data-ttu-id="1f479-565">1</span><span class="sxs-lookup"><span data-stu-id="1f479-565">1</span></span>|<span data-ttu-id="1f479-566">0</span><span class="sxs-lookup"><span data-stu-id="1f479-566">0</span></span>|<span data-ttu-id="1f479-567">0</span><span class="sxs-lookup"><span data-stu-id="1f479-567">0</span></span>|  
|<span data-ttu-id="1f479-568">1</span><span class="sxs-lookup"><span data-stu-id="1f479-568">1</span></span>|<span data-ttu-id="1f479-569">1</span><span class="sxs-lookup"><span data-stu-id="1f479-569">1</span></span>|<span data-ttu-id="1f479-570">1</span><span class="sxs-lookup"><span data-stu-id="1f479-570">1</span></span>|  
|<span data-ttu-id="1f479-571">0</span><span class="sxs-lookup"><span data-stu-id="1f479-571">0</span></span>|<span data-ttu-id="1f479-572">1</span><span class="sxs-lookup"><span data-stu-id="1f479-572">1</span></span>|<span data-ttu-id="1f479-573">0</span><span class="sxs-lookup"><span data-stu-id="1f479-573">0</span></span>|  
  
 <span data-ttu-id="1f479-574">Die <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> Methode ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="1f479-574">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#1)]  
  
 <span data-ttu-id="1f479-575">Die <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> Methode führt die bitweise `And` -Operation für zwei <xref:System.Numerics.BigInteger> Werte, als wären sie sowohl in der zwei Komplement Darstellung mit virtuellen vorzeichenerweiterung.</span><span class="sxs-lookup"><span data-stu-id="1f479-575">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method performs the bitwise `And` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator | (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator |(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ||| right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-576">Der erste Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-576">The first value.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-577">Der zweite Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-577">The second value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-578">Führt eine bitweise <see langword="Or" />-Operation für zwei <see cref="T:System.Numerics.BigInteger" />-Werte aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-578">Performs a bitwise <see langword="Or" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-579">Das Ergebnis der bitweisen <see langword="Or" />-Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-579">The result of the bitwise <see langword="Or" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-580">Die <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> -Methode definiert die bitweise `Or` Vorgang für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-580">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-581">Der bitweise `Or` Vorgang legt ein Ergebnis nur fest, wenn eines oder beide der entsprechenden Bits in `left` und `right` festgelegt sind, wie in der folgenden Tabelle gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-581">The bitwise `Or` operation sets a result bit only if either or both of the corresponding bits in `left` and `right` are set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="1f479-582">Bit `left`</span><span class="sxs-lookup"><span data-stu-id="1f479-582">Bit in `left`</span></span>|<span data-ttu-id="1f479-583">Bit `right`</span><span class="sxs-lookup"><span data-stu-id="1f479-583">Bit in `right`</span></span>|<span data-ttu-id="1f479-584">Bit im Ergebnis</span><span class="sxs-lookup"><span data-stu-id="1f479-584">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="1f479-585">0</span><span class="sxs-lookup"><span data-stu-id="1f479-585">0</span></span>|<span data-ttu-id="1f479-586">0</span><span class="sxs-lookup"><span data-stu-id="1f479-586">0</span></span>|<span data-ttu-id="1f479-587">0</span><span class="sxs-lookup"><span data-stu-id="1f479-587">0</span></span>|  
|<span data-ttu-id="1f479-588">1</span><span class="sxs-lookup"><span data-stu-id="1f479-588">1</span></span>|<span data-ttu-id="1f479-589">0</span><span class="sxs-lookup"><span data-stu-id="1f479-589">0</span></span>|<span data-ttu-id="1f479-590">1</span><span class="sxs-lookup"><span data-stu-id="1f479-590">1</span></span>|  
|<span data-ttu-id="1f479-591">1</span><span class="sxs-lookup"><span data-stu-id="1f479-591">1</span></span>|<span data-ttu-id="1f479-592">1</span><span class="sxs-lookup"><span data-stu-id="1f479-592">1</span></span>|<span data-ttu-id="1f479-593">1</span><span class="sxs-lookup"><span data-stu-id="1f479-593">1</span></span>|  
|<span data-ttu-id="1f479-594">0</span><span class="sxs-lookup"><span data-stu-id="1f479-594">0</span></span>|<span data-ttu-id="1f479-595">1</span><span class="sxs-lookup"><span data-stu-id="1f479-595">1</span></span>|<span data-ttu-id="1f479-596">1</span><span class="sxs-lookup"><span data-stu-id="1f479-596">1</span></span>|  
  
 <span data-ttu-id="1f479-597">Die <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> Methode ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="1f479-597">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#2)]  
  
 <span data-ttu-id="1f479-598">Die <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> Methode führt die bitweise `Or` -Operation für zwei <xref:System.Numerics.BigInteger> Werte, als wären sie sowohl in der zwei Komplement Darstellung mit virtuellen vorzeichenerweiterung.</span><span class="sxs-lookup"><span data-stu-id="1f479-598">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method performs the bitwise `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator -- (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Decrement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator --(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Decrement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-599">Der zu dekrementierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-599">The value to decrement.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-600">Dekrementiert einen <see cref="T:System.Numerics.BigInteger" />-Wert um 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-600">Decrements a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-601">Der um 1 dekrementierte Wert des <paramref name="value" />-Parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-601">The value of the <paramref name="value" /> parameter decremented by 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-602">Die <xref:System.Numerics.BigInteger.op_Decrement%2A> Methode definiert, der dekrementvorgang für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-602">The <xref:System.Numerics.BigInteger.op_Decrement%2A> method defines the decrement operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-603">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-603">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#17)]  
  
 <span data-ttu-id="1f479-604">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Subtract%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-604">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A> method instead.</span></span> <span data-ttu-id="1f479-605">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="1f479-605">For example:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#3)]  
  
 <span data-ttu-id="1f479-606">Da <xref:System.Numerics.BigInteger> Objekte sind unveränderlich, die <xref:System.Numerics.BigInteger.op_Decrement%2A> Operator erstellt ein neues <xref:System.Numerics.BigInteger> Objekt, dessen Wert ist, kleiner als das <xref:System.Numerics.BigInteger> dargestellte Objekt `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-606">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Decrement%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one less than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="1f479-607">Das bedeutet, die wiederholte Aufrufe <xref:System.Numerics.BigInteger.op_Decrement%2A> stark beanspruchen.</span><span class="sxs-lookup"><span data-stu-id="1f479-607">This means that repeated calls to <xref:System.Numerics.BigInteger.op_Decrement%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="1f479-608">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-608">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator / (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Division(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator /(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend / divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend">
          <span data-ttu-id="1f479-609">Der zu dividierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-609">The value to be divided.</span>
          </span>
        </param>
        <param name="divisor">
          <span data-ttu-id="1f479-610">Der Wert, durch den dividiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-610">The value to divide by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-611">Dividiert einen angegebenen <see cref="T:System.Numerics.BigInteger" />-Wert durch einen anderen angegebenen <see cref="T:System.Numerics.BigInteger" />-Wert mit einer Ganzzahldivision.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-611">Divides a specified <see cref="T:System.Numerics.BigInteger" /> value by another specified <see cref="T:System.Numerics.BigInteger" /> value by using integer division.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-612">Das ganzzahlige Ergebnis der Division.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-612">The integral result of the division.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-613">Die <xref:System.Numerics.BigInteger.op_Division%2A> Methode definiert die Divisionsoperation für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-613">The <xref:System.Numerics.BigInteger.op_Division%2A> method defines the division operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-614">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-614">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#13)]
 [!code-vb[System.Numeric.BigInteger.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#13)]  
  
 <span data-ttu-id="1f479-615">Sprachen, die benutzerdefinierte Operatoren und Überladen von Operatoren nicht unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Divide%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-615">Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.BigInteger.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="1f479-616">Die entsprechende Methode für diesen Operator ist. <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1f479-616">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="1f479-617">Das folgende Beispiel erstellt ein Array von <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-617">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-618">Anschließend wird jedes Element als der Quotient bei einer Division, die verwendet die <xref:System.Numerics.BigInteger.Divide%2A> -Methode, den Divisionsoperator (/) enthält, und die <xref:System.Numerics.BigInteger.DivRem%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-618">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="1f479-619">
            <paramref name="divisor" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-619">
              <paramref name="divisor" /> is 0 (zero).</span>
          </span>
        </exception>
        <altmember cref="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Equality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-620">Gibt einen Wert zurück, der angibt, ob zwei Werte gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-620">Returns a value that indicates whether two values are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-621">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-621">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-622">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-622">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-623">Gibt einen Wert zurück, der angibt, ob der Wert einer langen ganzen Zahl mit Vorzeichen und ein <see cref="T:System.Numerics.BigInteger" />-Wert gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-623">Returns a value that indicates whether a signed long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-624">
            <see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-624">
              <see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-625">Die <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> Methode definiert, die Gleichheit Vergleichsoperation für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-625">The <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-626">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-626">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#4)]  
  
 <span data-ttu-id="1f479-627">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> -Instanzmethode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-627">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="1f479-628">Wenn `left` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-628">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-629">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-629">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-630">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-630">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-631">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-631">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-632">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert und der Wert einer langen ganzen Zahl mit Vorzeichen gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-632">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a signed long integer value are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-633">
            <see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-633">
              <see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-634">Die <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> Methode definiert, die Gleichheit Vergleichsoperation für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-634">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-635">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-635">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#5)]  
  
 <span data-ttu-id="1f479-636">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> -Instanzmethode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-636">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="1f479-637">Wenn `right` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-637">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-638">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-638">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-639">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-639">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-640">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-640">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-641">Gibt einen Wert zurück, der angibt, ob die Werte von zwei <see cref="T:System.Numerics.BigInteger" />-Objekten gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-641">Returns a value that indicates whether the values of two <see cref="T:System.Numerics.BigInteger" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-642">
            <see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-642">
              <see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-643">Die <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> Methode definiert, den Vorgang des Gleichheitsoperators für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-643">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method defines the operation of the equality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-644">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-644">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#19)]
 [!code-vb[System.Numeric.BigInteger.Class#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#19)]  
  
 <span data-ttu-id="1f479-645">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> -Instanzmethode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-645">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="1f479-646">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-646">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.Equals" />
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-647">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-647">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-648">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-648">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-649">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert und der Wert einer langen ganzen Zahl ohne Vorzeichen gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-649">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and an unsigned long integer value are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-650">
            <see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-650">
              <see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-651">Die <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> Methode definiert, die Gleichheit Vergleichsoperation für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-651">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-652">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-652">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#6)]  
  
 <span data-ttu-id="1f479-653">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> -Instanzmethode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-653">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-654">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-654">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-655">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-655">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-656">Gibt einen Wert zurück, der angibt, ob der Wert einer langen ganzen Zahl ohne Vorzeichen und ein <see cref="T:System.Numerics.BigInteger" />-Wert gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-656">Returns a value that indicates whether an unsigned long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-657">
            <see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-657">
              <see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-658">Die <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> Methode definiert, die Gleichheit Vergleichsoperation für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-658">The <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-659">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-659">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#7)]
 [!code-vb[System.Numerics.BigInteger.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#7)]  
  
 <span data-ttu-id="1f479-660">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> -Instanzmethode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-660">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ^ (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_ExclusiveOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ^(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ^^^ right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-661">Der erste Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-661">The first value.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-662">Der zweite Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-662">The second value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-663">Führt eine bitweise exklusive <see langword="Or" />-Operation (<see langword="XOr" />-Operation) für zwei <see cref="T:System.Numerics.BigInteger" />-Werte aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-663">Performs a bitwise exclusive <see langword="Or" /> (<see langword="XOr" />) operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-664">Das Ergebnis der bitweisen <see langword="Or" />-Operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-664">The result of the bitwise <see langword="Or" /> operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-665">Das Ergebnis einer bitweisen exklusiven `Or` Vorgang ist `true` , wenn die Werte von zwei Bits optional, andernfalls sind, ist es `false`.</span><span class="sxs-lookup"><span data-stu-id="1f479-665">The result of a bitwise exclusive `Or` operation is `true` if the values of the two bits are different; otherwise, it is `false`.</span></span> <span data-ttu-id="1f479-666">Die folgende Tabelle zeigt die exklusive `Or` Vorgang.</span><span class="sxs-lookup"><span data-stu-id="1f479-666">The following table illustrates the exclusive `Or` operation.</span></span>  
  
|<span data-ttu-id="1f479-667">Bit x in `left`</span><span class="sxs-lookup"><span data-stu-id="1f479-667">Bit x in `left`</span></span>|<span data-ttu-id="1f479-668">Bit x in `right`</span><span class="sxs-lookup"><span data-stu-id="1f479-668">Bit x in `right`</span></span>|<span data-ttu-id="1f479-669">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="1f479-669">Return value</span></span>|  
|---------------------|----------------------|------------------|  
|<span data-ttu-id="1f479-670">0</span><span class="sxs-lookup"><span data-stu-id="1f479-670">0</span></span>|<span data-ttu-id="1f479-671">0</span><span class="sxs-lookup"><span data-stu-id="1f479-671">0</span></span>|<span data-ttu-id="1f479-672">0</span><span class="sxs-lookup"><span data-stu-id="1f479-672">0</span></span>|  
|<span data-ttu-id="1f479-673">0</span><span class="sxs-lookup"><span data-stu-id="1f479-673">0</span></span>|<span data-ttu-id="1f479-674">1</span><span class="sxs-lookup"><span data-stu-id="1f479-674">1</span></span>|<span data-ttu-id="1f479-675">1</span><span class="sxs-lookup"><span data-stu-id="1f479-675">1</span></span>|  
|<span data-ttu-id="1f479-676">1</span><span class="sxs-lookup"><span data-stu-id="1f479-676">1</span></span>|<span data-ttu-id="1f479-677">0</span><span class="sxs-lookup"><span data-stu-id="1f479-677">0</span></span>|<span data-ttu-id="1f479-678">1</span><span class="sxs-lookup"><span data-stu-id="1f479-678">1</span></span>|  
|<span data-ttu-id="1f479-679">1</span><span class="sxs-lookup"><span data-stu-id="1f479-679">1</span></span>|<span data-ttu-id="1f479-680">1</span><span class="sxs-lookup"><span data-stu-id="1f479-680">1</span></span>|<span data-ttu-id="1f479-681">0</span><span class="sxs-lookup"><span data-stu-id="1f479-681">0</span></span>|  
  
 <span data-ttu-id="1f479-682">Die <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> Methode ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="1f479-682">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#8)]
 [!code-vb[System.Numerics.BigInteger.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#8)]  
  
 <span data-ttu-id="1f479-683">Die <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> Methode führt die bitweise exklusive `Or` -Operation für zwei <xref:System.Numerics.BigInteger> Werte, als wären sie sowohl in der zwei Komplement Darstellung mit virtuellen vorzeichenerweiterung.</span><span class="sxs-lookup"><span data-stu-id="1f479-683">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method performs the bitwise exclusive `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-684">Definiert eine explizite Konvertierung zwischen einem <see cref="T:System.Numerics.BigInteger" />-Objekt und einem anderen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-684">Defines an explicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-685">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-685">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-686">Definiert eine explizite Konvertierung eines <see cref="T:System.Decimal" />-Objekts in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-686">Defines an explicit conversion of a <see cref="T:System.Decimal" /> object to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-687">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-687">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-688">Jeder Bruchteil der `value` Parameter vor der Konvertierung abgeschnitten wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-688">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="1f479-689">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-689">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-690">Da die Konvertierung von <xref:System.Decimal> auf <xref:System.Numerics.BigInteger> können zwar Abschneiden Nachkommastellen der `value`, Sprachcompiler Ausführen dieser Konvertierung nicht automatisch.</span><span class="sxs-lookup"><span data-stu-id="1f479-690">Because the conversion from <xref:System.Decimal> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="1f479-691">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-691">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-692">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-692">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="1f479-693">Für Sprachen, die benutzerdefinierte Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-693">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="1f479-694">Das folgende Beispiel konvertiert die einzelnen Elemente in einem Array von <xref:System.Decimal> Werte <xref:System.Numerics.BigInteger> Objekte, und klicken Sie dann das Ergebnis jeder Konvertierung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-694">The following example converts the individual elements in an array of <xref:System.Decimal> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="1f479-695">Beachten Sie, dass jeder Bruchteil Teil einer <xref:System.Decimal> Wert wird bei der Konvertierung abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="1f479-695">Note that any fractional part of a <xref:System.Decimal> value is truncated during the conversion.</span></span>   

 [!code-csharp[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#1)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-696">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-696">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-697">Definiert eine explizite Konvertierung eines <see cref="T:System.Double" />-Werts in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-697">Defines an explicit conversion of a <see cref="T:System.Double" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-698">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-698">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-699">Jeder Bruchteil der `value` Parameter vor der Konvertierung abgeschnitten wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-699">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="1f479-700">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-700">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-701">Da die Konvertierung von <xref:System.Double> auf <xref:System.Numerics.BigInteger> können zwar Abschneiden Nachkommastellen der `value`, Sprachcompiler Ausführen dieser Konvertierung nicht automatisch.</span><span class="sxs-lookup"><span data-stu-id="1f479-701">Because the conversion from <xref:System.Double> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="1f479-702">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-702">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-703">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-703">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="1f479-704">Für Sprachen, die benutzerdefinierte Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-704">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="1f479-705">Das folgende Beispiel konvertiert die einzelnen Elemente in einem Array von <xref:System.Double> Werte <xref:System.Numerics.BigInteger> Objekte, und klicken Sie dann das Ergebnis jeder Konvertierung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-705">The following example converts the individual elements in an array of <xref:System.Double> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="1f479-706">Beachten Sie, dass jeder Bruchteil Teil einer <xref:System.Double> Wert wird bei der Konvertierung abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="1f479-706">Note that any fractional part of a <xref:System.Double> value is truncated during the conversion.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#2)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-707">Der Wert von <paramref name="value" /> ist <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-707">The value of <paramref name="value" /> is <see cref="F:System.Double.NaN" />.</span>
          </span>
          <span data-ttu-id="1f479-708">Oder:  Der Wert von <paramref name="value" /> ist <see cref="F:System.Double.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-708">-or-  The value of <paramref name="value" /> is <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
          <span data-ttu-id="1f479-709">Oder:  Der Wert von <paramref name="value" /> ist <see cref="F:System.Double.NegativeInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-709">-or-  The value of <paramref name="value" /> is <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; byte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-710">Der Wert, der in einen <see cref="T:System.Byte" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-710">The value to convert to a <see cref="T:System.Byte" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-711">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen Bytewert ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-711">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned byte value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-712">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-712">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-713">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-713">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-714">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-714">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-715">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CByte` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-715">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CByte` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-716">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-716">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="1f479-717">Da dieser Vorgang eine einschränkende Konvertierung definiert, löst es eine <xref:System.OverflowException> zur Laufzeit Wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Byte> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-717">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="1f479-718">Es ist kein Verlust der Genauigkeit im resultierenden <xref:System.Byte> Wert, wenn die Konvertierung erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-718">There is no loss of precision in the resulting <xref:System.Byte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="1f479-719">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.Byte> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-719">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Byte> values.</span></span> <span data-ttu-id="1f479-720">Es behandelt auch ein <xref:System.OverflowException> , die ausgelöst wird, da die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Byte> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-720">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-721">Der Wert von <paramref name="value" /> beträgt weniger als <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-721">The value of <paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
          <span data-ttu-id="1f479-722">Oder:  Der Wert von <paramref name="value" /> ist größer als <see cref="F:System.Byte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-722">-or-  The value of <paramref name="value" /> is greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; decimal" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-723">Der Wert, der in einen <see cref="T:System.Decimal" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-723">The value to convert to a <see cref="T:System.Decimal" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-724">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen <see cref="T:System.Decimal" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-724">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Decimal" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-725">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-725">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-726">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-726">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-727">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-727">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-728">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CDec` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-728">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDec` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="1f479-729">Da dieser Vorgang eine einschränkende Konvertierung definiert, löst es eine <xref:System.OverflowException> zur Laufzeit Wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Decimal> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-729">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span> 

## Examples
 <span data-ttu-id="1f479-730">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.Decimal> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-730">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Decimal> values.</span></span> <span data-ttu-id="1f479-731">Es behandelt auch ein <xref:System.OverflowException> , die ausgelöst wird, da die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Decimal> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-731">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-732">Der Wert von <paramref name="value" /> beträgt weniger als <see cref="F:System.Decimal.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-732">The value of <paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" />.</span>
          </span>
          <span data-ttu-id="1f479-733">Oder:  Der Wert von <paramref name="value" /> ist größer als <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-733">-or-  The value of <paramref name="value" /> is greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-734">Der Wert, der in einen <see cref="T:System.Double" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-734">The value to convert to a <see cref="T:System.Double" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-735">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen <see cref="T:System.Double" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-735">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Double" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-736">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-736">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-737">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-737">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-738">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-738">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-739">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CDbl` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-739">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDbl` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="1f479-740">Da die <xref:System.Numerics.BigInteger> Werte sind möglich außerhalb des Bereichs der der <xref:System.Double> -Datentyp, dieser Vorgang ist eine einschränkende Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="1f479-740">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Double> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="1f479-741">Wenn die Konvertierung fehlschlägt, löst eine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-741">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-742">Stattdessen, wenn die <xref:System.Numerics.BigInteger> Wert ist kleiner als <xref:System.Double.MinValue?displayProperty=nameWithType>, das resultierende <xref:System.Double> Wert <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-742">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Double.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1f479-743">Wenn die <xref:System.Numerics.BigInteger> Wert ist größer als <xref:System.Double.MaxValue?displayProperty=nameWithType>, das resultierende <xref:System.Double> Wert <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-743">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span>
 
 <span data-ttu-id="1f479-744">Die Konvertierung von einem <xref:System.Numerics.BigInteger> auf eine <xref:System.Double> u. einem Genauigkeitsverlust.</span><span class="sxs-lookup"><span data-stu-id="1f479-744">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Double> may involve a loss of precision.</span></span> <span data-ttu-id="1f479-745">In einigen Fällen der Verlust an Genauigkeit kann bewirken, dass die Umwandlung oder Konvertierung Operation erfolgreich ausgeführt werden kann auch dann, wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Double> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-745">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Double> data type.</span></span> <span data-ttu-id="1f479-746">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1f479-746">The following example provides an illustration.</span></span> <span data-ttu-id="1f479-747">Weist den Maximalwert einer <xref:System.Double> auf zwei <xref:System.Numerics.BigInteger> Variablen, erhöht eine <xref:System.Numerics.BigInteger> Variable, indem Sie um 9. 999e291 und testet, ob die zwei Variablen auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="1f479-747">It assigns the maximum value of a <xref:System.Double> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="1f479-748">Wie erwartet, den Aufruf der <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> -Methode zeigt, dass sie ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="1f479-748">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="1f479-749">Allerdings die Konvertierung des größeren <xref:System.Numerics.BigInteger> Wert zurück, in eine <xref:System.Double> erfolgreich ist, obwohl die <xref:System.Numerics.BigInteger> Wert überschreitet, jetzt <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-749">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Double> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#4)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#4)]   



## Examples
 <span data-ttu-id="1f479-750">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.Double> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-750">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Double> values.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-751">Der Wert, der in eine 16-Bit-Ganzzahl mit Vorzeichen konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-751">The value to convert to a 16-bit signed integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-752">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 16-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-752">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 16-bit signed integer value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-753">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-753">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-754">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-754">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-755">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-755">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-756">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CShort` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-756">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CShort` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-757">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-757">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="1f479-758">Da dieser Vorgang eine einschränkende Konvertierung definiert, löst es eine <xref:System.OverflowException> zur Laufzeit Wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Int16> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-758">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span> <span data-ttu-id="1f479-759">Es ist kein Verlust der Genauigkeit im resultierenden <xref:System.Int16> Wert, wenn die Konvertierung erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-759">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="1f479-760">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.Int16> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-760">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int16> values.</span></span> <span data-ttu-id="1f479-761">Es behandelt auch ein <xref:System.OverflowException> , die ausgelöst wird, da die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Int16> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-761">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-762">Der Wert von <paramref name="value" /> beträgt weniger als <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-762">The value of <paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
          <span data-ttu-id="1f479-763">Oder:  Der Wert von <paramref name="value" /> ist größer als <see cref="F:System.Int16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-763">-or-  The value of <paramref name="value" /> is greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-764">Der Wert, der in eine 32-Bit-Ganzzahl mit Vorzeichen konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-764">The value to convert to a 32-bit signed integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-765">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 32-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-765">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 32-bit signed integer value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-766">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-766">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-767">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-767">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-768">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-768">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-769">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CInt` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-769">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CInt` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-770">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-770">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="1f479-771">Da dieser Vorgang eine einschränkende Konvertierung definiert, löst es eine <xref:System.OverflowException> zur Laufzeit Wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Int32> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-771">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="1f479-772">Es ist kein Verlust der Genauigkeit im resultierenden <xref:System.Int16> Wert, wenn die Konvertierung erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-772">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="1f479-773">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.Int32> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-773">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int32> values.</span></span> <span data-ttu-id="1f479-774">Es behandelt auch ein <xref:System.OverflowException> , die ausgelöst wird, da die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Int32> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-774">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#5)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-775">Der Wert von <paramref name="value" /> beträgt weniger als <see cref="F:System.Int32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-775">The value of <paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" />.</span>
          </span>
          <span data-ttu-id="1f479-776">Oder:  Der Wert von <paramref name="value" /> ist größer als <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-776">-or-  The value of <paramref name="value" /> is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-777">Der Wert, der in eine 64-Bit-Ganzzahl mit Vorzeichen konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-777">The value to convert to a 64-bit signed integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-778">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 64-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-778">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 64-bit signed integer value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-779">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-779">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-780">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-780">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-781">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-781">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-782">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CLng` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-782">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CLng` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-783">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-783">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="1f479-784">Da dieser Vorgang eine einschränkende Konvertierung definiert, löst es eine <xref:System.OverflowException> zur Laufzeit Wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Int64> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-784">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span> 

## Examples
 <span data-ttu-id="1f479-785">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.Int64> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-785">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int64> values.</span></span> <span data-ttu-id="1f479-786">Es behandelt auch ein <xref:System.OverflowException> , die ausgelöst wird, da die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Int64> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-786">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#6)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-787">Der Wert von <paramref name="value" /> beträgt weniger als <see cref="F:System.Int64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-787">The value of <paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" />.</span>
          </span>
          <span data-ttu-id="1f479-788">Oder:  Der Wert von <paramref name="value" /> ist größer als <see cref="F:System.Int64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-788">-or-  The value of <paramref name="value" /> is greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; sbyte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-789">Der Wert, der in einen 8-Bit-Wert mit Vorzeichen konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-789">The value to convert to a signed 8-bit value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-790">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen 8-Bit-Wert mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-790">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a signed 8-bit value.</span>
          </span>
          <span data-ttu-id="1f479-791">Diese API ist nicht CLS-kompatibel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-791">This API is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="1f479-792">Die kompatible Alternative ist <see cref="T:System.Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-792">The compliant alternative is <see cref="T:System.Int16" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-793">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-793">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-794">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-794">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-795">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-795">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-796">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CSByte` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-796">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSByte` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-797">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-797">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="1f479-798">Da dieser Vorgang eine einschränkende Konvertierung definiert, löst es eine <xref:System.OverflowException> zur Laufzeit Wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.SByte> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-798">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span> <span data-ttu-id="1f479-799">Es ist kein Verlust der Genauigkeit im resultierenden <xref:System.SByte> Wert, wenn die Konvertierung erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-799">There is no loss of precision in the resulting <xref:System.SByte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="1f479-800">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.SByte> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-800">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.SByte> values.</span></span> <span data-ttu-id="1f479-801">Es behandelt auch ein <xref:System.OverflowException> , die ausgelöst wird, da die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.SByte> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-801">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#7)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-802">Der Wert von <paramref name="value" /> beträgt weniger als <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-802">The value of <paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
          <span data-ttu-id="1f479-803">Oder:  Der Wert von <paramref name="value" /> ist größer als <see cref="F:System.SByte.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-803">-or-  The value of <paramref name="value" /> is greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
        <altCompliant cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; single" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-804">Der Wert, der in einen Gleitkommawert mit einfacher Genauigkeit konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-804">The value to convert to a single-precision floating-point value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-805">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen Gleitkommawert mit einfacher Genauigkeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-805">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a single-precision floating-point value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-806">Ein Objekt, das die nächstmögliche Darstellung des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-806">An object that contains the closest possible representation of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-807">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-807">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-808">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da dies zu Datenverlust oder einem Genauigkeitsverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-808">Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</span></span> <span data-ttu-id="1f479-809">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CSng` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-809">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSng` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-810">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-810">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="1f479-811">Da die <xref:System.Numerics.BigInteger> Werte sind möglich außerhalb des Bereichs der der <xref:System.Single> -Datentyp, dieser Vorgang ist eine einschränkende Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="1f479-811">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Single> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="1f479-812">Wenn die Konvertierung fehlschlägt, löst eine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-812">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-813">Stattdessen, wenn die <xref:System.Numerics.BigInteger> Wert ist kleiner als <xref:System.Single.MinValue?displayProperty=nameWithType>, das resultierende <xref:System.Single> Wert <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-813">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Single.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1f479-814">Wenn die <xref:System.Numerics.BigInteger> Wert ist größer als <xref:System.Single.MaxValue?displayProperty=nameWithType>, das resultierende <xref:System.Single> Wert <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-814">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Single.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="1f479-815">Die Konvertierung von einem <xref:System.Numerics.BigInteger> auf eine <xref:System.Single> u. einem Genauigkeitsverlust.</span><span class="sxs-lookup"><span data-stu-id="1f479-815">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Single> may involve a loss of precision.</span></span> <span data-ttu-id="1f479-816">In einigen Fällen der Verlust an Genauigkeit kann bewirken, dass die Umwandlung oder Konvertierung Operation erfolgreich ausgeführt werden kann auch dann, wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.Single> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-816">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Single> data type.</span></span> <span data-ttu-id="1f479-817">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="1f479-817">The following example provides an illustration.</span></span> <span data-ttu-id="1f479-818">Weist den Maximalwert einer <xref:System.Single> auf zwei <xref:System.Numerics.BigInteger> Variablen, erhöht eine <xref:System.Numerics.BigInteger> Variable, indem Sie um 9. 999e291 und testet, ob die zwei Variablen auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="1f479-818">It assigns the maximum value of a <xref:System.Single> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="1f479-819">Wie erwartet, den Aufruf der <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> -Methode zeigt, dass sie ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="1f479-819">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="1f479-820">Allerdings die Konvertierung des größeren <xref:System.Numerics.BigInteger> Wert zurück, in eine <xref:System.Single> erfolgreich ist, obwohl die <xref:System.Numerics.BigInteger> Wert überschreitet, jetzt <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-820">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Single> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#5)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#5)]   



## Examples
 <span data-ttu-id="1f479-821">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.Single> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-821">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Single> values.</span></span>   
     
 [!code-csharp[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#8)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-822">Der Wert, der in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-822">The value to convert to an unsigned 16-bit integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-823">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 16-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-823">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 16-bit integer value.</span>
          </span>
          <span data-ttu-id="1f479-824">Diese API ist nicht CLS-kompatibel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-824">This API is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="1f479-825">Die kompatible Alternative ist <see cref="T:System.Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-825">The compliant alternative is <see cref="T:System.Int32" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-826">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-826">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-827">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-827">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-828">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-828">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-829">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CUShort` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-829">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUShort` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-830">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-830">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="1f479-831">Da dieser Vorgang eine einschränkende Konvertierung definiert, löst es eine <xref:System.OverflowException> zur Laufzeit Wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.UInt16> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-831">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span> <span data-ttu-id="1f479-832">Es ist kein Verlust der Genauigkeit im resultierenden <xref:System.UInt16> Wert, wenn die Konvertierung erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-832">There is no loss of precision in the resulting <xref:System.UInt16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="1f479-833">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.UInt16> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-833">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt16> values.</span></span> <span data-ttu-id="1f479-834">Es behandelt auch ein <xref:System.OverflowException> , die ausgelöst wird, da die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.UInt16> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-834">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#9)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#9)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-835">Der Wert von <paramref name="value" /> beträgt weniger als <see cref="F:System.UInt16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-835">The value of <paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" />.</span>
          </span>
          <span data-ttu-id="1f479-836">Oder:  Der Wert von <paramref name="value" /> ist größer als <see cref="F:System.UInt16.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-836">-or-  The value of <paramref name="value" /> is greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
        <altCompliant cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint32" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-837">Der Wert, der in eine 32-Bit-Ganzzahl ohne Vorzeichen konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-837">The value to convert to an unsigned 32-bit integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-838">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 32-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-838">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 32-bit integer value.</span>
          </span>
          <span data-ttu-id="1f479-839">Diese API ist nicht CLS-kompatibel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-839">This API is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="1f479-840">Die kompatible Alternative ist <see cref="T:System.Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-840">The compliant alternative is <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-841">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-841">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-842">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-842">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-843">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-843">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-844">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CUInt` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-844">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUInt` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-845">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-845">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="1f479-846">Da dieser Vorgang eine einschränkende Konvertierung definiert, löst es eine <xref:System.OverflowException> zur Laufzeit Wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.UInt32> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-846">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span> <span data-ttu-id="1f479-847">Es ist kein Verlust der Genauigkeit im resultierenden <xref:System.UInt32> Wert, wenn die Konvertierung erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-847">There is no loss of precision in the resulting <xref:System.UInt32> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="1f479-848">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.UInt32> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-848">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt32> values.</span></span> <span data-ttu-id="1f479-849">Es behandelt auch ein <xref:System.OverflowException> , die ausgelöst wird, da die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.UInt32> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-849">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#10)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#10)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-850">Der Wert von <paramref name="value" /> beträgt weniger als <see cref="F:System.UInt32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-850">The value of <paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" />.</span>
          </span>
          <span data-ttu-id="1f479-851">Oder:  Der Wert von <paramref name="value" /> ist größer als <see cref="F:System.UInt32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-851">-or-  The value of <paramref name="value" /> is greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
        <altCompliant cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-852">Der Wert, der in eine 64-Bit-Ganzzahl ohne Vorzeichen konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-852">The value to convert to an unsigned 64-bit integer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-853">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 64-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-853">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 64-bit integer value.</span>
          </span>
          <span data-ttu-id="1f479-854">Diese API ist nicht CLS-kompatibel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-854">This API is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="1f479-855">Die kompatible Alternative ist <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-855">The compliant alternative is <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-856">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-856">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-857">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-857">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-858">Sprachcompiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlust führen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-858">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="1f479-859">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` oder `CULng` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-859">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CULng` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-860">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-860">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="1f479-861">Da dieser Vorgang eine einschränkende Konvertierung definiert, löst es eine <xref:System.OverflowException> zur Laufzeit Wenn die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.UInt64> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-861">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span> <span data-ttu-id="1f479-862">Es ist kein Verlust der Genauigkeit im resultierenden <xref:System.UInt64> Wert, wenn die Konvertierung erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-862">There is no loss of precision in the resulting <xref:System.UInt64> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="1f479-863">Das folgende Beispiel veranschaulicht die Konvertierung von <xref:System.Numerics.BigInteger> zu <xref:System.UInt64> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-863">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt64> values.</span></span> <span data-ttu-id="1f479-864">Es behandelt auch ein <xref:System.OverflowException> , die ausgelöst wird, da die <xref:System.Numerics.BigInteger> Wert liegt außerhalb des Bereichs von der <xref:System.UInt64> -Datentyp.</span><span class="sxs-lookup"><span data-stu-id="1f479-864">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#11)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#11)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-865">Der Wert von <paramref name="value" /> beträgt weniger als <see cref="F:System.UInt64.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-865">The value of <paramref name="value" /> is less than <see cref="F:System.UInt64.MinValue" />.</span>
          </span>
          <span data-ttu-id="1f479-866">Oder:  Der Wert von <paramref name="value" /> ist größer als <see cref="F:System.UInt64.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-866">-or-  The value of <paramref name="value" /> is greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-867">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-867">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-868">Definiert eine explizite Konvertierung eines <see cref="T:System.Single" />-Werts in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-868">Defines an explicit conversion of a <see cref="T:System.Single" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-869">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-869">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-870">Jeder Bruchteil der `value` Parameter vor der Konvertierung abgeschnitten wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-870">Any fractional part of the `value` parameter is truncated before conversion.</span></span>
 
 <span data-ttu-id="1f479-871">Die Überladungen der <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus dem eine <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-871">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="1f479-872">Da die Konvertierung von <xref:System.Single> auf <xref:System.Numerics.BigInteger> können zwar Abschneiden Nachkommastellen der `value`, Sprachcompiler Ausführen dieser Konvertierung nicht automatisch.</span><span class="sxs-lookup"><span data-stu-id="1f479-872">Because the conversion from <xref:System.Single> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="1f479-873">Stattdessen führen sie die Konvertierung nur dann, wenn ein Umwandlungsoperator (in c#) oder eine Konvertierungsfunktion (z. B. `CType` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-873">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="1f479-874">Andernfalls zeigen sie einen Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="1f479-874">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="1f479-875">Für Sprachen, die benutzerdefinierte Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-875">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="1f479-876">Das folgende Beispiel konvertiert die einzelnen Elemente in einem Array von <xref:System.Single> Werte <xref:System.Numerics.BigInteger> Objekte, und klicken Sie dann das Ergebnis jeder Konvertierung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-876">The following example converts the individual elements in an array of <xref:System.Single> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="1f479-877">Beachten Sie, dass jeder Bruchteil Teil einer <xref:System.Single> Wert wird bei der Konvertierung abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="1f479-877">Note that any fractional part of a <xref:System.Single> value is truncated during the conversion.</span></span>
 
 [!code-csharp[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#3)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="1f479-878">Der Wert von <paramref name="value" /> ist <see cref="F:System.Single.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-878">The value of <paramref name="value" /> is <see cref="F:System.Single.NaN" />.</span>
          </span>
          <span data-ttu-id="1f479-879">Oder:  Der Wert von <paramref name="value" /> ist <see cref="F:System.Single.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-879">-or-  The value of <paramref name="value" /> is <see cref="F:System.Single.PositiveInfinity" />.</span>
          </span>
          <span data-ttu-id="1f479-880">Oder:  Der Wert von <paramref name="value" /> ist <see cref="F:System.Single.NegativeInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-880">-or-  The value of <paramref name="value" /> is <see cref="F:System.Single.NegativeInfinity" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-881">Gibt einen Wert zurück, der angibt, ob ein angegebener Wert größer als ein anderer angegebener Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-881">Returns a value that indicates whether a specified value is greater than another specified value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-882">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-882">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-883">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-883">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-884">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen größer als ein <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-884">Returns a value that indicates whether a 64-bit signed integer is greater than a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-885">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-885">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-886">Die <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert, den Vorgang des größer-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-886">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-887">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-887">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#9)]
 [!code-vb[System.Numerics.BigInteger.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#9)]  
  
 <span data-ttu-id="1f479-888">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> -Instanzmethode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-888">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span> <span data-ttu-id="1f479-889">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-889">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#10)]  
  
 <span data-ttu-id="1f479-890">Wenn `left` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-890">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-891">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-891">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-892">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-892">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-893">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-893">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-894">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" /> größer als der Wert einer 64-Bit-Ganzzahl mit Vorzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-894">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> is greater than a 64-bit signed integer value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-895">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-895">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-896">Die <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert, den Vorgang des größer-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-896">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-897">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-897">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#11)]
 [!code-vb[System.Numerics.BigInteger.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#11)]  
  
 <span data-ttu-id="1f479-898">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-898">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-899">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-899">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#12)]  
  
 <span data-ttu-id="1f479-900">Wenn `right` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-900">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-901">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-901">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-902">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-902">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-903">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-903">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-904">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als ein anderer <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-904">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than another <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-905">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-905">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-906">Die <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert, den Vorgang des größer-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-906">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-907">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-907">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#20)]
 [!code-vb[System.Numeric.BigInteger.Class#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#20)]  
  
 <span data-ttu-id="1f479-908">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-908">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-909">Sie können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-909">They can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#21)]  
  
 <span data-ttu-id="1f479-910">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-910">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-911">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-911">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-912">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-912">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-913">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als eine 64-Bit-Ganzzahl ohne Vorzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-913">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-914">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-914">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-915">Die <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert, den Vorgang des größer-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-915">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-916">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-916">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#13)]
 [!code-vb[System.Numerics.BigInteger.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#13)]  
  
 <span data-ttu-id="1f479-917">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-917">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-918">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-918">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-919">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-919">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-920">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-920">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-921">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als eine 64-Bit-Ganzzahl ohne Vorzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-921">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-922">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-922">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-923">Die <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert, den Vorgang des größer-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-923">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-924">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-924">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#15)]
 [!code-vb[System.Numerics.BigInteger.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#15)]  
  
 <span data-ttu-id="1f479-925">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-925">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-926">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-926">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-927">Gibt einen Wert zurück, der angibt, ob ein angegebener Wert größer oder gleich einem anderen angegebenen Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-927">Returns a value that indicates whether a specified value is greater than or equal to another specified value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-928">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-928">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-929">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-929">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-930">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen größer als ein oder gleich einem <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-930">Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-931">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-931">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-932">Die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert, den Vorgang, der größer als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-932">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-933">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-933">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#17)]
 [!code-vb[System.Numerics.BigInteger.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#17)]  
  
 <span data-ttu-id="1f479-934">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-934">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-935">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-935">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#18)]  
  
 <span data-ttu-id="1f479-936">Wenn `left` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-936">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-937">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-937">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-938">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-938">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-939">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-939">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-940">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als der oder gleich dem Wert einer 64-Bit-Ganzzahl mit Vorzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-940">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit signed integer value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-941">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-941">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-942">Die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert, den Vorgang, der größer als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-942">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-943">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-943">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#19)]
 [!code-vb[System.Numerics.BigInteger.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#19)]  
  
 <span data-ttu-id="1f479-944">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-944">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-945">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-945">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#20)]  
  
 <span data-ttu-id="1f479-946">Wenn `right` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-946">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-947">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-947">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-948">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-948">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-949">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-949">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-950">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer oder gleich einem anderen <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-950">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-951">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-951">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-952">Die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert, den Vorgang, der größer als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-952">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-953">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-953">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#22)]
 [!code-vb[System.Numeric.BigInteger.Class#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#22)]  
  
 <span data-ttu-id="1f479-954">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-954">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-955">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-955">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#23)]  
  
 <span data-ttu-id="1f479-956">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-956">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-957">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-957">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-958">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-958">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-959">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als der oder gleich dem Wert einer 64-Bit-Ganzzahl ohne Vorzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-959">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit unsigned integer value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-960">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-960">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-961">Die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert, den Vorgang, der größer als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-961">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-962">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-962">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#21)]
 [!code-vb[System.Numerics.BigInteger.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#21)]  
  
 <span data-ttu-id="1f479-963">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-963">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-964">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-964">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#22)]  
  
 <span data-ttu-id="1f479-965">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-965">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-966">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-966">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-967">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-967">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-968">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen größer als ein oder gleich einem <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-968">Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-969">
            <see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-969">
              <see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-970">Die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert, den Vorgang, der größer als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-970">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-971">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-971">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#23)]
 [!code-vb[System.Numerics.BigInteger.Operators#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#23)]  
  
 <span data-ttu-id="1f479-972">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-972">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-973">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-973">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#24)]  
  
 <span data-ttu-id="1f479-974">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-974">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-975">Definiert eine implizite Konvertierung zwischen einem <see cref="T:System.Numerics.BigInteger" />-Objekt und einem anderen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-975">Defines an implicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-976">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-976">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-977">Definiert eine implizite Konvertierung eines Bytewerts ohne Vorzeichen in ein <see cref="T:System.Numerics.BigInteger" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-977">Defines an implicit conversion of an unsigned byte to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-978">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-978">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-979">Jeder Bruchteil der `value` Parameter vor der Konvertierung abgeschnitten wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-979">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="1f479-980">Für Sprachen, die implizite Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-980">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="1f479-981">Die Überladungen der <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus der ein Compiler automatisch konvertieren kann ein <xref:System.Numerics.BigInteger> Wert ohne einen expliziten Umwandlungsoperator (in c#) oder einen Aufruf für eine Konvertierungsfunktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f479-981">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="1f479-982">Sie sind erweiterungskonvertierungen, die beinhalten keine Daten verloren gehen, und lösen Sie keine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-982">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-983">Diese Überladung kann den Compiler Konvertierungen von verarbeitet eine <xref:System.Byte> -Wert in einen <xref:System.Numerics.BigInteger> Wert, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-983">This overload lets the compiler handle conversions from a <xref:System.Byte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-984">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-984">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-985">Definiert eine implizite Konvertierung einer 16-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-985">Defines an implicit conversion of a signed 16-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-986">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-986">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-987">Für Sprachen, die implizite Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-987">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="1f479-988">Die Überladungen der <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus der ein Compiler automatisch konvertieren kann ein <xref:System.Numerics.BigInteger> Wert ohne einen expliziten Umwandlungsoperator (in c#) oder einen Aufruf für eine Konvertierungsfunktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f479-988">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="1f479-989">Sie sind erweiterungskonvertierungen, die beinhalten keine Daten verloren gehen, und lösen Sie keine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-989">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-990">Diese Überladung kann den Compiler Konvertierungen von verarbeitet eine <xref:System.Int16> -Wert in einen <xref:System.Numerics.BigInteger> Wert, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-990">This overload lets the compiler handle conversions from a <xref:System.Int16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#2)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#2)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-991">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-991">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-992">Definiert eine implizite Konvertierung einer 32-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-992">Defines an implicit conversion of a signed 32-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-993">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-993">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-994">Für Sprachen, die implizite Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-994">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="1f479-995">Die Überladungen der <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus der ein Compiler automatisch konvertieren kann ein <xref:System.Numerics.BigInteger> Wert ohne einen expliziten Umwandlungsoperator (in c#) oder einen Aufruf für eine Konvertierungsfunktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f479-995">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="1f479-996">Sie sind erweiterungskonvertierungen, die beinhalten keine Daten verloren gehen, und lösen Sie keine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-996">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-997">Diese Überladung kann den Compiler Konvertierungen von verarbeitet eine <xref:System.Int32> -Wert in einen <xref:System.Numerics.BigInteger> Wert, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-997">This overload lets the compiler handle conversions from a <xref:System.Int32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-998">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-998">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-999">Definiert eine implizite Konvertierung einer 64-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-999">Defines an implicit conversion of a signed 64-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1000">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1000">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1001">Für Sprachen, die implizite Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1001">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span></span>   
 
 <span data-ttu-id="1f479-1002">Die Überladungen der <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus der ein Compiler automatisch konvertieren kann ein <xref:System.Numerics.BigInteger> Wert ohne einen expliziten Umwandlungsoperator (in c#) oder einen Aufruf für eine Konvertierungsfunktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f479-1002">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="1f479-1003">Sie sind erweiterungskonvertierungen, die beinhalten keine Daten verloren gehen, und lösen Sie keine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1003">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-1004">Diese Überladung kann den Compiler Konvertierungen von verarbeitet eine <xref:System.Int64> -Wert in einen <xref:System.Numerics.BigInteger> Wert, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1004">This overload lets the compiler handle conversions from a <xref:System.Int64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#4)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1005">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1005">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1006">Definiert eine implizite Konvertierung einer 8-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1006">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
          <span data-ttu-id="1f479-1007">Diese API ist nicht CLS-kompatibel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1007">This API is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="1f479-1008">Die kompatible Alternative ist <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1008">The compliant alternative is <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1009">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1009">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1010">Für Sprachen, die implizite Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1010">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="1f479-1011">Die Überladungen der <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus der ein Compiler automatisch konvertieren kann ein <xref:System.Numerics.BigInteger> Wert ohne einen expliziten Umwandlungsoperator (in c#) oder einen Aufruf für eine Konvertierungsfunktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f479-1011">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="1f479-1012">Sie sind erweiterungskonvertierungen, die beinhalten keine Daten verloren gehen, und lösen Sie keine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1012">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-1013">Diese Überladung kann den Compiler Konvertierungen von verarbeitet eine <xref:System.SByte> -Wert in einen <xref:System.Numerics.BigInteger> Wert, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1013">This overload lets the compiler handle conversions from a <xref:System.SByte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#5)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1014">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1014">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1015">Definiert eine implizite Konvertierung einer 16-Bit-Ganzzahl ohne Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1015">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
          <span data-ttu-id="1f479-1016">Diese API ist nicht CLS-kompatibel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1016">This API is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="1f479-1017">Die kompatible Alternative ist <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1017">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1018">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1018">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1019">Für Sprachen, die implizite Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1019">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="1f479-1020">Die Überladungen der <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus der ein Compiler automatisch konvertieren kann ein <xref:System.Numerics.BigInteger> Wert ohne einen expliziten Umwandlungsoperator (in c#) oder einen Aufruf für eine Konvertierungsfunktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f479-1020">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="1f479-1021">Sie sind erweiterungskonvertierungen, die beinhalten keine Daten verloren gehen, und lösen Sie keine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1021">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-1022">Diese Überladung kann den Compiler Konvertierungen von verarbeitet eine <xref:System.UInt16> -Wert in einen <xref:System.Numerics.BigInteger> Wert, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1022">This overload lets the compiler handle conversions from a <xref:System.UInt16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#6)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1023">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1023">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1024">Definiert eine implizite Konvertierung einer 32-Bit-Ganzzahl ohne Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1024">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
          <span data-ttu-id="1f479-1025">Diese API ist nicht CLS-kompatibel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1025">This API is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="1f479-1026">Die kompatible Alternative ist <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1026">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1027">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1027">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1028">Für Sprachen, die implizite Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1028">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="1f479-1029">Die Überladungen der <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus der ein Compiler automatisch konvertieren kann ein <xref:System.Numerics.BigInteger> Wert ohne einen expliziten Umwandlungsoperator (in c#) oder einen Aufruf für eine Konvertierungsfunktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f479-1029">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="1f479-1030">Sie sind erweiterungskonvertierungen, die beinhalten keine Daten verloren gehen, und lösen Sie keine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1030">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-1031">Diese Überladung kann den Compiler Konvertierungen von verarbeitet eine <xref:System.UInt32> -Wert in einen <xref:System.Numerics.BigInteger> Wert, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1031">This overload lets the compiler handle conversions from a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#7)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1032">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1032">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1033">Definiert eine implizite Konvertierung einer 64-Bit-Ganzzahl ohne Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1033">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
          <span data-ttu-id="1f479-1034">Diese API ist nicht CLS-kompatibel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1034">This API is not CLS-compliant.</span>
          </span>
          <span data-ttu-id="1f479-1035">Die kompatible Alternative ist <see cref="T:System.Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1035">The compliant alternative is <see cref="T:System.Double" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1036">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1036">An object that contains the value of the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1037">Für Sprachen, die implizite Operatoren nicht unterstützen, wird die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1037">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="1f479-1038">Die Überladungen der <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen aus, für die oder aus der ein Compiler automatisch konvertieren kann ein <xref:System.Numerics.BigInteger> Wert ohne einen expliziten Umwandlungsoperator (in c#) oder einen Aufruf für eine Konvertierungsfunktion (in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="1f479-1038">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="1f479-1039">Sie sind erweiterungskonvertierungen, die beinhalten keine Daten verloren gehen, und lösen Sie keine <xref:System.OverflowException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1039">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="1f479-1040">Diese Überladung kann den Compiler Konvertierungen von verarbeitet eine <xref:System.UInt64> -Wert in einen <xref:System.Numerics.BigInteger> Wert, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1040">This overload lets the compiler handle conversions from a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#8)]   

 ]]></format>
        </remarks>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ++ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Increment(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ++(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Increment : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Increment value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1041">Der zu inkrementierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1041">The value to increment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1042">Inkrementiert einen <see cref="T:System.Numerics.BigInteger" />-Wert um 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1042">Increments a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1043">Der um 1 inkrementierte Wert des <paramref name="value" />-Parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1043">The value of the <paramref name="value" /> parameter incremented by 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1044">Die <xref:System.Numerics.BigInteger.op_Increment%2A> Methode definiert, dem Inkrementieren negativ für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1044">The <xref:System.Numerics.BigInteger.op_Increment%2A> method defines the increment operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1045">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1045">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#24)]  
  
 <span data-ttu-id="1f479-1046">Einige Sprachen (z. B. Visual Basic), die eine Inkrementoperator fehlender oder Überladen von Operatoren nicht unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.op_Increment%2A> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1046">Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <xref:System.Numerics.BigInteger.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#25)]  
  
 <span data-ttu-id="1f479-1047">Da <xref:System.Numerics.BigInteger> Objekte sind unveränderlich, die <xref:System.Numerics.BigInteger.op_Increment%2A> Operator erstellt ein neues <xref:System.Numerics.BigInteger> Objekt, dessen Wert eine öfter als <xref:System.Numerics.BigInteger> Objekt dargestellte `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1047">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Increment%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one more than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="1f479-1048">Aus diesem Grund wiederholte Aufrufe von <xref:System.Numerics.BigInteger.op_Increment%2A> stark beanspruchen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1048">Therefore, repeated calls to <xref:System.Numerics.BigInteger.op_Increment%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="1f479-1049">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1049">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Inequality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1050">Gibt einen Wert zurück, der angibt, ob zwei numerische Werte ungleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1050">Returns a value that indicates whether two numeric values are not equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : int64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1051">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1051">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1052">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1052">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1053">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen und ein <see cref="T:System.Numerics.BigInteger" />-Wert ungleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1053">Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1054">
            <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1054">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1055">Die <xref:System.Numerics.BigInteger.op_Inequality%2A> -Methode definiert die Operation des Ungleichheitsoperators für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1055">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1056">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1056">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#25)]
 [!code-vb[System.Numerics.BigInteger.Operators#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#25)]  
  
 <span data-ttu-id="1f479-1057">Sprachen, die benutzerdefinierte Operatoren nicht unterstützen können auf Ungleichheit testen, indem Sie eine der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="1f479-1057">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="1f479-1058">Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> -Instanzmethode, womit die Beziehung zwischen einem <xref:System.Numerics.BigInteger> und eine lange Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1058">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="1f479-1059">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> -Instanzmethode und seinen Wert umkehren.</span><span class="sxs-lookup"><span data-stu-id="1f479-1059">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method and reversing its value.</span></span>  
  
 <span data-ttu-id="1f479-1060">Wenn `left` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1060">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * int64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1061">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1061">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1062">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1062">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1063">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert und eine 64-Bit-Ganzzahl mit Vorzeichen ungleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1063">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit signed integer are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1064">
            <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1064">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1065">Die <xref:System.Numerics.BigInteger.op_Inequality%2A> -Methode definiert die Operation des Ungleichheitsoperators für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1065">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1066">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1066">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#26)]
 [!code-vb[System.Numerics.BigInteger.Operators#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#26)]  
  
 <span data-ttu-id="1f479-1067">Sprachen, die benutzerdefinierte Operatoren nicht unterstützen können auf Ungleichheit testen, indem Sie eine der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="1f479-1067">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="1f479-1068">Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> -Methode, die die Beziehung zwischen angibt, eine <xref:System.Numerics.BigInteger> und eine lange Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1068">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="1f479-1069">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> -Methode und ihren Wert umkehren.</span><span class="sxs-lookup"><span data-stu-id="1f479-1069">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="1f479-1070">Wenn `right` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1070">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-1071">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1071">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1072">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1072">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1073">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1073">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1074">Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Numerics.BigInteger" />-Objekte über unterschiedliche Werte verfügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1074">Returns a value that indicates whether two <see cref="T:System.Numerics.BigInteger" /> objects have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1075">
            <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1075">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1076">Die <xref:System.Numerics.BigInteger.op_Inequality%2A> -Methode definiert die Operation des Ungleichheitsoperators für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1076">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1077">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1077">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#26)]
 [!code-vb[System.Numeric.BigInteger.Class#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#26)]  
  
 <span data-ttu-id="1f479-1078">Sprachen, die benutzerdefinierte Operatoren nicht unterstützen können auf Ungleichheit testen, indem Sie eine der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="1f479-1078">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="1f479-1079">Aufrufen der <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> Methode, die die Beziehung zwischen zwei angibt <xref:System.Numerics.BigInteger> Objekte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1079">Calling the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method, which indicates the relationship between two <xref:System.Numerics.BigInteger> objects.</span></span>  
  
-   <span data-ttu-id="1f479-1080">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> -Methode und ihren Wert umkehren.</span><span class="sxs-lookup"><span data-stu-id="1f479-1080">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="1f479-1081">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1081">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1082">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1082">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1083">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1083">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1084">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert und eine 64-Bit-Ganzzahl ohne Vorzeichen ungleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1084">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit unsigned integer are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1085">
            <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1085">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1086">Die <xref:System.Numerics.BigInteger.op_Inequality%2A> -Methode definiert die Operation des Ungleichheitsoperators für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1086">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1087">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1087">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#27)]
 [!code-vb[System.Numerics.BigInteger.Operators#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#27)]  
  
 <span data-ttu-id="1f479-1088">Sprachen, die benutzerdefinierte Operatoren nicht unterstützen können auf Ungleichheit testen, indem Sie eine der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="1f479-1088">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="1f479-1089">Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> -Methode, die die Beziehung zwischen angibt, eine <xref:System.Numerics.BigInteger> und unsigned long Integer-Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1089">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="1f479-1090">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> -Methode und ihren Wert umkehren.</span><span class="sxs-lookup"><span data-stu-id="1f479-1090">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1091">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1091">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1092">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1092">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1093">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen und ein <see cref="T:System.Numerics.BigInteger" />-Wert ungleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1093">Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1094">
            <see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1094">
              <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1095">Die <xref:System.Numerics.BigInteger.op_Inequality%2A> -Methode definiert die Operation des Ungleichheitsoperators für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1095">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1096">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1096">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#28)]
 [!code-vb[System.Numerics.BigInteger.Operators#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#28)]  
  
 <span data-ttu-id="1f479-1097">Sprachen, die benutzerdefinierte Operatoren nicht unterstützen können auf Ungleichheit testen, indem Sie eine der folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="1f479-1097">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="1f479-1098">Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> -Methode, die die Beziehung zwischen angibt, eine <xref:System.Numerics.BigInteger> und unsigned long Integer-Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1098">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="1f479-1099">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> -Methode und ihren Wert umkehren.</span><span class="sxs-lookup"><span data-stu-id="1f479-1099">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_LeftShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &lt;&lt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_LeftShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;&lt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &lt;&lt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &lt;&lt;&lt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &lt;&lt;&lt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1100">Der Wert, dessen Bits verschoben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1100">The value whose bits are to be shifted.</span>
          </span>
        </param>
        <param name="shift">
          <span data-ttu-id="1f479-1101">Die Anzahl der Bits, um die <c>value</c> nach links verschoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1101">The number of bits to shift <c>value</c> to the left.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1102">Verschiebt einen <see cref="T:System.Numerics.BigInteger" />-Wert um eine angegebene Anzahl von Bits nach links.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1102">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the left.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1103">Ein Wert, der um die angegebene Anzahl von Bits nach links verschoben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1103">A value that has been shifted to the left by the specified number of bits.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1104">Die <xref:System.Numerics.BigInteger.op_LeftShift%2A> Methode definiert, den Vorgang des bitweise Linksschiebe-Operators für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1104">The <xref:System.Numerics.BigInteger.op_LeftShift%2A> method defines the operation of the bitwise left-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1105">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1105">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#29)]
 [!code-vb[System.Numerics.BigInteger.Operators#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#29)]  
  
> [!NOTE]
>  <span data-ttu-id="1f479-1106">Im Gegensatz zu den bitweise Linksschiebeoperation mit ganzzahligen Primitiven der <xref:System.Numerics.BigInteger.op_LeftShift%2A> Methode behält die Vorzeichen des ursprünglichen <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1106">Unlike the bitwise left-shift operation with integer primitives, the <xref:System.Numerics.BigInteger.op_LeftShift%2A> method preserves the sign of the original <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="1f479-1107">Sprachen, die benutzerdefinierte Operatoren nicht unterstützen, können eine bitweise Linksschiebeoperation ausführen, durch Multiplikation `value` von `BigInteger.Pow(2, shift)`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1107">Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying `value` by `BigInteger.Pow(2, shift)`.</span></span> <span data-ttu-id="1f479-1108">Das folgende Beispiel zeigt, dass die Ergebnisse an die Ergebnisse der Verwendung dieses Operators identisch sind.</span><span class="sxs-lookup"><span data-stu-id="1f479-1108">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#30)]
 [!code-vb[System.Numerics.BigInteger.Operators#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1109">Gibt einen Wert zurück, der angibt, ob ein angegebener Wert kleiner als ein zweiter angegebener Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1109">Returns a value that indicates whether a specified value is less than a second specified value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1110">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1110">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1111">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1111">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1112">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen kleiner als ein <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1112">Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1113">
            <see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1113">
              <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1114">Die <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert, den Vorgang des kleiner-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1114">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1115">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1115">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#31)]
 [!code-vb[System.Numerics.BigInteger.Operators#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#31)]  
  
 <span data-ttu-id="1f479-1116">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1116">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-1117">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1117">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#32)]  
  
 <span data-ttu-id="1f479-1118">Wenn `left` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1118">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-1119">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1119">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1120">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1120">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1121">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1121">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1122">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als eine 64-Bit-Ganzzahl mit Vorzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1122">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1123">
            <see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1123">
              <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1124">Die <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert, den Vorgang des kleiner-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1124">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1125">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1125">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#33)]
 [!code-vb[System.Numerics.BigInteger.Operators#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#33)]  
  
 <span data-ttu-id="1f479-1126">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1126">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-1127">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1127">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#34)]  
  
 <span data-ttu-id="1f479-1128">Wenn `right` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1128">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-1129">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1129">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1130">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1130">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1131">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1131">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1132">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als ein anderer <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1132">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than another <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1133">
            <see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1133">
              <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1134">Die <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert, den Vorgang des kleiner-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1134">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1135">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1135">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#27)]
 [!code-vb[System.Numeric.BigInteger.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#27)]  
  
 <span data-ttu-id="1f479-1136">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1136">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-1137">Für einige Sprachen können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1137">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#28)]  
  
 <span data-ttu-id="1f479-1138">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1138">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1139">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1139">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1140">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1140">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1141">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als eine 64-Bit-Ganzzahl ohne Vorzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1141">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1142">
            <see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1142">
              <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1143">Die <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert, den Vorgang des kleiner-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1143">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1144">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1144">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#35)]
 [!code-vb[System.Numerics.BigInteger.Operators#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#35)]  
  
 <span data-ttu-id="1f479-1145">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1145">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-1146">Sie können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1146">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#36)]  
  
 <span data-ttu-id="1f479-1147">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1147">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1148">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1148">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1149">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1149">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1150">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen kleiner als ein <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1150">Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1151">
            <see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1151">
              <see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1152">Die <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert, den Vorgang des kleiner-als-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1152">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1153">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1153">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#37)]
 [!code-vb[System.Numerics.BigInteger.Operators#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#37)]  
  
 <span data-ttu-id="1f479-1154">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1154">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-1155">Sie können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1155">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#38)]  
  
 <span data-ttu-id="1f479-1156">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1156">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1157">Gibt einen Wert zurück, der angibt, ob ein angegebener Wert kleiner als oder gleich einem anderen Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1157">Returns a value that indicates whether a specified value is less than or equal to another specified value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1158">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1158">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1159">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1159">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1160">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen kleiner als ein oder gleich einem <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1160">Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1161">
            <see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1161">
              <see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1162">Die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert, den Vorgang, der kleiner als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1162">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1163">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1163">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#39)]
 [!code-vb[System.Numerics.BigInteger.Operators#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#39)]  
  
 <span data-ttu-id="1f479-1164">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1164">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-1165">Sie können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1165">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#40)]  
  
 <span data-ttu-id="1f479-1166">Wenn `left` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1166">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-1167">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1167">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1168">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1168">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1169">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1169">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1170">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als oder gleich einer 64-Bit-Ganzzahl mit Vorzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1170">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit signed integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1171">
            <see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1171">
              <see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1172">Die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert, den Vorgang, der kleiner als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1172">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1173">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1173">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#41)]
 [!code-vb[System.Numerics.BigInteger.Operators#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#41)]  
  
 <span data-ttu-id="1f479-1174">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1174">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-1175">Sie können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1175">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#42)]  
  
 <span data-ttu-id="1f479-1176">Wenn `right` ist ein <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, oder <xref:System.UInt32> er wird implizit konvertierte Wert, ein <xref:System.Int64> Wert, wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1176">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="1f479-1177">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1177">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1178">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1178">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1179">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1179">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1180">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner oder gleich einem anderen <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1180">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1181">
            <see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1181">
              <see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1182">Die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert, den Vorgang, der kleiner als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1182">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1183">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1183">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#29)]
 [!code-vb[System.Numeric.BigInteger.Class#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#29)]  
  
 <span data-ttu-id="1f479-1184">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Compare%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1184">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A> method instead.</span></span> <span data-ttu-id="1f479-1185">Sie können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1185">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#30)]  
  
 <span data-ttu-id="1f479-1186">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1186">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1187">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1187">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1188">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1188">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1189">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als oder gleich einer 64-Bit-Ganzzahl ohne Vorzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1189">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit unsigned integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1190">
            <see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1190">
              <see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1191">Die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert, den Vorgang, der kleiner als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1191">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1192">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1192">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#43)]
 [!code-vb[System.Numerics.BigInteger.Operators#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#43)]  
  
 <span data-ttu-id="1f479-1193">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1193">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-1194">Sie können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1194">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#44)]  
  
 <span data-ttu-id="1f479-1195">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1195">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1196">Der erste zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1196">The first value to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1197">Der zweite zu vergleichende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1197">The second value to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1198">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen kleiner als ein oder gleich einem <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1198">Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1199">
            <see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1199">
              <see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1200">Die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert, den Vorgang, der kleiner als oder gleich-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1200">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1201">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1201">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#45)]
 [!code-vb[System.Numerics.BigInteger.Operators#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#45)]  
  
 <span data-ttu-id="1f479-1202">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1202">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="1f479-1203">Sie können auch aufrufen, die <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> -Methode direkt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1203">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#46)]  
  
 <span data-ttu-id="1f479-1204">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1204">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator % (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Modulus(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator %(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( % ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend % divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend">
          <span data-ttu-id="1f479-1205">Der zu dividierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1205">The value to be divided.</span>
          </span>
        </param>
        <param name="divisor">
          <span data-ttu-id="1f479-1206">Der Wert, durch den dividiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1206">The value to divide by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1207">Gibt den Rest aus der Division zweier angegebener <see cref="T:System.Numerics.BigInteger" />-Werte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1207">Returns the remainder that results from division with two specified <see cref="T:System.Numerics.BigInteger" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1208">Der Rest, der sich aus der Division ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1208">The remainder that results from the division.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1209">Die <xref:System.Numerics.BigInteger.op_Modulus%2A> Methode definiert, die Operation des Modulus-Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1209">The <xref:System.Numerics.BigInteger.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1210">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1210">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#31)]
 [!code-vb[System.Numeric.BigInteger.Class#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#31)]  
  
 <span data-ttu-id="1f479-1211">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1211">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="1f479-1212">Die Vorzeichen des Werts durch die Modulo-Vorgang zurückgegeben wurden, hängt das Vorzeichen des `dividend`: Wenn `dividend` positiv ist, wird die Modulo-Operation ein positives Ergebnis zurück, wenn sie negativ ist, gibt die Modulo-Operation ein negatives Ergebnis zurück.</span><span class="sxs-lookup"><span data-stu-id="1f479-1212">The sign of the value returned by the modulus operation depends on the sign of `dividend`: If `dividend` is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</span></span> <span data-ttu-id="1f479-1213">Das Verhalten der Modulo-Operation mit <xref:System.Numerics.BigInteger> Werte ist identisch mit der Modulo-Operation mit anderen ganzzahligen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1213">The behavior of the modulus operation with <xref:System.Numerics.BigInteger> values is identical to the modulus operation with other integral types.</span></span>  
  
 <span data-ttu-id="1f479-1214">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1214">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="1f479-1215">
            <paramref name="divisor" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1215">
              <paramref name="divisor" /> is 0 (zero).</span>
          </span>
        </exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator * (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator *(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1216">Der erste zu multiplizierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1216">The first value to multiply.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1217">Der zweite zu multiplizierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1217">The second value to multiply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1218">Multipliziert zwei angegebene <see cref="T:System.Numerics.BigInteger" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1218">Multiplies two specified <see cref="T:System.Numerics.BigInteger" /> values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1219">Das Produkt von <paramref name="left" /> und <paramref name="right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1219">The product of <paramref name="left" /> and <paramref name="right" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1220">Die <xref:System.Numerics.BigInteger.op_Multiply%2A> Methode definiert, den Vorgang, der den Multiplikationsoperator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1220">The <xref:System.Numerics.BigInteger.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1221">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1221">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#11)]
 [!code-vb[System.Numeric.BigInteger.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#11)]  
  
 <span data-ttu-id="1f479-1222">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1222">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ~ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_OnesComplement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ~(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_OnesComplement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1223">Ein Ganzzahlwert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1223">An integer value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1224">Gibt das bitweise Einerkomplement eines <see cref="T:System.Numerics.BigInteger" />-Werts zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1224">Returns the bitwise one's complement of a <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1225">Das bitweise Einerkomplement von <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1225">The bitwise one's complement of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1226">Die <xref:System.Numerics.BigInteger.op_OnesComplement%2A> Methode definiert, den Vorgang des bitweisen Einerkomplementoperator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1226">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method defines the operation of the bitwise one's complement operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1227">Der bitweise Einerkomplementoperator kehrt jedes bit in einem numerischen Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1227">The bitwise one's complement operator reverses each bit in a numeric value.</span></span> <span data-ttu-id="1f479-1228">D. h. bits `value` , sind 0 werden in das Ergebnis auf 1 festgelegt, und Bits, die den Wert 1 haben, werden in das Ergebnis auf 0 festgelegt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1228">That is, bits in `value` that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</span></span> <span data-ttu-id="1f479-1229">Die <xref:System.Numerics.BigInteger.op_OnesComplement%2A> Methode ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="1f479-1229">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/cs/OnesComplement1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/OnesComplement1.vb#1)]  
  
 <span data-ttu-id="1f479-1230">Sprachen, die keine benutzerdefinierte Operatoren unterstützen möglicherweise in der Lage, rufen Sie die <xref:System.Numerics.BigInteger.op_OnesComplement%2A> -Methode direkt zur ein bitweises einer Person Vorgang ergänzen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1230">Languages that do not support custom operators may be able to call the <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method directly to perform a bitwise one's complement operation.</span></span> <span data-ttu-id="1f479-1231">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="1f479-1231">For example:</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.OnesComplement#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/onescomplement2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_RightShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &gt;&gt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_RightShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;&gt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &gt;&gt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &gt;&gt;&gt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &gt;&gt;&gt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1232">Der Wert, dessen Bits verschoben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1232">The value whose bits are to be shifted.</span>
          </span>
        </param>
        <param name="shift">
          <span data-ttu-id="1f479-1233">Die Anzahl der Bits, um die <c>value</c> nach rechts verschoben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1233">The number of bits to shift <c>value</c> to the right.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1234">Verschiebt einen <see cref="T:System.Numerics.BigInteger" />-Wert um eine angegebene Anzahl von Bits nach rechts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1234">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the right.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1235">Ein Wert, der um die angegebene Anzahl von Bits nach rechts verschoben wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1235">A value that has been shifted to the right by the specified number of bits.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1236">Die <xref:System.Numerics.BigInteger.op_RightShift%2A> Methode definiert, den Vorgang des bitweise Rechtsschiebe-Operators für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1236">The <xref:System.Numerics.BigInteger.op_RightShift%2A> method defines the operation of the bitwise right-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1237">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1237">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#47)]
 [!code-vb[System.Numerics.BigInteger.Operators#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#47)]  
  
 <span data-ttu-id="1f479-1238">Sprachen, die benutzerdefinierte Operatoren nicht unterstützen, können eine bitweise Rechtsschiebeoperation ausführen, durch Division `value` von `BigInteger.Pow(2, shift)` und Subtraktion 1 Mal `shift` für negative Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1238">Languages that do not support custom operators can perform a bitwise right-shift operation by dividing `value` by `BigInteger.Pow(2, shift)` and subtracting 1 times `shift` for negative values.</span></span> <span data-ttu-id="1f479-1239">Das folgende Beispiel zeigt, dass die Ergebnisse an die Ergebnisse der Verwendung dieses Operators identisch sind.</span><span class="sxs-lookup"><span data-stu-id="1f479-1239">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#48)]
 [!code-vb[System.Numerics.BigInteger.Operators#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#48)]  
  
 <span data-ttu-id="1f479-1240">Wenn `shift` ist größer als oder gleich der Anzahl von Bits in einem positiven <xref:System.Numerics.BigInteger> Wert das Ergebnis der Rechtsschiebeoperation ist <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1240">If `shift` is greater than or equal to the number of bits in a positive <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1f479-1241">Wenn `shift` ist größer als die Anzahl der Bits in einem negativen <xref:System.Numerics.BigInteger> Wert das Ergebnis der Rechtsschiebeoperation ist <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1241">If `shift` is greater than the number of bits in a negative <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Subtraction(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1242">Der Wert, von dem subtrahiert werden soll (der Minuend).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1242">The value to subtract from (the minuend).</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1243">Der Wert, der subtrahiert werden soll (der Subtrahend).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1243">The value to subtract (the subtrahend).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1244">Subtrahiert einen <see cref="T:System.Numerics.BigInteger" />-Wert von einem anderen <see cref="T:System.Numerics.BigInteger" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1244">Subtracts a <see cref="T:System.Numerics.BigInteger" /> value from another <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1245">Das Ergebnis der Subtraktion von <paramref name="right" /> von <paramref name="left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1245">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1246">Die <xref:System.Numerics.BigInteger.op_Subtraction%2A> Methode definiert, den Vorgang des Subtraktionsoperators für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1246">The <xref:System.Numerics.BigInteger.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1247">Dadurch werden dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="1f479-1247">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#14)]
 [!code-vb[System.Numeric.BigInteger.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#14)]  
  
 <span data-ttu-id="1f479-1248">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1248">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="1f479-1249">Die entsprechende Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1249">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryNegation(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1250">Der zu negierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1250">The value to negate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1251">Negiert einen angegebenen BigInteger-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1251">Negates a specified BigInteger value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1252">Das Ergebnis des <paramref name="value" />-Parameters, multipliziert mit -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1252">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1253">Die <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> -Methode definiert die Ausführung der unäre Negationsoperator (oder die Additive Inverse-Operator) für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1253">The <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1254">Der Vorgang erzeugt einen Wert, der sich in 0 (null) ergibt, wenn die ursprüngliche Nummer hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1254">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="1f479-1255">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können Aufrufen der <xref:System.Numerics.BigInteger.Negate%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1255">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="1f479-1256">Die entsprechende Methode für diesen Operator ist. <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="1f479-1256">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="1f479-1257">Das folgende Beispiel veranschaulicht die drei verschiedene Möglichkeiten, den Wert des Negieren einer <xref:System.Numerics.BigInteger> Objekt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1257">The following example illustrates three different ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryPlus(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="+ value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1258">Ein Ganzzahlwert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1258">An integer value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1259">Gibt den Wert des <see cref="T:System.Numerics.BigInteger" />-Operanden zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1259">Returns the value of the <see cref="T:System.Numerics.BigInteger" /> operand.</span>
          </span>
          <span data-ttu-id="1f479-1260">(Das Vorzeichen des Operanden wird nicht geändert.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1260">(The sign of the operand is unchanged.)</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1261">Der Wert des <paramref name="value" />-Operanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1261">The value of the <paramref name="value" /> operand.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1262">Die <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> Methode definiert, die Ausführung von der positive unäre Operator für <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1262">The <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Numerics.BigInteger> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1263">Wandelt die angegebene Zeichenfolgendarstellung einer Zahl in ihre <see cref="T:System.Numerics.BigInteger" />-Entsprechung um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1263">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1264">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1264">A string that contains the number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1265">Wandelt die angegebene Zeichenfolgendarstellung einer Zahl in ihre <see cref="T:System.Numerics.BigInteger" />-Entsprechung um.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1265">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1266">Ein Wert, der der im <paramref name="value" />-Parameter angegebenen Zahl entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1266">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1267">Die `value` Parameter muss die angegebene Zeichenfolgendarstellung einer Zahl in der folgenden Form sein.</span><span class="sxs-lookup"><span data-stu-id="1f479-1267">The `value` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="1f479-1268">[*ws*] [*Anmeldung*]*Ziffern*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="1f479-1268">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="1f479-1269">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="1f479-1269">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="1f479-1270">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="1f479-1270">The following table describes each element.</span></span>  
  
|<span data-ttu-id="1f479-1271">Element</span><span class="sxs-lookup"><span data-stu-id="1f479-1271">Element</span></span>|<span data-ttu-id="1f479-1272">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="1f479-1272">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="1f479-1273">*ws*</span><span class="sxs-lookup"><span data-stu-id="1f479-1273">*ws*</span></span>|<span data-ttu-id="1f479-1274">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="1f479-1274">Optional white space.</span></span>|  
|<span data-ttu-id="1f479-1275">*sign*</span><span class="sxs-lookup"><span data-stu-id="1f479-1275">*sign*</span></span>|<span data-ttu-id="1f479-1276">Einem optionalen Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1276">An optional sign.</span></span> <span data-ttu-id="1f479-1277">Gültige Zeichen gemäß der <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> und <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> Eigenschaften der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1277">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="1f479-1278">*Ziffern*</span><span class="sxs-lookup"><span data-stu-id="1f479-1278">*digits*</span></span>|<span data-ttu-id="1f479-1279">Eine Folge von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="1f479-1279">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="1f479-1280">Alle führenden Nullen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1280">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1f479-1281">Der angegebenen Zeichenfolge die `value` Parameter wird interpretiert, mit der <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> Stil.</span><span class="sxs-lookup"><span data-stu-id="1f479-1281">The string specified by the `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="1f479-1282">Darf Gruppentrennzeichen oder Dezimaltrennzeichen enthalten, und es sind keine Dezimalstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1282">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="1f479-1283">Die `value` Parameter analysiert wird, mithilfe den Formatierungsinformationen in eine <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> -Objekt, das für die aktuelle Systemkultur initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1283">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="1f479-1284">Weitere Informationen finden Sie unter <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1284">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1f479-1285">Um eine Zeichenfolge mithilfe von den Formatierungsinformationen des einer bestimmten Kultur zu analysieren, verwenden die <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-1285">To parse a string by using the formatting information of a specific culture, use the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f479-1286">Bei Verwendung von der <xref:System.Numerics.BigInteger.Parse%2A> Methode, um einen Roundtrip eine Zeichenfolgendarstellung des eine <xref:System.Numerics.BigInteger> -Wert, der durch Ausgabe wurde die <xref:System.Numerics.BigInteger.ToString%2A> -Methode, die Sie verwenden sollten die <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Formatbezeichner "R" zum Generieren der Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1286">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="1f479-1287">Andernfalls die Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> behält nur die 50 signifikantesten Ziffern des ursprünglichen Wert ein, und Daten verloren gehen kann bei Verwendung der <xref:System.Numerics.BigInteger.Parse%2A> Verfahren zum Wiederherstellen der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1287">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1288">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.Parse%28System.String%29> Methode zum Instanziieren zweier <xref:System.Numerics.BigInteger> Objekte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1288">The following example uses the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="1f479-1289">Jedes Objekt mit einer anderen Zahl multipliziert und ruft dann die <xref:System.Numerics.BigInteger.Compare%2A> Methode, um die Beziehung zwischen den beiden Werten festzulegen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1289">It multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f479-1290">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1290">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1f479-1291">
            <paramref name="value" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1291">
              <paramref name="value" /> is not in the correct format.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1292">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1292">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="1f479-1293">Eine bitweise Kombination der Enumerationswerte, die das zulässige Format von <c>value</c> angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1293">A bitwise combination of the enumeration values that specify the permitted format of <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1294">Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die <see cref="T:System.Numerics.BigInteger" />-Entsprechung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1294">Converts the string representation of a number in a specified style to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1295">Ein Wert, der der im <paramref name="value" />-Parameter angegebenen Zahl entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1295">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1296">Die `style` Parameter definiert die Style-Elemente (z. B. Leerzeichen, positive oder negative Vorzeichen, das Gruppentrennzeichen und das Dezimaltrennzeichen), die in zulässig sind die `value` Parameter, damit der Analysevorgang erfolgreich ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-1296">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="1f479-1297">`styles` muss eine Kombination von Bitflags aus der <xref:System.Globalization.NumberStyles> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="1f479-1297">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="1f479-1298">Die `style` Parameter bewirkt, dass diese Methode, die hilfreich beim Überladen `value` die angegebene Zeichenfolgendarstellung eines Hexadezimalwerts enthält, wenn das System Zahl (dezimal oder hexadezimal) durch dargestellt `value` nur zur Laufzeit bekannt ist oder wenn Sie Leerzeichen nicht zulassen möchten, oder ein symbol in `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1298">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="1f479-1299">Abhängig vom Wert der `style`die `value` -Parameter enthält möglicherweise die folgenden Elemente:</span><span class="sxs-lookup"><span data-stu-id="1f479-1299">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="1f479-1300">[*ws*] [*$*] [*Anmeldung*] [*Ziffern*,]*Ziffern*[.* Bruchziffern*] [-e [*Anmeldung*]*Exponenten-Ziffern*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="1f479-1300">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="1f479-1301">Wenn `style` enthält <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>die `value` Parameter kann die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="1f479-1301">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="1f479-1302">[*ws*]*Hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="1f479-1302">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="1f479-1303">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="1f479-1303">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="1f479-1304">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="1f479-1304">The following table describes each element.</span></span>  
  
|<span data-ttu-id="1f479-1305">Element</span><span class="sxs-lookup"><span data-stu-id="1f479-1305">Element</span></span>|<span data-ttu-id="1f479-1306">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="1f479-1306">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="1f479-1307">*ws*</span><span class="sxs-lookup"><span data-stu-id="1f479-1307">*ws*</span></span>|<span data-ttu-id="1f479-1308">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="1f479-1308">Optional white space.</span></span> <span data-ttu-id="1f479-1309">Leerzeichen am Anfang stehen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> Flag kann angezeigt werden, am Ende der `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1309">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="1f479-1310">Eine kulturspezifische Währungssymbol.</span><span class="sxs-lookup"><span data-stu-id="1f479-1310">A culture-specific currency symbol.</span></span> <span data-ttu-id="1f479-1311">Seine Position in der Zeichenfolge wird definiert, durch die <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> und <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> Eigenschaften der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1311">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="1f479-1312">Das Währungssymbol der aktuellen Kultur stehen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1312">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1313">*sign*</span><span class="sxs-lookup"><span data-stu-id="1f479-1313">*sign*</span></span>|<span data-ttu-id="1f479-1314">Einem optionalen Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1314">An optional sign.</span></span> <span data-ttu-id="1f479-1315">Die Zeichen am Anfang stehen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> Flag kann angezeigt werden, am Ende der `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1315">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="1f479-1316">Klammern können verwendet werden, `value` zum Angeben eines negativen Werts Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1316">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1317">*Ziffern*</span><span class="sxs-lookup"><span data-stu-id="1f479-1317">*digits*</span></span><br /><br /> <span data-ttu-id="1f479-1318">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="1f479-1318">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="1f479-1319">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="1f479-1319">*exponential_digits*</span></span>|<span data-ttu-id="1f479-1320">Eine Folge von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="1f479-1320">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="1f479-1321">Für *Bruchziffern*, werden nur die Ziffer 0 gültig ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-1321">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="1f479-1322">*,*</span><span class="sxs-lookup"><span data-stu-id="1f479-1322">*,*</span></span>|<span data-ttu-id="1f479-1323">Eine kulturspezifische Gruppentrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1323">A culture-specific group separator symbol.</span></span> <span data-ttu-id="1f479-1324">In der aktuellen Kultur Gruppentrennzeichen angezeigt werden kann `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1324">The current culture's group separator can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1325">*.*</span><span class="sxs-lookup"><span data-stu-id="1f479-1325">*.*</span></span>|<span data-ttu-id="1f479-1326">Eine kulturspezifische Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1326">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="1f479-1327">In der aktuellen Kultur Dezimaltrennzeichen angezeigt werden kann `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1327">The current culture's decimal point symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="1f479-1328">Nur die Ziffer 0 stehen als einer Dezimalstelle, damit der Analysevorgang erfolgreich ist; Wenn *Bruchziffern* enthält eine beliebige andere Ziffer, einen <xref:System.FormatException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1328">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="1f479-1329">E</span><span class="sxs-lookup"><span data-stu-id="1f479-1329">E</span></span>|<span data-ttu-id="1f479-1330">Das "e" oder die Zeichen "E", der angibt, dass der Wert in Exponentialschreibweise (wissenschaftlich) dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1330">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="1f479-1331">Die `value` Parameter kann eine Zahl in Exponentialschreibweise darstellen, wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1331">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1332">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="1f479-1332">*hexdigits*</span></span>|<span data-ttu-id="1f479-1333">Eine Sequenz von hexadezimalen Ziffern von 0 bis f oder 0 bis f.</span><span class="sxs-lookup"><span data-stu-id="1f479-1333">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="1f479-1334">Eine Zeichenfolge mit nur-Ziffern (entspricht der <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> Stil) immer erfolgreich analysiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1334">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="1f479-1335">Die meisten der verbleibenden <xref:System.Globalization.NumberStyles> Member steuern Elemente, die möglicherweise vorhanden, jedoch sind nicht erforderlich, in der Eingabezeichenfolge vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="1f479-1335">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="1f479-1336">In der folgenden Tabelle gibt an, wie einzelne <xref:System.Globalization.NumberStyles> Mitglieder Auswirkungen auf die Elemente, die möglicherweise vorhandene in `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1336">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="1f479-1337">`NumberStyles`-Wert</span><span class="sxs-lookup"><span data-stu-id="1f479-1337">`NumberStyles` value</span></span>|<span data-ttu-id="1f479-1338">Elemente in zulässig `value` neben Ziffern</span><span class="sxs-lookup"><span data-stu-id="1f479-1338">Elements permitted in `value` in addition to digits</span></span>|  
|--------------------------|---------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="1f479-1339">Die *Ziffern* nur Element.</span><span class="sxs-lookup"><span data-stu-id="1f479-1339">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="1f479-1340">Das Dezimaltrennzeichen (.) und *Dezimalstellen* Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1340">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="1f479-1341">Das "e" oder das Zeichen "E", womit Exponentialschreibweise, zusammen mit *Exponenten-Ziffern*.</span><span class="sxs-lookup"><span data-stu-id="1f479-1341">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="1f479-1342">Die *ws* Element am Anfang des `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1342">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="1f479-1343">Die *ws* Element am Ende der `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1343">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="1f479-1344">Die *Anmeldung* Element am Anfang des `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1344">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="1f479-1345">Die *Anmeldung* Element am Ende der `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1345">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="1f479-1346">Die *Anmeldung* Element in Form von Klammern, die den numerischen Wert einschließen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1346">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="1f479-1347">Dem Gruppenelement Trennzeichen (,).</span><span class="sxs-lookup"><span data-stu-id="1f479-1347">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="1f479-1348">Das Element, Currency ($).</span><span class="sxs-lookup"><span data-stu-id="1f479-1348">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="1f479-1349">Alle Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1349">All elements.</span></span> <span data-ttu-id="1f479-1350">Allerdings `value` keine hexadezimale Zahl oder einer Zahl in Exponentialschreibweise darstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1350">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="1f479-1351">Die *ws* Element am Anfang oder Ende des `value`, *Anmeldung* am Anfang des `value`, und das Dezimaltrennzeichen (*.*) Symbol.</span><span class="sxs-lookup"><span data-stu-id="1f479-1351">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="1f479-1352">Die `value` Parameter können auch Exponentialschreibweise.</span><span class="sxs-lookup"><span data-stu-id="1f479-1352">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="1f479-1353">Die `ws`, `sign`, Gruppentrennzeichen (*,*), und das Dezimaltrennzeichen (*.*) Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1353">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="1f479-1354">Alle Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1354">All elements.</span></span> <span data-ttu-id="1f479-1355">Allerdings `value` eine hexadezimale Zahl nicht darstellen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-1355">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f479-1356">Bei Verwendung von der <xref:System.Numerics.BigInteger.Parse%2A> Methode, um einen Roundtrip eine Zeichenfolgendarstellung des eine <xref:System.Numerics.BigInteger> -Wert, der durch Ausgabe wurde die <xref:System.Numerics.BigInteger.ToString%2A> -Methode, die Sie verwenden sollten die <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Formatbezeichner "R" zum Generieren der Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1356">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="1f479-1357">Andernfalls die Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> behält nur die 50 signifikantesten Ziffern des ursprünglichen Wert ein, und Daten verloren gehen kann bei Verwendung der <xref:System.Numerics.BigInteger.Parse%2A> Verfahren zum Wiederherstellen der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1357">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="1f479-1358">Im Gegensatz zu den anderen <xref:System.Globalization.NumberStyles> Werte, die ermöglichen, ist jedoch nicht erforderlich, das Vorhandensein bestimmter Stilelemente in `value`, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> Style-Wert bedeutet, dass die einzelnen numerischen Zeichen in `value` immer als interpretiert werden hexadezimalen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1358">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="1f479-1359">Gültige hexadezimale Zeichen sind 0-9, A-F und a-f.</span><span class="sxs-lookup"><span data-stu-id="1f479-1359">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="1f479-1360">Der nur anderen Flags, die mit kombiniert werden können, die `style` Parameter sind <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> und <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1360">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1f479-1361">(Die <xref:System.Globalization.NumberStyles> Enumeration enthält ein zusammengesetztes Zahlenformat <xref:System.Globalization.NumberStyles.HexNumber>, beide Flags Leerzeichen enthält.)</span><span class="sxs-lookup"><span data-stu-id="1f479-1361">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f479-1362">Wenn `value` Zeichenfolgendarstellung ist eine hexadezimale Zahl, es kann nicht vorangestellt werden alle Decoration (z. B. `0x` oder `&h`), die als eine hexadezimale Zahl unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="1f479-1362">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="1f479-1363">Dies bewirkt, dass die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1363">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="1f479-1364">Wenn `value` ist eine hexadezimale Zeichenfolge, die <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> Methode interpretiert `value` als eine negative Zahl, die mit zwei des Komplement Darstellung, wenn die ersten beiden Hexadezimalziffern größer als oder gleich sind gespeicherte `0x80`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1364">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="1f479-1365">Mit anderen Worten, interpretiert die Methode das höchstwertige Bit des ersten Bytes im `value` als das Vorzeichenbit.</span><span class="sxs-lookup"><span data-stu-id="1f479-1365">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="1f479-1366">Um sicherzustellen, dass eine Hexadezimalzeichenfolge ordnungsgemäß als eine positive Zahl, die erste Zahl interpretiert wird `value` muss einen Wert von 0 (null) aufweisen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1366">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="1f479-1367">Die Methode z. B. interpretiert `0x80` wie einen negativen Wert, sondern interpretiert `0x080` oder `0x0080` als einen positiven Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1367">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="1f479-1368">Das folgende Beispiel veranschaulicht den Unterschied zwischen Hexadezimalzeichenfolgen, die negative und positive Werte darstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1368">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="1f479-1369">Die `value` Parameter analysiert wird, mithilfe den Formatierungsinformationen in eine <xref:System.Globalization.NumberFormatInfo> -Objekt, das für die aktuelle Systemkultur initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1369">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="1f479-1370">Rufen Sie zum Angeben der Kultur, deren Formatierungsinformationen, damit der Analysevorgang verwendet wird, der <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1370">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1371">Das folgende Beispiel veranschaulicht Aufrufe an die <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> Methode mit mehreren möglichen Werte für die `style` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-1371">The following example illustrates calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method with several possible values for the `style` parameter.</span></span> <span data-ttu-id="1f479-1372">Es wird veranschaulicht, wie eine Zeichenfolge als Hexadezimalwert interpretiert werden soll und wie zu unterbinden, Leerzeichen und Symbole anmelden.</span><span class="sxs-lookup"><span data-stu-id="1f479-1372">It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#5)]
 [!code-vb[System.Numeric.BigInteger.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f479-1373">
            <paramref name="style" /> ist kein <see cref="T:System.Globalization.NumberStyles" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1373">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="1f479-1374">Oder:  <paramref name="style" /> enthält das <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />- oder <see cref="F:System.Globalization.NumberStyles.HexNumber" />-Flag zusammen mit einem anderen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1374">-or-  <paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f479-1375">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1375">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1f479-1376">
            <paramref name="value" /> folgt nicht dem mit <see cref="T:System.Globalization.NumberStyles" /> angegebenen Eingabemuster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1376">
              <paramref name="value" /> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1377">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1377">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="1f479-1378">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <c>value</c> bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1378">An object that provides culture-specific formatting information about <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1379">Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die <see cref="T:System.Numerics.BigInteger" />-Entsprechung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1379">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1380">Ein Wert, der der im <paramref name="value" />-Parameter angegebenen Zahl entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1380">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1381">Die `value` Parameter muss die angegebene Zeichenfolgendarstellung einer Zahl in der folgenden Form sein:</span><span class="sxs-lookup"><span data-stu-id="1f479-1381">The `value` parameter should be the string representation of a number in the following form:</span></span>  
  
 <span data-ttu-id="1f479-1382">[*ws*] [*Anmeldung*]*Ziffern*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="1f479-1382">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="1f479-1383">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="1f479-1383">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="1f479-1384">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="1f479-1384">The following table describes each element.</span></span>  
  
|<span data-ttu-id="1f479-1385">Element</span><span class="sxs-lookup"><span data-stu-id="1f479-1385">Element</span></span>|<span data-ttu-id="1f479-1386">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="1f479-1386">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="1f479-1387">*ws*</span><span class="sxs-lookup"><span data-stu-id="1f479-1387">*ws*</span></span>|<span data-ttu-id="1f479-1388">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="1f479-1388">Optional white space.</span></span>|  
|<span data-ttu-id="1f479-1389">*sign*</span><span class="sxs-lookup"><span data-stu-id="1f479-1389">*sign*</span></span>|<span data-ttu-id="1f479-1390">Einem optionalen Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1390">An optional sign.</span></span> <span data-ttu-id="1f479-1391">Gültige Zeichen gemäß der <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> und <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> Eigenschaften der <xref:System.Globalization.NumberFormatInfo> von zurückgegebene Objekt der `provider` des Objekts <xref:System.IFormatProvider.GetFormat%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-1391">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the `provider` object's <xref:System.IFormatProvider.GetFormat%2A> method.</span></span>|  
|<span data-ttu-id="1f479-1392">*Ziffern*</span><span class="sxs-lookup"><span data-stu-id="1f479-1392">*digits*</span></span>|<span data-ttu-id="1f479-1393">Eine Folge von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="1f479-1393">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="1f479-1394">Alle führenden Nullen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1394">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1f479-1395">Der angegebenen Zeichenfolge die `value` Parameter wird interpretiert, mit der <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> Stil.</span><span class="sxs-lookup"><span data-stu-id="1f479-1395">The string specified by the `value` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="1f479-1396">Darf Gruppentrennzeichen oder Dezimaltrennzeichen enthalten, und es sind keine Dezimalstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1396">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f479-1397">Bei Verwendung von der <xref:System.Numerics.BigInteger.Parse%2A> Methode, um einen Roundtrip eine Zeichenfolgendarstellung des eine <xref:System.Numerics.BigInteger> -Wert, der durch Ausgabe wurde die <xref:System.Numerics.BigInteger.ToString%2A> -Methode, die Sie verwenden sollten die <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Formatbezeichner "R" zum Generieren der Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1397">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="1f479-1398">Andernfalls die Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> behält nur die 50 signifikantesten Ziffern des ursprünglichen Wert ein, und Daten verloren gehen kann bei Verwendung der <xref:System.Numerics.BigInteger.Parse%2A> Verfahren zum Wiederherstellen der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1398">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="1f479-1399">Die `provider` Parameter ist ein <xref:System.IFormatProvider> Implementierung, deren <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein <xref:System.Globalization.NumberFormatInfo> Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1399">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="1f479-1400">Wenn die <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> Methode aufgerufen wird, ruft er die `provider` des Parameters <xref:System.IFormatProvider.GetFormat%2A> Methode und übergibt sie ein <xref:System.Type> Objekt, das darstellt der <xref:System.Globalization.NumberFormatInfo> Typ.</span><span class="sxs-lookup"><span data-stu-id="1f479-1400">When the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="1f479-1401">Die <xref:System.IFormatProvider.GetFormat%2A> Methodenrückgabe klicken Sie dann die <xref:System.Globalization.NumberFormatInfo> -Objekt, das Informationen zum Format von bietet die `value` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-1401">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `value` parameter.</span></span> <span data-ttu-id="1f479-1402">Es gibt drei Möglichkeiten zum Verwenden der `provider` Parameter benutzerdefinierte Formatierungsinformationen für den Analysevorgang angeben:</span><span class="sxs-lookup"><span data-stu-id="1f479-1402">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="1f479-1403">Sie können übergeben ein <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1403">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="1f479-1404">Die <xref:System.Globalization.CultureInfo.GetFormat%2A> Methode gibt die <xref:System.Globalization.NumberFormatInfo> -Objekt, das numerische Formatierungsinformationen für die jeweilige Kultur bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1404">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="1f479-1405">Sie können den tatsächlichen übergeben <xref:System.Globalization.NumberFormatInfo> -Objekt, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1405">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="1f479-1406">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> nur gibt sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="1f479-1406">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="1f479-1407">Sie können ein benutzerdefiniertes Objekt, das implementiert übergeben <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1407">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="1f479-1408">Die <xref:System.IFormatProvider.GetFormat%2A> -Methode instanziiert und gibt die <xref:System.Globalization.NumberFormatInfo> -Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1408">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="1f479-1409">Wenn `provider` ist `null`, die Formatierung der `value` interpretiert basierend auf den <xref:System.Globalization.NumberFormatInfo> Objekt der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1409">If `provider` is `null`, the formatting of `value` is interpreted based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1410">Die folgenden Beispiele zeigen zwei Möglichkeiten, die Tilde (~) definieren, wie ein negativen Vorzeichen für die Formatierung <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1410">The following examples show two ways to define the tilde (~) as a negative sign for formatting <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="1f479-1411">Beachten Sie, dass Sie zum Anzeigen der <xref:System.Numerics.BigInteger> muss Werte im gleichen Format wie die ursprünglichen Zeichenfolgen, Ihren Code Aufrufen der <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> Methode und übergibt ihn dann der <xref:System.Globalization.NumberFormatInfo> -Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1411">Note that to display the <xref:System.Numerics.BigInteger> values in the same format as the original strings, your code must call the <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method and pass it the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="1f479-1412">Im erste Beispiel definiert eine Klasse, die implementiert <xref:System.IFormatProvider> und verwendet die <xref:System.IFormatProvider.GetFormat%2A> -Methode zur Rückgabe der <xref:System.Globalization.NumberFormatInfo> Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1412">The first example defines a class that implements <xref:System.IFormatProvider> and uses the <xref:System.IFormatProvider.GetFormat%2A> method to return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#2)]  
  
 <span data-ttu-id="1f479-1413">Ein <xref:System.Numerics.BigInteger> Objekt kann dann durch den folgenden Code instanziiert werden:</span><span class="sxs-lookup"><span data-stu-id="1f479-1413">A <xref:System.Numerics.BigInteger> object can then be instantiated with the following code:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#3)]
 [!code-vb[System.Numeric.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#3)]  
  
 <span data-ttu-id="1f479-1414">Im zweite Beispiel wird einfacher.</span><span class="sxs-lookup"><span data-stu-id="1f479-1414">The second example is more straightforward.</span></span> <span data-ttu-id="1f479-1415">Übergibt die <xref:System.Globalization.NumberFormatInfo> -Objekt, das Formatierungsinformationen liefert an die `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-1415">It passes the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information to the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#4)]
 [!code-vb[System.Numeric.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f479-1416">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1416">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1f479-1417">
            <paramref name="value" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1417">
              <paramref name="value" /> is not in the correct format.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As BigInteger" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1418">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1418">A string that contains a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="1f479-1419">Eine bitweise Kombination der Enumerationswerte, die das zulässige Format von <c>value</c> angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1419">A bitwise combination of the enumeration values that specify the permitted format of <c>value</c>.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="1f479-1420">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <c>value</c> bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1420">An object that provides culture-specific formatting information about <c>value</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1421">Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und kulturabhängigen Format in das entsprechende <see cref="T:System.Numerics.BigInteger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1421">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1422">Ein Wert, der der im <paramref name="value" />-Parameter angegebenen Zahl entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1422">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1423">Die `style` Parameter definiert die Style-Elemente (z. B. Leerzeichen, positive oder negative Vorzeichen, das Gruppentrennzeichen und das Dezimaltrennzeichen), die in zulässig sind die `value` Parameter, damit der Analysevorgang erfolgreich ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-1423">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="1f479-1424">`styles` muss eine Kombination von Bitflags aus der <xref:System.Globalization.NumberStyles> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="1f479-1424">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="1f479-1425">Die `style` Parameter bewirkt, dass diese Methode, die hilfreich beim Überladen `value` die angegebene Zeichenfolgendarstellung eines Hexadezimalwerts enthält, wenn das System Zahl (dezimal oder hexadezimal) durch dargestellt `value` nur zur Laufzeit bekannt ist oder wenn Sie Leerzeichen nicht zulassen möchten, oder ein symbol in `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1425">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="1f479-1426">Abhängig vom Wert der `style`die `value` -Parameter enthält möglicherweise die folgenden Elemente:</span><span class="sxs-lookup"><span data-stu-id="1f479-1426">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="1f479-1427">[*ws*] [*$*] [*Anmeldung*] [*Ziffern*,]*Ziffern*[*. Bruchziffern*] [-e [*Anmeldung*]*Exponenten-Ziffern*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="1f479-1427">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="1f479-1428">Wenn `style` enthält <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>die `value` -Parameter enthält möglicherweise die folgenden Elemente:</span><span class="sxs-lookup"><span data-stu-id="1f479-1428">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="1f479-1429">[*ws*]*Hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="1f479-1429">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="1f479-1430">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="1f479-1430">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="1f479-1431">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="1f479-1431">The following table describes each element.</span></span>  
  
|<span data-ttu-id="1f479-1432">Element</span><span class="sxs-lookup"><span data-stu-id="1f479-1432">Element</span></span>|<span data-ttu-id="1f479-1433">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="1f479-1433">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="1f479-1434">*ws*</span><span class="sxs-lookup"><span data-stu-id="1f479-1434">*ws*</span></span>|<span data-ttu-id="1f479-1435">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="1f479-1435">Optional white space.</span></span> <span data-ttu-id="1f479-1436">Leerzeichen am Anfang stehen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> Flag kann angezeigt werden, am Ende der `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1436">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="1f479-1437">Eine kulturspezifische Währungssymbol.</span><span class="sxs-lookup"><span data-stu-id="1f479-1437">A culture-specific currency symbol.</span></span> <span data-ttu-id="1f479-1438">Seine Position in der Zeichenfolge wird definiert, durch die <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> und <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> Eigenschaften der Kultur angegeben, durch die `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-1438">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the culture indicated by the `provider` parameter.</span></span> <span data-ttu-id="1f479-1439">Das Währungssymbol der aktuellen Kultur stehen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1439">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1440">*sign*</span><span class="sxs-lookup"><span data-stu-id="1f479-1440">*sign*</span></span>|<span data-ttu-id="1f479-1441">Einem optionalen Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1441">An optional sign.</span></span> <span data-ttu-id="1f479-1442">Die Zeichen am Anfang stehen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> Flag kann angezeigt werden, am Ende der `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1442">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="1f479-1443">Klammern können verwendet werden, `value` zum Angeben eines negativen Werts Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1443">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1444">*Ziffern*</span><span class="sxs-lookup"><span data-stu-id="1f479-1444">*digits*</span></span><br /><br /> <span data-ttu-id="1f479-1445">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="1f479-1445">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="1f479-1446">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="1f479-1446">*exponential_digits*</span></span>|<span data-ttu-id="1f479-1447">Eine Folge von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="1f479-1447">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="1f479-1448">Für *Bruchziffern*, werden nur die Ziffer 0 gültig ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-1448">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="1f479-1449">*,*</span><span class="sxs-lookup"><span data-stu-id="1f479-1449">*,*</span></span>|<span data-ttu-id="1f479-1450">Eine kulturspezifische Gruppentrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1450">A culture-specific group separator symbol.</span></span> <span data-ttu-id="1f479-1451">Das Gruppentrennzeichen der vom angegebenen Kultur `provider` erscheinen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1451">The group separator symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1452">*.*</span><span class="sxs-lookup"><span data-stu-id="1f479-1452">*.*</span></span>|<span data-ttu-id="1f479-1453">Eine kulturspezifische Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1453">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="1f479-1454">Das Dezimaltrennzeichen für die Kultur, die vom angegebenen `provider` erscheinen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1454">The decimal point symbol of the culture designated by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="1f479-1455">Nur die Ziffer 0 stehen als einer Dezimalstelle, damit der Analysevorgang erfolgreich ist; Wenn *Bruchziffern* enthält eine beliebige andere Ziffer, einen <xref:System.FormatException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1455">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="1f479-1456">E</span><span class="sxs-lookup"><span data-stu-id="1f479-1456">E</span></span>|<span data-ttu-id="1f479-1457">Das "e" oder die Zeichen "E", der angibt, dass der Wert in Exponentialschreibweise (wissenschaftlich) dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1457">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="1f479-1458">Die `value` Parameter kann eine Zahl in Exponentialschreibweise darstellen, wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1458">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1459">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="1f479-1459">*hexdigits*</span></span>|<span data-ttu-id="1f479-1460">Eine Sequenz von hexadezimalen Ziffern von 0 bis f oder 0 bis f.</span><span class="sxs-lookup"><span data-stu-id="1f479-1460">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="1f479-1461">Eine Zeichenfolge mit nur-Ziffern (entspricht der <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> Stil) immer erfolgreich analysiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1461">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="1f479-1462">Die meisten der verbleibenden <xref:System.Globalization.NumberStyles> Member steuern Elemente, die möglicherweise vorhanden, jedoch sind nicht erforderlich, in der Eingabezeichenfolge vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="1f479-1462">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="1f479-1463">In der folgenden Tabelle gibt an, wie einzelne <xref:System.Globalization.NumberStyles> Mitglieder Auswirkungen auf die Elemente, die möglicherweise vorhandene in `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1463">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="1f479-1464">NumberStyles-Wert</span><span class="sxs-lookup"><span data-stu-id="1f479-1464">NumberStyles value</span></span>|<span data-ttu-id="1f479-1465">Elemente, die in den Wert neben Ziffern zulässig</span><span class="sxs-lookup"><span data-stu-id="1f479-1465">Elements permitted in value in addition to digits</span></span>|  
|------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="1f479-1466">Die *Ziffern* nur Element.</span><span class="sxs-lookup"><span data-stu-id="1f479-1466">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="1f479-1467">Das Dezimaltrennzeichen (.) und *Dezimalstellen* Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1467">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="1f479-1468">Das "e" oder "E"-Zeichen, das Exponentialschreibweise angibt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1468">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="1f479-1469">zusammen mit *Exponenten-Ziffern*.</span><span class="sxs-lookup"><span data-stu-id="1f479-1469">along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="1f479-1470">Die *ws* Element am Anfang des `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1470">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="1f479-1471">Die *ws* Element am Ende der `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1471">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="1f479-1472">Die *Anmeldung* Element am Anfang des `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1472">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="1f479-1473">Die *Anmeldung* Element am Ende der `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1473">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="1f479-1474">Die *Anmeldung* Element in Form von Klammern, die den numerischen Wert einschließen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1474">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="1f479-1475">Dem Gruppenelement Trennzeichen (,).</span><span class="sxs-lookup"><span data-stu-id="1f479-1475">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="1f479-1476">Das Element, Currency ($).</span><span class="sxs-lookup"><span data-stu-id="1f479-1476">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="1f479-1477">Alle Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1477">All elements.</span></span> <span data-ttu-id="1f479-1478">Allerdings `value` keine hexadezimale Zahl oder einer Zahl in Exponentialschreibweise darstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1478">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="1f479-1479">Die *ws* Element am Anfang oder Ende des `value`, *Anmeldung* am Anfang des `value`, und das Dezimaltrennzeichen (.).</span><span class="sxs-lookup"><span data-stu-id="1f479-1479">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="1f479-1480">Die `value` Parameter können auch Exponentialschreibweise.</span><span class="sxs-lookup"><span data-stu-id="1f479-1480">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="1f479-1481">Die `ws`, `sign`, Gruppentrennzeichen (,) und Dezimaltrennzeichen (.) Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1481">The `ws`, `sign`, group separator (,), and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="1f479-1482">Alle Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1482">All elements.</span></span> <span data-ttu-id="1f479-1483">Allerdings `value` eine hexadezimale Zahl nicht darstellen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-1483">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f479-1484">Bei Verwendung von der <xref:System.Numerics.BigInteger.Parse%2A> Methode, um einen Roundtrip eine Zeichenfolgendarstellung des eine <xref:System.Numerics.BigInteger> -Wert, der durch Ausgabe wurde die <xref:System.Numerics.BigInteger.ToString%2A> -Methode, die Sie verwenden sollten die <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Formatbezeichner "R" zum Generieren der Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1484">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="1f479-1485">Andernfalls die Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> behält nur die 50 signifikantesten Ziffern des ursprünglichen Wert ein, und Daten verloren gehen kann bei Verwendung der <xref:System.Numerics.BigInteger.Parse%2A> Verfahren zum Wiederherstellen der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1485">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="1f479-1486">Im Gegensatz zu den anderen <xref:System.Globalization.NumberStyles> Werte, die ermöglichen, aber keine das Vorhandensein bestimmter Stilelemente in erfordern `value`, <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> Style-Wert bedeutet, dass die einzelnen numerischen Zeichen in `value` immer als interpretiert werden hexadezimalen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1486">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for but do not require the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="1f479-1487">Gültige hexadezimale Zeichen sind 0-9, A-F und a-f.</span><span class="sxs-lookup"><span data-stu-id="1f479-1487">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="1f479-1488">Der nur anderen Flags, die mit kombiniert werden können, die `style` Parameter sind <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> und <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1488">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1f479-1489">(Die <xref:System.Globalization.NumberStyles> Enumeration enthält ein zusammengesetztes Zahlenformat <xref:System.Globalization.NumberStyles.HexNumber>, beide Flags Leerzeichen enthält.)</span><span class="sxs-lookup"><span data-stu-id="1f479-1489">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f479-1490">Wenn `value` Zeichenfolgendarstellung ist eine hexadezimale Zahl, es kann nicht vorangestellt werden alle Decoration (z. B. `0x` oder `&h`), die als eine hexadezimale Zahl unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="1f479-1490">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="1f479-1491">Dies bewirkt, dass die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1491">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="1f479-1492">Wenn `value` ist eine hexadezimale Zeichenfolge, die <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> Methode interpretiert `value` als eine negative Zahl, die mit zwei des Komplement Darstellung, wenn die ersten beiden Hexadezimalziffern größer als oder gleich sind gespeicherte `0x80`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1492">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="1f479-1493">Mit anderen Worten, interpretiert die Methode das höchstwertige Bit des ersten Bytes im `value` als das Vorzeichenbit.</span><span class="sxs-lookup"><span data-stu-id="1f479-1493">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="1f479-1494">Um sicherzustellen, dass eine Hexadezimalzeichenfolge ordnungsgemäß als eine positive Zahl, die erste Zahl interpretiert wird `value` muss einen Wert von 0 (null) aufweisen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1494">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="1f479-1495">Die Methode z. B. interpretiert `0x80` wie einen negativen Wert, sondern interpretiert `0x080` oder `0x0080` als einen positiven Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1495">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="1f479-1496">Das folgende Beispiel veranschaulicht den Unterschied zwischen Hexadezimalzeichenfolgen, die negative und positive Werte darstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1496">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="1f479-1497">Die `provider` Parameter ist ein <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="1f479-1497">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="1f479-1498">Die <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein <xref:System.Globalization.NumberFormatInfo> -Objekt, das kulturspezifische Informationen zum Format von bietet `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1498">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="1f479-1499">In der Regel `provider` kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="1f479-1499">Typically, `provider` can be any one of the following:</span></span>  
  
-   <span data-ttu-id="1f479-1500">Ein <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, die numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1500">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="1f479-1501">Die <xref:System.Globalization.CultureInfo.GetFormat%2A> Methode gibt die <xref:System.Globalization.NumberFormatInfo> -Objekt, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1501">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>  
  
-   <span data-ttu-id="1f479-1502">Ein <xref:System.Globalization.NumberFormatInfo> Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1502">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="1f479-1503">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> nur gibt sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="1f479-1503">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="1f479-1504">Ein benutzerdefiniertes Objekt, das implementiert <xref:System.IFormatProvider> und verwendet die <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> Methode instanziieren und Zurückgeben der <xref:System.Globalization.NumberFormatInfo> Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1504">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="1f479-1505">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> -Objekt für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1505">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1506">Im folgenden Beispiel wird lediglich einige Aufrufe an die <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> Methode, die mit verschiedenen Kombinationen von Werten für die `style` und `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-1506">The following example makes several calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#2)]  
  
 <span data-ttu-id="1f479-1507">Eine Anzahl von einzelnen Aufrufe der <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> -Methode übergibt eine Instanz der folgenden `BigIntegerFormatProvider` Klasse, die eine Tilde (~) als negativen Vorzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1507">A number of the individual calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f479-1508">
            <paramref name="style" /> ist kein <see cref="T:System.Globalization.NumberStyles" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1508">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="1f479-1509">Oder:  <paramref name="style" /> enthält das <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />- oder <see cref="F:System.Globalization.NumberStyles.HexNumber" />-Flag zusammen mit einem anderen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1509">-or-  <paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f479-1510">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1510">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1f479-1511">
            <paramref name="value" /> folgt nicht dem mit <paramref name="style" /> angegebenen Eingabemuster.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1511">
              <paramref name="value" /> does not comply with the input pattern specified by <paramref name="style" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Pow (System.Numerics.BigInteger value, int exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Pow(valuetype System.Numerics.BigInteger value, int32 exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (value As BigInteger, exponent As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Pow(System::Numerics::BigInteger value, int exponent);" />
      <MemberSignature Language="F#" Value="static member Pow : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Pow (value, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1512">Die Zahl, deren <c>exponent</c> Potenz berechnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1512">The number to raise to the <c>exponent</c> power.</span>
          </span>
        </param>
        <param name="exponent">
          <span data-ttu-id="1f479-1513">Der Exponent, mit dem <c>value</c> potenziert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1513">The exponent to raise <c>value</c> by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1514">Potenziert einen <see cref="T:System.Numerics.BigInteger" />-Wert mit einem angegebenen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1514">Raises a <see cref="T:System.Numerics.BigInteger" /> value to the power of a specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1515">Das Ergebnis der Potenzierung von <paramref name="value" /> mit <paramref name="exponent" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1515">The result of raising <paramref name="value" /> to the <paramref name="exponent" /> power.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1516">Die <xref:System.Numerics.BigInteger.Pow%2A> -Methode gibt 1 zurück, wenn der Wert des Parameters Exponent 0 ist, oder wenn die Werte von der `value` und `exponent` Parameter sind 0.</span><span class="sxs-lookup"><span data-stu-id="1f479-1516">The <xref:System.Numerics.BigInteger.Pow%2A> method returns 1 if the value of the exponent parameter is 0, or if the values of both the `value` and `exponent` parameters are 0.</span></span> <span data-ttu-id="1f479-1517">Wenn `exponent` beträgt 1, der <xref:System.Numerics.BigInteger.Pow%2A> -Methode zurückkehrt `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1517">If `exponent` is 1, the <xref:System.Numerics.BigInteger.Pow%2A> method returns `value`.</span></span> <span data-ttu-id="1f479-1518">Wenn `value` ist negativ ist, gibt die Methode ein negatives Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="1f479-1518">If `value` is negative, the method returns a negative result.</span></span>  
  
 <span data-ttu-id="1f479-1519">Diese Methode entspricht der <xref:System.Math.Pow%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1519">This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1520">Im folgende Beispiel wird die Verwendung von Potenzierung ein <xref:System.Numerics.BigInteger> Wert und einen Exponenten, dessen Wert von 0 bis 10 reicht.</span><span class="sxs-lookup"><span data-stu-id="1f479-1520">The following example illustrates exponentiation using a <xref:System.Numerics.BigInteger> value and an exponent whose value ranges from 0 to 10.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#32)]
 [!code-vb[System.Numeric.BigInteger.Class#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="1f479-1521">Der Wert des <paramref name="exponent" />-Parameters ist negativ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1521">The value of the <paramref name="exponent" /> parameter is negative.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Remainder (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Remainder(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Remainder(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Remainder : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Remainder (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend">
          <span data-ttu-id="1f479-1522">Der zu dividierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1522">The value to be divided.</span>
          </span>
        </param>
        <param name="divisor">
          <span data-ttu-id="1f479-1523">Der Wert, durch den dividiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1523">The value to divide by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1524">Führt die Ganzzahldivision von zwei <see cref="T:System.Numerics.BigInteger" />-Werten aus und gibt den Rest zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1524">Performs integer division on two <see cref="T:System.Numerics.BigInteger" /> values and returns the remainder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1525">Der Rest aus der Division von <paramref name="dividend" /> durch <paramref name="divisor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1525">The remainder after dividing <paramref name="dividend" /> by <paramref name="divisor" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1526">Das Vorzeichen des Restwertes ist das Vorzeichen der `dividend` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-1526">The sign of the remainder is the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="1f479-1527">Die <xref:System.Numerics.BigInteger.Remainder%2A> Methode ist für Sprachen, die keine benutzerdefinierte Operatoren unterstützen implementiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1527">The <xref:System.Numerics.BigInteger.Remainder%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="1f479-1528">Das Verhalten ist identisch mit der Division mithilfe des Modulo-Operators.</span><span class="sxs-lookup"><span data-stu-id="1f479-1528">Its behavior is identical to division using the modulus operator.</span></span>  
  
 <span data-ttu-id="1f479-1529">Wenn erforderlich, die Methode automatisch implizite Konvertierung eines anderen ganzzahligen Typen zu ausführt <xref:System.Numerics.BigInteger> Objekte, bevor er die Modulo-Operation ausführt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1529">If necessary, the method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects before it performs the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1530">Im folgenden Beispiel wird den Rest aus der <xref:System.Numerics.BigInteger.DivRem%2A> Methode mit den übrigen zurückgegebenes die <xref:System.Numerics.BigInteger.Remainder%2A> Methode, um festzulegen, dass die beiden Methoden einen identischen Rest berechnen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1530">The following example compares the remainder from the <xref:System.Numerics.BigInteger.DivRem%2A> method with the remainder returned by the <xref:System.Numerics.BigInteger.Remainder%2A> method to establish that the two methods calculate identical remainders.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/cs/Remainder1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/vb/Remainder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException">
          <span data-ttu-id="1f479-1531">
            <paramref name="divisor" /> ist 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1531">
              <paramref name="divisor" /> is 0 (zero).</span>
          </span>
        </exception>
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public int Sign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Sign" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Sign" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sign As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Sign { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Sign : int" Usage="System.Numerics.BigInteger.Sign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1532">Ruft eine Zahl ab, die das Vorzeichen (negativ, positiv, oder 0 (null)) des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1532">Gets a number that indicates the sign (negative, positive, or zero) of the current <see cref="T:System.Numerics.BigInteger" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f479-1533">Eine Zahl, die das Vorzeichen des <see cref="T:System.Numerics.BigInteger" />-Objekts angibt, wie in der folgenden Tabelle veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1533">A number that indicates the sign of the <see cref="T:System.Numerics.BigInteger" /> object, as shown in the following table.</span>
          </span>
          <span data-ttu-id="1f479-1534">
            <list type="table">
              <listheader>
                <term> Anzahl </term>
                <description> Beschreibung </description>
              </listheader>
              <item>
                <term> -1 </term>
                <description> der Wert dieses Objekts ist ein negativer Wert.  </description>
              </item>
              <item>
                <term> 0 </term>
                <description> der Wert dieses Objekts ist 0 (null).  </description>
              </item>
              <item>
                <term> 1 </term>
                <description> der Wert dieses Objekts ist positiv.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1534">
              <list type="table">
                <listheader>
                  <term> Number  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description> The value of this object is negative.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description> The value of this object is 0 (zero).  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> The value of this object is positive.  </description>
                </item>
              </list>
            </span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1535">Die <xref:System.Numerics.BigInteger.Sign%2A> Eigenschaft ist identisch mit der <xref:System.Math.Sign%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1535">The <xref:System.Numerics.BigInteger.Sign%2A> property is equivalent to the <xref:System.Math.Sign%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Subtract (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Subtract(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Subtract(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Subtract (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="1f479-1536">Der Wert, von dem subtrahiert werden soll (der Minuend).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1536">The value to subtract from (the minuend).</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="1f479-1537">Der Wert, der subtrahiert werden soll (der Subtrahend).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1537">The value to subtract (the subtrahend).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1538">Subtrahiert einen <see cref="T:System.Numerics.BigInteger" />-Wert von einem anderen und gibt das Ergebnis zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1538">Subtracts one <see cref="T:System.Numerics.BigInteger" /> value from another and returns the result.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1539">Das Ergebnis der Subtraktion von <paramref name="right" /> von <paramref name="left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1539">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1540">Sprachen, die keine benutzerdefinierte Operatoren unterstützen können die <xref:System.Numerics.BigInteger.Subtract%2A> -Methode zur Subtraktion mit <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1540">Languages that do not support custom operators can use the <xref:System.Numerics.BigInteger.Subtract%2A> method to perform subtraction using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="1f479-1541">Die <xref:System.Numerics.BigInteger.Subtract%2A> Methode ist ein geeigneter Ersatz für den Subtraktionsoperator, bei der Instanziierung einer <xref:System.Numerics.BigInteger> Variable, indem sie die Differenz, die aus der Subtraktion, resultiert zuweist, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1541">The <xref:System.Numerics.BigInteger.Subtract%2A> method is a useful substitute for the subtraction operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it the difference that results from subtraction, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToByteArray();" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : unit -&gt; byte[]" Usage="bigInteger.ToByteArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1542">Konvertiert einen <see cref="T:System.Numerics.BigInteger" />-Wert in ein Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1542">Converts a <see cref="T:System.Numerics.BigInteger" /> value to a byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1543">Der Wert des aktuellen, in ein Bytearray konvertierten <see cref="T:System.Numerics.BigInteger" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1543">The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1544">Die einzelnen Bytes im Array, das von dieser Methode zurückgegeben werden in little-Endian-Reihenfolge angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1544">The individual bytes in the array returned by this method appear in little-endian order.</span></span> <span data-ttu-id="1f479-1545">Die niederwertigen Bytes des Wertes vorausgehen, also die höherwertigen Bytes.</span><span class="sxs-lookup"><span data-stu-id="1f479-1545">That is, the lower-order bytes of the value precede the higher-order bytes.</span></span> <span data-ttu-id="1f479-1546">Das erste Byte des Arrays stellt die ersten acht Bits von der <xref:System.Numerics.BigInteger> Wert, das zweite Byte widerspiegelt, die nächsten acht Bits und So weiter.</span><span class="sxs-lookup"><span data-stu-id="1f479-1546">The first byte of the array reflects the first eight bits of the <xref:System.Numerics.BigInteger> value, the second byte reflects the next eight bits, and so on.</span></span> <span data-ttu-id="1f479-1547">Zum Beispiel ist der Wert 1024 oder 0 x 0400, Form der folgenden zwei Bytearrays gespeichert:</span><span class="sxs-lookup"><span data-stu-id="1f479-1547">For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</span></span>  
  
|<span data-ttu-id="1f479-1548">Element</span><span class="sxs-lookup"><span data-stu-id="1f479-1548">Element</span></span>|<span data-ttu-id="1f479-1549">Byte-Wert</span><span class="sxs-lookup"><span data-stu-id="1f479-1549">Byte value</span></span>|  
|-------------|----------------|  
|<span data-ttu-id="1f479-1550">0</span><span class="sxs-lookup"><span data-stu-id="1f479-1550">0</span></span>|<span data-ttu-id="1f479-1551">0 x 00</span><span class="sxs-lookup"><span data-stu-id="1f479-1551">0x00</span></span>|  
|<span data-ttu-id="1f479-1552">1</span><span class="sxs-lookup"><span data-stu-id="1f479-1552">1</span></span>|<span data-ttu-id="1f479-1553">0x04</span><span class="sxs-lookup"><span data-stu-id="1f479-1553">0x04</span></span>|  
  
 <span data-ttu-id="1f479-1554">Negative Werte werden in das Array mit zwei des Komplement Darstellung in die kompakteste Form möglichen geschrieben.</span><span class="sxs-lookup"><span data-stu-id="1f479-1554">Negative values are written to the array using two's complement representation in the most compact form possible.</span></span> <span data-ttu-id="1f479-1555">-1 liegt z. B. als ein einzelnes Byte an, dessen Wert `0xFF` statt als Array mit mehreren Elementen, wie z. B. `0xFF`, `0xFF` oder `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1555">For example, -1 is represented as a single byte whose value is `0xFF` instead of as an array with multiple elements, such as `0xFF`, `0xFF` or `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span></span>  
  
 <span data-ttu-id="1f479-1556">Da Darstellung immer Zweierkomplement interpretiert das höchstwertige Bit des letzten Bytes im Array (das Byte, ab Position <xref:System.Array.Length%2A?displayProperty=nameWithType> `- 1`) als Vorzeichenbit, gibt die Methode ein Bytearray mit einem zusätzlichen Element, dessen Wert 0 (null ist) zurück, mit denen auf eindeutig positive Werte zulässig sind, die andernfalls interpretiert werden konnte, als hätte ihre Anmelde-Bits festgelegt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1556">Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <xref:System.Array.Length%2A?displayProperty=nameWithType>`- 1`) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</span></span> <span data-ttu-id="1f479-1557">Beispielsweise den Wert 120 oder `0x78` wird als ein Single-Byte-Array dargestellt: `0x78`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1557">For example, the value 120 or `0x78` is represented as a single-byte array: `0x78`.</span></span> <span data-ttu-id="1f479-1558">Jedoch 128 oder `0x80`, wird als ein 2-Byte-Array dargestellt: `0x80`, `0x00`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1558">However, 128, or `0x80`, is represented as a two-byte array: `0x80`, `0x00`.</span></span>  
  
 <span data-ttu-id="1f479-1559">Sie können einen Roundtrip eine <xref:System.Numerics.BigInteger> Wert durch Speichern in ein Bytearray und danach die Wiederherstellung mithilfe der <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="1f479-1559">You can round-trip a <xref:System.Numerics.BigInteger> value by storing it to a byte array and then restoring it using the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="1f479-1560">Wenn Ihr Code den Wert einzelner Bytes im Array, das von dieser Methode zurückgegeben wird ändert, bevor sie den Wert wiederhergestellt, müssen Sie sicherstellen, dass Sie nicht versehentlich das signierte Bit ändern.</span><span class="sxs-lookup"><span data-stu-id="1f479-1560">If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</span></span> <span data-ttu-id="1f479-1561">Werden z. B. wenn die Änderungen einen positiven Wert erhöhen, damit der höchsten Priorität im letzten Element des Bytearrays bit festgelegt ist, wird Sie einen neuen Byte hinzufügen können, deren Wert 0 (null) bis zum Ende des Arrays entspricht.</span><span class="sxs-lookup"><span data-stu-id="1f479-1561">For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1562">Im folgenden Beispiel wird veranschaulicht, wie einige <xref:System.Numerics.BigInteger> Werte werden in Bytearrays dargestellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1562">The following example illustrates how some <xref:System.Numerics.BigInteger> values are represented in byte arrays.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/cs/ToByteArray1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/vb/ToByteArray1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray (bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray(bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray (Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Byte()" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : bool * bool -&gt; byte[]" Usage="bigInteger.ToByteArray (isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1563">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts in die entsprechende Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1563">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bigInteger.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1564">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts in die entsprechende Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1564">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1565">Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Numerics.BigInteger" />-Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1565">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1566">Die <xref:System.Numerics.BigInteger.ToString> -Methode formatiert einen <xref:System.Numerics.BigInteger> Wert in der "R" oder ein Roundtrip Format der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1566">The <xref:System.Numerics.BigInteger.ToString> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format of the current culture.</span></span> <span data-ttu-id="1f479-1567">Wenn Sie ein anderes Format oder eine Kultur angeben möchten, verwenden Sie die anderen Überladungen von der <xref:System.Numerics.BigInteger.ToString%2A> -Methode wie folgt:</span><span class="sxs-lookup"><span data-stu-id="1f479-1567">If you want to specify a different format or culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="1f479-1568">Format verwenden</span><span class="sxs-lookup"><span data-stu-id="1f479-1568">To use format</span></span>|<span data-ttu-id="1f479-1569">Für die Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1569">For culture</span></span>|<span data-ttu-id="1f479-1570">Verwenden Sie die Überladung</span><span class="sxs-lookup"><span data-stu-id="1f479-1570">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="1f479-1571">Round-Trip ("R")-format</span><span class="sxs-lookup"><span data-stu-id="1f479-1571">Round-trip ("R") format</span></span>|<span data-ttu-id="1f479-1572">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1572">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%2A>|  
|<span data-ttu-id="1f479-1573">Einem bestimmten format</span><span class="sxs-lookup"><span data-stu-id="1f479-1573">A specific format</span></span>|<span data-ttu-id="1f479-1574">Standardkultur (aktueller)</span><span class="sxs-lookup"><span data-stu-id="1f479-1574">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="1f479-1575">Einem bestimmten format</span><span class="sxs-lookup"><span data-stu-id="1f479-1575">A specific format</span></span>|<span data-ttu-id="1f479-1576">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1576">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="1f479-1577">Die Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> Wert enthält ein negativen Vorzeichen, dessen Wert ist negativ und einer Folge von Ziffern zwischen 0 und 9 ohne führende Nullen an.</span><span class="sxs-lookup"><span data-stu-id="1f479-1577">The string representation of the <xref:System.Numerics.BigInteger> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</span></span> <span data-ttu-id="1f479-1578">Die Minuszeichen werden definiert, indem die <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1578">The negative sign is defined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1579">Das folgende Beispiel zeigt eine <xref:System.Numerics.BigInteger> Wert unter Verwendung des standardmäßigen <xref:System.Numerics.BigInteger.ToString> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-1579">The following example displays a <xref:System.Numerics.BigInteger> value by using the default <xref:System.Numerics.BigInteger.ToString> method.</span></span> <span data-ttu-id="1f479-1580">Es zeigt auch die zeichenfolgendarstellungen der <xref:System.Numerics.BigInteger> Werts, der von der Verwendung von einigen Standardformatbezeichner ergibt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1580">It also displays the string representations of the <xref:System.Numerics.BigInteger> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="1f479-1581">In den Beispielen werden die Verwendung der Formatierungskonventionen der Kultur En-US angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1581">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bigInteger.ToString provider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="1f479-1582">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1582">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1583">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1583">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1584">Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Numerics.BigInteger" />-Werts im durch den <paramref name="provider" />-Parameter angegebenen Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1584">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="provider" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1585">Die <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> Methode Formate ein <xref:System.Numerics.BigInteger> Wert in der "R" oder einen Roundtrip, formatieren Sie mithilfe der <xref:System.Globalization.NumberFormatInfo> Objekt einer angegebenen Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1585">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="1f479-1586">Wenn Sie ein anderes Format oder die aktuelle Kultur angeben möchten, verwenden Sie die anderen Überladungen von der <xref:System.Numerics.BigInteger.ToString%2A> -Methode wie folgt:</span><span class="sxs-lookup"><span data-stu-id="1f479-1586">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="1f479-1587">Format verwenden</span><span class="sxs-lookup"><span data-stu-id="1f479-1587">To use format</span></span>|<span data-ttu-id="1f479-1588">Für die Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1588">For culture</span></span>|<span data-ttu-id="1f479-1589">Verwenden Sie die Überladung</span><span class="sxs-lookup"><span data-stu-id="1f479-1589">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="1f479-1590">Round-Trip ("R")-format</span><span class="sxs-lookup"><span data-stu-id="1f479-1590">Round-trip ("R") format</span></span>|<span data-ttu-id="1f479-1591">Standardkultur (aktueller)</span><span class="sxs-lookup"><span data-stu-id="1f479-1591">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="1f479-1592">Einem bestimmten format</span><span class="sxs-lookup"><span data-stu-id="1f479-1592">A specific format</span></span>|<span data-ttu-id="1f479-1593">Standardkultur (aktueller)</span><span class="sxs-lookup"><span data-stu-id="1f479-1593">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="1f479-1594">Einem bestimmten format</span><span class="sxs-lookup"><span data-stu-id="1f479-1594">A specific format</span></span>|<span data-ttu-id="1f479-1595">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1595">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="1f479-1596">Die `provider` Parameter ist ein <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="1f479-1596">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="1f479-1597">Die <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein <xref:System.Globalization.NumberFormatInfo> Objekt, das kulturspezifische Informationen zum Format der von dieser Methode zurückgegebene Zeichenfolge bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1597">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="1f479-1598">Wenn `provider` ist `null`, <xref:System.Numerics.BigInteger> Wert wird mit formatiert die <xref:System.Globalization.NumberFormatInfo> Objekt der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1598">If `provider` is `null`, the <xref:System.Numerics.BigInteger> value is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="1f479-1599">Die einzige Eigenschaft von der <xref:System.Globalization.NumberFormatInfo> -Objekt, das steuert, die Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> ist der Wert mit dem allgemeinen Formatbezeichner <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, definiert, dass das Zeichen, die die negativen Vorzeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1599">The only property of the <xref:System.Globalization.NumberFormatInfo> object that controls the string representation of the <xref:System.Numerics.BigInteger> value using the general format specifier is <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, which defines the character that represents the negative sign.</span></span>  
  
 <span data-ttu-id="1f479-1600">Die `provider` Parameter kann einen der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="1f479-1600">The `provider` parameter can be one of the following:</span></span>  
  
-   <span data-ttu-id="1f479-1601">Ein <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1601">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="1f479-1602">Die <xref:System.Globalization.NumberFormatInfo> -Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1602">The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="1f479-1603">Ein benutzerdefiniertes Objekt, das implementiert <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1603">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="1f479-1604">Die <xref:System.IFormatProvider.GetFormat%2A> Methode gibt die <xref:System.Globalization.NumberFormatInfo> -Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1604">Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1605">Im folgenden Beispiel wird eine benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> -Objekt, das die Tilde (~) als ein negativen Vorzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1605">The following example instantiates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span> <span data-ttu-id="1f479-1606">Die <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> Methode verwendet dann die benutzerdefinierte <xref:System.Globalization.NumberFormatInfo> eine Negative anzuzeigenden Objekttyp <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1606">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method then uses the custom <xref:System.Globalization.NumberFormatInfo> object to display a negative <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/cs/System.Numeric.BigInteger.ToString.cs#1)]
 [!code-vb[System.Numeric.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/vb/System.Numeric.BigInteger.ToString.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="bigInteger.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1f479-1607">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1607">A standard or custom numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1608">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts unter Verwendung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1608">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1609">Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Numerics.BigInteger" />-Werts im durch den <paramref name="format" />-Parameter angegebenen Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1609">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="format" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1610">Die <xref:System.Numerics.BigInteger.ToString%28System.String%29> -Methode formatiert einen <xref:System.Numerics.BigInteger> Wert in einem angegebenen Format mithilfe einer <xref:System.Globalization.NumberFormatInfo> Objekt, das die Konventionen der aktuellen Kultur darstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1610">The <xref:System.Numerics.BigInteger.ToString%28System.String%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="1f479-1611">Wenn Sie die "R" oder einen Roundtrip verwenden möchten, formatieren oder eine andere Kultur angegeben, Verwendung der anderen Überladungen der <xref:System.Numerics.BigInteger.ToString%2A> -Methode wie folgt:</span><span class="sxs-lookup"><span data-stu-id="1f479-1611">If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="1f479-1612">Format verwenden</span><span class="sxs-lookup"><span data-stu-id="1f479-1612">To use format</span></span>|<span data-ttu-id="1f479-1613">Für die Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1613">For culture</span></span>|<span data-ttu-id="1f479-1614">Verwenden Sie die Überladung</span><span class="sxs-lookup"><span data-stu-id="1f479-1614">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="1f479-1615">Round-Trip ("R")-format</span><span class="sxs-lookup"><span data-stu-id="1f479-1615">Round-trip ("R") format</span></span>|<span data-ttu-id="1f479-1616">Standardkultur (aktueller)</span><span class="sxs-lookup"><span data-stu-id="1f479-1616">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="1f479-1617">Round-Trip ("R")-format</span><span class="sxs-lookup"><span data-stu-id="1f479-1617">Round-trip ("R") format</span></span>|<span data-ttu-id="1f479-1618">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1618">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="1f479-1619">Einem bestimmten format</span><span class="sxs-lookup"><span data-stu-id="1f479-1619">A specific format</span></span>|<span data-ttu-id="1f479-1620">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1620">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="1f479-1621">Die `format` Parameter kann eine beliebige gültige [numerische Standardzeichenfolge](~/docs/standard/base-types/standard-numeric-format-strings.md), oder eine beliebige Kombination von [benutzerdefinierte numerische Formatzeichenfolgen](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1f479-1621">The `format` parameter can be any valid [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="1f479-1622">Wenn `format` gleich <xref:System.String.Empty?displayProperty=nameWithType> oder `null`, der Rückgabewert des aktuellen <xref:System.Numerics.BigInteger> Objekt mit dem Schleifenformatbezeichner ("R") formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-1622">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="1f479-1623">Wenn `format` ist ein anderer Wert, löst die Methode eine <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1623">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="1f479-1624">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</span><span class="sxs-lookup"><span data-stu-id="1f479-1624">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="1f479-1625">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) und [benutzerdefinierte Zahlenformatzeichenfolgen](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1f479-1625">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1f479-1626">Weitere Informationen zur Unterstützung von Formatierung in .NET Framework finden Sie unter [Formatierung von Typen](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1f479-1626">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1f479-1627">Das Format der zurückgegebenen Zeichenfolge richtet sich nach der <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1627">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="1f479-1628">Je nach den `format` Parameter, dieses Objekt wird gesteuert, Symbole, z. B. das negativen Vorzeichen, das Gruppentrennzeichen und das Dezimaltrennzeichen in der Ausgabezeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="1f479-1628">Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</span></span> <span data-ttu-id="1f479-1629">Aufrufen, um Formatierungsinformationen für Kulturen als der aktuellen Kultur zu ermöglichen, die <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> überladen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1629">To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1630">Im folgende Beispiel initialisiert einen <xref:System.Numerics.BigInteger> Wert und mit jeder Standardformatzeichenfolge und einigen benutzerdefinierten Formatzeichenfolgen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1630">The following example initializes a <xref:System.Numerics.BigInteger> value and displays it by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1f479-1631">
            <paramref name="format" /> ist keine gültige Formatzeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1631">
              <paramref name="format" /> is not a valid format string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="bigInteger.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="1f479-1632">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1632">A standard or custom numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="1f479-1633">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1633">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1634">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts unter Verwendung des angegebenen Formats und der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1634">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1635">Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Numerics.BigInteger" />-Werts entsprechend den Angaben in den Parametern <paramref name="format" /> und <paramref name="provider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1635">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1636">Die <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> -Methode formatiert einen <xref:System.Numerics.BigInteger> Wert in einem angegebenen Format mithilfe der <xref:System.Globalization.NumberFormatInfo> Objekt einer angegebenen Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1636">The <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="1f479-1637">Wenn Sie die Roundtripformat oder standardkultureinstellungen verwenden möchten, verwenden Sie andere Überladungen der der <xref:System.Numerics.BigInteger.ToString%2A> -Methode wie folgt:</span><span class="sxs-lookup"><span data-stu-id="1f479-1637">If you want to use the round-trip format or default culture settings, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="1f479-1638">Format verwenden</span><span class="sxs-lookup"><span data-stu-id="1f479-1638">To use format</span></span>|<span data-ttu-id="1f479-1639">Für die Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1639">For culture</span></span>|<span data-ttu-id="1f479-1640">Verwenden Sie die Überladung</span><span class="sxs-lookup"><span data-stu-id="1f479-1640">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="1f479-1641">Round-Trip ("R")-format</span><span class="sxs-lookup"><span data-stu-id="1f479-1641">Round-trip ("R") format</span></span>|<span data-ttu-id="1f479-1642">Standardkultur (aktueller)</span><span class="sxs-lookup"><span data-stu-id="1f479-1642">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="1f479-1643">Round-Trip ("R")-format</span><span class="sxs-lookup"><span data-stu-id="1f479-1643">Round-trip ("R") format</span></span>|<span data-ttu-id="1f479-1644">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="1f479-1644">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="1f479-1645">Einem bestimmten format</span><span class="sxs-lookup"><span data-stu-id="1f479-1645">A specific format</span></span>|<span data-ttu-id="1f479-1646">Standardkultur (aktueller)</span><span class="sxs-lookup"><span data-stu-id="1f479-1646">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
  
 <span data-ttu-id="1f479-1647">Die `format` Parameter kann eine beliebige gültige [numerische Standardzeichenfolge](~/docs/standard/base-types/standard-numeric-format-strings.md), oder eine beliebige Kombination von [benutzerdefinierte numerische Formatzeichenfolgen](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1f479-1647">The `format` parameter can be any valid  [standard numeric string](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [custom numeric format strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="1f479-1648">Wenn `format` gleich <xref:System.String.Empty?displayProperty=nameWithType> oder `null`, der Rückgabewert des aktuellen <xref:System.Numerics.BigInteger> Objekt mit dem Schleifenformatbezeichner ("R") formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="1f479-1648">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="1f479-1649">Wenn `format` ist ein anderer Wert, löst die Methode eine <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1649">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="1f479-1650">.NET Framework bietet eine umfangreiche formatierungsunterstützung, dies wird in den folgenden Themen zur Formatierung ausführlicher beschrieben:</span><span class="sxs-lookup"><span data-stu-id="1f479-1650">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="1f479-1651">Weitere Informationen zu numerischen Formatbezeichnern finden Sie unter [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) und [benutzerdefinierte Zahlenformatzeichenfolgen](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="1f479-1651">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="1f479-1652">Weitere Informationen zur Unterstützung von Formatierung in .NET Framework finden Sie unter [Formatierung von Typen](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="1f479-1652">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="1f479-1653">Die `provider` Parameter ist ein <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="1f479-1653">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="1f479-1654">Die <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein <xref:System.Globalization.NumberFormatInfo> Objekt, das kulturspezifische Informationen zum Format der von dieser Methode zurückgegebene Zeichenfolge bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1654">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="1f479-1655">Wenn die <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> Methode aufgerufen wird, ruft er die `provider` des Parameters <xref:System.IFormatProvider.GetFormat%2A> Methode und übergibt sie ein <xref:System.Type> Objekt, das darstellt der <xref:System.Globalization.NumberFormatInfo> Typ.</span><span class="sxs-lookup"><span data-stu-id="1f479-1655">When the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="1f479-1656">Die <xref:System.IFormatProvider.GetFormat%2A> Methodenrückgabe klicken Sie dann die <xref:System.Globalization.NumberFormatInfo> -Objekt, das Informationen zum Formatieren der `value` Parameter, z. B. das negative Vorzeichen-Symbol, das Gruppentrennzeichen oder das Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1656">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the `value` parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</span></span> <span data-ttu-id="1f479-1657">Es gibt drei Möglichkeiten zum Verwenden der `provider` Parameter Formatierungsinformationen zum Angeben der <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> Methode:</span><span class="sxs-lookup"><span data-stu-id="1f479-1657">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="1f479-1658">Sie können übergeben ein <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1658">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="1f479-1659">Die <xref:System.Globalization.CultureInfo.GetFormat%2A> Methode gibt die <xref:System.Globalization.NumberFormatInfo> -Objekt, das numerische Formatierungsinformationen für die jeweilige Kultur bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1659">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="1f479-1660">Sie können den tatsächlichen übergeben <xref:System.Globalization.NumberFormatInfo> -Objekt, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1660">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="1f479-1661">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> nur gibt sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="1f479-1661">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="1f479-1662">Sie können ein benutzerdefiniertes Objekt, das implementiert übergeben <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1662">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="1f479-1663">Die <xref:System.IFormatProvider.GetFormat%2A> -Methode instanziiert und gibt die <xref:System.Globalization.NumberFormatInfo> -Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1663">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="1f479-1664">Wenn `provider` ist `null`, die Formatierung der zurückgegebenen Zeichenfolge basiert auf der <xref:System.Globalization.NumberFormatInfo> Objekt der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1664">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1665">Im folgende Beispiel initialisiert eine <xref:System.Numerics.BigInteger> Wert und wird in die Konsole, indem eine standardmäßige Formatzeichenfolge angezeigt und ein <xref:System.Globalization.NumberFormatInfo> Objekt, das die Tilde (~) als ein negativen Vorzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1665">The following example initializes a <xref:System.Numerics.BigInteger> value, and displays it to the console using a standard format string and a <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="1f479-1666">
            <paramref name="format" /> ist keine gültige Formatzeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1666">
              <paramref name="format" /> is not a valid format string.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="bigInteger.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1667">Versucht, die Zeichenfolgendarstellung einer Zahl in deren <see cref="T:System.Numerics.BigInteger" />-Entsprechung zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1667">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1668">Die Zeichenfolgendarstellung einer Zahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1668">The string representation of a number.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="1f479-1669">Die Rückgabe dieser Methode enthält die <see cref="T:System.Numerics.BigInteger" />-Entsprechung der Zahl in <c>value</c> oder null (0), wenn die Konvertierung nicht ausgeführt werden konnte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1669">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <c>value</c>, or zero (0) if the conversion fails.</span>
          </span>
          <span data-ttu-id="1f479-1670">Die Konvertierung schlägt fehl, wenn der <c>value</c>-Parameter <see langword="null" /> ist oder nicht im korrekten Format vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1670">The conversion fails if the <c>value</c> parameter is <see langword="null" /> or is not of the correct format.</span>
          </span>
          <span data-ttu-id="1f479-1671">Dieser Parameter wird nicht initialisiert übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1671">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1672">Versucht, die Zeichenfolgendarstellung einer Zahl in deren <see cref="T:System.Numerics.BigInteger" />-Entsprechung zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1672">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1673">
            <see langword="true" />, wenn <paramref name="value" /> erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1673">
              <see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1674">Die <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> Methode entspricht der <xref:System.Numerics.BigInteger.Parse%28System.String%29> -Methode, mit dem Unterschied, dass die It keine Ausnahme auslöst, wenn die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1674">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="1f479-1675">Diese Methode entfällt die Notwendigkeit, die mithilfe der Ausnahmenbehandlung zum Testen einer <xref:System.FormatException> Wenn `value` ist ungültig und kann nicht erfolgreich analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-1675">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="1f479-1676">Die `value` Parameter muss die angegebene Zeichenfolgendarstellung einer Dezimalzahl in der folgenden Form sein:</span><span class="sxs-lookup"><span data-stu-id="1f479-1676">The `value` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="1f479-1677">[*ws*] [*Anmeldung*]*Ziffern*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="1f479-1677">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="1f479-1678">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="1f479-1678">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="1f479-1679">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="1f479-1679">The following table describes each element.</span></span>  
  
|<span data-ttu-id="1f479-1680">Element</span><span class="sxs-lookup"><span data-stu-id="1f479-1680">Element</span></span>|<span data-ttu-id="1f479-1681">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="1f479-1681">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="1f479-1682">*ws*</span><span class="sxs-lookup"><span data-stu-id="1f479-1682">*ws*</span></span>|<span data-ttu-id="1f479-1683">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="1f479-1683">Optional white space.</span></span>|  
|<span data-ttu-id="1f479-1684">*sign*</span><span class="sxs-lookup"><span data-stu-id="1f479-1684">*sign*</span></span>|<span data-ttu-id="1f479-1685">Einem optionalen Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1685">An optional sign.</span></span> <span data-ttu-id="1f479-1686">Gültige Zeichen gemäß der <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> und <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> Eigenschaften der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1686">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="1f479-1687">*Ziffern*</span><span class="sxs-lookup"><span data-stu-id="1f479-1687">*digits*</span></span>|<span data-ttu-id="1f479-1688">Eine Sequenz von Dezimalzahlen im Bereich von 0 bis 9.</span><span class="sxs-lookup"><span data-stu-id="1f479-1688">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="1f479-1689">Die Zeichenfolge, die gemäß der `value` Parameter kann keine Gruppentrennzeichen oder Dezimaltrennzeichen enthalten, und es sind keine Dezimalstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1689">The string specified by the `value` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="1f479-1690">Die `value` Parameter wird interpretiert, mit der <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> Stil.</span><span class="sxs-lookup"><span data-stu-id="1f479-1690">The `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="1f479-1691">Neben der Dezimalstelle dürfen nur führende und nachfolgende Leerzeichen mit einem vorangestellten Plus-oder Minuszeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1691">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="1f479-1692">Die Style-Elemente mit der kulturspezifischen Formatierungsinformationen explizit zu definieren, die in vorhanden sein können `value`, rufen Sie die <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="1f479-1692">To explicitly define the style elements with the culture-specific formatting information that can be present in `value`, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method.</span></span>  
  
 <span data-ttu-id="1f479-1693">Die `value` Parameter analysiert wird, mithilfe den Formatierungsinformationen in eine <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur.</span><span class="sxs-lookup"><span data-stu-id="1f479-1693">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="1f479-1694">Weitere Informationen finden Sie unter <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1694">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1f479-1695">Diese Überladung interpretiert alle Ziffern in der `value` Parameter als eine Dezimalstelle finden.</span><span class="sxs-lookup"><span data-stu-id="1f479-1695">This overload interprets all digits in the `value` parameter as decimal digits.</span></span> <span data-ttu-id="1f479-1696">Aufrufen, um die angegebene Zeichenfolgendarstellung einer Hexadezimalzahl zu analysieren, die <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> stattdessen überladen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1696">To parse the string representation of a hexadecimal number, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1697">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> Methode zum Instanziieren zweier <xref:System.Numerics.BigInteger> Objekte.</span><span class="sxs-lookup"><span data-stu-id="1f479-1697">The following example uses the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="1f479-1698">Wenn die Konvertierung erfolgreich sind, jedes Objekt mit einer anderen Zahl multipliziert und ruft dann die <xref:System.Numerics.BigInteger.Compare%2A> Methode, um die Beziehung zwischen den beiden Objekten zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1698">If the conversions succeed, it multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two objects.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/cs/System.Numeric.BigInteger.TryParse.cs#1)]
 [!code-vb[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/vb/System.Numeric.BigInteger.TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f479-1699">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1699">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Numerics.BigInteger.ToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="1f479-1700">Die Zeichenfolgendarstellung einer Zahl.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1700">The string representation of a number.</span>
          </span>
          <span data-ttu-id="1f479-1701">Die Zeichenfolge wird unter Verwendung des durch <c>style</c> angegebenen Formats interpretiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1701">The string is interpreted using the style specified by <c>style</c>.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="1f479-1702">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angibt, die in <c>value</c> vorhanden sein können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1702">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>value</c>.</span>
          </span>
          <span data-ttu-id="1f479-1703">Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1703">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="1f479-1704">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <c>value</c> bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1704">An object that supplies culture-specific formatting information about <c>value</c>.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="1f479-1705">Die Rückgabe dieser Methode enthält die <see cref="T:System.Numerics.BigInteger" />-Entsprechung der Zahl in <c>value</c> oder <see cref="P:System.Numerics.BigInteger.Zero" />, wenn die Konvertierung nicht ausgeführt werden konnte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1705">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <c>value</c>, or <see cref="P:System.Numerics.BigInteger.Zero" /> if the conversion failed.</span>
          </span>
          <span data-ttu-id="1f479-1706">Die Konvertierung schlägt fehl, wenn der <c>value</c>-Parameter gleich <see langword="null" /> ist oder nicht in einem Format vorliegt, das mit <c>style</c> kompatibel ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1706">The conversion fails if the <c>value</c> parameter is <see langword="null" /> or is not in a format that is compliant with <c>style</c>.</span>
          </span>
          <span data-ttu-id="1f479-1707">Dieser Parameter wird nicht initialisiert übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1707">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f479-1708">Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und kulturspezifischen Format in das entsprechende <see cref="T:System.Numerics.BigInteger" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1708">Tries to convert the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f479-1709">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1709">
              <see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1710">Die <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> Methode entspricht der <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> -Methode, mit dem Unterschied, dass die It keine Ausnahme auslöst, wenn die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1710">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="1f479-1711">Diese Methode entfällt die Notwendigkeit, die mithilfe der Ausnahmenbehandlung zum Testen einer <xref:System.FormatException> Wenn `value` ist ungültig und kann nicht erfolgreich analysiert werden.</span><span class="sxs-lookup"><span data-stu-id="1f479-1711">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="1f479-1712">Die `style` Parameter definiert die Style-Elemente (z. B. leer- oder eine positiven oder negativen Vorzeichen), die in zulässig sind die `value` Parameter, damit der Analysevorgang erfolgreich ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-1712">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="1f479-1713">Es muss eine Kombination von Bitflags aus der <xref:System.Globalization.NumberStyles> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="1f479-1713">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="1f479-1714">Abhängig vom Wert der `style`die `value` -Parameter enthält möglicherweise die folgenden Elemente:</span><span class="sxs-lookup"><span data-stu-id="1f479-1714">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="1f479-1715">[*ws*] [*$*] [*Anmeldung*] [*Ziffern*,]*Ziffern*[.* Bruchziffern*] [-e [*Anmeldung*]*Exponenten-Ziffern*] [*ws*]</span><span class="sxs-lookup"><span data-stu-id="1f479-1715">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="1f479-1716">Wenn die `style` Parameter enthält <xref:System.Globalization.NumberStyles.AllowHexSpecifier>die `value` -Parameter enthält möglicherweise die folgenden Elemente:</span><span class="sxs-lookup"><span data-stu-id="1f479-1716">If the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="1f479-1717">[*ws*]*Hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="1f479-1717">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="1f479-1718">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="1f479-1718">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="1f479-1719">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="1f479-1719">The following table describes each element.</span></span>  
  
|<span data-ttu-id="1f479-1720">Element</span><span class="sxs-lookup"><span data-stu-id="1f479-1720">Element</span></span>|<span data-ttu-id="1f479-1721">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="1f479-1721">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="1f479-1722">*ws*</span><span class="sxs-lookup"><span data-stu-id="1f479-1722">*ws*</span></span>|<span data-ttu-id="1f479-1723">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="1f479-1723">Optional white space.</span></span> <span data-ttu-id="1f479-1724">Leerzeichen am Anfang stehen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> Flag oder am Ende der `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1724">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="1f479-1725">Eine kulturspezifische Währungssymbol.</span><span class="sxs-lookup"><span data-stu-id="1f479-1725">A culture-specific currency symbol.</span></span> <span data-ttu-id="1f479-1726">Seine Position in der Zeichenfolge wird definiert, indem die <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> Eigenschaft von der <xref:System.Globalization.NumberFormatInfo> zurückgegebenes Objekt die <xref:System.IFormatProvider.GetFormat%2A> Methode der `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-1726">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="1f479-1727">Das Währungssymbol stehen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1727">The currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1728">*sign*</span><span class="sxs-lookup"><span data-stu-id="1f479-1728">*sign*</span></span>|<span data-ttu-id="1f479-1729">Einem optionalen Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1729">An optional sign.</span></span> <span data-ttu-id="1f479-1730">Die Zeichen am Anfang stehen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> Flag kann angezeigt werden, am Ende der `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1730">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="1f479-1731">Klammern können verwendet werden, `value` zum Angeben eines negativen Werts Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1731">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1732">*Ziffern*</span><span class="sxs-lookup"><span data-stu-id="1f479-1732">*digits*</span></span>|<span data-ttu-id="1f479-1733">Eine Folge von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="1f479-1733">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="1f479-1734">*,*</span><span class="sxs-lookup"><span data-stu-id="1f479-1734">*,*</span></span>|<span data-ttu-id="1f479-1735">Eine kulturspezifische Gruppentrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1735">A culture-specific group separator.</span></span> <span data-ttu-id="1f479-1736">Das Gruppentrennzeichen der vom angegebenen Kultur `provider` erscheinen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1736">The group separator of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1737">*.*</span><span class="sxs-lookup"><span data-stu-id="1f479-1737">*.*</span></span>|<span data-ttu-id="1f479-1738">Eine kulturspezifische Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1738">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="1f479-1739">Das Dezimaltrennzeichen des vom angegebenen Kultur `provider` erscheinen `value` Wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1739">The decimal point symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1740">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="1f479-1740">*fractional_digits*</span></span>|<span data-ttu-id="1f479-1741">Mindestens ein Vorkommen der Ziffer 0.</span><span class="sxs-lookup"><span data-stu-id="1f479-1741">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="1f479-1742">Dezimalstellen erscheinen `value` nur, wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1742">Fractional digits can appear in `value` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1743">E</span><span class="sxs-lookup"><span data-stu-id="1f479-1743">E</span></span>|<span data-ttu-id="1f479-1744">Das "e" oder die Zeichen "E", der angibt, dass der Wert in Exponentialschreibweise (wissenschaftlich) dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1744">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="1f479-1745">Die `value` Parameter kann eine Zahl in Exponentialschreibweise darstellen, wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1745">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1746">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="1f479-1746">*exponential_digits*</span></span>|<span data-ttu-id="1f479-1747">Eine Folge von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="1f479-1747">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="1f479-1748">Die `value` Parameter kann eine Zahl in Exponentialschreibweise darstellen, wenn `style` enthält die <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="1f479-1748">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="1f479-1749">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="1f479-1749">*hexdigits*</span></span>|<span data-ttu-id="1f479-1750">Eine Sequenz von hexadezimalen Ziffern von 0 bis f oder 0 bis f.</span><span class="sxs-lookup"><span data-stu-id="1f479-1750">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="1f479-1751">Eine Zeichenfolge mit nur Dezimalstellen (entspricht der <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> Flag) immer erfolgreich analysiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1751">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="1f479-1752">Die meisten der verbleibenden <xref:System.Globalization.NumberStyles> Member steuern Elemente, die möglicherweise vorhanden, jedoch müssen nicht in dieser Eingabezeichenfolge vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="1f479-1752">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="1f479-1753">In der folgenden Tabelle gibt an, wie einzelne <xref:System.Globalization.NumberStyles> Mitglieder Auswirkungen auf die Elemente, die möglicherweise vorhandene in `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1753">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="1f479-1754">Nicht zusammengesetzte `NumberStyles` Werte</span><span class="sxs-lookup"><span data-stu-id="1f479-1754">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="1f479-1755">Elemente, die in den Wert neben Ziffern zulässig</span><span class="sxs-lookup"><span data-stu-id="1f479-1755">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="1f479-1756">Nur Dezimalstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1756">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="1f479-1757">Das Dezimaltrennzeichen (*.*) und *Bruchziffern* Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1757">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="1f479-1758">Allerdings *Bruchziffern* muss bestehen lediglich eine oder mehrere 0-Ziffern oder die Methode gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1758">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="1f479-1759">Das "e" oder das Zeichen "E", womit Exponentialschreibweise, zusammen mit *Exponenten-Ziffern*.</span><span class="sxs-lookup"><span data-stu-id="1f479-1759">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="1f479-1760">Wenn `value` eine Zahl in Exponentialschreibweise, keinen es, eine Komponente nicht 0 (null), Dezimalstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1760">If `value` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="1f479-1761">Die *ws* Element am Anfang des `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1761">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="1f479-1762">Die *ws* Element am Ende der `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1762">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="1f479-1763">Die *Anmeldung* Element vor dem *Ziffern*.</span><span class="sxs-lookup"><span data-stu-id="1f479-1763">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="1f479-1764">Die *Anmeldung* Elements nach *Ziffern*.</span><span class="sxs-lookup"><span data-stu-id="1f479-1764">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="1f479-1765">Die *Anmeldung* Element in Form von Klammern, die den numerischen Wert einschließen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1765">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="1f479-1766">Das Gruppentrennzeichen (*,*) Element.</span><span class="sxs-lookup"><span data-stu-id="1f479-1766">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="1f479-1767">Die Währung (*$*) Element.</span><span class="sxs-lookup"><span data-stu-id="1f479-1767">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="1f479-1768">Alle Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1768">All elements.</span></span> <span data-ttu-id="1f479-1769">Allerdings `value` keine hexadezimale Zahl oder einer Zahl in Exponentialschreibweise darstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1769">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="1f479-1770">Die *ws* Element am Anfang oder Ende des `value`, *Anmeldung* am Anfang des `value`, und das Dezimaltrennzeichen (*.*) Symbol.</span><span class="sxs-lookup"><span data-stu-id="1f479-1770">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="1f479-1771">Die `value` Parameter können auch Exponentialschreibweise.</span><span class="sxs-lookup"><span data-stu-id="1f479-1771">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="1f479-1772">Die *ws*, *Anmeldung*, Gruppentrennzeichen (*,*), und das Dezimaltrennzeichen (*.*) Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1772">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="1f479-1773">Alle Elemente.</span><span class="sxs-lookup"><span data-stu-id="1f479-1773">All elements.</span></span> <span data-ttu-id="1f479-1774">Allerdings `value` eine hexadezimale Zahl nicht darstellen kann.</span><span class="sxs-lookup"><span data-stu-id="1f479-1774">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f479-1775">Bei Verwendung von der <xref:System.Numerics.BigInteger.TryParse%2A> Methode, um einen Roundtrip eine Zeichenfolgendarstellung des eine <xref:System.Numerics.BigInteger> -Wert, der durch Ausgabe wurde die <xref:System.Numerics.BigInteger.ToString%2A> -Methode, die Sie verwenden sollten die <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Formatbezeichner "R" zum Generieren der Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1775">If you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="1f479-1776">Andernfalls die Zeichenfolgendarstellung der <xref:System.Numerics.BigInteger> behält nur die 50 signifikantesten Ziffern des ursprünglichen Wert ein, und Daten verloren gehen kann bei Verwendung der <xref:System.Numerics.BigInteger.TryParse%2A> Verfahren zum Wiederherstellen der <xref:System.Numerics.BigInteger> Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1776">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="1f479-1777">Wenn die <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> -Flag wird verwendet, `value` muss ein Hexadezimalwert sein.</span><span class="sxs-lookup"><span data-stu-id="1f479-1777">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `value` must be a hexadecimal value.</span></span> <span data-ttu-id="1f479-1778">Die einzigen anderen Flags, die im vorhanden sein können `style` sind <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> und <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1778">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="1f479-1779">(Die <xref:System.Globalization.NumberStyles> -Enumeration hat ein zusammengesetztes Format <xref:System.Globalization.NumberStyles.HexNumber>, beide Flags Leerzeichen enthält.)</span><span class="sxs-lookup"><span data-stu-id="1f479-1779">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f479-1780">Wenn `value` Zeichenfolgendarstellung ist eine hexadezimale Zahl, es kann nicht vorangestellt werden alle Decoration (z. B. `0x` oder `&h`), die als eine hexadezimale Zahl unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="1f479-1780">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="1f479-1781">Dies bewirkt, dass die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1781">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="1f479-1782">Wenn `value` ist eine hexadezimale Zeichenfolge, die <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> Methode interpretiert `value` als eine negative Zahl, die mit zwei des Komplement Darstellung, wenn die ersten beiden Hexadezimalziffern größer als oder gleich sind gespeicherte `0x80`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1782">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="1f479-1783">Mit anderen Worten, interpretiert die Methode das höchstwertige Bit des ersten Bytes im `value` als das Vorzeichenbit.</span><span class="sxs-lookup"><span data-stu-id="1f479-1783">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="1f479-1784">Um sicherzustellen, dass eine Hexadezimalzeichenfolge ordnungsgemäß als eine positive Zahl, die erste Zahl interpretiert wird `value` muss einen Wert von 0 (null) aufweisen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1784">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="1f479-1785">Die Methode z. B. interpretiert `0x80` wie einen negativen Wert, sondern interpretiert `0x080` oder `0x0080` als einen positiven Wert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1785">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="1f479-1786">Das folgende Beispiel veranschaulicht den Unterschied zwischen Hexadezimalzeichenfolgen, die negative und positive Werte darstellen.</span><span class="sxs-lookup"><span data-stu-id="1f479-1786">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParseHex1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParseHex1.vb#1)]  
  
 <span data-ttu-id="1f479-1787">Die `provider` Parameter ist ein <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="1f479-1787">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="1f479-1788">Die <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein <xref:System.Globalization.NumberFormatInfo> -Objekt, das kulturspezifische Informationen zum Format von bietet `value`.</span><span class="sxs-lookup"><span data-stu-id="1f479-1788">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="1f479-1789">Die `provider` Parameter kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="1f479-1789">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="1f479-1790">Ein <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1790">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="1f479-1791">Die <xref:System.Globalization.CultureInfo.GetFormat%2A> Methode gibt die <xref:System.Globalization.NumberFormatInfo> -Objekt, das numerische Formatierungsinformationen für die jeweilige Kultur bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1791">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="1f479-1792">Ein <xref:System.Globalization.NumberFormatInfo> -Objekt, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1792">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="1f479-1793">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> nur gibt sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="1f479-1793">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="1f479-1794">Ein benutzerdefiniertes Objekt, das implementiert <xref:System.IFormatProvider>.</span><span class="sxs-lookup"><span data-stu-id="1f479-1794">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="1f479-1795">Die <xref:System.IFormatProvider.GetFormat%2A> -Methode instanziiert und gibt die <xref:System.Globalization.NumberFormatInfo> -Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="1f479-1795">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="1f479-1796">Wenn `provider` ist `null`die <xref:System.Globalization.NumberFormatInfo> -Objekt für die aktuelle Kultur verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="1f479-1796">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f479-1797">Im folgenden Beispiel werden einige Aufrufe an die <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> Methode, die mit verschiedenen Kombinationen von Werten für die `style` und `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="1f479-1797">The following example makes some calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#2)]  
  
 <span data-ttu-id="1f479-1798">Eine Anzahl von einzelnen Aufrufe der <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> -Methode übergibt eine Instanz der folgenden `BigIntegerFormatProvider` Klasse, die eine Tilde (~) als negativen Vorzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="1f479-1798">A number of the individual calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f479-1799">
            <paramref name="style" /> ist kein <see cref="T:System.Globalization.NumberStyles" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1799">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="1f479-1800">Oder:  <paramref name="style" /> enthält das <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />- oder <see cref="F:System.Globalization.NumberStyles.HexNumber" />-Flag zusammen mit einem anderen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1800">-or-  <paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Numerics.BigInteger.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public bool TryWriteBytes (Span&lt;byte&gt; destination, out int bytesWritten, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryWriteBytes (destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryWriteBytes : Span&lt;byte&gt; *  * bool * bool -&gt; bool" Usage="bigInteger.TryWriteBytes (destination, bytesWritten, isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="isUnsigned" Type="System.Boolean" />
        <Parameter Name="isBigEndian" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <param name="isUnsigned">To be added.</param>
        <param name="isBigEndian">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger Zero { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.Zero : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f479-1801">Ruft einen Wert ab, der die Zahl null (0) darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1801">Gets a value that represents the number 0 (zero).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f479-1802">Eine ganze Zahl, deren Wert 0 (null) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f479-1802">An integer whose value is 0 (zero).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f479-1803">Die <xref:System.Numerics.BigInteger> von dieser Eigenschaft zurückgegebene Objekt stellt eine bequeme Quelle der Wert 0 für Zuweisungen und Vergleiche.</span><span class="sxs-lookup"><span data-stu-id="1f479-1803">The <xref:System.Numerics.BigInteger> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsZero" />
      </Docs>
    </Member>
  </Members>
</Type>