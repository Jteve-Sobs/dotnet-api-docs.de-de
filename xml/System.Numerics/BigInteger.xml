<Type Name="BigInteger" FullName="System.Numerics.BigInteger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0af1d7d26d4af18b2f6026b9359763866ea4bc9d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86797999" /></Metadata><TypeSignature Language="C#" Value="public struct BigInteger : IComparable, IComparable&lt;System.Numerics.BigInteger&gt;, IEquatable&lt;System.Numerics.BigInteger&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit BigInteger extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IEquatable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Numerics.BigInteger" />
  <TypeSignature Language="VB.NET" Value="Public Structure BigInteger&#xA;Implements IComparable, IComparable(Of BigInteger), IEquatable(Of BigInteger), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class BigInteger : IComparable, IComparable&lt;System::Numerics::BigInteger&gt;, IEquatable&lt;System::Numerics::BigInteger&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type BigInteger = struct&#xA;    interface IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit BigInteger extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IEquatable`1&lt;valuetype System.Numerics.BigInteger&gt;, class System.IFormattable" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Numerics</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Numerics</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Numerics" FromVersion="4.0.0.0" To="System.Runtime.Numerics" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime.Numerics" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Numerics.BigInteger&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="21642-101">Stellt eine beliebig große ganze Zahl mit Vorzeichen dar.</span><span class="sxs-lookup"><span data-stu-id="21642-101">Represents an arbitrarily large signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-102">Der <xref:System.Numerics.BigInteger> Typ ist ein unveränderlicher Typ, der eine beliebig große ganze Zahl darstellt, deren Wert theoretisch keine oberen oder unteren Grenzen hat.</span><span class="sxs-lookup"><span data-stu-id="21642-102">The <xref:System.Numerics.BigInteger> type is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</span></span> <span data-ttu-id="21642-103">Die Member des Typs sind eng parallel zu den Membern anderer ganzzahliger <xref:System.Numerics.BigInteger> Typen (die <xref:System.Byte> <xref:System.Int16> Typen,, <xref:System.Int32> , <xref:System.Int64> , <xref:System.SByte> , <xref:System.UInt16> , <xref:System.UInt32> , und <xref:System.UInt64> ).</span><span class="sxs-lookup"><span data-stu-id="21642-103">The members of the <xref:System.Numerics.BigInteger> type closely parallel those of other integral types (the <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.SByte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> types).</span></span> <span data-ttu-id="21642-104">Dieser Typ unterscheidet sich von den anderen ganzzahligen Typen in [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] , die über einen Bereich verfügen, der durch ihre `MinValue` -und-Eigenschaften angegeben wird `MaxValue`</span><span class="sxs-lookup"><span data-stu-id="21642-104">This type differs from the other integral types in the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], which have a range indicated by their `MinValue` and `MaxValue` properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21642-105">Da der <xref:System.Numerics.BigInteger> Typ unveränderlich ist (siehe [muability und BigInteger-Struktur](#mutability)) und da er keine oberen oder unteren Grenzen aufweist, kann ein <xref:System.OutOfMemoryException> für jeden Vorgang ausgelöst werden, der bewirkt, dass ein <xref:System.Numerics.BigInteger> Wert zu groß wird.</span><span class="sxs-lookup"><span data-stu-id="21642-105">Because the <xref:System.Numerics.BigInteger> type is immutable (see [Mutability and the BigInteger Structure](#mutability)) and because it has no upper or lower bounds, an <xref:System.OutOfMemoryException> can be thrown for any operation that causes a <xref:System.Numerics.BigInteger> value to grow too large.</span></span>  
  
## <a name="instantiating-a-biginteger-object"></a><span data-ttu-id="21642-106">Instanziieren eines BigInteger-Objekts</span><span class="sxs-lookup"><span data-stu-id="21642-106">Instantiating a BigInteger Object</span></span>  
 <span data-ttu-id="21642-107">Sie können ein- <xref:System.Numerics.BigInteger> Objekt auf verschiedene Weise instanziieren:</span><span class="sxs-lookup"><span data-stu-id="21642-107">You can instantiate a <xref:System.Numerics.BigInteger> object in several ways:</span></span>  
  
-   <span data-ttu-id="21642-108">Sie können das Schlüsselwort verwenden und einen beliebigen ganzzahligen `new` oder Gleit Komma Wert als Parameter für den <xref:System.Numerics.BigInteger> Konstruktor bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="21642-108">You can use the `new` keyword and provide any integral or floating-point value as a parameter to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="21642-109">(Gleit Komma Werte werden abgeschnitten, bevor Sie dem zugewiesen werden <xref:System.Numerics.BigInteger> .) Im folgenden Beispiel wird veranschaulicht, wie das- `new` Schlüsselwort verwendet wird, um-Werte zu instanziieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-109">(Floating-point values are truncated before they are assigned to the <xref:System.Numerics.BigInteger>.) The following example illustrates how to use the `new` keyword to instantiate <xref:System.Numerics.BigInteger> values.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#1)]
     [!code-vb[System.Numerics.BigInteger.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#1)]  
  
-   <span data-ttu-id="21642-110">Sie können eine Variable deklarieren <xref:System.Numerics.BigInteger> und ihr einen Wert zuweisen, wie es bei jedem beliebigen numerischen Typ der Fall ist, solange dieser Wert ein ganzzahliger Typ ist.</span><span class="sxs-lookup"><span data-stu-id="21642-110">You can declare a <xref:System.Numerics.BigInteger> variable and assign it a value just as you would any numeric type, as long as that value is an integral type.</span></span> <span data-ttu-id="21642-111">Im folgenden Beispiel wird mithilfe der-Zuweisung ein <xref:System.Numerics.BigInteger> Wert aus einem erstellt <xref:System.Int64> .</span><span class="sxs-lookup"><span data-stu-id="21642-111">The following example uses assignment to create a <xref:System.Numerics.BigInteger> value from an <xref:System.Int64>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#2)]
     [!code-vb[System.Numerics.BigInteger.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#2)]  
  
-   <span data-ttu-id="21642-112">Sie können einem-Objekt einen Dezimal-oder Gleit Komma Wert zuweisen, <xref:System.Numerics.BigInteger> Wenn Sie den Wert umwandeln oder ihn zuerst konvertieren.</span><span class="sxs-lookup"><span data-stu-id="21642-112">You can assign a decimal or floating-point value to a <xref:System.Numerics.BigInteger> object if you cast the value or convert it first.</span></span> <span data-ttu-id="21642-113">Im folgenden Beispiel werden explizit (in c#) oder (in Visual Basic) a <xref:System.Double> und ein- <xref:System.Decimal> Wert in eine umgewandelt <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-113">The following example explicitly casts (in C#) or converts (in Visual Basic) a <xref:System.Double> and a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#3)]
     [!code-vb[System.Numerics.BigInteger.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#3)]  
  
 <span data-ttu-id="21642-114">Diese Methoden ermöglichen es Ihnen, ein-Objekt zu instanziieren, <xref:System.Numerics.BigInteger> dessen Wert nur im Bereich von einem der vorhandenen numerischen Typen liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-114">These methods enable you to instantiate a <xref:System.Numerics.BigInteger> object whose value is in the range of one of the existing numeric types only.</span></span> <span data-ttu-id="21642-115">Sie können ein-Objekt instanziieren, <xref:System.Numerics.BigInteger> dessen Wert den Bereich der vorhandenen numerischen Typen auf eine von drei Arten überschreiten kann:</span><span class="sxs-lookup"><span data-stu-id="21642-115">You can instantiate a <xref:System.Numerics.BigInteger> object whose value can exceed the range of the existing numeric types in one of three ways:</span></span>  
  
-   <span data-ttu-id="21642-116">Sie können das `new` Schlüsselwort verwenden und ein Bytearray beliebiger Größe für den <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> Konstruktor bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="21642-116">You can use the `new` keyword and provide a byte array of any size to the <xref:System.Numerics.BigInteger.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span> <span data-ttu-id="21642-117">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="21642-117">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#4)]
     [!code-vb[System.Numerics.BigInteger.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#4)]  
  
-   <span data-ttu-id="21642-118">Sie können die- <xref:System.Numerics.BigInteger.Parse%2A> Methode oder die- <xref:System.Numerics.BigInteger.TryParse%2A> Methode zum Konvertieren der Zeichen folgen Darstellung einer Zahl in eine-Methode aufzurufen <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-118">You can call the <xref:System.Numerics.BigInteger.Parse%2A> or <xref:System.Numerics.BigInteger.TryParse%2A> methods to convert the string representation of a number to a <xref:System.Numerics.BigInteger>.</span></span> <span data-ttu-id="21642-119">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="21642-119">For example:</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#5)]
     [!code-vb[System.Numerics.BigInteger.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#5)]  
  
-   <span data-ttu-id="21642-120">Sie können eine- `static` `Shared` Methode (in Visual Basic) aufzurufen <xref:System.Numerics.BigInteger> , die einen Vorgang für einen numerischen Ausdruck ausführt und ein berechnetes Ergebnis zurückgibt <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-120">You can call a `static` (`Shared` in Visual Basic) <xref:System.Numerics.BigInteger> method that performs some operation on a numeric expression and returns a calculated <xref:System.Numerics.BigInteger> result.</span></span> <span data-ttu-id="21642-121">Im folgenden Beispiel wird dies durch das Durchführen von Cub <xref:System.UInt64.MaxValue?displayProperty=nameWithType> und das Zuweisen des Ergebnisses zu einem veranschaulicht <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-121">The following example does this by cubing <xref:System.UInt64.MaxValue?displayProperty=nameWithType> and assigning the result to a <xref:System.Numerics.BigInteger>.</span></span>  
  
     [!code-csharp[System.Numerics.BigInteger.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/cs/BigInteger_Examples.cs#6)]
     [!code-vb[System.Numerics.BigInteger.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class/vb/BigInteger_Examples.vb#6)]  
  
 <span data-ttu-id="21642-122">Der nicht initialisierte Wert eines <xref:System.Numerics.BigInteger> ist <xref:System.Numerics.BigInteger.Zero%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-122">The uninitialized value of a <xref:System.Numerics.BigInteger> is <xref:System.Numerics.BigInteger.Zero%2A>.</span></span>  
  
## <a name="performing-operations-on-biginteger-values"></a><span data-ttu-id="21642-123">Ausführen von Vorgängen für BigInteger-Werte</span><span class="sxs-lookup"><span data-stu-id="21642-123">Performing Operations on BigInteger Values</span></span>  
 <span data-ttu-id="21642-124">Sie können eine- <xref:System.Numerics.BigInteger> Instanz wie einen beliebigen anderen ganzzahligen Typ verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-124">You can use a <xref:System.Numerics.BigInteger> instance as you would use any other integral type.</span></span> <span data-ttu-id="21642-125"><xref:System.Numerics.BigInteger> über lädt die standardmäßigen numerischen Operatoren, damit Sie grundlegende mathematische Operationen wie Addition, Subtraktion, Division, Multiplikation, Subtraktion, Negation und unäre Negation durchführen können.</span><span class="sxs-lookup"><span data-stu-id="21642-125"><xref:System.Numerics.BigInteger> overloads the standard numeric operators to enable you to perform basic mathematical operations such as addition, subtraction, division, multiplication, subtraction, negation, and unary negation.</span></span> <span data-ttu-id="21642-126">Sie können auch die standardmäßigen numerischen Operatoren verwenden, um zwei Werte miteinander zu vergleichen <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-126">You can also use the standard numeric operators to compare two <xref:System.Numerics.BigInteger> values with each other.</span></span> <span data-ttu-id="21642-127">Wie die anderen ganzzahligen Typen <xref:System.Numerics.BigInteger> unterstützt auch die bitweisen `And` `Or` Operatoren,,, `XOr` Left Shift und Right Shift.</span><span class="sxs-lookup"><span data-stu-id="21642-127">Like the other integral types, <xref:System.Numerics.BigInteger> also supports the bitwise `And`, `Or`, `XOr`, left shift, and right shift operators.</span></span> <span data-ttu-id="21642-128">Für Sprachen, die keine benutzerdefinierten Operatoren unterstützen, <xref:System.Numerics.BigInteger> stellt die Struktur auch äquivalente Methoden zum Durchführen mathematischer Operationen bereit.</span><span class="sxs-lookup"><span data-stu-id="21642-128">For languages that do not support custom operators, the <xref:System.Numerics.BigInteger> structure also provides equivalent methods for performing mathematical operations.</span></span> <span data-ttu-id="21642-129">Dazu zählen <xref:System.Numerics.BigInteger.Add%2A> , <xref:System.Numerics.BigInteger.Divide%2A> , <xref:System.Numerics.BigInteger.Multiply%2A> , <xref:System.Numerics.BigInteger.Negate%2A> , <xref:System.Numerics.BigInteger.Subtract%2A> und einige andere.</span><span class="sxs-lookup"><span data-stu-id="21642-129">These include <xref:System.Numerics.BigInteger.Add%2A>, <xref:System.Numerics.BigInteger.Divide%2A>, <xref:System.Numerics.BigInteger.Multiply%2A>, <xref:System.Numerics.BigInteger.Negate%2A>, <xref:System.Numerics.BigInteger.Subtract%2A>, and several others.</span></span>  
  
 <span data-ttu-id="21642-130">Viele Member der <xref:System.Numerics.BigInteger> Struktur entsprechen direkt den Membern der anderen ganzzahligen Typen.</span><span class="sxs-lookup"><span data-stu-id="21642-130">Many members of the <xref:System.Numerics.BigInteger> structure correspond directly to members of the other integral types.</span></span> <span data-ttu-id="21642-131">Außerdem werden von Member <xref:System.Numerics.BigInteger> wie die folgenden hinzugefügt:</span><span class="sxs-lookup"><span data-stu-id="21642-131">In addition, <xref:System.Numerics.BigInteger> adds members such as the following:</span></span>  
  
-   <span data-ttu-id="21642-132"><xref:System.Numerics.BigInteger.Sign%2A>, die einen Wert zurückgibt, der das Vorzeichen eines <xref:System.Numerics.BigInteger> Werts angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-132"><xref:System.Numerics.BigInteger.Sign%2A>, which returns a value that indicates the sign of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="21642-133"><xref:System.Numerics.BigInteger.Abs%2A>, die den absoluten Wert eines-Werts zurückgibt <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-133"><xref:System.Numerics.BigInteger.Abs%2A>, which returns the absolute value of a <xref:System.Numerics.BigInteger> value.</span></span>  
  
-   <span data-ttu-id="21642-134"><xref:System.Numerics.BigInteger.DivRem%2A>, die den Quotienten und den Rest eines Divisions Vorgangs zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="21642-134"><xref:System.Numerics.BigInteger.DivRem%2A>, which returns both the quotient and remainder of a division operation.</span></span>  
  
-   <span data-ttu-id="21642-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>Gibt den größten gemeinsamen Divisor von zwei <xref:System.Numerics.BigInteger> Werten zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-135"><xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A>, which returns the greatest common divisor of two <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="21642-136">Viele dieser zusätzlichen Member entsprechen den Membern der- <xref:System.Math> Klasse, die die Funktionalität zum Arbeiten mit den primitiven numerischen Typen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-136">Many of these additional members correspond to the members of the <xref:System.Math> class, which provides the functionality to work with the primitive numeric types.</span></span>  
  
<a name="mutability"></a>   
## <a name="mutability-and-the-biginteger-structure"></a><span data-ttu-id="21642-137">Muability und BigInteger-Struktur</span><span class="sxs-lookup"><span data-stu-id="21642-137">Mutability and the BigInteger Structure</span></span>  
 <span data-ttu-id="21642-138">Im folgenden Beispiel wird ein-Objekt instanziiert <xref:System.Numerics.BigInteger> und anschließend der Wert um eins erhöht.</span><span class="sxs-lookup"><span data-stu-id="21642-138">The following example instantiates a <xref:System.Numerics.BigInteger> object and then increments its value by one.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#1)]  
  
 <span data-ttu-id="21642-139">Obwohl in diesem Beispiel der Wert des vorhandenen Objekts geändert wird, ist dies nicht der Fall.</span><span class="sxs-lookup"><span data-stu-id="21642-139">Although this example appears to modify the value of the existing object, this is not the case.</span></span> <span data-ttu-id="21642-140"><xref:System.Numerics.BigInteger> Objekte sind unveränderlich, d. h., der Common Language Runtime erstellt tatsächlich ein neues <xref:System.Numerics.BigInteger> -Objekt und weist ihm einen Wert zu, der größer als der vorherige Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-140"><xref:System.Numerics.BigInteger> objects are immutable, which means that internally, the common language runtime actually creates a new <xref:System.Numerics.BigInteger> object and assigns it a value one greater than its previous value.</span></span> <span data-ttu-id="21642-141">Dieses neue Objekt wird dann an den Aufrufer zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="21642-141">This new object is then returned to the caller.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21642-142">Die anderen numerischen Typen in der .NET Framework sind ebenfalls unveränderlich.</span><span class="sxs-lookup"><span data-stu-id="21642-142">The other numeric types in the .NET Framework are also immutable.</span></span> <span data-ttu-id="21642-143">Da der Typ jedoch <xref:System.Numerics.BigInteger> keine oberen oder unteren Grenzen aufweist, können seine Werte sehr groß werden und eine messbare Auswirkung auf die Leistung haben.</span><span class="sxs-lookup"><span data-stu-id="21642-143">However, because the <xref:System.Numerics.BigInteger> type has no upper or lower bounds, its values can grow extremely large and have a measurable impact on performance.</span></span>  
  
 <span data-ttu-id="21642-144">Obwohl dieser Prozess für den Aufrufer transparent ist, wird eine Leistungs Einbuße verursacht.</span><span class="sxs-lookup"><span data-stu-id="21642-144">Although this process is transparent to the caller, it does incur a performance penalty.</span></span> <span data-ttu-id="21642-145">In einigen Fällen, insbesondere wenn wiederholte Vorgänge in einer Schleife für sehr große Werte ausgeführt werden <xref:System.Numerics.BigInteger> , kann diese Leistungs Einbuße erheblich sein.</span><span class="sxs-lookup"><span data-stu-id="21642-145">In some cases, especially when repeated operations are performed in a loop on very large <xref:System.Numerics.BigInteger> values, that performance penalty can be significant.</span></span> <span data-ttu-id="21642-146">Beispielsweise wird im folgenden Beispiel ein Vorgang wiederholt bis zu einer Million Male durchgeführt, und ein <xref:System.Numerics.BigInteger> Wert wird bei jeder erfolgreichen Ausführung des Vorgangs um eins erhöht.</span><span class="sxs-lookup"><span data-stu-id="21642-146">For example, in the following example, an operation is performed repetitively up to a million times, and a <xref:System.Numerics.BigInteger> value is incremented by one every time the operation succeeds.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#12)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#12)]  
  
 <span data-ttu-id="21642-147">In einem solchen Fall können Sie die Leistung verbessern, indem Sie alle zwischen Zuweisungen für eine Variable durchführen <xref:System.Int32> .</span><span class="sxs-lookup"><span data-stu-id="21642-147">In such a case, you can improve performance by performing all intermediate assignments to an <xref:System.Int32> variable.</span></span> <span data-ttu-id="21642-148">Der endgültige Wert der Variablen kann dann dem-Objekt zugewiesen werden, <xref:System.Numerics.BigInteger> Wenn die Schleife beendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-148">The final value of the variable can then be assigned to the <xref:System.Numerics.BigInteger> object when the loop exits.</span></span> <span data-ttu-id="21642-149">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-149">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/cs/Mutability_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.Mutability#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.Mutability/vb/Mutability_Examples.vb#3)]  
  
## <a name="working-with-byte-arrays-and-hexadecimal-strings"></a><span data-ttu-id="21642-150">Arbeiten mit Byte Arrays und hexadezimal Zeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="21642-150">Working with Byte Arrays and Hexadecimal Strings</span></span>  
 <span data-ttu-id="21642-151">Wenn Sie <xref:System.Numerics.BigInteger> Werte in Byte Arrays konvertieren oder Byte Arrays in- <xref:System.Numerics.BigInteger> Werte konvertieren, müssen Sie die Reihenfolge der Bytes in Erwägung gezogen.</span><span class="sxs-lookup"><span data-stu-id="21642-151">If you convert <xref:System.Numerics.BigInteger> values to byte arrays, or if you convert byte arrays to <xref:System.Numerics.BigInteger> values, you must consider the order of bytes.</span></span> <span data-ttu-id="21642-152">Die- <xref:System.Numerics.BigInteger> Struktur erwartet, dass die einzelnen Bytes in einem Bytearray in Little-Endian-Reihenfolge angezeigt werden (d. h., die niedrigeren Bytes des Werts vor den Bytes höherer Ordnung).</span><span class="sxs-lookup"><span data-stu-id="21642-152">The <xref:System.Numerics.BigInteger> structure expects the individual bytes in a byte array to appear in little-endian order (that is, the lower-order bytes of the value precede the higher-order bytes).</span></span> <span data-ttu-id="21642-153">Sie können einen Roundtrip <xref:System.Numerics.BigInteger> für einen Wert durchführen, indem Sie die- <xref:System.Numerics.BigInteger.ToByteArray%2A> Methode aufrufen und dann das resultierende Bytearray an den- <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor übergeben, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-153">You can round-trip a <xref:System.Numerics.BigInteger> value by calling the <xref:System.Numerics.BigInteger.ToByteArray%2A> method and then passing the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#1)]  
  
 <span data-ttu-id="21642-154">Zum Instanziieren eines <xref:System.Numerics.BigInteger> Werts aus einem Bytearray, das einen Wert eines anderen ganzzahligen Typs darstellt, können Sie den ganzzahligen Wert an die <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> -Methode übergeben und dann das resultierende Bytearray an den- <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor übergeben.</span><span class="sxs-lookup"><span data-stu-id="21642-154">To instantiate a <xref:System.Numerics.BigInteger> value from a byte array that represents a value of some other integral type, you can pass the integral value to the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method, and then pass the resulting byte array to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span> <span data-ttu-id="21642-155">Im folgenden Beispiel wird ein <xref:System.Numerics.BigInteger> Wert aus einem Bytearray instanziiert, der einen- <xref:System.Int16> Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-155">The following example instantiates a <xref:System.Numerics.BigInteger> value from a byte array that represents an <xref:System.Int16> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#2)]  
  
 <span data-ttu-id="21642-156">Die <xref:System.Numerics.BigInteger> -Struktur geht davon aus, dass negative Werte mithilfe der Komplement-Darstellung von zwei gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="21642-156">The <xref:System.Numerics.BigInteger> structure assumes that negative values are stored by using two's complement representation.</span></span> <span data-ttu-id="21642-157">Da die- <xref:System.Numerics.BigInteger> Struktur einen numerischen Wert ohne festes Länge darstellt, <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> interpretiert der Konstruktor immer das signifikanteste Bit des letzten Bytes im Array als Signier Bit.</span><span class="sxs-lookup"><span data-stu-id="21642-157">Because the <xref:System.Numerics.BigInteger> structure represents a numeric value with no fixed length, the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor always interprets the most significant bit of the last byte in the array as a sign bit.</span></span> <span data-ttu-id="21642-158">Um zu verhindern <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> , dass der Konstruktor die zwei Komplement Darstellung eines negativen Werts mit der Vorzeichen-und Größen Darstellung eines positiven Werts verwechselt, sollten positive Werte, bei denen das höchst wertige Bit des letzten Bytes im Bytearray normalerweise festgelegt wird, ein zusätzliches Byte enthalten, dessen Wert 0 ist.</span><span class="sxs-lookup"><span data-stu-id="21642-158">To prevent the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor from confusing the two's complement representation of a negative value with the sign and magnitude representation of a positive value, positive values in which the most significant bit of the last byte in the byte array would ordinarily be set should include an additional byte whose value is 0.</span></span> <span data-ttu-id="21642-159">Beispielsweise ist 0xC0 0xbd 0xF 0xFF die Little-de-hexadezimale Darstellung von-1 Million oder 4.293.967.296.</span><span class="sxs-lookup"><span data-stu-id="21642-159">For example, 0xC0 0xBD 0xF0 0xFF is the little-endian hexadecimal representation of either -1,000,000 or 4,293,967,296.</span></span> <span data-ttu-id="21642-160">Da das signifikanteste Bit des letzten Bytes in diesem Array on ist, wird der Wert des Bytearrays vom <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor als-1 Million interpretiert.</span><span class="sxs-lookup"><span data-stu-id="21642-160">Because the most significant bit of the last byte in this array is on, the value of the byte array would be interpreted by the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor as -1,000,000.</span></span> <span data-ttu-id="21642-161">Um einen zu instanziieren <xref:System.Numerics.BigInteger> , dessen Wert positiv ist, muss ein Bytearray, dessen Elemente 0xC0 0xbd 0xF0 0xFF 0x00 lauten, an den-Konstruktor übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="21642-161">To instantiate a <xref:System.Numerics.BigInteger> whose value is positive, a byte array whose elements are 0xC0 0xBD 0xF0 0xFF 0x00 must be passed to the constructor.</span></span> <span data-ttu-id="21642-162">Dies wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-162">The following example illustrates this.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#3)]  
  
 <span data-ttu-id="21642-163">Byte Arrays, die von der- <xref:System.Numerics.BigInteger.ToByteArray%2A> Methode aus positiven Werten erstellt werden, enthalten dieses zusätzliche Byte mit 0 (null).</span><span class="sxs-lookup"><span data-stu-id="21642-163">Byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method from positive values include this extra zero-value byte.</span></span> <span data-ttu-id="21642-164">Aus diesem Grund <xref:System.Numerics.BigInteger> kann die-Struktur erfolgreich Roundtrip-Werte durch Zuweisen der Werte und deren Wiederherstellung in Byte Arrays erreichen, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-164">Therefore, the <xref:System.Numerics.BigInteger> structure can successfully round-trip values by assigning them to, and then restoring them from, byte arrays, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#4)]  
  
 <span data-ttu-id="21642-165">Sie müssen jedoch möglicherweise dieses zusätzliche NULL-Wert-Byte zu Byte Arrays hinzufügen, die dynamisch vom Entwickler erstellt werden oder von Methoden zurückgegeben werden, die ganze Zahlen ohne Vorzeichen in Byte Arrays konvertieren ( <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType> z <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType> . b <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType> ., und).</span><span class="sxs-lookup"><span data-stu-id="21642-165">However, you may need to add this additional zero-value byte to byte arrays that are created dynamically by the developer or that are returned by methods that convert unsigned integers to byte arrays (such as <xref:System.BitConverter.GetBytes%28System.UInt16%29?displayProperty=nameWithType>, <xref:System.BitConverter.GetBytes%28System.UInt32%29?displayProperty=nameWithType>, and <xref:System.BitConverter.GetBytes%28System.UInt64%29?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="21642-166">Bei der Verarbeitung einer hexadezimalen Zeichenfolge wird <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> von der-Methode und der- <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode angenommen, dass die-Methode, wenn das signifikanteste Bit des ersten Bytes in der Zeichenfolge festgelegt ist, oder wenn die erste hexadezimal Ziffer der Zeichenfolge die unteren vier Bits eines Bytewerts darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-166">When parsing a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> and <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> methods assume that if the most significant bit of the first byte in the string is set, or if the first hexadecimal digit of the string represents the lower four bits of a byte value, the value is represented by using two's complement representation.</span></span> <span data-ttu-id="21642-167">Beispielsweise stellen sowohl "FF01" als auch "F01" den Dezimalwert-255 dar.</span><span class="sxs-lookup"><span data-stu-id="21642-167">For example, both "FF01" and "F01" represent the decimal value -255.</span></span> <span data-ttu-id="21642-168">Positive Werte sollten eine führende Null enthalten, um positiv von negativen Werten zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="21642-168">To differentiate positive from negative values, positive values should include a leading zero.</span></span> <span data-ttu-id="21642-169">Die relevanten über Ladungen der- <xref:System.Numerics.BigInteger.ToString%2A> Methode, wenn Sie der Format Zeichenfolge "X" übertragen werden, fügen der zurückgegebenen hexadezimal Zeichenfolge für positive Werte eine führende Null hinzu.</span><span class="sxs-lookup"><span data-stu-id="21642-169">The relevant overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, when they are passed the "X" format string, add a leading zero to the returned hexadecimal string for positive values.</span></span> <span data-ttu-id="21642-170">Dies ermöglicht das Roundtrip <xref:System.Numerics.BigInteger> von Werten mithilfe der <xref:System.Numerics.BigInteger.ToString%2A> -Methode und der- <xref:System.Numerics.BigInteger.Parse%2A> Methode, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-170">This makes it possible to round-trip <xref:System.Numerics.BigInteger> values by using the <xref:System.Numerics.BigInteger.ToString%2A> and <xref:System.Numerics.BigInteger.Parse%2A> methods, as the following example shows.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples.vb#5)]  
  
 <span data-ttu-id="21642-171">Die hexadezimal Zeichenfolgen, die durch den Aufruf der `ToString` Methoden der anderen ganzzahligen Typen oder der über Ladungen der Methode erstellt werden <xref:System.Convert.ToString%2A> , die einen-Parameter enthalten, geben jedoch `toBase` nicht das Vorzeichen des Werts oder des Quell Datentyps an, von dem die hexadezimale Zeichenfolge abgeleitet wurde.</span><span class="sxs-lookup"><span data-stu-id="21642-171">However, the hexadecimal strings created by calling the `ToString` methods of the other integral types or the overloads of the <xref:System.Convert.ToString%2A> method that include a `toBase` parameter do not indicate the sign of the value or the source data type from which the hexadecimal string was derived.</span></span> <span data-ttu-id="21642-172">Das Instanziieren eines <xref:System.Numerics.BigInteger> Werts aus einer solchen Zeichenfolge erfordert einige zusätzliche Logik.</span><span class="sxs-lookup"><span data-stu-id="21642-172">Successfully instantiating a <xref:System.Numerics.BigInteger> value from such a string requires some additional logic.</span></span> <span data-ttu-id="21642-173">Im folgenden Beispiel wird eine mögliche Implementierung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-173">The following example provides one possible implementation.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/cs/ByteAndHex_Examples2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Class.ByteAndHex#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Class.ByteAndHex/vb/ByteAndHex_Examples2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-174">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur.</span><span class="sxs-lookup"><span data-stu-id="21642-174">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : byte[] -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-175">Ein Array der Bytewerte in Little-Endian-Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="21642-175">An array of byte values in little-endian order.</span></span></param>
        <summary><span data-ttu-id="21642-176">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung der Werte in einem Bytearray.</span><span class="sxs-lookup"><span data-stu-id="21642-176">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using the values in a byte array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-177">Die einzelnen Bytes im `value` Array sollten in Little-Endian-Reihenfolge, vom Byte der untersten Reihenfolge bis zum Byte der höchsten Reihenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="21642-177">The individual bytes in the `value` array should be in little-endian order, from lowest-order byte to highest-order byte.</span></span> <span data-ttu-id="21642-178">Beispielsweise wird der numerische Wert 1 Billion dargestellt, wie in der folgenden Tabelle dargestellt:</span><span class="sxs-lookup"><span data-stu-id="21642-178">For example, the numeric value 1,000,000,000,000 is represented as shown in the following table:</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="21642-179">Hexadezimale Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="21642-179">Hexadecimal string</span></span>|<span data-ttu-id="21642-180">E8D4A51000</span><span class="sxs-lookup"><span data-stu-id="21642-180">E8D4A51000</span></span>|  
|<span data-ttu-id="21642-181">Bytearray (der niedrigste Index zuerst)</span><span class="sxs-lookup"><span data-stu-id="21642-181">Byte array (lowest index first)</span></span>|<span data-ttu-id="21642-182">00 10 A5 D4 E8 00</span><span class="sxs-lookup"><span data-stu-id="21642-182">00 10 A5 D4 E8 00</span></span>|  
  
 <span data-ttu-id="21642-183">Die meisten Methoden, die numerische Werte in Byte Arrays konvertieren, wie z <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> . b. und, geben Byte Arrays in Little-Endian-Reihenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-183">Most methods that convert numeric values to byte arrays, such as <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> and <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType>, return byte arrays in little-endian order.</span></span>  
  
 <span data-ttu-id="21642-184">Der Konstruktor erwartet positive Werte im Bytearray, um die Darstellung der Signierung zu verwenden, und negative Werte, um die zwei Komplement Darstellung zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-184">The constructor expects positive values in the byte array to use sign-and-magnitude representation, and negative values to use two's complement representation.</span></span> <span data-ttu-id="21642-185">Anders ausgedrückt: Wenn das oberste Bit des Byte der höchsten Reihenfolge `value` festgelegt wird, ist der resultierende <xref:System.Numerics.BigInteger> Wert negativ.</span><span class="sxs-lookup"><span data-stu-id="21642-185">In other words, if the highest-order bit of the highest-order byte in `value` is set, the resulting <xref:System.Numerics.BigInteger> value is negative.</span></span> <span data-ttu-id="21642-186">Abhängig von der Quelle des Bytearrays kann dies dazu führen, dass ein positiver Wert als negativer Wert fehlinterpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="21642-186">Depending on the source of the byte array, this may cause a positive value to be misinterpreted as a negative value.</span></span> <span data-ttu-id="21642-187">Byte Arrays werden in der Regel auf folgende Weise generiert:</span><span class="sxs-lookup"><span data-stu-id="21642-187">Byte arrays are typically generated in the following ways:</span></span>  
  
-   <span data-ttu-id="21642-188">Durch Aufrufen der- <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="21642-188">By calling the <xref:System.Numerics.BigInteger.ToByteArray%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="21642-189">Da diese Methode ein Bytearray zurückgibt, bei dem das Bit der höchsten Reihenfolge im Array für positive Werte auf 0 (null) festgelegt ist, besteht keine Gefahr, dass ein positiver Wert als negativ interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="21642-189">Because this method returns a byte array with the highest-order bit of the highest-order byte in the array set to zero for positive values, there is no chance of misinterpreting a positive value as negative.</span></span> <span data-ttu-id="21642-190">Nicht geänderte Byte Arrays, die von der- <xref:System.Numerics.BigInteger.ToByteArray%2A> Methode erstellt werden, werden immer erfolgreich ausgeführt, wenn Sie an den- <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="21642-190">Unmodified byte arrays created by the <xref:System.Numerics.BigInteger.ToByteArray%2A> method always successfully round-trip when they are passed to the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
-   <span data-ttu-id="21642-191">Durch Aufrufen der <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> -Methode und übergeben einer Ganzzahl mit Vorzeichen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="21642-191">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it a signed integer as a parameter.</span></span> <span data-ttu-id="21642-192">Da ganze Zahlen mit Vorzeichen sowohl die Darstellung von Vorzeichen als auch die Größe und die Komplement Darstellung von zwei verarbeiten, besteht keine Gefahr, dass ein positiver Wert als negativ interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="21642-192">Because signed integers handle both sign-and-magnitude representation and two's complement representation, there is no chance of misinterpreting a positive value as negative.</span></span>  
  
-   <span data-ttu-id="21642-193">Durch Aufrufen der <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> -Methode und übergeben einer Ganzzahl ohne Vorzeichen als Parameter.</span><span class="sxs-lookup"><span data-stu-id="21642-193">By calling the <xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType> method and passing it an unsigned integer as a parameter.</span></span> <span data-ttu-id="21642-194">Da ganze Zahlen ohne Vorzeichen nur durch ihre Größe dargestellt werden, können positive Werte als negative Werte interpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="21642-194">Because unsigned integers are represented by their magnitude only, positive values can be misinterpreted as negative values.</span></span> <span data-ttu-id="21642-195">Um diese Fehlinterpretation zu verhindern, können Sie am Ende des Arrays einen 0-Byte-Wert hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="21642-195">To prevent this misinterpretation, you can add a zero-byte value to the end of the array.</span></span> <span data-ttu-id="21642-196">Das Beispiel im nächsten Abschnitt enthält eine Abbildung.</span><span class="sxs-lookup"><span data-stu-id="21642-196">The example in the next section provides an illustration.</span></span>  
  
-   <span data-ttu-id="21642-197">Durch das Erstellen eines Bytearrays entweder dynamisch oder statisch, ohne dass notwendigerweise eine der vorherigen Methoden aufgerufen wird, oder durch Ändern eines vorhandenen Bytearrays.</span><span class="sxs-lookup"><span data-stu-id="21642-197">By creating a byte array either dynamically or statically without necessarily calling any of the previous methods, or by modifying an existing byte array.</span></span> <span data-ttu-id="21642-198">Um zu verhindern, dass positive Werte als negative Werte interpretiert werden, können Sie am Ende des Arrays einen 0-Byte-Wert hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="21642-198">To prevent positive values from being misinterpreted as negative values, you can add a zero-byte value to the end of the array.</span></span>  
  
 <span data-ttu-id="21642-199">Wenn `value` ein leeres <xref:System.Byte> Array ist, wird das neue- <xref:System.Numerics.BigInteger> Objekt mit einem Wert von initialisiert <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-199">If `value` is an empty <xref:System.Byte> array, the new <xref:System.Numerics.BigInteger> object is initialized to a value of <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-200">Wenn `value` ist `null` , löst der Konstruktor eine aus <xref:System.ArgumentNullException> .</span><span class="sxs-lookup"><span data-stu-id="21642-200">If `value` is `null`, the constructor throws an <xref:System.ArgumentNullException>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-201">Im folgenden Beispiel wird ein- <xref:System.Numerics.BigInteger> Objekt aus einem Bytearray mit fünf Elementen instanziiert, dessen Wert {5, 4, 3, 2, 1} ist.</span><span class="sxs-lookup"><span data-stu-id="21642-201">The following example instantiates a <xref:System.Numerics.BigInteger> object from a 5-element byte array whose value is {5, 4, 3, 2, 1}.</span></span> <span data-ttu-id="21642-202">Anschließend wird der <xref:System.Numerics.BigInteger> Wert, der als Dezimal-und hexadezimal Zahl dargestellt wird, in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-202">It then displays the <xref:System.Numerics.BigInteger> value, represented as both decimal and hexadecimal numbers, to the console.</span></span> <span data-ttu-id="21642-203">Durch einen Vergleich des Eingabe Arrays mit der Textausgabe wird klar, warum diese Überladung des <xref:System.Numerics.BigInteger> Klassenkonstruktors ein-Objekt erstellt, <xref:System.Numerics.BigInteger> dessen Wert 4328719365 (oder 0x102030405) ist.</span><span class="sxs-lookup"><span data-stu-id="21642-203">A comparison of the input array with the text output makes it clear why this overload of the <xref:System.Numerics.BigInteger> class constructor creates a <xref:System.Numerics.BigInteger> object whose value is 4328719365 (or 0x102030405).</span></span> <span data-ttu-id="21642-204">Das erste Element des Bytearrays, dessen Wert 5 ist, definiert den Wert des Werts der niedrigsten Reihenfolge des <xref:System.Numerics.BigInteger> Objekts, das 0x05 ist.</span><span class="sxs-lookup"><span data-stu-id="21642-204">The first element of the byte array, whose value is 5, defines the value of the lowest-order byte of the <xref:System.Numerics.BigInteger> object, which is 0x05.</span></span> <span data-ttu-id="21642-205">Das zweite Element des Bytearrays, dessen Wert 4 ist, definiert den Wert des zweiten Bytes des <xref:System.Numerics.BigInteger> -Objekts, das 0x04 ist, usw.</span><span class="sxs-lookup"><span data-stu-id="21642-205">The second element of the byte array, whose value is 4, defines the value of the second byte of the <xref:System.Numerics.BigInteger> object, which is 0x04, and so on.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ctors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#1)]  
  
 <span data-ttu-id="21642-206">Das folgende Beispiel instanziiert einen positiven und einen negativen <xref:System.Numerics.BigInteger> Wert, übergibt sie an die <xref:System.Numerics.BigInteger.ToByteArray%2A> -Methode und stellt dann die ursprünglichen <xref:System.Numerics.BigInteger> Werte aus dem resultierenden Bytearray wieder her.</span><span class="sxs-lookup"><span data-stu-id="21642-206">The following example instantiates a positive and a negative <xref:System.Numerics.BigInteger> value, passes them to the <xref:System.Numerics.BigInteger.ToByteArray%2A> method, and then restores the original <xref:System.Numerics.BigInteger> values from the resulting byte array.</span></span> <span data-ttu-id="21642-207">Beachten Sie, dass die beiden Werte durch identische Byte Arrays dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="21642-207">Note that the two values are represented by identical byte arrays.</span></span> <span data-ttu-id="21642-208">Der einzige Unterschied besteht darin, dass das wichtigste Bit des letzten Elements im Bytearray ist.</span><span class="sxs-lookup"><span data-stu-id="21642-208">The only difference between them is in the most significant bit of the last element in the byte array.</span></span> <span data-ttu-id="21642-209">Dieses Bit ist festgelegt (der Wert des Bytes ist 0xFF), wenn das Array aus einem negativen Wert erstellt wird <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-209">This bit is set (the value of the byte is 0xFF) if the array is created from a negative <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="21642-210">Das-Bit ist nicht festgelegt (der Wert des Bytes ist 0), wenn das Array aus einem positiven Wert erstellt wird <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-210">The bit is not set (the value of the byte is zero), if the array is created from a positive <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.ctors#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#2)]  
  
 <span data-ttu-id="21642-211">Im folgenden Beispiel wird veranschaulicht, wie sichergestellt wird, dass ein positiver Wert nicht fälschlicherweise als negativer Wert instanziiert wird, indem ein Byte mit dem Wert 0 (null) bis zum Ende des Arrays hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-211">The following example illustrates how to make sure that a positive value is not incorrectly instantiated as a negative value by adding a byte whose value is zero to the end of the array.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ctors#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21642-212"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21642-212"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToByteArray" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Decimal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : decimal -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-213">Eine Dezimalzahl.</span><span class="sxs-lookup"><span data-stu-id="21642-213">A decimal number.</span></span></param>
        <summary><span data-ttu-id="21642-214">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur mit einem <see cref="T:System.Decimal" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-214">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-215">Das Ergebnis des Aufrufs dieses Konstruktors ist identisch mit dem expliziten Zuweisen eines <xref:System.Decimal> Werts zu einer <xref:System.Numerics.BigInteger> Variablen.</span><span class="sxs-lookup"><span data-stu-id="21642-215">The result of calling this constructor is identical to explicitly assigning a <xref:System.Decimal> value to a <xref:System.Numerics.BigInteger> variable.</span></span>  
  
 <span data-ttu-id="21642-216">Der Aufruf dieses Konstruktors kann zu Datenverlusten führen. Alle Bruchteile von werden `value` beim Instanziieren eines-Objekts abgeschnitten <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-216">Calling this constructor can cause data loss; any fractional part of `value` is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-217">Im folgenden Beispiel wird veranschaulicht, wie der- <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> Konstruktor verwendet wird, um ein-Objekt zu instanziieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-217">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="21642-218">Er definiert ein Array von <xref:System.Decimal> -Werten und übergibt dann jeden Wert an den- <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="21642-218">It defines an array of <xref:System.Decimal> values, and then passes each value to the <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29> constructor.</span></span> <span data-ttu-id="21642-219">Beachten Sie, dass der <xref:System.Decimal> Wert abgeschnitten wird, anstatt gerundet zu werden, wenn er dem-Objekt zugewiesen wird <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-219">Note that the <xref:System.Decimal> value is truncated instead of rounded when it is assigned to the <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ctors#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(double value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : double -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-220">Ein Gleitkommawert mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="21642-220">A double-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="21642-221">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung eines Gleitkommawerts mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="21642-221">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a double-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-222">Beim Instanziieren eines-Objekts werden alle Bruchteile des- `value` Parameters abgeschnitten <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-222">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="21642-223">Aufgrund der fehlenden Genauigkeit des- <xref:System.Double> Datentyps kann der Aufruf dieses Konstruktors zu Datenverlusten führen.</span><span class="sxs-lookup"><span data-stu-id="21642-223">Because of the lack of precision of the <xref:System.Double> data type, calling this constructor can cause data loss.</span></span>  
  
 <span data-ttu-id="21642-224">Der <xref:System.Numerics.BigInteger> Wert, der sich aus dem Aufruf dieses Konstruktors ergibt, ist identisch mit dem Wert, der sich aus dem expliziten Zuweisen eines <xref:System.Double> Werts zu einem ergibt <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-224">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Double> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-225">Im folgenden Beispiel wird veranschaulicht, wie der- <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> Konstruktor verwendet wird, um ein-Objekt zu instanziieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-225">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="21642-226">Außerdem wird der Genauigkeits Verlust veranschaulicht, der bei Verwendung des- <xref:System.Double> Datentyps auftreten kann.</span><span class="sxs-lookup"><span data-stu-id="21642-226">It also illustrates the loss of precision that may occur when you use the <xref:System.Double> data type.</span></span> <span data-ttu-id="21642-227">Einem <xref:System.Double> wird ein großer Wert zugewiesen, der dann einem-Objekt zugewiesen wird <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-227">A <xref:System.Double> is assigned a large value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="21642-228">Wie die Ausgabe zeigt, beinhaltet diese Zuweisung einen Genauigkeits Verlust.</span><span class="sxs-lookup"><span data-stu-id="21642-228">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="21642-229">Beide Werte werden dann um eins inkrementiert.</span><span class="sxs-lookup"><span data-stu-id="21642-229">Both values are then incremented by one.</span></span> <span data-ttu-id="21642-230">Die Ausgabe zeigt, dass das- <xref:System.Numerics.BigInteger> Objekt den geänderten Wert widerspiegelt, während das- <xref:System.Double> Objekt dies nicht tut.</span><span class="sxs-lookup"><span data-stu-id="21642-230">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Double> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#5)]
 [!code-vb[System.Numerics.BigInteger.ctors#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-231"><paramref name="value" /> ist <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" /> oder <see cref="F:System.Double.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="21642-231"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.NegativeInfinity" />, or <see cref="F:System.Double.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(int value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-232">Eine 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-232">A 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="21642-233">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung des Werts einer 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-233">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 32-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-234">Beim Instanziieren eines- <xref:System.Numerics.BigInteger> Objekts mit diesem Konstruktor ist kein Genauigkeits Verlust vorhanden.</span><span class="sxs-lookup"><span data-stu-id="21642-234">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="21642-235">Der <xref:System.Numerics.BigInteger> Wert, der sich aus dem Aufruf dieses Konstruktors ergibt, ist identisch mit dem Wert, der sich aus dem Zuweisen eines <xref:System.Int32> Werts zu einem ergibt <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-235">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
 <span data-ttu-id="21642-236">Die- <xref:System.Numerics.BigInteger> Struktur enthält keine Konstruktoren mit einem Parameter vom Typ <xref:System.Byte> , <xref:System.Int16> , <xref:System.SByte> oder <xref:System.UInt16> .</span><span class="sxs-lookup"><span data-stu-id="21642-236">The <xref:System.Numerics.BigInteger> structure does not include constructors with a parameter of type <xref:System.Byte>, <xref:System.Int16>, <xref:System.SByte>, or <xref:System.UInt16>.</span></span> <span data-ttu-id="21642-237">Der <xref:System.Int32> -Typ unterstützt jedoch die implizite Konvertierung von 8-Bit-und 16-Bit-Ganzzahlen mit Vorzeichen und ohne Vorzeichen in ganze Zahlen mit Vorzeichen 32 mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-237">However, the <xref:System.Int32> type supports the implicit conversion of 8-bit and 16-bit signed and unsigned integers to signed 32-bit integers.</span></span> <span data-ttu-id="21642-238">Daher wird dieser Konstruktor aufgerufen, wenn `value` einer dieser vier integralen Typen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-238">As a result, this constructor is called if `value` is any one of these four integral types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-239">Im folgenden Beispiel wird der <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> -Konstruktor aufgerufen, um <xref:System.Numerics.BigInteger> Werte aus einem Array von 32-Bit-Ganzzahlen zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="21642-239">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 32-bit integers.</span></span> <span data-ttu-id="21642-240">Außerdem wird eine implizite Konvertierung verwendet, um jeden ganzzahligen Wert von 32 Bit einer <xref:System.Numerics.BigInteger> Variablen zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="21642-240">It also uses implicit conversion to assign each 32-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="21642-241">Anschließend werden die beiden Werte verglichen, um festzulegen, dass die resultierenden <xref:System.Numerics.BigInteger> Werte identisch sind.</span><span class="sxs-lookup"><span data-stu-id="21642-241">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#6)]
 [!code-vb[System.Numerics.BigInteger.ctors#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(long value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : int64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-242">Eine 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-242">A 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="21642-243">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung des Werts einer 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-243">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a 64-bit signed integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-244">Beim Instanziieren eines- <xref:System.Numerics.BigInteger> Objekts mit diesem Konstruktor ist kein Genauigkeits Verlust vorhanden.</span><span class="sxs-lookup"><span data-stu-id="21642-244">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> object by using this constructor.</span></span>  
  
 <span data-ttu-id="21642-245">Der <xref:System.Numerics.BigInteger> Wert, der sich aus dem Aufruf dieses Konstruktors ergibt, ist identisch mit dem Wert, der sich aus dem Zuweisen eines <xref:System.Int64> Werts zu einem ergibt <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-245">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning an <xref:System.Int64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-246">Im folgenden Beispiel wird der <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> -Konstruktor aufgerufen, um <xref:System.Numerics.BigInteger> Werte aus einem Array von 64-Bit-Ganzzahlen zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="21642-246">The following example calls the <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29> constructor to instantiate <xref:System.Numerics.BigInteger> values from an array of 64-bit integers.</span></span> <span data-ttu-id="21642-247">Außerdem wird eine implizite Konvertierung verwendet, um jeden ganzzahligen Wert von 64 Bit einer <xref:System.Numerics.BigInteger> Variablen zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="21642-247">It also uses implicit conversion to assign each 64-bit integer value to a <xref:System.Numerics.BigInteger> variable.</span></span> <span data-ttu-id="21642-248">Anschließend werden die beiden Werte verglichen, um festzulegen, dass die resultierenden <xref:System.Numerics.BigInteger> Werte identisch sind.</span><span class="sxs-lookup"><span data-stu-id="21642-248">It then compares the two values to establish that the resulting <xref:System.Numerics.BigInteger> values are the same.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#7)]
 [!code-vb[System.Numerics.BigInteger.ctors#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(float value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : single -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-249">Ein Gleitkommawert mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="21642-249">A single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="21642-250">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung eines Gleitkommawerts mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="21642-250">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using a single-precision floating-point value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-251">Beim Instanziieren eines-Objekts werden alle Bruchteile des- `value` Parameters abgeschnitten <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-251">Any fractional part of the `value` parameter is truncated when instantiating a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="21642-252">Aufgrund der fehlenden Genauigkeit des- <xref:System.Single> Datentyps kann das Aufrufen dieses Konstruktors zu Datenverlusten führen.</span><span class="sxs-lookup"><span data-stu-id="21642-252">Because of the lack of precision of the <xref:System.Single> data type, calling this constructor can result in data loss.</span></span>  
  
 <span data-ttu-id="21642-253">Der <xref:System.Numerics.BigInteger> Wert, der sich aus dem Aufruf dieses Konstruktors ergibt, ist identisch mit dem Wert, der sich aus dem expliziten Zuweisen eines <xref:System.Single> Werts zu einem ergibt <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-253">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from explicitly assigning a <xref:System.Single> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-254">Im folgenden Beispiel wird veranschaulicht, wie der- <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> Konstruktor verwendet wird, um ein-Objekt zu instanziieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-254">The following example illustrates the use of the <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="21642-255">Außerdem wird der Genauigkeits Verlust veranschaulicht, der bei Verwendung des- <xref:System.Single> Datentyps auftreten kann.</span><span class="sxs-lookup"><span data-stu-id="21642-255">It also illustrates the loss of precision that may occur when you use the <xref:System.Single> data type.</span></span> <span data-ttu-id="21642-256">Einem <xref:System.Single> wird ein großer negativer Wert zugewiesen, der dann einem-Objekt zugewiesen wird <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-256">A <xref:System.Single> is assigned a large negative value, which is then assigned to a <xref:System.Numerics.BigInteger> object.</span></span> <span data-ttu-id="21642-257">Wie die Ausgabe zeigt, beinhaltet diese Zuweisung einen Genauigkeits Verlust.</span><span class="sxs-lookup"><span data-stu-id="21642-257">As the output shows, this assignment involves a loss of precision.</span></span> <span data-ttu-id="21642-258">Beide Werte werden dann um eins inkrementiert.</span><span class="sxs-lookup"><span data-stu-id="21642-258">Both values are then incremented by one.</span></span> <span data-ttu-id="21642-259">Die Ausgabe zeigt, dass das- <xref:System.Numerics.BigInteger> Objekt den geänderten Wert widerspiegelt, während das- <xref:System.Single> Objekt dies nicht tut.</span><span class="sxs-lookup"><span data-stu-id="21642-259">The output shows that the <xref:System.Numerics.BigInteger> object reflects the changed value, whereas the <xref:System.Single> object does not.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#8)]
 [!code-vb[System.Numerics.BigInteger.ctors#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-260"><paramref name="value" /> ist <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" /> oder <see cref="F:System.Single.PositiveInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="21642-260"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.NegativeInfinity" />, or <see cref="F:System.Single.PositiveInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint32 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-261">Ein 32-Bit-Ganzzahlwert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-261">An unsigned 32-bit integer value.</span></span></param>
        <summary><span data-ttu-id="21642-262">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung des Werts einer 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-262">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using an unsigned 32-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-263">Beim Instanziieren eines mit diesem Konstruktor ist kein Genauigkeits Verlust vorhanden <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-263">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="21642-264">Der <xref:System.Numerics.BigInteger> Wert, der sich aus dem Aufruf dieses Konstruktors ergibt, ist identisch mit dem Wert, der sich aus der Zuweisung eines <xref:System.UInt32> Werts zu einem ergibt <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-264">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-265">Im folgenden Beispiel werden der <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> -Konstruktor und eine Zuweisungsanweisung verwendet, um <xref:System.Numerics.BigInteger> Werte aus einem Array nicht signierter 32-Bit-Ganzzahlen zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="21642-265">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29> constructor and an assignment statement to initialize <xref:System.Numerics.BigInteger> values from an array of unsigned 32-bit integers.</span></span> <span data-ttu-id="21642-266">Anschließend werden die beiden Werte verglichen, um zu veranschaulichen, dass die beiden Methoden zum Initialisieren eines <xref:System.Numerics.BigInteger> Werts identische Ergebnisse verursachen.</span><span class="sxs-lookup"><span data-stu-id="21642-266">It then compares the two values to demonstrate that the two methods of initializing a <xref:System.Numerics.BigInteger> value produce identical results.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#9)]
 [!code-vb[System.Numerics.BigInteger.ctors#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#9)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ULong)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : uint64 -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-267">Eine 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-267">An unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="21642-268">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur mit dem Wert einer 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-268">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure with an unsigned 64-bit integer value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-269">Beim Instanziieren eines mit diesem Konstruktor ist kein Genauigkeits Verlust vorhanden <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-269">There is no loss of precision when instantiating a <xref:System.Numerics.BigInteger> using this constructor.</span></span>  
  
 <span data-ttu-id="21642-270">Der <xref:System.Numerics.BigInteger> Wert, der sich aus dem Aufruf dieses Konstruktors ergibt, ist identisch mit dem Wert, der sich aus der Zuweisung eines <xref:System.UInt64> Werts zu einem ergibt <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-270">The <xref:System.Numerics.BigInteger> value that results from calling this constructor is identical to the value that results from assigning a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-271">Im folgenden Beispiel wird der- <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> Konstruktor verwendet, um ein-Objekt zu instanziieren, <xref:System.Numerics.BigInteger> dessen Wert gleich ist <xref:System.UInt64.MaxValue> .</span><span class="sxs-lookup"><span data-stu-id="21642-271">The following example uses the <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29> constructor to instantiate a <xref:System.Numerics.BigInteger> object whose value is equal to <xref:System.UInt64.MaxValue>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ctors#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/cs/Example2.cs#10)]
 [!code-vb[System.Numerics.BigInteger.ctors#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ctors/vb/Example2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BigInteger (ReadOnlySpan&lt;byte&gt; value, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; value, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.#ctor(System.ReadOnlySpan{System.Byte},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ReadOnlySpan(Of Byte), Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false)" />
      <MemberSignature Language="F#" Value="new System.Numerics.BigInteger : ReadOnlySpan&lt;byte&gt; * bool * bool -&gt; System.Numerics.BigInteger" Usage="new System.Numerics.BigInteger (value, isUnsigned, isBigEndian)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="isBigEndian" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-272">Eine schreibgeschützte Spanne von Bytes, die den BigInteger-Wert darstellen.</span><span class="sxs-lookup"><span data-stu-id="21642-272">A read-only span of bytes representing the big integer.</span></span></param>
        <param name="isUnsigned"><span data-ttu-id="21642-273"><see langword="true" />, um anzugeben, dass <paramref name="value" /> nicht signierte Codierung verwendet. Andernfalls <see langword="false" /> (der Standardwert).</span><span class="sxs-lookup"><span data-stu-id="21642-273"><see langword="true" /> to indicate <paramref name="value" /> uses unsigned encoding; otherwise, <see langword="false" /> (the default value).</span></span></param>
        <param name="isBigEndian"><span data-ttu-id="21642-274"><see langword="true" />, um anzugeben, dass <paramref name="value" /> Big-Endian-Bytereihenfolge verwendet. Andernfalls <see langword="false" /> (der Standardwert).</span><span class="sxs-lookup"><span data-stu-id="21642-274"><see langword="true" /> to indicate <paramref name="value" /> is in big-endian byte order; otherwise, <see langword="false" />  (the default value).</span></span></param>
        <summary><span data-ttu-id="21642-275">Initialisiert eine neue Instanz der <see cref="T:System.Numerics.BigInteger" />-Struktur unter Verwendung der Werte in einer schreibgeschützten Spanne von Bytes und zeigt optional die Signaturcodierung und die Endianness-Bytereihenfolge an.</span><span class="sxs-lookup"><span data-stu-id="21642-275">Initializes a new instance of the <see cref="T:System.Numerics.BigInteger" /> structure using the values in a read-only span of bytes, and optionally indicating the signing encoding and the endianness byte order.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Abs">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Abs (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Abs(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Abs(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Abs (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Abs(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Abs : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Abs value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-276">Eine Zahl.</span><span class="sxs-lookup"><span data-stu-id="21642-276">A number.</span></span></param>
        <summary><span data-ttu-id="21642-277">Ruft den absoluten Wert eines <see cref="T:System.Numerics.BigInteger" />-Objekts ab.</span><span class="sxs-lookup"><span data-stu-id="21642-277">Gets the absolute value of a <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="21642-278">Der Absolutbetrag von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="21642-278">The absolute value of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-279">Der absolute Wert einer Zahl ist die Zahl ohne Vorzeichen, wie in der folgenden Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="21642-279">The absolute value of a number is that number without its sign, as shown in the following table.</span></span>  
  
|<span data-ttu-id="21642-280">`value`-Parameter</span><span class="sxs-lookup"><span data-stu-id="21642-280">`value` parameter</span></span>|<span data-ttu-id="21642-281">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-281">Return value</span></span>|  
|-----------------------|------------------|  
|<span data-ttu-id="21642-282">`value` >= 0</span><span class="sxs-lookup"><span data-stu-id="21642-282">`value` >= 0</span></span>|`value`|  
|<span data-ttu-id="21642-283">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="21642-283">`value` < 0</span></span>|<span data-ttu-id="21642-284">`value` \* -1</span><span class="sxs-lookup"><span data-stu-id="21642-284">`value` \* -1</span></span>|  
  
 <span data-ttu-id="21642-285">Die- <xref:System.Numerics.BigInteger.Abs%2A> Methode entspricht der- <xref:System.Math.Abs%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="21642-285">The <xref:System.Numerics.BigInteger.Abs%2A> method is equivalent to the <xref:System.Math.Abs%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-286">Im folgenden Beispiel wird die <xref:System.Numerics.BigInteger.Abs%2A> -Methode verwendet, um einen <xref:System.Numerics.BigInteger> Wert aus der Komplement-Darstellung von zwei Werten in die Darstellung der-Darstellung zu konvertieren, bevor Sie in eine Datei serialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="21642-286">The following example uses the <xref:System.Numerics.BigInteger.Abs%2A> method to convert a <xref:System.Numerics.BigInteger> value from two's complement representation to sign-and-magnitude representation before serializing it to a file.</span></span> <span data-ttu-id="21642-287">Die Daten in der Datei werden dann deserialisiert und einem neuen <xref:System.Numerics.BigInteger> Objekt zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="21642-287">Data in the file is then deserialized and assigned to a new <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/cs/Abs1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Abs/vb/Abs1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Math.Abs(System.SByte)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Add (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Add(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Add(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Add : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Add (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-288">Der erste zu addierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-288">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="21642-289">Der zweite zu addierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-289">The second value to add.</span></span></param>
        <summary><span data-ttu-id="21642-290">Addiert zwei <see cref="T:System.Numerics.BigInteger" />-Werte und gibt das Ergebnis zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-290">Adds two <see cref="T:System.Numerics.BigInteger" /> values and returns the result.</span></span></summary>
        <returns><span data-ttu-id="21642-291">Die Summe von <paramref name="left" /> und <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="21642-291">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-292">Sprachen, die das Überladen von Operatoren oder benutzerdefinierte Operatoren nicht unterstützen, können die- <xref:System.Numerics.BigInteger.Add%2A> Methode verwenden, um mithilfe von <xref:System.Numerics.BigInteger> Werten Addition</span><span class="sxs-lookup"><span data-stu-id="21642-292">Languages that do not support operator overloading or custom operators can use the <xref:System.Numerics.BigInteger.Add%2A> method to perform addition using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="21642-293">Die- <xref:System.Numerics.BigInteger.Add%2A> Methode ist ein nützlicher Ersatz für den Additions Operator beim Instanziieren einer <xref:System.Numerics.BigInteger> Variablen, indem Sie Ihr eine Summe zuweist, die aus Addition resultiert, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-293">The <xref:System.Numerics.BigInteger.Add%2A> method is a useful substitute for the addition operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a sum that results from addition, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (left As BigInteger, right As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Compare : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.Compare (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-294">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-294">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-295">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-295">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-296">Vergleicht zwei <see cref="T:System.Numerics.BigInteger" />-Werte und gibt eine ganze Zahl zurück, die angibt, ob der erste Wert kleiner oder größer als der zweite Wert oder gleich dem zweiten Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-296">Compares two <see cref="T:System.Numerics.BigInteger" /> values and returns an integer that indicates whether the first value is less than, equal to, or greater than the second value.</span></span></summary>
        <returns><span data-ttu-id="21642-297">Eine ganze Zahl mit Vorzeichen, die die relativen Werte von <paramref name="left" /> und <paramref name="right" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-297">A signed integer that indicates the relative values of <paramref name="left" /> and <paramref name="right" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="21642-298">Wert</span><span class="sxs-lookup"><span data-stu-id="21642-298">Value</span></span> 
 </term><description> <span data-ttu-id="21642-299">Bedingung</span><span class="sxs-lookup"><span data-stu-id="21642-299">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="21642-300">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-300">Less than zero</span></span> 
 </term><description><span data-ttu-id="21642-301"><paramref name="left" /> ist kleiner als <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="21642-301"><paramref name="left" /> is less than <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-302">Zero</span><span class="sxs-lookup"><span data-stu-id="21642-302">Zero</span></span> 
 </term><description><span data-ttu-id="21642-303"><paramref name="left" /> ist gleich <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="21642-303"><paramref name="left" /> equals <paramref name="right" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-304">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-304">Greater than zero</span></span> 
 </term><description><span data-ttu-id="21642-305"><paramref name="left" /> ist größer als <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="21642-305"><paramref name="left" /> is greater than <paramref name="right" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-306">Obwohl der <xref:System.Numerics.BigInteger> Typ keinen festgelegten Bereich aufweist, werden Vergleiche von <xref:System.Numerics.BigInteger> Werten nicht durch die fehlende Genauigkeit gekennzeichnet, die den Vergleich von Gleit Komma Zahlen kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="21642-306">Although the <xref:System.Numerics.BigInteger> type has no fixed range, comparisons of <xref:System.Numerics.BigInteger> values are not characterized by the lack of precision that characterizes the comparison of floating-point numbers.</span></span> <span data-ttu-id="21642-307">Im folgenden Beispiel werden zwei <xref:System.Numerics.BigInteger> Werte verglichen, die sich um einen unterscheiden und jeweils 1.896 Ziffern aufweisen.</span><span class="sxs-lookup"><span data-stu-id="21642-307">The following example compares two <xref:System.Numerics.BigInteger> values that differ by one and that each have 1,896 digits.</span></span> <span data-ttu-id="21642-308">Die- <xref:System.Numerics.BigInteger.Compare%2A> Methode meldet ordnungsgemäß, dass die beiden Werte nicht gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-308">The <xref:System.Numerics.BigInteger.Compare%2A> method correctly reports that the two values are not equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/cs/Compare1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Compare/vb/Compare1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.CompareTo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-309">Vergleicht den Wert dieser Instanz mit einem anderen Wert und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der andere Wert ist oder mit diesem übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="21642-309">Compares the value of this instance with another value and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the other value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(long other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : int64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="21642-310">Die 64-Bit-Ganzzahl mit Vorzeichen für den Vergleich.</span><span class="sxs-lookup"><span data-stu-id="21642-310">The signed 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="21642-311">Vergleicht diese Instanz mit einer 64-Bit-Ganzzahl mit Vorzeichen und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert der 64-Bit-Ganzzahl mit Vorzeichen ist oder mit diesem übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="21642-311">Compares this instance to a signed 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the signed 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="21642-312">Der Wert einer ganzen Zahl mit Vorzeichen, der die Beziehung dieser Instanz zu <paramref name="other" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-312">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="21642-313">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-313">Return value</span></span> 
 </term><description> <span data-ttu-id="21642-314">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-314">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="21642-315">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-315">Less than zero</span></span> 
 </term><description> <span data-ttu-id="21642-316">Die aktuelle Instanz ist kleiner als <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="21642-316">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-317">Zero</span><span class="sxs-lookup"><span data-stu-id="21642-317">Zero</span></span> 
 </term><description> <span data-ttu-id="21642-318">Die aktuelle Instanz ist gleich <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="21642-318">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-319">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-319">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="21642-320">Die aktuelle Instanz ist größer als <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="21642-320">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-321">Wenn ein-,-,-,-,- `other` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn die- <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="21642-321">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-322">Das folgende Beispiel veranschaulicht das Ergebnis des Aufruf der-Methode mit ganzzahligen <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> Werten.</span><span class="sxs-lookup"><span data-stu-id="21642-322">The following example illustrates the result of calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29> method with integral values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#3)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : System.Numerics.BigInteger -&gt; int&#xA;override this.CompareTo : System.Numerics.BigInteger -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="21642-323">Das zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="21642-323">The object to compare.</span></span></param>
        <summary><span data-ttu-id="21642-324">Vergleicht diese Instanz mit einem zweiten <see cref="T:System.Numerics.BigInteger" /> und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert des angegebenen Objekts ist oder mit diesem übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="21642-324">Compares this instance to a second <see cref="T:System.Numerics.BigInteger" /> and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="21642-325">Der Wert einer ganzen Zahl mit Vorzeichen, der die Beziehung dieser Instanz zu <paramref name="other" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-325">A signed integer value that indicates the relationship of this instance to <paramref name="other" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="21642-326">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-326">Return value</span></span> 
 </term><description> <span data-ttu-id="21642-327">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-327">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="21642-328">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-328">Less than zero</span></span> 
 </term><description> <span data-ttu-id="21642-329">Die aktuelle Instanz ist kleiner als <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="21642-329">The current instance is less than <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-330">Zero</span><span class="sxs-lookup"><span data-stu-id="21642-330">Zero</span></span> 
 </term><description> <span data-ttu-id="21642-331">Die aktuelle Instanz ist gleich <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="21642-331">The current instance equals <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-332">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-332">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="21642-333">Die aktuelle Instanz ist größer als <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="21642-333">The current instance is greater than <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-334">Diese Überladung der- <xref:System.Numerics.BigInteger.CompareTo%2A> Methode implementiert die- <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="21642-334">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="21642-335">Sie wird von generischen Auflistungs Objekten verwendet, um die Elemente in der Auflistung zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="21642-335">It is used by generic collection objects to order the items in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-336">Im folgenden Beispiel wird veranschaulicht, wie die-Methode verwendet wird <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> , um eine Liste von-Objekten zu sortieren `StarInfo` .</span><span class="sxs-lookup"><span data-stu-id="21642-336">The following example illustrates the use of the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> method to order a list of `StarInfo` objects.</span></span> <span data-ttu-id="21642-337">Jedes `StarInfo` -Objekt enthält Informationen über den Namen eines Stars und seine Entfernung von der Erde in Meilen.</span><span class="sxs-lookup"><span data-stu-id="21642-337">Each `StarInfo` object provides information about a star's name and its distance from the Earth in miles.</span></span> <span data-ttu-id="21642-338">`StarInfo` implementiert die- <xref:System.IComparable%601> Schnittstelle, die das `StarInfo` Sortieren von Objekten nach generischen Auflistungs Klassen ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="21642-338">`StarInfo` implements the <xref:System.IComparable%601> interface, which enables `StarInfo` objects to be sorted by generic collection classes.</span></span> <span data-ttu-id="21642-339">Die <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> Implementierung umschließt lediglich einen- <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29> Aufruf.</span><span class="sxs-lookup"><span data-stu-id="21642-339">Its <xref:System.IComparable%601.CompareTo%2A?displayProperty=nameWithType> implementation just wraps a call to <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29>.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#1)]  
  
 <span data-ttu-id="21642-340">Der folgende Code instanziiert dann vier `StarInfo` -Objekte und speichert Sie in einem generischen- <xref:System.Collections.Generic.List%601> Objekt.</span><span class="sxs-lookup"><span data-stu-id="21642-340">The following code then instantiates four `StarInfo` objects and stores them in a generic <xref:System.Collections.Generic.List%601> object.</span></span> <span data-ttu-id="21642-341">Nachdem die- <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> Methode aufgerufen wurde, `StarInfo` werden-Objekte in der Reihenfolge ihrer Entfernung von der Erde angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-341">After the <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType> method is called, `StarInfo` objects are displayed in order of their distance from the Earth.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Compare(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (obj As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="bigInteger.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="21642-342">Das zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="21642-342">The object to compare.</span></span></param>
        <summary><span data-ttu-id="21642-343">Vergleicht diese Instanz mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert des angegebenen Objekts ist oder mit diesem übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="21642-343">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="21642-344">Eine ganze Zahl mit Vorzeichen, die die Beziehung der aktuellen Instanz zum <paramref name="obj" />-Parameter angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-344">A signed integer that indicates the relationship of the current instance to the <paramref name="obj" /> parameter, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="21642-345">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-345">Return value</span></span> 
 </term><description> <span data-ttu-id="21642-346">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-346">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="21642-347">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-347">Less than zero</span></span> 
 </term><description> <span data-ttu-id="21642-348">Die aktuelle Instanz ist kleiner als <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="21642-348">The current instance is less than <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-349">Zero</span><span class="sxs-lookup"><span data-stu-id="21642-349">Zero</span></span> 
 </term><description> <span data-ttu-id="21642-350">Die aktuelle Instanz ist gleich <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="21642-350">The current instance equals <paramref name="obj" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-351">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-351">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="21642-352">Die aktuelle Instanz ist größer als <paramref name="obj" />, oder der <paramref name="obj" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21642-352">The current instance is greater than <paramref name="obj" />, or the <paramref name="obj" /> parameter is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-353">Diese Überladung der- <xref:System.Numerics.BigInteger.CompareTo%2A> Methode implementiert die- <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="21642-353">This overload of the <xref:System.Numerics.BigInteger.CompareTo%2A> method implements the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="21642-354">Sie wird von nicht generischen Auflistungs Objekten verwendet, um die Elemente in der Auflistung zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="21642-354">It is used by non-generic collection objects to order the items in the collection.</span></span>  
  
 <span data-ttu-id="21642-355">Der `obj` Parameter muss einer der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="21642-355">The `obj` parameter must be one of the following:</span></span>  
  
-   <span data-ttu-id="21642-356">Ein Objekt, dessen Lauf Zeittyp ist <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-356">An object whose run-time type is <xref:System.Numerics.BigInteger>.</span></span>  
  
-   <span data-ttu-id="21642-357">Eine <xref:System.Object> Variable, deren Wert ist `null` .</span><span class="sxs-lookup"><span data-stu-id="21642-357">An <xref:System.Object> variable whose value is `null`.</span></span> <span data-ttu-id="21642-358">Wenn der Wert des- `obj` Parameters ist `null` , gibt die Methode 1 zurück, was angibt, dass die aktuelle Instanz größer als ist `obj` .</span><span class="sxs-lookup"><span data-stu-id="21642-358">If the value of the `obj` parameter is `null`, the method returns 1, which indicates that the current instance is greater than `obj`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-359">Im folgenden Beispiel wird die- <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> Methode aufgerufen, um einen <xref:System.Numerics.BigInteger> Wert mit jedem Element in einem Objekt Array zu vergleichen:</span><span class="sxs-lookup"><span data-stu-id="21642-359">The following example calls the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method to compare a <xref:System.Numerics.BigInteger> value with each element in an object array:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#4)]
 [!code-vb[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21642-360"><paramref name="obj" /> ist keine <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="21642-360"><paramref name="obj" /> is not a <see cref="T:System.Numerics.BigInteger" />.</span></span></exception>
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.CompareTo(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As ULong) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : uint64 -&gt; int" Usage="bigInteger.CompareTo other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="21642-361">Die 64-Bit-Ganzzahl ohne Vorzeichen für den Vergleich.</span><span class="sxs-lookup"><span data-stu-id="21642-361">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="21642-362">Vergleicht diese Instanz mit einer 64-Bit-Ganzzahl ohne Vorzeichen und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert der 64-Bit-Ganzzahl ohne Vorzeichen ist oder mit diesem übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="21642-362">Compares this instance to an unsigned 64-bit integer and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the unsigned 64-bit integer.</span></span></summary>
        <returns><span data-ttu-id="21642-363">Eine ganze Zahl mit Vorzeichen, die den relativen Wert dieser Instanz und von <paramref name="other" /> angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-363">A signed integer that indicates the relative value of this instance and <paramref name="other" />, as shown in the following table.</span></span>
          <list type="table"><listheader><term><span data-ttu-id="21642-364">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-364">Return value</span></span></term><description><span data-ttu-id="21642-365">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-365">Description</span></span></description></listheader><item><term><span data-ttu-id="21642-366">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-366">Less than zero</span></span></term><description><span data-ttu-id="21642-367">Die aktuelle Instanz ist kleiner als <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="21642-367">The current instance is less than <paramref name="other" />.</span></span></description></item><item><term><span data-ttu-id="21642-368">Zero</span><span class="sxs-lookup"><span data-stu-id="21642-368">Zero</span></span></term><description><span data-ttu-id="21642-369">Die aktuelle Instanz ist gleich <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="21642-369">The current instance equals <paramref name="other" />.</span></span></description></item><item><term><span data-ttu-id="21642-370">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-370">Greater than zero</span></span></term><description><span data-ttu-id="21642-371">Die aktuelle Instanz ist größer als <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="21642-371">The current instance is greater than <paramref name="other" />.</span></span></description></item></list></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Divide">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Divide (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Divide(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Divide (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Divide(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Divide : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Divide (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="21642-372">Der zu dividierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-372">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="21642-373">Der Wert, durch den dividiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-373">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="21642-374">Dividiert einen <see cref="T:System.Numerics.BigInteger" />-Wert durch einen anderen und gibt das Ergebnis zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-374">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="21642-375">Der Quotient der Division.</span><span class="sxs-lookup"><span data-stu-id="21642-375">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-376">Die- <xref:System.Numerics.BigInteger.Divide%2A> Methode führt eine ganzzahlige Division aus. jeder Rest, der aus der Division resultiert, wird verworfen.</span><span class="sxs-lookup"><span data-stu-id="21642-376">The <xref:System.Numerics.BigInteger.Divide%2A> method performs integer division; any remainder that results from the division is discarded.</span></span> <span data-ttu-id="21642-377">Zum Ausführen einer ganzzahligen Division ohne Beibehaltung des Restwerts wird die- <xref:System.Numerics.BigInteger.DivRem%2A> Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="21642-377">To perform integer division while preserving the remainder, call the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span> <span data-ttu-id="21642-378">Um nur den Rest abzurufen, rufen Sie die- <xref:System.Numerics.BigInteger.Remainder%2A> Methode auf.</span><span class="sxs-lookup"><span data-stu-id="21642-378">To retrieve only the remainder, call the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="21642-379">Die- <xref:System.Numerics.BigInteger.Divide%2A> Methode kann von Sprachen verwendet werden, die das Überladen von Operatoren nicht unterstützen.</span><span class="sxs-lookup"><span data-stu-id="21642-379">The <xref:System.Numerics.BigInteger.Divide%2A> method can be used by languages that do not support operator overloading.</span></span> <span data-ttu-id="21642-380">Das Verhalten ist mit der Division identisch, die den Divisions Operator verwendet.</span><span class="sxs-lookup"><span data-stu-id="21642-380">Its behavior is identical to division using the division operator.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-381">Im folgenden Beispiel wird ein Array von- <xref:System.Numerics.BigInteger> Werten erstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-381">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-382">Anschließend wird jedes Element als Quotienten in einem Divisions Vorgang verwendet, der die <xref:System.Numerics.BigInteger.Divide%2A> -Methode, den Divisions Operator (/) und die- <xref:System.Numerics.BigInteger.DivRem%2A> Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="21642-382">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="21642-383"><paramref name="divisor" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="21642-383"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="DivRem">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger DivRem (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor, out System.Numerics.BigInteger remainder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger DivRem(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor, [out] valuetype System.Numerics.BigInteger&amp; remainder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DivRem (dividend As BigInteger, divisor As BigInteger, ByRef remainder As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger DivRem(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor, [Runtime::InteropServices::Out] System::Numerics::BigInteger % remainder);" />
      <MemberSignature Language="F#" Value="static member DivRem : System.Numerics.BigInteger * System.Numerics.BigInteger * BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.DivRem (dividend, divisor, remainder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
        <Parameter Name="remainder" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="21642-384">Der zu dividierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-384">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="21642-385">Der Wert, durch den dividiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-385">The value to divide by.</span></span></param>
        <param name="remainder"><span data-ttu-id="21642-386">Die Rückgabe dieser Methode enthält einen <see cref="T:System.Numerics.BigInteger" />-Wert, der den Rest der Division darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-386">When this method returns, contains a <see cref="T:System.Numerics.BigInteger" /> value that represents the remainder from the division.</span></span> <span data-ttu-id="21642-387">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="21642-387">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="21642-388">Dividiert einen <see cref="T:System.Numerics.BigInteger" />-Wert durch einen anderen, gibt das Ergebnis zurück und gibt den Rest in einem Ausgabeparameter zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-388">Divides one <see cref="T:System.Numerics.BigInteger" /> value by another, returns the result, and returns the remainder in an output parameter.</span></span></summary>
        <returns><span data-ttu-id="21642-389">Der Quotient der Division.</span><span class="sxs-lookup"><span data-stu-id="21642-389">The quotient of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-390">Diese Methode behält sowohl den Quotienten als auch den Rest bei, der sich aus der ganzzahligen Division ergibt.</span><span class="sxs-lookup"><span data-stu-id="21642-390">This method preserves both the quotient and the remainder that results from integer division.</span></span> <span data-ttu-id="21642-391">Wenn Sie den Rest nicht interessieren, verwenden Sie die- <xref:System.Numerics.BigInteger.Divide%2A> Methode oder den Divisions Operator. Wenn Sie nur an dem Rest interessiert sind, verwenden Sie die- <xref:System.Numerics.BigInteger.Remainder%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="21642-391">If you are not interested in the remainder, use the <xref:System.Numerics.BigInteger.Divide%2A> method or the division operator; if you are only interested in the remainder, use the <xref:System.Numerics.BigInteger.Remainder%2A> method.</span></span>  
  
 <span data-ttu-id="21642-392">Das Vorzeichen des zurückgegebenen `remainder` Werts ist mit dem Vorzeichen des `dividend` Parameters identisch.</span><span class="sxs-lookup"><span data-stu-id="21642-392">The sign of the returned `remainder` value is the same as the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="21642-393">Das Verhalten der- <xref:System.Numerics.BigInteger.DivRem%2A> Methode ist mit der der- <xref:System.Math.DivRem%2A?displayProperty=nameWithType> Methode identisch.</span><span class="sxs-lookup"><span data-stu-id="21642-393">The behavior of the <xref:System.Numerics.BigInteger.DivRem%2A> method is identical to that of the <xref:System.Math.DivRem%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-394">Im folgenden Beispiel wird ein Array von- <xref:System.Numerics.BigInteger> Werten erstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-394">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-395">Anschließend wird jedes Element als Quotienten in einem Divisions Vorgang verwendet, der die <xref:System.Numerics.BigInteger.Divide%2A> -Methode, den Divisions Operator (/) und die- <xref:System.Numerics.BigInteger.DivRem%2A> Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="21642-395">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="21642-396"><paramref name="divisor" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="21642-396"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-397">Gibt einen Wert zurück, der angibt, ob zwei numerische Werte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-397">Returns a value that indicates whether two numeric values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(long other);" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="21642-398">Der Wert der 64-Bit-Ganzzahl mit Vorzeichen für den Vergleich.</span><span class="sxs-lookup"><span data-stu-id="21642-398">The signed 64-bit integer value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-399">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und eine 64-Bit-Ganzzahl mit Vorzeichen über den gleichen Wert verfügen.</span><span class="sxs-lookup"><span data-stu-id="21642-399">Returns a value that indicates whether the current instance and a signed 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="21642-400"><see langword="true" />, wenn die 64-Bit-Ganzzahl mit Vorzeichen und die aktuelle Instanz über den gleichen Wert verfügen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-400"><see langword="true" /> if the signed 64-bit integer and the current instance have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-401">Wenn ein-,-,-,-,- `other` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn die-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="21642-401">If `other` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the method is called.</span></span>  
  
 <span data-ttu-id="21642-402">Um die Beziehung zwischen den beiden Objekten zu bestimmen, anstatt nur auf Gleichheit zu testen, müssen Sie die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-402">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-403">Im folgenden Beispiel wird ein- <xref:System.Numerics.BigInteger> Objekt von jedem ganzzahligen Typ mit Ausnahme von instanziiert <xref:System.UInt64> .</span><span class="sxs-lookup"><span data-stu-id="21642-403">The following example instantiates a <xref:System.Numerics.BigInteger> object from each integral type except <xref:System.UInt64>.</span></span> <span data-ttu-id="21642-404">Anschließend wird die- <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> Methode aufgerufen, um den <xref:System.Numerics.BigInteger> Wert mit dem ursprünglichen ganzzahligen Wert zu vergleichen, der an den- <xref:System.Numerics.BigInteger> Konstruktor übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="21642-404">It then calls the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29> method to compare the <xref:System.Numerics.BigInteger> value with the original integer value that was passed to the <xref:System.Numerics.BigInteger> constructor.</span></span> <span data-ttu-id="21642-405">Wie die Ausgabe zeigt, sind die Werte in jedem Fall gleich.</span><span class="sxs-lookup"><span data-stu-id="21642-405">As the output shows, the values are equal in each case.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals.cpp#1)]
 [!code-csharp[System.Numerics.BigInteger.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Numerics.BigInteger other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Numerics.BigInteger other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Numerics::BigInteger other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Numerics.BigInteger -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="21642-406">Das zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="21642-406">The object to compare.</span></span></param>
        <summary><span data-ttu-id="21642-407">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und ein angegebenes <see cref="T:System.Numerics.BigInteger" />-Objekt über den gleichen Wert verfügen.</span><span class="sxs-lookup"><span data-stu-id="21642-407">Returns a value that indicates whether the current instance and a specified <see cref="T:System.Numerics.BigInteger" /> object have the same value.</span></span></summary>
        <returns><span data-ttu-id="21642-408"><see langword="true" />, wenn dieses <see cref="T:System.Numerics.BigInteger" />-Objekt und <paramref name="other" /> über den gleichen Wert verfügen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-408"><see langword="true" /> if this <see cref="T:System.Numerics.BigInteger" /> object and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-409">Diese Methode implementiert die <xref:System.IEquatable%601> -Schnittstelle und führt eine etwas bessere Leistung als <xref:System.Numerics.BigInteger.Equals%28System.Object%29> aus, da der-Parameter nicht in ein-Objekt konvertiert werden muss `other` <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-409">This method implements the <xref:System.IEquatable%601> interface and performs slightly better than <xref:System.Numerics.BigInteger.Equals%28System.Object%29> because it does not have to convert the `other` parameter to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 <span data-ttu-id="21642-410">Um die Beziehung zwischen den beiden Objekten zu bestimmen <xref:System.Numerics.BigInteger> , anstatt nur auf Gleichheit zu testen, müssen Sie die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-410">To determine the relationship between the two <xref:System.Numerics.BigInteger> objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-411">Im folgenden Beispiel wird die ungefähre Entfernung von mehreren Sternen von der Erde mit dem Abstand von Epsilon Indi von Erde verglichen, um zu bestimmen, ob Sie gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-411">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="21642-412">Im Beispiel wird jede Überladung der- <xref:System.Numerics.BigInteger.Equals%2A> Methode verwendet, um auf Gleichheit zu prüfen.</span><span class="sxs-lookup"><span data-stu-id="21642-412">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="bigInteger.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="21642-413">Das zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="21642-413">The object to compare.</span></span></param>
        <summary><span data-ttu-id="21642-414">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und ein angegebenes Objekt über den gleichen Wert verfügen.</span><span class="sxs-lookup"><span data-stu-id="21642-414">Returns a value that indicates whether the current instance and a specified object have the same value.</span></span></summary>
        <returns><span data-ttu-id="21642-415"><see langword="true" />, wenn das <paramref name="obj" />-Argument ein <see cref="T:System.Numerics.BigInteger" />-Objekt darstellt und dessen Wert der aktuellen <see cref="T:System.Numerics.BigInteger" />-Instanz entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-415"><see langword="true" /> if the <paramref name="obj" /> argument is a <see cref="T:System.Numerics.BigInteger" /> object, and its value is equal to the value of the current <see cref="T:System.Numerics.BigInteger" /> instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-416">Wenn das `obj` Argument kein Wert ist <xref:System.Numerics.BigInteger> , gibt die Methode zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="21642-416">If the `obj` argument is not a <xref:System.Numerics.BigInteger> value, the method returns `false`.</span></span> <span data-ttu-id="21642-417">Die-Methode gibt `true` nur dann zurück `obj` , wenn eine-Instanz ist <xref:System.Numerics.BigInteger> , deren Wert gleich der aktuellen Instanz ist.</span><span class="sxs-lookup"><span data-stu-id="21642-417">The method returns `true` only if `obj` is a <xref:System.Numerics.BigInteger> instance whose value is equal to the current instance.</span></span>  
  
 <span data-ttu-id="21642-418">Um die Beziehung zwischen den beiden Objekten zu bestimmen, anstatt nur auf Gleichheit zu testen, müssen Sie die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> .</span><span class="sxs-lookup"><span data-stu-id="21642-418">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-419">Im folgenden Beispiel werden parallele <xref:System.Object> -und- <xref:System.Numerics.BigInteger> Arrays definiert.</span><span class="sxs-lookup"><span data-stu-id="21642-419">The following example defines parallel <xref:System.Object> and <xref:System.Numerics.BigInteger> arrays.</span></span> <span data-ttu-id="21642-420">Jedes Element eines Arrays hat denselben Wert wie das entsprechende Element des zweiten Arrays.</span><span class="sxs-lookup"><span data-stu-id="21642-420">Each element of one array has the same value as the corresponding element of the second array.</span></span> <span data-ttu-id="21642-421">Wie die Ausgabe des Beispiels zeigt, wird die-Instanz im- <xref:System.Numerics.BigInteger> Array nur dann als identisch mit der-Instanz im-Array betrachtet, <xref:System.Object> wenn letztere eine ist <xref:System.Numerics.BigInteger> und ihre Werte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-421">As the output from the example shows, the instance in the <xref:System.Numerics.BigInteger> array is considered to be equal to the instance in the <xref:System.Object> array only if the latter is a <xref:System.Numerics.BigInteger> and their values are equal.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/Equals_Obj1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/Equals_Obj1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (ulong other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(unsigned int64 other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Equals(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::UInt64 other);" />
      <MemberSignature Language="F#" Value="override this.Equals : uint64 -&gt; bool" Usage="bigInteger.Equals other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="21642-422">Die 64-Bit-Ganzzahl ohne Vorzeichen für den Vergleich.</span><span class="sxs-lookup"><span data-stu-id="21642-422">The unsigned 64-bit integer to compare.</span></span></param>
        <summary><span data-ttu-id="21642-423">Gibt einen Wert zurück, der angibt, ob die aktuelle Instanz und eine 64-Bit-Ganzzahl ohne Vorzeichen über den gleichen Wert verfügen.</span><span class="sxs-lookup"><span data-stu-id="21642-423">Returns a value that indicates whether the current instance and an unsigned 64-bit integer have the same value.</span></span></summary>
        <returns><span data-ttu-id="21642-424"><see langword="true" />, wenn die aktuelle Instanz und die 64-Bit-Ganzzahl ohne Vorzeichen über den gleichen Wert verfügen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-424"><see langword="true" /> if the current instance and the unsigned 64-bit integer have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-425">Um die Beziehung zwischen den beiden Objekten zu bestimmen, anstatt nur auf Gleichheit zu testen, müssen Sie die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-425">To determine the relationship between the two objects instead of just testing for equality, call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-426">Im folgenden Beispiel wird die ungefähre Entfernung von mehreren Sternen von der Erde mit dem Abstand von Epsilon Indi von Erde verglichen, um zu bestimmen, ob Sie gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-426">The following example compares the approximate distance of several stars from Earth with the distance of Epsilon Indi from Earth to determine whether they are equal.</span></span> <span data-ttu-id="21642-427">Im Beispiel wird jede Überladung der- <xref:System.Numerics.BigInteger.Equals%2A> Methode verwendet, um auf Gleichheit zu prüfen.</span><span class="sxs-lookup"><span data-stu-id="21642-427">The example uses each overload of the <xref:System.Numerics.BigInteger.Equals%2A> method to test for equality.</span></span>  
  
 [!code-cpp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cpp/equals2.cpp#2)]
 [!code-csharp[System.Numerics.BigInteger.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/cs/EqualsExample1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Equals/vb/EqualsExample1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetByteCount">
      <MemberSignature Language="C#" Value="public int GetByteCount (bool isUnsigned = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetByteCount(bool isUnsigned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetByteCount(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetByteCount (Optional isUnsigned As Boolean = false) As Integer" />
      <MemberSignature Language="F#" Value="member this.GetByteCount : bool -&gt; int" Usage="bigInteger.GetByteCount isUnsigned" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="isUnsigned"><span data-ttu-id="21642-428"><see langword="true" />, um die Codierung ohne Vorzeichen zu verwenden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-428"><see langword="true" /> to use unsigned encoding; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="21642-429">Ruft die Anzahl der Bytes ab, die von <see cref="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" /> und <see cref="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" /> ausgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="21642-429">Gets the number of bytes that will be output by <see cref="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" /> and <see cref="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />.</span></span></summary>
        <returns><span data-ttu-id="21642-430">Die Anzahl der Bytes.</span><span class="sxs-lookup"><span data-stu-id="21642-430">The number of bytes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="bigInteger.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21642-431">Gibt den Hashcode für das aktuelle <see cref="T:System.Numerics.BigInteger" />-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-431">Returns the hash code for the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <returns><span data-ttu-id="21642-432">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-432">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GreatestCommonDivisor">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger GreatestCommonDivisor (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger GreatestCommonDivisor(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.GreatestCommonDivisor(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GreatestCommonDivisor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger GreatestCommonDivisor(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member GreatestCommonDivisor : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.GreatestCommonDivisor (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-433">Der erste Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-433">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="21642-434">Der zweite Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-434">The second value.</span></span></param>
        <summary><span data-ttu-id="21642-435">Sucht den größten gemeinsamen Divisor von zwei <see cref="T:System.Numerics.BigInteger" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="21642-435">Finds the greatest common divisor of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="21642-436">Der größte gemeinsame Divisor von <paramref name="left" /> und <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="21642-436">The greatest common divisor of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-437">Der größte gemeinsame Divisor ist die größte Zahl, in die die beiden <xref:System.Numerics.BigInteger> Werte aufgeteilt werden können, ohne einen Rest zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="21642-437">The greatest common divisor is the largest number into which the two <xref:System.Numerics.BigInteger> values can be divided without returning a remainder.</span></span>  
  
 <span data-ttu-id="21642-438">Wenn der `left` `right` -Parameter und der-Parameter ungleich NULL sind, gibt die-Methode immer mindestens den Wert 1 zurück, da alle Zahlen durch 1 dividiert werden können.</span><span class="sxs-lookup"><span data-stu-id="21642-438">If the `left` and `right` parameters are non-zero numbers, the method always returns at least a value of 1 because all numbers can be divided by 1.</span></span> <span data-ttu-id="21642-439">Wenn einer der Parameter NULL ist, gibt die Methode den absoluten Wert des Parameters ungleich 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-439">If either parameter is zero, the method returns the absolute value of the non-zero parameter.</span></span> <span data-ttu-id="21642-440">Wenn beide Werte NULL sind, gibt die Methode 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-440">If both values are zero, the method returns zero.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21642-441">Das Berechnen des größten gemeinsamen Divisor von sehr großen Werten von `left` und `right` kann sehr zeitaufwändig sein.</span><span class="sxs-lookup"><span data-stu-id="21642-441">Computing the greatest common divisor of very large values of `left` and `right` can be a very time-consuming operation.</span></span>  
  
 <span data-ttu-id="21642-442">Der von der-Methode zurückgegebene Wert <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> ist unabhängig vom Vorzeichen des `left` -Parameters und des- `right` Parameters immer positiv.</span><span class="sxs-lookup"><span data-stu-id="21642-442">The value returned by the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method is always positive regardless of the sign of the `left` and `right` parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-443">Das folgende Beispiel veranschaulicht einen aufzurufenden <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> -Methode und die Ausnahmebehandlung, die erforderlich ist, um nützliche Informationen zu bereitzustellen <xref:System.ArgumentOutOfRangeException> .</span><span class="sxs-lookup"><span data-stu-id="21642-443">The following example illustrates a call to the <xref:System.Numerics.BigInteger.GreatestCommonDivisor%2A> method and the exception handling necessary to provide useful information about an <xref:System.ArgumentOutOfRangeException>.</span></span> <span data-ttu-id="21642-444">Das Ergebnis gibt an, dass der größte gemeinsame Divisor dieser beiden Zahlen 1 ist.</span><span class="sxs-lookup"><span data-stu-id="21642-444">The result indicates that the greatest common divisor of these two numbers is 1.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#10)]
 [!code-vb[System.Numeric.BigInteger.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEven">
      <MemberSignature Language="C#" Value="public bool IsEven { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEven" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsEven" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEven As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEven { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEven : bool" Usage="System.Numerics.BigInteger.IsEven" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21642-445">Gibt an, ob der Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts eine gerade Zahl ist.</span><span class="sxs-lookup"><span data-stu-id="21642-445">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is an even number.</span></span></summary>
        <value><span data-ttu-id="21642-446"><see langword="true" />, wenn der Wert des <see cref="T:System.Numerics.BigInteger" />-Objekts eine gerade Zahl ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-446"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is an even number; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-447">Diese Eigenschaft ist ein praktisches Feature, das angibt, ob ein <xref:System.Numerics.BigInteger> Wert durch zwei gleichmäßig teilbar ist.</span><span class="sxs-lookup"><span data-stu-id="21642-447">This property is a convenience feature that indicates whether a <xref:System.Numerics.BigInteger> value is evenly divisible by two.</span></span> <span data-ttu-id="21642-448">Dies entspricht dem folgenden Ausdruck:</span><span class="sxs-lookup"><span data-stu-id="21642-448">It is equivalent to the following expression:</span></span>  
  
```csharp   
value % 2 == 0;  
```  
  
```vb  
value Mod 2 = 0  
```  
  
 <span data-ttu-id="21642-449">Wenn der Wert des aktuellen- <xref:System.Numerics.BigInteger> Objekts ist <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType> , gibt die-Eigenschaft zurück `true` .</span><span class="sxs-lookup"><span data-stu-id="21642-449">If the value of the current <xref:System.Numerics.BigInteger> object is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>, the property returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOne">
      <MemberSignature Language="C#" Value="public bool IsOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsOne" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOne As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOne { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsOne : bool" Usage="System.Numerics.BigInteger.IsOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21642-450">Gibt an, ob der Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts <see cref="P:System.Numerics.BigInteger.One" /> ist.</span><span class="sxs-lookup"><span data-stu-id="21642-450">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />.</span></span></summary>
        <value><span data-ttu-id="21642-451"><see langword="true" />, wenn der Wert des <see cref="T:System.Numerics.BigInteger" />-Objekts <see cref="P:System.Numerics.BigInteger.One" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-451"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.One" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-452">Diese Eigenschaft bietet eine wesentlich bessere Leistung als andere Vergleiche mit einer, z `thisBigInteger.Equals(BigInteger.One)` . b..</span><span class="sxs-lookup"><span data-stu-id="21642-452">This property offers significantly better performance than other comparisons with one, such as `thisBigInteger.Equals(BigInteger.One)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
      </Docs>
    </Member>
    <Member MemberName="IsPowerOfTwo">
      <MemberSignature Language="C#" Value="public bool IsPowerOfTwo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerOfTwo" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPowerOfTwo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPowerOfTwo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPowerOfTwo : bool" Usage="System.Numerics.BigInteger.IsPowerOfTwo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21642-453">Gibt an, ob der Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts eine Potenz von Zwei ist.</span><span class="sxs-lookup"><span data-stu-id="21642-453">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is a power of two.</span></span></summary>
        <value><span data-ttu-id="21642-454"><see langword="true" />, wenn der Wert des <see cref="T:System.Numerics.BigInteger" />-Objekts eine Potenz von Zwei ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-454"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is a power of two; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-455">Diese Eigenschaft bestimmt, ob für einen <xref:System.Numerics.BigInteger> Wert ein einzelnes Bit festgelegt ist, das nicht NULL ist.</span><span class="sxs-lookup"><span data-stu-id="21642-455">This property determines whether a <xref:System.Numerics.BigInteger> value has a single non-zero bit set.</span></span> <span data-ttu-id="21642-456">Dies bedeutet, dass zurückgegeben `true` wird, wenn der Wert des aktuellen- <xref:System.Numerics.BigInteger> Objekts 1 (d. h. 2<sup>0</sup>) oder eine beliebige größere Potenz von zwei ist.</span><span class="sxs-lookup"><span data-stu-id="21642-456">This means that it returns `true` if the value of the current <xref:System.Numerics.BigInteger> object is 1 (that is, 2<sup>0</sup>) or any greater power of two.</span></span> <span data-ttu-id="21642-457">Gibt zurück, `false` Wenn der Wert des aktuellen-Objekts 0 (null) <xref:System.Numerics.BigInteger> ist.</span><span class="sxs-lookup"><span data-stu-id="21642-457">It returns `false` if the value of the current <xref:System.Numerics.BigInteger> object is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsZero">
      <MemberSignature Language="C#" Value="public bool IsZero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsZero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.IsZero" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsZero As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsZero { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsZero : bool" Usage="System.Numerics.BigInteger.IsZero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21642-458">Gibt an, ob der Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts <see cref="P:System.Numerics.BigInteger.Zero" /> ist.</span><span class="sxs-lookup"><span data-stu-id="21642-458">Indicates whether the value of the current <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />.</span></span></summary>
        <value><span data-ttu-id="21642-459"><see langword="true" />, wenn der Wert des <see cref="T:System.Numerics.BigInteger" />-Objekts <see cref="P:System.Numerics.BigInteger.Zero" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-459"><see langword="true" /> if the value of the <see cref="T:System.Numerics.BigInteger" /> object is <see cref="P:System.Numerics.BigInteger.Zero" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-460">Diese Eigenschaft bietet eine wesentlich bessere Leistung als `BigInteger.Equals(BigInteger.Zero)` .</span><span class="sxs-lookup"><span data-stu-id="21642-460">This property offers significantly better performance than `BigInteger.Equals(BigInteger.Zero)`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.Zero" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Log">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-461">Gibt den Logarithmus der angegebenen Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-461">Returns the logarithm of a specified number.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-462">Die Zahl, deren Logarithmus bestimmt werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-462">The number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="21642-463">Gibt den natürlichen Logarithmus (zur Basis <see langword="e" />) der angegebenen Zahl zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-463">Returns the natural (base <see langword="e" />) logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="21642-464">Der natürliche Logarithmus (Basis <see langword="e" />) von <paramref name="value" />, wie in der Tabelle im Abschnitt "Hinweise" veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-464">The natural (base <see langword="e" />) logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-465">Der- `value` Parameter wird als Basis 10 angegeben.</span><span class="sxs-lookup"><span data-stu-id="21642-465">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="21642-466">Der genaue Rückgabewert dieser Methode hängt vom Vorzeichen von ab `value` , wie in der folgenden Tabelle gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-466">The precise return value of this method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="21642-467">Vorzeichen des `value` Parameters</span><span class="sxs-lookup"><span data-stu-id="21642-467">Sign of `value` parameter</span></span>|<span data-ttu-id="21642-468">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-468">Return value</span></span>|  
|-------------------------------|------------------|  
|<span data-ttu-id="21642-469">Positiv</span><span class="sxs-lookup"><span data-stu-id="21642-469">Positive</span></span>|<span data-ttu-id="21642-470">Der natürliche Logarithmus von `value` , d `value` . h. ln oder Log e `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-470">The natural logarithm of `value`; that is, ln `value`, or log e`value`.</span></span>|  
|<span data-ttu-id="21642-471">Zero</span><span class="sxs-lookup"><span data-stu-id="21642-471">Zero</span></span>|<span data-ttu-id="21642-472"><xref:System.Double.NegativeInfinity>.</span><span class="sxs-lookup"><span data-stu-id="21642-472"><xref:System.Double.NegativeInfinity>.</span></span>|  
|<span data-ttu-id="21642-473">Negativ</span><span class="sxs-lookup"><span data-stu-id="21642-473">Negative</span></span>|<span data-ttu-id="21642-474"><xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="21642-474"><xref:System.Double.NaN>.</span></span>|  
  
 <span data-ttu-id="21642-475">Um den Logarithmus zur Basis 10 eines Werts zu berechnen, müssen Sie <xref:System.Numerics.BigInteger> die-Methode aufzurufen <xref:System.Numerics.BigInteger.Log10%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-475">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="21642-476">Um den Logarithmus einer Zahl in einer anderen Basis zu berechnen, wird die- <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="21642-476">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29> method.</span></span>  
  
 <span data-ttu-id="21642-477">Sie können die Quadratwurzel einer Zahl ermitteln, indem Sie die- <xref:System.Numerics.BigInteger.Log%2A> Methode zusammen mit der- <xref:System.Math.Exp%2A?displayProperty=nameWithType> Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="21642-477">You can find the square root of a number by calling the <xref:System.Numerics.BigInteger.Log%2A> method along with the <xref:System.Math.Exp%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="21642-478">Beachten Sie, dass das Ergebnis ist, <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> Wenn das Ergebnis größer als ist <xref:System.Double.MaxValue?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-478">Note that the result is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> if the result is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-479">Im folgenden Beispiel wird die Quadratwurzel der einzelnen Elemente in einem Array von- <xref:System.Numerics.BigInteger> Werten berechnet.</span><span class="sxs-lookup"><span data-stu-id="21642-479">The following example calculates the square root of each element in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Log#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.biginteger.log/cs/log1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Log#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.biginteger.log/vb/log1.vb#1)]
  
 <span data-ttu-id="21642-480">Diese Methode entspricht der- <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="21642-480">This method corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21642-481">Der natürliche Logarithmus von <paramref name="value" /> liegt außerhalb des Bereichs des <see cref="T:System.Double" />-Datentyps.</span><span class="sxs-lookup"><span data-stu-id="21642-481">The natural log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log">
      <MemberSignature Language="C#" Value="public static double Log (System.Numerics.BigInteger value, double baseValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log(valuetype System.Numerics.BigInteger value, float64 baseValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log(System.Numerics.BigInteger,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log (value As BigInteger, baseValue As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log(System::Numerics::BigInteger value, double baseValue);" />
      <MemberSignature Language="F#" Value="static member Log : System.Numerics.BigInteger * double -&gt; double" Usage="System.Numerics.BigInteger.Log (value, baseValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="baseValue" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-482">Eine Zahl, deren Logarithmus gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="21642-482">A number whose logarithm is to be found.</span></span></param>
        <param name="baseValue"><span data-ttu-id="21642-483">Die Basis des Logarithmus.</span><span class="sxs-lookup"><span data-stu-id="21642-483">The base of the logarithm.</span></span></param>
        <summary><span data-ttu-id="21642-484">Gibt den Logarithmus einer angegebenen Zahl bezüglich einer angegebenen Basis zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-484">Returns the logarithm of a specified number in a specified base.</span></span></summary>
        <returns><span data-ttu-id="21642-485">Der Logarithmus zur Basis <paramref name="baseValue" /> von <paramref name="value" />, wie in der Tabelle im Abschnitt "Hinweise" veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-485">The base <paramref name="baseValue" /> logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-486">Der `value` -Parameter und der- `baseValue` Parameter werden als Basis 10 Zahlen angegeben.</span><span class="sxs-lookup"><span data-stu-id="21642-486">The `value` and `baseValue` parameters are specified as base 10 numbers.</span></span>  
  
 <span data-ttu-id="21642-487">Der genaue Rückgabewert der-Methode hängt vom Vorzeichen von `value` und vom-Zeichen und-Wert von ab `baseValue` , wie in der folgenden Tabelle gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-487">The precise return value of the method depends on the sign of `value` and on the sign and value of `baseValue`, as the following table shows.</span></span>  
  
|<span data-ttu-id="21642-488">`value`-Parameter</span><span class="sxs-lookup"><span data-stu-id="21642-488">`value` parameter</span></span>|<span data-ttu-id="21642-489">`baseValue`-Parameter</span><span class="sxs-lookup"><span data-stu-id="21642-489">`baseValue` parameter</span></span>|<span data-ttu-id="21642-490">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-490">Return value</span></span>|  
|-----------------------|---------------------------|------------------|  
|<span data-ttu-id="21642-491">`value` > 0</span><span class="sxs-lookup"><span data-stu-id="21642-491">`value` > 0</span></span>|<span data-ttu-id="21642-492">(0 < `baseValue` < 1)-oder-( `baseValue` > 1)</span><span class="sxs-lookup"><span data-stu-id="21642-492">(0 < `baseValue` < 1) -or-(`baseValue` > 1)</span></span>|<span data-ttu-id="21642-493">logbasevalue ( `value` )</span><span class="sxs-lookup"><span data-stu-id="21642-493">logbaseValue(`value`)</span></span>|  
|<span data-ttu-id="21642-494">`value` < 0</span><span class="sxs-lookup"><span data-stu-id="21642-494">`value` < 0</span></span>|<span data-ttu-id="21642-495">(beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="21642-495">(any value)</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="21642-496">(beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="21642-496">(any value)</span></span>|<span data-ttu-id="21642-497">`baseValue` < 0</span><span class="sxs-lookup"><span data-stu-id="21642-497">`baseValue` < 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="21642-498">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="21642-498">`value` != 1</span></span>|<span data-ttu-id="21642-499">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="21642-499">`baseValue` = 0</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="21642-500">`value` != 1</span><span class="sxs-lookup"><span data-stu-id="21642-500">`value` != 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="21642-501">(beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="21642-501">(any value)</span></span>|`baseValue` = <xref:System.Double.NaN?displayProperty=nameWithType>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="21642-502">(beliebiger Wert)</span><span class="sxs-lookup"><span data-stu-id="21642-502">(any value)</span></span>|<span data-ttu-id="21642-503">`baseValue` = 1</span><span class="sxs-lookup"><span data-stu-id="21642-503">`baseValue` = 1</span></span>|<xref:System.Double.NaN?displayProperty=nameWithType>|  
|<span data-ttu-id="21642-504">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="21642-504">`value` = 0</span></span>|<span data-ttu-id="21642-505">0 < `baseValue` < 1</span><span class="sxs-lookup"><span data-stu-id="21642-505">0 < `baseValue` < 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="21642-506">`value` = 0</span><span class="sxs-lookup"><span data-stu-id="21642-506">`value` = 0</span></span>|<span data-ttu-id="21642-507">`baseValue` > 1</span><span class="sxs-lookup"><span data-stu-id="21642-507">`baseValue` > 1</span></span>|<xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|  
|<span data-ttu-id="21642-508">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="21642-508">`value` = 1</span></span>|<span data-ttu-id="21642-509">`baseValue` = 0</span><span class="sxs-lookup"><span data-stu-id="21642-509">`baseValue` = 0</span></span>|<span data-ttu-id="21642-510">0</span><span class="sxs-lookup"><span data-stu-id="21642-510">0</span></span>|  
|<span data-ttu-id="21642-511">`value` = 1</span><span class="sxs-lookup"><span data-stu-id="21642-511">`value` = 1</span></span>|`baseValue` = <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>|<span data-ttu-id="21642-512">0</span><span class="sxs-lookup"><span data-stu-id="21642-512">0</span></span>|  
  
 <span data-ttu-id="21642-513">Um den Logarithmus zur Basis 10 eines Werts zu berechnen, müssen Sie <xref:System.Numerics.BigInteger> die-Methode aufzurufen <xref:System.Numerics.BigInteger.Log10%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-513">To calculate the base 10 logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log10%2A> method.</span></span> <span data-ttu-id="21642-514">Um den natürlichen Logarithmus einer Zahl zu berechnen, wird die- <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="21642-514">To calculate the natural logarithm of a number, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29> method.</span></span>  
  
 <span data-ttu-id="21642-515">Diese Methode entspricht der- <xref:System.Math.Log%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="21642-515">This method corresponds to the <xref:System.Math.Log%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21642-516">Das Protokoll von <paramref name="value" /> liegt außerhalb des Bereichs des <see cref="T:System.Double" />-Datentyps.</span><span class="sxs-lookup"><span data-stu-id="21642-516">The log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Log10">
      <MemberSignature Language="C#" Value="public static double Log10 (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 Log10(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Log10(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Log10 (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double Log10(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Log10 : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.Log10 value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-517">Eine Zahl, deren Logarithmus gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="21642-517">A number whose logarithm is to be found.</span></span></param>
        <summary><span data-ttu-id="21642-518">Gibt den Logarithmus einer angegebenen Zahl zur Basis 10 zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-518">Returns the base 10 logarithm of a specified number.</span></span></summary>
        <returns><span data-ttu-id="21642-519">Der Logarithmus zur Basis 10 von <paramref name="value" />, wie in der Tabelle im Abschnitt "Hinweise" veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-519">The base 10 logarithm of <paramref name="value" />, as shown in the table in the Remarks section.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-520">Der- `value` Parameter wird als Basis 10 angegeben.</span><span class="sxs-lookup"><span data-stu-id="21642-520">The `value` parameter is specified as a base 10 number.</span></span>  
  
 <span data-ttu-id="21642-521">Der genaue Rückgabewert der-Methode hängt vom Vorzeichen von ab `value` , wie in der folgenden Tabelle gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-521">The precise return value of the method depends on the sign of `value`, as the following table shows.</span></span>  
  
|<span data-ttu-id="21642-522">Vorzeichen des value-Parameters</span><span class="sxs-lookup"><span data-stu-id="21642-522">Sign of value parameter</span></span>|<span data-ttu-id="21642-523">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-523">Return value</span></span>|  
|-----------------------------|------------------|  
|<span data-ttu-id="21642-524">Positiv</span><span class="sxs-lookup"><span data-stu-id="21642-524">Positive</span></span>|<span data-ttu-id="21642-525">Das Protokoll der Basis 10 von, d `value` . h `value` . Log10.</span><span class="sxs-lookup"><span data-stu-id="21642-525">The base 10 log of `value`; that is, log10`value`.</span></span>|  
|<span data-ttu-id="21642-526">Zero</span><span class="sxs-lookup"><span data-stu-id="21642-526">Zero</span></span>|<span data-ttu-id="21642-527"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="21642-527"><xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span>|  
|<span data-ttu-id="21642-528">Negativ</span><span class="sxs-lookup"><span data-stu-id="21642-528">Negative</span></span>|<span data-ttu-id="21642-529"><xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="21642-529"><xref:System.Double.NaN?displayProperty=nameWithType>.</span></span>|  
  
 <span data-ttu-id="21642-530">Um den natürlichen Logarithmus eines Werts zu berechnen <xref:System.Numerics.BigInteger> , wird die- <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="21642-530">To calculate the natural logarithm of a <xref:System.Numerics.BigInteger> value, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="21642-531">Um den Logarithmus einer Zahl in einer anderen Basis zu berechnen, wird die- <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="21642-531">To calculate the logarithm of a number in another base, call the <xref:System.Numerics.BigInteger.Log%28System.Numerics.BigInteger%2CSystem.Double%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="21642-532">Diese Methode entspricht der- <xref:System.Math.Log10%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="21642-532">This method corresponds to the <xref:System.Math.Log10%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21642-533">Der Logarithmus zur Basis 10 von <paramref name="value" /> liegt außerhalb des Bereichs des <see cref="T:System.Double" />-Datentyps.</span><span class="sxs-lookup"><span data-stu-id="21642-533">The base 10 log of <paramref name="value" /> is out of range of the <see cref="T:System.Double" /> data type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Max">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Max (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Max(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Max (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Max(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Max : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Max (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-534">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-534">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-535">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-535">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-536">Gibt den größeren der beiden <see cref="T:System.Numerics.BigInteger" />-Werte zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-536">Returns the larger of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="21642-537">Der größere der Parameter <paramref name="left" /> und <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="21642-537">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is larger.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-538">Diese Methode entspricht der- <xref:System.Math.Max%2A?displayProperty=nameWithType> Methode für primitive numerische Typen.</span><span class="sxs-lookup"><span data-stu-id="21642-538">This method corresponds to the <xref:System.Math.Max%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-539">Im folgenden Beispiel wird die- <xref:System.Numerics.BigInteger.Max%2A> Methode verwendet, um die größte Zahl in einem Array von- <xref:System.Numerics.BigInteger> Werten auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="21642-539">The following example uses the <xref:System.Numerics.BigInteger.Max%2A> method to select the largest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Max#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/cs/Max1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Max#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Max/vb/Max1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Min">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Min (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Min(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Min(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Min (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Min(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Min : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Min (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-540">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-540">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-541">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-541">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-542">Gibt den kleineren der beiden <see cref="T:System.Numerics.BigInteger" />-Werte zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-542">Returns the smaller of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="21642-543">Der kleinere der Parameter <paramref name="left" /> und <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="21642-543">The <paramref name="left" /> or <paramref name="right" /> parameter, whichever is smaller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-544">Diese Methode entspricht der- <xref:System.Math.Min%2A?displayProperty=nameWithType> Methode für primitive numerische Typen.</span><span class="sxs-lookup"><span data-stu-id="21642-544">This method corresponds to the <xref:System.Math.Min%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-545">Im folgenden Beispiel wird die- <xref:System.Numerics.BigInteger.Min%2A> Methode verwendet, um die kleinste Zahl in einem Array von- <xref:System.Numerics.BigInteger> Werten auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="21642-545">The following example uses the <xref:System.Numerics.BigInteger.Min%2A> method to select the smallest number in an array of <xref:System.Numerics.BigInteger> values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Min#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/cs/Min1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Min#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Min/vb/Min1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Max(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="MinusOne">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger MinusOne { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger MinusOne" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.MinusOne" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinusOne As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger MinusOne { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.MinusOne : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.MinusOne" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21642-546">Ruft einen Wert ab, der die Zahl -1 darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-546">Gets a value that represents the number negative one (-1).</span></span></summary>
        <value><span data-ttu-id="21642-547">Eine ganze Zahl, deren Wert -1 ist.</span><span class="sxs-lookup"><span data-stu-id="21642-547">An integer whose value is negative one (-1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-548">Die- <xref:System.Numerics.BigInteger.MinusOne%2A> Eigenschaft wird verwendet, um einen <xref:System.Numerics.BigInteger> -Wert mit-1 zu vergleichen oder um einem-Objekt-1 zuzuweisen <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-548">The <xref:System.Numerics.BigInteger.MinusOne%2A> property is used to compare a <xref:System.Numerics.BigInteger> value to -1 or to assign -1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.One" />
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
      </Docs>
    </Member>
    <Member MemberName="ModPow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger ModPow (System.Numerics.BigInteger value, System.Numerics.BigInteger exponent, System.Numerics.BigInteger modulus);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger ModPow(valuetype System.Numerics.BigInteger value, valuetype System.Numerics.BigInteger exponent, valuetype System.Numerics.BigInteger modulus) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ModPow(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ModPow (value As BigInteger, exponent As BigInteger, modulus As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger ModPow(System::Numerics::BigInteger value, System::Numerics::BigInteger exponent, System::Numerics::BigInteger modulus);" />
      <MemberSignature Language="F#" Value="static member ModPow : System.Numerics.BigInteger * System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.ModPow (value, exponent, modulus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Numerics.BigInteger" />
        <Parameter Name="modulus" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-549">Die Zahl, deren <paramref name="exponent" />. Potenz berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-549">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="21642-550">Der Exponent, mit dem <paramref name="value" /> potenziert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-550">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <param name="modulus"><span data-ttu-id="21642-551">Die Zahl, durch die <paramref name="value" /> hoch <paramref name="exponent" /> dividiert wird.</span><span class="sxs-lookup"><span data-stu-id="21642-551">The number by which to divide <paramref name="value" /> raised to the <paramref name="exponent" /> power.</span></span></param>
        <summary><span data-ttu-id="21642-552">Führt eine Modulodivision für eine zur Potenz einer anderen Zahl erhobene Zahl aus.</span><span class="sxs-lookup"><span data-stu-id="21642-552">Performs modulus division on a number raised to the power of another number.</span></span></summary>
        <returns><span data-ttu-id="21642-553">Der Rest nach der Division von <paramref name="value" /><sup>exponent</sup> durch <paramref name="modulus" />.</span><span class="sxs-lookup"><span data-stu-id="21642-553">The remainder after dividing <paramref name="value" /><sup>exponent</sup> by <paramref name="modulus" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-554">Die- <xref:System.Numerics.BigInteger.ModPow%2A> Methode wertet den folgenden Ausdruck aus:</span><span class="sxs-lookup"><span data-stu-id="21642-554">The <xref:System.Numerics.BigInteger.ModPow%2A> method evaluates the following expression:</span></span>  
  
 <span data-ttu-id="21642-555">(baseValue ^ Exponent) Mod-Modulo</span><span class="sxs-lookup"><span data-stu-id="21642-555">(baseValue ^ exponent) Mod modulus</span></span>  
  
 <span data-ttu-id="21642-556">Verwenden Sie die-Methode, um exponentiell für <xref:System.Numerics.BigInteger> Werte ohne modulodivision auszuführen <xref:System.Numerics.BigInteger.Pow%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-556">To perform exponentiation on <xref:System.Numerics.BigInteger> values without modulus division, use the <xref:System.Numerics.BigInteger.Pow%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-557">Das folgende Beispiel veranschaulicht das Aufrufen der- <xref:System.Numerics.BigInteger.ModPow%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="21642-557">The following example provides a simple illustration of calling the <xref:System.Numerics.BigInteger.ModPow%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/cs/ModPow1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ModPow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ModPow/vb/ModPow1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="21642-558"><paramref name="modulus" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="21642-558"><paramref name="modulus" /> is zero.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21642-559"><paramref name="exponent" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-559"><paramref name="exponent" /> is negative.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Multiply (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Multiply (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Multiply(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Multiply : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Multiply (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-560">Die erste zu multiplizierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="21642-560">The first number to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="21642-561">Die zweite zu multiplizierende Zahl.</span><span class="sxs-lookup"><span data-stu-id="21642-561">The second number to multiply.</span></span></param>
        <summary><span data-ttu-id="21642-562">Gibt das Produkt der beiden <see cref="T:System.Numerics.BigInteger" />-Werte zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-562">Returns the product of two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="21642-563">Das Produkt des <paramref name="left" />-Parameters und des <paramref name="right" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="21642-563">The product of the <paramref name="left" /> and <paramref name="right" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-564">Die- <xref:System.Numerics.BigInteger.Multiply%2A> Methode wird für Sprachen implementiert, die das Überladen von Operatoren nicht unterstützen.</span><span class="sxs-lookup"><span data-stu-id="21642-564">The <xref:System.Numerics.BigInteger.Multiply%2A> method is implemented for languages that do not support operator overloading.</span></span> <span data-ttu-id="21642-565">Das Verhalten ist identisch mit der Multiplikation mit dem Multiplikations Operator.</span><span class="sxs-lookup"><span data-stu-id="21642-565">Its behavior is identical to multiplication using the multiplication operator.</span></span> <span data-ttu-id="21642-566">Außerdem ist die- <xref:System.Numerics.BigInteger.Multiply%2A> Methode ein nützlicher Ersatz für den Multiplikations Operator beim Instanziieren <xref:System.Numerics.BigInteger> einer Variablen, indem Sie Ihr ein Produkt zuweist, das sich aus der Multiplikation ergibt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-566">In addition, the <xref:System.Numerics.BigInteger.Multiply%2A> method is a useful substitute for the multiplication operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it a product that results from multiplication, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#1)]  
  
 <span data-ttu-id="21642-567">Bei Bedarf führt diese Methode automatisch eine implizite Konvertierung von anderen ganzzahligen Typen in- <xref:System.Numerics.BigInteger> Objekte durch.</span><span class="sxs-lookup"><span data-stu-id="21642-567">If necessary, this method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="21642-568">Dies wird im Beispiel im nächsten Abschnitt veranschaulicht, in dem die <xref:System.Numerics.BigInteger.Multiply%2A> Methode zwei Werte übermittelt <xref:System.Int64> .</span><span class="sxs-lookup"><span data-stu-id="21642-568">This is illustrated in the example in the next section, where the <xref:System.Numerics.BigInteger.Multiply%2A> method is passed two <xref:System.Int64> values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-569">Im folgenden Beispiel wird versucht, eine Multiplikation mit zwei langen Ganzzahlen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="21642-569">The following example tries to perform multiplication with two long integers.</span></span> <span data-ttu-id="21642-570">Da das Ergebnis den Bereich einer langen ganzen Zahl überschreitet, <xref:System.OverflowException> wird eine ausgelöst, und die- <xref:System.Numerics.BigInteger.Multiply%2A> Methode wird aufgerufen, um die Multiplikation zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="21642-570">Because the result exceeds the range of a long integer, an <xref:System.OverflowException> is thrown, and the <xref:System.Numerics.BigInteger.Multiply%2A> method is called to handle the multiplication.</span></span> <span data-ttu-id="21642-571">Beachten Sie, dass c# erfordert, dass Sie entweder das- `checked` Schlüsselwort (wie in diesem Beispiel) oder die- `/checked+` Compileroption verwenden, um sicherzustellen, dass bei einem numerischen Überlauf eine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="21642-571">Note that C# requires that you use either the `checked` keyword (as in this example) or the `/checked+` compiler option to make sure an exception is thrown on a numeric overflow.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#7)]
 [!code-vb[System.Numeric.BigInteger.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Negate (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Negate(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Negate(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Negate (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Negate(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member Negate : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Negate value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-572">Der zu negierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-572">The value to negate.</span></span></param>
        <summary><span data-ttu-id="21642-573">Negiert einen angegebenen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-573">Negates a specified <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-574">Das Ergebnis des <paramref name="value" />-Parameters, multipliziert mit -1.</span><span class="sxs-lookup"><span data-stu-id="21642-574">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-575">Negation erhält den Additiven umgekehrten Wert einer Zahl.</span><span class="sxs-lookup"><span data-stu-id="21642-575">Negation obtains the additive inverse of a number.</span></span> <span data-ttu-id="21642-576">Die Additive Umkehrung einer Zahl ist eine Zahl, die den Wert 0 (null) erzeugt, wenn Sie der ursprünglichen Zahl hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-576">The additive inverse of a number is a number that produces a value of zero when it is added to the original number.</span></span>  
  
 <span data-ttu-id="21642-577">Die- <xref:System.Numerics.BigInteger.Negate%2A> Methode wird für Sprachen implementiert, die keine benutzerdefinierten Operatoren unterstützen.</span><span class="sxs-lookup"><span data-stu-id="21642-577">The <xref:System.Numerics.BigInteger.Negate%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="21642-578">Das Verhalten ist mit der Negations Operator identisch, die den unären Negations Operator verwendet.</span><span class="sxs-lookup"><span data-stu-id="21642-578">Its behavior is identical to negation using the unary negation operator.</span></span> <span data-ttu-id="21642-579">Außerdem ist die- <xref:System.Numerics.BigInteger.Negate%2A> Methode ein nützlicher Ersatz für den Negations Operator beim Instanziieren einer <xref:System.Numerics.BigInteger> Variablen, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-579">In addition, the <xref:System.Numerics.BigInteger.Negate%2A> method is a useful substitute for the negation operator when instantiating a <xref:System.Numerics.BigInteger> variable, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="21642-580">Im folgenden Beispiel werden drei Möglichkeiten veranschaulicht, um den Wert eines-Objekts zu negieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-580">The following example illustrates three ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="One">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger One { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger One" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.One" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property One As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger One { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.One : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.One" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21642-581">Ruft einen Wert ab, der die Zahl 1 darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-581">Gets a value that represents the number one (1).</span></span></summary>
        <value><span data-ttu-id="21642-582">Ein Objekt, dessen Wert 1 ist.</span><span class="sxs-lookup"><span data-stu-id="21642-582">An object whose value is one (1).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-583">Die- <xref:System.Numerics.BigInteger.One%2A> Eigenschaft wird normalerweise verwendet, um einen <xref:System.Numerics.BigInteger> Wert mit 1 zu vergleichen oder um einem-Objekt 1 zuzuweisen <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-583">The <xref:System.Numerics.BigInteger.One%2A> property is usually used to compare a <xref:System.Numerics.BigInteger> value to 1 or to assign 1 to a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsOne" />
        <altmember cref="P:System.Numerics.BigInteger.MinusOne" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Addition(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Addition(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left + right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-584">Der erste zu addierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-584">The first value to add.</span></span></param>
        <param name="right"><span data-ttu-id="21642-585">Der zweite zu addierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-585">The second value to add.</span></span></param>
        <summary><span data-ttu-id="21642-586">Addiert die Werte von zwei angegebenen <see cref="T:System.Numerics.BigInteger" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="21642-586">Adds the values of two specified <see cref="T:System.Numerics.BigInteger" /> objects.</span></span></summary>
        <returns><span data-ttu-id="21642-587">Die Summe von <paramref name="left" /> und <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="21642-587">The sum of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-588">Die- <xref:System.Numerics.BigInteger.op_Addition%2A> Methode definiert den Additions Vorgang für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-588">The <xref:System.Numerics.BigInteger.op_Addition%2A> method defines the addition operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-589">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-589">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#12)]
 [!code-vb[System.Numeric.BigInteger.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#12)]  
  
 <span data-ttu-id="21642-590">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Add%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-590">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Add%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Add(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseAnd">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &amp; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseAnd(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseAnd(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator And (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &amp;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &amp;&amp;&amp; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left &amp;&amp;&amp; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-591">Der erste Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-591">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="21642-592">Der zweite Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-592">The second value.</span></span></param>
        <summary><span data-ttu-id="21642-593">Führt eine bitweise <see langword="And" />-Operation für zwei <see cref="T:System.Numerics.BigInteger" />-Werte aus.</span><span class="sxs-lookup"><span data-stu-id="21642-593">Performs a bitwise <see langword="And" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="21642-594">Das Ergebnis der bitweisen <see langword="And" />-Operation.</span><span class="sxs-lookup"><span data-stu-id="21642-594">The result of the bitwise <see langword="And" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-595">Die- <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> Methode definiert die `And` bitweise-Operation für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-595">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method defines the bitwise `And` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-596">`And`Durch die bitweise-Operation wird ein Ergebnisbit nur dann festgelegt, wenn die entsprechenden Bits in `left` und `right` ebenfalls festgelegt sind, wie in der folgenden Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="21642-596">The bitwise `And` operation sets a result bit only if the corresponding bits in `left` and `right` are also set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="21642-597">Bit in `left`</span><span class="sxs-lookup"><span data-stu-id="21642-597">Bit in `left`</span></span>|<span data-ttu-id="21642-598">Bit in `right`</span><span class="sxs-lookup"><span data-stu-id="21642-598">Bit in `right`</span></span>|<span data-ttu-id="21642-599">Bit in Ergebnis</span><span class="sxs-lookup"><span data-stu-id="21642-599">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="21642-600">0</span><span class="sxs-lookup"><span data-stu-id="21642-600">0</span></span>|<span data-ttu-id="21642-601">0</span><span class="sxs-lookup"><span data-stu-id="21642-601">0</span></span>|<span data-ttu-id="21642-602">0</span><span class="sxs-lookup"><span data-stu-id="21642-602">0</span></span>|  
|<span data-ttu-id="21642-603">1</span><span class="sxs-lookup"><span data-stu-id="21642-603">1</span></span>|<span data-ttu-id="21642-604">0</span><span class="sxs-lookup"><span data-stu-id="21642-604">0</span></span>|<span data-ttu-id="21642-605">0</span><span class="sxs-lookup"><span data-stu-id="21642-605">0</span></span>|  
|<span data-ttu-id="21642-606">1</span><span class="sxs-lookup"><span data-stu-id="21642-606">1</span></span>|<span data-ttu-id="21642-607">1</span><span class="sxs-lookup"><span data-stu-id="21642-607">1</span></span>|<span data-ttu-id="21642-608">1</span><span class="sxs-lookup"><span data-stu-id="21642-608">1</span></span>|  
|<span data-ttu-id="21642-609">0</span><span class="sxs-lookup"><span data-stu-id="21642-609">0</span></span>|<span data-ttu-id="21642-610">1</span><span class="sxs-lookup"><span data-stu-id="21642-610">1</span></span>|<span data-ttu-id="21642-611">0</span><span class="sxs-lookup"><span data-stu-id="21642-611">0</span></span>|  
  
 <span data-ttu-id="21642-612">Die- <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> Methode ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-612">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#1)]  
  
 <span data-ttu-id="21642-613">Die- <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> Methode führt die `And` bitweise-Operation für zwei <xref:System.Numerics.BigInteger> -Werte aus, als wären Sie beide in der Komplement-Darstellung von zwei Elementen mit der Erweiterung für virtuelle Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-613">The <xref:System.Numerics.BigInteger.op_BitwiseAnd%2A> method performs the bitwise `And` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_BitwiseOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator | (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_BitwiseOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_BitwiseOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Or (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator |(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ||| ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ||| right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-614">Der erste Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-614">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="21642-615">Der zweite Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-615">The second value.</span></span></param>
        <summary><span data-ttu-id="21642-616">Führt eine bitweise <see langword="Or" />-Operation für zwei <see cref="T:System.Numerics.BigInteger" />-Werte aus.</span><span class="sxs-lookup"><span data-stu-id="21642-616">Performs a bitwise <see langword="Or" /> operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="21642-617">Das Ergebnis der bitweisen <see langword="Or" />-Operation.</span><span class="sxs-lookup"><span data-stu-id="21642-617">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-618">Die- <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> Methode definiert die `Or` bitweise-Operation für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-618">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method defines the bitwise `Or` operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-619">`Or`Durch die bitweise-Operation wird ein Ergebnisbit nur dann festgelegt, wenn eine oder beide der entsprechenden Bits in `left` und `right` festgelegt sind, wie in der folgenden Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="21642-619">The bitwise `Or` operation sets a result bit only if either or both of the corresponding bits in `left` and `right` are set, as shown in the following table.</span></span>  
  
|<span data-ttu-id="21642-620">Bit in `left`</span><span class="sxs-lookup"><span data-stu-id="21642-620">Bit in `left`</span></span>|<span data-ttu-id="21642-621">Bit in `right`</span><span class="sxs-lookup"><span data-stu-id="21642-621">Bit in `right`</span></span>|<span data-ttu-id="21642-622">Bit in Ergebnis</span><span class="sxs-lookup"><span data-stu-id="21642-622">Bit in result</span></span>|  
|-------------------|--------------------|-------------------|  
|<span data-ttu-id="21642-623">0</span><span class="sxs-lookup"><span data-stu-id="21642-623">0</span></span>|<span data-ttu-id="21642-624">0</span><span class="sxs-lookup"><span data-stu-id="21642-624">0</span></span>|<span data-ttu-id="21642-625">0</span><span class="sxs-lookup"><span data-stu-id="21642-625">0</span></span>|  
|<span data-ttu-id="21642-626">1</span><span class="sxs-lookup"><span data-stu-id="21642-626">1</span></span>|<span data-ttu-id="21642-627">0</span><span class="sxs-lookup"><span data-stu-id="21642-627">0</span></span>|<span data-ttu-id="21642-628">1</span><span class="sxs-lookup"><span data-stu-id="21642-628">1</span></span>|  
|<span data-ttu-id="21642-629">1</span><span class="sxs-lookup"><span data-stu-id="21642-629">1</span></span>|<span data-ttu-id="21642-630">1</span><span class="sxs-lookup"><span data-stu-id="21642-630">1</span></span>|<span data-ttu-id="21642-631">1</span><span class="sxs-lookup"><span data-stu-id="21642-631">1</span></span>|  
|<span data-ttu-id="21642-632">0</span><span class="sxs-lookup"><span data-stu-id="21642-632">0</span></span>|<span data-ttu-id="21642-633">1</span><span class="sxs-lookup"><span data-stu-id="21642-633">1</span></span>|<span data-ttu-id="21642-634">1</span><span class="sxs-lookup"><span data-stu-id="21642-634">1</span></span>|  
  
 <span data-ttu-id="21642-635">Die- <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> Methode ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-635">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#2)]  
  
 <span data-ttu-id="21642-636">Die- <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> Methode führt die `Or` bitweise-Operation für zwei <xref:System.Numerics.BigInteger> -Werte aus, als wären Sie beide in der Komplement-Darstellung von zwei Elementen mit der Erweiterung für virtuelle Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-636">The <xref:System.Numerics.BigInteger.op_BitwiseOr%2A> method performs the bitwise `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Decrement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator -- (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Decrement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Decrement (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator --(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Decrement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Decrement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-637">Der zu dekrementierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-637">The value to decrement.</span></span></param>
        <summary><span data-ttu-id="21642-638">Dekrementiert einen <see cref="T:System.Numerics.BigInteger" />-Wert um 1.</span><span class="sxs-lookup"><span data-stu-id="21642-638">Decrements a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="21642-639">Der um 1 dekrementierte Wert des <paramref name="value" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="21642-639">The value of the <paramref name="value" /> parameter decremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-640">Die- <xref:System.Numerics.BigInteger.op_Decrement%2A> Methode definiert den Dekrement-Vorgang für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-640">The <xref:System.Numerics.BigInteger.op_Decrement%2A> method defines the decrement operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-641">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-641">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#17)]  
  
 <span data-ttu-id="21642-642">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Subtract%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-642">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A> method instead.</span></span> <span data-ttu-id="21642-643">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="21642-643">For example:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#3)]  
  
 <span data-ttu-id="21642-644">Da- <xref:System.Numerics.BigInteger> Objekte unveränderlich sind, erstellt der- <xref:System.Numerics.BigInteger.op_Decrement%2A> Operator ein neues- <xref:System.Numerics.BigInteger> Objekt, dessen Wert eins kleiner ist als das <xref:System.Numerics.BigInteger> durch dargestellte Objekt `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-644">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Decrement%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one less than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="21642-645">Dies bedeutet, dass wiederholte Aufrufe von <xref:System.Numerics.BigInteger.op_Decrement%2A> teuer sein können.</span><span class="sxs-lookup"><span data-stu-id="21642-645">This means that repeated calls to <xref:System.Numerics.BigInteger.op_Decrement%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="21642-646">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-646">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_Division">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator / (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Division(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator / (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator /(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( / ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend / divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="21642-647">Der zu dividierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-647">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="21642-648">Der Wert, durch den dividiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-648">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="21642-649">Dividiert einen angegebenen <see cref="T:System.Numerics.BigInteger" />-Wert durch einen anderen angegebenen <see cref="T:System.Numerics.BigInteger" />-Wert mit einer Ganzzahldivision.</span><span class="sxs-lookup"><span data-stu-id="21642-649">Divides a specified <see cref="T:System.Numerics.BigInteger" /> value by another specified <see cref="T:System.Numerics.BigInteger" /> value by using integer division.</span></span></summary>
        <returns><span data-ttu-id="21642-650">Das ganzzahlige Ergebnis der Division.</span><span class="sxs-lookup"><span data-stu-id="21642-650">The integral result of the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-651">Die- <xref:System.Numerics.BigInteger.op_Division%2A> Methode definiert den Divisions Vorgang für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-651">The <xref:System.Numerics.BigInteger.op_Division%2A> method defines the division operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-652">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-652">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#13)]
 [!code-vb[System.Numeric.BigInteger.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#13)]  
  
 <span data-ttu-id="21642-653">Sprachen, die keine benutzerdefinierten Operatoren und Operator Überladung unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Divide%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-653">Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.BigInteger.Divide%2A> method instead.</span></span>  
  
 <span data-ttu-id="21642-654">Die äquivalente Methode für diesen Operator ist. <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="21642-654">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Divide%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="21642-655">Im folgenden Beispiel wird ein Array von- <xref:System.Numerics.BigInteger> Werten erstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-655">The following example creates an array of <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-656">Anschließend wird jedes Element als Quotienten in einem Divisions Vorgang verwendet, der die <xref:System.Numerics.BigInteger.Divide%2A> -Methode, den Divisions Operator (/) und die- <xref:System.Numerics.BigInteger.DivRem%2A> Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="21642-656">It then uses each element as the quotient in a division operation that uses the <xref:System.Numerics.BigInteger.Divide%2A> method, the division operator (/), and the <xref:System.Numerics.BigInteger.DivRem%2A> method.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/cs/Divide1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Divide/vb/Divide1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="21642-657"><paramref name="divisor" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="21642-657"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.Divide(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Equality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-658">Gibt einen Wert zurück, der angibt, ob zwei Werte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-658">Returns a value that indicates whether two values are equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-659">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-659">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-660">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-660">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-661">Gibt einen Wert zurück, der angibt, ob der Wert einer langen ganzen Zahl mit Vorzeichen und ein <see cref="T:System.Numerics.BigInteger" />-Wert gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-661">Returns a value that indicates whether a signed long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="21642-662"><see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-662"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-663">Die- <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> Methode definiert die Gleichheits Vergleichsoperation für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-663">The <xref:System.Numerics.BigInteger.op_Equality%28System.Int64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-664">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-664">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Operators#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#4)]  
  
 <span data-ttu-id="21642-665">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> stattdessen die Instanzmethode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="21642-665">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="21642-666">Wenn ein-,-,-,-,- `left` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-666">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-667">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-667">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-668">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-668">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-669">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-669">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-670">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert und der Wert einer langen ganzen Zahl mit Vorzeichen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-670">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a signed long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="21642-671"><see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-671"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-672">Die- <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> Methode definiert die Gleichheits Vergleichsoperation für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-672">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Int64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-673">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-673">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#5)]
 [!code-vb[System.Numerics.BigInteger.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#5)]  
  
 <span data-ttu-id="21642-674">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> stattdessen die Instanzmethode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="21642-674">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="21642-675">Wenn ein-,-,-,-,- `right` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-675">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-676">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-676">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-677">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-677">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-678">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-678">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-679">Gibt einen Wert zurück, der angibt, ob die Werte von zwei <see cref="T:System.Numerics.BigInteger" />-Objekten gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-679">Returns a value that indicates whether the values of two <see cref="T:System.Numerics.BigInteger" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="21642-680"><see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-680"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-681">Die- <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> Methode definiert den Vorgang des Gleichheits Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-681">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method defines the operation of the equality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-682">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-682">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#19)]
 [!code-vb[System.Numeric.BigInteger.Class#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#19)]  
  
 <span data-ttu-id="21642-683">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> stattdessen die Instanzmethode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="21642-683">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 <span data-ttu-id="21642-684">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-684">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.Equals" />
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-685">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-685">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-686">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-686">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-687">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert und der Wert einer langen ganzen Zahl ohne Vorzeichen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-687">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and an unsigned long integer value are equal.</span></span></summary>
        <returns><span data-ttu-id="21642-688"><see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-688"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-689">Die- <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> Methode definiert die Gleichheits Vergleichsoperation für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-689">The <xref:System.Numerics.BigInteger.op_Equality%28System.Numerics.BigInteger%2CSystem.UInt64%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-690">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-690">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#6)]
 [!code-vb[System.Numerics.BigInteger.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#6)]  
  
 <span data-ttu-id="21642-691">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> stattdessen die Instanzmethode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="21642-691">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Equality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-692">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-692">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-693">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-693">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-694">Gibt einen Wert zurück, der angibt, ob der Wert einer langen ganzen Zahl ohne Vorzeichen und ein <see cref="T:System.Numerics.BigInteger" />-Wert gleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-694">Returns a value that indicates whether an unsigned long integer value and a <see cref="T:System.Numerics.BigInteger" /> value are equal.</span></span></summary>
        <returns><span data-ttu-id="21642-695"><see langword="true" />, wenn der <paramref name="left" />-Parameter und der <paramref name="right" />-Parameter denselben Wert aufweisen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-695"><see langword="true" /> if the <paramref name="left" /> and <paramref name="right" /> parameters have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-696">Die- <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> Methode definiert die Gleichheits Vergleichsoperation für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-696">The <xref:System.Numerics.BigInteger.op_Equality%28System.UInt64%2CSystem.Numerics.BigInteger%29> method defines the equality comparison operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-697">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-697">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#7)]
 [!code-vb[System.Numerics.BigInteger.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#7)]  
  
 <span data-ttu-id="21642-698">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> stattdessen die Instanzmethode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="21642-698">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> instance method instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Inequality" />
      </Docs>
    </Member>
    <Member MemberName="op_ExclusiveOr">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ^ (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_ExclusiveOr(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_ExclusiveOr(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Xor (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ^(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( ^^^ ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left ^^^ right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-699">Der erste Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-699">The first value.</span></span></param>
        <param name="right"><span data-ttu-id="21642-700">Der zweite Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-700">The second value.</span></span></param>
        <summary><span data-ttu-id="21642-701">Führt eine bitweise exklusive <see langword="Or" />-Operation (<see langword="XOr" />-Operation) für zwei <see cref="T:System.Numerics.BigInteger" />-Werte aus.</span><span class="sxs-lookup"><span data-stu-id="21642-701">Performs a bitwise exclusive <see langword="Or" /> (<see langword="XOr" />) operation on two <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="21642-702">Das Ergebnis der bitweisen <see langword="Or" />-Operation.</span><span class="sxs-lookup"><span data-stu-id="21642-702">The result of the bitwise <see langword="Or" /> operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-703">Das Ergebnis einer bitweisen exklusiven `Or` Operation ist `true` , wenn sich die Werte der beiden Bits unterscheiden, andernfalls `false` .</span><span class="sxs-lookup"><span data-stu-id="21642-703">The result of a bitwise exclusive `Or` operation is `true` if the values of the two bits are different; otherwise, it is `false`.</span></span> <span data-ttu-id="21642-704">In der folgenden Tabelle wird der exklusive- `Or` Vorgang veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-704">The following table illustrates the exclusive `Or` operation.</span></span>  
  
|<span data-ttu-id="21642-705">Bit x in `left`</span><span class="sxs-lookup"><span data-stu-id="21642-705">Bit x in `left`</span></span>|<span data-ttu-id="21642-706">Bit x in `right`</span><span class="sxs-lookup"><span data-stu-id="21642-706">Bit x in `right`</span></span>|<span data-ttu-id="21642-707">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-707">Return value</span></span>|  
|---------------------|----------------------|------------------|  
|<span data-ttu-id="21642-708">0</span><span class="sxs-lookup"><span data-stu-id="21642-708">0</span></span>|<span data-ttu-id="21642-709">0</span><span class="sxs-lookup"><span data-stu-id="21642-709">0</span></span>|<span data-ttu-id="21642-710">0</span><span class="sxs-lookup"><span data-stu-id="21642-710">0</span></span>|  
|<span data-ttu-id="21642-711">0</span><span class="sxs-lookup"><span data-stu-id="21642-711">0</span></span>|<span data-ttu-id="21642-712">1</span><span class="sxs-lookup"><span data-stu-id="21642-712">1</span></span>|<span data-ttu-id="21642-713">1</span><span class="sxs-lookup"><span data-stu-id="21642-713">1</span></span>|  
|<span data-ttu-id="21642-714">1</span><span class="sxs-lookup"><span data-stu-id="21642-714">1</span></span>|<span data-ttu-id="21642-715">0</span><span class="sxs-lookup"><span data-stu-id="21642-715">0</span></span>|<span data-ttu-id="21642-716">1</span><span class="sxs-lookup"><span data-stu-id="21642-716">1</span></span>|  
|<span data-ttu-id="21642-717">1</span><span class="sxs-lookup"><span data-stu-id="21642-717">1</span></span>|<span data-ttu-id="21642-718">1</span><span class="sxs-lookup"><span data-stu-id="21642-718">1</span></span>|<span data-ttu-id="21642-719">0</span><span class="sxs-lookup"><span data-stu-id="21642-719">0</span></span>|  
  
 <span data-ttu-id="21642-720">Die- <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> Methode ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-720">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#8)]
 [!code-vb[System.Numerics.BigInteger.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#8)]  
  
 <span data-ttu-id="21642-721">Die- <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> Methode führt die `Or` bitweise exklusive Operation für zwei <xref:System.Numerics.BigInteger> -Werte aus, als wären Sie beide in der Komplement-Darstellung eines zwei Werts mit der Erweiterung für virtuelle Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-721">The <xref:System.Numerics.BigInteger.op_ExclusiveOr%2A> method performs the bitwise exclusive `Or` operation on two <xref:System.Numerics.BigInteger> values as if they were both in two's complement representation with virtual sign extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Explicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-722">Definiert eine explizite Konvertierung zwischen einem <see cref="T:System.Numerics.BigInteger" />-Objekt und einem anderen Typ.</span><span class="sxs-lookup"><span data-stu-id="21642-722">Defines an explicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Decimal) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : decimal -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-723">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-723">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-724">Definiert eine explizite Konvertierung eines <see cref="T:System.Decimal" />-Objekts in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-724">Defines an explicit conversion of a <see cref="T:System.Decimal" /> object to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-725">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-725">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-726">Alle Bruchteile des- `value` Parameters werden vor der Konvertierung abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="21642-726">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="21642-727">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-727">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-728">Da bei der Konvertierung von <xref:System.Decimal> in <xref:System.Numerics.BigInteger> alle Bruchteile von abgeschnitten `value` werden können, wird diese Konvertierung von sprach Compilern nicht automatisch durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="21642-728">Because the conversion from <xref:System.Decimal> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="21642-729">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z. b. `CType` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-729">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-730">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-730">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="21642-731">Für Sprachen, die keine benutzerdefinierten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-731">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Decimal%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="21642-732">Im folgenden Beispiel werden die einzelnen Elemente in einem Array von- <xref:System.Decimal> Werten in <xref:System.Numerics.BigInteger> -Objekte konvertiert. Anschließend wird das Ergebnis der einzelnen Konvertierungen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-732">The following example converts the individual elements in an array of <xref:System.Decimal> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="21642-733">Beachten Sie, dass alle Bruchteile eines <xref:System.Decimal> Werts während der Konvertierung abgeschnitten werden.</span><span class="sxs-lookup"><span data-stu-id="21642-733">Note that any fractional part of a <xref:System.Decimal> value is truncated during the conversion.</span></span>   

 [!code-csharp[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#1)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Double)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Double) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(double value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : double -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-734">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-734">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-735">Definiert eine explizite Konvertierung eines <see cref="T:System.Double" />-Werts in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-735">Defines an explicit conversion of a <see cref="T:System.Double" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-736">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-736">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-737">Alle Bruchteile des- `value` Parameters werden vor der Konvertierung abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="21642-737">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="21642-738">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-738">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-739">Da bei der Konvertierung von <xref:System.Double> in <xref:System.Numerics.BigInteger> alle Bruchteile von abgeschnitten `value` werden können, wird diese Konvertierung von sprach Compilern nicht automatisch durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="21642-739">Because the conversion from <xref:System.Double> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="21642-740">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z. b. `CType` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-740">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-741">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-741">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="21642-742">Für Sprachen, die keine benutzerdefinierten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-742">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Double%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="21642-743">Im folgenden Beispiel werden die einzelnen Elemente in einem Array von- <xref:System.Double> Werten in <xref:System.Numerics.BigInteger> -Objekte konvertiert. Anschließend wird das Ergebnis der einzelnen Konvertierungen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-743">The following example converts the individual elements in an array of <xref:System.Double> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="21642-744">Beachten Sie, dass alle Bruchteile eines <xref:System.Double> Werts während der Konvertierung abgeschnitten werden.</span><span class="sxs-lookup"><span data-stu-id="21642-744">Note that any fractional part of a <xref:System.Double> value is truncated during the conversion.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#2)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#2)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-745"><paramref name="value" /> ist <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" /> oder <see cref="F:System.Double.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="21642-745"><paramref name="value" /> is <see cref="F:System.Double.NaN" />, <see cref="F:System.Double.PositiveInfinity" />, or <see cref="F:System.Double.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator byte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Byte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Byte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; byte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-746">Der Wert, der in einen <see cref="T:System.Byte" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-746">The value to convert to a <see cref="T:System.Byte" />.</span></span></param>
        <summary><span data-ttu-id="21642-747">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen Bytewert ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-747">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned byte value.</span></span></summary>
        <returns><span data-ttu-id="21642-748">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-748">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-749">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-749">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-750">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-750">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-751">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CByte` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-751">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CByte` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-752">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-752">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="21642-753">Da durch diesen Vorgang eine einschränkende Konvertierung definiert wird, kann eine zur Laufzeit ausgelöst werden, <xref:System.OverflowException> Wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Byte> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-753">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span> <span data-ttu-id="21642-754">Wenn die Konvertierung erfolgreich ist, gibt es im resultierenden Wert keinen Genauigkeits Verlust <xref:System.Byte> .</span><span class="sxs-lookup"><span data-stu-id="21642-754">There is no loss of precision in the resulting <xref:System.Byte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="21642-755">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.Byte> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-755">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Byte> values.</span></span> <span data-ttu-id="21642-756">Außerdem wird eine behandelt <xref:System.OverflowException> , die ausgelöst wird, da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Byte> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-756">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Byte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#1)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-757"><paramref name="value" /> ist kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="21642-757"><paramref name="value" /> is less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator decimal (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Decimal op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Decimal" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Decimal(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; decimal" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-758">Der Wert, der in einen <see cref="T:System.Decimal" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-758">The value to convert to a <see cref="T:System.Decimal" />.</span></span></param>
        <summary><span data-ttu-id="21642-759">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen <see cref="T:System.Decimal" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-759">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Decimal" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-760">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-760">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-761">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-761">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-762">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-762">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-763">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CDec` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-763">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDec` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="21642-764">Da durch diesen Vorgang eine einschränkende Konvertierung definiert wird, kann eine zur Laufzeit ausgelöst werden, <xref:System.OverflowException> Wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Decimal> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-764">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span> 

## Examples
 <span data-ttu-id="21642-765">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.Decimal> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-765">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Decimal> values.</span></span> <span data-ttu-id="21642-766">Außerdem wird eine behandelt <xref:System.OverflowException> , die ausgelöst wird, da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Decimal> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-766">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Decimal> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Explicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-767"><paramref name="value" /> ist kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="21642-767"><paramref name="value" /> is less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator double (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Double" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator double(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; double" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-768">Der Wert, der in einen <see cref="T:System.Double" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-768">The value to convert to a <see cref="T:System.Double" />.</span></span></param>
        <summary><span data-ttu-id="21642-769">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen <see cref="T:System.Double" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-769">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a <see cref="T:System.Double" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-770">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-770">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-771">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-771">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-772">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-772">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-773">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CDbl` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-773">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CDbl` in Visual Basic) is used.</span></span>   

 <span data-ttu-id="21642-774">Da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Double> Datentyps liegen kann, ist dieser Vorgang eine einschränkende Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="21642-774">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Double> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="21642-775">Wenn die Konvertierung nicht erfolgreich ist, wird keine ausgelöst <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-775">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-776">Stattdessen <xref:System.Numerics.BigInteger> <xref:System.Double.MinValue?displayProperty=nameWithType> ist der resultierende Wert, wenn der Wert kleiner als ist <xref:System.Double> <xref:System.Double.NegativeInfinity?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-776">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Double.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-777">Wenn der <xref:System.Numerics.BigInteger> Wert größer als ist <xref:System.Double.MaxValue?displayProperty=nameWithType> , lautet der resultierende <xref:System.Double> Wert <xref:System.Double.PositiveInfinity?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-777">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Double.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Double> value is <xref:System.Double.PositiveInfinity?displayProperty=nameWithType>.</span></span>
 
 <span data-ttu-id="21642-778">Die Konvertierung eines <xref:System.Numerics.BigInteger> in einen <xref:System.Double> kann zu einem Genauigkeits Verlust führen.</span><span class="sxs-lookup"><span data-stu-id="21642-778">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Double> may involve a loss of precision.</span></span> <span data-ttu-id="21642-779">In einigen Fällen kann der Verlust der Genauigkeit bewirken, dass der Umwandlungs-oder Konvertierungs Vorgang erfolgreich ist, auch wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Double> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-779">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Double> data type.</span></span> <span data-ttu-id="21642-780">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-780">The following example provides an illustration.</span></span> <span data-ttu-id="21642-781">Er weist zwei Variablen den maximalen Wert von <xref:System.Double> zu <xref:System.Numerics.BigInteger> , erhöht eine <xref:System.Numerics.BigInteger> Variable um 9.999 e291 und testet die beiden Variablen auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="21642-781">It assigns the maximum value of a <xref:System.Double> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="21642-782">Erwartungsgemäß zeigt der Aufrufe der- <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> Methode, dass Sie ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-782">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="21642-783">Die Konvertierung des größeren <xref:System.Numerics.BigInteger> Werts in eine <xref:System.Double> ist jedoch erfolgreich, obwohl der <xref:System.Numerics.BigInteger> Wert jetzt überschreitet <xref:System.Double.MaxValue?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-783">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Double> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Double.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#4)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#4)]   



## Examples
 <span data-ttu-id="21642-784">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.Double> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-784">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Double> values.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator short (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator short(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-785">Der Wert, der in eine 16-Bit-Ganzzahl mit Vorzeichen konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-785">The value to convert to a 16-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="21642-786">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-786">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 16-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="21642-787">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-787">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-788">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-788">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-789">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-789">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-790">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CShort` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-790">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CShort` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-791">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-791">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="21642-792">Da durch diesen Vorgang eine einschränkende Konvertierung definiert wird, kann eine zur Laufzeit ausgelöst werden, <xref:System.OverflowException> Wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Int16> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-792">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span> <span data-ttu-id="21642-793">Wenn die Konvertierung erfolgreich ist, gibt es im resultierenden Wert keinen Genauigkeits Verlust <xref:System.Int16> .</span><span class="sxs-lookup"><span data-stu-id="21642-793">There is no loss of precision in the resulting <xref:System.Int16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="21642-794">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.Int16> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-794">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int16> values.</span></span> <span data-ttu-id="21642-795">Außerdem wird eine behandelt <xref:System.OverflowException> , die ausgelöst wird, da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Int16> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-795">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#4)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-796"><paramref name="value" /> ist kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="21642-796"><paramref name="value" /> is less than <see cref="F:System.Int16.MinValue" /> or is greater than <see cref="F:System.Int16.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator int (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator int(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-797">Der Wert, der in eine 32-Bit-Ganzzahl mit Vorzeichen konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-797">The value to convert to a 32-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="21642-798">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-798">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 32-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="21642-799">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-799">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-800">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-800">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-801">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-801">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-802">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CInt` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-802">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CInt` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-803">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-803">Otherwise, they display a compiler error.</span></span>   

 <span data-ttu-id="21642-804">Da durch diesen Vorgang eine einschränkende Konvertierung definiert wird, kann eine zur Laufzeit ausgelöst werden, <xref:System.OverflowException> Wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Int32> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-804">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span> <span data-ttu-id="21642-805">Wenn die Konvertierung erfolgreich ist, gibt es im resultierenden Wert keinen Genauigkeits Verlust <xref:System.Int32> .</span><span class="sxs-lookup"><span data-stu-id="21642-805">There is no loss of precision in the resulting <xref:System.Int32> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="21642-806">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.Int32> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-806">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int32> values.</span></span> <span data-ttu-id="21642-807">Außerdem wird eine behandelt <xref:System.OverflowException> , die ausgelöst wird, da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Int32> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-807">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#5)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-808"><paramref name="value" /> ist kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="21642-808"><paramref name="value" /> is less than <see cref="F:System.Int32.MinValue" /> or is greater than <see cref="F:System.Int32.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator long (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Int64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator long(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; int64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-809">Der Wert, der in eine 64-Bit-Ganzzahl mit Vorzeichen konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-809">The value to convert to a 64-bit signed integer.</span></span></param>
        <summary><span data-ttu-id="21642-810">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-810">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="21642-811">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-811">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-812">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-812">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-813">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-813">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-814">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CLng` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-814">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CLng` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-815">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-815">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="21642-816">Da durch diesen Vorgang eine einschränkende Konvertierung definiert wird, kann eine zur Laufzeit ausgelöst werden, <xref:System.OverflowException> Wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Int64> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-816">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span> 

## Examples
 <span data-ttu-id="21642-817">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.Int64> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-817">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Int64> values.</span></span> <span data-ttu-id="21642-818">Außerdem wird eine behandelt <xref:System.OverflowException> , die ausgelöst wird, da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Int64> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-818">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Int64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#6)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-819"><paramref name="value" /> ist kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="21642-819"><paramref name="value" /> is less than <see cref="F:System.Int64.MinValue" /> or is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator sbyte (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int8 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.SByte" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::SByte(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; sbyte" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-820">Der Wert, der in einen 8-Bit-Wert mit Vorzeichen konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-820">The value to convert to a signed 8-bit value.</span></span></param>
        <summary><span data-ttu-id="21642-821">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen 8-Bit-Wert mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-821">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a signed 8-bit value.</span></span>  
  
<span data-ttu-id="21642-822">Diese API ist nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="21642-822">This API is not CLS-compliant.</span></span> <span data-ttu-id="21642-823">Die kompatible Alternative ist <see cref="T:System.Int16" />.</span><span class="sxs-lookup"><span data-stu-id="21642-823">The compliant alternative is <see cref="T:System.Int16" />.</span></span></summary>
        <returns><span data-ttu-id="21642-824">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-824">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-825">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-825">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-826">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-826">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-827">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CSByte` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-827">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSByte` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-828">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-828">Otherwise, they display a compiler error.</span></span>  

 <span data-ttu-id="21642-829">Da durch diesen Vorgang eine einschränkende Konvertierung definiert wird, kann eine zur Laufzeit ausgelöst werden, <xref:System.OverflowException> Wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.SByte> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-829">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span> <span data-ttu-id="21642-830">Wenn die Konvertierung erfolgreich ist, gibt es im resultierenden Wert keinen Genauigkeits Verlust <xref:System.SByte> .</span><span class="sxs-lookup"><span data-stu-id="21642-830">There is no loss of precision in the resulting <xref:System.SByte> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="21642-831">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.SByte> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-831">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.SByte> values.</span></span> <span data-ttu-id="21642-832">Außerdem wird eine behandelt <xref:System.OverflowException> , die ausgelöst wird, da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.SByte> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-832">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.SByte> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#7)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-833"><paramref name="value" /> ist kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="21642-833"><paramref name="value" /> is less than <see cref="F:System.SByte.MinValue" /> or is greater than <see cref="F:System.SByte.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int16" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator float (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname float32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.Single" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator float(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; single" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-834">Der Wert, der in einen Gleitkommawert mit einfacher Genauigkeit konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-834">The value to convert to a single-precision floating-point value.</span></span></param>
        <summary><span data-ttu-id="21642-835">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in einen Gleitkommawert mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="21642-835">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to a single-precision floating-point value.</span></span></summary>
        <returns><span data-ttu-id="21642-836">Ein Objekt, das die nächstmögliche Darstellung des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-836">An object that contains the closest possible representation of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-837">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-837">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-838">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten oder einem Genauigkeits Verlust kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-838">Language compilers do not perform this conversion automatically because it can involve data loss or a loss of precision.</span></span> <span data-ttu-id="21642-839">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CSng` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-839">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CSng` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-840">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-840">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="21642-841">Da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Single> Datentyps liegen kann, ist dieser Vorgang eine einschränkende Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="21642-841">Because the <xref:System.Numerics.BigInteger> value can be outside the range of the <xref:System.Single> data type, this operation is a narrowing conversion.</span></span> <span data-ttu-id="21642-842">Wenn die Konvertierung nicht erfolgreich ist, wird keine ausgelöst <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-842">If the conversion is unsuccessful, it does not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-843">Stattdessen <xref:System.Numerics.BigInteger> <xref:System.Single.MinValue?displayProperty=nameWithType> ist der resultierende Wert, wenn der Wert kleiner als ist <xref:System.Single> <xref:System.Single.NegativeInfinity?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-843">Instead, if the <xref:System.Numerics.BigInteger> value is less than <xref:System.Single.MinValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.NegativeInfinity?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-844">Wenn der <xref:System.Numerics.BigInteger> Wert größer als ist <xref:System.Single.MaxValue?displayProperty=nameWithType> , lautet der resultierende <xref:System.Single> Wert <xref:System.Single.PositiveInfinity?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-844">If the <xref:System.Numerics.BigInteger> value is greater than <xref:System.Single.MaxValue?displayProperty=nameWithType>, the resulting <xref:System.Single> value is <xref:System.Single.PositiveInfinity?displayProperty=nameWithType>.</span></span>

 <span data-ttu-id="21642-845">Die Konvertierung eines <xref:System.Numerics.BigInteger> in einen <xref:System.Single> kann zu einem Genauigkeits Verlust führen.</span><span class="sxs-lookup"><span data-stu-id="21642-845">The conversion of a <xref:System.Numerics.BigInteger> to a <xref:System.Single> may involve a loss of precision.</span></span> <span data-ttu-id="21642-846">In einigen Fällen kann der Verlust der Genauigkeit bewirken, dass der Umwandlungs-oder Konvertierungs Vorgang erfolgreich ist, auch wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.Single> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-846">In some cases, the loss of precision may cause the casting or conversion operation to succeed even if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.Single> data type.</span></span> <span data-ttu-id="21642-847">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-847">The following example provides an illustration.</span></span> <span data-ttu-id="21642-848">Er weist zwei Variablen den maximalen Wert von <xref:System.Single> zu <xref:System.Numerics.BigInteger> , erhöht eine <xref:System.Numerics.BigInteger> Variable um 9.999 e291 und testet die beiden Variablen auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="21642-848">It assigns the maximum value of a <xref:System.Single> to two <xref:System.Numerics.BigInteger> variables, increments one <xref:System.Numerics.BigInteger> variable by 9.999e291, and tests the two variables for equality.</span></span> <span data-ttu-id="21642-849">Erwartungsgemäß zeigt der Aufrufe der- <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> Methode, dass Sie ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-849">As expected, the call to the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method shows that they are unequal.</span></span> <span data-ttu-id="21642-850">Die Konvertierung des größeren <xref:System.Numerics.BigInteger> Werts in eine <xref:System.Single> ist jedoch erfolgreich, obwohl der <xref:System.Numerics.BigInteger> Wert jetzt überschreitet <xref:System.Single.MaxValue?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-850">However, the conversion of the larger <xref:System.Numerics.BigInteger> value back to a <xref:System.Single> succeeds, although the <xref:System.Numerics.BigInteger> value now exceeds <xref:System.Single.MaxValue?displayProperty=nameWithType>.</span></span>   
    
 [!code-csharp[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#5)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#5)]   



## Examples
 <span data-ttu-id="21642-851">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.Single> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-851">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.Single> values.</span></span>   
     
 [!code-csharp[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#8)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ushort (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int16 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt16" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt16(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint16" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-852">Der Wert, der in eine 16-Bit-Ganzzahl ohne Vorzeichen konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-852">The value to convert to an unsigned 16-bit integer.</span></span></param>
        <summary><span data-ttu-id="21642-853">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-853">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 16-bit integer value.</span></span>  
  
<span data-ttu-id="21642-854">Diese API ist nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="21642-854">This API is not CLS-compliant.</span></span> <span data-ttu-id="21642-855">Die kompatible Alternative ist <see cref="T:System.Int32" />.</span><span class="sxs-lookup"><span data-stu-id="21642-855">The compliant alternative is <see cref="T:System.Int32" />.</span></span></summary>
        <returns><span data-ttu-id="21642-856">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-856">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-857">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-857">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-858">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-858">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-859">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CUShort` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-859">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUShort` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-860">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-860">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="21642-861">Da durch diesen Vorgang eine einschränkende Konvertierung definiert wird, kann eine zur Laufzeit ausgelöst werden, <xref:System.OverflowException> Wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.UInt16> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-861">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span> <span data-ttu-id="21642-862">Wenn die Konvertierung erfolgreich ist, gibt es im resultierenden Wert keinen Genauigkeits Verlust <xref:System.UInt16> .</span><span class="sxs-lookup"><span data-stu-id="21642-862">There is no loss of precision in the resulting <xref:System.UInt16> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="21642-863">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.UInt16> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-863">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt16> values.</span></span> <span data-ttu-id="21642-864">Außerdem wird eine behandelt <xref:System.OverflowException> , die ausgelöst wird, da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.UInt16> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-864">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt16> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#9)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#9)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-865"><paramref name="value" /> ist kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="21642-865"><paramref name="value" /> is less than <see cref="F:System.UInt16.MinValue" /> or is greater than <see cref="F:System.UInt16.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator uint (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int32 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt32" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt32(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint32" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-866">Der Wert, der in eine 32-Bit-Ganzzahl ohne Vorzeichen konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-866">The value to convert to an unsigned 32-bit integer.</span></span></param>
        <summary><span data-ttu-id="21642-867">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-867">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 32-bit integer value.</span></span>  
  
<span data-ttu-id="21642-868">Diese API ist nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="21642-868">This API is not CLS-compliant.</span></span> <span data-ttu-id="21642-869">Die kompatible Alternative ist <see cref="T:System.Int64" />.</span><span class="sxs-lookup"><span data-stu-id="21642-869">The compliant alternative is <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="21642-870">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-870">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-871">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-871">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-872">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-872">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-873">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CUInt` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-873">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CUInt` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-874">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-874">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="21642-875">Da durch diesen Vorgang eine einschränkende Konvertierung definiert wird, kann eine zur Laufzeit ausgelöst werden, <xref:System.OverflowException> Wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.UInt32> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-875">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span> <span data-ttu-id="21642-876">Wenn die Konvertierung erfolgreich ist, gibt es im resultierenden Wert keinen Genauigkeits Verlust <xref:System.UInt32> .</span><span class="sxs-lookup"><span data-stu-id="21642-876">There is no loss of precision in the resulting <xref:System.UInt32> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="21642-877">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.UInt32> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-877">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt32> values.</span></span> <span data-ttu-id="21642-878">Außerdem wird eine behandelt <xref:System.OverflowException> , die ausgelöst wird, da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.UInt32> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-878">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt32> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#10)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#10)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-879"><paramref name="value" /> ist kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="21642-879"><paramref name="value" /> is less than <see cref="F:System.UInt32.MinValue" /> or is greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Int64" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator ulong (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname unsigned int64 op_Explicit(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Numerics.BigInteger)~System.UInt64" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As BigInteger) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::UInt64(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Numerics.BigInteger -&gt; uint64" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-880">Der Wert, der in eine 64-Bit-Ganzzahl ohne Vorzeichen konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-880">The value to convert to an unsigned 64-bit integer.</span></span></param>
        <summary><span data-ttu-id="21642-881">Definiert eine explizite Konvertierung eines <see cref="T:System.Numerics.BigInteger" />-Objekts in den Wert einer 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-881">Defines an explicit conversion of a <see cref="T:System.Numerics.BigInteger" /> object to an unsigned 64-bit integer value.</span></span>  
  
<span data-ttu-id="21642-882">Diese API ist nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="21642-882">This API is not CLS-compliant.</span></span> <span data-ttu-id="21642-883">Die kompatible Alternative ist <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="21642-883">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="21642-884">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-884">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-885">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-885">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-886">Sprach Compiler führen diese Konvertierung nicht automatisch aus, da es zu Datenverlusten kommen kann.</span><span class="sxs-lookup"><span data-stu-id="21642-886">Language compilers do not perform this conversion automatically because it can involve data loss.</span></span> <span data-ttu-id="21642-887">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z `CType` `CULng` . b. oder in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-887">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` or `CULng` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-888">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-888">Otherwise, they display a compiler error.</span></span>    

 <span data-ttu-id="21642-889">Da durch diesen Vorgang eine einschränkende Konvertierung definiert wird, kann eine zur Laufzeit ausgelöst werden, <xref:System.OverflowException> Wenn der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.UInt64> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-889">Because this operation defines a narrowing conversion, it can throw an <xref:System.OverflowException> at run time if the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span> <span data-ttu-id="21642-890">Wenn die Konvertierung erfolgreich ist, gibt es im resultierenden Wert keinen Genauigkeits Verlust <xref:System.UInt64> .</span><span class="sxs-lookup"><span data-stu-id="21642-890">There is no loss of precision in the resulting <xref:System.UInt64> value if the conversion is successful.</span></span>

## Examples
 <span data-ttu-id="21642-891">Im folgenden Beispiel wird die Konvertierung von <xref:System.Numerics.BigInteger> in- <xref:System.UInt64> Werte veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-891">The following example illustrates the conversion of <xref:System.Numerics.BigInteger> to <xref:System.UInt64> values.</span></span> <span data-ttu-id="21642-892">Außerdem wird eine behandelt <xref:System.OverflowException> , die ausgelöst wird, da der <xref:System.Numerics.BigInteger> Wert außerhalb des Bereichs des <xref:System.UInt64> Datentyps liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-892">It also handles an <xref:System.OverflowException> that is thrown because the <xref:System.Numerics.BigInteger> value is outside the range of the <xref:System.UInt64> data type.</span></span>   
    
 [!code-csharp[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/cs/System.Numeric.BigInteger.Explicit.cs#11)]   
 [!code-vb[System.Numeric.BigInteger.Explicit#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Explicit/vb/System.Numeric.BigInteger.Explicit.vb#11)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-893"><paramref name="value" /> ist kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="21642-893"><paramref name="value" /> is less than <see cref="F:System.UInt64.MinValue" /> or is greater than <see cref="F:System.UInt64.MaxValue" />.</span></span></exception>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator System.Numerics.BigInteger (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Explicit(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Explicit(System.Single)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As Single) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator System::Numerics::BigInteger(float value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : single -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-894">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-894">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-895">Definiert eine explizite Konvertierung eines <see cref="T:System.Single" />-Werts in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-895">Defines an explicit conversion of a <see cref="T:System.Single" /> value to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-896">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-896">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-897">Alle Bruchteile des- `value` Parameters werden vor der Konvertierung abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="21642-897">Any fractional part of the `value` parameter is truncated before conversion.</span></span>
 
 <span data-ttu-id="21642-898">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> Methode definieren die Typen, in die bzw. aus denen ein- <xref:System.Numerics.BigInteger> Objekt konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-898">The overloads of the <xref:System.Numerics.BigInteger.op_Explicit(System.Decimal)~System.Numerics.BigInteger> method define the types to which or from which a <xref:System.Numerics.BigInteger> object can be converted.</span></span> <span data-ttu-id="21642-899">Da bei der Konvertierung von <xref:System.Single> in <xref:System.Numerics.BigInteger> alle Bruchteile von abgeschnitten `value` werden können, wird diese Konvertierung von sprach Compilern nicht automatisch durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="21642-899">Because the conversion from <xref:System.Single> to <xref:System.Numerics.BigInteger> can involve truncating any fractional part of `value`, language compilers do not perform this conversion automatically.</span></span> <span data-ttu-id="21642-900">Stattdessen wird die Konvertierung nur dann durchgeführt, wenn ein Umwandlungs Operator (in c#) oder eine Konvertierungs Funktion (z. b. `CType` in Visual Basic) verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-900">Instead, they perform the conversion only if a casting operator (in C#) or a conversion function (such as `CType` in Visual Basic) is used.</span></span> <span data-ttu-id="21642-901">Andernfalls wird ein Compilerfehler angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-901">Otherwise, they display a compiler error.</span></span>

 <span data-ttu-id="21642-902">Für Sprachen, die keine benutzerdefinierten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-902">For languages that do not support custom operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Single%29?displayProperty=nameWithType>.</span></span>


## Examples
 <span data-ttu-id="21642-903">Im folgenden Beispiel werden die einzelnen Elemente in einem Array von- <xref:System.Single> Werten in <xref:System.Numerics.BigInteger> -Objekte konvertiert. Anschließend wird das Ergebnis der einzelnen Konvertierungen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-903">The following example converts the individual elements in an array of <xref:System.Single> values to <xref:System.Numerics.BigInteger> objects, and then displays the result of each conversion.</span></span> <span data-ttu-id="21642-904">Beachten Sie, dass alle Bruchteile eines <xref:System.Single> Werts während der Konvertierung abgeschnitten werden.</span><span class="sxs-lookup"><span data-stu-id="21642-904">Note that any fractional part of a <xref:System.Single> value is truncated during the conversion.</span></span>
 
 [!code-csharp[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/cs/Explicit1.cs#3)]   
 [!code-vb[System.Numerics.BigInteger.Explicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Explicit/vb/Explicit1.vb#3)]   

 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-905"><paramref name="value" /> ist <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" /> oder <see cref="F:System.Single.NegativeInfinity" />.</span><span class="sxs-lookup"><span data-stu-id="21642-905"><paramref name="value" /> is <see cref="F:System.Single.NaN" />, <see cref="F:System.Single.PositiveInfinity" />, or <see cref="F:System.Single.NegativeInfinity" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-906">Gibt einen Wert zurück, der angibt, ob ein angegebener Wert größer als ein anderer angegebener Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-906">Returns a value that indicates whether a specified value is greater than another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-907">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-907">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-908">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-908">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-909">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen größer als ein <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-909">Returns a value that indicates whether a 64-bit signed integer is greater than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-910"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-910"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-911">Die- <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert den Vorgang des größer-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-911">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-912">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-912">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#9)]
 [!code-vb[System.Numerics.BigInteger.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#9)]  
  
 <span data-ttu-id="21642-913">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> stattdessen die Instanzmethode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="21642-913">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method instead.</span></span> <span data-ttu-id="21642-914">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-914">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#10)]  
  
 <span data-ttu-id="21642-915">Wenn ein-,-,-,-,- `left` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-915">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-916">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-916">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-917">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-917">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-918">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-918">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-919">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" /> größer als der Wert einer 64-Bit-Ganzzahl mit Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-919">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> is greater than a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="21642-920"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-920"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-921">Die- <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert den Vorgang des größer-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-921">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-922">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-922">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#11)]
 [!code-vb[System.Numerics.BigInteger.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#11)]  
  
 <span data-ttu-id="21642-923">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-923">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-924">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-924">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#12)]  
  
 <span data-ttu-id="21642-925">Wenn ein-,-,-,-,- `right` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-925">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-926">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-926">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-927">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-927">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-928">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-928">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-929">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als ein anderer <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-929">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-930"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-930"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-931">Die- <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert den Vorgang des größer-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-931">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-932">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-932">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#20)]
 [!code-vb[System.Numeric.BigInteger.Class#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#20)]  
  
 <span data-ttu-id="21642-933">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-933">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-934">Sie können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-934">They can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#21)]  
  
 <span data-ttu-id="21642-935">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-935">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-936">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-936">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-937">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-937">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-938">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als eine 64-Bit-Ganzzahl ohne Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-938">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="21642-939"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-939"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-940">Die- <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert den Vorgang des größer-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-940">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-941">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-941">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#13)]
 [!code-vb[System.Numerics.BigInteger.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#13)]  
  
 <span data-ttu-id="21642-942">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-942">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-943">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-943">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-944">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-944">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-945">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-945">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-946">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als eine 64-Bit-Ganzzahl ohne Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-946">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="21642-947"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-947"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-948">Die- <xref:System.Numerics.BigInteger.op_GreaterThan%2A> Methode definiert den Vorgang des größer-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-948">The <xref:System.Numerics.BigInteger.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-949">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-949">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#15)]
 [!code-vb[System.Numerics.BigInteger.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#15)]  
  
 <span data-ttu-id="21642-950">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-950">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-951">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-951">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_GreaterThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-952">Gibt einen Wert zurück, der angibt, ob ein angegebener Wert größer oder gleich einem anderen angegebenen Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-952">Returns a value that indicates whether a specified value is greater than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-953">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-953">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-954">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-954">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-955">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen größer als ein oder gleich einem <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-955">Returns a value that indicates whether a 64-bit signed integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-956"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-956"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-957">Die- <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert den Vorgang des Operators "größer als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-957">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-958">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-958">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#17)]
 [!code-vb[System.Numerics.BigInteger.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#17)]  
  
 <span data-ttu-id="21642-959">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-959">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-960">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-960">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#18)]  
  
 <span data-ttu-id="21642-961">Wenn ein-,-,-,-,- `left` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-961">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-962">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-962">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-963">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-963">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-964">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-964">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-965">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als der oder gleich dem Wert einer 64-Bit-Ganzzahl mit Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-965">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit signed integer value.</span></span></summary>
        <returns><span data-ttu-id="21642-966"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-966"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-967">Die- <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert den Vorgang des Operators "größer als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-967">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-968">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-968">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#19)]
 [!code-vb[System.Numerics.BigInteger.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#19)]  
  
 <span data-ttu-id="21642-969">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-969">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-970">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-970">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#20)]  
  
 <span data-ttu-id="21642-971">Wenn ein-,-,-,-,- `right` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-971">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-972">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-972">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-973">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-973">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-974">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-974">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-975">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer oder gleich einem anderen <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-975">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-976"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-976"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-977">Die- <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert den Vorgang des Operators "größer als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-977">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-978">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-978">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#22)]
 [!code-vb[System.Numeric.BigInteger.Class#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#22)]  
  
 <span data-ttu-id="21642-979">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-979">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-980">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-980">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#23)]  
  
 <span data-ttu-id="21642-981">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-981">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo(System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-982">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-982">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-983">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-983">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-984">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert größer als der oder gleich dem Wert einer 64-Bit-Ganzzahl ohne Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-984">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is greater than or equal to a 64-bit unsigned integer value.</span></span></summary>
        <returns><span data-ttu-id="21642-985"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-985"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-986">Die- <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert den Vorgang des Operators "größer als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-986">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-987">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-987">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#21)]
 [!code-vb[System.Numerics.BigInteger.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#21)]  
  
 <span data-ttu-id="21642-988">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-988">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-989">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-989">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#22)]  
  
 <span data-ttu-id="21642-990">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-990">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_GreaterThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &gt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-991">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-991">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-992">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-992">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-993">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen größer als ein oder gleich einem <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-993">Returns a value that indicates whether a 64-bit unsigned integer is greater than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-994"><see langword="true" />, wenn <paramref name="left" /> größer als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-994"><see langword="true" /> if <paramref name="left" /> is greater than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-995">Die- <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> Methode definiert den Vorgang des Operators "größer als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-995">The <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-996">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-996">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#23)]
 [!code-vb[System.Numerics.BigInteger.Operators#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#23)]  
  
 <span data-ttu-id="21642-997">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-997">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-998">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-998">Some languages can also call the <xref:System.Numerics.BigInteger.op_GreaterThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#24)]  
  
 <span data-ttu-id="21642-999">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-999">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_GreaterThan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-1000">Definiert eine implizite Konvertierung zwischen einem <see cref="T:System.Numerics.BigInteger" />-Objekt und einem anderen Typ.</span><span class="sxs-lookup"><span data-stu-id="21642-1000">Defines an implicit conversion between a <see cref="T:System.Numerics.BigInteger" /> object and another type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Byte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : byte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1001">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1001">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-1002">Definiert eine implizite Konvertierung eines Bytewerts ohne Vorzeichen in ein <see cref="T:System.Numerics.BigInteger" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="21642-1002">Defines an implicit conversion of an unsigned byte to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1003">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1003">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1004">Alle Bruchteile des- `value` Parameters werden vor der Konvertierung abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="21642-1004">Any fractional part of the `value` parameter is truncated before conversion.</span></span>

 <span data-ttu-id="21642-1005">Für Sprachen, die keine impliziten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1005">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="21642-1006">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen, für die ein Compiler einen <xref:System.Numerics.BigInteger> Wert automatisch ohne einen expliziten Umwandlungs Operator (in c#) oder einen-Konvertierungs Funktion (in Visual Basic) konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1006">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="21642-1007">Sie sind erweiternde Konvertierungen, die keinen Datenverlust verursachen und keine auslösen <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1007">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-1008">Diese Überladung ermöglicht es dem Compiler, Konvertierungen von einem- <xref:System.Byte> Wert in einen-Wert zu behandeln <xref:System.Numerics.BigInteger> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1008">This overload lets the compiler handle conversions from a <xref:System.Byte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#1)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#1)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Short) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(short value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1009">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1009">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-1010">Definiert eine implizite Konvertierung einer 16-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1010">Defines an implicit conversion of a signed 16-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1011">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1011">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1012">Für Sprachen, die keine impliziten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1012">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="21642-1013">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen, für die ein Compiler einen <xref:System.Numerics.BigInteger> Wert automatisch ohne einen expliziten Umwandlungs Operator (in c#) oder einen-Konvertierungs Funktion (in Visual Basic) konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1013">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="21642-1014">Sie sind erweiternde Konvertierungen, die keinen Datenverlust verursachen und keine auslösen <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1014">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-1015">Diese Überladung ermöglicht es dem Compiler, Konvertierungen von einem- <xref:System.Int16> Wert in einen-Wert zu behandeln <xref:System.Numerics.BigInteger> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1015">This overload lets the compiler handle conversions from a <xref:System.Int16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#2)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#2)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(int value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1016">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1016">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-1017">Definiert eine implizite Konvertierung einer 32-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1017">Defines an implicit conversion of a signed 32-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1018">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1018">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1019">Für Sprachen, die keine impliziten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1019">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>  

 <span data-ttu-id="21642-1020">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen, für die ein Compiler einen <xref:System.Numerics.BigInteger> Wert automatisch ohne einen expliziten Umwandlungs Operator (in c#) oder einen-Konvertierungs Funktion (in Visual Basic) konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1020">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="21642-1021">Sie sind erweiternde Konvertierungen, die keinen Datenverlust verursachen und keine auslösen <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1021">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-1022">Diese Überladung ermöglicht es dem Compiler, Konvertierungen von einem- <xref:System.Int32> Wert in einen-Wert zu behandeln <xref:System.Numerics.BigInteger> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1022">This overload lets the compiler handle conversions from a <xref:System.Int32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#3)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#3)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Long) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(long value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : int64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1023">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1023">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-1024">Definiert eine implizite Konvertierung einer 64-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1024">Defines an implicit conversion of a signed 64-bit integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1025">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1025">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1026">Für Sprachen, die keine impliziten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1026">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int64%29?displayProperty=nameWithType>.</span></span>   
 
 <span data-ttu-id="21642-1027">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen, für die ein Compiler einen <xref:System.Numerics.BigInteger> Wert automatisch ohne einen expliziten Umwandlungs Operator (in c#) oder einen-Konvertierungs Funktion (in Visual Basic) konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1027">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="21642-1028">Sie sind erweiternde Konvertierungen, die keinen Datenverlust verursachen und keine auslösen <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1028">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-1029">Diese Überladung ermöglicht es dem Compiler, Konvertierungen von einem- <xref:System.Int64> Wert in einen-Wert zu behandeln <xref:System.Numerics.BigInteger> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1029">This overload lets the compiler handle conversions from a <xref:System.Int64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#4)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#4)]   

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.SByte)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As SByte) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : sbyte -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1030">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1030">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-1031">Definiert eine implizite Konvertierung einer 8-Bit-Ganzzahl mit Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1031">Defines an implicit conversion of an 8-bit signed integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="21642-1032">Diese API ist nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="21642-1032">This API is not CLS-compliant.</span></span> <span data-ttu-id="21642-1033">Die kompatible Alternative ist <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1033">The compliant alternative is <see cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />.</span></span></summary>
        <returns><span data-ttu-id="21642-1034">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1034">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1035">Für Sprachen, die keine impliziten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1035">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.Int32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="21642-1036">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen, für die ein Compiler einen <xref:System.Numerics.BigInteger> Wert automatisch ohne einen expliziten Umwandlungs Operator (in c#) oder einen-Konvertierungs Funktion (in Visual Basic) konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1036">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="21642-1037">Sie sind erweiternde Konvertierungen, die keinen Datenverlust verursachen und keine auslösen <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1037">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-1038">Diese Überladung ermöglicht es dem Compiler, Konvertierungen von einem- <xref:System.SByte> Wert in einen-Wert zu behandeln <xref:System.Numerics.BigInteger> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1038">This overload lets the compiler handle conversions from a <xref:System.SByte> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#5)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#5)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.#ctor(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt16)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UShort) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint16 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1039">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1039">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-1040">Definiert eine implizite Konvertierung einer 16-Bit-Ganzzahl ohne Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1040">Defines an implicit conversion of a 16-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="21642-1041">Diese API ist nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="21642-1041">This API is not CLS-compliant.</span></span> <span data-ttu-id="21642-1042">Die kompatible Alternative ist <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1042">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="21642-1043">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1043">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1044">Für Sprachen, die keine impliziten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1044">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="21642-1045">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen, für die ein Compiler einen <xref:System.Numerics.BigInteger> Wert automatisch ohne einen expliziten Umwandlungs Operator (in c#) oder einen-Konvertierungs Funktion (in Visual Basic) konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1045">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="21642-1046">Sie sind erweiternde Konvertierungen, die keinen Datenverlust verursachen und keine auslösen <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1046">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-1047">Diese Überladung ermöglicht es dem Compiler, Konvertierungen von einem- <xref:System.UInt16> Wert in einen-Wert zu behandeln <xref:System.Numerics.BigInteger> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1047">This overload lets the compiler handle conversions from a <xref:System.UInt16> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#6)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#6)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int32)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt32)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As UInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint32 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1048">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1048">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-1049">Definiert eine implizite Konvertierung einer 32-Bit-Ganzzahl ohne Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1049">Defines an implicit conversion of a 32-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="21642-1050">Diese API ist nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="21642-1050">This API is not CLS-compliant.</span></span> <span data-ttu-id="21642-1051">Die kompatible Alternative ist <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1051">The compliant alternative is <see cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />.</span></span></summary>
        <returns><span data-ttu-id="21642-1052">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1052">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1053">Für Sprachen, die keine impliziten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1053">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt32%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="21642-1054">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen, für die ein Compiler einen <xref:System.Numerics.BigInteger> Wert automatisch ohne einen expliziten Umwandlungs Operator (in c#) oder einen-Konvertierungs Funktion (in Visual Basic) konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1054">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="21642-1055">Sie sind erweiternde Konvertierungen, die keinen Datenverlust verursachen und keine auslösen <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1055">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-1056">Diese Überladung ermöglicht es dem Compiler, Konvertierungen von einem- <xref:System.UInt32> Wert in einen-Wert zu behandeln <xref:System.Numerics.BigInteger> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1056">This overload lets the compiler handle conversions from a <xref:System.UInt32> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#7)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#7)]   

 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Numerics.BigInteger.op_Implicit(System.Int64)~System.Numerics.BigInteger" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Numerics.BigInteger (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Implicit(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Implicit(System.UInt64)~System.Numerics.BigInteger" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As ULong) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Numerics::BigInteger(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : uint64 -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1057">Der Wert, der in einen <see cref="T:System.Numerics.BigInteger" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1057">The value to convert to a <see cref="T:System.Numerics.BigInteger" />.</span></span></param>
        <summary><span data-ttu-id="21642-1058">Definiert eine implizite Konvertierung einer 64-Bit-Ganzzahl ohne Vorzeichen in einen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1058">Defines an implicit conversion of a 64-bit unsigned integer to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span>  
  
<span data-ttu-id="21642-1059">Diese API ist nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="21642-1059">This API is not CLS-compliant.</span></span> <span data-ttu-id="21642-1060">Die kompatible Alternative ist <see cref="T:System.Double" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1060">The compliant alternative is <see cref="T:System.Double" />.</span></span></summary>
        <returns><span data-ttu-id="21642-1061">Ein Objekt, das den Wert des <paramref name="value" />-Parameters enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1061">An object that contains the value of the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1062">Für Sprachen, die keine impliziten Operatoren unterstützen, ist die alternative Methode <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1062">For languages that do not support implicit operators, the alternative method is <xref:System.Numerics.BigInteger.%23ctor%28System.UInt64%29?displayProperty=nameWithType>.</span></span>   

 <span data-ttu-id="21642-1063">Die über Ladungen der- <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> Methode definieren die Typen, für die ein Compiler einen <xref:System.Numerics.BigInteger> Wert automatisch ohne einen expliziten Umwandlungs Operator (in c#) oder einen-Konvertierungs Funktion (in Visual Basic) konvertieren kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1063">The overloads of the <xref:System.Numerics.BigInteger.op_Implicit(System.Byte)~System.Numerics.BigInteger> method define the types to which or from which a compiler can automatically convert a <xref:System.Numerics.BigInteger> value without an explicit casting operator (in C#) or a call to a conversion function (in Visual Basic).</span></span> <span data-ttu-id="21642-1064">Sie sind erweiternde Konvertierungen, die keinen Datenverlust verursachen und keine auslösen <xref:System.OverflowException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1064">They are widening conversions that do not involve data loss and do not throw an <xref:System.OverflowException>.</span></span> <span data-ttu-id="21642-1065">Diese Überladung ermöglicht es dem Compiler, Konvertierungen von einem- <xref:System.UInt64> Wert in einen-Wert zu behandeln <xref:System.Numerics.BigInteger> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1065">This overload lets the compiler handle conversions from a <xref:System.UInt64> value to a <xref:System.Numerics.BigInteger> value, as the following example shows.</span></span>   
   
 [!code-csharp[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/cs/Implicit1.cs#8)]   
 [!code-vb[System.Numeric.BigInteger.Implicit#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Implicit/vb/Implicit1.vb#8)]   

 ]]></format>
        </remarks>
        <altCompliant cref="T:System.Double" />
      </Docs>
    </Member>
    <Member MemberName="op_Increment">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ++ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Increment(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Increment(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared op_Increment (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ++(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_Increment : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_Increment value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1066">Der zu inkrementierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1066">The value to increment.</span></span></param>
        <summary><span data-ttu-id="21642-1067">Inkrementiert einen <see cref="T:System.Numerics.BigInteger" />-Wert um 1.</span><span class="sxs-lookup"><span data-stu-id="21642-1067">Increments a <see cref="T:System.Numerics.BigInteger" /> value by 1.</span></span></summary>
        <returns><span data-ttu-id="21642-1068">Der um 1 inkrementierte Wert des <paramref name="value" />-Parameters.</span><span class="sxs-lookup"><span data-stu-id="21642-1068">The value of the <paramref name="value" /> parameter incremented by 1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1069">Die- <xref:System.Numerics.BigInteger.op_Increment%2A> Methode definiert den Inkrement-Vorgang für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1069">The <xref:System.Numerics.BigInteger.op_Increment%2A> method defines the increment operation for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1070">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1070">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#24)]  
  
 <span data-ttu-id="21642-1071">Einige Sprachen (z. b. Visual Basic), die keinen Inkrementoperator oder Operator Überladung nicht unterstützen <xref:System.Numerics.BigInteger.op_Increment%2A> , können die Methode direkt aufzurufen, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1071">Some languages (such as Visual Basic) that lack an increment operator or do not support operator overloading can call the <xref:System.Numerics.BigInteger.op_Increment%2A> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#25)]  
  
 <span data-ttu-id="21642-1072">Da- <xref:System.Numerics.BigInteger> Objekte unveränderlich sind, erstellt der- <xref:System.Numerics.BigInteger.op_Increment%2A> Operator ein neues- <xref:System.Numerics.BigInteger> Objekt, dessen Wert eins mehr ist als das <xref:System.Numerics.BigInteger> durch dargestellte Objekt `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1072">Because <xref:System.Numerics.BigInteger> objects are immutable, the <xref:System.Numerics.BigInteger.op_Increment%2A> operator creates a new <xref:System.Numerics.BigInteger> object whose value is one more than the <xref:System.Numerics.BigInteger> object represented by `value`.</span></span> <span data-ttu-id="21642-1073">Daher können wiederholte Aufrufe von <xref:System.Numerics.BigInteger.op_Increment%2A> teuer sein.</span><span class="sxs-lookup"><span data-stu-id="21642-1073">Therefore, repeated calls to <xref:System.Numerics.BigInteger.op_Increment%2A> may be expensive.</span></span>  
  
 <span data-ttu-id="21642-1074">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1074">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Add%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Decrement(System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Inequality">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-1075">Gibt einen Wert zurück, der angibt, ob zwei numerische Werte ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-1075">Returns a value that indicates whether two numeric values are not equal.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : int64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1076">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1076">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1077">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1077">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1078">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen und ein <see cref="T:System.Numerics.BigInteger" />-Wert ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-1078">Returns a value that indicates whether a 64-bit signed integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="21642-1079"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1079"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1080">Die- <xref:System.Numerics.BigInteger.op_Inequality%2A> Methode definiert den Vorgang des Ungleichheits Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1080">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1081">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1081">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#25)]
 [!code-vb[System.Numerics.BigInteger.Operators#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#25)]  
  
 <span data-ttu-id="21642-1082">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können mit einem der folgenden Verfahren auf Ungleichheit testen:</span><span class="sxs-lookup"><span data-stu-id="21642-1082">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="21642-1083">Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> Instanzmethode, die die Beziehung zwischen einem <xref:System.Numerics.BigInteger> -Wert und dem Wert einer langen ganzen Zahl mit Vorzeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1083">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> instance method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="21642-1084">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> Instanzmethode und umkehren ihres Werts.</span><span class="sxs-lookup"><span data-stu-id="21642-1084">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> instance method and reversing its value.</span></span>  
  
 <span data-ttu-id="21642-1085">Wenn ein-,-,-,-,- `left` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1085">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * int64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1086">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1086">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1087">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1087">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1088">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert und eine 64-Bit-Ganzzahl mit Vorzeichen ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-1088">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit signed integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="21642-1089"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1089"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1090">Die- <xref:System.Numerics.BigInteger.op_Inequality%2A> Methode definiert den Vorgang des Ungleichheits Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1090">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1091">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1091">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#26)]
 [!code-vb[System.Numerics.BigInteger.Operators#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#26)]  
  
 <span data-ttu-id="21642-1092">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können mit einem der folgenden Verfahren auf Ungleichheit testen:</span><span class="sxs-lookup"><span data-stu-id="21642-1092">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="21642-1093">Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> -Methode, die die Beziehung zwischen einem <xref:System.Numerics.BigInteger> und einem Wert mit langer Ganzzahl mit Vorzeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1093">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and a signed long integer value.</span></span>  
  
-   <span data-ttu-id="21642-1094">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> -Methode und umkehren ihres Werts.</span><span class="sxs-lookup"><span data-stu-id="21642-1094">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Int64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="21642-1095">Wenn ein-,-,-,-,- `right` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1095">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-1096">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1096">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1097">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1097">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1098">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1098">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1099">Gibt einen Wert zurück, der angibt, ob zwei <see cref="T:System.Numerics.BigInteger" />-Objekte über unterschiedliche Werte verfügen.</span><span class="sxs-lookup"><span data-stu-id="21642-1099">Returns a value that indicates whether two <see cref="T:System.Numerics.BigInteger" /> objects have different values.</span></span></summary>
        <returns><span data-ttu-id="21642-1100"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1100"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1101">Die- <xref:System.Numerics.BigInteger.op_Inequality%2A> Methode definiert den Vorgang des Ungleichheits Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1101">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1102">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1102">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#26)]
 [!code-vb[System.Numeric.BigInteger.Class#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#26)]  
  
 <span data-ttu-id="21642-1103">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können mit einem der folgenden Verfahren auf Ungleichheit testen:</span><span class="sxs-lookup"><span data-stu-id="21642-1103">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="21642-1104">Aufrufen der- <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> Methode, die die Beziehung zwischen zwei- <xref:System.Numerics.BigInteger> Objekten angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1104">Calling the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method, which indicates the relationship between two <xref:System.Numerics.BigInteger> objects.</span></span>  
  
-   <span data-ttu-id="21642-1105">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> -Methode und umkehren ihres Werts.</span><span class="sxs-lookup"><span data-stu-id="21642-1105">Calling the <xref:System.Numerics.BigInteger.Equals%28System.Numerics.BigInteger%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 <span data-ttu-id="21642-1106">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1106">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1107">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1107">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1108">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1108">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1109">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert und eine 64-Bit-Ganzzahl ohne Vorzeichen ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-1109">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value and a 64-bit unsigned integer are not equal.</span></span></summary>
        <returns><span data-ttu-id="21642-1110"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1110"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1111">Die- <xref:System.Numerics.BigInteger.op_Inequality%2A> Methode definiert den Vorgang des Ungleichheits Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1111">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1112">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1112">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#27)]
 [!code-vb[System.Numerics.BigInteger.Operators#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#27)]  
  
 <span data-ttu-id="21642-1113">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können mit einem der folgenden Verfahren auf Ungleichheit testen:</span><span class="sxs-lookup"><span data-stu-id="21642-1113">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="21642-1114">Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> -Methode, die die Beziehung zwischen einem <xref:System.Numerics.BigInteger> -Wert und einem langen ganzzahligen Wert ohne Vorzeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1114">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="21642-1115">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> -Methode und umkehren ihres Werts.</span><span class="sxs-lookup"><span data-stu-id="21642-1115">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Inequality(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1116">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1116">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1117">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1117">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1118">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen und ein <see cref="T:System.Numerics.BigInteger" />-Wert ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="21642-1118">Returns a value that indicates whether a 64-bit unsigned integer and a <see cref="T:System.Numerics.BigInteger" /> value are not equal.</span></span></summary>
        <returns><span data-ttu-id="21642-1119"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1119"><see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1120">Die- <xref:System.Numerics.BigInteger.op_Inequality%2A> Methode definiert den Vorgang des Ungleichheits Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1120">The <xref:System.Numerics.BigInteger.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1121">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1121">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#28)]
 [!code-vb[System.Numerics.BigInteger.Operators#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#28)]  
  
 <span data-ttu-id="21642-1122">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können mit einem der folgenden Verfahren auf Ungleichheit testen:</span><span class="sxs-lookup"><span data-stu-id="21642-1122">Languages that do not support custom operators can test for inequality by using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="21642-1123">Aufrufen der <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> -Methode, die die Beziehung zwischen einem <xref:System.Numerics.BigInteger> -Wert und einem langen ganzzahligen Wert ohne Vorzeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1123">Calling the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method, which indicates the relationship between a <xref:System.Numerics.BigInteger> and an unsigned long integer value.</span></span>  
  
-   <span data-ttu-id="21642-1124">Aufrufen der <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> -Methode und umkehren ihres Werts.</span><span class="sxs-lookup"><span data-stu-id="21642-1124">Calling the <xref:System.Numerics.BigInteger.Equals%28System.UInt64%29?displayProperty=nameWithType> method and reversing its value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_Equality" />
      </Docs>
    </Member>
    <Member MemberName="op_LeftShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &lt;&lt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_LeftShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;&lt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &lt;&lt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &lt;&lt;&lt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &lt;&lt;&lt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1125">Der Wert, dessen Bits verschoben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="21642-1125">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="21642-1126">Die Anzahl der Bits, um die <paramref name="value" /> nach links verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1126">The number of bits to shift <paramref name="value" /> to the left.</span></span></param>
        <summary><span data-ttu-id="21642-1127">Verschiebt einen <see cref="T:System.Numerics.BigInteger" />-Wert um eine angegebene Anzahl von Bits nach links.</span><span class="sxs-lookup"><span data-stu-id="21642-1127">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the left.</span></span></summary>
        <returns><span data-ttu-id="21642-1128">Ein Wert, der um die angegebene Anzahl von Bits nach links verschoben wurde.</span><span class="sxs-lookup"><span data-stu-id="21642-1128">A value that has been shifted to the left by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1129">Die- <xref:System.Numerics.BigInteger.op_LeftShift%2A> Methode definiert den Vorgang des bitweisen Links Schiebe Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1129">The <xref:System.Numerics.BigInteger.op_LeftShift%2A> method defines the operation of the bitwise left-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1130">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1130">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#29)]
 [!code-vb[System.Numerics.BigInteger.Operators#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#29)]  
  
> [!NOTE]
>  <span data-ttu-id="21642-1131">Im Gegensatz zum bitweisen Left Shift-Vorgang mit ganzzahligen primitiven <xref:System.Numerics.BigInteger.op_LeftShift%2A> behält die Methode das Vorzeichen des ursprünglichen <xref:System.Numerics.BigInteger> Werts bei.</span><span class="sxs-lookup"><span data-stu-id="21642-1131">Unlike the bitwise left-shift operation with integer primitives, the <xref:System.Numerics.BigInteger.op_LeftShift%2A> method preserves the sign of the original <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="21642-1132">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können einen bitweisen Left Shift-Vorgang ausführen, indem Sie mit multiplizieren `value` `BigInteger.Pow(2, shift)` .</span><span class="sxs-lookup"><span data-stu-id="21642-1132">Languages that do not support custom operators can perform a bitwise left-shift operation by multiplying `value` by `BigInteger.Pow(2, shift)`.</span></span> <span data-ttu-id="21642-1133">Das folgende Beispiel zeigt, dass die Ergebnisse mit den Ergebnissen der Verwendung dieses Operators identisch sind.</span><span class="sxs-lookup"><span data-stu-id="21642-1133">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#30)]
 [!code-vb[System.Numerics.BigInteger.Operators#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#30)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThan">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-1134">Gibt einen Wert zurück, der angibt, ob ein angegebener Wert kleiner als ein zweiter angegebener Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1134">Returns a value that indicates whether a specified value is less than a second specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1135">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1135">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1136">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1136">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1137">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen kleiner als ein <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1137">Returns a value that indicates whether a 64-bit signed integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1138"><see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1138"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1139">Die- <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert den Vorgang des kleiner-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1139">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1140">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1140">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#31)]
 [!code-vb[System.Numerics.BigInteger.Operators#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#31)]  
  
 <span data-ttu-id="21642-1141">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1141">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-1142">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1142">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#32)]  
  
 <span data-ttu-id="21642-1143">Wenn ein-,-,-,-,- `left` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1143">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-1144">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1144">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1145">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1145">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1146">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1146">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1147">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als eine 64-Bit-Ganzzahl mit Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1147">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="21642-1148"><see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1148"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1149">Die- <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert den Vorgang des kleiner-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1149">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1150">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1150">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#33)]
 [!code-vb[System.Numerics.BigInteger.Operators#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#33)]  
  
 <span data-ttu-id="21642-1151">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1151">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-1152">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1152">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#34)]  
  
 <span data-ttu-id="21642-1153">Wenn ein-,-,-,-,- `right` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1153">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-1154">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1154">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1155">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1155">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1156">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1156">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1157">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als ein anderer <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1157">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1158"><see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1158"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1159">Die- <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert den Vorgang des kleiner-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1159">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1160">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1160">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#27)]
 [!code-vb[System.Numeric.BigInteger.Class#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#27)]  
  
 <span data-ttu-id="21642-1161">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1161">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-1162">Einige Sprachen können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1162">Some languages can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#28)]  
  
 <span data-ttu-id="21642-1163">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1163">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1164">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1164">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1165">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1165">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1166">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als eine 64-Bit-Ganzzahl ohne Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1166">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="21642-1167"><see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1167"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1168">Die- <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert den Vorgang des kleiner-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1168">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1169">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1169">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#35)]
 [!code-vb[System.Numerics.BigInteger.Operators#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#35)]  
  
 <span data-ttu-id="21642-1170">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1170">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-1171">Sie können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1171">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#36)]  
  
 <span data-ttu-id="21642-1172">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1172">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThan(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt; right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1173">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1173">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1174">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1174">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1175">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen kleiner als ein <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1175">Returns a value that indicates whether a 64-bit unsigned integer is less than a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1176"><see langword="true" />, wenn <paramref name="left" /> kleiner als <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1176"><see langword="true" /> if <paramref name="left" /> is less than <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1177">Die- <xref:System.Numerics.BigInteger.op_LessThan%2A> Methode definiert den Vorgang des kleiner-als-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1177">The <xref:System.Numerics.BigInteger.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1178">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1178">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#37](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#37)]
 [!code-vb[System.Numerics.BigInteger.Operators#37](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#37)]  
  
 <span data-ttu-id="21642-1179">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1179">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-1180">Sie können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1180">They can also call the <xref:System.Numerics.BigInteger.op_LessThan%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#38](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#38)]  
  
 <span data-ttu-id="21642-1181">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1181">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThanOrEqual" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_LessThanOrEqual">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-1182">Gibt einen Wert zurück, der angibt, ob ein angegebener Wert kleiner als oder gleich einem anderen Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1182">Returns a value that indicates whether a specified value is less than or equal to another specified value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (long left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Int64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As Long, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(long left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : int64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1183">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1183">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1184">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1184">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1185">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl mit Vorzeichen kleiner als ein oder gleich einem <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1185">Returns a value that indicates whether a 64-bit signed integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1186"><see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1186"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1187">Die- <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert den Vorgang des Operators "kleiner als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1187">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1188">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1188">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#39](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#39)]
 [!code-vb[System.Numerics.BigInteger.Operators#39](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#39)]  
  
 <span data-ttu-id="21642-1189">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1189">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-1190">Sie können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1190">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Int64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#40](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#40)]  
  
 <span data-ttu-id="21642-1191">Wenn ein-,-,-,-,- `left` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1191">If `left` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-1192">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1192">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, long right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, long right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * int64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1193">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1193">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1194">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1194">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1195">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als oder gleich einer 64-Bit-Ganzzahl mit Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1195">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="21642-1196"><see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1196"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1197">Die- <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert den Vorgang des Operators "kleiner als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1197">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1198">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1198">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#41](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#41)]
 [!code-vb[System.Numerics.BigInteger.Operators#41](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#41)]  
  
 <span data-ttu-id="21642-1199">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1199">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-1200">Sie können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1200">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Int64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#42)]  
  
 <span data-ttu-id="21642-1201">Wenn ein-,-,-,-,- `right` oder-Wert ist, <xref:System.Byte> <xref:System.Int16> <xref:System.Int32> <xref:System.SByte> <xref:System.UInt16> <xref:System.UInt32> wird er implizit in einen-Wert konvertiert, <xref:System.Int64> Wenn der Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1201">If `right` is a <xref:System.Byte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.SByte>, <xref:System.UInt16>, or <xref:System.UInt32> value, it is implicitly converted to an <xref:System.Int64> value when the operation is performed.</span></span>  
  
 <span data-ttu-id="21642-1202">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1202">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.Int64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1203">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1203">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1204">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1204">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1205">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner oder gleich einem anderen <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1205">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1206"><see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1206"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1207">Die- <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert den Vorgang des Operators "kleiner als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1207">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1208">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1208">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#29)]
 [!code-vb[System.Numeric.BigInteger.Class#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#29)]  
  
 <span data-ttu-id="21642-1209">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Compare%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-1209">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Compare%2A> method instead.</span></span> <span data-ttu-id="21642-1210">Sie können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1210">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numeric.BigInteger.Class#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#30)]  
  
 <span data-ttu-id="21642-1211">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1211">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Compare%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (System.Numerics.BigInteger left, ulong right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype System.Numerics.BigInteger left, unsigned int64 right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.Numerics.BigInteger,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As BigInteger, right As ULong) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::Numerics::BigInteger left, System::UInt64 right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : System.Numerics.BigInteger * uint64 -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1212">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1212">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1213">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1213">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1214">Gibt einen Wert zurück, der angibt, ob ein <see cref="T:System.Numerics.BigInteger" />-Wert kleiner als oder gleich einer 64-Bit-Ganzzahl ohne Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1214">Returns a value that indicates whether a <see cref="T:System.Numerics.BigInteger" /> value is less than or equal to a 64-bit unsigned integer.</span></span></summary>
        <returns><span data-ttu-id="21642-1215"><see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1215"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1216">Die- <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert den Vorgang des Operators "kleiner als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1216">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1217">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1217">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#43](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#43)]
 [!code-vb[System.Numerics.BigInteger.Operators#43](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#43)]  
  
 <span data-ttu-id="21642-1218">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1218">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-1219">Sie können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1219">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.Numerics.BigInteger%2CSystem.UInt64%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#44](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#44)]  
  
 <span data-ttu-id="21642-1220">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1220">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (ulong left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(unsigned int64 left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_LessThanOrEqual(System.UInt64,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As ULong, right As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(System::UInt64 left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : uint64 * System.Numerics.BigInteger -&gt; bool" Usage="left &lt;= right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.UInt64" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1221">Der erste zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1221">The first value to compare.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1222">Der zweite zu vergleichende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1222">The second value to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1223">Gibt einen Wert zurück, der angibt, ob eine 64-Bit-Ganzzahl ohne Vorzeichen kleiner als ein oder gleich einem <see cref="T:System.Numerics.BigInteger" />-Wert ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1223">Returns a value that indicates whether a 64-bit unsigned integer is less than or equal to a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1224"><see langword="true" />, wenn <paramref name="left" /> kleiner oder gleich <paramref name="right" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1224"><see langword="true" /> if <paramref name="left" /> is less than or equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1225">Die- <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> Methode definiert den Vorgang des Operators "kleiner als oder gleich" für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1225">The <xref:System.Numerics.BigInteger.op_LessThanOrEqual%2A> method defines the operation of the less than or equal to operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1226">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1226">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#45](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/Operator1.cs#45)]
 [!code-vb[System.Numerics.BigInteger.Operators#45](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#45)]  
  
 <span data-ttu-id="21642-1227">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1227">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> method instead.</span></span> <span data-ttu-id="21642-1228">Sie können die-Methode auch direkt aufzurufen <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> , wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1228">They can also call the <xref:System.Numerics.BigInteger.op_LessThanOrEqual%28System.UInt64%2CSystem.Numerics.BigInteger%29> method directly, as the following example shows.</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.Operators#46](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#46)]  
  
 <span data-ttu-id="21642-1229">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1229">The equivalent method for this operator is <xref:System.Numerics.BigInteger.CompareTo%28System.UInt64%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.op_LessThan" />
      </Docs>
    </Member>
    <Member MemberName="op_Modulus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator % (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Modulus(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Mod (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator %(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member ( % ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="dividend % divisor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="21642-1230">Der zu dividierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1230">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="21642-1231">Der Wert, durch den dividiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1231">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="21642-1232">Gibt den Rest aus der Division zweier angegebener <see cref="T:System.Numerics.BigInteger" />-Werte zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-1232">Returns the remainder that results from division with two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="21642-1233">Der Rest, der sich aus der Division ergibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1233">The remainder that results from the division.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1234">Die- <xref:System.Numerics.BigInteger.op_Modulus%2A> Methode definiert den Vorgang des Modulo-Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1234">The <xref:System.Numerics.BigInteger.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1235">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1235">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#31)]
 [!code-vb[System.Numeric.BigInteger.Class#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#31)]  
  
 <span data-ttu-id="21642-1236">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1236">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Remainder%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="21642-1237">Das Vorzeichen des Werts, der durch den Modulo-Vorgang zurückgegeben wird, hängt vom Vorzeichen von ab `dividend` : Wenn `dividend` positiv ist, gibt der Modulo-Vorgang ein positives Ergebnis zurück; wenn es negativ ist, gibt der Modulo-Vorgang ein negatives Ergebnis zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-1237">The sign of the value returned by the modulus operation depends on the sign of `dividend`: If `dividend` is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.</span></span> <span data-ttu-id="21642-1238">Das Verhalten des Modulo-Vorgangs mit- <xref:System.Numerics.BigInteger> Werten ist mit dem Modulo-Vorgang mit anderen ganzzahligen Typen identisch.</span><span class="sxs-lookup"><span data-stu-id="21642-1238">The behavior of the modulus operation with <xref:System.Numerics.BigInteger> values is identical to the modulus operation with other integral types.</span></span>  
  
 <span data-ttu-id="21642-1239">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1239">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Remainder%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="21642-1240"><paramref name="divisor" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="21642-1240"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.op_Division(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
      </Docs>
    </Member>
    <Member MemberName="op_Multiply">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator * (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Multiply(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator * (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator *(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( * ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left * right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1241">Der erste zu multiplizierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1241">The first value to multiply.</span></span></param>
        <param name="right"><span data-ttu-id="21642-1242">Der zweite zu multiplizierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1242">The second value to multiply.</span></span></param>
        <summary><span data-ttu-id="21642-1243">Multipliziert zwei angegebene <see cref="T:System.Numerics.BigInteger" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1243">Multiplies two specified <see cref="T:System.Numerics.BigInteger" /> values.</span></span></summary>
        <returns><span data-ttu-id="21642-1244">Das Produkt von <paramref name="left" /> und <paramref name="right" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1244">The product of <paramref name="left" /> and <paramref name="right" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1245">Die- <xref:System.Numerics.BigInteger.op_Multiply%2A> Methode definiert den Vorgang des Multiplikations Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1245">The <xref:System.Numerics.BigInteger.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1246">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1246">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#11)]
 [!code-vb[System.Numeric.BigInteger.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#11)]  
  
 <span data-ttu-id="21642-1247">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1247">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Multiply(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_OnesComplement">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator ~ (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_OnesComplement(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_OnesComplement(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator Not (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator ~(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member op_OnesComplement : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.op_OnesComplement value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1248">Ein Ganzzahlwert.</span><span class="sxs-lookup"><span data-stu-id="21642-1248">An integer value.</span></span></param>
        <summary><span data-ttu-id="21642-1249">Gibt das bitweise Einerkomplement eines <see cref="T:System.Numerics.BigInteger" />-Werts zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-1249">Returns the bitwise one's complement of a <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1250">Das bitweise Einerkomplement von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1250">The bitwise one's complement of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1251">Die <xref:System.Numerics.BigInteger.op_OnesComplement%2A> -Methode definiert den Vorgang des bitweisen One-komplementatoroperators für <xref:System.Numerics.BigInteger> -Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1251">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method defines the operation of the bitwise one's complement operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1252">Der bitweise One-komplementatoroperator kehrt jedes Bit in einem numerischen Wert um.</span><span class="sxs-lookup"><span data-stu-id="21642-1252">The bitwise one's complement operator reverses each bit in a numeric value.</span></span> <span data-ttu-id="21642-1253">Das heißt, Bits in `value` , die 0 sind, werden im Ergebnis auf 1 festgelegt, und Bits, die 1 sind, werden im Ergebnis auf 0 festgelegt.</span><span class="sxs-lookup"><span data-stu-id="21642-1253">That is, bits in `value` that are 0 are set to 1 in the result, and bits that are 1 are set to 0 in the result.</span></span> <span data-ttu-id="21642-1254">Die- <xref:System.Numerics.BigInteger.op_OnesComplement%2A> Methode ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1254">The <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/cs/OnesComplement1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.OnesComplement#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/OnesComplement1.vb#1)]  
  
 <span data-ttu-id="21642-1255">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können die <xref:System.Numerics.BigInteger.op_OnesComplement%2A> -Methode möglicherweise direkt aufzurufen, um eine bitweise Einerkomplement Operation auszuführen.</span><span class="sxs-lookup"><span data-stu-id="21642-1255">Languages that do not support custom operators may be able to call the <xref:System.Numerics.BigInteger.op_OnesComplement%2A> method directly to perform a bitwise one's complement operation.</span></span> <span data-ttu-id="21642-1256">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="21642-1256">For example:</span></span>  
  
 [!code-vb[System.Numerics.BigInteger.OnesComplement#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OnesComplement/vb/onescomplement2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_RightShift">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator &gt;&gt; (System.Numerics.BigInteger value, int shift);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_RightShift(valuetype System.Numerics.BigInteger value, int32 shift) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_RightShift(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;&gt; (value As BigInteger, shift As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator &gt;&gt;(System::Numerics::BigInteger value, int shift);" />
      <MemberSignature Language="F#" Value="static member ( &gt;&gt;&gt; ) : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="value &gt;&gt;&gt; shift" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="shift" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1257">Der Wert, dessen Bits verschoben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="21642-1257">The value whose bits are to be shifted.</span></span></param>
        <param name="shift"><span data-ttu-id="21642-1258">Die Anzahl der Bits, um die <paramref name="value" /> nach rechts verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1258">The number of bits to shift <paramref name="value" /> to the right.</span></span></param>
        <summary><span data-ttu-id="21642-1259">Verschiebt einen <see cref="T:System.Numerics.BigInteger" />-Wert um eine angegebene Anzahl von Bits nach rechts.</span><span class="sxs-lookup"><span data-stu-id="21642-1259">Shifts a <see cref="T:System.Numerics.BigInteger" /> value a specified number of bits to the right.</span></span></summary>
        <returns><span data-ttu-id="21642-1260">Ein Wert, der um die angegebene Anzahl von Bits nach rechts verschoben wurde.</span><span class="sxs-lookup"><span data-stu-id="21642-1260">A value that has been shifted to the right by the specified number of bits.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1261">Mit der- <xref:System.Numerics.BigInteger.op_RightShift%2A> Methode wird der bitweise Right Shift-Operator für- <xref:System.Numerics.BigInteger> Werte definiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1261">The <xref:System.Numerics.BigInteger.op_RightShift%2A> method defines the operation of the bitwise right-shift operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1262">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1262">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#47](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#47)]
 [!code-vb[System.Numerics.BigInteger.Operators#47](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#47)]  
  
 <span data-ttu-id="21642-1263">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können einen bitweisen rechts Schiebe Vorgang durchführen, indem Sie durch Dividieren `value` `BigInteger.Pow(2, shift)` und 1-mal bei negativen Werten subtrahieren `shift` .</span><span class="sxs-lookup"><span data-stu-id="21642-1263">Languages that do not support custom operators can perform a bitwise right-shift operation by dividing `value` by `BigInteger.Pow(2, shift)` and subtracting 1 times `shift` for negative values.</span></span> <span data-ttu-id="21642-1264">Das folgende Beispiel zeigt, dass die Ergebnisse mit den Ergebnissen der Verwendung dieses Operators identisch sind.</span><span class="sxs-lookup"><span data-stu-id="21642-1264">The following example shows that the results are identical to the results of using this operator.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Operators#48](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/cs/RightShift1.cs#48)]
 [!code-vb[System.Numerics.BigInteger.Operators#48](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Operators/vb/Operator1.vb#48)]  
  
 <span data-ttu-id="21642-1265">Wenn `shift` größer oder gleich der Anzahl von Bits in einem positiven <xref:System.Numerics.BigInteger> Wert ist, ist das Ergebnis der Right Shift-Operation <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1265">If `shift` is greater than or equal to the number of bits in a positive <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.Zero%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-1266">Wenn `shift` größer als die Anzahl der Bits in einem negativen <xref:System.Numerics.BigInteger> Wert ist, ist das Ergebnis der Right Shift-Operation <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1266">If `shift` is greater than the number of bits in a negative <xref:System.Numerics.BigInteger> value, the result of the right-shift operation is <xref:System.Numerics.BigInteger.MinusOne%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_LeftShift(System.Numerics.BigInteger,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_Subtraction(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member ( - ) : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="left - right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1267">Der Wert, von dem subtrahiert werden soll (der Minuend).</span><span class="sxs-lookup"><span data-stu-id="21642-1267">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="21642-1268">Der Wert, der subtrahiert werden soll (der Subtrahend).</span><span class="sxs-lookup"><span data-stu-id="21642-1268">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="21642-1269">Subtrahiert einen <see cref="T:System.Numerics.BigInteger" />-Wert von einem anderen <see cref="T:System.Numerics.BigInteger" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1269">Subtracts a <see cref="T:System.Numerics.BigInteger" /> value from another <see cref="T:System.Numerics.BigInteger" /> value.</span></span></summary>
        <returns><span data-ttu-id="21642-1270">Das Ergebnis der Subtraktion von <paramref name="right" /> von <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1270">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1271">Die- <xref:System.Numerics.BigInteger.op_Subtraction%2A> Methode definiert den Vorgang des Subtraktions Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1271">The <xref:System.Numerics.BigInteger.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1272">Dies ermöglicht Code wie den folgenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1272">It enables code such as the following:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#14)]
 [!code-vb[System.Numeric.BigInteger.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#14)]  
  
 <span data-ttu-id="21642-1273">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1273">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Subtract%2A?displayProperty=nameWithType> method instead.</span></span>  
  
 <span data-ttu-id="21642-1274">Die äquivalente-Methode für diesen Operator ist <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1274">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Subtract%28System.Numerics.BigInteger%2CSystem.Numerics.BigInteger%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="op_UnaryNegation">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator - (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryNegation(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryNegation(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator -(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~- ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="- value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1275">Der zu negierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1275">The value to negate.</span></span></param>
        <summary><span data-ttu-id="21642-1276">Negiert einen angegebenen BigInteger-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1276">Negates a specified BigInteger value.</span></span></summary>
        <returns><span data-ttu-id="21642-1277">Das Ergebnis des <paramref name="value" />-Parameters, multipliziert mit -1.</span><span class="sxs-lookup"><span data-stu-id="21642-1277">The result of the <paramref name="value" /> parameter multiplied by negative one (-1).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1278">Die- <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> Methode definiert den Vorgang des unären Negations Operators (oder den Additiven umgekehrten Operator) für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1278">The <xref:System.Numerics.BigInteger.op_UnaryNegation%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1279">Der-Vorgang erzeugt einen Wert, der 0 (null) ergibt, wenn er der ursprünglichen Zahl hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1279">The operation produces a value that results in 0 (zero) when it is added to the original number.</span></span> <span data-ttu-id="21642-1280">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können stattdessen die-Methode aufzurufen <xref:System.Numerics.BigInteger.Negate%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-1280">Languages that do not support custom operators can call the <xref:System.Numerics.BigInteger.Negate%2A> method instead.</span></span>  
  
 <span data-ttu-id="21642-1281">Die äquivalente Methode für diesen Operator ist. <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="21642-1281">The equivalent method for this operator is <xref:System.Numerics.BigInteger.Negate%28System.Numerics.BigInteger%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="21642-1282">Im folgenden Beispiel werden drei verschiedene Möglichkeiten veranschaulicht, um den Wert eines-Objekts zu negieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-1282">The following example illustrates three different ways to negate the value of a <xref:System.Numerics.BigInteger> object.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#16)]
 [!code-vb[System.Numeric.BigInteger.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_UnaryPlus">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger operator + (System.Numerics.BigInteger value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.Numerics.BigInteger op_UnaryPlus(valuetype System.Numerics.BigInteger value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.op_UnaryPlus(System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (value As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger operator +(System::Numerics::BigInteger value);" />
      <MemberSignature Language="F#" Value="static member ( ~+ ) : System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="+ value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1283">Ein Ganzzahlwert.</span><span class="sxs-lookup"><span data-stu-id="21642-1283">An integer value.</span></span></param>
        <summary><span data-ttu-id="21642-1284">Gibt den Wert des <see cref="T:System.Numerics.BigInteger" />-Operanden zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-1284">Returns the value of the <see cref="T:System.Numerics.BigInteger" /> operand.</span></span> <span data-ttu-id="21642-1285">(Das Vorzeichen des Operanden wird nicht geändert.)</span><span class="sxs-lookup"><span data-stu-id="21642-1285">(The sign of the operand is unchanged.)</span></span></summary>
        <returns><span data-ttu-id="21642-1286">Der Wert des <paramref name="value" />-Operanden.</span><span class="sxs-lookup"><span data-stu-id="21642-1286">The value of the <paramref name="value" /> operand.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1287">Die- <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> Methode definiert den Vorgang des unären positiven Operators für- <xref:System.Numerics.BigInteger> Werte.</span><span class="sxs-lookup"><span data-stu-id="21642-1287">The <xref:System.Numerics.BigInteger.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Numerics.BigInteger> values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-1288">Wandelt die angegebene Zeichenfolgendarstellung einer Zahl in ihre <see cref="T:System.Numerics.BigInteger" />-Entsprechung um.</span><span class="sxs-lookup"><span data-stu-id="21642-1288">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1289">Eine Zeichenfolge, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1289">A string that contains the number to convert.</span></span></param>
        <summary><span data-ttu-id="21642-1290">Wandelt die angegebene Zeichenfolgendarstellung einer Zahl in ihre <see cref="T:System.Numerics.BigInteger" />-Entsprechung um.</span><span class="sxs-lookup"><span data-stu-id="21642-1290">Converts the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="21642-1291">Ein Wert, der der im <paramref name="value" />-Parameter angegebenen Zahl entspricht.</span><span class="sxs-lookup"><span data-stu-id="21642-1291">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1292">Der- `value` Parameter sollte die Zeichen folgen Darstellung einer Zahl in der folgenden Form sein.</span><span class="sxs-lookup"><span data-stu-id="21642-1292">The `value` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="21642-1293">[*WS*] [*Sign*] *Ziffern*[*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1293">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="21642-1294">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="21642-1294">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="21642-1295">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="21642-1295">The following table describes each element.</span></span>  
  
|<span data-ttu-id="21642-1296">Element</span><span class="sxs-lookup"><span data-stu-id="21642-1296">Element</span></span>|<span data-ttu-id="21642-1297">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1297">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="21642-1298">*Gefangener*</span><span class="sxs-lookup"><span data-stu-id="21642-1298">*ws*</span></span>|<span data-ttu-id="21642-1299">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="21642-1299">Optional white space.</span></span>|  
|<span data-ttu-id="21642-1300">*sign*</span><span class="sxs-lookup"><span data-stu-id="21642-1300">*sign*</span></span>|<span data-ttu-id="21642-1301">Ein optionales Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1301">An optional sign.</span></span> <span data-ttu-id="21642-1302">Gültige Zeichen werden von der-Eigenschaft <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> und der-Eigenschaft <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> der aktuellen Kultur bestimmt.</span><span class="sxs-lookup"><span data-stu-id="21642-1302">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="21642-1303">*Zahlen*</span><span class="sxs-lookup"><span data-stu-id="21642-1303">*digits*</span></span>|<span data-ttu-id="21642-1304">Eine Sequenz von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="21642-1304">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="21642-1305">Alle führenden Nullen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="21642-1305">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="21642-1306">Die durch den-Parameter angegebene Zeichenfolge `value` wird mithilfe des- <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> Stils interpretiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1306">The string specified by the `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="21642-1307">Er darf keine Gruppen Trennzeichen oder Dezimaltrennzeichen enthalten, und er darf keinen Dezimaltrennzeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="21642-1307">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="21642-1308">Der- `value` Parameter wird mithilfe der Formatierungsinformationen in einem- <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> Objekt analysiert, das für die aktuelle System Kultur initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1308">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="21642-1309">Weitere Informationen finden Sie unter <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="21642-1309">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-1310">Verwenden Sie die-Methode, um eine Zeichenfolge mithilfe der Formatierungsinformationen einer bestimmten Kultur zu analysieren <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> .</span><span class="sxs-lookup"><span data-stu-id="21642-1310">To parse a string by using the formatting information of a specific culture, use the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="21642-1311">Wenn Sie die <xref:System.Numerics.BigInteger.Parse%2A> -Methode zum Roundtrip der Zeichen folgen Darstellung eines <xref:System.Numerics.BigInteger> Werts verwenden, der von der- <xref:System.Numerics.BigInteger.ToString%2A> Methode ausgegeben wurde, sollten Sie die- <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Format Bezeichner "R" verwenden, um die Zeichen folgen Darstellung des Werts zu generieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-1311">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="21642-1312">Andernfalls behält die Zeichen folgen Darstellung von <xref:System.Numerics.BigInteger> nur die 50 signifikantesten Ziffern des ursprünglichen Werts bei, und die Daten gehen möglicherweise verloren, wenn Sie die- <xref:System.Numerics.BigInteger.Parse%2A> Methode zum Wiederherstellen des <xref:System.Numerics.BigInteger> Werts verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-1312">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1313">Im folgenden Beispiel wird die- <xref:System.Numerics.BigInteger.Parse%28System.String%29> Methode verwendet, um zwei-Objekte zu instanziieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-1313">The following example uses the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="21642-1314">Jedes Objekt wird mit einer anderen Zahl multipliziert und dann die- <xref:System.Numerics.BigInteger.Compare%2A> Methode aufgerufen, um die Beziehung zwischen den beiden Werten zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="21642-1314">It multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21642-1315"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1315"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="21642-1316"><paramref name="value" /> weist nicht das richtige Format auf.</span><span class="sxs-lookup"><span data-stu-id="21642-1316"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1317">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1317">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="21642-1318">Eine bitweise Kombination der Enumerationswerte, die das zulässige Format von <paramref name="value" /> angeben.</span><span class="sxs-lookup"><span data-stu-id="21642-1318">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="21642-1319">Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil in die <see cref="T:System.Numerics.BigInteger" />-Entsprechung.</span><span class="sxs-lookup"><span data-stu-id="21642-1319">Converts the string representation of a number in a specified style to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="21642-1320">Ein Wert, der der im <paramref name="value" />-Parameter angegebenen Zahl entspricht.</span><span class="sxs-lookup"><span data-stu-id="21642-1320">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1321">Der- `style` Parameter definiert die Stilelemente (z. b. Leerzeichen, das positive oder negative Vorzeichen Symbol, das Gruppen Trennzeichen oder das Dezimaltrennzeichen), die im-Parameter zulässig sind, damit der Analyse Vorgang erfolgreich ausgeführt werden kann `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1321">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="21642-1322">`styles` muss eine Kombination von Bitflags aus der- <xref:System.Globalization.NumberStyles> Enumeration sein.</span><span class="sxs-lookup"><span data-stu-id="21642-1322">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="21642-1323">Der- `style` Parameter bewirkt, dass diese Methoden Überladung nützlich `value` ist, wenn die Zeichen folgen Darstellung eines hexadezimalen Werts enthält, wenn das Zahlensystem (Decimal oder hexadezimal), das von dargestellt `value` wird, nur zur Laufzeit bekannt ist oder wenn Sie Leerzeichen oder ein Vorzeichen Symbol in nicht zulassen möchten `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1323">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="21642-1324">Abhängig vom Wert von `style` kann der- `value` Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1324">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="21642-1325">[*WS*] [ *$* ] [*Sign*] [*digits*,]*digits*[.\* fractional_digits*] [E [*Sign*]*Exponential_digits*] [*WS\*]</span><span class="sxs-lookup"><span data-stu-id="21642-1325">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="21642-1326">Wenn `style` enthält <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> , kann der- `value` Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1326">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="21642-1327">[*WS*] *Hexziffern*[*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1327">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="21642-1328">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="21642-1328">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="21642-1329">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="21642-1329">The following table describes each element.</span></span>  
  
|<span data-ttu-id="21642-1330">Element</span><span class="sxs-lookup"><span data-stu-id="21642-1330">Element</span></span>|<span data-ttu-id="21642-1331">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1331">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="21642-1332">*Gefangener*</span><span class="sxs-lookup"><span data-stu-id="21642-1332">*ws*</span></span>|<span data-ttu-id="21642-1333">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="21642-1333">Optional white space.</span></span> <span data-ttu-id="21642-1334">Leerräume können am Anfang von angezeigt `value` `style` werden, wenn das <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> -Flag enthält, und es kann am Ende von angezeigt werden, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1334">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="21642-1335">Ein kulturspezifisches Währungssymbol.</span><span class="sxs-lookup"><span data-stu-id="21642-1335">A culture-specific currency symbol.</span></span> <span data-ttu-id="21642-1336">Die Position in der Zeichenfolge wird durch die <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> -Eigenschaft und die-Eigenschaft <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> der aktuellen Kultur definiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1336">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="21642-1337">Das Währungssymbol der aktuellen Kultur kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1337">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1338">*sign*</span><span class="sxs-lookup"><span data-stu-id="21642-1338">*sign*</span></span>|<span data-ttu-id="21642-1339">Ein optionales Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1339">An optional sign.</span></span> <span data-ttu-id="21642-1340">Das Vorzeichen kann am Anfang von angezeigt `value` `style` werden, wenn das <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> -Flag enthält, und es kann am Ende von angezeigt werden, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1340">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="21642-1341">Klammern können in verwendet werden `value` , um einen negativen Wert anzugeben, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> Flag einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-1341">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1342">*Zahlen*</span><span class="sxs-lookup"><span data-stu-id="21642-1342">*digits*</span></span><br /><br /> <span data-ttu-id="21642-1343">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1343">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="21642-1344">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1344">*exponential_digits*</span></span>|<span data-ttu-id="21642-1345">Eine Sequenz von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="21642-1345">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="21642-1346">Bei *fractional_digits*ist nur die Ziffer 0 gültig.</span><span class="sxs-lookup"><span data-stu-id="21642-1346">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="21642-1347">*,*</span><span class="sxs-lookup"><span data-stu-id="21642-1347">*,*</span></span>|<span data-ttu-id="21642-1348">Ein kulturspezifisches Gruppen Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1348">A culture-specific group separator symbol.</span></span> <span data-ttu-id="21642-1349">Das Gruppen Trennzeichen der aktuellen Kultur kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1349">The current culture's group separator can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1350">*.*</span><span class="sxs-lookup"><span data-stu-id="21642-1350">*.*</span></span>|<span data-ttu-id="21642-1351">Ein kulturspezifisches Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1351">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="21642-1352">Das Dezimaltrennzeichen der aktuellen Kultur kann in auftreten, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1352">The current culture's decimal point symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="21642-1353">Nur die Ziffer 0 (null) kann als eine Bruch Ziffer angezeigt werden, damit der Analyse Vorgang erfolgreich ausgeführt werden kann. Wenn *fractional_digits* eine beliebige andere Ziffer einschließt, <xref:System.FormatException> wird eine ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="21642-1353">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="21642-1354">E</span><span class="sxs-lookup"><span data-stu-id="21642-1354">E</span></span>|<span data-ttu-id="21642-1355">Das Zeichen "e" oder "e", das angibt, dass der Wert in exponentieller Notation (Scientific) dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1355">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="21642-1356">Der- `value` Parameter kann eine Zahl in Exponentialnotation darstellen, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1356">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1357">*Hexziffern*</span><span class="sxs-lookup"><span data-stu-id="21642-1357">*hexdigits*</span></span>|<span data-ttu-id="21642-1358">Eine Sequenz von hexadezimalen Ziffern zwischen 0 und f oder 0 bis f.</span><span class="sxs-lookup"><span data-stu-id="21642-1358">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="21642-1359">Alle abschließenden NUL-Zeichen (U + 0000) in `s` werden vom Analyse-Vorgang unabhängig vom Wert des `style` Arguments ignoriert.</span><span class="sxs-lookup"><span data-stu-id="21642-1359">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="21642-1360">Eine Zeichenfolge, die nur Ziffern (die dem Format entspricht) entspricht, wird <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> immer erfolgreich analysiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1360">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="21642-1361">Die meisten der verbleibenden Member <xref:System.Globalization.NumberStyles> steuern Elemente, die möglicherweise vorhanden sind, jedoch nicht in der Eingabe Zeichenfolge vorhanden sein müssen.</span><span class="sxs-lookup"><span data-stu-id="21642-1361">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="21642-1362">In der folgenden Tabelle wird angegeben, wie sich einzelne Member <xref:System.Globalization.NumberStyles> auf die Elemente auswirken, die in vorhanden sein können `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1362">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="21642-1363">Wert vom Typ `NumberStyles`</span><span class="sxs-lookup"><span data-stu-id="21642-1363">`NumberStyles` value</span></span>|<span data-ttu-id="21642-1364">In zugelassene Elemente `value` zusätzlich zu Ziffern</span><span class="sxs-lookup"><span data-stu-id="21642-1364">Elements permitted in `value` in addition to digits</span></span>|  
|--------------------------|---------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="21642-1365">Nur das *digits* -Element.</span><span class="sxs-lookup"><span data-stu-id="21642-1365">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="21642-1366">Die Dezimaltrennzeichen (.) und die Elemente der *Bruch Ziffern* .</span><span class="sxs-lookup"><span data-stu-id="21642-1366">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="21642-1367">Das Zeichen "e" oder "e", das die Exponentialnotation angibt, sowie *Exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="21642-1367">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="21642-1368">Das *WS* -Element am Anfang von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1368">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="21642-1369">Das *WS* -Element am Ende von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1369">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="21642-1370">Das *Sign* -Element am Anfang von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1370">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="21642-1371">Das *Sign* -Element am Ende von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1371">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="21642-1372">Das *Vorzeichen* Element in der Form von Klammern, das den numerischen Wert einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-1372">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="21642-1373">Das Gruppen Trennzeichen (,).</span><span class="sxs-lookup"><span data-stu-id="21642-1373">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="21642-1374">Das Currency ($)-Element.</span><span class="sxs-lookup"><span data-stu-id="21642-1374">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="21642-1375">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-1375">All elements.</span></span> <span data-ttu-id="21642-1376">Es ist jedoch nicht möglich, `value` eine hexadezimale Zahl oder eine Zahl in Exponentialnotation darzustellen.</span><span class="sxs-lookup"><span data-stu-id="21642-1376">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="21642-1377">Das *WS* -Element am Anfang oder Ende von `value` , *Signieren* Sie am Anfang von `value` und das Dezimaltrennzeichen (*.*).</span><span class="sxs-lookup"><span data-stu-id="21642-1377">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="21642-1378">Der- `value` Parameter kann auch die Exponentialnotation verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-1378">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="21642-1379">Die `ws` `sign` Elemente,, Gruppen Trennzeichen (*,*) und Dezimaltrennzeichen (*.*).</span><span class="sxs-lookup"><span data-stu-id="21642-1379">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="21642-1380">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-1380">All elements.</span></span> <span data-ttu-id="21642-1381">`value`Eine hexadezimale Zahl kann jedoch nicht dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1381">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="21642-1382">Wenn Sie die <xref:System.Numerics.BigInteger.Parse%2A> -Methode zum Roundtrip der Zeichen folgen Darstellung eines <xref:System.Numerics.BigInteger> Werts verwenden, der von der- <xref:System.Numerics.BigInteger.ToString%2A> Methode ausgegeben wurde, sollten Sie die- <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Format Bezeichner "R" verwenden, um die Zeichen folgen Darstellung des Werts zu generieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-1382">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="21642-1383">Andernfalls behält die Zeichen folgen Darstellung von <xref:System.Numerics.BigInteger> nur die 50 signifikantesten Ziffern des ursprünglichen Werts bei, und die Daten gehen möglicherweise verloren, wenn Sie die- <xref:System.Numerics.BigInteger.Parse%2A> Methode zum Wiederherstellen des <xref:System.Numerics.BigInteger> Werts verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-1383">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="21642-1384">Anders als bei den anderen <xref:System.Globalization.NumberStyles> Werten, die das vorhanden sein bestimmter Stilelemente in zulassen, `value` <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> bedeutet der Stil Wert, dass die einzelnen numerischen Zeichen in `value` immer als hexadezimale Zeichen interpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1384">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="21642-1385">Gültige hexadezimale Zeichen sind 0-9, a-f und A-f.</span><span class="sxs-lookup"><span data-stu-id="21642-1385">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="21642-1386">Die einzigen anderen Flags, die mit dem-Parameter kombiniert werden können, `style` sind <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> und <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1386">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-1387">(Die- <xref:System.Globalization.NumberStyles> Enumeration enthält einen zusammengesetzten Zahlen Stil, <xref:System.Globalization.NumberStyles.HexNumber> , der beide Leerzeichen enthält.)</span><span class="sxs-lookup"><span data-stu-id="21642-1387">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21642-1388">Wenn `value` die Zeichen folgen Darstellung einer hexadezimalen Zahl ist, kann Ihr keine Ergänzung (z. b. oder) vorangestellt werden, `0x` `&h` die Sie als hexadezimale Zahl unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="21642-1388">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="21642-1389">Dies bewirkt, dass die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="21642-1389">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="21642-1390">Wenn `value` eine hexadezimale Zeichenfolge ist, <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> interpretiert die Methode `value` als eine negative Zahl, die mit der zwei Komplement-Darstellung gespeichert wird, wenn die ersten beiden hexadezimalen Ziffern größer oder gleich sind `0x80` .</span><span class="sxs-lookup"><span data-stu-id="21642-1390">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="21642-1391">Das heißt, die-Methode interpretiert das Bit des ersten Bytes in der höchsten Reihenfolge `value` als Signier Bit.</span><span class="sxs-lookup"><span data-stu-id="21642-1391">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="21642-1392">Um sicherzustellen, dass eine hexadezimale Zeichenfolge ordnungsgemäß als positive Zahl interpretiert wird, muss die erste Ziffer in den `value` Wert 0 (null) aufweisen.</span><span class="sxs-lookup"><span data-stu-id="21642-1392">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="21642-1393">Die-Methode interpretiert z `0x80` . b. als negativen Wert, interpretiert aber entweder `0x080` oder `0x0080` als positiven Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1393">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="21642-1394">Das folgende Beispiel veranschaulicht den Unterschied zwischen hexadezimalen Zeichen folgen, die negative und positive Werte darstellen.</span><span class="sxs-lookup"><span data-stu-id="21642-1394">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="21642-1395">Der- `value` Parameter wird mithilfe der Formatierungsinformationen in einem- <xref:System.Globalization.NumberFormatInfo> Objekt analysiert, das für die aktuelle System Kultur initialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1395">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="21642-1396">Um die Kultur anzugeben, deren Formatierungsinformationen für den Analyse Vorgang verwendet werden, müssen Sie die-Überladung aufrufen <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> .</span><span class="sxs-lookup"><span data-stu-id="21642-1396">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1397">Das folgende Beispiel veranschaulicht Aufrufe der- <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> Methode mit mehreren möglichen Werten für den- `style` Parameter.</span><span class="sxs-lookup"><span data-stu-id="21642-1397">The following example illustrates calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method with several possible values for the `style` parameter.</span></span> <span data-ttu-id="21642-1398">Es veranschaulicht, wie eine Zeichenfolge als Hexadezimalwert interpretiert wird und wie Leerzeichen und Signierungs Symbole nicht zugelassen werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1398">It illustrates how to interpret a string as a hexadecimal value, and how to disallow spaces and sign symbols.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#5)]
 [!code-vb[System.Numeric.BigInteger.Parse#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21642-1399"><paramref name="style" /> ist kein <see cref="T:System.Globalization.NumberStyles" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1399"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="21642-1400">- oder -</span><span class="sxs-lookup"><span data-stu-id="21642-1400">-or-</span></span> 
 <span data-ttu-id="21642-1401"><paramref name="style" /> schließt das <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />-Flag oder <see cref="F:System.Globalization.NumberStyles.HexNumber" />-Flag mit einem anderen Wert ein.</span><span class="sxs-lookup"><span data-stu-id="21642-1401"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21642-1402"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1402"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="21642-1403"><paramref name="value" /> folgt nicht dem mit <see cref="T:System.Globalization.NumberStyles" /> angegebenen Eingabemuster.</span><span class="sxs-lookup"><span data-stu-id="21642-1403"><paramref name="value" /> does not comply with the input pattern specified by <see cref="T:System.Globalization.NumberStyles" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, provider)" />
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, IFormatProvider? provider);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1404">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1404">A string that contains a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="21642-1405">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="value" /> bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1405">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="21642-1406">Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen kulturspezifischen Format in die <see cref="T:System.Numerics.BigInteger" />-Entsprechung.</span><span class="sxs-lookup"><span data-stu-id="21642-1406">Converts the string representation of a number in a specified culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="21642-1407">Ein Wert, der der im <paramref name="value" />-Parameter angegebenen Zahl entspricht.</span><span class="sxs-lookup"><span data-stu-id="21642-1407">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1408">Der- `value` Parameter sollte die Zeichen folgen Darstellung einer Zahl in der folgenden Form sein:</span><span class="sxs-lookup"><span data-stu-id="21642-1408">The `value` parameter should be the string representation of a number in the following form:</span></span>  
  
 <span data-ttu-id="21642-1409">[*WS*] [*Sign*] *Ziffern*[*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1409">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="21642-1410">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="21642-1410">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="21642-1411">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="21642-1411">The following table describes each element.</span></span>  
  
|<span data-ttu-id="21642-1412">Element</span><span class="sxs-lookup"><span data-stu-id="21642-1412">Element</span></span>|<span data-ttu-id="21642-1413">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1413">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="21642-1414">*Gefangener*</span><span class="sxs-lookup"><span data-stu-id="21642-1414">*ws*</span></span>|<span data-ttu-id="21642-1415">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="21642-1415">Optional white space.</span></span>|  
|<span data-ttu-id="21642-1416">*sign*</span><span class="sxs-lookup"><span data-stu-id="21642-1416">*sign*</span></span>|<span data-ttu-id="21642-1417">Ein optionales Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1417">An optional sign.</span></span> <span data-ttu-id="21642-1418">Gültige Zeichen werden durch die-Eigenschaft und die-Eigenschaft <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> des <xref:System.Globalization.NumberFormatInfo> -Objekts bestimmt, das von der `provider` -Methode des-Objekts zurückgegeben wird <xref:System.IFormatProvider.GetFormat%2A> .</span><span class="sxs-lookup"><span data-stu-id="21642-1418">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the `provider` object's <xref:System.IFormatProvider.GetFormat%2A> method.</span></span>|  
|<span data-ttu-id="21642-1419">*Zahlen*</span><span class="sxs-lookup"><span data-stu-id="21642-1419">*digits*</span></span>|<span data-ttu-id="21642-1420">Eine Sequenz von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="21642-1420">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="21642-1421">Alle führenden Nullen werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="21642-1421">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="21642-1422">Die durch den-Parameter angegebene Zeichenfolge `value` wird mithilfe des- <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> Stils interpretiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1422">The string specified by the `value` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="21642-1423">Er darf keine Gruppen Trennzeichen oder Dezimaltrennzeichen enthalten, und er darf keinen Dezimaltrennzeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="21642-1423">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="21642-1424">Wenn Sie die <xref:System.Numerics.BigInteger.Parse%2A> -Methode zum Roundtrip der Zeichen folgen Darstellung eines <xref:System.Numerics.BigInteger> Werts verwenden, der von der- <xref:System.Numerics.BigInteger.ToString%2A> Methode ausgegeben wurde, sollten Sie die- <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Format Bezeichner "R" verwenden, um die Zeichen folgen Darstellung des Werts zu generieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-1424">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="21642-1425">Andernfalls behält die Zeichen folgen Darstellung von <xref:System.Numerics.BigInteger> nur die 50 signifikantesten Ziffern des ursprünglichen Werts bei, und die Daten gehen möglicherweise verloren, wenn Sie die- <xref:System.Numerics.BigInteger.Parse%2A> Methode zum Wiederherstellen des <xref:System.Numerics.BigInteger> Werts verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-1425">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="21642-1426">Der- `provider` Parameter ist eine <xref:System.IFormatProvider> Implementierung <xref:System.IFormatProvider.GetFormat%2A> , deren-Methode ein-Objekt zurückgibt <xref:System.Globalization.NumberFormatInfo> , das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1426">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="21642-1427">Wenn die <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> -Methode aufgerufen wird, ruft Sie die `provider` -Methode des-Parameters auf <xref:System.IFormatProvider.GetFormat%2A> und übergibt ihr ein- <xref:System.Type> Objekt, das den- <xref:System.Globalization.NumberFormatInfo> Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1427">When the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="21642-1428">Die- <xref:System.IFormatProvider.GetFormat%2A> Methode gibt dann das- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das Informationen zum Format des- `value` Parameters bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1428">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information about the format of the `value` parameter.</span></span> <span data-ttu-id="21642-1429">Es gibt drei Möglichkeiten, den-Parameter zu verwenden, `provider` um benutzerdefinierte Formatierungsinformationen für den Analyse Vorgang bereitzustellen:</span><span class="sxs-lookup"><span data-stu-id="21642-1429">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="21642-1430">Sie können ein- <xref:System.Globalization.CultureInfo> Objekt übergeben, das die Kultur darstellt, die Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1430">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="21642-1431"><xref:System.Globalization.CultureInfo.GetFormat%2A>Die-Methode gibt das- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das numerische Formatierungsinformationen für diese Kultur bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1431">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="21642-1432">Sie können das tatsächliche- <xref:System.Globalization.NumberFormatInfo> Objekt übergeben, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1432">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="21642-1433">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> gibt nur sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="21642-1433">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="21642-1434">Sie können ein benutzerdefiniertes Objekt übergeben, das implementiert <xref:System.IFormatProvider> .</span><span class="sxs-lookup"><span data-stu-id="21642-1434">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="21642-1435"><xref:System.IFormatProvider.GetFormat%2A>Die-Methode instanziiert und gibt das <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1435">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="21642-1436">Wenn `provider` `null` den Wert hat, wird die Formatierung von `value` basierend auf dem- <xref:System.Globalization.NumberFormatInfo> Objekt der aktuellen Kultur interpretiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1436">If `provider` is `null`, the formatting of `value` is interpreted based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1437">In den folgenden Beispielen werden zwei Möglichkeiten veranschaulicht, um die Tilde (~) als negatives Vorzeichen für Formatierungs Werte zu definieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-1437">The following examples show two ways to define the tilde (~) as a negative sign for formatting <xref:System.Numerics.BigInteger> values.</span></span> <span data-ttu-id="21642-1438">Beachten Sie, dass der <xref:System.Numerics.BigInteger> Code die <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> -Methode aufrufen und das-Objekt übergeben muss, das <xref:System.Globalization.NumberFormatInfo> Formatierungsinformationen bereitstellt, um die Werte im gleichen Format wie die ursprünglichen Zeichen folgen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="21642-1438">Note that to display the <xref:System.Numerics.BigInteger> values in the same format as the original strings, your code must call the <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29?displayProperty=nameWithType> method and pass it the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="21642-1439">Im ersten Beispiel wird eine Klasse definiert, die implementiert <xref:System.IFormatProvider> und die- <xref:System.IFormatProvider.GetFormat%2A> Methode verwendet, um das Objekt zurückzugeben <xref:System.Globalization.NumberFormatInfo> , das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1439">The first example defines a class that implements <xref:System.IFormatProvider> and uses the <xref:System.IFormatProvider.GetFormat%2A> method to return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#2)]
 [!code-vb[System.Numeric.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#2)]  
  
 <span data-ttu-id="21642-1440">Ein- <xref:System.Numerics.BigInteger> Objekt kann dann mit folgendem Code instanziiert werden:</span><span class="sxs-lookup"><span data-stu-id="21642-1440">A <xref:System.Numerics.BigInteger> object can then be instantiated with the following code:</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#3)]
 [!code-vb[System.Numeric.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#3)]  
  
 <span data-ttu-id="21642-1441">Das zweite Beispiel ist einfacher.</span><span class="sxs-lookup"><span data-stu-id="21642-1441">The second example is more straightforward.</span></span> <span data-ttu-id="21642-1442">Das <xref:System.Globalization.NumberFormatInfo> Objekt, das Formatierungsinformationen bereitstellt, wird an den- `provider` Parameter übergeben.</span><span class="sxs-lookup"><span data-stu-id="21642-1442">It passes the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information to the `provider` parameter.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/cs/System.Numeric.BigInteger.Parse.cs#4)]
 [!code-vb[System.Numeric.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Parse/vb/System.Numeric.BigInteger.Parse.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21642-1443"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1443"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="21642-1444"><paramref name="value" /> weist nicht das richtige Format auf.</span><span class="sxs-lookup"><span data-stu-id="21642-1444"><paramref name="value" /> is not in the correct format.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = Nothing) As BigInteger" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1445">Eine schreibgeschützte Spanne von Zeichen, die die zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1445">A read-only span of characters that contains the number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="21642-1446">Eine bitweise Kombination der Enumerationswerte, die das zulässige Format von <paramref name="value" /> angeben.</span><span class="sxs-lookup"><span data-stu-id="21642-1446">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <param name="provider"><span data-ttu-id="21642-1447">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="value" /> bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1447">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="21642-1448">Konvertiert die-Darstellung einer Zahl, die in der angegebenen schreibgeschützten Spanne von Zeichen enthalten ist, in einem angegebenen Stil in die jeweilige <see cref="T:System.Numerics.BigInteger" />-Entsprechung.</span><span class="sxs-lookup"><span data-stu-id="21642-1448">Converts the representation of a number, contained in the specified read-only span of characters, in a specified style to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="21642-1449">Ein Wert, der der im <paramref name="value" />-Parameter angegebenen Zahl entspricht.</span><span class="sxs-lookup"><span data-stu-id="21642-1449">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="21642-1450">Der- `style` Parameter definiert die Stilelemente (z. b. Leerzeichen, das positive oder negative Vorzeichen Symbol, das Gruppen Trennzeichen oder das Dezimaltrennzeichen), die im-Parameter zulässig sind, damit der Analyse Vorgang erfolgreich ausgeführt werden kann `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1450">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="21642-1451">`styles` muss eine Kombination von Bitflags aus der- <xref:System.Globalization.NumberStyles> Enumeration sein.</span><span class="sxs-lookup"><span data-stu-id="21642-1451">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="21642-1452">Mit dem- `style` Parameter wird diese Methoden Überladung nützlich, wenn die `value` Darstellung eines hexadezimalen Werts enthält, wenn das von dargestellte Zahlensystem (Decimal oder hexadezimal) `value` nur zur Laufzeit bekannt ist oder wenn Sie Leerzeichen oder ein Zeichen in nicht zulassen möchten `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1452">The `style` parameter makes this method overload useful when `value` contains the representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>

<span data-ttu-id="21642-1453">Abhängig vom Wert von `style` kann der- `value` Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1453">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>

<span data-ttu-id="21642-1454">[*WS*] [ *$* ] [*Sign*] [*digits*,]*Ziffern*[*. fractional_digits*] [E [*Sign*]*Exponential_digits*] [*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1454">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>

<span data-ttu-id="21642-1455">Wenn `style` enthält <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> , kann der- `value` Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1455">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may include the following elements:</span></span>

<span data-ttu-id="21642-1456">[*WS*] *Hexziffern*[*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1456">[*ws*]*hexdigits*[*ws*]</span></span>

<span data-ttu-id="21642-1457">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="21642-1457">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="21642-1458">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="21642-1458">The following table describes each element.</span></span>

|<span data-ttu-id="21642-1459">Element</span><span class="sxs-lookup"><span data-stu-id="21642-1459">Element</span></span>|<span data-ttu-id="21642-1460">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1460">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="21642-1461">*Gefangener*</span><span class="sxs-lookup"><span data-stu-id="21642-1461">*ws*</span></span>|<span data-ttu-id="21642-1462">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="21642-1462">Optional white space.</span></span> <span data-ttu-id="21642-1463">Leerräume können am Anfang von angezeigt `value` `style` werden, wenn das <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> -Flag enthält, und es kann am Ende von angezeigt werden, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1463">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|
|*$*|<span data-ttu-id="21642-1464">Ein kulturspezifisches Währungssymbol.</span><span class="sxs-lookup"><span data-stu-id="21642-1464">A culture-specific currency symbol.</span></span> <span data-ttu-id="21642-1465">Die Position in `value` wird durch die-Eigenschaft und die-Eigenschaft der Kultur definiert, die <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> durch den-Parameter angegeben wird `provider` .</span><span class="sxs-lookup"><span data-stu-id="21642-1465">Its position in `value` is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the culture indicated by the `provider` parameter.</span></span> <span data-ttu-id="21642-1466">Das Währungssymbol der aktuellen Kultur kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1466">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1467">*sign*</span><span class="sxs-lookup"><span data-stu-id="21642-1467">*sign*</span></span>|<span data-ttu-id="21642-1468">Ein optionales Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1468">An optional sign.</span></span> <span data-ttu-id="21642-1469">Das Vorzeichen kann am Anfang von angezeigt `value` `style` werden, wenn das <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> -Flag enthält, und es kann am Ende von angezeigt werden, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1469">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="21642-1470">Klammern können in verwendet werden `value` , um einen negativen Wert anzugeben, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> Flag einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-1470">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1471">*Zahlen*</span><span class="sxs-lookup"><span data-stu-id="21642-1471">*digits*</span></span><br /><br /> <span data-ttu-id="21642-1472">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1472">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="21642-1473">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1473">*exponential_digits*</span></span>|<span data-ttu-id="21642-1474">Eine Sequenz von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="21642-1474">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="21642-1475">Bei *fractional_digits*ist nur die Ziffer 0 gültig.</span><span class="sxs-lookup"><span data-stu-id="21642-1475">For *fractional_digits*, only the digit 0 is valid.</span></span>|
|<span data-ttu-id="21642-1476">*,*</span><span class="sxs-lookup"><span data-stu-id="21642-1476">*,*</span></span>|<span data-ttu-id="21642-1477">Ein kulturspezifisches Gruppen Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1477">A culture-specific group separator symbol.</span></span> <span data-ttu-id="21642-1478">Das Gruppen Trennzeichen der Kultur, die von angegeben wird, `provider` kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1478">The group separator symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1479">*.*</span><span class="sxs-lookup"><span data-stu-id="21642-1479">*.*</span></span>|<span data-ttu-id="21642-1480">Ein kulturspezifisches Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1480">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="21642-1481">Das Dezimaltrennzeichen der Kultur, die von angegeben wird, `provider` kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1481">The decimal point symbol of the culture designated by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="21642-1482">Nur die Ziffer 0 (null) kann als eine Bruch Ziffer angezeigt werden, damit der Analyse Vorgang erfolgreich ausgeführt werden kann. Wenn *fractional_digits* eine beliebige andere Ziffer einschließt, <xref:System.FormatException> wird eine ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="21642-1482">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|
|<span data-ttu-id="21642-1483">E</span><span class="sxs-lookup"><span data-stu-id="21642-1483">E</span></span>|<span data-ttu-id="21642-1484">Das Zeichen "e" oder "e", das angibt, dass der Wert in exponentieller Notation (Scientific) dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1484">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="21642-1485">Der- `value` Parameter kann eine Zahl in Exponentialnotation darstellen, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1485">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1486">*Hexziffern*</span><span class="sxs-lookup"><span data-stu-id="21642-1486">*hexdigits*</span></span>|<span data-ttu-id="21642-1487">Eine Sequenz von hexadezimalen Ziffern zwischen 0 und f oder 0 bis f.</span><span class="sxs-lookup"><span data-stu-id="21642-1487">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|

> [!NOTE]
> <span data-ttu-id="21642-1488">Alle abschließenden NUL-Zeichen (U + 0000) in `s` werden vom Analyse-Vorgang unabhängig vom Wert des `style` Arguments ignoriert.</span><span class="sxs-lookup"><span data-stu-id="21642-1488">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

<span data-ttu-id="21642-1489">Eine `value` , die nur Ziffern (die dem Format entspricht) entspricht, wird <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> immer erfolgreich analysiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1489">A `value` with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="21642-1490">Die meisten der verbleibenden Member <xref:System.Globalization.NumberStyles> steuern Elemente, die möglicherweise vorhanden sind, jedoch nicht vorhanden sind, in `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1490">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in `value`.</span></span> <span data-ttu-id="21642-1491">In der folgenden Tabelle wird angegeben, wie sich einzelne Member <xref:System.Globalization.NumberStyles> auf die Elemente auswirken, die in vorhanden sein können `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1491">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>

|<span data-ttu-id="21642-1492">NumberStyles-Wert</span><span class="sxs-lookup"><span data-stu-id="21642-1492">NumberStyles value</span></span>|<span data-ttu-id="21642-1493">Als Wert zulässige Elemente zusätzlich zu Ziffern</span><span class="sxs-lookup"><span data-stu-id="21642-1493">Elements permitted in value in addition to digits</span></span>|
|------------------------|-------------------------------------------------------|
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="21642-1494">Nur das *digits* -Element.</span><span class="sxs-lookup"><span data-stu-id="21642-1494">The *digits* element only.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="21642-1495">Die Dezimaltrennzeichen (.) und die Elemente der *Bruch Ziffern* .</span><span class="sxs-lookup"><span data-stu-id="21642-1495">The decimal point (.) and *fractional-digits* elements.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="21642-1496">Das Zeichen "e" oder "e", das die Exponentialschreibweise angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1496">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="21642-1497">zusammen mit *Exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="21642-1497">along with *exponential_digits*.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="21642-1498">Das *WS* -Element am Anfang von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1498">The *ws* element at the start of `value`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="21642-1499">Das *WS* -Element am Ende von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1499">The *ws* element at the end of `value`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="21642-1500">Das *Sign* -Element am Anfang von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1500">The *sign* element at the start of `value`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="21642-1501">Das *Sign* -Element am Ende von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1501">The *sign* element at the end of `value`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="21642-1502">Das *Vorzeichen* Element in der Form von Klammern, das den numerischen Wert einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-1502">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="21642-1503">Das Gruppen Trennzeichen (,).</span><span class="sxs-lookup"><span data-stu-id="21642-1503">The group separator (,) element.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="21642-1504">Das Currency ($)-Element.</span><span class="sxs-lookup"><span data-stu-id="21642-1504">The currency ($) element.</span></span>|
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="21642-1505">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-1505">All elements.</span></span> <span data-ttu-id="21642-1506">Es ist jedoch nicht möglich, `value` eine hexadezimale Zahl oder eine Zahl in Exponentialnotation darzustellen.</span><span class="sxs-lookup"><span data-stu-id="21642-1506">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="21642-1507">Das *WS* -Element am Anfang oder Ende von `value` , *Signieren* Sie am Anfang von `value` und das Dezimaltrennzeichen (.).</span><span class="sxs-lookup"><span data-stu-id="21642-1507">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="21642-1508">Der- `value` Parameter kann auch die Exponentialnotation verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-1508">The `value` parameter can also use exponential notation.</span></span>|
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="21642-1509">Die `ws` `sign` Elemente,, Gruppen Trennzeichen (,) und Dezimaltrennzeichen (.).</span><span class="sxs-lookup"><span data-stu-id="21642-1509">The `ws`, `sign`, group separator (,), and decimal point (.) elements.</span></span>|
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="21642-1510">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-1510">All elements.</span></span> <span data-ttu-id="21642-1511">`value`Eine hexadezimale Zahl kann jedoch nicht dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1511">However, `value` cannot represent a hexadecimal number.</span></span>|

<span data-ttu-id="21642-1512">Anders als bei den anderen <xref:System.Globalization.NumberStyles> Werten, die das vorhanden sein bestimmter Stilelemente in zulassen `value` , <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> bedeutet der Stil Wert, dass die einzelnen numerischen Zeichen in `value` immer als hexadezimale Zeichen interpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1512">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for but do not require the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="21642-1513">Gültige hexadezimale Zeichen sind 0-9, a-f und A-f.</span><span class="sxs-lookup"><span data-stu-id="21642-1513">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="21642-1514">Die einzigen anderen Flags, die mit dem-Parameter kombiniert werden können, `style` sind <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> und <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1514">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-1515">(Die- <xref:System.Globalization.NumberStyles> Enumeration enthält einen zusammengesetzten Zahlen Stil, <xref:System.Globalization.NumberStyles.HexNumber> , der beide Leerzeichen enthält.)</span><span class="sxs-lookup"><span data-stu-id="21642-1515">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>


<span data-ttu-id="21642-1516">Der- `provider` Parameter ist eine- <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="21642-1516">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="21642-1517">Die zugehörige- <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das kulturspezifische Informationen zum Format von bereitstellt `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1517">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="21642-1518">In der Regel `provider` kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="21642-1518">Typically, `provider` can be any one of the following:</span></span>

-   <span data-ttu-id="21642-1519">Ein- <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, die numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1519">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="21642-1520"><xref:System.Globalization.CultureInfo.GetFormat%2A>Die-Methode gibt das <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1520">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>

-   <span data-ttu-id="21642-1521">Ein- <xref:System.Globalization.NumberFormatInfo> Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1521">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="21642-1522">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> gibt nur sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="21642-1522">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>

-   <span data-ttu-id="21642-1523">Ein benutzerdefiniertes Objekt, das implementiert <xref:System.IFormatProvider> und die- <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> Methode verwendet, um das Objekt zu instanziieren <xref:System.Globalization.NumberFormatInfo> , das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1523">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>

<span data-ttu-id="21642-1524">Wenn `provider` `null` den Wert hat, wird das- <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="21642-1524">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>

            ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21642-1525"><paramref name="style" /> ist kein <see cref="T:System.Globalization.NumberStyles" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1525"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="21642-1526">- oder -</span><span class="sxs-lookup"><span data-stu-id="21642-1526">-or-</span></span> 
 <span data-ttu-id="21642-1527"><paramref name="style" /> schließt das <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />-Flag oder <see cref="F:System.Globalization.NumberStyles.HexNumber" />-Flag mit einem anderen Wert ein.</span><span class="sxs-lookup"><span data-stu-id="21642-1527"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21642-1528"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1528"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="21642-1529"><paramref name="value" /> folgt nicht dem mit <paramref name="style" /> angegebenen Eingabemuster.</span><span class="sxs-lookup"><span data-stu-id="21642-1529"><paramref name="value" /> does not comply with the input pattern specified by <paramref name="style" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Parse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (value As String, style As NumberStyles, provider As IFormatProvider) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Parse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Parse (value, style, provider)" />
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Parse (string value, System.Globalization.NumberStyles style, IFormatProvider? provider);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1530">Eine Zeichenfolge, die eine zu konvertierende Zahl enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1530">A string that contains a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="21642-1531">Eine bitweise Kombination der Enumerationswerte, die das zulässige Format von <paramref name="value" /> angeben.</span><span class="sxs-lookup"><span data-stu-id="21642-1531">A bitwise combination of the enumeration values that specify the permitted format of <paramref name="value" />.</span></span></param>
        <param name="provider"><span data-ttu-id="21642-1532">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="value" /> bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1532">An object that provides culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="21642-1533">Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und kulturabhängigen Format in das entsprechende <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1533">Converts the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent.</span></span></summary>
        <returns><span data-ttu-id="21642-1534">Ein Wert, der der im <paramref name="value" />-Parameter angegebenen Zahl entspricht.</span><span class="sxs-lookup"><span data-stu-id="21642-1534">A value that is equivalent to the number specified in the <paramref name="value" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1535">Der- `style` Parameter definiert die Stilelemente (z. b. Leerzeichen, das positive oder negative Vorzeichen Symbol, das Gruppen Trennzeichen oder das Dezimaltrennzeichen), die im-Parameter zulässig sind, damit der Analyse Vorgang erfolgreich ausgeführt werden kann `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1535">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="21642-1536">`styles` muss eine Kombination von Bitflags aus der- <xref:System.Globalization.NumberStyles> Enumeration sein.</span><span class="sxs-lookup"><span data-stu-id="21642-1536">`styles` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="21642-1537">Der- `style` Parameter bewirkt, dass diese Methoden Überladung nützlich `value` ist, wenn die Zeichen folgen Darstellung eines hexadezimalen Werts enthält, wenn das Zahlensystem (Decimal oder hexadezimal), das von dargestellt `value` wird, nur zur Laufzeit bekannt ist oder wenn Sie Leerzeichen oder ein Vorzeichen Symbol in nicht zulassen möchten `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1537">The `style` parameter makes this method overload useful when `value` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `value` is known only at run time, or when you want to disallow white space or a sign symbol in `value`.</span></span>  
  
 <span data-ttu-id="21642-1538">Abhängig vom Wert von `style` kann der- `value` Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1538">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="21642-1539">[*WS*] [ *$* ] [*Sign*] [*digits*,]*Ziffern*[*. fractional_digits*] [E [*Sign*]*Exponential_digits*] [*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1539">[*ws*][*$*][*sign*][*digits*,]*digits*[*.fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="21642-1540">Wenn `style` enthält <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> , kann der- `value` Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1540">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="21642-1541">[*WS*] *Hexziffern*[*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1541">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="21642-1542">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="21642-1542">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="21642-1543">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="21642-1543">The following table describes each element.</span></span>  
  
|<span data-ttu-id="21642-1544">Element</span><span class="sxs-lookup"><span data-stu-id="21642-1544">Element</span></span>|<span data-ttu-id="21642-1545">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1545">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="21642-1546">*Gefangener*</span><span class="sxs-lookup"><span data-stu-id="21642-1546">*ws*</span></span>|<span data-ttu-id="21642-1547">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="21642-1547">Optional white space.</span></span> <span data-ttu-id="21642-1548">Leerräume können am Anfang von angezeigt `value` `style` werden, wenn das <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> -Flag enthält, und es kann am Ende von angezeigt werden, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1548">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="21642-1549">Ein kulturspezifisches Währungssymbol.</span><span class="sxs-lookup"><span data-stu-id="21642-1549">A culture-specific currency symbol.</span></span> <span data-ttu-id="21642-1550">Die Position in der Zeichenfolge wird durch die <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> -Eigenschaft und die-Eigenschaft der Kultur definiert, die <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> durch den-Parameter angegeben wird `provider` .</span><span class="sxs-lookup"><span data-stu-id="21642-1550">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the culture indicated by the `provider` parameter.</span></span> <span data-ttu-id="21642-1551">Das Währungssymbol der aktuellen Kultur kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1551">The current culture's currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1552">*sign*</span><span class="sxs-lookup"><span data-stu-id="21642-1552">*sign*</span></span>|<span data-ttu-id="21642-1553">Ein optionales Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1553">An optional sign.</span></span> <span data-ttu-id="21642-1554">Das Vorzeichen kann am Anfang von angezeigt `value` `style` werden, wenn das <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> -Flag enthält, und es kann am Ende von angezeigt werden, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1554">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="21642-1555">Klammern können in verwendet werden `value` , um einen negativen Wert anzugeben, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> Flag einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-1555">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1556">*Zahlen*</span><span class="sxs-lookup"><span data-stu-id="21642-1556">*digits*</span></span><br /><br /> <span data-ttu-id="21642-1557">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1557">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="21642-1558">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1558">*exponential_digits*</span></span>|<span data-ttu-id="21642-1559">Eine Sequenz von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="21642-1559">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="21642-1560">Bei *fractional_digits*ist nur die Ziffer 0 gültig.</span><span class="sxs-lookup"><span data-stu-id="21642-1560">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="21642-1561">*,*</span><span class="sxs-lookup"><span data-stu-id="21642-1561">*,*</span></span>|<span data-ttu-id="21642-1562">Ein kulturspezifisches Gruppen Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1562">A culture-specific group separator symbol.</span></span> <span data-ttu-id="21642-1563">Das Gruppen Trennzeichen der Kultur, die von angegeben wird, `provider` kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1563">The group separator symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1564">*.*</span><span class="sxs-lookup"><span data-stu-id="21642-1564">*.*</span></span>|<span data-ttu-id="21642-1565">Ein kulturspezifisches Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1565">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="21642-1566">Das Dezimaltrennzeichen der Kultur, die von angegeben wird, `provider` kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1566">The decimal point symbol of the culture designated by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="21642-1567">Nur die Ziffer 0 (null) kann als eine Bruch Ziffer angezeigt werden, damit der Analyse Vorgang erfolgreich ausgeführt werden kann. Wenn *fractional_digits* eine beliebige andere Ziffer einschließt, <xref:System.FormatException> wird eine ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="21642-1567">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="21642-1568">E</span><span class="sxs-lookup"><span data-stu-id="21642-1568">E</span></span>|<span data-ttu-id="21642-1569">Das Zeichen "e" oder "e", das angibt, dass der Wert in exponentieller Notation (Scientific) dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1569">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="21642-1570">Der- `value` Parameter kann eine Zahl in Exponentialnotation darstellen, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1570">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1571">*Hexziffern*</span><span class="sxs-lookup"><span data-stu-id="21642-1571">*hexdigits*</span></span>|<span data-ttu-id="21642-1572">Eine Sequenz von hexadezimalen Ziffern zwischen 0 und f oder 0 bis f.</span><span class="sxs-lookup"><span data-stu-id="21642-1572">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="21642-1573">Alle abschließenden NUL-Zeichen (U + 0000) in `s` werden vom Analyse-Vorgang unabhängig vom Wert des `style` Arguments ignoriert.</span><span class="sxs-lookup"><span data-stu-id="21642-1573">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="21642-1574">Eine Zeichenfolge, die nur Ziffern (die dem Format entspricht) entspricht, wird <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> immer erfolgreich analysiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1574">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="21642-1575">Die meisten der verbleibenden Member <xref:System.Globalization.NumberStyles> steuern Elemente, die möglicherweise vorhanden sind, jedoch nicht in der Eingabe Zeichenfolge vorhanden sein müssen.</span><span class="sxs-lookup"><span data-stu-id="21642-1575">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="21642-1576">In der folgenden Tabelle wird angegeben, wie sich einzelne Member <xref:System.Globalization.NumberStyles> auf die Elemente auswirken, die in vorhanden sein können `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1576">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="21642-1577">NumberStyles-Wert</span><span class="sxs-lookup"><span data-stu-id="21642-1577">NumberStyles value</span></span>|<span data-ttu-id="21642-1578">Als Wert zulässige Elemente zusätzlich zu Ziffern</span><span class="sxs-lookup"><span data-stu-id="21642-1578">Elements permitted in value in addition to digits</span></span>|  
|------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="21642-1579">Nur das *digits* -Element.</span><span class="sxs-lookup"><span data-stu-id="21642-1579">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="21642-1580">Die Dezimaltrennzeichen (.) und die Elemente der *Bruch Ziffern* .</span><span class="sxs-lookup"><span data-stu-id="21642-1580">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="21642-1581">Das Zeichen "e" oder "e", das die Exponentialschreibweise angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1581">The "e" or "E" character, which indicates exponential notation.</span></span> <span data-ttu-id="21642-1582">zusammen mit *Exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="21642-1582">along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="21642-1583">Das *WS* -Element am Anfang von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1583">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="21642-1584">Das *WS* -Element am Ende von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1584">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="21642-1585">Das *Sign* -Element am Anfang von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1585">The *sign* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="21642-1586">Das *Sign* -Element am Ende von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1586">The *sign* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="21642-1587">Das *Vorzeichen* Element in der Form von Klammern, das den numerischen Wert einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-1587">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="21642-1588">Das Gruppen Trennzeichen (,).</span><span class="sxs-lookup"><span data-stu-id="21642-1588">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="21642-1589">Das Currency ($)-Element.</span><span class="sxs-lookup"><span data-stu-id="21642-1589">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="21642-1590">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-1590">All elements.</span></span> <span data-ttu-id="21642-1591">Es ist jedoch nicht möglich, `value` eine hexadezimale Zahl oder eine Zahl in Exponentialnotation darzustellen.</span><span class="sxs-lookup"><span data-stu-id="21642-1591">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="21642-1592">Das *WS* -Element am Anfang oder Ende von `value` , *Signieren* Sie am Anfang von `value` und das Dezimaltrennzeichen (.).</span><span class="sxs-lookup"><span data-stu-id="21642-1592">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (.) symbol.</span></span> <span data-ttu-id="21642-1593">Der- `value` Parameter kann auch die Exponentialnotation verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-1593">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="21642-1594">Die `ws` `sign` Elemente,, Gruppen Trennzeichen (,) und Dezimaltrennzeichen (.).</span><span class="sxs-lookup"><span data-stu-id="21642-1594">The `ws`, `sign`, group separator (,), and decimal point (.) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="21642-1595">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-1595">All elements.</span></span> <span data-ttu-id="21642-1596">`value`Eine hexadezimale Zahl kann jedoch nicht dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1596">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="21642-1597">Wenn Sie die <xref:System.Numerics.BigInteger.Parse%2A> -Methode zum Roundtrip der Zeichen folgen Darstellung eines <xref:System.Numerics.BigInteger> Werts verwenden, der von der- <xref:System.Numerics.BigInteger.ToString%2A> Methode ausgegeben wurde, sollten Sie die- <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Format Bezeichner "R" verwenden, um die Zeichen folgen Darstellung des Werts zu generieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-1597">If you use the <xref:System.Numerics.BigInteger.Parse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="21642-1598">Andernfalls behält die Zeichen folgen Darstellung von <xref:System.Numerics.BigInteger> nur die 50 signifikantesten Ziffern des ursprünglichen Werts bei, und die Daten gehen möglicherweise verloren, wenn Sie die- <xref:System.Numerics.BigInteger.Parse%2A> Methode zum Wiederherstellen des <xref:System.Numerics.BigInteger> Werts verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-1598">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.Parse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="21642-1599">Anders als bei den anderen <xref:System.Globalization.NumberStyles> Werten, die das vorhanden sein bestimmter Stilelemente in zulassen `value` , <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> bedeutet der Stil Wert, dass die einzelnen numerischen Zeichen in `value` immer als hexadezimale Zeichen interpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1599">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for but do not require the presence of particular style elements in `value`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `value` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="21642-1600">Gültige hexadezimale Zeichen sind 0-9, a-f und A-f.</span><span class="sxs-lookup"><span data-stu-id="21642-1600">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="21642-1601">Die einzigen anderen Flags, die mit dem-Parameter kombiniert werden können, `style` sind <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> und <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1601">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-1602">(Die- <xref:System.Globalization.NumberStyles> Enumeration enthält einen zusammengesetzten Zahlen Stil, <xref:System.Globalization.NumberStyles.HexNumber> , der beide Leerzeichen enthält.)</span><span class="sxs-lookup"><span data-stu-id="21642-1602">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21642-1603">Wenn `value` die Zeichen folgen Darstellung einer hexadezimalen Zahl ist, kann Ihr keine Ergänzung (z. b. oder) vorangestellt werden, `0x` `&h` die Sie als hexadezimale Zahl unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="21642-1603">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="21642-1604">Dies bewirkt, dass die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="21642-1604">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="21642-1605">Wenn `value` eine hexadezimale Zeichenfolge ist, <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> interpretiert die Methode `value` als eine negative Zahl, die mit der zwei Komplement-Darstellung gespeichert wird, wenn die ersten beiden hexadezimalen Ziffern größer oder gleich sind `0x80` .</span><span class="sxs-lookup"><span data-stu-id="21642-1605">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="21642-1606">Das heißt, die-Methode interpretiert das Bit des ersten Bytes in der höchsten Reihenfolge `value` als Signier Bit.</span><span class="sxs-lookup"><span data-stu-id="21642-1606">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="21642-1607">Um sicherzustellen, dass eine hexadezimale Zeichenfolge ordnungsgemäß als positive Zahl interpretiert wird, muss die erste Ziffer in den `value` Wert 0 (null) aufweisen.</span><span class="sxs-lookup"><span data-stu-id="21642-1607">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="21642-1608">Die-Methode interpretiert z `0x80` . b. als negativen Wert, interpretiert aber entweder `0x080` oder `0x0080` als positiven Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1608">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="21642-1609">Das folgende Beispiel veranschaulicht den Unterschied zwischen hexadezimalen Zeichen folgen, die negative und positive Werte darstellen.</span><span class="sxs-lookup"><span data-stu-id="21642-1609">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/ParseHex1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/ParseHex1.vb#3)]  
  
 <span data-ttu-id="21642-1610">Der- `provider` Parameter ist eine- <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="21642-1610">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="21642-1611">Die zugehörige- <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das kulturspezifische Informationen zum Format von bereitstellt `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1611">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="21642-1612">In der Regel `provider` kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="21642-1612">Typically, `provider` can be any one of the following:</span></span>  
  
-   <span data-ttu-id="21642-1613">Ein- <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, die numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1613">A <xref:System.Globalization.CultureInfo> object that represents the culture that provides numeric formatting information.</span></span> <span data-ttu-id="21642-1614"><xref:System.Globalization.CultureInfo.GetFormat%2A>Die-Methode gibt das <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1614">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span>  
  
-   <span data-ttu-id="21642-1615">Ein- <xref:System.Globalization.NumberFormatInfo> Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1615">A <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="21642-1616">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> gibt nur sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="21642-1616">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="21642-1617">Ein benutzerdefiniertes Objekt, das implementiert <xref:System.IFormatProvider> und die- <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> Methode verwendet, um das Objekt zu instanziieren <xref:System.Globalization.NumberFormatInfo> , das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1617">A custom object that implements <xref:System.IFormatProvider> and uses the <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> method to instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="21642-1618">Wenn `provider` `null` den Wert hat, wird das- <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="21642-1618">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1619">Im folgenden Beispiel werden mehrere Aufrufe der <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> -Methode mithilfe verschiedener Kombinationen von-Werten für den `style` -Parameter und den-Parameter durchführt `provider` .</span><span class="sxs-lookup"><span data-stu-id="21642-1619">The following example makes several calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#2)]  
  
 <span data-ttu-id="21642-1620">Eine Reihe einzelner Aufrufe der- <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> Methode übergibt eine Instanz der folgenden `BigIntegerFormatProvider` Klasse, die eine Tilde (~) als negatives Vorzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1620">A number of the individual calls to the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/cs/Parse1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Parse/vb/Parse1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21642-1621"><paramref name="style" /> ist kein <see cref="T:System.Globalization.NumberStyles" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1621"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="21642-1622">- oder -</span><span class="sxs-lookup"><span data-stu-id="21642-1622">-or-</span></span> 
 <span data-ttu-id="21642-1623"><paramref name="style" /> schließt das <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />-Flag oder <see cref="F:System.Globalization.NumberStyles.HexNumber" />-Flag mit einem anderen Wert ein.</span><span class="sxs-lookup"><span data-stu-id="21642-1623"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21642-1624"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1624"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="21642-1625"><paramref name="value" /> folgt nicht dem mit <paramref name="style" /> angegebenen Eingabemuster.</span><span class="sxs-lookup"><span data-stu-id="21642-1625"><paramref name="value" /> does not comply with the input pattern specified by <paramref name="style" />.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Pow">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Pow (System.Numerics.BigInteger value, int exponent);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Pow(valuetype System.Numerics.BigInteger value, int32 exponent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Pow(System.Numerics.BigInteger,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Pow (value As BigInteger, exponent As Integer) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Pow(System::Numerics::BigInteger value, int exponent);" />
      <MemberSignature Language="F#" Value="static member Pow : System.Numerics.BigInteger * int -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Pow (value, exponent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Numerics.BigInteger" />
        <Parameter Name="exponent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1626">Die Zahl, deren <paramref name="exponent" />. Potenz berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1626">The number to raise to the <paramref name="exponent" /> power.</span></span></param>
        <param name="exponent"><span data-ttu-id="21642-1627">Der Exponent, mit dem <paramref name="value" /> potenziert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1627">The exponent to raise <paramref name="value" /> by.</span></span></param>
        <summary><span data-ttu-id="21642-1628">Potenziert einen <see cref="T:System.Numerics.BigInteger" />-Wert mit einem angegebenen Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1628">Raises a <see cref="T:System.Numerics.BigInteger" /> value to the power of a specified value.</span></span></summary>
        <returns><span data-ttu-id="21642-1629">Das Ergebnis der Potenzierung von <paramref name="value" /> mit <paramref name="exponent" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1629">The result of raising <paramref name="value" /> to the <paramref name="exponent" /> power.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1630">Die <xref:System.Numerics.BigInteger.Pow%2A> -Methode gibt 1 zurück, wenn der Wert des Exponent-Parameters 0 ist, oder wenn die Werte des `value` -Parameters und des- `exponent` Parameters 0 sind.</span><span class="sxs-lookup"><span data-stu-id="21642-1630">The <xref:System.Numerics.BigInteger.Pow%2A> method returns 1 if the value of the exponent parameter is 0, or if the values of both the `value` and `exponent` parameters are 0.</span></span> <span data-ttu-id="21642-1631">Wenn `exponent` den Wert 1 hat, <xref:System.Numerics.BigInteger.Pow%2A> gibt die Methode zurück `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1631">If `exponent` is 1, the <xref:System.Numerics.BigInteger.Pow%2A> method returns `value`.</span></span> <span data-ttu-id="21642-1632">Wenn `value` negativ ist, gibt die Methode ein negatives Ergebnis zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-1632">If `value` is negative, the method returns a negative result.</span></span>  
  
 <span data-ttu-id="21642-1633">Diese Methode entspricht der- <xref:System.Math.Pow%2A?displayProperty=nameWithType> Methode für primitive numerische Typen.</span><span class="sxs-lookup"><span data-stu-id="21642-1633">This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=nameWithType> method for primitive numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1634">Das folgende Beispiel veranschaulicht die exponentialisierung mit einem <xref:System.Numerics.BigInteger> Wert und einem Exponenten, dessen Wert zwischen 0 und 10 liegt.</span><span class="sxs-lookup"><span data-stu-id="21642-1634">The following example illustrates exponentiation using a <xref:System.Numerics.BigInteger> value and an exponent whose value ranges from 0 to 10.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.Class#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/cs/BigInteger_Examples.cs#32)]
 [!code-vb[System.Numeric.BigInteger.Class#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.Class/vb/BigInteger_Examples.vb#32)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="21642-1635"><paramref name="exponent" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1635"><paramref name="exponent" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Remainder">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Remainder (System.Numerics.BigInteger dividend, System.Numerics.BigInteger divisor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Remainder(valuetype System.Numerics.BigInteger dividend, valuetype System.Numerics.BigInteger divisor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Remainder(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remainder (dividend As BigInteger, divisor As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Remainder(System::Numerics::BigInteger dividend, System::Numerics::BigInteger divisor);" />
      <MemberSignature Language="F#" Value="static member Remainder : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Remainder (dividend, divisor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dividend" Type="System.Numerics.BigInteger" />
        <Parameter Name="divisor" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="dividend"><span data-ttu-id="21642-1636">Der zu dividierende Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1636">The value to be divided.</span></span></param>
        <param name="divisor"><span data-ttu-id="21642-1637">Der Wert, durch den dividiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1637">The value to divide by.</span></span></param>
        <summary><span data-ttu-id="21642-1638">Führt die Ganzzahldivision von zwei <see cref="T:System.Numerics.BigInteger" />-Werten aus und gibt den Rest zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-1638">Performs integer division on two <see cref="T:System.Numerics.BigInteger" /> values and returns the remainder.</span></span></summary>
        <returns><span data-ttu-id="21642-1639">Der Rest aus der Division von <paramref name="dividend" /> durch <paramref name="divisor" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1639">The remainder after dividing <paramref name="dividend" /> by <paramref name="divisor" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1640">Das Vorzeichen des Restwerts ist das Vorzeichen des `dividend` Parameters.</span><span class="sxs-lookup"><span data-stu-id="21642-1640">The sign of the remainder is the sign of the `dividend` parameter.</span></span>  
  
 <span data-ttu-id="21642-1641">Die- <xref:System.Numerics.BigInteger.Remainder%2A> Methode wird für Sprachen implementiert, die keine benutzerdefinierten Operatoren unterstützen.</span><span class="sxs-lookup"><span data-stu-id="21642-1641">The <xref:System.Numerics.BigInteger.Remainder%2A> method is implemented for languages that do not support custom operators.</span></span> <span data-ttu-id="21642-1642">Das Verhalten ist mit der Division identisch, wobei der Modulo-Operator verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1642">Its behavior is identical to division using the modulus operator.</span></span>  
  
 <span data-ttu-id="21642-1643">Bei Bedarf führt die-Methode automatisch eine implizite Konvertierung von anderen ganzzahligen Typen in Objekte aus, <xref:System.Numerics.BigInteger> bevor Sie den Modulo-Vorgang ausführt.</span><span class="sxs-lookup"><span data-stu-id="21642-1643">If necessary, the method automatically performs implicit conversion of other integral types to <xref:System.Numerics.BigInteger> objects before it performs the modulus operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1644">Im folgenden Beispiel wird der Rest der- <xref:System.Numerics.BigInteger.DivRem%2A> Methode mit dem Rest verglichen, der von der-Methode zurückgegeben wird <xref:System.Numerics.BigInteger.Remainder%2A> , um festzulegen, dass die beiden Methoden identische Rest-Methoden berechnen</span><span class="sxs-lookup"><span data-stu-id="21642-1644">The following example compares the remainder from the <xref:System.Numerics.BigInteger.DivRem%2A> method with the remainder returned by the <xref:System.Numerics.BigInteger.Remainder%2A> method to establish that the two methods calculate identical remainders.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/cs/Remainder1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.Remainder/vb/Remainder1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.DivideByZeroException"><span data-ttu-id="21642-1645"><paramref name="divisor" /> ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="21642-1645"><paramref name="divisor" /> is 0 (zero).</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.DivRem(System.Numerics.BigInteger,System.Numerics.BigInteger,System.Numerics.BigInteger@)" />
        <altmember cref="M:System.Numerics.BigInteger.op_Modulus(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public int Sign { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Sign" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Sign" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sign As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Sign { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Sign : int" Usage="System.Numerics.BigInteger.Sign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21642-1646">Ruft eine Zahl ab, die das Vorzeichen (negativ, positiv, oder 0 (null)) des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1646">Gets a number that indicates the sign (negative, positive, or zero) of the current <see cref="T:System.Numerics.BigInteger" /> object.</span></span></summary>
        <value><span data-ttu-id="21642-1647">Eine Zahl, die das Vorzeichen des <see cref="T:System.Numerics.BigInteger" />-Objekts angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-1647">A number that indicates the sign of the <see cref="T:System.Numerics.BigInteger" /> object, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="21642-1648">Number</span><span class="sxs-lookup"><span data-stu-id="21642-1648">Number</span></span> 
 </term><description> <span data-ttu-id="21642-1649">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1649">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="21642-1650">-1</span><span class="sxs-lookup"><span data-stu-id="21642-1650">-1</span></span> 
 </term><description> <span data-ttu-id="21642-1651">Der Wert dieses Objekts ist negativ.</span><span class="sxs-lookup"><span data-stu-id="21642-1651">The value of this object is negative.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-1652">0</span><span class="sxs-lookup"><span data-stu-id="21642-1652">0</span></span> 
 </term><description> <span data-ttu-id="21642-1653">Der Wert dieses Objekts ist null (0).</span><span class="sxs-lookup"><span data-stu-id="21642-1653">The value of this object is 0 (zero).</span></span>  
  
 </description></item><item><term> <span data-ttu-id="21642-1654">1</span><span class="sxs-lookup"><span data-stu-id="21642-1654">1</span></span> 
 </term><description> <span data-ttu-id="21642-1655">Der Wert dieses Objekts ist positiv.</span><span class="sxs-lookup"><span data-stu-id="21642-1655">The value of this object is positive.</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1656">Die- <xref:System.Numerics.BigInteger.Sign%2A> Eigenschaft entspricht der- <xref:System.Math.Sign%2A?displayProperty=nameWithType> Methode für die primitiven numerischen Typen.</span><span class="sxs-lookup"><span data-stu-id="21642-1656">The <xref:System.Numerics.BigInteger.Sign%2A> property is equivalent to the <xref:System.Math.Sign%2A?displayProperty=nameWithType> method for the primitive numeric types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Subtract">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Subtract (System.Numerics.BigInteger left, System.Numerics.BigInteger right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Numerics.BigInteger Subtract(valuetype System.Numerics.BigInteger left, valuetype System.Numerics.BigInteger right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.Subtract(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Subtract (left As BigInteger, right As BigInteger) As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Numerics::BigInteger Subtract(System::Numerics::BigInteger left, System::Numerics::BigInteger right);" />
      <MemberSignature Language="F#" Value="static member Subtract : System.Numerics.BigInteger * System.Numerics.BigInteger -&gt; System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Subtract (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Numerics.BigInteger" />
        <Parameter Name="right" Type="System.Numerics.BigInteger" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="21642-1657">Der Wert, von dem subtrahiert werden soll (der Minuend).</span><span class="sxs-lookup"><span data-stu-id="21642-1657">The value to subtract from (the minuend).</span></span></param>
        <param name="right"><span data-ttu-id="21642-1658">Der Wert, der subtrahiert werden soll (der Subtrahend).</span><span class="sxs-lookup"><span data-stu-id="21642-1658">The value to subtract (the subtrahend).</span></span></param>
        <summary><span data-ttu-id="21642-1659">Subtrahiert einen <see cref="T:System.Numerics.BigInteger" />-Wert von einem anderen und gibt das Ergebnis zurück.</span><span class="sxs-lookup"><span data-stu-id="21642-1659">Subtracts one <see cref="T:System.Numerics.BigInteger" /> value from another and returns the result.</span></span></summary>
        <returns><span data-ttu-id="21642-1660">Das Ergebnis der Subtraktion von <paramref name="right" /> von <paramref name="left" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1660">The result of subtracting <paramref name="right" /> from <paramref name="left" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1661">Sprachen, die keine benutzerdefinierten Operatoren unterstützen, können die- <xref:System.Numerics.BigInteger.Subtract%2A> Methode verwenden, um Subtraktion mithilfe von <xref:System.Numerics.BigInteger> Werten auszuführen.</span><span class="sxs-lookup"><span data-stu-id="21642-1661">Languages that do not support custom operators can use the <xref:System.Numerics.BigInteger.Subtract%2A> method to perform subtraction using <xref:System.Numerics.BigInteger> values.</span></span>  
  
 <span data-ttu-id="21642-1662">Die- <xref:System.Numerics.BigInteger.Subtract%2A> Methode ist ein nützlicher Ersatz für den Subtraktions Operator beim Instanziieren einer <xref:System.Numerics.BigInteger> Variablen, indem Sie Ihr den Unterschied aus der Subtraktion zuweist, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1662">The <xref:System.Numerics.BigInteger.Subtract%2A> method is a useful substitute for the subtraction operator when instantiating a <xref:System.Numerics.BigInteger> variable by assigning it the difference that results from subtraction, as shown in the following example.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/cs/Multiply1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.OperationMethods#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.OperationMethods/vb/Multiply1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Numerics.BigInteger.op_Subtraction(System.Numerics.BigInteger,System.Numerics.BigInteger)" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberSignature Language="F#" Value="abstract member System.IComparable.CompareTo : obj -&gt; int&#xA;override this.System.IComparable.CompareTo : obj -&gt; int" Usage="bigInteger.System.IComparable.CompareTo obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="21642-1663">Das zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="21642-1663">The object to compare.</span></span></param>
        <summary><span data-ttu-id="21642-1664">Vergleicht diese Instanz mit einem angegebenen Objekt und gibt eine ganze Zahl zurück, die angibt, ob der Wert dieser Instanz kleiner oder größer als der Wert des angegebenen Objekts ist oder mit diesem übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="21642-1664">Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</span></span></summary>
        <returns><span data-ttu-id="21642-1665">Eine ganze Zahl mit Vorzeichen, die die Beziehung der aktuellen Instanz zum <paramref name="obj" />-Parameter angibt, wie in der folgenden Tabelle veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="21642-1665">A signed integer that indicates the relationship of the current instance to the <paramref name="obj" /> parameter, as shown in the following table.</span></span>
          <list type="table"><listheader><term> <span data-ttu-id="21642-1666">Rückgabewert</span><span class="sxs-lookup"><span data-stu-id="21642-1666">Return value</span></span></term><description> <span data-ttu-id="21642-1667">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1667">Description</span></span></description></listheader><item><term> <span data-ttu-id="21642-1668">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-1668">Less than zero</span></span></term><description> <span data-ttu-id="21642-1669">Die aktuelle Instanz ist kleiner als <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1669">The current instance is less than <paramref name="obj" />.</span></span></description></item><item><term> <span data-ttu-id="21642-1670">Zero</span><span class="sxs-lookup"><span data-stu-id="21642-1670">Zero</span></span></term><description> <span data-ttu-id="21642-1671">Die aktuelle Instanz ist gleich <paramref name="obj" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1671">The current instance equals <paramref name="obj" />.</span></span></description></item><item><term> <span data-ttu-id="21642-1672">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="21642-1672">Greater than zero</span></span></term><description> <span data-ttu-id="21642-1673">Die aktuelle Instanz ist größer als <paramref name="obj" />, oder der <paramref name="obj" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1673">The current instance is greater than <paramref name="obj" />, or the <paramref name="obj" /> parameter is <see langword="null" />.</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

 <span data-ttu-id="21642-1674">Der `obj` Parameter muss einer der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="21642-1674">The `obj` parameter must be one of the following:</span></span>

-   <span data-ttu-id="21642-1675">Ein Objekt, dessen Lauf Zeittyp ist <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-1675">An object whose run-time type is <xref:System.Numerics.BigInteger>.</span></span>

-   <span data-ttu-id="21642-1676">Eine <xref:System.Object> Variable, deren Wert ist `null` .</span><span class="sxs-lookup"><span data-stu-id="21642-1676">An <xref:System.Object> variable whose value is `null`.</span></span> <span data-ttu-id="21642-1677">Wenn der Wert des- `obj` Parameters ist `null` , gibt die Methode 1 zurück, was angibt, dass die aktuelle Instanz größer als ist `obj` .</span><span class="sxs-lookup"><span data-stu-id="21642-1677">If the value of the `obj` parameter is `null`, the method returns 1, which indicates that the current instance is greater than `obj`.</span></span>

## Examples

<span data-ttu-id="21642-1678">Im folgenden Beispiel wird die- <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> Methode aufgerufen, um einen <xref:System.Numerics.BigInteger> Wert mit jedem Element in einem Objekt Array zu vergleichen:</span><span class="sxs-lookup"><span data-stu-id="21642-1678">The following example calls the <xref:System.Numerics.BigInteger.CompareTo%28System.Object%29> method to compare a <xref:System.Numerics.BigInteger> value with each element in an object array:</span></span>

[!code-csharp[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/cs/Example2.cs#4)]
[!code-vb[System.Numerics.BigInteger.CompareTo#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.CompareTo/vb/Example2.vb#4)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21642-1679"><paramref name="obj" /> ist keine <see cref="T:System.Numerics.BigInteger" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1679"><paramref name="obj" /> is not a <see cref="T:System.Numerics.BigInteger" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ ToByteArray();" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : unit -&gt; byte[]" Usage="bigInteger.ToByteArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21642-1680">Konvertiert einen <see cref="T:System.Numerics.BigInteger" />-Wert in ein Bytearray.</span><span class="sxs-lookup"><span data-stu-id="21642-1680">Converts a <see cref="T:System.Numerics.BigInteger" /> value to a byte array.</span></span></summary>
        <returns><span data-ttu-id="21642-1681">Der Wert des aktuellen, in ein Bytearray konvertierten <see cref="T:System.Numerics.BigInteger" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="21642-1681">The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1682">Die einzelnen Bytes im Array, die von dieser Methode zurückgegeben werden, werden in Little-in-der-Reihenfolge angezeigt</span><span class="sxs-lookup"><span data-stu-id="21642-1682">The individual bytes in the array returned by this method appear in little-endian order.</span></span> <span data-ttu-id="21642-1683">Das heißt, die nieder wertigen Bytes des Werts vor den Bytes höherer Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="21642-1683">That is, the lower-order bytes of the value precede the higher-order bytes.</span></span> <span data-ttu-id="21642-1684">Das erste Byte des Arrays reflektiert die ersten acht Bits des <xref:System.Numerics.BigInteger> Werts, das zweite Byte zeigt die nächsten acht Bits an usw.</span><span class="sxs-lookup"><span data-stu-id="21642-1684">The first byte of the array reflects the first eight bits of the <xref:System.Numerics.BigInteger> value, the second byte reflects the next eight bits, and so on.</span></span> <span data-ttu-id="21642-1685">Beispielsweise wird der Wert 1024 oder 0x0400 als das folgende Array von zwei Bytes gespeichert:</span><span class="sxs-lookup"><span data-stu-id="21642-1685">For example, the value 1024, or 0x0400, is stored as the following array of two bytes:</span></span>  
  
|<span data-ttu-id="21642-1686">Element</span><span class="sxs-lookup"><span data-stu-id="21642-1686">Element</span></span>|<span data-ttu-id="21642-1687">Bytewert</span><span class="sxs-lookup"><span data-stu-id="21642-1687">Byte value</span></span>|  
|-------------|----------------|  
|<span data-ttu-id="21642-1688">0</span><span class="sxs-lookup"><span data-stu-id="21642-1688">0</span></span>|<span data-ttu-id="21642-1689">0x00</span><span class="sxs-lookup"><span data-stu-id="21642-1689">0x00</span></span>|  
|<span data-ttu-id="21642-1690">1</span><span class="sxs-lookup"><span data-stu-id="21642-1690">1</span></span>|<span data-ttu-id="21642-1691">0x04</span><span class="sxs-lookup"><span data-stu-id="21642-1691">0x04</span></span>|  
  
 <span data-ttu-id="21642-1692">Negative Werte werden in das Array geschrieben, wobei die zwei Komplement Darstellung in der möglichst kompakten Form verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1692">Negative values are written to the array using two's complement representation in the most compact form possible.</span></span> <span data-ttu-id="21642-1693">Beispielsweise wird-1 als einzelnes Byte dargestellt, dessen Wert `0xFF` anstelle von als Array mit mehreren Elementen (z `0xFF` . b `0xFF` . oder,, `0xFF` `0xFF` , `0xFF` `0xFF` ) ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1693">For example, -1 is represented as a single byte whose value is `0xFF` instead of as an array with multiple elements, such as `0xFF`, `0xFF` or `0xFF`, `0xFF`, `0xFF`, `0xFF`.</span></span>  
  
 <span data-ttu-id="21642-1694">Da in der zwei Komplement-Darstellung immer das höchste Bit des letzten Bytes im-Array (das Byte an der Position <xref:System.Array.Length%2A?displayProperty=nameWithType> `- 1` ) als Signier Bit interpretiert wird, gibt die-Methode ein Bytearray mit einem zusätzlichen-Element zurück, dessen Wert 0 ist, um positive Werte zu unterscheiden, die andernfalls so interpretiert werden können, dass Ihre Vorzeichen Bits festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="21642-1694">Because two's complement representation always interprets the highest-order bit of the last byte in the array (the byte at position <xref:System.Array.Length%2A?displayProperty=nameWithType>`- 1`) as the sign bit, the method returns a byte array with an extra element whose value is zero to disambiguate positive values that could otherwise be interpreted as having their sign bits set.</span></span> <span data-ttu-id="21642-1695">Beispielsweise wird der Wert 120 oder `0x78` als Einzel Byte-Array dargestellt: `0x78` .</span><span class="sxs-lookup"><span data-stu-id="21642-1695">For example, the value 120 or `0x78` is represented as a single-byte array: `0x78`.</span></span> <span data-ttu-id="21642-1696">128, oder `0x80` , wird jedoch als 2-Byte-Array dargestellt: `0x80` , `0x00` .</span><span class="sxs-lookup"><span data-stu-id="21642-1696">However, 128, or `0x80`, is represented as a two-byte array: `0x80`, `0x00`.</span></span>  
  
 <span data-ttu-id="21642-1697">Sie können einen Roundtrip <xref:System.Numerics.BigInteger> für einen Wert durchsetzen, indem Sie ihn in einem Bytearray speichern und dann mit dem- <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> Konstruktor wiederherstellen.</span><span class="sxs-lookup"><span data-stu-id="21642-1697">You can round-trip a <xref:System.Numerics.BigInteger> value by storing it to a byte array and then restoring it using the <xref:System.Numerics.BigInteger.%23ctor%28System.Byte%5B%5D%29> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="21642-1698">Wenn der Code den Wert einzelner Bytes in dem Array ändert, das von dieser Methode zurückgegeben wird, bevor der Wert wieder hergestellt wird, müssen Sie sicherstellen, dass das Signier Bit nicht versehentlich geändert wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1698">If your code modifies the value of individual bytes in the array returned by this method before it restores the value, you must make sure that you do not unintentionally change the sign bit.</span></span> <span data-ttu-id="21642-1699">Wenn die Änderungen z. b. einen positiven Wert erhöhen, sodass das Bit mit der höchsten Ordnung im letzten Element des Byte Arrays festgelegt wird, können Sie ein neues Byte hinzufügen, dessen Wert 0 (null) bis zum Ende des Arrays ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1699">For example, if your modifications increase a positive value so that the highest-order bit in the last element of the byte array becomes set, you can add a new byte whose value is zero to the end of the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1700">Im folgenden Beispiel wird veranschaulicht, wie einige <xref:System.Numerics.BigInteger> Werte in Byte Arrays dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1700">The following example illustrates how some <xref:System.Numerics.BigInteger> values are represented in byte arrays.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/cs/ToByteArray1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToByteArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToByteArray/vb/ToByteArray1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToByteArray">
      <MemberSignature Language="C#" Value="public byte[] ToByteArray (bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ToByteArray(bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToByteArray(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToByteArray (Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Byte()" />
      <MemberSignature Language="F#" Value="member this.ToByteArray : bool * bool -&gt; byte[]" Usage="bigInteger.ToByteArray (isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="isBigEndian" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="isUnsigned"><span data-ttu-id="21642-1701"><see langword="true" />, um die Codierung ohne Vorzeichen zu verwenden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1701"><see langword="true" /> to use unsigned encoding; otherwise, <see langword="false" />.</span></span></param>
        <param name="isBigEndian"><span data-ttu-id="21642-1702"><see langword="true" />, um die Bytes in einer Big-Endian-Bytereihenfolge zu schreiben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1702"><see langword="true" /> to write the bytes in a big-endian byte order; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="21642-1703">Liefert den Wert dieses <see cref="T:System.Numerics.BigInteger" /> als Bytearray mit der kleinstmöglichen Anzahl von Bytes.</span><span class="sxs-lookup"><span data-stu-id="21642-1703">Returns the value of this <see cref="T:System.Numerics.BigInteger" /> as a byte array using the fewest number of bytes possible.</span></span> <span data-ttu-id="21642-1704">Wenn der Wert Null (0) ist, wird ein Array von einem Byte zurückgegeben, dessen Element 0x00 ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1704">If the value is zero, returns an array of one byte whose element is 0x00.</span></span></summary>
        <returns><span data-ttu-id="21642-1705">Der Wert des aktuellen, in ein Bytearray konvertierten <see cref="T:System.Numerics.BigInteger" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="21642-1705">The value of the current <see cref="T:System.Numerics.BigInteger" /> object converted to an array of bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="21642-1706">Der ganzzahlige Wert `33022` kann in vier unterschiedlichen Arrays exportiert werden:</span><span class="sxs-lookup"><span data-stu-id="21642-1706">The integer value `33022` can be exported in four different arrays:</span></span>

| <span data-ttu-id="21642-1707">Eigenschaften</span><span class="sxs-lookup"><span data-stu-id="21642-1707">Properties</span></span>                           | <span data-ttu-id="21642-1708">Ergebnis</span><span class="sxs-lookup"><span data-stu-id="21642-1708">Result</span></span>                          |
|--------------------------------------|---------------------------------|
| `isUnsigned: false, isBigEndian: false` | `new byte[] { 0xFE, 0x80, 0x00 }` |
| `isUnsigned: false, isBigEndian: true`  | `new byte[] { 0x00, 0x80, 0xFE }` |
| `isUnsigned: true, isBigEndian: false`  | `new byte[] { 0xFE, 0x80 } `      |
| `isUnsigned: true, isBigEndian: true`   | `new byte[] { 0x80, 0xFE }`       |

          ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-1709">Wenn <paramref name="isUnsigned" /><see langword="true" /> und <see cref="P:System.Numerics.BigInteger.Sign" /> negativ ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1709">If <paramref name="isUnsigned" /> is <see langword="true" /> and <see cref="P:System.Numerics.BigInteger.Sign" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-1710">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="21642-1710">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="bigInteger.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="21642-1711">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="21642-1711">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="21642-1712">Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Numerics.BigInteger" />-Werts.</span><span class="sxs-lookup"><span data-stu-id="21642-1712">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1713">Die- <xref:System.Numerics.BigInteger.ToString> Methode formatiert einen <xref:System.Numerics.BigInteger> Wert im Format "R" oder im Roundtrip-Format der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="21642-1713">The <xref:System.Numerics.BigInteger.ToString> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format of the current culture.</span></span> <span data-ttu-id="21642-1714">Wenn Sie ein anderes Format oder eine andere Kultur angeben möchten, verwenden Sie die anderen über Ladungen der- <xref:System.Numerics.BigInteger.ToString%2A> Methode wie folgt:</span><span class="sxs-lookup"><span data-stu-id="21642-1714">If you want to specify a different format or culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="21642-1715">So verwenden Sie das Format</span><span class="sxs-lookup"><span data-stu-id="21642-1715">To use format</span></span>|<span data-ttu-id="21642-1716">Für Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1716">For culture</span></span>|<span data-ttu-id="21642-1717">Verwenden der Überladung</span><span class="sxs-lookup"><span data-stu-id="21642-1717">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="21642-1718">Roundtrip-Format ("R")</span><span class="sxs-lookup"><span data-stu-id="21642-1718">Round-trip ("R") format</span></span>|<span data-ttu-id="21642-1719">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1719">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%2A>|  
|<span data-ttu-id="21642-1720">Ein bestimmtes Format</span><span class="sxs-lookup"><span data-stu-id="21642-1720">A specific format</span></span>|<span data-ttu-id="21642-1721">Standard Kultur (aktuell)</span><span class="sxs-lookup"><span data-stu-id="21642-1721">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="21642-1722">Ein bestimmtes Format</span><span class="sxs-lookup"><span data-stu-id="21642-1722">A specific format</span></span>|<span data-ttu-id="21642-1723">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1723">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="21642-1724">Die Zeichen folgen Darstellung des <xref:System.Numerics.BigInteger> Werts enthält ein negatives Vorzeichen, wenn der Wert negativ ist, und eine Folge von Ziffern zwischen 0 und 9 ohne führende Nullen.</span><span class="sxs-lookup"><span data-stu-id="21642-1724">The string representation of the <xref:System.Numerics.BigInteger> value includes a negative sign if its value is negative, and a sequence of digits ranging from 0 to 9 without leading zeros.</span></span> <span data-ttu-id="21642-1725">Das negative Vorzeichen wird durch das- <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur definiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1725">The negative sign is defined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1726">Im folgenden Beispiel wird ein- <xref:System.Numerics.BigInteger> Wert mit der-Standardmethode angezeigt <xref:System.Numerics.BigInteger.ToString> .</span><span class="sxs-lookup"><span data-stu-id="21642-1726">The following example displays a <xref:System.Numerics.BigInteger> value by using the default <xref:System.Numerics.BigInteger.ToString> method.</span></span> <span data-ttu-id="21642-1727">Außerdem werden die Zeichen folgen Darstellungen des <xref:System.Numerics.BigInteger> Werts angezeigt, der sich aus der Verwendung einiger Standardformat Bearbeiter ergibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1727">It also displays the string representations of the <xref:System.Numerics.BigInteger> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="21642-1728">Die Beispiele werden mithilfe der Formatierungs Konventionen der Kultur "en-US" angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1728">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="21642-1729">Standardmäßige Zahlenformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="21642-1729">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings"><span data-ttu-id="21642-1730">Benutzerdefinierte Zahlenformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="21642-1730">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="bigInteger.ToString provider" />
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider? provider);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="21642-1731">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1731">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="21642-1732">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts unter Verwendung der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="21642-1732">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified culture-specific formatting information.</span></span></summary>
        <returns><span data-ttu-id="21642-1733">Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Numerics.BigInteger" />-Werts im durch den <paramref name="provider" />-Parameter angegebenen Format.</span><span class="sxs-lookup"><span data-stu-id="21642-1733">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="provider" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1734">Die-Methode formatiert <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> einen <xref:System.Numerics.BigInteger> Wert im "R"-oder Roundtrip-Format unter Verwendung des- <xref:System.Globalization.NumberFormatInfo> Objekts einer angegebenen Kultur.</span><span class="sxs-lookup"><span data-stu-id="21642-1734">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in the "R", or round-trip, format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="21642-1735">Wenn Sie ein anderes Format oder die aktuelle Kultur angeben möchten, verwenden Sie die anderen über Ladungen der- <xref:System.Numerics.BigInteger.ToString%2A> Methode wie folgt:</span><span class="sxs-lookup"><span data-stu-id="21642-1735">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="21642-1736">So verwenden Sie das Format</span><span class="sxs-lookup"><span data-stu-id="21642-1736">To use format</span></span>|<span data-ttu-id="21642-1737">Für Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1737">For culture</span></span>|<span data-ttu-id="21642-1738">Verwenden der Überladung</span><span class="sxs-lookup"><span data-stu-id="21642-1738">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="21642-1739">Roundtrip-Format ("R")</span><span class="sxs-lookup"><span data-stu-id="21642-1739">Round-trip ("R") format</span></span>|<span data-ttu-id="21642-1740">Standard Kultur (aktuell)</span><span class="sxs-lookup"><span data-stu-id="21642-1740">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="21642-1741">Ein bestimmtes Format</span><span class="sxs-lookup"><span data-stu-id="21642-1741">A specific format</span></span>|<span data-ttu-id="21642-1742">Standard Kultur (aktuell)</span><span class="sxs-lookup"><span data-stu-id="21642-1742">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
|<span data-ttu-id="21642-1743">Ein bestimmtes Format</span><span class="sxs-lookup"><span data-stu-id="21642-1743">A specific format</span></span>|<span data-ttu-id="21642-1744">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1744">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="21642-1745">Der- `provider` Parameter ist eine- <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="21642-1745">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="21642-1746">Die zugehörige- <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das kulturspezifische Informationen zum Format der von dieser Methode zurückgegebenen Zeichenfolge bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1746">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="21642-1747">Wenn `provider` den `null` Wert hat, <xref:System.Numerics.BigInteger> wird der Wert mithilfe des- <xref:System.Globalization.NumberFormatInfo> Objekts der aktuellen Kultur formatiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1747">If `provider` is `null`, the <xref:System.Numerics.BigInteger> value is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="21642-1748">Die einzige Eigenschaft des- <xref:System.Globalization.NumberFormatInfo> Objekts, das die Zeichen folgen Darstellung des <xref:System.Numerics.BigInteger> Werts mit dem allgemeinen Format Bezeichner steuert <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> , ist, wodurch das Zeichen definiert wird, das das negative Vorzeichen darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1748">The only property of the <xref:System.Globalization.NumberFormatInfo> object that controls the string representation of the <xref:System.Numerics.BigInteger> value using the general format specifier is <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>, which defines the character that represents the negative sign.</span></span>  
  
 <span data-ttu-id="21642-1749">Der `provider` Parameter kann eines der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="21642-1749">The `provider` parameter can be one of the following:</span></span>  
  
-   <span data-ttu-id="21642-1750">Ein- <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, die Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1750">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="21642-1751">Das <xref:System.Globalization.NumberFormatInfo> Objekt, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1751">The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
-   <span data-ttu-id="21642-1752">Ein benutzerdefiniertes Objekt, das implementiert <xref:System.IFormatProvider> .</span><span class="sxs-lookup"><span data-stu-id="21642-1752">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="21642-1753"><xref:System.IFormatProvider.GetFormat%2A>Die-Methode gibt das <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1753">Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1754">Im folgenden Beispiel wird ein benutzerdefiniertes-Objekt instanziiert <xref:System.Globalization.NumberFormatInfo> , das die Tilde (~) als negatives Vorzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1754">The following example instantiates a custom <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span> <span data-ttu-id="21642-1755">Die- <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> Methode verwendet dann das benutzerdefinierte- <xref:System.Globalization.NumberFormatInfo> Objekt, um einen negativen <xref:System.Numerics.BigInteger> Wert anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="21642-1755">The <xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29> method then uses the custom <xref:System.Globalization.NumberFormatInfo> object to display a negative <xref:System.Numerics.BigInteger> value.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/cs/System.Numeric.BigInteger.ToString.cs#1)]
 [!code-vb[System.Numeric.BigInteger.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.ToString/vb/System.Numeric.BigInteger.ToString.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="bigInteger.ToString format" />
      <MemberSignature Language="C#" Value="public string ToString (string? format);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="21642-1756">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="21642-1756">A standard or custom numeric format string.</span></span></param>
        <summary><span data-ttu-id="21642-1757">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts unter Verwendung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="21642-1757">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format.</span></span></summary>
        <returns><span data-ttu-id="21642-1758">Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Numerics.BigInteger" />-Werts im durch den <paramref name="format" />-Parameter angegebenen Format.</span><span class="sxs-lookup"><span data-stu-id="21642-1758">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value in the format specified by the <paramref name="format" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1759">Die- <xref:System.Numerics.BigInteger.ToString%28System.String%29> Methode formatiert einen <xref:System.Numerics.BigInteger> Wert in einem angegebenen Format mithilfe eines- <xref:System.Globalization.NumberFormatInfo> Objekts, das die Konventionen der aktuellen Kultur darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1759">The <xref:System.Numerics.BigInteger.ToString%28System.String%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="21642-1760">Wenn Sie "R" oder "Roundtrip" verwenden möchten, können Sie die anderen über Ladungen der- <xref:System.Numerics.BigInteger.ToString%2A> Methode wie folgt verwenden:</span><span class="sxs-lookup"><span data-stu-id="21642-1760">If you want to use the "R", or round-trip, format or specify a different culture, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="21642-1761">So verwenden Sie das Format</span><span class="sxs-lookup"><span data-stu-id="21642-1761">To use format</span></span>|<span data-ttu-id="21642-1762">Für Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1762">For culture</span></span>|<span data-ttu-id="21642-1763">Verwenden der Überladung</span><span class="sxs-lookup"><span data-stu-id="21642-1763">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="21642-1764">Roundtrip-Format ("R")</span><span class="sxs-lookup"><span data-stu-id="21642-1764">Round-trip ("R") format</span></span>|<span data-ttu-id="21642-1765">Standard Kultur (aktuell)</span><span class="sxs-lookup"><span data-stu-id="21642-1765">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="21642-1766">Roundtrip-Format ("R")</span><span class="sxs-lookup"><span data-stu-id="21642-1766">Round-trip ("R") format</span></span>|<span data-ttu-id="21642-1767">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1767">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="21642-1768">Ein bestimmtes Format</span><span class="sxs-lookup"><span data-stu-id="21642-1768">A specific format</span></span>|<span data-ttu-id="21642-1769">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1769">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="21642-1770">Der- `format` Parameter kann eine beliebige gültige [numerische Standard Zeichenfolge](/dotnet/standard/base-types/standard-numeric-format-strings)oder eine beliebige Kombination von [benutzerdefinierten numerischen Format](/dotnet/standard/base-types/custom-numeric-format-strings)Zeichenfolgen sein.</span><span class="sxs-lookup"><span data-stu-id="21642-1770">The `format` parameter can be any valid [standard numeric string](/dotnet/standard/base-types/standard-numeric-format-strings), or any combination of [custom numeric format strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span> <span data-ttu-id="21642-1771">Wenn `format` gleich <xref:System.String.Empty?displayProperty=nameWithType> oder ist `null` , wird der Rückgabewert des aktuellen- <xref:System.Numerics.BigInteger> Objekts mit dem Roundtrip-Format Bezeichner ("R") formatiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1771">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="21642-1772">Wenn `format` ein beliebiger anderer Wert ist, löst die Methode eine aus <xref:System.FormatException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1772">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="21642-1773">Der .NET Framework bietet umfassende Formatierungs Unterstützung, die in den folgenden Formatierungs Themen ausführlicher beschrieben wird:</span><span class="sxs-lookup"><span data-stu-id="21642-1773">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="21642-1774">Weitere Informationen zu numerischen Format Bezeichnerzeichen finden Sie unter [Standard mäßige Zahlenformat](/dotnet/standard/base-types/standard-numeric-format-strings) Zeichenfolgen und [benutzerdefinierte Zahlenformat](/dotnet/standard/base-types/custom-numeric-format-strings)Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="21642-1774">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="21642-1775">Weitere Informationen zur Unterstützung der Formatierung in der .NET Framework finden Sie unter [Formatieren von Typen](/dotnet/standard/base-types/formatting-types).</span><span class="sxs-lookup"><span data-stu-id="21642-1775">For more information about support for formatting in the .NET Framework, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="21642-1776">Das Format der zurückgegebenen Zeichenfolge wird durch das- <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur bestimmt.</span><span class="sxs-lookup"><span data-stu-id="21642-1776">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="21642-1777">Abhängig vom- `format` Parameter steuert dieses-Objekt Symbole wie das negative Vorzeichen, das Gruppen Trennzeichen und das Dezimaltrennzeichen in der Ausgabe Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="21642-1777">Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.</span></span> <span data-ttu-id="21642-1778">Um Formatierungsinformationen für andere Kulturen als die aktuelle Kultur bereitzustellen, müssen Sie die-Überladung aufrufen <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> .</span><span class="sxs-lookup"><span data-stu-id="21642-1778">To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1779">Im folgenden Beispiel wird ein-Wert initialisiert und mit den <xref:System.Numerics.BigInteger> einzelnen Standardformat Zeichenfolgen und einigen benutzerdefinierten Format Zeichenfolgen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1779">The following example initializes a <xref:System.Numerics.BigInteger> value and displays it by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="21642-1780"><paramref name="format" /> ist keine gültige Formatzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="21642-1780"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="21642-1781">Standardmäßige Zahlenformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="21642-1781">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings"><span data-ttu-id="21642-1782">Benutzerdefinierte Zahlenformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="21642-1782">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="bigInteger.ToString (format, provider)" />
      <MemberSignature Language="C#" Value="public string? ToString (string format, IFormatProvider provider);" FrameworkAlternate="net-5.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="21642-1783">Eine standardmäßige oder benutzerdefinierte numerische Formatierungszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="21642-1783">A standard or custom numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="21642-1784">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1784">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="21642-1785">Konvertiert den numerischen Wert des aktuellen <see cref="T:System.Numerics.BigInteger" />-Objekts unter Verwendung des angegebenen Formats und der angegebenen kulturspezifischen Formatierungsinformationen in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="21642-1785">Converts the numeric value of the current <see cref="T:System.Numerics.BigInteger" /> object to its equivalent string representation by using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="21642-1786">Die Zeichenfolgendarstellung des aktuellen <see cref="T:System.Numerics.BigInteger" />-Werts entsprechend den Angaben in den Parametern <paramref name="format" /> und <paramref name="provider" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1786">The string representation of the current <see cref="T:System.Numerics.BigInteger" /> value as specified by the <paramref name="format" /> and <paramref name="provider" /> parameters.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1787">Die- <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> Methode formatiert einen <xref:System.Numerics.BigInteger> Wert in einem angegebenen Format unter Verwendung des- <xref:System.Globalization.NumberFormatInfo> Objekts einer angegebenen Kultur.</span><span class="sxs-lookup"><span data-stu-id="21642-1787">The <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Numerics.BigInteger> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="21642-1788">Wenn Sie das Roundtrip-Format oder die Standard Kultur Einstellungen verwenden möchten, verwenden Sie die anderen über Ladungen der- <xref:System.Numerics.BigInteger.ToString%2A> Methode wie folgt:</span><span class="sxs-lookup"><span data-stu-id="21642-1788">If you want to use the round-trip format or default culture settings, use the other overloads of the <xref:System.Numerics.BigInteger.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="21642-1789">So verwenden Sie das Format</span><span class="sxs-lookup"><span data-stu-id="21642-1789">To use format</span></span>|<span data-ttu-id="21642-1790">Für Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1790">For culture</span></span>|<span data-ttu-id="21642-1791">Verwenden der Überladung</span><span class="sxs-lookup"><span data-stu-id="21642-1791">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="21642-1792">Roundtrip-Format ("R")</span><span class="sxs-lookup"><span data-stu-id="21642-1792">Round-trip ("R") format</span></span>|<span data-ttu-id="21642-1793">Standard Kultur (aktuell)</span><span class="sxs-lookup"><span data-stu-id="21642-1793">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString>|  
|<span data-ttu-id="21642-1794">Roundtrip-Format ("R")</span><span class="sxs-lookup"><span data-stu-id="21642-1794">Round-trip ("R") format</span></span>|<span data-ttu-id="21642-1795">Eine bestimmte Kultur</span><span class="sxs-lookup"><span data-stu-id="21642-1795">A specific culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="21642-1796">Ein bestimmtes Format</span><span class="sxs-lookup"><span data-stu-id="21642-1796">A specific format</span></span>|<span data-ttu-id="21642-1797">Standard Kultur (aktuell)</span><span class="sxs-lookup"><span data-stu-id="21642-1797">Default (current) culture</span></span>|<xref:System.Numerics.BigInteger.ToString%28System.String%29>|  
  
 <span data-ttu-id="21642-1798">Der- `format` Parameter kann eine beliebige gültige  [numerische Standard Zeichenfolge](/dotnet/standard/base-types/standard-numeric-format-strings)oder eine beliebige Kombination von [benutzerdefinierten numerischen Format](/dotnet/standard/base-types/custom-numeric-format-strings)Zeichenfolgen sein.</span><span class="sxs-lookup"><span data-stu-id="21642-1798">The `format` parameter can be any valid  [standard numeric string](/dotnet/standard/base-types/standard-numeric-format-strings), or any combination of [custom numeric format strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span> <span data-ttu-id="21642-1799">Wenn `format` gleich <xref:System.String.Empty?displayProperty=nameWithType> oder ist `null` , wird der Rückgabewert des aktuellen- <xref:System.Numerics.BigInteger> Objekts mit dem Roundtrip-Format Bezeichner ("R") formatiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1799">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.Numerics.BigInteger> object is formatted with the round-trip format specifier ("R").</span></span> <span data-ttu-id="21642-1800">Wenn `format` ein beliebiger anderer Wert ist, löst die Methode eine aus <xref:System.FormatException> .</span><span class="sxs-lookup"><span data-stu-id="21642-1800">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="21642-1801">Der .NET Framework bietet umfassende Formatierungs Unterstützung, die in den folgenden Formatierungs Themen ausführlicher beschrieben wird:</span><span class="sxs-lookup"><span data-stu-id="21642-1801">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="21642-1802">Weitere Informationen zu numerischen Format Bezeichnerzeichen finden Sie unter [Standard mäßige Zahlenformat](/dotnet/standard/base-types/standard-numeric-format-strings) Zeichenfolgen und [benutzerdefinierte Zahlenformat](/dotnet/standard/base-types/custom-numeric-format-strings)Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="21642-1802">For more information about numeric format specifiers, see [Standard Numeric Format Strings](/dotnet/standard/base-types/standard-numeric-format-strings) and [Custom Numeric Format Strings](/dotnet/standard/base-types/custom-numeric-format-strings).</span></span>  
  
-   <span data-ttu-id="21642-1803">Weitere Informationen zur Unterstützung der Formatierung in der .NET Framework finden Sie unter [Formatieren von Typen](/dotnet/standard/base-types/formatting-types).</span><span class="sxs-lookup"><span data-stu-id="21642-1803">For more information about support for formatting in the .NET Framework, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="21642-1804">Der- `provider` Parameter ist eine- <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="21642-1804">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="21642-1805">Die zugehörige- <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das kulturspezifische Informationen zum Format der von dieser Methode zurückgegebenen Zeichenfolge bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1805">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="21642-1806">Wenn die <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> -Methode aufgerufen wird, ruft Sie die `provider` -Methode des-Parameters auf <xref:System.IFormatProvider.GetFormat%2A> und übergibt ihr ein- <xref:System.Type> Objekt, das den- <xref:System.Globalization.NumberFormatInfo> Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1806">When the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="21642-1807">Die- <xref:System.IFormatProvider.GetFormat%2A> Methode gibt dann das-Objekt zurück, <xref:System.Globalization.NumberFormatInfo> das Informationen zum Formatieren des- `value` Parameters bereitstellt, z. b. das negative Vorzeichen Symbol, das Gruppen Trennzeichen Symbol oder das Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1807">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the `value` parameter, such as the negative sign symbol, the group separator symbol, or the decimal point symbol.</span></span> <span data-ttu-id="21642-1808">Es gibt drei Möglichkeiten, den-Parameter zu verwenden, `provider` um Formatierungsinformationen für die-Methode bereitzustellen <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> :</span><span class="sxs-lookup"><span data-stu-id="21642-1808">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.Numerics.BigInteger.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="21642-1809">Sie können ein- <xref:System.Globalization.CultureInfo> Objekt übergeben, das die Kultur darstellt, die Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1809">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="21642-1810"><xref:System.Globalization.CultureInfo.GetFormat%2A>Die-Methode gibt das- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das numerische Formatierungsinformationen für diese Kultur bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1810">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="21642-1811">Sie können das tatsächliche- <xref:System.Globalization.NumberFormatInfo> Objekt übergeben, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1811">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="21642-1812">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> gibt nur sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="21642-1812">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="21642-1813">Sie können ein benutzerdefiniertes Objekt übergeben, das implementiert <xref:System.IFormatProvider> .</span><span class="sxs-lookup"><span data-stu-id="21642-1813">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="21642-1814"><xref:System.IFormatProvider.GetFormat%2A>Die-Methode instanziiert und gibt das <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1814">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="21642-1815">Wenn den Wert `provider` `null` hat, basiert die Formatierung der zurückgegebenen Zeichenfolge auf dem- <xref:System.Globalization.NumberFormatInfo> Objekt der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="21642-1815">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1816">Im folgenden Beispiel <xref:System.Numerics.BigInteger> wird ein-Wert initialisiert und mithilfe einer Standardformat Zeichenfolge und einem- <xref:System.Globalization.NumberFormatInfo> Objekt, das die Tilde (~) als negatives Vorzeichen definiert, der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="21642-1816">The following example initializes a <xref:System.Numerics.BigInteger> value, and displays it to the console using a standard format string and a <xref:System.Globalization.NumberFormatInfo> object that defines the tilde (~) as a negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/cs/ToString1.cs#4)]
 [!code-vb[System.Numerics.BigInteger.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.ToString/vb/ToString1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="21642-1817"><paramref name="format" /> ist keine gültige Formatzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="21642-1817"><paramref name="format" /> is not a valid format string.</span></span></exception>
        <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings"><span data-ttu-id="21642-1818">Standardmäßige Zahlenformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="21642-1818">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings"><span data-ttu-id="21642-1819">Benutzerdefinierte Zahlenformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="21642-1819">Custom Numeric Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider? provider = default);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = Nothing, Optional provider As IFormatProvider = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; * int * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="bigInteger.TryFormat (destination, charsWritten, format, provider)" />
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = default, IFormatProvider provider = default);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="21642-1820">Die Spanne von Zeichen, in die diese Instanz geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="21642-1820">The span of characters into which this instance will be written.</span></span></param>
        <param name="charsWritten"><span data-ttu-id="21642-1821">Enthält bei der Rückgabe der Methode die Länge der Spanne als Anzahl der Zeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1821">When the method returns, contains the length of the span in number of characters.</span></span></param>
        <param name="format"><span data-ttu-id="21642-1822">Eine schreibgeschützte Spanne von Zeichen, die das Format für den Formatierungsvorgang angibt.</span><span class="sxs-lookup"><span data-stu-id="21642-1822">A read-only span of characters that specifies the format for the formatting operation.</span></span></param>
        <param name="provider"><span data-ttu-id="21642-1823">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="value" /> bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1823">An object that supplies culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <summary><span data-ttu-id="21642-1824">Formatiert diese BigInteger-Instanz in eine Spanne von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1824">Formats this big integer instance into a span of characters.</span></span></summary>
        <returns><span data-ttu-id="21642-1825"><see langword="true" />, wenn der Formatierungsvorgang erfolgreich ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1825"><see langword="true" /> if the formatting operation succeeds; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="21642-1826">Versucht, die Zeichenfolgendarstellung einer Zahl in deren <see cref="T:System.Numerics.BigInteger" />-Entsprechung zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="21642-1826">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1827">Die Darstellung einer Zahl als schreibgeschützte Spanne von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1827">The representation of a number as a read-only span of characters.</span></span></param>
        <param name="result"><span data-ttu-id="21642-1828">Die Rückgabe dieser Methode enthält die <see cref="T:System.Numerics.BigInteger" />-Entsprechung der Zahl in <paramref name="value" />, oder null (0), wenn die Konvertierung nicht ausgeführt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="21642-1828">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or zero (0) if the conversion fails.</span></span> <span data-ttu-id="21642-1829">Die Konvertierung schlägt fehl, wenn der <paramref name="value" />-Parameter eine leere Zeichenspanne ist oder nicht im richtigen Format vorliegt.</span><span class="sxs-lookup"><span data-stu-id="21642-1829">The conversion fails if the <paramref name="value" /> parameter is an empty character span or is not of the correct format.</span></span> <span data-ttu-id="21642-1830">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="21642-1830">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="21642-1831">Versucht, die Darstellung einer Zahl, die in der angegebenen schreibgeschützten Zeichenspanne enthalten ist, in ihre Entsprechung <see cref="T:System.Numerics.BigInteger" /> zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="21642-1831">Tries to convert the representation of a number contained in the specified read-only character span, to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="21642-1832"><see langword="true" />, wenn <paramref name="value" /> erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1832"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Numerics.BigInteger.Parse" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1833">Die Zeichenfolgendarstellung einer Zahl.</span><span class="sxs-lookup"><span data-stu-id="21642-1833">The string representation of a number.</span></span></param>
        <param name="result"><span data-ttu-id="21642-1834">Die Rückgabe dieser Methode enthält die <see cref="T:System.Numerics.BigInteger" />-Entsprechung der Zahl in <paramref name="value" />, oder null (0), wenn die Konvertierung nicht ausgeführt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="21642-1834">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or zero (0) if the conversion fails.</span></span> <span data-ttu-id="21642-1835">Die Konvertierung schlägt fehl, wenn der <paramref name="value" />-Parameter <see langword="null" /> ist oder nicht im korrekten Format vorliegt.</span><span class="sxs-lookup"><span data-stu-id="21642-1835">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not of the correct format.</span></span> <span data-ttu-id="21642-1836">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="21642-1836">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="21642-1837">Versucht, die Zeichenfolgendarstellung einer Zahl in deren <see cref="T:System.Numerics.BigInteger" />-Entsprechung zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="21642-1837">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="21642-1838"><see langword="true" />, wenn <paramref name="value" /> erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1838"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1839">Die- <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> Methode ähnelt der- <xref:System.Numerics.BigInteger.Parse%28System.String%29> Methode, mit der Ausnahme, dass keine Ausnahme ausgelöst wird, wenn bei der Konvertierung ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="21642-1839">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="21642-1840">Mit dieser Methode entfällt die Notwendigkeit, die Ausnahmebehandlung zum Testen auf einen zu verwenden, <xref:System.FormatException> Wenn `value` ungültig ist und nicht erfolgreich analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1840">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="21642-1841">Der- `value` Parameter sollte die Zeichen folgen Darstellung einer Dezimalzahl in der folgenden Form sein:</span><span class="sxs-lookup"><span data-stu-id="21642-1841">The `value` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="21642-1842">[*WS*] [*Sign*] *Ziffern*[*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1842">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="21642-1843">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="21642-1843">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="21642-1844">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="21642-1844">The following table describes each element.</span></span>  
  
|<span data-ttu-id="21642-1845">Element</span><span class="sxs-lookup"><span data-stu-id="21642-1845">Element</span></span>|<span data-ttu-id="21642-1846">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1846">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="21642-1847">*Gefangener*</span><span class="sxs-lookup"><span data-stu-id="21642-1847">*ws*</span></span>|<span data-ttu-id="21642-1848">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="21642-1848">Optional white space.</span></span>|  
|<span data-ttu-id="21642-1849">*sign*</span><span class="sxs-lookup"><span data-stu-id="21642-1849">*sign*</span></span>|<span data-ttu-id="21642-1850">Ein optionales Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1850">An optional sign.</span></span> <span data-ttu-id="21642-1851">Gültige Zeichen werden von der-Eigenschaft <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> und der-Eigenschaft <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> der aktuellen Kultur bestimmt.</span><span class="sxs-lookup"><span data-stu-id="21642-1851">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="21642-1852">*Zahlen*</span><span class="sxs-lookup"><span data-stu-id="21642-1852">*digits*</span></span>|<span data-ttu-id="21642-1853">Eine Sequenz von Dezimalziffern im Bereich von 0 bis 9.</span><span class="sxs-lookup"><span data-stu-id="21642-1853">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="21642-1854">Die vom-Parameter angegebene Zeichenfolge `value` darf keine Gruppen Trennzeichen oder Dezimaltrennzeichen enthalten, und Sie darf keinen Dezimalteil enthalten.</span><span class="sxs-lookup"><span data-stu-id="21642-1854">The string specified by the `value` parameter cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="21642-1855">Der- `value` Parameter wird mit dem- <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> Stil interpretiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1855">The `value` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="21642-1856">Zusätzlich zu den Dezimalziffern sind nur führende und nachfolgende Leerzeichen mit einem vorangestellten Zeichen zulässig.</span><span class="sxs-lookup"><span data-stu-id="21642-1856">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="21642-1857">Um die Stilelemente mit den kulturspezifischen Formatierungsinformationen, die in vorhanden sein können, explizit zu definieren, müssen Sie `value` die-Methode aufzurufen <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> .</span><span class="sxs-lookup"><span data-stu-id="21642-1857">To explicitly define the style elements with the culture-specific formatting information that can be present in `value`, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method.</span></span>  
  
 <span data-ttu-id="21642-1858">Der- `value` Parameter wird analysiert, indem die Formatierungsinformationen in einem- <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1858">The `value` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="21642-1859">Weitere Informationen finden Sie unter <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="21642-1859">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="21642-1860">Diese Überladung interpretiert alle Ziffern im- `value` Parameter als Dezimalziffern.</span><span class="sxs-lookup"><span data-stu-id="21642-1860">This overload interprets all digits in the `value` parameter as decimal digits.</span></span> <span data-ttu-id="21642-1861">Um die Zeichen folgen Darstellung einer hexadezimalen Zahl zu analysieren, müssen Sie stattdessen die-Überladung aufrufen <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> .</span><span class="sxs-lookup"><span data-stu-id="21642-1861">To parse the string representation of a hexadecimal number, call the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-1862">Im folgenden Beispiel wird die- <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> Methode verwendet, um zwei-Objekte zu instanziieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-1862">The following example uses the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Numerics.BigInteger%40%29> method to instantiate two <xref:System.Numerics.BigInteger> objects.</span></span> <span data-ttu-id="21642-1863">Wenn die Konvertierungen erfolgreich sind, wird jedes Objekt mit einer anderen Zahl multipliziert und dann die- <xref:System.Numerics.BigInteger.Compare%2A> Methode aufgerufen, um die Beziehung zwischen den beiden-Objekten zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="21642-1863">If the conversions succeed, it multiplies each object by another number and then calls the <xref:System.Numerics.BigInteger.Compare%2A> method to determine the relationship between the two objects.</span></span>  
  
 [!code-csharp[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/cs/System.Numeric.BigInteger.TryParse.cs#1)]
 [!code-vb[System.Numeric.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numeric.BigInteger.TryParse/vb/System.Numeric.BigInteger.TryParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="21642-1864"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1864"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Numerics.BigInteger.ToString(System.String)" />
        <altmember cref="Overload:System.Numerics.BigInteger.Parse" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style, IFormatProvider? provider, out System.Numerics.BigInteger result);" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider * BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1865">Die Darstellung einer Zahl als schreibgeschützte Spanne von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1865">The representation of a number as a read-only span of characters.</span></span></param>
        <param name="style"><span data-ttu-id="21642-1866">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="value" /> vorhanden sein können.</span><span class="sxs-lookup"><span data-stu-id="21642-1866">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="value" />.</span></span> <span data-ttu-id="21642-1867">Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1867">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="21642-1868">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="value" /> bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1868">An object that supplies culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <param name="result"><span data-ttu-id="21642-1869">Die Rückgabe dieser Methode enthält die <see cref="T:System.Numerics.BigInteger" />-Entsprechung der Zahl in <paramref name="value" />, oder <see cref="P:System.Numerics.BigInteger.Zero" />, wenn die Konvertierung nicht ausgeführt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="21642-1869">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or <see cref="P:System.Numerics.BigInteger.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="21642-1870">Die Konvertierung schlägt fehl, wenn der Parameter <paramref name="value" /> eine leere Zeichenspanne ist oder nicht in einem Format vorliegt, das mit <paramref name="style" /> kompatibel ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1870">The conversion fails if the <paramref name="value" /> parameter is an empty character span or is not in a format that is compliant with <paramref name="style" />.</span></span> <span data-ttu-id="21642-1871">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="21642-1871">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="21642-1872">Versucht, die Zeichenfolgendarstellung einer Zahl in deren <see cref="T:System.Numerics.BigInteger" />-Entsprechung zu konvertieren, und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich durchgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="21642-1872">Tries to convert the string representation of a number to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="21642-1873"><see langword="true" />, wenn <paramref name="value" /> erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1873"><see langword="true" /> if <paramref name="value" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="21642-1874">Diese Überladung ähnelt der- <xref:System.Numerics.BigInteger.Parse(System.ReadOnlySpan%7BSystem.Char%7D,System.Globalization.NumberStyles,System.IFormatProvider)> Methode, mit der Ausnahme, dass Sie keine Ausnahme auslöst, wenn die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="21642-1874">This overload is like the <xref:System.Numerics.BigInteger.Parse(System.ReadOnlySpan%7BSystem.Char%7D,System.Globalization.NumberStyles,System.IFormatProvider)> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="21642-1875">Mit dieser Methode entfällt die Notwendigkeit, die Ausnahmebehandlung zum Testen auf einen zu verwenden, <xref:System.FormatException> Wenn `value` ungültig ist und nicht erfolgreich analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1875">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be parsed successfully.</span></span>

<span data-ttu-id="21642-1876">Der- `style` Parameter definiert die Stilelemente (z. b. Leerzeichen oder ein positives oder negatives Zeichen), die im-Parameter zulässig sind, damit der Analyse Vorgang erfolgreich ausgeführt werden kann `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1876">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="21642-1877">Dabei muss es sich um eine Kombination von Bitflags aus der- <xref:System.Globalization.NumberStyles> Enumeration handeln.</span><span class="sxs-lookup"><span data-stu-id="21642-1877">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="21642-1878">Abhängig vom Wert von `style` kann der- `value` Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1878">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>

<span data-ttu-id="21642-1879">[*WS*] [ *$* ] [*Sign*] [*digits*,]*digits*[.\* fractional_digits*] [E [*Sign*]*Exponential_digits*] [*WS\*]</span><span class="sxs-lookup"><span data-stu-id="21642-1879">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>

<span data-ttu-id="21642-1880">Wenn der- `style` Parameter enthält <xref:System.Globalization.NumberStyles.AllowHexSpecifier> , `value` kann der-Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1880">If the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `value` parameter may include the following elements:</span></span>

<span data-ttu-id="21642-1881">[*WS*] *Hexziffern*[*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1881">[*ws*]*hexdigits*[*ws*]</span></span>

<span data-ttu-id="21642-1882">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="21642-1882">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="21642-1883">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="21642-1883">The following table describes each element.</span></span>

|<span data-ttu-id="21642-1884">Element</span><span class="sxs-lookup"><span data-stu-id="21642-1884">Element</span></span>|<span data-ttu-id="21642-1885">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1885">Description</span></span>|
|-------------|-----------------|
|<span data-ttu-id="21642-1886">*Gefangener*</span><span class="sxs-lookup"><span data-stu-id="21642-1886">*ws*</span></span>|<span data-ttu-id="21642-1887">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="21642-1887">Optional white space.</span></span> <span data-ttu-id="21642-1888">Leerraum kann am Anfang von angezeigt werden `value` `style` , wenn das- <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> Flag enthält, oder am Ende von, `value` Wenn das- `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1888">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|
|*$*|<span data-ttu-id="21642-1889">Ein kulturspezifisches Währungssymbol.</span><span class="sxs-lookup"><span data-stu-id="21642-1889">A culture-specific currency symbol.</span></span> <span data-ttu-id="21642-1890">Die Position in `value` wird durch die- <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> Eigenschaft des-Objekts definiert, das <xref:System.Globalization.NumberFormatInfo> von der- <xref:System.IFormatProvider.GetFormat%2A> Methode des-Parameters zurückgegeben wird `provider` .</span><span class="sxs-lookup"><span data-stu-id="21642-1890">Its position in `value` is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="21642-1891">Das Währungssymbol kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1891">The currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1892">*sign*</span><span class="sxs-lookup"><span data-stu-id="21642-1892">*sign*</span></span>|<span data-ttu-id="21642-1893">Ein optionales Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1893">An optional sign.</span></span> <span data-ttu-id="21642-1894">Das Vorzeichen kann am Anfang von angezeigt `value` `style` werden, wenn das <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> -Flag enthält, und es kann am Ende von angezeigt werden, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1894">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="21642-1895">Klammern können in verwendet werden `value` , um einen negativen Wert anzugeben, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> Flag einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-1895">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1896">*Zahlen*</span><span class="sxs-lookup"><span data-stu-id="21642-1896">*digits*</span></span>|<span data-ttu-id="21642-1897">Eine Sequenz von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="21642-1897">A sequence of digits from 0 through 9.</span></span>|
|<span data-ttu-id="21642-1898">*,*</span><span class="sxs-lookup"><span data-stu-id="21642-1898">*,*</span></span>|<span data-ttu-id="21642-1899">Ein kulturspezifisches Gruppen Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1899">A culture-specific group separator.</span></span> <span data-ttu-id="21642-1900">Das Gruppen Trennzeichen der Kultur, die von angegeben wird, `provider` kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1900">The group separator of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1901">*.*</span><span class="sxs-lookup"><span data-stu-id="21642-1901">*.*</span></span>|<span data-ttu-id="21642-1902">Ein kulturspezifisches Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1902">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="21642-1903">Das Dezimaltrennzeichen der Kultur, die von angegeben wird, `provider` kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1903">The decimal point symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1904">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1904">*fractional_digits*</span></span>|<span data-ttu-id="21642-1905">Mindestens ein Vorkommen der Ziffer 0 (null).</span><span class="sxs-lookup"><span data-stu-id="21642-1905">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="21642-1906">Bruch Ziffern können nur in vorkommen, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1906">Fractional digits can appear in `value` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1907">E</span><span class="sxs-lookup"><span data-stu-id="21642-1907">E</span></span>|<span data-ttu-id="21642-1908">Das Zeichen "e" oder "e", das angibt, dass der Wert in exponentieller Notation (Scientific) dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1908">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="21642-1909">Der- `value` Parameter kann eine Zahl in Exponentialnotation darstellen, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1909">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1910">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1910">*exponential_digits*</span></span>|<span data-ttu-id="21642-1911">Eine Sequenz von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="21642-1911">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="21642-1912">Der- `value` Parameter kann eine Zahl in Exponentialnotation darstellen, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1912">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|
|<span data-ttu-id="21642-1913">*Hexziffern*</span><span class="sxs-lookup"><span data-stu-id="21642-1913">*hexdigits*</span></span>|<span data-ttu-id="21642-1914">Eine Sequenz von hexadezimalen Ziffern zwischen 0 und f oder 0 bis f.</span><span class="sxs-lookup"><span data-stu-id="21642-1914">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|

> [!NOTE]
> <span data-ttu-id="21642-1915">Alle abschließenden NUL-Zeichen (U + 0000) in `s` werden vom Analyse-Vorgang unabhängig vom Wert des `style` Arguments ignoriert.</span><span class="sxs-lookup"><span data-stu-id="21642-1915">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

|<span data-ttu-id="21642-1916">Nicht zusammengesetzte `NumberStyles` Werte</span><span class="sxs-lookup"><span data-stu-id="21642-1916">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="21642-1917">Als Wert zulässige Elemente zusätzlich zu Ziffern</span><span class="sxs-lookup"><span data-stu-id="21642-1917">Elements permitted in value in addition to digits</span></span>|
|------------------------------------------|-------------------------------------------------------|
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="21642-1918">Nur Dezimalziffern.</span><span class="sxs-lookup"><span data-stu-id="21642-1918">Decimal digits only.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="21642-1919">Der Dezimaltrennzeichen (*.*) und *fractional_digits* Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-1919">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="21642-1920">*Fractional_digits* müssen jedoch nur aus einer oder mehreren 0 Ziffern bestehen, oder die Methode gibt zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="21642-1920">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="21642-1921">Das Zeichen "e" oder "e", das die Exponentialnotation angibt, sowie *Exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="21642-1921">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="21642-1922">Wenn `value` eine Zahl in Exponentialnotation darstellt, kann Sie keine Bruchteil-Komponente ungleich 0 (null) aufweisen.</span><span class="sxs-lookup"><span data-stu-id="21642-1922">If `value` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="21642-1923">Das *WS* -Element am Anfang von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1923">The *ws* element at the start of `value`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="21642-1924">Das *WS* -Element am Ende von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1924">The *ws* element at the end of `value`.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="21642-1925">Das *Vorzeichen* Element vor *Ziffern*.</span><span class="sxs-lookup"><span data-stu-id="21642-1925">The *sign* element before *digits*.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="21642-1926">Das *Sign* -Element nach *Ziffern*.</span><span class="sxs-lookup"><span data-stu-id="21642-1926">The *sign* element after *digits*.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="21642-1927">Das *Vorzeichen* Element in der Form von Klammern, das den numerischen Wert einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-1927">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="21642-1928">Das Gruppen Trennzeichen (*,*).</span><span class="sxs-lookup"><span data-stu-id="21642-1928">The group separator (*,*) element.</span></span>|
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="21642-1929">Das Currency ( *$* )-Element.</span><span class="sxs-lookup"><span data-stu-id="21642-1929">The currency (*$*) element.</span></span>|
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="21642-1930">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-1930">All elements.</span></span> <span data-ttu-id="21642-1931">Es ist jedoch nicht möglich, `value` eine hexadezimale Zahl oder eine Zahl in Exponentialnotation darzustellen.</span><span class="sxs-lookup"><span data-stu-id="21642-1931">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="21642-1932">Das *WS* -Element am Anfang oder Ende von `value` , *Signieren* Sie am Anfang von `value` und das Dezimaltrennzeichen (*.*).</span><span class="sxs-lookup"><span data-stu-id="21642-1932">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="21642-1933">Der- `value` Parameter kann auch die Exponentialnotation verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-1933">The `value` parameter can also use exponential notation.</span></span>|
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="21642-1934">Die Elemente *WS*, *Sign*, Group Separator (*,*) und Decimal Point (*.*).</span><span class="sxs-lookup"><span data-stu-id="21642-1934">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="21642-1935">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-1935">All elements.</span></span> <span data-ttu-id="21642-1936">`value`Eine hexadezimale Zahl kann jedoch nicht dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="21642-1936">However, `value` cannot represent a hexadecimal number.</span></span>|

<span data-ttu-id="21642-1937">Wenn das- <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> Flag verwendet wird, `value` muss ein Hexadezimalwert sein.</span><span class="sxs-lookup"><span data-stu-id="21642-1937">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `value` must be a hexadecimal value.</span></span> <span data-ttu-id="21642-1938">Die einzigen anderen Flags, die in vorhanden sein können, `style` sind <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> und <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-1938">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-1939">(Die- <xref:System.Globalization.NumberStyles> Enumeration verfügt über einen zusammengesetzten Stil, <xref:System.Globalization.NumberStyles.HexNumber> , der beide Leerzeichen enthält.)</span><span class="sxs-lookup"><span data-stu-id="21642-1939">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>

<span data-ttu-id="21642-1940">Der- `provider` Parameter ist eine- <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="21642-1940">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="21642-1941">Die zugehörige- <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das kulturspezifische Informationen zum Format von bereitstellt `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1941">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="21642-1942">Der `provider` Parameter kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="21642-1942">The `provider` parameter can be any one of the following:</span></span>

-   <span data-ttu-id="21642-1943">Ein- <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, die Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1943">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="21642-1944"><xref:System.Globalization.CultureInfo.GetFormat%2A>Die-Methode gibt das- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das numerische Formatierungsinformationen für diese Kultur bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1944">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>

-   <span data-ttu-id="21642-1945">Ein- <xref:System.Globalization.NumberFormatInfo> Objekt, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1945">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="21642-1946">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> gibt nur sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="21642-1946">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>

-   <span data-ttu-id="21642-1947">Ein benutzerdefiniertes Objekt, das implementiert <xref:System.IFormatProvider> .</span><span class="sxs-lookup"><span data-stu-id="21642-1947">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="21642-1948"><xref:System.IFormatProvider.GetFormat%2A>Die-Methode instanziiert und gibt das <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1948">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>

<span data-ttu-id="21642-1949">Wenn `provider` `null` den Wert hat, wird das- <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="21642-1949">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21642-1950"><paramref name="style" /> ist kein <see cref="T:System.Globalization.NumberStyles" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-1950"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="21642-1951">- oder -</span><span class="sxs-lookup"><span data-stu-id="21642-1951">-or-</span></span> 
 <span data-ttu-id="21642-1952"><paramref name="style" /> schließt das <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />-Flag oder <see cref="F:System.Globalization.NumberStyles.HexNumber" />-Flag mit einem anderen Wert ein.</span><span class="sxs-lookup"><span data-stu-id="21642-1952"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.Parse" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string value, System.Globalization.NumberStyles style, IFormatProvider provider, out System.Numerics.BigInteger result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string value, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] valuetype System.Numerics.BigInteger&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Numerics.BigInteger@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (value As String, style As NumberStyles, provider As IFormatProvider, ByRef result As BigInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ value, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::Numerics::BigInteger % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider * BigInteger -&gt; bool" Usage="System.Numerics.BigInteger.TryParse (value, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Numerics.BigInteger" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="21642-1953">Die Zeichenfolgendarstellung einer Zahl.</span><span class="sxs-lookup"><span data-stu-id="21642-1953">The string representation of a number.</span></span> <span data-ttu-id="21642-1954">Die Zeichenfolge wird unter Verwendung des durch <paramref name="style" /> angegebenen Formats interpretiert.</span><span class="sxs-lookup"><span data-stu-id="21642-1954">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="21642-1955">Eine bitweise Kombination von Enumerationswerten, die die Stilelemente angeben, die in <paramref name="value" /> vorhanden sein können.</span><span class="sxs-lookup"><span data-stu-id="21642-1955">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="value" />.</span></span> <span data-ttu-id="21642-1956">Ein häufig angegebener Wert ist <see cref="F:System.Globalization.NumberStyles.Integer" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1956">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="21642-1957">Ein Objekt, das kulturspezifische Formatierungsinformationen zu <paramref name="value" /> bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-1957">An object that supplies culture-specific formatting information about <paramref name="value" />.</span></span></param>
        <param name="result"><span data-ttu-id="21642-1958">Die Rückgabe dieser Methode enthält die <see cref="T:System.Numerics.BigInteger" />-Entsprechung der Zahl in <paramref name="value" />, oder <see cref="P:System.Numerics.BigInteger.Zero" />, wenn die Konvertierung nicht ausgeführt werden konnte.</span><span class="sxs-lookup"><span data-stu-id="21642-1958">When this method returns, contains the <see cref="T:System.Numerics.BigInteger" /> equivalent to the number that is contained in <paramref name="value" />, or <see cref="P:System.Numerics.BigInteger.Zero" /> if the conversion failed.</span></span> <span data-ttu-id="21642-1959">Die Konvertierung schlägt fehl, wenn der <paramref name="value" />-Parameter gleich <see langword="null" /> ist oder nicht in einem Format vorliegt, das mit <paramref name="style" /> kompatibel ist.</span><span class="sxs-lookup"><span data-stu-id="21642-1959">The conversion fails if the <paramref name="value" /> parameter is <see langword="null" /> or is not in a format that is compliant with <paramref name="style" />.</span></span> <span data-ttu-id="21642-1960">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="21642-1960">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="21642-1961">Konvertiert die Zeichenfolgendarstellung einer Zahl in einem angegebenen Stil und kulturspezifischen Format in das entsprechende <see cref="T:System.Numerics.BigInteger" /> und gibt einen Wert zurück, der angibt, ob die Konvertierung erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="21642-1961">Tries to convert the string representation of a number in a specified style and culture-specific format to its <see cref="T:System.Numerics.BigInteger" /> equivalent, and returns a value that indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="21642-1962"><see langword="true" />, wenn der <paramref name="value" />-Parameter erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-1962"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-1963">Die- <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> Methode ähnelt der- <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> Methode, mit der Ausnahme, dass keine Ausnahme ausgelöst wird, wenn bei der Konvertierung ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="21642-1963">The <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method is like the <xref:System.Numerics.BigInteger.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="21642-1964">Mit dieser Methode entfällt die Notwendigkeit, die Ausnahmebehandlung zum Testen auf einen zu verwenden, <xref:System.FormatException> Wenn `value` ungültig ist und nicht erfolgreich analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="21642-1964">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `value` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="21642-1965">Der- `style` Parameter definiert die Stilelemente (z. b. Leerzeichen oder ein positives oder negatives Zeichen), die im-Parameter zulässig sind, damit der Analyse Vorgang erfolgreich ausgeführt werden kann `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-1965">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `value` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="21642-1966">Dabei muss es sich um eine Kombination von Bitflags aus der- <xref:System.Globalization.NumberStyles> Enumeration handeln.</span><span class="sxs-lookup"><span data-stu-id="21642-1966">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="21642-1967">Abhängig vom Wert von `style` kann der- `value` Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1967">Depending on the value of `style`, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="21642-1968">[*WS*] [ *$* ] [*Sign*] [*digits*,]*digits*[.\* fractional_digits*] [E [*Sign*]*Exponential_digits*] [*WS\*]</span><span class="sxs-lookup"><span data-stu-id="21642-1968">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="21642-1969">Wenn der- `style` Parameter enthält <xref:System.Globalization.NumberStyles.AllowHexSpecifier> , `value` kann der-Parameter die folgenden Elemente enthalten:</span><span class="sxs-lookup"><span data-stu-id="21642-1969">If the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>, the `value` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="21642-1970">[*WS*] *Hexziffern*[*WS*]</span><span class="sxs-lookup"><span data-stu-id="21642-1970">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="21642-1971">Elemente in eckigen Klammern ([ und ]) sind optional.</span><span class="sxs-lookup"><span data-stu-id="21642-1971">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="21642-1972">In der folgenden Tabelle wird jedes Element beschrieben.</span><span class="sxs-lookup"><span data-stu-id="21642-1972">The following table describes each element.</span></span>  
  
|<span data-ttu-id="21642-1973">Element</span><span class="sxs-lookup"><span data-stu-id="21642-1973">Element</span></span>|<span data-ttu-id="21642-1974">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="21642-1974">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="21642-1975">*Gefangener*</span><span class="sxs-lookup"><span data-stu-id="21642-1975">*ws*</span></span>|<span data-ttu-id="21642-1976">Optionaler Leerraum.</span><span class="sxs-lookup"><span data-stu-id="21642-1976">Optional white space.</span></span> <span data-ttu-id="21642-1977">Leerraum kann am Anfang von angezeigt werden `value` `style` , wenn das- <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> Flag enthält, oder am Ende von, `value` Wenn das- `style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1977">White space can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="21642-1978">Ein kulturspezifisches Währungssymbol.</span><span class="sxs-lookup"><span data-stu-id="21642-1978">A culture-specific currency symbol.</span></span> <span data-ttu-id="21642-1979">Die Position in der Zeichenfolge wird durch die-Eigenschaft des-Objekts definiert, das <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> <xref:System.Globalization.NumberFormatInfo> von der- <xref:System.IFormatProvider.GetFormat%2A> Methode des-Parameters zurückgegeben wird `provider` .</span><span class="sxs-lookup"><span data-stu-id="21642-1979">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="21642-1980">Das Währungssymbol kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1980">The currency symbol can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1981">*sign*</span><span class="sxs-lookup"><span data-stu-id="21642-1981">*sign*</span></span>|<span data-ttu-id="21642-1982">Ein optionales Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1982">An optional sign.</span></span> <span data-ttu-id="21642-1983">Das Vorzeichen kann am Anfang von angezeigt `value` `style` werden, wenn das <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> -Flag enthält, und es kann am Ende von angezeigt werden, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1983">The sign can appear at the start of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="21642-1984">Klammern können in verwendet werden `value` , um einen negativen Wert anzugeben, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> Flag einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-1984">Parentheses can be used in `value` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1985">*Zahlen*</span><span class="sxs-lookup"><span data-stu-id="21642-1985">*digits*</span></span>|<span data-ttu-id="21642-1986">Eine Sequenz von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="21642-1986">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="21642-1987">*,*</span><span class="sxs-lookup"><span data-stu-id="21642-1987">*,*</span></span>|<span data-ttu-id="21642-1988">Ein kulturspezifisches Gruppen Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1988">A culture-specific group separator.</span></span> <span data-ttu-id="21642-1989">Das Gruppen Trennzeichen der Kultur, die von angegeben wird, `provider` kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1989">The group separator of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1990">*.*</span><span class="sxs-lookup"><span data-stu-id="21642-1990">*.*</span></span>|<span data-ttu-id="21642-1991">Ein kulturspezifisches Dezimaltrennzeichen.</span><span class="sxs-lookup"><span data-stu-id="21642-1991">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="21642-1992">Das Dezimaltrennzeichen der Kultur, die von angegeben wird, `provider` kann in angezeigt `value` werden, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1992">The decimal point symbol of the culture specified by `provider` can appear in `value` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1993">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1993">*fractional_digits*</span></span>|<span data-ttu-id="21642-1994">Mindestens ein Vorkommen der Ziffer 0 (null).</span><span class="sxs-lookup"><span data-stu-id="21642-1994">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="21642-1995">Bruch Ziffern können nur in vorkommen, `value` Wenn `style` das- <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1995">Fractional digits can appear in `value` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1996">E</span><span class="sxs-lookup"><span data-stu-id="21642-1996">E</span></span>|<span data-ttu-id="21642-1997">Das Zeichen "e" oder "e", das angibt, dass der Wert in exponentieller Notation (Scientific) dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="21642-1997">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="21642-1998">Der- `value` Parameter kann eine Zahl in Exponentialnotation darstellen, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-1998">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-1999">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="21642-1999">*exponential_digits*</span></span>|<span data-ttu-id="21642-2000">Eine Sequenz von Ziffern zwischen 0 und 9.</span><span class="sxs-lookup"><span data-stu-id="21642-2000">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="21642-2001">Der- `value` Parameter kann eine Zahl in Exponentialnotation darstellen, wenn `style` das- <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> Flag enthält.</span><span class="sxs-lookup"><span data-stu-id="21642-2001">The `value` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="21642-2002">*Hexziffern*</span><span class="sxs-lookup"><span data-stu-id="21642-2002">*hexdigits*</span></span>|<span data-ttu-id="21642-2003">Eine Sequenz von hexadezimalen Ziffern zwischen 0 und f oder 0 bis f.</span><span class="sxs-lookup"><span data-stu-id="21642-2003">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="21642-2004">Alle abschließenden NUL-Zeichen (U + 0000) in `s` werden vom Analyse-Vorgang unabhängig vom Wert des `style` Arguments ignoriert.</span><span class="sxs-lookup"><span data-stu-id="21642-2004">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="21642-2005">Eine Zeichenfolge mit nur Dezimalziffern (die dem- <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> Flag entspricht) wird immer erfolgreich analysiert.</span><span class="sxs-lookup"><span data-stu-id="21642-2005">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="21642-2006">Die meisten der verbleibenden Member <xref:System.Globalization.NumberStyles> steuern Elemente, die in dieser Eingabe Zeichenfolge vorhanden sein können, aber nicht vorhanden sein müssen.</span><span class="sxs-lookup"><span data-stu-id="21642-2006">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="21642-2007">In der folgenden Tabelle wird angegeben, wie sich einzelne Member <xref:System.Globalization.NumberStyles> auf die Elemente auswirken, die in vorhanden sein können `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-2007">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `value`.</span></span>  
  
|<span data-ttu-id="21642-2008">Nicht zusammengesetzte `NumberStyles` Werte</span><span class="sxs-lookup"><span data-stu-id="21642-2008">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="21642-2009">Als Wert zulässige Elemente zusätzlich zu Ziffern</span><span class="sxs-lookup"><span data-stu-id="21642-2009">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="21642-2010">Nur Dezimalziffern.</span><span class="sxs-lookup"><span data-stu-id="21642-2010">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="21642-2011">Der Dezimaltrennzeichen (*.*) und *fractional_digits* Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-2011">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="21642-2012">*Fractional_digits* müssen jedoch nur aus einer oder mehreren 0 Ziffern bestehen, oder die Methode gibt zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="21642-2012">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="21642-2013">Das Zeichen "e" oder "e", das die Exponentialnotation angibt, sowie *Exponential_digits*.</span><span class="sxs-lookup"><span data-stu-id="21642-2013">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="21642-2014">Wenn `value` eine Zahl in Exponentialnotation darstellt, kann Sie keine Bruchteil-Komponente ungleich 0 (null) aufweisen.</span><span class="sxs-lookup"><span data-stu-id="21642-2014">If `value` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="21642-2015">Das *WS* -Element am Anfang von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-2015">The *ws* element at the start of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="21642-2016">Das *WS* -Element am Ende von `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-2016">The *ws* element at the end of `value`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="21642-2017">Das *Vorzeichen* Element vor *Ziffern*.</span><span class="sxs-lookup"><span data-stu-id="21642-2017">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="21642-2018">Das *Sign* -Element nach *Ziffern*.</span><span class="sxs-lookup"><span data-stu-id="21642-2018">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="21642-2019">Das *Vorzeichen* Element in der Form von Klammern, das den numerischen Wert einschließt.</span><span class="sxs-lookup"><span data-stu-id="21642-2019">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="21642-2020">Das Gruppen Trennzeichen (*,*).</span><span class="sxs-lookup"><span data-stu-id="21642-2020">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="21642-2021">Das Currency ( *$* )-Element.</span><span class="sxs-lookup"><span data-stu-id="21642-2021">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="21642-2022">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-2022">All elements.</span></span> <span data-ttu-id="21642-2023">Es ist jedoch nicht möglich, `value` eine hexadezimale Zahl oder eine Zahl in Exponentialnotation darzustellen.</span><span class="sxs-lookup"><span data-stu-id="21642-2023">However, `value` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="21642-2024">Das *WS* -Element am Anfang oder Ende von `value` , *Signieren* Sie am Anfang von `value` und das Dezimaltrennzeichen (*.*).</span><span class="sxs-lookup"><span data-stu-id="21642-2024">The *ws* element at the start or end of `value`, *sign* at the start of `value`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="21642-2025">Der- `value` Parameter kann auch die Exponentialnotation verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-2025">The `value` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="21642-2026">Die Elemente *WS*, *Sign*, Group Separator (*,*) und Decimal Point (*.*).</span><span class="sxs-lookup"><span data-stu-id="21642-2026">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="21642-2027">Alle-Elemente.</span><span class="sxs-lookup"><span data-stu-id="21642-2027">All elements.</span></span> <span data-ttu-id="21642-2028">`value`Eine hexadezimale Zahl kann jedoch nicht dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="21642-2028">However, `value` cannot represent a hexadecimal number.</span></span>|  
  
> [!IMPORTANT]
>  <span data-ttu-id="21642-2029">Wenn Sie die <xref:System.Numerics.BigInteger.TryParse%2A> -Methode zum Roundtrip der Zeichen folgen Darstellung eines <xref:System.Numerics.BigInteger> Werts verwenden, der von der- <xref:System.Numerics.BigInteger.ToString%2A> Methode ausgegeben wurde, sollten Sie die- <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> Methode mit dem Format Bezeichner "R" verwenden, um die Zeichen folgen Darstellung des Werts zu generieren <xref:System.Numerics.BigInteger> .</span><span class="sxs-lookup"><span data-stu-id="21642-2029">If you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to round-trip the string representation of a <xref:System.Numerics.BigInteger> value that was output by the <xref:System.Numerics.BigInteger.ToString%2A> method, you should use the <xref:System.Numerics.BigInteger.ToString%28System.String%29?displayProperty=nameWithType> method with the "R" format specifier to generate the string representation of the <xref:System.Numerics.BigInteger> value.</span></span> <span data-ttu-id="21642-2030">Andernfalls behält die Zeichen folgen Darstellung von <xref:System.Numerics.BigInteger> nur die 50 signifikantesten Ziffern des ursprünglichen Werts bei, und die Daten gehen möglicherweise verloren, wenn Sie die- <xref:System.Numerics.BigInteger.TryParse%2A> Methode zum Wiederherstellen des <xref:System.Numerics.BigInteger> Werts verwenden.</span><span class="sxs-lookup"><span data-stu-id="21642-2030">Otherwise, the string representation of the <xref:System.Numerics.BigInteger> preserves only the 50 most significant digits of the original value, and data may be lost when you use the <xref:System.Numerics.BigInteger.TryParse%2A> method to restore the <xref:System.Numerics.BigInteger> value.</span></span>  
  
 <span data-ttu-id="21642-2031">Wenn das- <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> Flag verwendet wird, `value` muss ein Hexadezimalwert sein.</span><span class="sxs-lookup"><span data-stu-id="21642-2031">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `value` must be a hexadecimal value.</span></span> <span data-ttu-id="21642-2032">Die einzigen anderen Flags, die in vorhanden sein können, `style` sind <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> und <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="21642-2032">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="21642-2033">(Die- <xref:System.Globalization.NumberStyles> Enumeration verfügt über einen zusammengesetzten Stil, <xref:System.Globalization.NumberStyles.HexNumber> , der beide Leerzeichen enthält.)</span><span class="sxs-lookup"><span data-stu-id="21642-2033">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="21642-2034">Wenn `value` die Zeichen folgen Darstellung einer hexadezimalen Zahl ist, kann Ihr keine Ergänzung (z. b. oder) vorangestellt werden, `0x` `&h` die Sie als hexadezimale Zahl unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="21642-2034">If `value` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="21642-2035">Dies bewirkt, dass die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="21642-2035">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="21642-2036">Wenn `value` eine hexadezimale Zeichenfolge ist, <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> interpretiert die Methode `value` als eine negative Zahl, die mit der zwei Komplement-Darstellung gespeichert wird, wenn die ersten beiden hexadezimalen Ziffern größer oder gleich sind `0x80` .</span><span class="sxs-lookup"><span data-stu-id="21642-2036">If `value` is a hexadecimal string, the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method interprets `value` as a negative number stored by using two's complement representation if its first two hexadecimal digits are greater than or equal to `0x80`.</span></span> <span data-ttu-id="21642-2037">Das heißt, die-Methode interpretiert das Bit des ersten Bytes in der höchsten Reihenfolge `value` als Signier Bit.</span><span class="sxs-lookup"><span data-stu-id="21642-2037">In other words, the method interprets the highest-order bit of the first byte in `value` as the sign bit.</span></span> <span data-ttu-id="21642-2038">Um sicherzustellen, dass eine hexadezimale Zeichenfolge ordnungsgemäß als positive Zahl interpretiert wird, muss die erste Ziffer in den `value` Wert 0 (null) aufweisen.</span><span class="sxs-lookup"><span data-stu-id="21642-2038">To make sure that a hexadecimal string is correctly interpreted as a positive number, the first digit in `value` must have a value of zero.</span></span> <span data-ttu-id="21642-2039">Die-Methode interpretiert z `0x80` . b. als negativen Wert, interpretiert aber entweder `0x080` oder `0x0080` als positiven Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-2039">For example, the method interprets `0x80` as a negative value, but it interprets either `0x080` or `0x0080` as a positive value.</span></span> <span data-ttu-id="21642-2040">Das folgende Beispiel veranschaulicht den Unterschied zwischen hexadezimalen Zeichen folgen, die negative und positive Werte darstellen.</span><span class="sxs-lookup"><span data-stu-id="21642-2040">The following example illustrates the difference between hexadecimal strings that represent negative and positive values.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParseHex1.cs#1)]
 [!code-vb[System.Numerics.BigInteger.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParseHex1.vb#1)]  
  
 <span data-ttu-id="21642-2041">Der- `provider` Parameter ist eine- <xref:System.IFormatProvider> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="21642-2041">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="21642-2042">Die zugehörige- <xref:System.IFormatProvider.GetFormat%2A> Methode gibt ein- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das kulturspezifische Informationen zum Format von bereitstellt `value` .</span><span class="sxs-lookup"><span data-stu-id="21642-2042">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `value`.</span></span> <span data-ttu-id="21642-2043">Der `provider` Parameter kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="21642-2043">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="21642-2044">Ein- <xref:System.Globalization.CultureInfo> Objekt, das die Kultur darstellt, die Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-2044">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="21642-2045"><xref:System.Globalization.CultureInfo.GetFormat%2A>Die-Methode gibt das- <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das numerische Formatierungsinformationen für diese Kultur bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-2045">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="21642-2046">Ein- <xref:System.Globalization.NumberFormatInfo> Objekt, das numerische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-2046">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="21642-2047">(Die Implementierung von <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> gibt nur sich selbst zurück.)</span><span class="sxs-lookup"><span data-stu-id="21642-2047">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="21642-2048">Ein benutzerdefiniertes Objekt, das implementiert <xref:System.IFormatProvider> .</span><span class="sxs-lookup"><span data-stu-id="21642-2048">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="21642-2049"><xref:System.IFormatProvider.GetFormat%2A>Die-Methode instanziiert und gibt das <xref:System.Globalization.NumberFormatInfo> Objekt zurück, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-2049">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="21642-2050">Wenn `provider` `null` den Wert hat, wird das- <xref:System.Globalization.NumberFormatInfo> Objekt für die aktuelle Kultur verwendet.</span><span class="sxs-lookup"><span data-stu-id="21642-2050">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="21642-2051">Im folgenden Beispiel werden einige Aufrufe der <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> -Methode mithilfe verschiedener Kombinationen von-Werten für den `style` -Parameter und den-Parameter durchführt `provider` .</span><span class="sxs-lookup"><span data-stu-id="21642-2051">The following example makes some calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method using various combinations of values for the `style` and `provider` parameters.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#2)]
 [!code-vb[System.Numerics.BigInteger.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#2)]  
  
 <span data-ttu-id="21642-2052">Eine Reihe einzelner Aufrufe der- <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> Methode übergibt eine Instanz der folgenden `BigIntegerFormatProvider` Klasse, die eine Tilde (~) als negatives Vorzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="21642-2052">A number of the individual calls to the <xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29> method pass an instance of the following `BigIntegerFormatProvider` class, which defines a tilde (~) as the negative sign.</span></span>  
  
 [!code-csharp[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/cs/TryParse1.cs#3)]
 [!code-vb[System.Numerics.BigInteger.TryParse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Numerics.BigInteger.TryParse/vb/TryParse1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="21642-2053"><paramref name="style" /> ist kein <see cref="T:System.Globalization.NumberStyles" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="21642-2053"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="21642-2054">- oder -</span><span class="sxs-lookup"><span data-stu-id="21642-2054">-or-</span></span> 
 <span data-ttu-id="21642-2055"><paramref name="style" /> schließt das <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" />-Flag oder <see cref="F:System.Globalization.NumberStyles.HexNumber" />-Flag mit einem anderen Wert ein.</span><span class="sxs-lookup"><span data-stu-id="21642-2055"><paramref name="style" /> includes the <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> or <see cref="F:System.Globalization.NumberStyles.HexNumber" /> flag along with another value.</span></span></exception>
        <altmember cref="Overload:System.Numerics.BigInteger.ToString" />
        <altmember cref="Overload:System.Numerics.BigInteger.Parse" />
      </Docs>
    </Member>
    <Member MemberName="TryWriteBytes">
      <MemberSignature Language="C#" Value="public bool TryWriteBytes (Span&lt;byte&gt; destination, out int bytesWritten, bool isUnsigned = false, bool isBigEndian = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryWriteBytes(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten, bool isUnsigned, bool isBigEndian) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Numerics.BigInteger.TryWriteBytes(System.Span{System.Byte},System.Int32@,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryWriteBytes (destination As Span(Of Byte), ByRef bytesWritten As Integer, Optional isUnsigned As Boolean = false, Optional isBigEndian As Boolean = false) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryWriteBytes : Span&lt;byte&gt; * int * bool * bool -&gt; bool" Usage="bigInteger.TryWriteBytes (destination, bytesWritten, isUnsigned, isBigEndian)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="isUnsigned" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="isBigEndian" Type="System.Boolean" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="destination"><span data-ttu-id="21642-2056">Die Zielspanne, in die die resultierenden Bytes geschrieben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="21642-2056">The destination span to which the resulting bytes should be written.</span></span></param>
        <param name="bytesWritten"><span data-ttu-id="21642-2057">Die Anzahl der Bytes, die in <paramref name="destination" /> geschrieben wurden.</span><span class="sxs-lookup"><span data-stu-id="21642-2057">The number of bytes written to <paramref name="destination" />.</span></span></param>
        <param name="isUnsigned"><span data-ttu-id="21642-2058"><see langword="true" />, um die Codierung ohne Vorzeichen zu verwenden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-2058"><see langword="true" /> to use unsigned encoding; otherwise, <see langword="false" />.</span></span></param>
        <param name="isBigEndian"><span data-ttu-id="21642-2059"><see langword="true" />, um die Bytes in einer Big-Endian-Bytereihenfolge zu schreiben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="21642-2059"><see langword="true" /> to write the bytes in a big-endian byte order; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="21642-2060">Kopiert den Wert dieses <see cref="T:System.Numerics.BigInteger" /> als Little-Endian-Zweierkomplementbytes mit der geringstmöglichen Anzahl von Bytes.</span><span class="sxs-lookup"><span data-stu-id="21642-2060">Copies the value of this <see cref="T:System.Numerics.BigInteger" /> as little-endian twos-complement bytes, using the fewest number of bytes possible.</span></span> <span data-ttu-id="21642-2061">Wenn der Wert Null (0) ist, wird nur ein Byte ausgegeben, dessen Element 0x00 ist.</span><span class="sxs-lookup"><span data-stu-id="21642-2061">If the value is zero, outputs one byte whose element is 0x00.</span></span></summary>
        <returns><span data-ttu-id="21642-2062"><see langword="true" />, wenn die Bytes in <paramref name="destination" /> passen. <see langword="false" />, wenn aufgrund von unzureichendem Speicherplatz nicht alle Bytes geschrieben werden konnten.</span><span class="sxs-lookup"><span data-stu-id="21642-2062"><see langword="true" /> if the bytes fit in <paramref name="destination" />; <see langword="false" /> if not all bytes could be written due to lack of space.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OverflowException"><span data-ttu-id="21642-2063"><paramref name="isUnsigned" /> ist <see langword="true" /> und <see cref="P:System.Numerics.BigInteger.Sign" /> ist negativ.</span><span class="sxs-lookup"><span data-stu-id="21642-2063"><paramref name="isUnsigned" /> is <see langword="true" /> and <see cref="P:System.Numerics.BigInteger.Sign" /> is negative.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static System.Numerics.BigInteger Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Numerics.BigInteger Zero" />
      <MemberSignature Language="DocId" Value="P:System.Numerics.BigInteger.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As BigInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Numerics::BigInteger Zero { System::Numerics::BigInteger get(); };" />
      <MemberSignature Language="F#" Value="member this.Zero : System.Numerics.BigInteger" Usage="System.Numerics.BigInteger.Zero" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Numerics</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Numerics</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Numerics.BigInteger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="21642-2064">Ruft einen Wert ab, der die Zahl null (0) darstellt.</span><span class="sxs-lookup"><span data-stu-id="21642-2064">Gets a value that represents the number 0 (zero).</span></span></summary>
        <value><span data-ttu-id="21642-2065">Eine ganze Zahl, deren Wert 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="21642-2065">An integer whose value is 0 (zero).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="21642-2066">Das <xref:System.Numerics.BigInteger> von dieser Eigenschaft zurückgegebene-Objekt stellt eine bequeme Quelle für einen Nullwert zur Verwendung in Zuweisungen und vergleichen dar.</span><span class="sxs-lookup"><span data-stu-id="21642-2066">The <xref:System.Numerics.BigInteger> object returned by this property provides a convenient source of a zero value for use in assignments and comparisons.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Numerics.BigInteger.IsZero" />
      </Docs>
    </Member>
  </Members>
</Type>
