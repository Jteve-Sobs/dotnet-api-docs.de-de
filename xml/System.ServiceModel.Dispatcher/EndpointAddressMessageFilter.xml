<Type Name="EndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="83ed84ef5572ddc54395708920feb16d435e66e6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86571027" /></Metadata><TypeSignature Language="C#" Value="public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <TypeSignature Language="F#" Value="type EndpointAddressMessageFilter = class&#xA;    inherit MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8b0f1-101">Stellt eine Abfrage dar, die testet, ob eine Nachricht den Anforderungen einer angegebenen Endpunktadresse entspricht.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-101">Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b0f1-102">Dieser Filter testet, ob eine Nachricht einer bestimmten Endpunktadresse entspricht.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-102">This filter tests whether a message satisfies a particular endpoint address.</span></span> <span data-ttu-id="8b0f1-103">Ein <xref:System.ServiceModel.EndpointAddress>-Objekt schließt eine URI und eine optionale Auflistung von Adressierungsheadern ein.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-103">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="8b0f1-104">Die Adressierung und die Nachrichtenheader werden in kanonische Form gebracht, um im Hinblick auf Übereinstimmung verglichen zu werden.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-104">The addressing and message headers are canonicalized in order to be compared for equality.</span></span> <span data-ttu-id="8b0f1-105">Wenn ein Parameter mehrmals in einer <xref:System.ServiceModel.EndpointAddress> erscheint, muss der entsprechende Header mindestens genauso oft in der Nachricht erscheinen.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-105">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="8b0f1-106">Bei IIS und dem zugrunde liegenden Dateisystem (NTFS oder FAT) sind Groß- und Kleinschreibung nicht von Bedeutung.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-106">IIS and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="8b0f1-107">Bei den durch diese Klasse durchgeführten URI-Abgleichen wird ebenfalls nicht zwischen Groß- und Kleinschreibung unterschieden.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-107">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="8b0f1-108">Daher wird beispielsweise `http://www.microsoft.com` als gleich ausgewertet `http://WWW.microsoft.com` .</span><span class="sxs-lookup"><span data-stu-id="8b0f1-108">So, for example, `http://www.microsoft.com` is evaluated as equal to `http://WWW.microsoft.com`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b0f1-109">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter : System.ServiceModel.EndpointAddress -&gt; System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter address" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="8b0f1-110">Die <see cref="T:System.ServiceModel.EndpointAddress" />, die zum Testen der Nachrichten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-110">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <summary><span data-ttu-id="8b0f1-111">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />-Klasse mit einer bestimmten Adresse, anhand derer die Nachricht getestet wird.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class with a specified address against which to test a message.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b0f1-112"><paramref name="address" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-112"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter : System.ServiceModel.EndpointAddress * bool -&gt; System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" Usage="new System.ServiceModel.Dispatcher.EndpointAddressMessageFilter (address, includeHostNameInComparison)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="8b0f1-113">Die <see cref="T:System.ServiceModel.EndpointAddress" />, die zum Testen der Nachrichten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <param name="includeHostNameInComparison"><span data-ttu-id="8b0f1-114"><see langword="true" />, wenn der Hostname beim Abgleich der Endpunktadressen berücksichtigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-114"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8b0f1-115">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="8b0f1-116">Wenn Sie auf Ihrem lokalen Computer einen Webdienst installiert haben, gibt es eine Reihe gleichwertiger Möglichkeiten, um darauf zu verweisen, z.&#160;B. in folgender Weise:</span><span class="sxs-lookup"><span data-stu-id="8b0f1-116">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
- `http://localhost/foo.svc`
- `http://192.168.1.100/foo.svc`
- `http://[my-machine-name]/foo.svc`
- `http://[my-machine-name].[my-company].com/foo.svc`
  
 <span data-ttu-id="8b0f1-117">Wenn der Wert des `includeHostNameInComparison`-Parameters `false` ist, werden alle oben genannten URIs in denselben Endpunkt aufgelöst.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-117">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b0f1-118"><paramref name="address" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-118"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Address : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b0f1-119">Ruft die Adresse ab, mit der der <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> Nachrichten testet.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-119">Gets the address that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></summary>
        <value><span data-ttu-id="8b0f1-120">Die <see cref="T:System.ServiceModel.EndpointAddress" />, die der <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> zum Testen von Nachrichten verwendet.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-120">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="endpointAddressMessageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="8b0f1-121">Den Filtern in der Tabelle zugeordnete Daten.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-121">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="8b0f1-122">Erstellt eine neue Filtertabelle, mit der eine Nachricht gleichzeitig in Bezug auf mehrere Endpunktadressen getestet wird.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-122">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span></span></summary>
        <returns><span data-ttu-id="8b0f1-123">Ein Objekt, das die <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />-Schnittstelle implementiert, die <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> mit zugeordneten <paramref name="FilterData" /> enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-123">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b0f1-124">Die Methode gibt eine Instanz von <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> zurück, die für den Test auf bestimmte Nachrichtenendpunkte optimiert ist.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-124">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="8b0f1-125">Diese Methode ist für die Verwendung durch <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-125">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="8b0f1-126">Verwenden Sie <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601>-Konstruktoren, um Filtertabelleninstanzen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-126">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> constructors to create filter table instances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostNameInComparison : bool" Usage="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8b0f1-127">Ruft einen Wert ab, der angibt, ob der Hostname beim Endpunktadressenabgleich berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-127">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span></span></summary>
        <value><span data-ttu-id="8b0f1-128"><see langword="true" />, wenn der Hostname beim Abgleich der Endpunktadressen berücksichtigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-128"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="8b0f1-129">Wenn Sie auf Ihrem lokalen Computer einen Webdienst installiert haben, gibt es eine Reihe gleichwertiger Möglichkeiten, um darauf zu verweisen, z.&#160;B. in folgender Weise:</span><span class="sxs-lookup"><span data-stu-id="8b0f1-129">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  

- `http://localhost/foo.svc`
- `http://192.168.1.100/foo.svc`
- `http://[my-machine-name]/foo.svc`
- `http://[my-machine-name].[my-company].com/foo.svc`
  
 <span data-ttu-id="8b0f1-130">Der Standardwert für diese Eigenschaft ist `false`, sodass alle oben genannten URIs in denselben Endpunkt aufgelöst werden, sofern Sie diese Eigenschaft nicht ändern.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-130">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8b0f1-131">Testet, ob eine Nachricht oder gepufferte Nachricht die Kriterien des Endpunktfilters erfüllt.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-131">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b0f1-132">Der Unterschied zwischen den zwei Überladungen der <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A>-Methode besteht darin, dass eine Überladung, die den <xref:System.ServiceModel.Channels.MessageBuffer>-Parameter entgegennimmt, beim Testen auf Übereinstimmungen den Textinhalt überprüfen darf, während die andere, die den <xref:System.ServiceModel.Channels.Message>-Parameter entgegennimmt, dies nicht darf.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-132">The difference between the two overloads of the <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> method is that the one that takes the <xref:System.ServiceModel.Channels.MessageBuffer> parameter is permitted to examine the body of a message when testing for a match, while the one that takes the <xref:System.ServiceModel.Channels.Message> parameter is not.</span></span>  
  
 <span data-ttu-id="8b0f1-133"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> testet den Inhalt des Texts einer Nachricht nicht, weshalb diese zwei Methoden einander entsprechen.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-133"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> does not test the contents of the body of a message, so these two methods are equivalent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Match (message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="endpointAddressMessageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8b0f1-134">Das zu überprüfende <see cref="T:System.ServiceModel.Channels.Message" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-134">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="8b0f1-135">Testet, ob eine Nachricht mit der angegebenen Endpunktadresse übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-135">Tests whether a message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="8b0f1-136"><see langword="true" />, wenn das <see cref="T:System.ServiceModel.Channels.Message" />-Objekt mit der im Filter angegebenen Endpunktadresse übereinstimmt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-136"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b0f1-137">Die zwei Überladungen dieser Methode stimmen überein, da beide nur Nachrichtenheader überprüfen.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-137">The two overloads of this method are equivalent because they both examine only message headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b0f1-138"><paramref name="message" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-138"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Match (messageBuffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="endpointAddressMessageFilter.Match messageBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="8b0f1-139">Das zu überprüfende <see cref="T:System.ServiceModel.Channels.MessageBuffer" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-139">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="8b0f1-140">Testet, ob eine gepufferte Nachricht mit der angegebenen Endpunktadresse übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-140">Tests whether a buffered message satisfies the specified endpoint address.</span></span></summary>
        <returns><span data-ttu-id="8b0f1-141"><see langword="true" />, wenn das <see cref="T:System.ServiceModel.Channels.MessageBuffer" />-Objekt mit der Endpunktadresse übereinstimmt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-141"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8b0f1-142">Die zwei Überladungen dieser Methode stimmen überein, da beide nur Nachrichtenheader überprüfen.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-142">The two overloads of this method are equivalent because they both examine only message headers.</span></span> <span data-ttu-id="8b0f1-143">Als einziger Grund für die Nutzung dieser Überladung gilt, dass Sie bereits `messageBuffer` zur Verfügung haben und keine Nachricht, denn durch diese Methode wird `messageBuffer` in eine Nachricht umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-143">The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8b0f1-144"><paramref name="messageBuffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8b0f1-144"><paramref name="messageBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
