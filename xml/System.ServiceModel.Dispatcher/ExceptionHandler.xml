<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExceptionHandler.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac598fb63a76f22101de50ac6bff7487cd55f5f86ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">98fb63a76f22101de50ac6bff7487cd55f5f86ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>Extend the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> class to create an exception handler for unhandled exceptions that occur within the Windows Communication Foundation (WCF) runtime.</source>
          <target state="translated">Erweitern Sie die <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph>-Klasse, um einen Ausnahmehandler für nicht verarbeitete Ausnahmen zu erstellen, die innerhalb der Windows Communication Foundation-Laufzeit auftreten.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>Extend the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> class and override the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> method to determine whether an exception should terminate the application.</source>
          <target state="translated">Erweitern Sie die <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph>-Klasse, und überschreiben Sie die <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph>-Methode, um festzulegen, ob eine Ausnahme die Anwendung beenden soll.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>Then create a new instance of your custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> class and assign it to the static <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A&gt;</ph> property prior to creating <ph id="ph4">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> clients or services.</source>
          <target state="translated">Erstellen Sie dann eine neue Instanz Ihrer benutzerdefinierten <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph>-Klasse, und weisen Sie diese der statischen <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A&gt;</ph>-Eigenschaft oder der <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A&gt;</ph>-Eigenschaft zu, bevor Sie <ph id="ph4">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Clients oder -Dienste erstellen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>The following code example shows an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> abstract class that overrides the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Codebeispiel wird eine Implementierung der abstrakten Klasse <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> veranschaulicht, die die <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph>-Methode überschreibt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ExceptionHandler">
          <source>The following code example shows how to enable the custom <ph id="ph1">`MyExceptionHandler`</ph> for unhandled exceptions that occur within the <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> runtime.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie der benutzerdefinierte <ph id="ph1">`MyExceptionHandler`</ph> für nicht verarbeitete Ausnahmen aktiviert wird, die innerhalb der <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Laufzeit auftreten.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle">
          <source>Gets an instance of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> that handles all exceptions.</source>
          <target state="translated">Ruft eine Instanz von <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> ab, die alle Ausnahmen verarbeitet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> object that returns <ph id="ph2">&lt;see langword="true" /&gt;</ph> for all exceptions.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph>-Objekt, das <ph id="ph2">&lt;see langword="true" /&gt;</ph> für alle Ausnahmen zurückgibt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>Gets or sets the current <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> implementation for the application domain.</source>
          <target state="translated">Ruft die aktuelle <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph>-Implementierung für die Anwendungsdomäne ab, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>Assign a custom <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> object that receives unhandled exceptions that occur on asynchronous <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> threads.</source>
          <target state="translated">Weisen Sie ein benutzerdefiniertes <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph>-Objekt zu, das nicht verarbeitete Ausnahmen empfängt, die in asynchronen <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>-Threads auftreten.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>By default, the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, and unhandled exceptions on asynchronous <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> threads terminate the application.</source>
          <target state="translated">Standardmäßig ist die <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A&gt;</ph>-Eigenschaft <ph id="ph2">`null`</ph>, und nicht verarbeitete Ausnahmen in asynchronen <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Threads beenden die Anwendung.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>Set this property to an <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> object to receive and react to these exceptions.</source>
          <target state="translated">Legen Sie diese Eigenschaft auf ein <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph>-Objekt fest, um diese Ausnahmen zu empfangen und darauf zu reagieren.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source>If an unhandled exception occurs on an asynchronous <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> thread and reaches this handler, the state of the application domain may be compromised.</source>
          <target state="translated">Wenn eine nicht verarbeitete Ausnahme in einem asynchronen <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Thread auftritt und diesen Handler erreicht, kann der Zustand der Anwendungsdomäne beeinträchtigt werden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> should not return <ph id="ph2">`true`</ph> for these exceptions.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> sollte keine zurückgeben <ph id="ph2">`true`</ph> für diese Ausnahmen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>The exception the occurred within the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> runtime and which may terminate the application.</source>
          <target state="translated">Die Ausnahme, die innerhalb der <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>-Laufzeit aufgetreten ist und die die Anwendung beenden kann.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>When overridden in a derived class, returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the exception has been handled, or <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the exception should be rethrown and the application terminated.</source>
          <target state="translated">Wenn dies in einer abgeleiteten Klassen überschrieben wird, wird <ph id="ph1">&lt;see langword="true" /&gt;</ph> zurückgegeben, wenn die Ausnahme verarbeitet wurde, oder <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn die Ausnahme erneut ausgelöst werden und die Anwendung beendet werden soll.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the exception has been handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Ausnahme verarbeitet wurde, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the exception has been handled.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph>-Eigenschaft gibt <ph id="ph2">`true`</ph> zurück, wenn die Ausnahme verarbeitet wurde.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>If it returns <ph id="ph1">`false`</ph> or throws a different exception, the original exception is rethrown.</source>
          <target state="translated">Wenn sie <ph id="ph1">`false`</ph> zurückgibt oder eine andere Ausnahme auslöst, wird die ursprüngliche Ausnahme erneut ausgelöst.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>The following code example shows an implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> abstract class that overrides the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Codebeispiel wird eine Implementierung der abstrakten Klasse <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> veranschaulicht, die die <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph>-Methode überschreibt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
          <source>The following code example shows how to enable the custom <ph id="ph1">`MyExceptionHandler`</ph> for unhandled exceptions that occur within the <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> runtime.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie der benutzerdefinierte <ph id="ph1">`MyExceptionHandler`</ph> für nicht verarbeitete Ausnahmen aktiviert wird, die innerhalb der <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Laufzeit auftreten.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>Gets or sets the current transport <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> implementation for the application domain.</source>
          <target state="translated">Ruft die aktuelle Transport-<ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph>-Implementierung für die Anwendungsdomäne ab, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>A custom <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph> object that receives unhandled exceptions that occur within the global <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> transports.</source>
          <target state="translated">Ein benutzerdefiniertes <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /&gt;</ph>-Objekt, das nicht verarbeitete Ausnahmen empfängt, die innerhalb der globalen <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>-Transporte auftreten.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>By default, the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A&gt;</ph> property is set to the value of <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A&gt;</ph>, causing unhandled exceptions within <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> transports to be ignored.</source>
          <target state="translated">Standardmäßig wird die <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A&gt;</ph>-Eigenschaft auf den Wert <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A&gt;</ph> gesetzt. Dies bewirkt, dass nicht verarbeitete Ausnahmen in <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Transporten ignoriert werden.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>Set this property to an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> to receive and react to these exceptions.</source>
          <target state="translated">Legen Sie diese Eigenschaft auf eine Instanz von <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler&gt;</ph> fest, um diese Ausnahmen zu empfangen und darauf zu reagieren.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source>If an unhandled exception occurs within a global <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> transport and reaches this handler, there is a possibility that the state of the application domain is compromised.</source>
          <target state="translated">Wenn eine nicht verarbeitete Ausnahme innerhalb eines globalen <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph>-Transports auftritt und diesen Handler erreicht, besteht die Möglichkeit, dass der Zustand der Anwendungsdomäne beeinträchtigt wird.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> can return <ph id="ph2">`false`</ph> for these exceptions to cause the application to be terminated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A&gt;</ph> zurückgeben können <ph id="ph2">`false`</ph> für diese Ausnahmen, die dazu führen, dass die Anwendung beendet wird.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>