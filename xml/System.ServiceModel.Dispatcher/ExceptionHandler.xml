<Type Name="ExceptionHandler" FullName="System.ServiceModel.Dispatcher.ExceptionHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98fb63a76f22101de50ac6bff7487cd55f5f86ae" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExceptionHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExceptionHandler extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ExceptionHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExceptionHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionHandler abstract" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="925c4-101">Erweitern Sie die <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />-Klasse, um einen Ausnahmehandler für nicht verarbeitete Ausnahmen zu erstellen, die innerhalb der Windows Communication Foundation-Laufzeit auftreten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="925c4-101">Extend the <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> class to create an exception handler for unhandled exceptions that occur within the Windows Communication Foundation (WCF) runtime.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c4-102">Erweitern Sie die <xref:System.ServiceModel.Dispatcher.ExceptionHandler>-Klasse, und überschreiben Sie die <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>-Methode, um festzulegen, ob eine Ausnahme die Anwendung beenden soll.</span><span class="sxs-lookup"><span data-stu-id="925c4-102">Extend the <xref:System.ServiceModel.Dispatcher.ExceptionHandler> class and override the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method to determine whether an exception should terminate the application.</span></span> <span data-ttu-id="925c4-103">Erstellen Sie dann eine neue Instanz Ihrer benutzerdefinierten <xref:System.ServiceModel.Dispatcher.ExceptionHandler>-Klasse, und weisen Sie diese der statischen <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A>-Eigenschaft oder der <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A>-Eigenschaft zu, bevor Sie [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Clients oder -Dienste erstellen.</span><span class="sxs-lookup"><span data-stu-id="925c4-103">Then create a new instance of your custom <xref:System.ServiceModel.Dispatcher.ExceptionHandler> class and assign it to the static <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A> or <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> property prior to creating [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients or services.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c4-104">Im folgenden Codebeispiel wird eine Implementierung der abstrakten Klasse <xref:System.ServiceModel.Dispatcher.ExceptionHandler> veranschaulicht, die die <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>-Methode überschreibt.</span><span class="sxs-lookup"><span data-stu-id="925c4-104">The following code example shows an implementation of the <xref:System.ServiceModel.Dispatcher.ExceptionHandler> abstract class that overrides the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method.</span></span>  
  
 [!code-csharp[S_UEExceptionHandler#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueexceptionhandler/cs/program.cs#0)]
 [!code-vb[S_UEExceptionHandler#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueexceptionhandler/vb/module1.vb#0)]  
  
 <span data-ttu-id="925c4-105">Im folgenden Codebeispiel wird veranschaulicht, wie der benutzerdefinierte `MyExceptionHandler` für nicht verarbeitete Ausnahmen aktiviert wird, die innerhalb der [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Laufzeit auftreten.</span><span class="sxs-lookup"><span data-stu-id="925c4-105">The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] runtime.</span></span>  
  
 [!code-csharp[S_UEExceptionHandler#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueexceptionhandler/cs/program.cs#1)]
 [!code-vb[S_UEExceptionHandler#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ueexceptionhandler/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExceptionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ExceptionHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExceptionHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="925c4-106">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlwaysHandle">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Dispatcher.ExceptionHandler AlwaysHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Dispatcher.ExceptionHandler AlwaysHandle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlwaysHandle As ExceptionHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Dispatcher::ExceptionHandler ^ AlwaysHandle { System::ServiceModel::Dispatcher::ExceptionHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ExceptionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="925c4-107">Ruft eine Instanz von <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> ab, die alle Ausnahmen verarbeitet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-107">Gets an instance of <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> that handles all exceptions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="925c4-108">Ein <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />-Objekt, das <see langword="true" /> für alle Ausnahmen zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-108">An <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> object that returns <see langword="true" /> for all exceptions.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousThreadExceptionHandler">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Dispatcher.ExceptionHandler AsynchronousThreadExceptionHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Dispatcher.ExceptionHandler AsynchronousThreadExceptionHandler" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AsynchronousThreadExceptionHandler As ExceptionHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Dispatcher::ExceptionHandler ^ AsynchronousThreadExceptionHandler { System::ServiceModel::Dispatcher::ExceptionHandler ^ get(); void set(System::ServiceModel::Dispatcher::ExceptionHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ExceptionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="925c4-109">Ruft die aktuelle <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />-Implementierung für die Anwendungsdomäne ab, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-109">Gets or sets the current <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> implementation for the application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="925c4-110">Weisen Sie ein benutzerdefiniertes <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />-Objekt zu, das nicht verarbeitete Ausnahmen empfängt, die in asynchronen [!INCLUDE[indigo1](~/includes/indigo1-md.md)]-Threads auftreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-110">Assign a custom <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> object that receives unhandled exceptions that occur on asynchronous [!INCLUDE[indigo1](~/includes/indigo1-md.md)] threads.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c4-111">Standardmäßig ist die <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A>-Eigenschaft `null`, und nicht verarbeitete Ausnahmen in asynchronen [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Threads beenden die Anwendung.</span><span class="sxs-lookup"><span data-stu-id="925c4-111">By default, the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler%2A> property is `null`, and unhandled exceptions on asynchronous [!INCLUDE[indigo2](~/includes/indigo2-md.md)] threads terminate the application.</span></span>  <span data-ttu-id="925c4-112">Legen Sie diese Eigenschaft auf ein <xref:System.ServiceModel.Dispatcher.ExceptionHandler>-Objekt fest, um diese Ausnahmen zu empfangen und darauf zu reagieren.</span><span class="sxs-lookup"><span data-stu-id="925c4-112">Set this property to an <xref:System.ServiceModel.Dispatcher.ExceptionHandler> object to receive and react to these exceptions.</span></span>  
  
 <span data-ttu-id="925c4-113">Wenn eine nicht verarbeitete Ausnahme in einem asynchronen [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Thread auftritt und diesen Handler erreicht, kann der Zustand der Anwendungsdomäne beeinträchtigt werden.</span><span class="sxs-lookup"><span data-stu-id="925c4-113">If an unhandled exception occurs on an asynchronous [!INCLUDE[indigo2](~/includes/indigo2-md.md)] thread and reaches this handler, the state of the application domain may be compromised.</span></span>  <span data-ttu-id="925c4-114"><xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> sollte keine zurückgeben `true` für diese Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="925c4-114"><xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> should not return `true` for these exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleException">
      <MemberSignature Language="C#" Value="public abstract bool HandleException (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleException(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool HandleException(Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="925c4-115">Die Ausnahme, die innerhalb der [!INCLUDE[indigo1](~/includes/indigo1-md.md)]-Laufzeit aufgetreten ist und die die Anwendung beenden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-115">The exception the occurred within the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] runtime and which may terminate the application.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="925c4-116">Wenn dies in einer abgeleiteten Klassen überschrieben wird, wird <see langword="true" /> zurückgegeben, wenn die Ausnahme verarbeitet wurde, oder <see langword="false" />, wenn die Ausnahme erneut ausgelöst werden und die Anwendung beendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-116">When overridden in a derived class, returns <see langword="true" /> if the exception has been handled, or <see langword="false" /> if the exception should be rethrown and the application terminated.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="925c4-117">
            <see langword="true" />, wenn die Ausnahme verarbeitet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-117">
              <see langword="true" /> if the exception has been handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c4-118">Die <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>-Eigenschaft gibt `true` zurück, wenn die Ausnahme verarbeitet wurde.</span><span class="sxs-lookup"><span data-stu-id="925c4-118">The <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> property returns `true` if the exception has been handled.</span></span> <span data-ttu-id="925c4-119">Wenn sie `false` zurückgibt oder eine andere Ausnahme auslöst, wird die ursprüngliche Ausnahme erneut ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="925c4-119">If it returns `false` or throws a different exception, the original exception is rethrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="925c4-120">Im folgenden Codebeispiel wird eine Implementierung der abstrakten Klasse <xref:System.ServiceModel.Dispatcher.ExceptionHandler> veranschaulicht, die die <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A>-Methode überschreibt.</span><span class="sxs-lookup"><span data-stu-id="925c4-120">The following code example shows an implementation of the <xref:System.ServiceModel.Dispatcher.ExceptionHandler> abstract class that overrides the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> method.</span></span>  
  
  
  
 <span data-ttu-id="925c4-121">Im folgenden Codebeispiel wird veranschaulicht, wie der benutzerdefinierte `MyExceptionHandler` für nicht verarbeitete Ausnahmen aktiviert wird, die innerhalb der [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Laufzeit auftreten.</span><span class="sxs-lookup"><span data-stu-id="925c4-121">The following code example shows how to enable the custom `MyExceptionHandler` for unhandled exceptions that occur within the [!INCLUDE[indigo2](~/includes/indigo2-md.md)] runtime.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransportExceptionHandler">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Dispatcher.ExceptionHandler TransportExceptionHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ServiceModel.Dispatcher.ExceptionHandler TransportExceptionHandler" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property TransportExceptionHandler As ExceptionHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ServiceModel::Dispatcher::ExceptionHandler ^ TransportExceptionHandler { System::ServiceModel::Dispatcher::ExceptionHandler ^ get(); void set(System::ServiceModel::Dispatcher::ExceptionHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ExceptionHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="925c4-122">Ruft die aktuelle Transport-<see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />-Implementierung für die Anwendungsdomäne ab, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-122">Gets or sets the current transport <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> implementation for the application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="925c4-123">Ein benutzerdefiniertes <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" />-Objekt, das nicht verarbeitete Ausnahmen empfängt, die innerhalb der globalen [!INCLUDE[indigo1](~/includes/indigo1-md.md)]-Transporte auftreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="925c4-123">A custom <see cref="T:System.ServiceModel.Dispatcher.ExceptionHandler" /> object that receives unhandled exceptions that occur within the global [!INCLUDE[indigo1](~/includes/indigo1-md.md)] transports.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="925c4-124">Standardmäßig wird die <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A>-Eigenschaft auf den Wert <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A> gesetzt. Dies bewirkt, dass nicht verarbeitete Ausnahmen in [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Transporten ignoriert werden.</span><span class="sxs-lookup"><span data-stu-id="925c4-124">By default, the <xref:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler%2A> property is set to the value of <xref:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle%2A>, causing unhandled exceptions within [!INCLUDE[indigo2](~/includes/indigo2-md.md)] transports to be ignored.</span></span>  <span data-ttu-id="925c4-125">Legen Sie diese Eigenschaft auf eine Instanz von <xref:System.ServiceModel.Dispatcher.ExceptionHandler> fest, um diese Ausnahmen zu empfangen und darauf zu reagieren.</span><span class="sxs-lookup"><span data-stu-id="925c4-125">Set this property to an instance of <xref:System.ServiceModel.Dispatcher.ExceptionHandler> to receive and react to these exceptions.</span></span>  
  
 <span data-ttu-id="925c4-126">Wenn eine nicht verarbeitete Ausnahme innerhalb eines globalen [!INCLUDE[indigo2](~/includes/indigo2-md.md)]-Transports auftritt und diesen Handler erreicht, besteht die Möglichkeit, dass der Zustand der Anwendungsdomäne beeinträchtigt wird.</span><span class="sxs-lookup"><span data-stu-id="925c4-126">If an unhandled exception occurs within a global [!INCLUDE[indigo2](~/includes/indigo2-md.md)] transport and reaches this handler, there is a possibility that the state of the application domain is compromised.</span></span> <span data-ttu-id="925c4-127"><xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> zurückgeben können `false` für diese Ausnahmen, die dazu führen, dass die Anwendung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="925c4-127"><xref:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException%2A> can return `false` for these exceptions to cause the application to be terminated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>