<Type Name="StrictAndMessageFilter" FullName="System.ServiceModel.Dispatcher.StrictAndMessageFilter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2f8b3e28a32258c620429ba8c26f1dcf8934e85" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69104377" /></Metadata><TypeSignature Language="C#" Value="public class StrictAndMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StrictAndMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class StrictAndMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrictAndMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <TypeSignature Language="F#" Value="type StrictAndMessageFilter = class&#xA;    inherit MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Routing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="14f2e-101">Stellt eine Abfrage dar, die testet, ob eine Nachricht die beiden angegebenen <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />-Bedingungen erfüllt.</span><span class="sxs-lookup"><span data-stu-id="14f2e-101">Represents a query that tests whether a message satisfies both specified <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f2e-102">Bei mit diesem Filter ausgeführten Abgleichen werden immer beide <xref:System.ServiceModel.Dispatcher.MessageFilter>-Objekte ausgewertet, bevor ein Ergebnis zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="14f2e-102">Matches performed by this filter will always evaluate both <xref:System.ServiceModel.Dispatcher.MessageFilter> objects before returning a result.</span></span>  
  
 <span data-ttu-id="14f2e-103">Diese AND-Operation führt zu keinem Kurzschluss, wenn das erste ausgewertete <xref:System.ServiceModel.Dispatcher.MessageFilter>-Objekt FALSE zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="14f2e-103">This AND operation does not short circuit if the first <xref:System.ServiceModel.Dispatcher.MessageFilter> evaluated returns false.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrictAndMessageFilter (System.ServiceModel.Dispatcher.MessageFilter filter1, System.ServiceModel.Dispatcher.MessageFilter filter2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Dispatcher.MessageFilter filter1, class System.ServiceModel.Dispatcher.MessageFilter filter2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.#ctor(System.ServiceModel.Dispatcher.MessageFilter,System.ServiceModel.Dispatcher.MessageFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter1 As MessageFilter, filter2 As MessageFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrictAndMessageFilter(System::ServiceModel::Dispatcher::MessageFilter ^ filter1, System::ServiceModel::Dispatcher::MessageFilter ^ filter2);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Dispatcher.StrictAndMessageFilter : System.ServiceModel.Dispatcher.MessageFilter * System.ServiceModel.Dispatcher.MessageFilter -&gt; System.ServiceModel.Dispatcher.StrictAndMessageFilter" Usage="new System.ServiceModel.Dispatcher.StrictAndMessageFilter (filter1, filter2)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter1" Type="System.ServiceModel.Dispatcher.MessageFilter" />
        <Parameter Name="filter2" Type="System.ServiceModel.Dispatcher.MessageFilter" />
      </Parameters>
      <Docs>
        <param name="filter1"><span data-ttu-id="14f2e-104">Das erste <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="14f2e-104">The first <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object.</span></span></param>
        <param name="filter2"><span data-ttu-id="14f2e-105">Das zweite <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="14f2e-105">The second <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> object.</span></span></param>
        <summary><span data-ttu-id="14f2e-106">Erstellt eine neue Instanz der <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />-Klasse mit dem angegebenen <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="14f2e-106">Creates a new instance of the <see cref="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" /> class using the specified <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;TFilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt; CreateFilterTable&lt;TFilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!TFilterData&gt; CreateFilterTable&lt;TFilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of TFilterData) () As IMessageFilterTable(Of TFilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename TFilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;TFilterData&gt; ^ CreateFilterTable();" />
      <MemberSignature Language="F#" Value="override this.CreateFilterTable : unit -&gt; System.ServiceModel.Dispatcher.IMessageFilterTable&lt;'FilterData&gt;" Usage="strictAndMessageFilter.CreateFilterTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;TFilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TFilterData"><span data-ttu-id="14f2e-107">Der dem Filter zugeordnete Datentyp.</span><span class="sxs-lookup"><span data-stu-id="14f2e-107">The type of data associated with the filter.</span></span></typeparam>
        <summary><span data-ttu-id="14f2e-108">Erstellt einen neuen <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />.</span><span class="sxs-lookup"><span data-stu-id="14f2e-108">Creates a new <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />.</span></span></summary>
        <returns><span data-ttu-id="14f2e-109">Ein neu erstelltes <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="14f2e-109">A newly created <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="14f2e-110">Testet, ob eine Nachricht oder eine gepufferte Nachricht dem Filter entspricht.</span><span class="sxs-lookup"><span data-stu-id="14f2e-110">Tests whether a message or a buffered message matches the filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f2e-111">Wenn eine Übereinstimmungsbedingung überprüft wird, werden beide <xref:System.ServiceModel.Dispatcher.MessageFilter>-Objekte ausgewertet, bevor ein Ergebnis zurückgegeben wird</span><span class="sxs-lookup"><span data-stu-id="14f2e-111">When testing for a match condition, both <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are evaluated before returning a result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.Message -&gt; bool" Usage="strictAndMessageFilter.Match message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="14f2e-112">Der zu überprüfende <see cref="T:System.ServiceModel.Channels.Message" />.</span><span class="sxs-lookup"><span data-stu-id="14f2e-112">The <see cref="T:System.ServiceModel.Channels.Message" /> to test.</span></span></param>
        <summary><span data-ttu-id="14f2e-113">Testet, ob eine Nachricht mit beiden <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />-Objekten übereinstimmt, die in diesem Filter angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="14f2e-113">Tests whether a message matches both of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects specified in this filter.</span></span></summary>
        <returns><span data-ttu-id="14f2e-114"><see langword="true" />, wenn die im Puffer enthaltene Nachricht beiden Nachrichtenfiltern entspricht; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14f2e-114"><see langword="true" /> if the message contained in the buffer matches both message filters; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Match (buffer As MessageBuffer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ buffer);" />
      <MemberSignature Language="F#" Value="override this.Match : System.ServiceModel.Channels.MessageBuffer -&gt; bool" Usage="strictAndMessageFilter.Match buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Routing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="14f2e-115">Der zu überprüfende <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="14f2e-115">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> to test.</span></span></param>
        <summary><span data-ttu-id="14f2e-116">Testet, ob eine gepufferte Nachricht mit beiden <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" />-Objekten übereinstimmt, die in diesem Filter angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="14f2e-116">Tests whether a buffered message matches both of the <see cref="T:System.ServiceModel.Dispatcher.MessageFilter" /> objects specified in this filter.</span></span></summary>
        <returns><span data-ttu-id="14f2e-117"><see langword="true" />, wenn die im Puffer enthaltene Nachricht beiden Nachrichtenfiltern entspricht; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="14f2e-117"><see langword="true" /> if the message contained in the buffer matches both message filters; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="14f2e-118">Wenn eine Übereinstimmungsbedingung überprüft wird, werden beide <xref:System.ServiceModel.Dispatcher.MessageFilter>-Objekte ausgewertet, bevor ein Ergebnis zurückgegeben wird</span><span class="sxs-lookup"><span data-stu-id="14f2e-118">When testing for a match condition, both <xref:System.ServiceModel.Dispatcher.MessageFilter> objects are evaluated before returning a result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
