<Type Name="ClientRuntime" FullName="System.ServiceModel.Dispatcher.ClientRuntime">
  <TypeSignature Language="C#" Value="public sealed class ClientRuntime" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientRuntime extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ClientRuntime" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientRuntime" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRuntime sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.ClientRuntimeCompatBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="xamarinandroid-7.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="11bbf-101">Stellt die Einfügemarke für Klassen, die den Funktionsumfang von WCF-Clientobjekten (Windows Communication Foundation) für alle durch die Clientanwendung verarbeiteten Nachrichten erweitert.</span><span class="sxs-lookup"><span data-stu-id="11bbf-101">Represents the insertion point for classes that extend the functionality of Windows Communication Foundation (WCF) client objects for all messages handled by a client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-102">WCF-Clientobjekte, ob eine Erweiterung der <xref:System.ServiceModel.ClientBase%601> oder <xref:System.ServiceModel.IClientChannel>, werden vom verwendet [!INCLUDE[indigo1](~/includes/indigo1-md.md)] Clientanwendungen konvertieren Methodenaufrufe in ausgehende Nachrichten und eingehende Nachrichten in Objekte konvertieren und dann an die Ergebnisse der Clientmethoden weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="11bbf-102">WCF client objects, whether an extension of <xref:System.ServiceModel.ClientBase%601> or of <xref:System.ServiceModel.IClientChannel>, are used by [!INCLUDE[indigo1](~/includes/indigo1-md.md)] client applications to convert method calls into outbound messages and convert incoming messages to objects and pass them to the results of client methods.</span></span>  
  
 <span data-ttu-id="11bbf-103">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime>-Klasse ist ein Erweiterungspunkt, an den Sie Erweiterungsobjekte anhängen können, die Nachrichten abfangen und das Clientverhalten auf alle Vorgänge ausdehnen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-103">The <xref:System.ServiceModel.Dispatcher.ClientRuntime> class is an extensibility point to which you can add extension objects that intercept messages and extend client behavior across all operations.</span></span> <span data-ttu-id="11bbf-104">Abfangobjekte können alle Nachrichten in einem bestimmten Vertrag verarbeiten, nur Nachrichten für bestimmte Vorgänge verarbeiten, eine benutzerdefinierte Kanalinitialisierung durchführen und sonstiges benutzerdefiniertes Verhalten von Clientanwendungen implementieren.</span><span class="sxs-lookup"><span data-stu-id="11bbf-104">Interception objects can process all messages in a particular contract, process only messages for particular operations, perform custom channel initialization, and implement other custom client application behavior.</span></span> <span data-ttu-id="11bbf-105">Einen Überblick über Clientarchitektur finden Sie unter [WCF-Clientarchitektur](~/docs/framework/wcf/feature-details/client-architecture.md).</span><span class="sxs-lookup"><span data-stu-id="11bbf-105">For an overview of client architecture, see [WCF Client Architecture](~/docs/framework/wcf/feature-details/client-architecture.md).</span></span> <span data-ttu-id="11bbf-106">Weitere Informationen zur Clientprogrammierung finden Sie unter [beim Zugriff auf Dienste, die mithilfe eines WCF-Clients](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span><span class="sxs-lookup"><span data-stu-id="11bbf-106">For more information about client programming, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span></span> <span data-ttu-id="11bbf-107">Einzelheiten zur benutzerdefinierten Anpassung und zu deren Ausführung finden Sie unter [Erweitern von Clients](~/docs/framework/wcf/extending/extending-clients.md).</span><span class="sxs-lookup"><span data-stu-id="11bbf-107">For details about customizations and how to perform them, see [Extending Clients](~/docs/framework/wcf/extending/extending-clients.md).</span></span>  
  
-   <span data-ttu-id="11bbf-108">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A>-Eigenschaft gibt das DispatchRuntime-Objekt für durch Dienste initiierte Rückrufvorgänge zurück.</span><span class="sxs-lookup"><span data-stu-id="11bbf-108">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A> property returns the dispatch run-time object for service-initiated callback operations.</span></span>  
  
-   <span data-ttu-id="11bbf-109">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A>-Eigenschaft akzeptiert ein benutzerdefiniertes Vorgangsauswahlobjekt, um das Routing von Clientnachrichten zu steuern.</span><span class="sxs-lookup"><span data-stu-id="11bbf-109">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A> property accepts a custom operation selector object to control the routing of client messages.</span></span>  
  
-   <span data-ttu-id="11bbf-110">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A>-Eigenschaft ermöglicht das Hinzufügen eines Kanalinitialisierers, der den Clientkanal prüfen oder abändern kann.</span><span class="sxs-lookup"><span data-stu-id="11bbf-110">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A> property enables the addition of a channel initializer that can inspect or modify the client channel.</span></span>  
  
-   <span data-ttu-id="11bbf-111">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A>-Eigenschaft kann zum Anzeigen einer visuellen Eingabeaufforderung verwendet werden, die es einem Benutzer ermöglicht, vor dem Öffnen eines Kanals Anmeldeinformationen auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-111">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers%2A> property can be used to display a visual prompt to enable a user to select credentials prior to opening the channel.</span></span>  
  
-   <span data-ttu-id="11bbf-112">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A>-Eigenschaft ruft eine Auflistung von <xref:System.ServiceModel.Dispatcher.ClientOperation>-Objekten ab, denen Sie benutzerdefinierte Nachrichteninterceptoren hinzufügen können, die spezielle Funktionen für die Nachrichten dieses Vorgangs bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-112">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property gets a collection of <xref:System.ServiceModel.Dispatcher.ClientOperation> objects to which you can add custom message interceptors that provide functionality specific to the messages of that operation.</span></span>  
  
-   <span data-ttu-id="11bbf-113">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A>-Eigenschaft ermöglicht einer Anwendung, bestimmte automatische Adressierungsheader zu deaktivieren, um die Adressierung direkt zu steuern.</span><span class="sxs-lookup"><span data-stu-id="11bbf-113">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property enables an application to turn off some automatic addressing headers to directly control addressing.</span></span>  
  
-   <span data-ttu-id="11bbf-114">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A>-Eigenschaft ermöglicht es dem Client, die Größe der Fehlermeldungen einzuschränken, die der Client entgegennimmt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-114">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A> property enables the client to limit the size of fault messages that the client accepts.</span></span>  
  
-   <span data-ttu-id="11bbf-115">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A>-Eigenschaft ruft eine Auflistung von <xref:System.ServiceModel.Dispatcher.IClientMessageInspector>-Objekten ab, denen Sie benutzerdefinierte Nachrichteninterceptoren für alle Nachrichten hinzufügen können, die einen Client durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-115">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> property gets a collection of <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> objects to which you can add custom message interceptors for all messages traveling through a client.</span></span>  
  
-   <span data-ttu-id="11bbf-116">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A>-Eigenschaft gibt den Vorgang zurück, an den unerwartete Nachrichten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="11bbf-116">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A> property returns the operation to which unexpected messages are passed.</span></span>  
  
-   <span data-ttu-id="11bbf-117">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A>-Eigenschaft informiert das System, ob es prüfen sollte, dass als `MustUnderstand` markierte SOAP-Header in der Tat verstanden wurden.</span><span class="sxs-lookup"><span data-stu-id="11bbf-117">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A> property informs the system whether it should confirm that SOAP headers marked as `MustUnderstand` have, in fact, been understood.</span></span>  
  
-   <span data-ttu-id="11bbf-118">Die <xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A>-Eigenschaft legt den Wert des Ziels der Nachricht auf der Transportebene fest, um Vermittler und andere Szenarien zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-118">The <xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A> property sets the value of the destination of the message at the transport level to support intermediaries and other scenarios.</span></span>  
  
 <span data-ttu-id="11bbf-119">Außerdem gibt es eine Reihe weiterer Eigenschaften, die die Clientvertragsinformationen abrufen:</span><span class="sxs-lookup"><span data-stu-id="11bbf-119">In addition, there are a number of other properties that retrieve the client contract information:</span></span>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ContractName%2A>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace%2A>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType%2A>  
  
 <span data-ttu-id="11bbf-120">Wenn es sich bei dem Client um einen Duplexclient handelt, rufen die folgenden Eigenschaften auch Rückruftyp und Laufzeit des Clients ab.</span><span class="sxs-lookup"><span data-stu-id="11bbf-120">If the client is a duplex client, the following properties also retrieve the client callback type and runtime:</span></span>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType%2A>  
  
-   <xref:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime%2A>  
  
   
  
## Examples  
 <span data-ttu-id="11bbf-121">Im folgenden Codebeispiel fügt ein <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> einen <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> in die Clientlaufzeit ein, indem dieser der <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A>-Eigenschaft hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="11bbf-121">In the following code example an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> inserts a <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> into the client runtime by adding it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> property.</span></span>  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 <span data-ttu-id="11bbf-122">Das folgende Codebeispiel zeigt eine Konfigurationsdatei, die das Endpunktverhalten in den Clientendpunkt lädt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-122">The following code example shows a configuration file that loads the endpoint behavior into the client endpoint.</span></span>  
  
 [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CallbackClientType">
      <MemberSignature Language="C#" Value="public Type CallbackClientType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CallbackClientType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType" />
      <MemberSignature Language="VB.NET" Value="Public Property CallbackClientType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CallbackClientType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-123">Ruft den Typ des Rückrufvertrags ab, der einem Duplexclient zugeordnet ist, bzw. legt diesen Typ fest.</span><span class="sxs-lookup"><span data-stu-id="11bbf-123">Gets or sets the type of the callback contract associated with a duplex client.</span></span></summary>
        <value><span data-ttu-id="11bbf-124">Ein <see cref="T:System.Type" />-Objekt, das den einem Duplexclient zugeordneten Rückrufvertrag darstellt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-124">A <see cref="T:System.Type" /> object that represents the callback contract associated with a duplex client.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackDispatchRuntime">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.DispatchRuntime CallbackDispatchRuntime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.DispatchRuntime CallbackDispatchRuntime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallbackDispatchRuntime As DispatchRuntime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::DispatchRuntime ^ CallbackDispatchRuntime { System::ServiceModel::Dispatcher::DispatchRuntime ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.DispatchRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-125">Ruft die DispatchRuntime ab, die durch den Dienst initiierte Vorgänge weiterleitet.</span><span class="sxs-lookup"><span data-stu-id="11bbf-125">Gets the dispatch run-time that dispatches service-initiated operations.</span></span></summary>
        <value><span data-ttu-id="11bbf-126">Ein <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-126">A <see cref="T:System.ServiceModel.Dispatcher.DispatchRuntime" /> object.</span></span> <span data-ttu-id="11bbf-127">Wenn der Vertrag ein Duplexvertrag ist, enthält das Verteilungsverhalten durch den Dienst initiierte Vorgänge; andernfalls enthält das Verteilungsverhalten keine Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="11bbf-127">If the contract is a duplex contract, the dispatch behavior contains service-initiated operations; otherwise the dispatch behavior contains no operations.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelInitializers As SynchronizedCollection(Of IChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ ChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-128">Ruft eine Auflistung von Kanalinitialisiererobjekten ab, die verwendet werden, um den einem Client zugeordneten Kanal anzupassen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-128">Gets a collection of channel initializer objects used to customize the channel associated with a client.</span></span></summary>
        <value><span data-ttu-id="11bbf-129">Eine Auflistung der <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />-Implementierungen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-129">A collection of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> implementations.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-130">Verwenden Sie die <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A>-Eigenschaft, um ein benutzerdefiniertes <xref:System.ServiceModel.Dispatcher.IChannelInitializer>-Objekt hinzuzufügen, das den einem Client zugeordneten Kanal beim Erstellen prüfen kann, Ereignisse im Kanal registrieren kann und dem Kanal einen Zustand durch Verwendung von <xref:System.ServiceModel.IExtension%601> zuordnen kann.</span><span class="sxs-lookup"><span data-stu-id="11bbf-130">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers%2A> property to add a custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> object that can inspect the channel that is associated with a client on creation, register for events on the channel, and associate state with the channel by using <xref:System.ServiceModel.IExtension%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientMessageInspectors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt; ClientMessageInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.IClientMessageInspector&gt; ClientMessageInspectors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientMessageInspectors As ICollection(Of IClientMessageInspector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ ClientMessageInspectors { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-131">Ruft eine Sammlung von Nachrichteninspektorobjekten ab, die verwendet werden, um Nachrichten eines bestimmten Dienstvorgangs anzuzeigen oder zu ändern.</span><span class="sxs-lookup"><span data-stu-id="11bbf-131">Gets a collection of message inspector objects used to view or modify messages of a particular service operation.</span></span></summary>
        <value><span data-ttu-id="11bbf-132">Eine Sammlung von Nachrichteninspektor-Objekten die verwendet werden, um Nachrichten eines bestimmten Dienstvorgangs anzuzeigen oder zu ändern.</span><span class="sxs-lookup"><span data-stu-id="11bbf-132">A collection of message inspector objects used to view or modify messages of a particular service operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-133">ClientMessateInspectors ist eine Thread-sichere-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="11bbf-133">ClientMessateInspectors is a thread safe collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientOperations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.ClientOperation&gt; ClientOperations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.ServiceModel.Dispatcher.ClientOperation&gt; ClientOperations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientOperations As ICollection(Of ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ ClientOperations { System::Collections::Generic::ICollection&lt;System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.ServiceModel.Dispatcher.ClientOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-134">Ruft eine Sammlung von Clientvorgangsobjekten zum Anfügen von Erweiterungsobjekten ab, die Nachrichten und das Verhalten eines bestimmten Dienstvorgangs überprüfen oder ändern.</span><span class="sxs-lookup"><span data-stu-id="11bbf-134">Gets a collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</span></span></summary>
        <value><span data-ttu-id="11bbf-135">Eine Sammlung von Clientvorgangsobjekten zum Anfügen von Erweiterungsobjekten, die Nachrichten und das Verhalten eines bestimmten Dienstvorgangs überprüfen oder ändern.</span><span class="sxs-lookup"><span data-stu-id="11bbf-135">A collection of client operation objects used to attach extension objects that inspect or modify messages and behavior of a particular service operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-136">ClientOperations ist eine Thread-sichere-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="11bbf-136">ClientOperations is a thread safe collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractClientType">
      <MemberSignature Language="C#" Value="public Type ContractClientType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractClientType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContractClientType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractClientType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-137">Übernimmt oder bestimmt den Typ des Vertrags, der einem Client zugeordnet wird.</span><span class="sxs-lookup"><span data-stu-id="11bbf-137">Gets or sets the type of the contract associated with a client.</span></span></summary>
        <value><span data-ttu-id="11bbf-138">Das <see cref="T:System.Type" />-Objekt, das den diesem Client zugeordneten Vertrag darstellt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-138">The <see cref="T:System.Type" /> object that represents the contract associated with this client.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-139">Ruft den Namen des Vertrags ab, der einem Client zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="11bbf-139">Gets the name of the contract associated with a client.</span></span></summary>
        <value><span data-ttu-id="11bbf-140">Der Vertragsname für einen Client.</span><span class="sxs-lookup"><span data-stu-id="11bbf-140">The contract name for a client.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractNamespace">
      <MemberSignature Language="C#" Value="public string ContractNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractNamespace" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-141">Ruft den Namespace des Vertrags ab, der einem Client zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="11bbf-141">Gets the namespace of the contract associated with a client.</span></span></summary>
        <value><span data-ttu-id="11bbf-142">Der Namespace des Vertrags, der einem Client zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="11bbf-142">The namespace of the contract associated with a client.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InteractiveChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt; InteractiveChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt; InteractiveChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InteractiveChannelInitializers As SynchronizedCollection(Of IInteractiveChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInteractiveChannelInitializer ^&gt; ^ InteractiveChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IInteractiveChannelInitializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IInteractiveChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-143">Ruft eine Auflistung eines interaktiven Kanalinitialisierers ab.</span><span class="sxs-lookup"><span data-stu-id="11bbf-143">Gets a collection of an interactive channel initializer.</span></span></summary>
        <value><span data-ttu-id="11bbf-144">Eine synchronisierte Auflistung des Typs <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />.</span><span class="sxs-lookup"><span data-stu-id="11bbf-144">A synchronized collection of type <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-145">Ausführliche Informationen zum Verwenden von interaktiven kanalinitialisierer finden Sie unter [beim Zugriff auf Dienste, die mithilfe eines WCF-Clients](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span><span class="sxs-lookup"><span data-stu-id="11bbf-145">For details about how to use interactive channel initializers, see [Accessing Services Using a WCF Client](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11bbf-146">Das folgende Codebeispiel zeigt die Verwendung eines Endpunktverhaltens, um einen interaktiven kanalinitialisierer einzufügen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-146">The following code example shows the use of an endpoint behavior to insert an interactive channel initializer.</span></span>  
  
 [!code-csharp[IInteractiveChannelInitializer#10](~/samples/snippets/csharp/VS_Snippets_CFX/iinteractivechannelinitializer/cs/insertingbehaviors.cs#10)]
 [!code-vb[IInteractiveChannelInitializer#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/iinteractivechannelinitializer/vb/insertingbehaviors.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualAddressing">
      <MemberSignature Language="C#" Value="public bool ManualAddressing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualAddressing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualAddressing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualAddressing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-147">Ruft einen Wert ab oder legt ihn fest, der angibt, ob der Client Adressierungsheader zu Anforderung-Antwort-Nachrichten hinzufügt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-147">Gets or sets a value that indicates whether the client adds addressing headers to request-reply messages.</span></span></summary>
        <value>
          <span data-ttu-id="11bbf-148"><see langword="true" />, wenn der Client keine Adressierungsheader hinzufügt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="11bbf-148"><see langword="true" /> if the client does not add any addressing headers; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="11bbf-149">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="11bbf-149">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-150">Legen Sie für die <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A>-Eigenschaft den Wert `true` fest, wenn Sie verhindern möchten, dass der Client Nachrichten-ID und Antwortadressierungsheader zu Anforderung-Antwort-Nachrichten hinzufügt, damit Ihre Anwendung diese Header steuern kann.</span><span class="sxs-lookup"><span data-stu-id="11bbf-150">Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and Reply-To addressing headers to request/response messages so that your application can control these headers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="11bbf-151">Wenn <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> `true` ist, unterstützt der Client keine Anforderung-Antwort-Vorgänge über einen Duplexkanal.</span><span class="sxs-lookup"><span data-stu-id="11bbf-151">If <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> is `true`, the client does not support request-reply operations over a duplex channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxFaultSize">
      <MemberSignature Language="C#" Value="public int MaxFaultSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxFaultSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFaultSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxFaultSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-152">Ruft die maximale Fehlergröße ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="11bbf-152">Gets or sets the maximum fault size.</span></span></summary>
        <value><span data-ttu-id="11bbf-153">Eine ganze Zahl, die die maximale Fehlergröße darstellt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-153">An integer representing the maximum fault size.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-154">Verwenden Sie die <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A>-Eigenschaft, um die Größe von Fehlermeldungen einzuschränken, die die Clientlaufzeit akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="11bbf-154">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize%2A> property to limit the size of fault messages accepted by the client runtime.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageInspectors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt; MessageInspectors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IClientMessageInspector&gt; MessageInspectors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MessageInspectors As SynchronizedCollection(Of IClientMessageInspector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ MessageInspectors { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IClientMessageInspector ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IClientMessageInspector&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-155">Ruft für einen Client eine Auflistung von Nachrichteninspektorimplementierungen ab.</span><span class="sxs-lookup"><span data-stu-id="11bbf-155">Gets a collection of message inspector implementations for a client.</span></span></summary>
        <value><span data-ttu-id="11bbf-156">Eine Auflistung der <see cref="T:System.ServiceModel.Dispatcher.IClientMessageInspector" />-Implementierungen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-156">A collection of <see cref="T:System.ServiceModel.Dispatcher.IClientMessageInspector" /> implementations.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-157">Verwenden Sie die <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A>-Eigenschaft, um benutzerdefinierte <xref:System.ServiceModel.Dispatcher.IClientMessageInspector>-Implementierungen anzuhängen, mit denen alle Nachrichten geprüft oder abgeändert werden können, die den Client durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-157">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> property to attach custom <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> implementations to inspect or modify all messages that flow through the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11bbf-158">Im folgenden Codebeispiel fügt ein <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> einen <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> in die Clientlaufzeit ein, indem dieser der <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A>-Eigenschaft hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="11bbf-158">In the following code example an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> inserts a <xref:System.ServiceModel.Dispatcher.IClientMessageInspector?displayProperty=nameWithType> into the client runtime by adding it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> property.</span></span>  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 <span data-ttu-id="11bbf-159">Das folgende Codebeispiel zeigt eine Konfigurationsdatei, die das Endpunktverhalten in den Clientendpunkt lädt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-159">The following code example shows a configuration file that loads the endpoint behavior into the client endpoint.</span></span>  
  
 [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageVersionNoneFaultsEnabled">
      <MemberSignature Language="C#" Value="public bool MessageVersionNoneFaultsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MessageVersionNoneFaultsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageVersionNoneFaultsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageVersionNoneFaultsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MessageVersionNoneFaultsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-160">Ruft einen Wert ab, der angibt, ob die MessageVersionNoneFaultsEnabled-Eigenschaft festgelegt ist, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="11bbf-160">Gets or sets a value that indicates whether the MessageVersionNoneFaultsEnabled property is set.</span></span></summary>
        <value>
          <span data-ttu-id="11bbf-161"><see langword="true" />, wenn die MessageVersionNoneFaultsEnabled-Eigenschaft festgelegt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="11bbf-161"><see langword="true" /> if the MessageVersionNoneFaultsEnabled property is set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Operations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedKeyedCollection&lt;string,System.ServiceModel.Dispatcher.ClientOperation&gt; Operations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedKeyedCollection`2&lt;string, class System.ServiceModel.Dispatcher.ClientOperation&gt; Operations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operations As SynchronizedKeyedCollection(Of String, ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedKeyedCollection&lt;System::String ^, System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ Operations { System::Collections::Generic::SynchronizedKeyedCollection&lt;System::String ^, System::ServiceModel::Dispatcher::ClientOperation ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedKeyedCollection&lt;System.String,System.ServiceModel.Dispatcher.ClientOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-162">Ruft eine Auflistung der Clientvorgänge für einen Client ab.</span><span class="sxs-lookup"><span data-stu-id="11bbf-162">Gets a collection of client operations for a client.</span></span></summary>
        <value><span data-ttu-id="11bbf-163">Eine synchronisierte Auflistung von <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />-Objekten.</span><span class="sxs-lookup"><span data-stu-id="11bbf-163">A synchronized collection of <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-164">Verwenden Sie die <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A>-Eigenschaft, um eine Auflistung aller Clientvorgänge für diesen Client abzurufen, die Sie zum Anhängen von Erweiterungsobjekten verwenden können, die Nachrichten und das auf einen bestimmten Vorgang abgezielte Verhalten prüfen oder abändern.</span><span class="sxs-lookup"><span data-stu-id="11bbf-164">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property to get a collection of all client operations for this client that you can use to attach extension objects that inspect or modify messages and behavior scoped to a particular operation.</span></span> <span data-ttu-id="11bbf-165">Ausführliche Informationen finden Sie unter <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span><span class="sxs-lookup"><span data-stu-id="11bbf-165">For details, see <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="11bbf-166">Im folgenden Codebeispiel fügt ein <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> einen <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> in die Clientlaufzeit ein, indem dieser jeder <xref:System.ServiceModel.Dispatcher.ClientOperation> in der <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A>-Eigenschaft hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="11bbf-166">In the following code example an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> inserts a <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> into the client runtime by adding it to each <xref:System.ServiceModel.Dispatcher.ClientOperation> in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> property.</span></span>  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationSelector">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.IClientOperationSelector OperationSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.IClientOperationSelector OperationSelector" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property OperationSelector As IClientOperationSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::IClientOperationSelector ^ OperationSelector { System::ServiceModel::Dispatcher::IClientOperationSelector ^ get(); void set(System::ServiceModel::Dispatcher::IClientOperationSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IClientOperationSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-167">Ruft eine <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />-Implementierung ab, die verwendet werden kann, um eine <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> auszuwählen, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="11bbf-167">Gets or sets an <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> implementation that can be used to select a <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</span></span></summary>
        <value><span data-ttu-id="11bbf-168">Ein <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />-Objekt, das einen <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> auswählt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-168">An <see cref="T:System.ServiceModel.Dispatcher.IClientOperationSelector" /> object that selects a <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-169">Verwenden Sie die <xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A>-Eigenschaft, um die Auswahl eines Vorgangs abzuändern, wenn ein Client eine bestimmte Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="11bbf-169">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector%2A> property to modify the selection of an operation when a client invokes a particular method.</span></span> <span data-ttu-id="11bbf-170">Der Standardalgorithmus ist die Verwendung des Namens <xref:System.ServiceModel.OperationContractAttribute.Name%2A> der Vorgangsmethode, um die <xref:System.ServiceModel.Dispatcher.ClientOperation> in der <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A>-Auflistung zu finden.</span><span class="sxs-lookup"><span data-stu-id="11bbf-170">The default algorithm is to use the name of the <xref:System.ServiceModel.OperationContractAttribute.Name%2A> of the operation method as a key to find the <xref:System.ServiceModel.Dispatcher.ClientOperation> in the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Operations%2A> collection.</span></span> <span data-ttu-id="11bbf-171">Wenn ein übereinstimmendes <xref:System.ServiceModel.Dispatcher.ClientOperation>-Objekt gefunden wird, wird der Aufruf an das <xref:System.ServiceModel.Dispatcher.ClientOperation>-Objekt gesendet, das von der <xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A>-Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="11bbf-171">If no matching <xref:System.ServiceModel.Dispatcher.ClientOperation> object is found, the invocation is dispatched to the <xref:System.ServiceModel.Dispatcher.ClientOperation> object returned from the <xref:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledClientOperation">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ClientOperation UnhandledClientOperation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ClientOperation UnhandledClientOperation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnhandledClientOperation As ClientOperation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ClientOperation ^ UnhandledClientOperation { System::ServiceModel::Dispatcher::ClientOperation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ClientOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-172">Ruft den Clientvorgang für Methoden ab, die nicht über eine entsprechende <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> in der <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />-Auflistung verfügen.</span><span class="sxs-lookup"><span data-stu-id="11bbf-172">Gets the client operation for methods that do not have a corresponding <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" /> collection.</span></span></summary>
        <value><span data-ttu-id="11bbf-173">Eine <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" />, die die Methode darstellt, an die der aktuelle Nachrichteninhalt weitergeleitet wird, wenn die Vorgangsauswahl keinen zu der Nachricht passenden Vorgang finden kann.</span><span class="sxs-lookup"><span data-stu-id="11bbf-173">A <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> that represents the method to which the current message contents are routed when the operation selector cannot find an operation that matches the message.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateMustUnderstand">
      <MemberSignature Language="C#" Value="public bool ValidateMustUnderstand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateMustUnderstand" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateMustUnderstand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateMustUnderstand { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-174">Ruft einen Wert ab oder legt diesen fest, der angibt, ob das System oder die Anwendung die Verarbeitung von <see langword="MustUnderstand" />-SOAP-Headern erzwingt.</span><span class="sxs-lookup"><span data-stu-id="11bbf-174">Gets or sets a value that specifies whether the system or the application enforces SOAP <see langword="MustUnderstand" /> header processing.</span></span></summary>
        <value>
          <span data-ttu-id="11bbf-175"><see langword="true" />, wenn das System die <see langword="MustUnderstand" />-SOAP-Header verarbeiten soll; andernfalls <see langword="false" />, was bedeutet, dass die Anwendung diese Header verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="11bbf-175"><see langword="true" /> if the system is to perform SOAP header <see langword="MustUnderstand" /> processing; otherwise <see langword="false" />, which indicates that the application performs this processing.</span></span> <span data-ttu-id="11bbf-176">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="11bbf-176">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-177">Verwenden Sie die <xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A>-Eigenschaft, um die erzwungene Validierung ankommender Nachrichtenheader zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="11bbf-177">Use the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand%2A> property to turn off the enforced validation of arriving message headers.</span></span> <span data-ttu-id="11bbf-178">Bei normaler Ausführung werden die Nachrichtenheader mit der <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A>-Eigenschaft verglichen, um zu bestätigen, dass eingehende Nachrichten explizit durch den Dienst verarbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="11bbf-178">In normal execution, message headers are compared against the <xref:System.ServiceModel.Channels.MessageHeaders.UnderstoodHeaders%2A> property to confirm that arriving headers are explicitly handled by the service.</span></span> <span data-ttu-id="11bbf-179">Legen Sie `false` fest, um diese Prüfung zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="11bbf-179">Set this to `false` to disable this checking.</span></span> <span data-ttu-id="11bbf-180">Wenn der Wert `false` festgelegt ist, muss die Anwendung auf Header prüfen, die mit MustUnderstand="true" markiert sind, und gibt einen Fehler zurück, wenn eine oder mehrere dieser Header nicht verstanden wurden.</span><span class="sxs-lookup"><span data-stu-id="11bbf-180">When set to `false`, the application must check for headers marked with MustUnderstand="true" and return a fault if one or more of them were not understood.</span></span> <span data-ttu-id="11bbf-181">Dies ist nützlich, wenn die Anwendung alle zurückgegebenen SOAP-Nachrichten akzeptieren (z.&#160;B. bei Verwendung typisierter oder nicht typisierter Nachrichten) und eine benutzerdefinierte Headerverarbeitung durchführen soll.</span><span class="sxs-lookup"><span data-stu-id="11bbf-181">This is useful when the application is supposed to accept any returned SOAP messages (for example, when using typed or untyped messages) and perform custom header processing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ClientRuntime.Via" />
      <MemberSignature Language="VB.NET" Value="Public Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="11bbf-182">Ruft die Transportadresse ab, die verwendet wird, um Nachrichten durch den Client zu senden, oder legt diese Transportadresse fest.</span><span class="sxs-lookup"><span data-stu-id="11bbf-182">Gets or sets the transport address that is used to send messages through the client.</span></span></summary>
        <value><span data-ttu-id="11bbf-183">Eine <see cref="T:System.Uri" />, der die Zieladresse für den Transport ist.</span><span class="sxs-lookup"><span data-stu-id="11bbf-183">A <see cref="T:System.Uri" /> that is the destination address for the transport.</span></span> <span data-ttu-id="11bbf-184">Der Standardwert ist der <see cref="P:System.ServiceModel.EndpointAddress.Uri" />-Wert des Clients.</span><span class="sxs-lookup"><span data-stu-id="11bbf-184">The default value is the <see cref="P:System.ServiceModel.EndpointAddress.Uri" /> value of the client.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="11bbf-185">Legen Sie die <xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A>-Eigenschaft fest, um eine Transportadresse für Nachrichten anzugeben, wenn das unmittelbare Ziel der Nachrichten nicht die <xref:System.ServiceModel.EndpointAddress.Uri%2A> des Clients ist.</span><span class="sxs-lookup"><span data-stu-id="11bbf-185">Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.Via%2A> property to specify a transport address for messages when the immediate destination of messages is not the client's <xref:System.ServiceModel.EndpointAddress.Uri%2A>.</span></span> <span data-ttu-id="11bbf-186">Auf diese Weise können Sie SOAP-Vermittler angeben und Szenarios verarbeiten, in denen der Wert der <xref:System.ServiceModel.EndpointAddress.Uri%2A>-Eigenschaft des Clients ein logischer Name ist.</span><span class="sxs-lookup"><span data-stu-id="11bbf-186">This enables you to specify SOAP intermediaries and handle scenarios in which the value of the <xref:System.ServiceModel.EndpointAddress.Uri%2A> property of the client is a logical name.</span></span>  
  
 <span data-ttu-id="11bbf-187">Diesen Wert legt das <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType> von einer Konfigurationsdatei aus fest.</span><span class="sxs-lookup"><span data-stu-id="11bbf-187">It is this value that the <xref:System.ServiceModel.Description.ClientViaBehavior?displayProperty=nameWithType> sets from a configuration file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>