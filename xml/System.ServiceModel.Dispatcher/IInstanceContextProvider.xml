<Type Name="IInstanceContextProvider" FullName="System.ServiceModel.Dispatcher.IInstanceContextProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0aa99f55ad7d6609f503f36a43869a0e77c65cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInstanceContextProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInstanceContextProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInstanceContextProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInstanceContextProvider" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="960eb-101">Implementieren Sie dies, um die Erstellung oder Auswahl eines <see cref="T:System.ServiceModel.InstanceContext" />-Objekts mitzubestimmen, insbesondere, um freigegebene Sitzungen zu aktivieren.</span>
      <span class="sxs-lookup">
        <span data-stu-id="960eb-101">Implement to participate in the creation or choosing of a <see cref="T:System.ServiceModel.InstanceContext" /> object, especially to enable shared sessions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="960eb-102">Implementieren Sie die <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider>-Schnittstelle, um dem System das entsprechende <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>-Objekt bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="960eb-102">Implement the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> interface to provide the appropriate <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> object to the system.</span></span> <span data-ttu-id="960eb-103">In der Regel wird diese Schnittstelle implementiert, um freigegebene Sitzungen zu unterstützen, Dienstinstanzpooling zu aktivieren, die Lebensdauer von Dienstinstanzen zu steuern oder Clients Kontexte in Gruppen zuzuordnen.</span><span class="sxs-lookup"><span data-stu-id="960eb-103">Typically, this interface is implemented to support shared sessions, enable service instance pooling, control lifetimes of service instances, or to group contexts among clients.</span></span>  
  
 <span data-ttu-id="960eb-104">Um zum Beispiel die Freigabe zu implementieren, fügen Sie einen benutzerdefinierten <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> ein, um zu entscheiden, welche Sitzung oder welcher Aufruf eines Clients welchem <xref:System.ServiceModel.InstanceContext>-Objekt zugeordnet wird.</span><span class="sxs-lookup"><span data-stu-id="960eb-104">For example, to implement sharing, insert a custom <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> to decide which session or call from a client is associated with which <xref:System.ServiceModel.InstanceContext> object.</span></span> <span data-ttu-id="960eb-105">Ein Beispiel, das die Freigabe von instanzkontexten veranschaulicht wird, finden Sie unter [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span><span class="sxs-lookup"><span data-stu-id="960eb-105">For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="960eb-106">Wenn <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> in [!INCLUDE[indigo1](~/includes/indigo1-md.md)] eingefügt wird, wird die normale Eigenschaft, die die Erstellung von <xref:System.ServiceModel.InstanceContext>-Objekten steuert (die <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType>-Eigenschaft) nicht mehr überprüft und hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="960eb-106">When an <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider> is inserted into [!INCLUDE[indigo1](~/includes/indigo1-md.md)], the normal property that controls the creation of <xref:System.ServiceModel.InstanceContext> objects (the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property) is no longer checked and has no effect.</span></span>  
  
 <span data-ttu-id="960eb-107">Ein allgemeinerer Mechanismus, mit dem Sie <xref:System.ServiceModel.InstanceContext>-Objekte bei der Erstellung initialisieren können (zum Beispiel um benutzerdefinierte Erweiterungen an alle <xref:System.ServiceModel.InstanceContext> anzufügen), ist <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="960eb-107">A more generic mechanism by which you can initialize <xref:System.ServiceModel.InstanceContext> objects when created (for example, to attach custom extensions to each <xref:System.ServiceModel.InstanceContext>) is the <xref:System.ServiceModel.Dispatcher.IInstanceContextInitializer?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetExistingInstanceContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.InstanceContext GetExistingInstanceContext (System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.InstanceContext GetExistingInstanceContext(class System.ServiceModel.Channels.Message message, class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::InstanceContext ^ GetExistingInstanceContext(System::ServiceModel::Channels::Message ^ message, System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.InstanceContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="960eb-108">Die eingehende Nachricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-108">The incoming message.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="960eb-109">Der Kanal, der die Nachricht empfangen hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-109">The channel that received the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="960eb-110">Wird aufgerufen, wenn eine neue Nachricht empfangen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-110">Called when a new message is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="960eb-111">Das <see cref="T:System.ServiceModel.InstanceContext" />-Objekt, das zur Verarbeitung der Nachricht genutzt wird; geben Sie <see langword="null" /> zurück, um [!INCLUDE[indigo2](~/includes/indigo2-md.md)] anzuweisen, ein neues <see cref="T:System.ServiceModel.InstanceContext" />-Objekt zu erstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-111">The <see cref="T:System.ServiceModel.InstanceContext" /> object that is used to process the message; return <see langword="null" /> to instruct [!INCLUDE[indigo2](~/includes/indigo2-md.md)] to create a new <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="960eb-112">Die <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A>-Methode wird aufgerufen, wenn eine Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="960eb-112">The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> method is called when a message is received.</span></span> <span data-ttu-id="960eb-113">Geben Sie das <xref:System.ServiceModel.InstanceContext>-Objekt zurück, dass die Nachricht verarbeiten soll, oder `null`.</span><span class="sxs-lookup"><span data-stu-id="960eb-113">Return the <xref:System.ServiceModel.InstanceContext> object that you want to process the message, or `null`.</span></span> <span data-ttu-id="960eb-114">Im Fall von `null` erstellt [!INCLUDE[indigo2](~/includes/indigo2-md.md)] ein neues <xref:System.ServiceModel.InstanceContext>-Objekt für die Nachricht und ruft dann die <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A>-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="960eb-114">In the case of `null`, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] creates a new <xref:System.ServiceModel.InstanceContext> object for the message and then calls the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> method.</span></span>  
  
 <span data-ttu-id="960eb-115">Wenn Sie `null` zurückgeben, bewegt sich das neue <xref:System.ServiceModel.InstanceContext>-Objekt durch das Drosselungssystem und erhöht die Anzahl von <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="960eb-115">If you return `null`, the new <xref:System.ServiceModel.InstanceContext> object goes through the throttling system and increments the count of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeInstanceContext">
      <MemberSignature Language="C#" Value="public void InitializeInstanceContext (System.ServiceModel.InstanceContext instanceContext, System.ServiceModel.Channels.Message message, System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeInstanceContext(class System.ServiceModel.InstanceContext instanceContext, class System.ServiceModel.Channels.Message message, class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InitializeInstanceContext(System::ServiceModel::InstanceContext ^ instanceContext, System::ServiceModel::Channels::Message ^ message, System::ServiceModel::IContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="960eb-116">Das neue <see cref="T:System.ServiceModel.InstanceContext" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-116">The new <see cref="T:System.ServiceModel.InstanceContext" /> object.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="960eb-117">Die eingehende Nachricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-117">The incoming message.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="960eb-118">Der Kanal, der die Nachricht empfangen hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-118">The channel that received the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="960eb-119">Wird aufgerufen, wenn <see langword="null" /> von der <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />-Methode zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-119">Called when <see langword="null" /> is returned from the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="960eb-120"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> wird aufgerufen, wenn <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A>`null` zurückgibt und ein neues <xref:System.ServiceModel.InstanceContext>-Objekt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="960eb-120"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext%2A> is called when <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext%2A> returns `null` and a new <xref:System.ServiceModel.InstanceContext> object is created.</span></span> <span data-ttu-id="960eb-121">Diese Methode wird aufgerufen, um Sie zu benachrichtigen, dass ein neuer <xref:System.ServiceModel.InstanceContext> erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="960eb-121">This method is called to notify you that a new <xref:System.ServiceModel.InstanceContext> has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdle">
      <MemberSignature Language="C#" Value="public bool IsIdle (System.ServiceModel.InstanceContext instanceContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIdle(class System.ServiceModel.InstanceContext instanceContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsIdle(System::ServiceModel::InstanceContext ^ instanceContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="instanceContext">
          <span data-ttu-id="960eb-122">Das <see cref="T:System.ServiceModel.InstanceContext" />-Objekt, das als inaktiv betrachtet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-122">The <see cref="T:System.ServiceModel.InstanceContext" /> object that is considered idle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="960eb-123">Wird aufgerufen, wenn alle <see cref="T:System.ServiceModel.InstanceContext" />-Aktivitäten die Aktivierung der Implementierungen abgeschlossen haben, um zu verhindern, dass <see cref="T:System.ServiceModel.InstanceContext" /> wiederverwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-123">Called when all <see cref="T:System.ServiceModel.InstanceContext" /> activities have completed to enable implementers to prevent the <see cref="T:System.ServiceModel.InstanceContext" /> from being recycled.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="960eb-124">
            <see langword="true" />, wenn [!INCLUDE[indigo1](~/includes/indigo1-md.md)] das <see cref="T:System.ServiceModel.InstanceContext" />-Objekt schließen und wiederverwenden und den Wert von <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" /> anpassen soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-124">
              <see langword="true" /> if [!INCLUDE[indigo1](~/includes/indigo1-md.md)] is to close and recycle the <see cref="T:System.ServiceModel.InstanceContext" /> object and adjust the value of <see cref="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="960eb-125"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> wird aufgerufen, wenn [!INCLUDE[indigo2](~/includes/indigo2-md.md)] im Begriff ist, ein inaktives <xref:System.ServiceModel.InstanceContext>-Objekt zu schließen und wiederzuverwenden. Auf diese Weise können Sie die Laufzeit darüber informieren, ob sie damit fortfahren soll.</span><span class="sxs-lookup"><span data-stu-id="960eb-125"><xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> is called when [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is about to close and recycle an idle <xref:System.ServiceModel.InstanceContext> object so that you can inform the runtime whether to continue doing so.</span></span>  
  
 <span data-ttu-id="960eb-126">Ein Beispiel, das die Freigabe von instanzkontexten veranschaulicht wird, finden Sie unter [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span><span class="sxs-lookup"><span data-stu-id="960eb-126">For an example that demonstrates the sharing of instance contexts, see [InstanceContextSharing](http://msdn.microsoft.com/library/4a6a46d7-b7d7-4bb5-a0dd-03ffa3cbc230).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyIdle">
      <MemberSignature Language="C#" Value="public void NotifyIdle (System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, System.ServiceModel.InstanceContext instanceContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyIdle(class System.ServiceModel.Dispatcher.InstanceContextIdleCallback callback, class System.ServiceModel.InstanceContext instanceContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyIdle(System::ServiceModel::Dispatcher::InstanceContextIdleCallback ^ callback, System::ServiceModel::InstanceContext ^ instanceContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.ServiceModel.Dispatcher.InstanceContextIdleCallback" />
        <Parameter Name="instanceContext" Type="System.ServiceModel.InstanceContext" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="960eb-127">Das <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" />-Objekt, das [!INCLUDE[indigo2](~/includes/indigo2-md.md)] benachrichtigt, wenn das <see cref="T:System.ServiceModel.InstanceContext" />-Objekt geschlossen und wiederverwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-127">The <see cref="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" /> object that notifies [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <see cref="T:System.ServiceModel.InstanceContext" /> object is to be closed and recycled.</span>
          </span>
        </param>
        <param name="instanceContext">
          <span data-ttu-id="960eb-128">Der aktuelle <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-128">The current <see cref="T:System.ServiceModel.InstanceContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="960eb-129">Wird aufgerufen, wenn die <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" />-Methode <see langword="false" /> zurückgibt, damit Implementierungen einen Rückruf durchführen, um [!INCLUDE[indigo2](~/includes/indigo2-md.md)] zu benachrichtigen, dass das <see cref="T:System.ServiceModel.InstanceContext" />-Objekt geschlossen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="960eb-129">Called when the <see cref="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" /> method returns <see langword="false" /> to enable implementers to provide a callback to notify [!INCLUDE[indigo2](~/includes/indigo2-md.md)] when the <see cref="T:System.ServiceModel.InstanceContext" /> object is finished.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="960eb-130">Die <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A>-Methode wird aufgerufen, wenn die <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A>-Methode `false` zurückgibt. Dadurch haben Sie die Möglichkeit, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] ein <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType>-Objekt bereitzustellen, mit dem Sie der Laufzeit mitteilen können, dass <xref:System.ServiceModel.InstanceContext> beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="960eb-130">The <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle%2A> method is called when the <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> method returns `false` to enable you to provide [!INCLUDE[indigo2](~/includes/indigo2-md.md)] with a <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> object that you use to inform the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work.</span></span> <span data-ttu-id="960eb-131">Wenn das <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType>-Objekt eine Benachrichtigung an die Laufzeit sendet, dass <xref:System.ServiceModel.InstanceContext> beendet wurde, ruft [!INCLUDE[indigo2](~/includes/indigo2-md.md)] <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> erneut auf.</span><span class="sxs-lookup"><span data-stu-id="960eb-131">When the <xref:System.ServiceModel.Dispatcher.InstanceContextIdleCallback?displayProperty=nameWithType> object notifies the runtime that the <xref:System.ServiceModel.InstanceContext> has finished its work, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] calls <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> once again.</span></span> <span data-ttu-id="960eb-132">Dieser Zyklus wird fortgesetzt, bis <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> den Wert `true` zurückgibt und der Kontext geschlossen und wiederverwendet wird.</span><span class="sxs-lookup"><span data-stu-id="960eb-132">This cycle continues until <xref:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle%2A> returns `true` and the context is closed and recycled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>