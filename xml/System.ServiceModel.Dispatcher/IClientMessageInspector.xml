<Type Name="IClientMessageInspector" FullName="System.ServiceModel.Dispatcher.IClientMessageInspector">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d1feefd5799d09bf0c4a9e11586ef9f36a7d225d" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32691499" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IClientMessageInspector" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IClientMessageInspector" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IClientMessageInspector" />
  <TypeSignature Language="VB.NET" Value="Public Interface IClientMessageInspector" />
  <TypeSignature Language="C++ CLI" Value="public interface class IClientMessageInspector" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="238c5-101">Definiert ein Nachrichteninspektorobjekt, das der <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" />-Auflistung hinzugefügt werden kann, um Nachrichten anzuzeigen oder zu ändern.</span>
      <span class="sxs-lookup">
        <span data-stu-id="238c5-101">Defines a message inspector object that can be added to the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" /> collection to view or modify messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238c5-102">Implementieren der <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> Schnittstelle, und fügen Sie diese der <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> Auflistung, um zu überprüfen oder Ändern von Nachrichten, während sie einen WCF-Clientobjekts durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="238c5-102">Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector> interface and add it to the <xref:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors%2A> collection to inspect or modify messages as they pass through a WCF client object.</span></span> <span data-ttu-id="238c5-103">Ausführliche Informationen finden Sie unter <xref:System.ServiceModel.Dispatcher.ClientRuntime>.</span><span class="sxs-lookup"><span data-stu-id="238c5-103">For details, see <xref:System.ServiceModel.Dispatcher.ClientRuntime>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="238c5-104">Im folgenden Codebeispiel wird eine Implementierung veranschaulicht, die Zeichenfolgen in die Konsole ausgibt, wenn die Implementierung aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="238c5-104">The following code example shows an implementation that writes strings to the console when the implementation is called.</span></span>  
  
 [!code-csharp[Interceptors#1](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#1)]
 [!code-vb[Interceptors#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#1)]  
  
 <span data-ttu-id="238c5-105">Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> verwendet wird, um den Clientnachrichteninspektor in den Clientendpunkt einzufügen.</span><span class="sxs-lookup"><span data-stu-id="238c5-105">The following code example shows how to use an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> to insert the client message inspector in the client endpoint.</span></span>  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 <span data-ttu-id="238c5-106">Schließlich zeigt das folgende Codebeispiel, wie die Clientkonfigurationsdatei geändert werden kann, um das Endpunktverhalten mit einem bestimmten Endpunkt zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="238c5-106">Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.</span></span>  
  
 [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AfterReceiveReply">
      <MemberSignature Language="C#" Value="public void AfterReceiveReply (ref System.ServiceModel.Channels.Message reply, object correlationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterReceiveReply(class System.ServiceModel.Channels.Message&amp; reply, object correlationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AfterReceiveReply (ByRef reply As Message, correlationState As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AfterReceiveReply(System::ServiceModel::Channels::Message ^ % reply, System::Object ^ correlationState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reply" Type="System.ServiceModel.Channels.Message&amp;" RefType="ref" />
        <Parameter Name="correlationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="reply">
          <span data-ttu-id="238c5-107">Die Nachricht, die in Typen transformiert werden und an die Clientanwendung zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="238c5-107">The message to be transformed into types and handed back to the client application.</span>
          </span>
        </param>
        <param name="correlationState">
          <span data-ttu-id="238c5-108">Korrelationszustandsdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="238c5-108">Correlation state data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="238c5-109">Aktiviert die Überprüfung oder Änderung einer Nachricht, nachdem eine Antwortnachricht eingegangen ist, aber bevor diese an die Clientanwendung zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="238c5-109">Enables inspection or modification of a message after a reply message is received but prior to passing it back to the client application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238c5-110">Implementieren <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply%2A> prüfen oder ändern eine Antwortnachricht ausgegeben, nachdem er empfangen wurde durch die WCF-Clientobjekts, aber bevor er in Objekte deserialisiert wird, die an die Clientanwendung zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="238c5-110">Implement <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply%2A> to inspect or modify a reply message after it has been received by the WCF client object but before it is deserialized into objects that are returned to the client application.</span></span>  
  
 <span data-ttu-id="238c5-111">Der `correlationState` ist das vom Benutzer zurückgegebene Objekt, wenn <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> für diese Nachricht aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="238c5-111">The `correlationState` is the object returned by the user when <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> is called for this message.</span></span> <span data-ttu-id="238c5-112">Es wird empfohlen, dies in eine <xref:System.Guid?displayProperty=nameWithType> umzuwandeln, um sicherzustellen, dass es nicht zwei gleiche `correlationState`-Objekte gibt.</span><span class="sxs-lookup"><span data-stu-id="238c5-112">The best practice is to make this a <xref:System.Guid?displayProperty=nameWithType> to ensure that no two `correlationState` objects are the same.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="238c5-113">Im folgenden Codebeispiel wird eine Implementierung veranschaulicht, die Zeichenfolgen in die Konsole ausgibt, wenn die Implementierung aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="238c5-113">The following code example shows an implementation that writes strings to the console when the implementation is called.</span></span>  
  
 [!code-csharp[Interceptors#1](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#1)]
 [!code-vb[Interceptors#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#1)]  
  
 <span data-ttu-id="238c5-114">Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> verwendet wird, um den Clientnachrichteninspektor in den Clientendpunkt einzufügen.</span><span class="sxs-lookup"><span data-stu-id="238c5-114">The following code example shows how to use an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> to insert the client message inspector in the client endpoint.</span></span>  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 <span data-ttu-id="238c5-115">Schließlich zeigt das folgende Codebeispiel, wie die Clientkonfigurationsdatei geändert werden kann, um das Endpunktverhalten mit einem bestimmten Endpunkt zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="238c5-115">Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.</span></span>  
  
 [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSendRequest">
      <MemberSignature Language="C#" Value="public object BeforeSendRequest (ref System.ServiceModel.Channels.Message request, System.ServiceModel.IClientChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object BeforeSendRequest(class System.ServiceModel.Channels.Message&amp; request, class System.ServiceModel.IClientChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeforeSendRequest (ByRef request As Message, channel As IClientChannel) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ BeforeSendRequest(System::ServiceModel::Channels::Message ^ % request, System::ServiceModel::IClientChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.ServiceModel.Channels.Message&amp;" RefType="ref" />
        <Parameter Name="channel" Type="System.ServiceModel.IClientChannel" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="238c5-116">Die an den Dienst zu sendende Nachricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="238c5-116">The message to be sent to the service.</span>
          </span>
        </param>
        <param name="channel">
          <span data-ttu-id="238c5-117">Der WCF-Clientobjektkanal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="238c5-117">The WCF client object channel.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="238c5-118">Aktiviert die Überprüfung oder Änderung einer Nachricht, bevor eine Anforderungsnachricht an einen Dienst gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="238c5-118">Enables inspection or modification of a message before a request message is sent to a service.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="238c5-119">Das Objekt, das als <paramref name="correlationState" />-Argument der <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" />-Methode zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="238c5-119">The object that is returned as the <paramref name="correlationState" /> argument of the <see cref="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" /> method.</span>
          </span>
          <span data-ttu-id="238c5-120">Dies ist <see langword="null" />, wenn kein Korrelationszustand verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="238c5-120">This is <see langword="null" /> if no correlation state is used.</span>
          </span>
          <span data-ttu-id="238c5-121">Es wird empfohlen, dies in eine <see cref="T:System.Guid" /> umzuwandeln, um sicherzustellen, dass es nicht zwei gleiche <paramref name="correlationState" />-Objekte gibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="238c5-121">The best practice is to make this a <see cref="T:System.Guid" /> to ensure that no two <paramref name="correlationState" /> objects are the same.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="238c5-122">Implementieren Sie den <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A>, um eine Anforderungsnachricht zu überprüfen oder zu ändern, bevor sie gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="238c5-122">Implement the <xref:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest%2A> to inspect or modify a request message before it is sent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="238c5-123">Im folgenden Codebeispiel wird eine Implementierung veranschaulicht, die Zeichenfolgen in die Konsole ausgibt, wenn die Implementierung aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="238c5-123">The following code example shows an implementation that writes strings to the console when the implementation is called.</span></span>  
  
 [!code-csharp[Interceptors#1](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#1)]
 [!code-vb[Interceptors#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#1)]  
  
 <span data-ttu-id="238c5-124">Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> verwendet wird, um den Clientnachrichteninspektor in den Clientendpunkt einzufügen.</span><span class="sxs-lookup"><span data-stu-id="238c5-124">The following code example shows how to use an <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType> to insert the client message inspector in the client endpoint.</span></span>  
  
 [!code-csharp[Interceptors#2](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#2)]
 [!code-vb[Interceptors#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#2)]  
  
 <span data-ttu-id="238c5-125">Schließlich zeigt das folgende Codebeispiel, wie die Clientkonfigurationsdatei geändert werden kann, um das Endpunktverhalten mit einem bestimmten Endpunkt zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="238c5-125">Finally, the following code example shows how to modify the client configuration file to use the endpoint behavior with a particular endpoint.</span></span>  
  
 [!code-xml[Interceptors#3](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/client.exe.config#3)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>