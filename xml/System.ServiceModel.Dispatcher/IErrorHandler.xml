<Type Name="IErrorHandler" FullName="System.ServiceModel.Dispatcher.IErrorHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f8114a14f1e73407c3ce90a94ca5576512bea734" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83960737" /></Metadata><TypeSignature Language="C#" Value="public interface IErrorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IErrorHandler" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IErrorHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IErrorHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IErrorHandler" />
  <TypeSignature Language="F#" Value="type IErrorHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="52e75-101">Ermöglicht bei der Implementierung die Steuerung der Fehlermeldung, die an den Aufrufer zurückgegeben wird, und optional die Durchführung von benutzerdefinierter Verarbeitung, wie z.&amp;#160;B. Protokollierung.</span><span class="sxs-lookup"><span data-stu-id="52e75-101">Allows an implementer to control the fault message returned to the caller and optionally perform custom error processing such as logging.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e75-102">Um das Verhalten der Anwendung explizit zu steuern, wenn eine Ausnahme ausgelöst wird, implementieren Sie die <xref:System.ServiceModel.Dispatcher.IErrorHandler>-Schnittstelle, und fügen Sie Sie der <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>-Eigenschaft des <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>hinzu.</span><span class="sxs-lookup"><span data-stu-id="52e75-102">To explicitly control the behavior of the application when an exception is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler> interface and add it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher>'s <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span> <span data-ttu-id="52e75-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> ermöglicht es Ihnen, explizit zu steuern, welcher SOAP-Fehler generiert wird, und zu entscheiden, ob der Fehler zurück zum Client geschickt und zugehörige Aufgaben ausgeführt werden sollen, z. B. Protokollieren.</span><span class="sxs-lookup"><span data-stu-id="52e75-103"><xref:System.ServiceModel.Dispatcher.IErrorHandler> enables you to explicitly control the SOAP fault generated, decide whether to send it back to the client, and perform associated tasks, such as logging.</span></span> <span data-ttu-id="52e75-104">Fehlerhandler werden in der gleichen Reihenfolge aufgerufen, in der sie der <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>-Eigenschaft hinzugefügt wurden.</span><span class="sxs-lookup"><span data-stu-id="52e75-104">Error handlers are called in the order in which they were added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 <span data-ttu-id="52e75-105">Implementieren Sie die <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>-Methode, um die Fehlermeldung zu steuern, die dem Client zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-105">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to control the fault message that is returned to the client.</span></span>  
  
 <span data-ttu-id="52e75-106">Implementieren Sie die <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>-Methode, um fehlerbezogenes Verhalten, wie die Fehlerprotokollierung, die Sicherstellung eines Failfast, das Beenden der Anwendung und Ähnliches, zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="52e75-106">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to ensure error-related behaviors, including error logging, assuring a fail fast, shutting down the application, and so on.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52e75-107">Da die <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>-Methode von vielen verschiedenen Quellen aus aufgerufen werden kann, kann nicht garantiert werden, über welchen Thread die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-107">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="52e75-108">Verlassen Sie sich nicht darauf, dass die <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>-Methode vom Vorgangsthread aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-108">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="52e75-109">Alle <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>-Implementierungen werden schon vor dem Senden einer Antwortnachricht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="52e75-109">All <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called first, prior to sending a response message.</span></span> <span data-ttu-id="52e75-110">Wenn alle <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>-Implementierungen aufgerufen und zurückgegeben wurden und wenn `fault` nicht `null` ist, wird sie gemäß dem Vorgangsvertrag an den Client zurückgesendet.</span><span class="sxs-lookup"><span data-stu-id="52e75-110">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called and return, and if `fault` is non-`null`, it is sent back to the client according to the operation contract.</span></span> <span data-ttu-id="52e75-111">Wenn `fault``null` ist, nachdem alle Implementierungen aufgerufen wurden, wird die Antwortnachricht vom <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType>-Eigenschaftswert gesteuert.</span><span class="sxs-lookup"><span data-stu-id="52e75-111">If `fault` is `null` after all implementations have been called, the response message is controlled by the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=nameWithType> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52e75-112">Ausnahmen können auftreten, nachdem alle <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>-Implementierungen aufgerufen wurden und eine Antwortnachricht an den Kanal weitergegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="52e75-112">Exceptions can occur after all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations are called and a response message is handed to the channel.</span></span> <span data-ttu-id="52e75-113">Wenn eine Kanal Ausnahme auftritt (z. b. Schwierigkeiten beim Serialisieren der Nachricht), werden <xref:System.ServiceModel.Dispatcher.IErrorHandler> Objekte benachrichtigt.</span><span class="sxs-lookup"><span data-stu-id="52e75-113">If a channel exception occurs (for example, difficulty serializing the message) <xref:System.ServiceModel.Dispatcher.IErrorHandler> objects are notified.</span></span> <span data-ttu-id="52e75-114">In diesem Fall sollten Sie dennoch sicherstellen, dass Ihre Entwicklungsumgebung solche Ausnahmen abfängt und anzeigt oder die Ablauf Verfolgung verwendet, um das Problem zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="52e75-114">In this case, you should still make sure that your development environment catches and displays such exceptions to you or makes use of tracing to discover the problem.</span></span> <span data-ttu-id="52e75-115">Weitere Informationen zur Ablauf Verfolgung finden Sie unter [Verwenden der Ablauf Verfolgung zum Beheben von Problemen mit Ihrer Anwendung](/dotnet/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application).</span><span class="sxs-lookup"><span data-stu-id="52e75-115">For more information about tracing, see [Using Tracing to Troubleshoot Your Application](/dotnet/framework/wcf/diagnostics/tracing/using-tracing-to-troubleshoot-your-application).</span></span>  
  
 <span data-ttu-id="52e75-116">Nachdem die Antwortnachricht gesendet wurde, werden alle <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>-Implementierungen in der gleichen Reihenfolge aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="52e75-116">After the response message has been sent, all <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> implementations are called in the same order.</span></span>  
  
 <span data-ttu-id="52e75-117">In der Regel wird eine <xref:System.ServiceModel.Dispatcher.IErrorHandler>-Implementierung der <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>-Eigenschaft für den Dienst hinzugefügt (und im Fall von Duplexkommunikation für den Client).</span><span class="sxs-lookup"><span data-stu-id="52e75-117">Typically, an <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation is added to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property on the service (and the client in the case of duplex communication).</span></span>  
  
 <span data-ttu-id="52e75-118">Sie können <xref:System.ServiceModel.Dispatcher.IErrorHandler> der Laufzeit hinzufügen, indem Sie Verhalten implementieren (entweder ein <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>-Objekt, ein <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>-Objekt, ein <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>-Objekt oder ein <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>-Objekt) und das Verhalten programmgesteuert, von einer Konfigurationsdatei oder mit einem benutzerdefinierten Attribut zum Anfügen von <xref:System.ServiceModel.Dispatcher.IErrorHandler> verwenden.</span><span class="sxs-lookup"><span data-stu-id="52e75-118">You can add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> to the runtime by implementing a behavior (either an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=nameWithType>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType>, or <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType> object) and use the behavior programmatically, from a configuration file or with a custom attribute to attach your <xref:System.ServiceModel.Dispatcher.IErrorHandler>.</span></span>  
  
 <span data-ttu-id="52e75-119">Weitere Informationen zum Verwenden von Verhaltensweisen zum Ändern der Laufzeit finden Sie unter [Konfigurieren und Erweitern der Laufzeit mit Verhalten](/dotnet/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors).</span><span class="sxs-lookup"><span data-stu-id="52e75-119">For more information about using behaviors to modify the runtime, see [Configuring and Extending the Runtime with Behaviors](/dotnet/framework/wcf/extending/configuring-and-extending-the-runtime-with-behaviors).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e75-120">Das folgende Codebeispiel veranschaulicht einen Dienst, der <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementiert, wodurch nur <xref:System.ServiceModel.FaultException%601> des Typs `GreetingFault` zurückgegeben wird, wenn eine Dienstmethode eine verwaltete Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="52e75-120">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="52e75-121">Im folgenden Codebeispiel wird veranschaulicht, wie ein Dienstverhalten verwendet wird, um die <xref:System.ServiceModel.Dispatcher.IErrorHandler>-Implementierung zur <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>-Eigenschaft hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="52e75-121">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="52e75-122">Im folgenden Codebeispiel wird die Konfiguration des Diensts zum Laden des Dienstverhaltens mit der Anwendungskonfigurationsdatei veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="52e75-122">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="52e75-123">Weitere Informationen zur Verfügbarmachung eines Dienstverhaltens in einer Konfigurationsdatei finden Sie unter <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="52e75-123">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  

 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="HandleError">
      <MemberSignature Language="C#" Value="public bool HandleError (Exception error);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception error) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleError (error As Exception) As Boolean" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ error);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member HandleError : Exception -&gt; bool" Usage="iErrorHandler.HandleError error" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public bool HandleError (Exception exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HandleError(class System.Exception exception) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Function HandleError (exception As Exception) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HandleError(Exception ^ exception);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member HandleError : Exception -&gt; bool" Usage="iErrorHandler.HandleError exception" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="52e75-124">Die während der Verarbeitung ausgelöste Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="52e75-124">The exception thrown during processing.</span></span></param>
        <param name="exception"><span data-ttu-id="52e75-125">Die während der Verarbeitung ausgelöste Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="52e75-125">The exception thrown during processing.</span></span></param>
        <summary><span data-ttu-id="52e75-126">Aktiviert fehlerbezogene Verarbeitung und gibt einen Wert zurück, der angibt, ob der Verteiler die Sitzung und den Instanzkontext in bestimmten Fällen abbricht.</span><span class="sxs-lookup"><span data-stu-id="52e75-126">Enables error-related processing and returns a value that indicates whether the dispatcher aborts the session and the instance context in certain cases.</span></span></summary>
        <returns><span data-ttu-id="52e75-127"><see langword="true" />, falls Windows Communication Foundation (WCF) die Sitzung (sofern vorhanden) und den Instanzkontext nicht abbrechen soll, falls der Instanzkontext nicht <see cref="F:System.ServiceModel.InstanceContextMode.Single" /> lautet; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52e75-127"><see langword="true" /> if Windows Communication Foundation (WCF) should not abort the session (if there is one) and instance context if the instance context is not <see cref="F:System.ServiceModel.InstanceContextMode.Single" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="52e75-128">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="52e75-128">The default is <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e75-129">Verwenden Sie die <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>-Methode zum Implementieren von fehlerbezogenem Verhalten wie Fehlerprotokollierung, Systembenachrichtigungen, Herunterfahren der Anwendung und Ähnliches, und geben Sie einen Wert zurück, der angibt, ob die Ausnahme ordnungsgemäß behandelt wurde.</span><span class="sxs-lookup"><span data-stu-id="52e75-129">Use the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method to implement error-related behaviors such as error logging, system notifications, shutting down the application, and so on, and return a value that specifies whether the exception has been handled appropriately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52e75-130">Da die <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>-Methode von vielen verschiedenen Quellen aus aufgerufen werden kann, kann nicht garantiert werden, über welchen Thread die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-130">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="52e75-131">Verlassen Sie sich nicht darauf, dass die <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>-Methode vom Vorgangsthread aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-131">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method being called on the operation thread.</span></span>  
  
 <span data-ttu-id="52e75-132">Alle <xref:System.ServiceModel.Dispatcher.IErrorHandler>-Implementierungen werden aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="52e75-132">All <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementations are called.</span></span> <span data-ttu-id="52e75-133">Standardmäßig (wenn der Rückgabewert `false` lautet) bricht der Verteiler bei Ausnahmen alle Sitzungen ab und bricht auch den <xref:System.ServiceModel.InstanceContext> ab, falls der <xref:System.ServiceModel.InstanceContextMode><xref:System.ServiceModel.InstanceContextMode.Single> nicht entspricht.</span><span class="sxs-lookup"><span data-stu-id="52e75-133">By default (when the return value is `false`), if there is an exception, the dispatcher aborts any session and aborts the <xref:System.ServiceModel.InstanceContext> if the <xref:System.ServiceModel.InstanceContextMode> is anything other than <xref:System.ServiceModel.InstanceContextMode.Single>.</span></span>  <span data-ttu-id="52e75-134">Die Ausnahme gilt in diesem Fall als nicht behandelt, alle Zustände gelten als beschädigt.</span><span class="sxs-lookup"><span data-stu-id="52e75-134">The exception is then considered unhandled and any state is considered corrupt.</span></span>  
  
 <span data-ttu-id="52e75-135">Geben Sie `true` von <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> zurück, um dieses Standardverhalten zu verhindern.</span><span class="sxs-lookup"><span data-stu-id="52e75-135">Return `true` from <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> to prevent this default behavior.</span></span> <span data-ttu-id="52e75-136">Wenn ein Fehlerhandler `true` zurückgibt, weist er WCF an, dass es sicher ist, den mit der fehlgeschlagenen Anforderung verknüpften Status weiterhin zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="52e75-136">If any error handler returns `true` it instructs WCF that it is safe to continue using state associated with the failed request.</span></span>  
  
 <span data-ttu-id="52e75-137">Falls kein Fehlerhandler `true` für die <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A>-Methode zurückgibt, gilt die Ausnahme als nicht behandelt. Die Standardantwort wird übernommen, was bei der Kommunikation über einen Sitzungskanal oder wenn die <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType>-Eigenschaft nicht auf <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> festgelegt ist, möglicherweise zu einem abgebrochenen <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType> und Channel führt.</span><span class="sxs-lookup"><span data-stu-id="52e75-137">If no error handler returns `true` from the <xref:System.ServiceModel.Dispatcher.IErrorHandler.HandleError%2A> method the exception is considered unhandled and the default response applies, potentially resulting in an aborted <xref:System.ServiceModel.InstanceContext?displayProperty=nameWithType> and channel when communicating on a session channel or the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A?displayProperty=nameWithType> property is not set to <xref:System.ServiceModel.InstanceContextMode.Single?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="52e75-138">Der `error`-Parameter ist nie `null` und enthält das Ausnahmeobjekt, das ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="52e75-138">The `error` parameter is never `null` and contains the exception object that was thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e75-139">Das folgende Codebeispiel veranschaulicht einen Dienst, der <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementiert, wodurch nur <xref:System.ServiceModel.FaultException%601> des Typs `GreetingFault` zurückgegeben wird, wenn eine Dienstmethode eine verwaltete Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="52e75-139">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="52e75-140">Im folgenden Codebeispiel wird veranschaulicht, wie ein Dienstverhalten verwendet wird, um die <xref:System.ServiceModel.Dispatcher.IErrorHandler>-Implementierung zur <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>-Eigenschaft hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="52e75-140">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="52e75-141">Im folgenden Codebeispiel wird die Konfiguration des Diensts zum Laden des Dienstverhaltens mit der Anwendungskonfigurationsdatei veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="52e75-141">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="52e75-142">Weitere Informationen zur Verfügbarmachung eines Dienstverhaltens in einer Konfigurationsdatei finden Sie unter <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="52e75-142">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideFault">
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception error, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception error, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProvideFault (error As Exception, version As MessageVersion, ByRef fault As Message)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ error, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="F#" Value="abstract member ProvideFault : Exception * System.ServiceModel.Channels.MessageVersion * Message -&gt; unit" Usage="iErrorHandler.ProvideFault (error, version, fault)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C#" Value="public void ProvideFault (Exception exception, System.ServiceModel.Channels.MessageVersion version, ref System.ServiceModel.Channels.Message fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProvideFault(class System.Exception exception, class System.ServiceModel.Channels.MessageVersion version, class System.ServiceModel.Channels.Message&amp; fault) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProvideFault (exception As Exception, version As MessageVersion, ByRef fault As Message)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProvideFault(Exception ^ exception, System::ServiceModel::Channels::MessageVersion ^ version, System::ServiceModel::Channels::Message ^ % fault);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member ProvideFault : Exception * System.ServiceModel.Channels.MessageVersion * Message -&gt; unit" Usage="iErrorHandler.ProvideFault (exception, version, fault)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="System.Exception" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" Index="1" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.Message" RefType="ref" Index="2" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="52e75-143">Das im Verlauf des Dienstvorgangs ausgelöste <see cref="T:System.Exception" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="52e75-143">The <see cref="T:System.Exception" /> object thrown in the course of the service operation.</span></span></param>
        <param name="exception"><span data-ttu-id="52e75-144">Das im Verlauf des Dienstvorgangs ausgelöste <see cref="T:System.Exception" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="52e75-144">The <see cref="T:System.Exception" /> object thrown in the course of the service operation.</span></span></param>
        <param name="version"><span data-ttu-id="52e75-145">Die SOAP-Version der Nachricht.</span><span class="sxs-lookup"><span data-stu-id="52e75-145">The SOAP version of the message.</span></span></param>
        <param name="fault"><span data-ttu-id="52e75-146">Das <see cref="T:System.ServiceModel.Channels.Message" />-Objekt, das dem Client oder bei Duplexkommunikation dem Dienst zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-146">The <see cref="T:System.ServiceModel.Channels.Message" /> object that is returned to the client, or service, in the duplex case.</span></span></param>
        <summary><span data-ttu-id="52e75-147">Aktiviert die Erstellung einer benutzerdefinierten <see cref="T:System.ServiceModel.FaultException`1" />, die während einer Dienstmethode von einer Ausnahme zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-147">Enables the creation of a custom <see cref="T:System.ServiceModel.FaultException`1" /> that is returned from an exception in the course of a service method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52e75-148">Implementieren Sie die <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>-Methode, um eine benutzerdefinierte Fehlermeldung zu erstellen, die dem Client zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-148">Implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method to create a custom fault message that is returned to the client.</span></span>  <span data-ttu-id="52e75-149">Die <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>-Methode wird immer für Ausnahmen aufgerufen, die Vorgänge verlassen, es sei denn, die WCF-Laufzeit erkennt die Ausnahme als besonders schwerwiegend und löst die Ausnahme selbst erneut aus.</span><span class="sxs-lookup"><span data-stu-id="52e75-149">The <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method will always be called for exceptions that leave operations, except when the WCF runtime recognizes the exception as especially fatal and rethrows the exception itself.</span></span> <span data-ttu-id="52e75-150">Wenn alle <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>-Implementierungen aufgerufen wurden, wird die Fehlermeldung zurück an den Client gesendet (sofern `fault` nicht `null` ist).</span><span class="sxs-lookup"><span data-stu-id="52e75-150">When all <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> implementations have been called, the fault message is sent back to the client (if `fault` is non-`null`).</span></span> <span data-ttu-id="52e75-151">Wenn der `fault`-Parameter `null` ist, wird der Standardfehler an den Client gesendet.</span><span class="sxs-lookup"><span data-stu-id="52e75-151">If the `fault` parameter is `null` the default fault is sent to the client.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52e75-152">Die eingehende Nachricht, die den Verarbeitungsfehler verursacht hat, ist während dieser Methode über die <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType>-Eigenschaft verfügbar.</span><span class="sxs-lookup"><span data-stu-id="52e75-152">The inbound message that caused the processing error is available during this method from the <xref:System.ServiceModel.OperationContext.RequestContext%2A?displayProperty=nameWithType> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="52e75-153">Da die <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>-Methode von vielen verschiedenen Quellen aus aufgerufen werden kann, kann nicht garantiert werden, über welchen Thread die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-153">Because the <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method can be called from many different places there are no guarantees made about which thread the method is called on.</span></span> <span data-ttu-id="52e75-154">Verlassen Sie sich nicht darauf, dass die <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A>-Methode vom Vorgangsthread aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="52e75-154">Do not depend on <xref:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault%2A> method being called on the operation thread.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52e75-155">Das folgende Codebeispiel veranschaulicht einen Dienst, der <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementiert, wodurch nur <xref:System.ServiceModel.FaultException%601> des Typs `GreetingFault` zurückgegeben wird, wenn eine Dienstmethode eine verwaltete Ausnahme auslöst.</span><span class="sxs-lookup"><span data-stu-id="52e75-155">The following code example demonstrates a service that implements <xref:System.ServiceModel.Dispatcher.IErrorHandler> that returns only <xref:System.ServiceModel.FaultException%601> of type `GreetingFault` when a service method throws a managed exception.</span></span>  
  
 [!code-csharp[IErrorHandler#6](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#6)]
 [!code-vb[IErrorHandler#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#6)]  
  
 <span data-ttu-id="52e75-156">Im folgenden Codebeispiel wird veranschaulicht, wie ein Dienstverhalten verwendet wird, um die <xref:System.ServiceModel.Dispatcher.IErrorHandler>-Implementierung zur <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A>-Eigenschaft hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="52e75-156">The following code example shows how to use a service behavior to add the <xref:System.ServiceModel.Dispatcher.IErrorHandler> implementation to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A> property.</span></span>  
  
 [!code-csharp[IErrorHandler#7](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/ierrorhandler.cs#7)]
 [!code-vb[IErrorHandler#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/ierrorhandler/vb/ierrorhandler.vb#7)]  
  
 <span data-ttu-id="52e75-157">Im folgenden Codebeispiel wird die Konfiguration des Diensts zum Laden des Dienstverhaltens mit der Anwendungskonfigurationsdatei veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="52e75-157">The following code example shows how to configure the service to load the service behavior using an application configuration file.</span></span> <span data-ttu-id="52e75-158">Weitere Informationen zur Verfügbarmachung eines Dienstverhaltens in einer Konfigurationsdatei finden Sie unter <xref:System.ServiceModel.Description.IServiceBehavior>.</span><span class="sxs-lookup"><span data-stu-id="52e75-158">For more details about how to expose a service behavior in a configuration file, see <xref:System.ServiceModel.Description.IServiceBehavior>.</span></span>  
  
 [!code-xml[IErrorHandler#4](~/samples/snippets/csharp/VS_Snippets_CFX/ierrorhandler/cs/hostapplication.exe.config#4)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
