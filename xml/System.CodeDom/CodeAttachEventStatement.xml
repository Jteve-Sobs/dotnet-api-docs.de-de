<Type Name="CodeAttachEventStatement" FullName="System.CodeDom.CodeAttachEventStatement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="433f6838c9a55081e789bb1a2a343b36668d86e6" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36714988" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeAttachEventStatement : System.CodeDom.CodeStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeAttachEventStatement extends System.CodeDom.CodeStatement" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeAttachEventStatement" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeAttachEventStatement&#xA;Inherits CodeStatement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeAttachEventStatement : System::CodeDom::CodeStatement" />
  <TypeSignature Language="F#" Value="type CodeAttachEventStatement = class&#xA;    inherit CodeStatement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Anweisung dar, die einen Ereignishandlerdelegaten an ein Ereignis anfügt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.CodeDom.CodeAttachEventStatement> kann verwendet werden, um eine Anweisung darzustellen, die ein Ereignishandlerdelegat für ein Ereignis hinzugefügt. Die <xref:System.CodeDom.CodeAttachEventStatement.Event%2A> Eigenschaft gibt an, das Ereignis, um den Ereignishandler angefügt. Die <xref:System.CodeDom.CodeAttachEventStatement.Listener%2A> Eigenschaft gibt an, der Ereignishandler angefügt.  
  
   
  
## Examples  
 Der folgende Beispielcode veranschaulicht die Verwendung von einem <xref:System.CodeDom.CodeAttachEventStatement> einen Ereignishandler mit einem Ereignis anfügen.  
  
 [!code-cpp[CodeAttachEventStatementExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeAttachEventStatementExample/CPP/codeattacheventstatementexample.cpp#3)]
 [!code-csharp[CodeAttachEventStatementExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeAttachEventStatementExample/CS/codeattacheventstatementexample.cs#3)]
 [!code-vb[CodeAttachEventStatementExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeAttachEventStatementExample/VB/codeattacheventstatementexample.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeAttachEventStatement" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeAttachEventStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttachEventStatement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeAttachEventStatement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeAttachEventStatement" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeAttachEventStatement (System.CodeDom.CodeEventReferenceExpression eventRef, System.CodeDom.CodeExpression listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeEventReferenceExpression eventRef, class System.CodeDom.CodeExpression listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttachEventStatement.#ctor(System.CodeDom.CodeEventReferenceExpression,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (eventRef As CodeEventReferenceExpression, listener As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeAttachEventStatement(System::CodeDom::CodeEventReferenceExpression ^ eventRef, System::CodeDom::CodeExpression ^ listener);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeAttachEventStatement : System.CodeDom.CodeEventReferenceExpression * System.CodeDom.CodeExpression -&gt; System.CodeDom.CodeAttachEventStatement" Usage="new System.CodeDom.CodeAttachEventStatement (eventRef, listener)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventRef" Type="System.CodeDom.CodeEventReferenceExpression" />
        <Parameter Name="listener" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="eventRef">Eine <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> zur Angabe des Ereignisses, an das ein Ereignishandler angefügt werden soll.</param>
        <param name="listener">Eine <see cref="T:System.CodeDom.CodeExpression" />, die den neuen Ereignishandler angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeAttachEventStatement" />-Klasse mit dem angegebenen Ereignis und Delegaten.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeAttachEventStatement (System.CodeDom.CodeExpression targetObject, string eventName, System.CodeDom.CodeExpression listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression targetObject, string eventName, class System.CodeDom.CodeExpression listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeAttachEventStatement.#ctor(System.CodeDom.CodeExpression,System.String,System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetObject As CodeExpression, eventName As String, listener As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeAttachEventStatement(System::CodeDom::CodeExpression ^ targetObject, System::String ^ eventName, System::CodeDom::CodeExpression ^ listener);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeAttachEventStatement : System.CodeDom.CodeExpression * string * System.CodeDom.CodeExpression -&gt; System.CodeDom.CodeAttachEventStatement" Usage="new System.CodeDom.CodeAttachEventStatement (targetObject, eventName, listener)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="listener" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="targetObject">Eine <see cref="T:System.CodeDom.CodeExpression" />, die das Objekt angibt, in dem das Ereignis enthalten ist.</param>
        <param name="eventName">Der Name des Ereignisses, an das ein Ereignishandler angefügt werden soll.</param>
        <param name="listener">Eine <see cref="T:System.CodeDom.CodeExpression" />, die den neuen Ereignishandler angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeAttachEventStatement" />-Klasse unter Verwendung des angegebenen Objekts mit dem Ereignis, Ereignisnamen und Ereignishandlerdelegaten.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeEventReferenceExpression Event { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeEventReferenceExpression Event" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeAttachEventStatement.Event" />
      <MemberSignature Language="VB.NET" Value="Public Property Event As CodeEventReferenceExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeEventReferenceExpression ^ Event { System::CodeDom::CodeEventReferenceExpression ^ get(); void set(System::CodeDom::CodeEventReferenceExpression ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Event : System.CodeDom.CodeEventReferenceExpression with get, set" Usage="System.CodeDom.CodeAttachEventStatement.Event" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeEventReferenceExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Ereignis ab, an das ein Ereignishandlerdelegat angefügt werden soll, oder legt dieses fest.</summary>
        <value>Eine <see cref="T:System.CodeDom.CodeEventReferenceExpression" /> zur Angabe des Ereignisses, an das ein Ereignishandler angefügt werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Listener { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Listener" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeAttachEventStatement.Listener" />
      <MemberSignature Language="VB.NET" Value="Public Property Listener As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Listener { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Listener : System.CodeDom.CodeExpression with get, set" Usage="System.CodeDom.CodeAttachEventStatement.Listener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den neuen Ereignishandlerdelegaten ab, der an das Ereignis angefügt werden soll, oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.CodeDom.CodeExpression" />, die den neuen anzufügenden Ereignishandler angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>