<Type Name="CodeConditionStatement" FullName="System.CodeDom.CodeConditionStatement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="561cba61603cb240574a4cc8d98750308f99305b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeConditionStatement : System.CodeDom.CodeStatement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeConditionStatement extends System.CodeDom.CodeStatement" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeConditionStatement" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeConditionStatement&#xA;Inherits CodeStatement" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeConditionStatement : System::CodeDom::CodeStatement" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeStatement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="97cea-101">Stellt eine bedingte Verzweigungsanweisung dar, die i. d. R. als <see langword="if" />-Anweisung dargestellt wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="97cea-101">Represents a conditional branch statement, typically represented as an <see langword="if" /> statement.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97cea-102"><xref:System.CodeDom.CodeConditionStatement> kann verwendet werden, um Code darstellen, die besteht aus einem bedingten Ausdruck, der eine Auflistung von Anweisungen, die ausgeführt werden, wenn der bedingte Ausdruck ergibt `true`, und eine optionale Auflistung von Anweisungen, die ausgeführt werden, wenn der bedingte Ausdruck ausgewertet wird. um `false`.</span><span class="sxs-lookup"><span data-stu-id="97cea-102"><xref:System.CodeDom.CodeConditionStatement> can be used to represent code that consists of a conditional expression, a collection of statements to execute if the conditional expression evaluates to `true`, and an optional collection of statements to execute if the conditional expression evaluates to `false`.</span></span> <span data-ttu-id="97cea-103">Ein <xref:System.CodeDom.CodeConditionStatement> wird in vielen Sprachen als generiert eine `if` Anweisung.</span><span class="sxs-lookup"><span data-stu-id="97cea-103">A <xref:System.CodeDom.CodeConditionStatement> is generated in many languages as an `if` statement.</span></span>  
  
 <span data-ttu-id="97cea-104">Die <xref:System.CodeDom.CodeConditionStatement.Condition%2A> Eigenschaft gibt den Ausdruck zu testen.</span><span class="sxs-lookup"><span data-stu-id="97cea-104">The <xref:System.CodeDom.CodeConditionStatement.Condition%2A> property indicates the expression to test.</span></span> <span data-ttu-id="97cea-105">Die <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> Eigenschaft enthält die Anweisungen, die ausgeführt werden, wenn die zu testende Ausdruck ergibt `true`.</span><span class="sxs-lookup"><span data-stu-id="97cea-105">The <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> property contains the statements to execute if the expression to test evaluates to `true`.</span></span> <span data-ttu-id="97cea-106">Die <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> Eigenschaft enthält die Anweisungen, die ausgeführt werden, wenn die zu testende Ausdruck ergibt `false`.</span><span class="sxs-lookup"><span data-stu-id="97cea-106">The <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> property contains the statements to execute if the expression to test evaluates to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97cea-107">Dieses Beispiel veranschaulicht die Verwendung einer <xref:System.CodeDom.CodeConditionStatement> zur Darstellung einer `if` -Anweisung mit einer `else` Block.</span><span class="sxs-lookup"><span data-stu-id="97cea-107">This example demonstrates using a <xref:System.CodeDom.CodeConditionStatement> to represent an `if` statement with an `else` block.</span></span>  
  
 [!code-cpp[CodeConditionStatementExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeConditionStatementExample/CPP/codeconditionstatementexample.cpp#2)]
 [!code-csharp[CodeConditionStatementExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeConditionStatementExample/CS/codeconditionstatementexample.cs#2)]
 [!code-vb[CodeConditionStatementExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeConditionStatementExample/VB/codeconditionstatementexample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="97cea-108">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeConditionStatement" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeConditionStatement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeConditionStatement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeConditionStatement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeConditionStatement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="97cea-109">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeConditionStatement" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-109">Initializes a new instance of the <see cref="T:System.CodeDom.CodeConditionStatement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeConditionStatement (System.CodeDom.CodeExpression condition, params System.CodeDom.CodeStatement[] trueStatements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression condition, class System.CodeDom.CodeStatement[] trueStatements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (condition As CodeExpression, ParamArray trueStatements As CodeStatement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeConditionStatement(System::CodeDom::CodeExpression ^ condition, ... cli::array &lt;System::CodeDom::CodeStatement ^&gt; ^ trueStatements);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="trueStatements" Type="System.CodeDom.CodeStatement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="97cea-110">Eine <see cref="T:System.CodeDom.CodeExpression" />, die den auszuwertenden Ausdruck angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-110">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the expression to evaluate.</span>
          </span>
        </param>
        <param name="trueStatements">
          <span data-ttu-id="97cea-111">Ein Array vom Typ <see cref="T:System.CodeDom.CodeStatement" />, das die auszuführenden Anweisungen enthält, wenn die Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-111">An array of type <see cref="T:System.CodeDom.CodeStatement" /> containing the statements to execute if the condition is <see langword="true" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97cea-112">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeConditionStatement" />-Klasse unter Verwendung der angegebenen Bedingung und der angegebenen Anweisungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeConditionStatement" /> class using the specified condition and statements.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeConditionStatement (System.CodeDom.CodeExpression condition, System.CodeDom.CodeStatement[] trueStatements, System.CodeDom.CodeStatement[] falseStatements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression condition, class System.CodeDom.CodeStatement[] trueStatements, class System.CodeDom.CodeStatement[] falseStatements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (condition As CodeExpression, trueStatements As CodeStatement(), falseStatements As CodeStatement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeConditionStatement(System::CodeDom::CodeExpression ^ condition, cli::array &lt;System::CodeDom::CodeStatement ^&gt; ^ trueStatements, cli::array &lt;System::CodeDom::CodeStatement ^&gt; ^ falseStatements);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="condition" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="trueStatements" Type="System.CodeDom.CodeStatement[]" />
        <Parameter Name="falseStatements" Type="System.CodeDom.CodeStatement[]" />
      </Parameters>
      <Docs>
        <param name="condition">
          <span data-ttu-id="97cea-113">Eine <see cref="T:System.CodeDom.CodeExpression" />, die die auszuwertende Bedingung angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-113">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the condition to evaluate.</span>
          </span>
        </param>
        <param name="trueStatements">
          <span data-ttu-id="97cea-114">Ein Array vom Typ <see cref="T:System.CodeDom.CodeStatement" />, das die auszuführenden Anweisungen enthält, wenn die Bedingung <see langword="true" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-114">An array of type <see cref="T:System.CodeDom.CodeStatement" /> containing the statements to execute if the condition is <see langword="true" />.</span>
          </span>
        </param>
        <param name="falseStatements">
          <span data-ttu-id="97cea-115">Ein Array vom Typ <see cref="T:System.CodeDom.CodeStatement" />, das die auszuführenden Anweisungen enthält, wenn die Bedingung <see langword="false" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-115">An array of type <see cref="T:System.CodeDom.CodeStatement" /> containing the statements to execute if the condition is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="97cea-116">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeConditionStatement" />-Klasse unter Verwendung der angegebenen Bedingung und der angegebenen Anweisungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-116">Initializes a new instance of the <see cref="T:System.CodeDom.CodeConditionStatement" /> class using the specified condition and statements.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.CodeStatement" />
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression Condition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression Condition" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeConditionStatement.Condition" />
      <MemberSignature Language="VB.NET" Value="Public Property Condition As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ Condition { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97cea-117">Ruft den Ausdruck ab, um auf <see langword="true" /> oder <see langword="false" /> zu prüfen, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-117">Gets or sets the expression to evaluate <see langword="true" /> or <see langword="false" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97cea-118">Eine <see cref="T:System.CodeDom.CodeExpression" />, um auf <see langword="true" /> oder <see langword="false" /> zu prüfen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-118">A <see cref="T:System.CodeDom.CodeExpression" /> to evaluate <see langword="true" /> or <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97cea-119">Zu dieser bedingten Ausdruck ausgewertet `true`, der Code in der <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> Auflistung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="97cea-119">If this conditional expression evaluates to `true`, the code contained in the <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> collection will be executed.</span></span> <span data-ttu-id="97cea-120">Zu dieser bedingten Ausdruck ausgewertet `false` und <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> Auflistung ist nicht leer, wird der Code Bestandteil der <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> Sammlung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="97cea-120">If this conditional expression evaluates to `false` and the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection is not empty, the code contained in the <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> collection will be executed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="FalseStatements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection FalseStatements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection FalseStatements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeConditionStatement.FalseStatements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FalseStatements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ FalseStatements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97cea-121">Ruft die Auflistung von Anweisungen ab, die ausgeführt werden sollen, wenn der bedingte Ausdruck <see langword="false" /> ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-121">Gets the collection of statements to execute if the conditional expression evaluates to <see langword="false" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97cea-122">Eine <see cref="T:System.CodeDom.CodeStatementCollection" /> mit den Anweisungen, die ausgeführt werden sollen, wenn der bedingte Ausdruck <see langword="false" /> ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-122">A <see cref="T:System.CodeDom.CodeStatementCollection" /> containing the statements to execute if the conditional expression evaluates to <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
      </Docs>
    </Member>
    <Member MemberName="TrueStatements">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeStatementCollection TrueStatements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeStatementCollection TrueStatements" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeConditionStatement.TrueStatements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrueStatements As CodeStatementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeStatementCollection ^ TrueStatements { System::CodeDom::CodeStatementCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeStatementCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="97cea-123">Ruft die Auflistung von Anweisungen ab, die ausgeführt werden sollen, wenn der bedingte Ausdruck <see langword="true" /> ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-123">Gets the collection of statements to execute if the conditional expression evaluates to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="97cea-124">Eine <see cref="T:System.CodeDom.CodeStatementCollection" /> mit den Anweisungen, die ausgeführt werden sollen, wenn der bedingte Ausdruck <see langword="true" /> ergibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="97cea-124">A <see cref="T:System.CodeDom.CodeStatementCollection" /> containing the statements to execute if the conditional expression evaluates to <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeStatementCollection" />
      </Docs>
    </Member>
  </Members>
</Type>