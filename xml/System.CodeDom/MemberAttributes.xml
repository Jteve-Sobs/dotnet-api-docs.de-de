<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MemberAttributes.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56530bdd50fa29873ec01b68dc0dd35d58ecdc920.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6530bdd50fa29873ec01b68dc0dd35d58ecdc920</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.MemberAttributes">
          <source>Defines member attribute identifiers for class members.</source>
          <target state="translated">Definiert Bezeichner für Memberattribute von Klassenmembern.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>The identifiers defined in the <ph id="ph1">&lt;xref:System.CodeDom.MemberAttributes&gt;</ph> enumeration can be used to indicate the scope and access attributes of a class member.</source>
          <target state="translated">Der Bezeichner definiert, der <ph id="ph1">&lt;xref:System.CodeDom.MemberAttributes&gt;</ph> Enumeration kann verwendet werden, um den Gültigkeitsbereich und Attribute eines Klassenmembers anzugeben.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>There is no <ph id="ph1">`Virtual`</ph> member attribute.</source>
          <target state="translated">Es ist keine <ph id="ph1">`Virtual`</ph> Elementattribut.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>A member is declared virtual by setting its member access to Public (<ph id="ph1">`property1.Attributes = MemberAttributes.Public`</ph>) without specifying it as Final.</source>
          <target state="translated">Ein Element wird durch Festlegen seiner Memberzugriff auf öffentliche virtuelle deklariert (<ph id="ph1">`property1.Attributes = MemberAttributes.Public`</ph>) ohne als abgeschlossen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>The absence of the Final flag makes a member <ph id="ph1">`virtual`</ph> in C# (<ph id="ph2">`public virtual`</ph>), <ph id="ph3">`overrideable`</ph> in Visual Basic (<ph id="ph4">`Public Overrideable`</ph>).</source>
          <target state="translated">Das Fehlen des endgültigen Flags macht <ph id="ph1">`virtual`</ph> in c# (<ph id="ph2">`public virtual`</ph>), <ph id="ph3">`overrideable`</ph> in Visual Basic (<ph id="ph4">`Public Overrideable`</ph>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>To avoid declaring the member as <ph id="ph1">`virtual`</ph> or <ph id="ph2">`overrideable`</ph>, set both the Public and Final flags in the <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;</ph> property.</source>
          <target state="translated">Um zu vermeiden, deklarieren das Element als <ph id="ph1">`virtual`</ph> oder <ph id="ph2">`overrideable`</ph>, legen Sie sowohl den öffentlichen und endgültigen flags in der <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>See the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;</ph> property for more information on setting member attributes.</source>
          <target state="translated">Finden Sie unter der <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;</ph> -Eigenschaft für Weitere Informationen zum Festlegen von Elementattribute.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>The pattern for setting the access flags (flags containing the terms <ph id="ph1">`Public`</ph>, <ph id="ph2">`Private`</ph>, <ph id="ph3">`Assembly`</ph>, or <ph id="ph4">`Family`</ph>) is to mask out all access flags using the AccessMask mask and then set the desired access flag.</source>
          <target state="translated">Das Muster für das Festlegen der Zugriffsflags (Flags, die mit den Begriffen <ph id="ph1">`Public`</ph>, <ph id="ph2">`Private`</ph>, <ph id="ph3">`Assembly`</ph>, oder <ph id="ph4">`Family`</ph>) besteht darin, alle Access-Flags, die mit der Maske AccessMask zu maskieren, und klicken Sie dann das gewünschte Zugriffsart-Flag wird festgelegt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>For example, the code statement to identify a constructor (named <ph id="ph1">`constructor1`</ph>) as public is <ph id="ph2">`constructor1.Attributes = (constructor1.Attributes &amp; ~MemberAttributes.AccessMask) | MemberAttributes.Public;`</ph>.</source>
          <target state="translated">Z. B. die codeanweisung, identifizieren Sie einen Konstruktor (mit dem Namen <ph id="ph1">`constructor1`</ph>) wird als öffentlich <ph id="ph2">`constructor1.Attributes = (constructor1.Attributes &amp; ~MemberAttributes.AccessMask) | MemberAttributes.Public;`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>Setting the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;</ph> property directly to an access flag (for example, <ph id="ph2">`constructor1.Attributes = MemberAttributes.Public;`</ph>) erases all other flags that might be set.</source>
          <target state="translated">Festlegen der <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeMember.Attributes%2A&gt;</ph> -Eigenschaft direkt auf ein Zugriffsflag (z. B. <ph id="ph2">`constructor1.Attributes = MemberAttributes.Public;`</ph>) Löscht alle anderen Flags, die festgelegt werden können.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>This pattern should also be used for setting the scope flags (Abstract, Final, Static, Override or Const) using the ScopeMask mask.</source>
          <target state="translated">Dieses Muster sollte auch verwendet werden, zum Festlegen der Scope-Flags (abstrakt, letzte, statische, überschreiben oder Const) unter Verwendung der ScopeMask Maske.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.MemberAttributes">
          <source>The following example code demonstrates use of a <ph id="ph1">&lt;xref:System.CodeDom.CodeMemberProperty&gt;</ph> to define a <ph id="ph2">`string`</ph> property with <ph id="ph3">`get`</ph> and <ph id="ph4">`set`</ph> accessors.</source>
          <target state="translated">Der folgende Beispielcode veranschaulicht die Verwendung von einer <ph id="ph1">&lt;xref:System.CodeDom.CodeMemberProperty&gt;</ph> zum Definieren einer <ph id="ph2">`string`</ph> Eigenschaft mit dem <ph id="ph3">`get`</ph> und <ph id="ph4">`set`</ph> Accessoren.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Abstract">
          <source>An abstract member.</source>
          <target state="translated">Ein abstrakter Member.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.AccessMask">
          <source>An access mask.</source>
          <target state="translated">Eine Zugriffsmaske.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Assembly">
          <source>A member that is accessible to any class within the same assembly.</source>
          <target state="translated">Ein Member, auf den alle Klassen in der gleichen Assembly zugreifen können.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Const">
          <source>A constant member.</source>
          <target state="translated">Ein konstanter Member.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Family">
          <source>A member that is accessible within the family of its class and derived classes.</source>
          <target state="translated">Ein Member, auf den aus der Familie seiner Klasse und abgeleiteter Klassen zugegriffen werden kann.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.FamilyAndAssembly">
          <source>A member that is accessible within its class, and derived classes in the same assembly.</source>
          <target state="translated">Ein Member, auf den aus seiner Klasse und aus abgeleiteten Klassen in der gleichen Assembly zugegriffen werden kann.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.FamilyOrAssembly">
          <source>A member that is accessible within its class, its derived classes in any assembly, and any class in the same assembly.</source>
          <target state="translated">Ein Member, auf den aus seiner Klasse, aus abgeleiteten Klassen in einer beliebigen Assembly und aus allen Klassen in der gleichen Assembly zugegriffen werden kann.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Final">
          <source>A member that cannot be overridden in a derived class.</source>
          <target state="translated">Ein Member, der in einer abgeleiteten Klasse nicht überschrieben werden kann.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.New">
          <source>A new member.</source>
          <target state="translated">Ein new-Member.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Overloaded">
          <source>An overloaded member.</source>
          <target state="translated">Ein überladener Member.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Overloaded">
          <source>Some languages, such as Visual Basic, require overloaded members to be explicitly indicated.</source>
          <target state="translated">Bei einigen Sprachen wie Visual Basic müssen überladene Member explizit angegeben werden.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Override">
          <source>A member that overrides a base class member.</source>
          <target state="translated">Ein Member, der einen Basisklassenmember überschreibt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Private">
          <source>A private member.</source>
          <target state="translated">Ein private-Member.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Public">
          <source>A public member.</source>
          <target state="translated">Ein public-Member.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.ScopeMask">
          <source>A scope mask.</source>
          <target state="translated">Eine Gültigkeitsbereichsmaske.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Static">
          <source>A static member.</source>
          <target state="translated">Ein statischer Member.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.Static">
          <source>In Visual Basic, this is equivalent to the <ph id="ph1">&lt;see langword="Shared" /&gt;</ph> keyword.</source>
          <target state="translated">Dies entspricht dem <ph id="ph1">&lt;see langword="Shared" /&gt;</ph>-Schlüsselwort in Visual Basic.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.CodeDom.MemberAttributes.VTableMask">
          <source>A VTable mask.</source>
          <target state="translated">Eine VTable-Maske.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>