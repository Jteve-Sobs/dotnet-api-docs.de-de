<Type Name="CodeDelegateInvokeExpression" FullName="System.CodeDom.CodeDelegateInvokeExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="085b7c0917b825d4b609970d7c0b111e6114dd93" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36646757" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeDelegateInvokeExpression : System.CodeDom.CodeExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeDelegateInvokeExpression extends System.CodeDom.CodeExpression" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeDelegateInvokeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeDelegateInvokeExpression&#xA;Inherits CodeExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeDelegateInvokeExpression : System::CodeDom::CodeExpression" />
  <TypeSignature Language="F#" Value="type CodeDelegateInvokeExpression = class&#xA;    inherit CodeExpression" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ced71-101">Stellt einen Ausdruck dar, der ein Ereignis auslöst.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ced71-101">Represents an expression that raises an event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ced71-102"><xref:System.CodeDom.CodeDelegateInvokeExpression> kann verwendet werden, Code dargestellt, die ein Ereignis aufruft.</span><span class="sxs-lookup"><span data-stu-id="ced71-102"><xref:System.CodeDom.CodeDelegateInvokeExpression> can be used to represent code that invokes an event.</span></span> <span data-ttu-id="ced71-103">Ein Ereignis aufgerufen, ruft alle Delegaten, die mit dem Ereignis mit den angegebenen Parametern registriert sind.</span><span class="sxs-lookup"><span data-stu-id="ced71-103">Invoking an event invokes all delegates that are registered with the event using the specified parameters.</span></span>  
  
 <span data-ttu-id="ced71-104">Die <xref:System.CodeDom.CodeDelegateInvokeExpression.TargetObject%2A> Eigenschaft gibt an, die aufzurufende Ereignis.</span><span class="sxs-lookup"><span data-stu-id="ced71-104">The <xref:System.CodeDom.CodeDelegateInvokeExpression.TargetObject%2A> property specifies the event to invoke.</span></span> <span data-ttu-id="ced71-105">Die <xref:System.CodeDom.CodeDelegateInvokeExpression.Parameters%2A> Eigenschaft gibt an, für das Ereignis an den Delegaten zu übergebenden Parameter.</span><span class="sxs-lookup"><span data-stu-id="ced71-105">The <xref:System.CodeDom.CodeDelegateInvokeExpression.Parameters%2A> property specifies the parameters to pass to the delegates for the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ced71-106">Das folgende Beispiel veranschaulicht die Verwendung von einem <xref:System.CodeDom.CodeDelegateInvokeExpression> aufzurufenden ein Ereignis namens `TestEvent`.</span><span class="sxs-lookup"><span data-stu-id="ced71-106">The following example demonstrates use of a <xref:System.CodeDom.CodeDelegateInvokeExpression> to invoke an event named `TestEvent`.</span></span>  
  
 [!code-cpp[CodeDelegateInvokeExpressionExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDelegateInvokeExpressionExample/CPP/codedelegateinvokeexpressionexample.cpp#3)]
 [!code-csharp[CodeDelegateInvokeExpressionExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDelegateInvokeExpressionExample/CS/codedelegateinvokeexpressionexample.cs#3)]
 [!code-vb[CodeDelegateInvokeExpressionExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDelegateInvokeExpressionExample/VB/codedelegateinvokeexpressionexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeExpression" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ced71-107">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-107">Initializes a new instance of the <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDelegateInvokeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDelegateInvokeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ced71-108">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDelegateInvokeExpression (System.CodeDom.CodeExpression targetObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression targetObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetObject As CodeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDelegateInvokeExpression(System::CodeDom::CodeExpression ^ targetObject);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeDelegateInvokeExpression : System.CodeDom.CodeExpression -&gt; System.CodeDom.CodeDelegateInvokeExpression" Usage="new System.CodeDom.CodeDelegateInvokeExpression targetObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" />
      </Parameters>
      <Docs>
        <param name="targetObject">
          <span data-ttu-id="ced71-109">Eine <see cref="T:System.CodeDom.CodeExpression" />, die das Zielobjekt angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-109">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the target object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ced71-110">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" />-Klasse unter Verwendung des angegebenen Zielobjekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-110">Initializes a new instance of the <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /> class using the specified target object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeDelegateInvokeExpression (System.CodeDom.CodeExpression targetObject, params System.CodeDom.CodeExpression[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeExpression targetObject, class System.CodeDom.CodeExpression[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeDelegateInvokeExpression.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (targetObject As CodeExpression, ParamArray parameters As CodeExpression())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeDelegateInvokeExpression(System::CodeDom::CodeExpression ^ targetObject, ... cli::array &lt;System::CodeDom::CodeExpression ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeDelegateInvokeExpression : System.CodeDom.CodeExpression * System.CodeDom.CodeExpression[] -&gt; System.CodeDom.CodeDelegateInvokeExpression" Usage="new System.CodeDom.CodeDelegateInvokeExpression (targetObject, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="targetObject" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="parameters" Type="System.CodeDom.CodeExpression[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetObject">
          <span data-ttu-id="ced71-111">Eine <see cref="T:System.CodeDom.CodeExpression" />, die das Zielobjekt angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-111">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the target object.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="ced71-112">Ein Array von <see cref="T:System.CodeDom.CodeExpression" />-Objekten, die die Parameter angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-112">An array of <see cref="T:System.CodeDom.CodeExpression" /> objects that indicate the parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ced71-113">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" />-Klasse unter Verwendung des angegebenen Zielobjekts und der angegebenen Parameter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeDelegateInvokeExpression" /> class using the specified target object and parameters.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpressionCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpressionCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeDelegateInvokeExpression.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As CodeExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpressionCollection ^ Parameters { System::CodeDom::CodeExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.CodeDom.CodeExpressionCollection" Usage="System.CodeDom.CodeDelegateInvokeExpression.Parameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ced71-114">Ruft die Parameter ab, die an die dem Ereignis angefügten Ereignisbehandlungsmethoden übergeben werden sollen, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-114">Gets or sets the parameters to pass to the event handling methods attached to the event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ced71-115">Eine <see cref="T:System.CodeDom.CodeExpression" />, die die Parameter angibt, die an die dem Ereignis angefügten Ereignisbehandlungsmethoden übergeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-115">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the parameters to pass to the event handling methods attached to the event.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeExpression TargetObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeExpression TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeDelegateInvokeExpression.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public Property TargetObject As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeExpression ^ TargetObject { System::CodeDom::CodeExpression ^ get(); void set(System::CodeDom::CodeExpression ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : System.CodeDom.CodeExpression with get, set" Usage="System.CodeDom.CodeDelegateInvokeExpression.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ced71-116">Ruft das aufzurufende Ereignis ab oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-116">Gets or sets the event to invoke.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ced71-117">Eine <see cref="T:System.CodeDom.CodeExpression" />, die das aufzurufende Ereignis angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ced71-117">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the event to invoke.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeExpression" />
      </Docs>
    </Member>
  </Members>
</Type>