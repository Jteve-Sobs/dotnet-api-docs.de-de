<Type Name="CodeTypeReference" FullName="System.CodeDom.CodeTypeReference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f378f374ca1b7270956fe610c25908e3e9a82d68" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78720166" /></Metadata><TypeSignature Language="C#" Value="public class CodeTypeReference : System.CodeDom.CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CodeTypeReference extends System.CodeDom.CodeObject" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeReference" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTypeReference&#xA;Inherits CodeObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTypeReference : System::CodeDom::CodeObject" />
  <TypeSignature Language="F#" Value="type CodeTypeReference = class&#xA;    inherit CodeObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeReference extends System.CodeDom.CodeObject" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7c7f6-101">Stellt einen Verweis auf einen Typ dar.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-101">Represents a reference to a type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c7f6-102">Ein <xref:System.CodeDom.CodeTypeReference>-Objekt wird verwendet, um einen Typ für CodeDOM-Objekte darzustellen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-102">A <xref:System.CodeDom.CodeTypeReference> object is used to represent a type for CodeDOM objects.</span></span> <span data-ttu-id="7c7f6-103">Wenn CodeDOM-Typen über eine `Type`-Eigenschaft verfügen, ist Sie vom Typ <xref:System.CodeDom.CodeTypeReference>.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-103">When CodeDOM types have a `Type` property, it is of type <xref:System.CodeDom.CodeTypeReference>.</span></span> <span data-ttu-id="7c7f6-104">Die <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType>-Eigenschaft ist z. b. eine <xref:System.CodeDom.CodeTypeReference>, die den Datentyp eines Felds darstellt.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-104">For example, the <xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType> property is a <xref:System.CodeDom.CodeTypeReference> that represents a field's data type.</span></span>  
  
 <span data-ttu-id="7c7f6-105">Eine <xref:System.CodeDom.CodeTypeReference> kann mit einem <xref:System.Type>-Objekt oder einer Zeichenfolge initialisiert werden.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-105">A <xref:System.CodeDom.CodeTypeReference> can be initialized with a <xref:System.Type> object or a string.</span></span> <span data-ttu-id="7c7f6-106">Im Allgemeinen wird empfohlen, eine <xref:System.Type> zu verwenden, obwohl dies möglicherweise nicht immer möglich ist.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-106">It is generally recommended to use a <xref:System.Type> to do this, although it may not always be possible.</span></span> <span data-ttu-id="7c7f6-107">Wenn Sie eine Instanz dieser Klasse mit einer Zeichenfolge initialisieren, wird dringend empfohlen, immer voll qualifizierte Typen, z. b. "System. Console", anstelle von "Console" zu verwenden, da nicht alle Sprachen das Importieren von Namespaces unterstützen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-107">If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as "System.Console" instead of just "Console", because not all languages support importing namespaces.</span></span> <span data-ttu-id="7c7f6-108">Array Typen können entweder durch Übergeben eines Type-Objekts für ein Array oder mithilfe eines der Konstruktoren angegeben werden, die Rang als Parameter akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-108">Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.</span></span>  
  
 <span data-ttu-id="7c7f6-109">Die <xref:System.CodeDom.CodeTypeReference.BaseType%2A>-Eigenschaft gibt den Namen des Typs an, auf den verwiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-109">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property specifies the name of the type to reference.</span></span> <span data-ttu-id="7c7f6-110">Für Verweise auf Array Typen gibt die <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A>-Eigenschaft den Typ der Elemente des Arrays an, und die <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>-Eigenschaft gibt die Anzahl der Dimensionen im Array an.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-110">For references to array types, the <xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A> property indicates the type of the elements of the array, and the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property indicates the number of dimensions in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c7f6-111">Das folgende Beispiel veranschaulicht die Verwendung eines <xref:System.CodeDom.CodeTypeReference>, um einen Verweis auf einen Typ darzustellen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-111">The following example demonstrates use of a <xref:System.CodeDom.CodeTypeReference> to represent a reference to a type.</span></span>  
  
 [!code-cpp[CodeTypeOfExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeOfExample/CPP/codetypeofexample.cpp#2)]
 [!code-csharp[CodeTypeOfExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeOfExample/CS/codetypeofexample.cs#2)]
 [!code-vb[CodeTypeOfExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeOfExample/VB/codetypeofexample.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c7f6-112">Initialisiert mithilfe des angegebenen Typs eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeReference" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c7f6-113">Initialisiert eine neue Instanz der Klasse <see cref="T:System.CodeDom.CodeTypeReference" />.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-113">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c7f6-114">Dieser Konstruktor erstellt ein leeres <xref:System.CodeDom.CodeTypeReference>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-114">This constructor creates an empty <xref:System.CodeDom.CodeTypeReference> object.</span></span>  <span data-ttu-id="7c7f6-115">Wenn Sie diesen Konstruktor verwenden, legen Sie Eigenschaften fest, um den Typverweis festzulegen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-115">If you use this constructor, set properties to establish the type reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeParameter typeParameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeParameter typeParameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeParameter As CodeTypeParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeParameter ^ typeParameter);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeParameter -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeParameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeParameter" Type="System.CodeDom.CodeTypeParameter" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeParameter"><span data-ttu-id="7c7f6-116">Ein <see cref="T:System.CodeDom.CodeTypeParameter" />, der den Typ des Typparameters darstellt.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-116">A <see cref="T:System.CodeDom.CodeTypeParameter" /> that represents the type of the type parameter.</span></span></param>
        <summary><span data-ttu-id="7c7f6-117">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeReference" />-Klasse unter Verwendung des angegebenen Codetypparameters.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-117">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified code type parameter.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference typeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="7c7f6-118">Der Name des Typs, auf den verwiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-118">The name of the type to reference.</span></span></param>
        <summary><span data-ttu-id="7c7f6-119">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeReference" />-Klasse mit dem angegebenen Typnamen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-119">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c7f6-120">Wenn der `typeName`-Parameter auf einen generischen Typ verweist, muss er den Syntax Konventionen für generische Typen folgen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-120">If the `typeName` parameter references a generic type, it must follow the syntax conventions for generic types.</span></span> <span data-ttu-id="7c7f6-121">Beispielsweise wird die reflektionensignatur für einen <xref:System.Collections.Generic.Dictionary%602>-Typ, wobei `K` eine Zeichenfolge und `V` eine <xref:System.Collections.Generic.List%601> von ganzen Zahlen ist, durch Reflektion wie folgt dargestellt (mit den Assemblyinformationen entfernt): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-121">For example, the reflection signature for a <xref:System.Collections.Generic.Dictionary%602> type, where `K` is a string and `V` is a <xref:System.Collections.Generic.List%601> of integers, is represented by reflection as the following (with the assembly information removed): ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c7f6-122">Sie müssen eckige Klammern ([]) und nicht die C# spitzen Klammern (< >) verwenden, um generische Parameter voneinander zu trennen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-122">You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.</span></span>  
  
 <span data-ttu-id="7c7f6-123">Um die Möglichkeit zu vermeiden, die Syntax anzugeben, sollten Sie den-Konstruktor verwenden, der einen-Typ als Parameter anstelle einer Zeichenfolge annimmt.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-123">To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7c7f6-124">Das <see cref="T:System.Type" />, auf das verwiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-124">The <see cref="T:System.Type" /> to reference.</span></span></param>
        <summary><span data-ttu-id="7c7f6-125">Initialisiert mithilfe des angegebenen Typs eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeReference" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-125">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7c7f6-126"><paramref name="type" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="7c7f6-126"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (System.CodeDom.CodeTypeReference arrayType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference arrayType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (arrayType As CodeTypeReference, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::CodeDom::CodeTypeReference ^ arrayType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : System.CodeDom.CodeTypeReference * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (arrayType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="arrayType" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="arrayType"><span data-ttu-id="7c7f6-127">Ein <see cref="T:System.CodeDom.CodeTypeReference" />, der den Typ des Arrays angibt.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-127">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array.</span></span></param>
        <param name="rank"><span data-ttu-id="7c7f6-128">Die Anzahl der Dimensionen im Array.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-128">The number of dimensions in the array.</span></span></param>
        <summary><span data-ttu-id="7c7f6-129">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeReference" />-Klasse unter Verwendung des angegebenen Arraytyps und -namens.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-129">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type and rank.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c7f6-130">Mit diesem Konstruktor können Arrays von Arrays erstellt werden, indem <xref:System.CodeDom.CodeTypeReference>-Objekte geschachtelt werden.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-130">This constructor can be used to construct arrays of arrays by nesting <xref:System.CodeDom.CodeTypeReference> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, params System.CodeDom.CodeTypeReference[] typeArguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, class System.CodeDom.CodeTypeReference[] typeArguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, ParamArray typeArguments As CodeTypeReference())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, ... cli::array &lt;System::CodeDom::CodeTypeReference ^&gt; ^ typeArguments);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReference[] -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, typeArguments)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="typeArguments" Type="System.CodeDom.CodeTypeReference[]" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="7c7f6-131">Der Name des Typs, auf den verwiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-131">The name of the type to reference.</span></span></param>
        <param name="typeArguments"><span data-ttu-id="7c7f6-132">Ein Array von <see cref="T:System.CodeDom.CodeTypeReference" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-132">An array of <see cref="T:System.CodeDom.CodeTypeReference" /> values.</span></span></param>
        <summary><span data-ttu-id="7c7f6-133">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeReference" />-Klasse unter Verwendung des angegebenen Typnamens und Typarguments.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-133">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and type arguments.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string typeName, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, codeTypeReferenceOption As CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ typeName, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (typeName, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="7c7f6-134">Der Name des Typs, auf den verwiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-134">The name of the type to reference.</span></span></param>
        <param name="codeTypeReferenceOption"><span data-ttu-id="7c7f6-135">Die Codetypverweis-Option, einer der <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-135">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span></span></param>
        <summary><span data-ttu-id="7c7f6-136">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeReference" />-Klasse unter Verwendung des angegebenen Typnamens und der angegebenen Codetypverweis-Option.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-136">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type name and code type reference option.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (string baseType, int rank);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string baseType, int32 rank) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (baseType As String, rank As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(System::String ^ baseType, int rank);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : string * int -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (baseType, rank)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="baseType" Type="System.String" />
        <Parameter Name="rank" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="baseType"><span data-ttu-id="7c7f6-137">Der Name des Typs der Arrayelemente.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-137">The name of the type of the elements of the array.</span></span></param>
        <param name="rank"><span data-ttu-id="7c7f6-138">Die Anzahl der Dimensionen des Arrays.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-138">The number of dimensions of the array.</span></span></param>
        <summary><span data-ttu-id="7c7f6-139">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeReference" />-Klasse unter Verwendung des angegebenen Arraytypnamens und -rangs.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-139">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified array type name and rank.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeReference (Type type, System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, valuetype System.CodeDom.CodeTypeReferenceOptions codeTypeReferenceOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As Type, codeTypeReferenceOption As CodeTypeReferenceOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeReference(Type ^ type, System::CodeDom::CodeTypeReferenceOptions codeTypeReferenceOption);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeReference : Type * System.CodeDom.CodeTypeReferenceOptions -&gt; System.CodeDom.CodeTypeReference" Usage="new System.CodeDom.CodeTypeReference (type, codeTypeReferenceOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="codeTypeReferenceOption" Type="System.CodeDom.CodeTypeReferenceOptions" Index="1" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="7c7f6-140">Das <see cref="T:System.Type" />, auf das verwiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-140">The <see cref="T:System.Type" /> to reference.</span></span></param>
        <param name="codeTypeReferenceOption"><span data-ttu-id="7c7f6-141">Die Codetypverweis-Option, einer der <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-141">The code type reference option, one of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span></span></param>
        <summary><span data-ttu-id="7c7f6-142">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeReference" />-Klasse unter Verwendung des angegebenen Typs und des angegebenen Codetypverweises.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-142">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeReference" /> class using the specified type and code type reference.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayElementType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference ArrayElementType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference ArrayElementType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayElementType As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ ArrayElementType { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayElementType : System.CodeDom.CodeTypeReference with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayElementType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c7f6-143">Ruft den Typ der Elemente im Array ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-143">Gets or sets the type of the elements in the array.</span></span></summary>
        <value><span data-ttu-id="7c7f6-144">Ein <see cref="T:System.CodeDom.CodeTypeReference" />, der den Typ der Arrayelemente angibt.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-144">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type of the array elements.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c7f6-145">Dies wird ignoriert, es sei denn, die <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A>-Eigenschaft ist größer als oder gleich 1.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-145">This is disregarded unless the <xref:System.CodeDom.CodeTypeReference.ArrayRank%2A> property is greater than or equal to 1.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayRank">
      <MemberSignature Language="C#" Value="public int ArrayRank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ArrayRank" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberSignature Language="VB.NET" Value="Public Property ArrayRank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ArrayRank { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ArrayRank : int with get, set" Usage="System.CodeDom.CodeTypeReference.ArrayRank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c7f6-146">Ruft den Arrayrang des Arrays ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-146">Gets or sets the array rank of the array.</span></span></summary>
        <value><span data-ttu-id="7c7f6-147">Die Anzahl der Dimensionen des Arrays.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-147">The number of dimensions of the array.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public string BaseType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseType" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseType : string with get, set" Usage="System.CodeDom.CodeTypeReference.BaseType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c7f6-148">Ruft den Namen des Typs ab, auf den verwiesen wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-148">Gets or sets the name of the type being referenced.</span></span></summary>
        <value><span data-ttu-id="7c7f6-149">Der Name der Typbibliothek, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-149">The name of the type being referenced.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c7f6-150">Diese Eigenschaft enthält den Namen des Typs, es sei denn, es handelt sich um einen Arraytyp. in diesem Fall handelt es sich um den Array Elementtyp.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-150">This property contains the name of the type unless it is an array type, in which case it is the array element type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c7f6-151">Der Name der Eigenschaft ist möglicherweise irreführend.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-151">The name of the property may be misleading.</span></span> <span data-ttu-id="7c7f6-152">Diese Eigenschaft enthält nur den Typnamen mit Array Zusatzelementen oder generischen Typargumenten, die entfernt wurden, nicht den Basis-oder übergeordneten Typ, wie erwartet.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-152">This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected.</span></span> <span data-ttu-id="7c7f6-153">Beispielsweise ist der <xref:System.CodeDom.CodeTypeReference.BaseType%2A> Wert für ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` ``System.Collections.Generic.Dictionary`2``.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-153">For example, the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> value for ``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]`` is ``System.Collections.Generic.Dictionary`2``.</span></span>  
  
## <a name="representation-of-generic-types"></a><span data-ttu-id="7c7f6-154">Darstellung generischer Typen</span><span class="sxs-lookup"><span data-stu-id="7c7f6-154">Representation of Generic Types</span></span>  
 <span data-ttu-id="7c7f6-155">Die Informationen in diesem Abschnitt sind für Entwickler von CodeDom-Anbietern gedacht und gelten nur für CLS-kompatible Sprachen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-155">The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages.</span></span> <span data-ttu-id="7c7f6-156">Der Rückgabewert kann generische Typen enthalten.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-156">The return value can contain generic types.</span></span> <span data-ttu-id="7c7f6-157">Generische Typen werden mit dem Namen des Typs, gefolgt von einem schweren Akzent ("" "), gefolgt von der Anzahl der generischen Typargumente formatiert.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-157">Generic types are formatted with the name of the type followed by a grave accent ("\`") followed by a count of the generic type arguments.</span></span> <span data-ttu-id="7c7f6-158">Die generischen Typargumente finden Sie in der <xref:System.CodeDom.CodeTypeReferenceCollection>, die von der <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>-Eigenschaft zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-158">The generic type arguments can be found in the <xref:System.CodeDom.CodeTypeReferenceCollection> returned by the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property.</span></span> <span data-ttu-id="7c7f6-159">Die von <xref:System.CodeDom.CodeTypeReference.BaseType%2A> und der zugeordneten <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> zurückgegebenen Werte enthalten denselben Inhalt wie der Wert des Typs, der von der Reflektion zurückgegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-159">The values returned by <xref:System.CodeDom.CodeTypeReference.BaseType%2A> and the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> contain the same content as the value of the type returned by reflection.</span></span>  
  
 <span data-ttu-id="7c7f6-160">Beispielsweise wird ein erstellter <xref:System.Collections.Generic.Dictionary%602>, bei dem `K` eine Zeichenfolge ist und `V` eine konstruierte <xref:System.Collections.Generic.List%601> von ganzen Zahlen ist, wie folgt dargestellt (mit den Assemblyinformationen):</span><span class="sxs-lookup"><span data-stu-id="7c7f6-160">For example, a constructed <xref:System.Collections.Generic.Dictionary%602> where `K` is a string and `V` is a constructed <xref:System.Collections.Generic.List%601> of integers is represented by reflection as the following (with the assembly information removed):</span></span>  
  
```  
System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]  
```  
  
 <span data-ttu-id="7c7f6-161">Wenn Sie die <xref:System.CodeDom.CodeTypeReference.BaseType%2A>-Eigenschaft aus dem <xref:System.CodeDom.CodeTypeReference> für <xref:System.Collections.Generic.Dictionary%602> rekursiv ausführen, werden dieselben Zeichen folgen wie in der obigen Reflektionsdarstellung erzeugt:</span><span class="sxs-lookup"><span data-stu-id="7c7f6-161">Recursively parsing the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property from the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Collections.Generic.Dictionary%602> yields the same strings as the reflection representation above:</span></span>  
  
-   <span data-ttu-id="7c7f6-162">Die <xref:System.CodeDom.CodeTypeReference.BaseType%2A>-Eigenschaft für das übergeordnete <xref:System.CodeDom.CodeTypeReference> gibt Folgendes zurück:</span><span class="sxs-lookup"><span data-stu-id="7c7f6-162">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the parent <xref:System.CodeDom.CodeTypeReference> returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.Dictionary`2  
    ```  
  
-   <span data-ttu-id="7c7f6-163">Die <xref:System.CodeDom.CodeTypeReference.BaseType%2A>-Eigenschaft für das erste <xref:System.CodeDom.CodeTypeReference>-Objekt in der <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>-Auflistung gibt Folgendes zurück:</span><span class="sxs-lookup"><span data-stu-id="7c7f6-163">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the first <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.String  
    ```  
  
-   <span data-ttu-id="7c7f6-164">Die <xref:System.CodeDom.CodeTypeReference.BaseType%2A>-Eigenschaft für das zweite <xref:System.CodeDom.CodeTypeReference>-Objekt in der <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>-Auflistung gibt Folgendes zurück:</span><span class="sxs-lookup"><span data-stu-id="7c7f6-164">The <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property for the second <xref:System.CodeDom.CodeTypeReference> object in the <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> collection returns the following:</span></span>  
  
    ```  
    System.Collections.Generic.List`1  
    ```  
  
-   <span data-ttu-id="7c7f6-165">Die <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>-Eigenschaft im <xref:System.CodeDom.CodeTypeReference>-Objekt für ``System.Collections.Generic.List`1`` gibt Folgendes zurück:</span><span class="sxs-lookup"><span data-stu-id="7c7f6-165">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property in the <xref:System.CodeDom.CodeTypeReference> object for ``System.Collections.Generic.List`1`` returns the following:</span></span>  
  
    ```  
    System.Int32  
    ```  
  
 <span data-ttu-id="7c7f6-166">Die Anzahl der Typargumente sollte beim Parsen der zugeordneten <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> Werte verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-166">The type argument count should be used when parsing the associated <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> values.</span></span> <span data-ttu-id="7c7f6-167">Die übliche Vorgehensweise besteht darin, die Typargument Anzahl aus dem generierten Code zu entfernen. die Praxis ist jedoch compilerspezifisch.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-167">The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.</span></span>  <span data-ttu-id="7c7f6-168">Beachten Sie, dass die Anzahl der Typargumente innerhalb eines geschachtelten Typnamens gefunden werden kann. in diesem Fall folgt ein Pluszeichen ("+").</span><span class="sxs-lookup"><span data-stu-id="7c7f6-168">It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign ("+").</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c7f6-169">Beim Erstellen eines generischen <xref:System.CodeDom.CodeTypeReference>wird empfohlen, die Typargumente als <xref:System.CodeDom.CodeTypeReference> Objekte anzugeben oder den Konstruktor zu verwenden, der einen <xref:System.Type>annimmt.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-169">When creating a generic <xref:System.CodeDom.CodeTypeReference>, the recommended practice is to specify the type arguments as <xref:System.CodeDom.CodeTypeReference> objects or use the constructor that takes a <xref:System.Type>.</span></span> <span data-ttu-id="7c7f6-170">Die Verwendung des Konstruktors, der einen <xref:System.CodeDom.CodeTypeReference> aus einer Zeichenfolge erstellt, kann zu nicht ermittelbaren Typargument Fehlern führen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-170">Use of the constructor that creates a <xref:System.CodeDom.CodeTypeReference> from a string can lead to undiscoverable type-argument errors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceOptions Options { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.CodeTypeReferenceOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.Options" />
      <MemberSignature Language="VB.NET" Value="Public Property Options As CodeTypeReferenceOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceOptions Options { System::CodeDom::CodeTypeReferenceOptions get(); void set(System::CodeDom::CodeTypeReferenceOptions value); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.CodeDom.CodeTypeReferenceOptions with get, set" Usage="System.CodeDom.CodeTypeReference.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c7f6-171">Ruft die Codetypverweis-Option ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-171">Gets or sets the code type reference option.</span></span></summary>
        <value><span data-ttu-id="7c7f6-172">Eine bitweise Kombination der <see cref="T:System.CodeDom.CodeTypeReferenceOptions" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-172">A bitwise combination of the <see cref="T:System.CodeDom.CodeTypeReferenceOptions" /> values.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ TypeArguments { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeArguments : System.CodeDom.CodeTypeReferenceCollection" Usage="System.CodeDom.CodeTypeReference.TypeArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c7f6-173">Ruft die Typargumente für den aktuellen generischen Typverweis ab.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-173">Gets the type arguments for the current generic type reference.</span></span></summary>
        <value><span data-ttu-id="7c7f6-174">Eine <see cref="T:System.CodeDom.CodeTypeReferenceCollection" />, die die Typargumente für das aktuelle <see cref="T:System.CodeDom.CodeTypeReference" />-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-174">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> containing the type arguments for the current <see cref="T:System.CodeDom.CodeTypeReference" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c7f6-175">Die <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A>-Eigenschaft ist eine Auflistung von Typverweisen, die durch die Typparameter Verweise des aktuellen generischen Typs ersetzt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-175">The <xref:System.CodeDom.CodeTypeReference.TypeArguments%2A> property is a collection of type references to be substituted for the type parameter references of the current generic type.</span></span> <span data-ttu-id="7c7f6-176">Die-Auflistung enthält alle Typargumente für alle in der Liste enthaltenen Typen.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-176">The collection contains all the type arguments for all nested types.</span></span> <span data-ttu-id="7c7f6-177">Ein Beispiel finden Sie in der <xref:System.CodeDom.CodeTypeReference.BaseType%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7c7f6-177">For an example, see the <xref:System.CodeDom.CodeTypeReference.BaseType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
