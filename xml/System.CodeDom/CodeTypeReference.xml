<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeTypeReference.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52455b43fddb32549a443564aec8b89bb01619d72.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2455b43fddb32549a443564aec8b89bb01619d72</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeTypeReference">
          <source>Represents a reference to a type.</source>
          <target state="translated">Stellt einen Verweis auf einen Typ dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object is used to represent a type for CodeDOM objects.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> Objekt wird verwendet, um einen Typ für CodeDOM-Objekte darstellen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>When CodeDOM types have a <ph id="ph1">`Type`</ph> property, it is of type <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>.</source>
          <target state="translated">Wenn CodeDOM-Typen haben eine <ph id="ph1">`Type`</ph> -Eigenschaft ist vom Typ <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>For example, the <ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType&gt;</ph> property is a <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> that represents a field's data type.</source>
          <target state="translated">Z. B. die <ph id="ph1">&lt;xref:System.CodeDom.CodeMemberField.Type%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft ist ein <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> , der Datentyp des Felds darstellt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> can be initialized with a <ph id="ph2">&lt;xref:System.Type&gt;</ph> object or a string.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> können initialisiert werden, mit einem <ph id="ph2">&lt;xref:System.Type&gt;</ph> Objekt oder eine Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>It is generally recommended to use a <ph id="ph1">&lt;xref:System.Type&gt;</ph> to do this, although it may not always be possible.</source>
          <target state="translated">Es wird im Allgemeinen empfohlen, verwenden Sie eine <ph id="ph1">&lt;xref:System.Type&gt;</ph> dazu, obwohl es möglicherweise nicht immer möglich.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>If initializing an instance of this class with a string, it is strongly recommended to always use fully qualified types, such as "System.Console" instead of just "Console", because not all languages support importing namespaces.</source>
          <target state="translated">Wenn eine Instanz dieser Klasse mit einer Zeichenfolge zu initialisieren, wird empfohlen, verwenden Sie immer vollqualifizierte Typen, z. B. "System.Console" anstelle von "Console", da nicht alle Sprachen Importieren von Namespaces zu unterstützen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>Array types can be specified by either passing in a type object for an array or using one of the constructors that accept rank as a parameter.</source>
          <target state="translated">Arraytypen können angegeben werden, oder übergeben Sie ein Objekt vom Typ für ein Array mit einer der Konstruktoren, die Rang als Parameter akzeptieren.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property specifies the name of the type to reference.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> Eigenschaft gibt den Namen des Typs zu verweisen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>For references to array types, the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A&gt;</ph> property indicates the type of the elements of the array, and the <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph> property indicates the number of dimensions in the array.</source>
          <target state="translated">Für Verweise auf Arraytypen die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.ArrayElementType%2A&gt;</ph> Eigenschaft gibt den Typ der Elemente des Arrays, und die <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph> Eigenschaft gibt die Anzahl der Dimensionen im Array an.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.CodeDom.CodeTypeReference">
          <source>The following example demonstrates use of a <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> to represent a reference to a type.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von einem <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> um einen Verweis auf einen Typ darzustellen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.CodeDom.CodeTypeReference">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type.</source>
          <target state="translated">Initialisiert mithilfe des angegebenen Typs eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor">
          <source>This constructor creates an empty <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object.</source>
          <target state="translated">Dieser Konstruktor erstellt ein leeres <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor">
          <source>If you use this constructor, set properties to establish the type reference.</source>
          <target state="translated">Wenn Sie diesen Konstruktor verwenden, legen Sie Eigenschaften den Typverweis herstellen.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeParameter" /&gt;</ph> that represents the type of the type parameter.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeParameter" /&gt;</ph>, der den Typ des Typparameters darstellt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeParameter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified code type parameter.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse unter Verwendung des angegebenen Codetypparameters.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>The name of the type to reference.</source>
          <target state="translated">Der Name des Typs, auf den verwiesen werden soll.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type name.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse mit dem angegebenen Typnamen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>If the <ph id="ph1">`typeName`</ph> parameter references a generic type, it must follow the syntax conventions for generic types.</source>
          <target state="translated">Wenn die <ph id="ph1">`typeName`</ph> Parameter verweist auf einen generischen Typ, muss er die Syntaxkonventionen für generische Typen entsprechen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>For example, the reflection signature for a <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> type, where <ph id="ph2">`K`</ph> is a string and <ph id="ph3">`V`</ph> is a <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of integers, is represented by reflection as the following (with the assembly information removed): <ph id="ph5">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph>.</source>
          <target state="translated">Z. B. die Reflektionssignatur für ein <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> Typ, in dem <ph id="ph2">`K`</ph> ist eine Zeichenfolge und <ph id="ph3">`V`</ph> ist ein <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von Ganzzahlen, die durch Reflektion wie folgt dargestellt wird (mit den Assemblyinformationen entfernt): <ph id="ph5">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>You must use square brackets ([]) and not the C# angle brackets (&lt;&gt;) to delimit generic parameters.</source>
          <target state="translated">Zur Begrenzung von generischer Parameters müssen Sie eckige Klammern ([]) und nicht die C#-spitzen Klammern (&lt;&gt;) verwenden.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String)">
          <source>To avoid the possibility of making a mistake in specifying the syntax, consider using the constructor that takes a type as a parameter instead of a string.</source>
          <target state="translated">Um der Möglichkeit, einen Fehler bei der Angabe der Syntax zu vermeiden, sollten Sie in der mithilfe des Konstruktors, die einen Typ als Parameter anstelle einer Zeichenfolge verwendet.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to reference.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, auf das verwiesen werden soll.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type.</source>
          <target state="translated">Initialisiert mithilfe des angegebenen Typs eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> that indicates the type of the array.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>, der den Typ des Arrays angibt.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
          <source>The number of dimensions in the array.</source>
          <target state="translated">Die Anzahl der Dimensionen im Array.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified array type and rank.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse unter Verwendung des angegebenen Arraytyps und -namens.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.CodeDom.CodeTypeReference,System.Int32)">
          <source>This constructor can be used to construct arrays of arrays by nesting <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> objects.</source>
          <target state="translated">Dieser Konstruktor kann zum Erstellen von Arrays von Arrays verwendet werden, durch Schachtelung <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])">
          <source>The name of the type to reference.</source>
          <target state="translated">Der Name des Typs, auf den verwiesen werden soll.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> values.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Werten.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReference[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type name and type arguments.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse unter Verwendung des angegebenen Typnamens und Typarguments.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)">
          <source>The name of the type to reference.</source>
          <target state="translated">Der Name des Typs, auf den verwiesen werden soll.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)">
          <source>The code type reference option, one of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph> values.</source>
          <target state="translated">Die Codetypverweis-Option, einer der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.CodeDom.CodeTypeReferenceOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type name and code type reference option.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse unter Verwendung des angegebenen Typnamens und der angegebenen Codetypverweis-Option.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)">
          <source>The name of the type of the elements of the array.</source>
          <target state="translated">Der Name des Typs der Arrayelemente.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)">
          <source>The number of dimensions of the array.</source>
          <target state="translated">Die Anzahl der Dimensionen des Arrays.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified array type name and rank.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse unter Verwendung des angegebenen Arraytypnamens und -rangs.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> to reference.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>, auf das verwiesen werden soll.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
          <source>The code type reference option, one of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph> values.</source>
          <target state="translated">Die Codetypverweis-Option, einer der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.CodeDom.CodeTypeReference.#ctor(System.Type,System.CodeDom.CodeTypeReferenceOptions)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> class using the specified type and code type reference.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Klasse unter Verwendung des angegebenen Typs und des angegebenen Codetypverweises.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.ArrayElementType">
          <source>Gets or sets the type of the elements in the array.</source>
          <target state="translated">Ruft den Typ der Elemente im Array ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.ArrayElementType">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> that indicates the type of the array elements.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>, der den Typ der Arrayelemente angibt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.ArrayElementType">
          <source>This is disregarded unless the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph> property is greater than or equal to 1.</source>
          <target state="translated">Dies wird ignoriert, es sei denn, die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.ArrayRank%2A&gt;</ph> -Eigenschaft ist größer als oder gleich 1.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.ArrayRank">
          <source>Gets or sets the array rank of the array.</source>
          <target state="translated">Ruft den Arrayrang des Arrays ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.ArrayRank">
          <source>The number of dimensions of the array.</source>
          <target state="translated">Die Anzahl der Dimensionen des Arrays.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Gets or sets the name of the type being referenced.</source>
          <target state="translated">Ruft den Namen des Typs ab, auf den verwiesen wird, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The name of the type being referenced.</source>
          <target state="translated">Der Name der Typbibliothek, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>This property contains the name of the type unless it is an array type, in which case it is the array element type.</source>
          <target state="translated">Diese Eigenschaft enthält den Namen des Typs, wenn sie ein Arraytyp ist, in diesem Fall wird es dem Elementtyp des Arrays.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The name of the property may be misleading.</source>
          <target state="translated">Der Name der Eigenschaft kann irreführend sein.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>This property contains just the type name with any array adornments or generic type arguments removed, not the base or parent type as might be expected.</source>
          <target state="translated">Diese Eigenschaft enthält nur den Typnamen mit alle Angaben zum Array oder generische Typargumente entfernt werden, nicht den Basistyp oder den übergeordneten Typ wie erwartet werden kann.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>For example, the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> value for <ph id="ph2">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph> is <ph id="ph3">``System.Collections.Generic.Dictionary`2``</ph>.</source>
          <target state="translated">Z. B. die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> Wert für <ph id="ph2">``System.Collections.Generic.Dictionary`2[[System.String], [System.Collections.Generic.List`1[[System.Int32]]]]``</ph> ist <ph id="ph3">``System.Collections.Generic.Dictionary`2``</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Representation of Generic Types</source>
          <target state="translated">Darstellung von generischen Typen</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The information in this section is intended for CodeDom provider developers and only applies to CLS-compliant languages.</source>
          <target state="translated">Die Informationen in diesem Abschnitt ist für Entwickler von CodeDom-Anbieter vorgesehen und gilt nur für CLS-kompatiblen Sprachen.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The return value can contain generic types.</source>
          <target state="translated">Der Rückgabewert kann generische Typen enthalten.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Generic types are formatted with the name of the type followed by a grave accent ("`") followed by a count of the generic type arguments.</source>
          <target state="translated">Generische Typen werden mit dem Namen des Typs, gefolgt von einem Gravis-Akzent formatiert ("" ") gefolgt von einer Anzahl von generischen Typargumenten.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The generic type arguments can be found in the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReferenceCollection&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> property.</source>
          <target state="translated">Die generischen Typargumente finden Sie in der <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReferenceCollection&gt;</ph> zurückgegebenes der <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The values returned by <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> and the associated <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> contain the same content as the value of the type returned by reflection.</source>
          <target state="translated">Die Rückgabewerte <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> und den zugehörigen <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> enthalten denselben Inhalt wie der Wert des Typs, die durch Reflektion zurückgegeben.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>For example, a constructed <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> where <ph id="ph2">`K`</ph> is a string and <ph id="ph3">`V`</ph> is a constructed <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> of integers is represented by reflection as the following (with the assembly information removed):</source>
          <target state="translated">Z. B. einer erstellten <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> , in denen <ph id="ph2">`K`</ph> ist eine Zeichenfolge und <ph id="ph3">`V`</ph> ist einer erstellten <ph id="ph4">&lt;xref:System.Collections.Generic.List%601&gt;</ph> von ganzen Zahlen wird durch Reflektion wie folgt dargestellt (mit entfernten Assemblyinformationen):</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Recursively parsing the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property from the <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> for <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> yields the same strings as the reflection representation above:</source>
          <target state="translated">Rekursiv Analyse der <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> Eigenschaft aus der <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> für <ph id="ph3">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> ergibt die gleichen Zeichenfolgen als die oben genannten Reflektion Darstellung:</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property for the parent <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> returns the following:</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> -Eigenschaft für das übergeordnete Element <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> gibt Folgendes zurück:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property for the first <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object in the <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> collection returns the following:</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> -Eigenschaft für die erste <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> Objekt in der <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> Sammlung gibt Folgendes zurück:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property for the second <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object in the <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> collection returns the following:</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> Eigenschaft für die zweite <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> Objekt in der <ph id="ph3">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> Sammlung gibt Folgendes zurück:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> object for <ph id="ph3">``System.Collections.Generic.List`1``</ph> returns the following:</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> Eigenschaft in der <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> -Objekt für <ph id="ph3">``System.Collections.Generic.List`1``</ph> gibt Folgendes zurück:</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The type argument count should be used when parsing the associated <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> values.</source>
          <target state="translated">Die Anzahl von Argumenten Typ sollte verwendet werden, beim Analysieren der zugeordneten <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> Werte.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>The common practice is to remove the type argument count from the generated code, but the practice is compiler specific.</source>
          <target state="translated">Häufig wird die Anzahl der Typargumente aus dem generierten Code zu entfernen, aber die Vorgehensweise ist compilerspezifisch.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>It is important to note that the type argument count can be found within a nested type name, in which case it is followed by a plus sign ("+").</source>
          <target state="translated">Es ist wichtig zu beachten, dass die Anzahl von Argumenten Typ kann innerhalb eines geschachtelten Typs Namens gefunden werden, in diesem Fall ist es gefolgt von einem Pluszeichen ("+").</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>When creating a generic <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>, the recommended practice is to specify the type arguments as <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> objects or use the constructor that takes a <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Beim Erstellen eines generischen <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph>, die empfohlene Vorgehensweise ist die Angabe der Typargumente als <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> Objekte oder verwenden Sie den Konstruktor, der akzeptiert eine <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.BaseType">
          <source>Use of the constructor that creates a <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> from a string can lead to undiscoverable type-argument errors.</source>
          <target state="translated">Verwendung des Konstruktors, die erstellt eine <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> aus einer Zeichenfolge zu unauffindbaren Typargument-Fehlern führen können.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.Options">
          <source>Gets or sets the code type reference option.</source>
          <target state="translated">Ruft die Codetypverweis-Option ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.Options">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph> values.</source>
          <target state="translated">Eine bitweise Kombination der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceOptions" /&gt;</ph>-Werte.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>Gets the type arguments for the current generic type reference.</source>
          <target state="translated">Ruft die Typargumente für den aktuellen generischen Typverweis ab.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceCollection" /&gt;</ph> containing the type arguments for the current <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> object.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReferenceCollection" /&gt;</ph>, die die Typargumente für das aktuelle <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Objekt enthält.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> property is a collection of type references to be substituted for the type parameter references of the current generic type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.TypeArguments%2A&gt;</ph> Eigenschaft ist eine Sammlung von Typverweise, die Typ-Parameterverweise des aktuellen generischen Typs ersetzen sollen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>The collection contains all the type arguments for all nested types.</source>
          <target state="translated">Die Auflistung enthält alle Typargumente für alle geschachtelten Typen.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.CodeDom.CodeTypeReference.TypeArguments">
          <source>For an example, see the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> property.</source>
          <target state="translated">Ein Beispiel finden Sie die <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference.BaseType%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>