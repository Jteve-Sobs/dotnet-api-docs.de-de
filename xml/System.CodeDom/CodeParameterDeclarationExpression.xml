<Type Name="CodeParameterDeclarationExpression" FullName="System.CodeDom.CodeParameterDeclarationExpression">
  <TypeSignature Language="C#" Value="public class CodeParameterDeclarationExpression : System.CodeDom.CodeExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeParameterDeclarationExpression extends System.CodeDom.CodeExpression" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeParameterDeclarationExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeParameterDeclarationExpression&#xA;Inherits CodeExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeParameterDeclarationExpression : System::CodeDom::CodeExpression" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4a486-101">Stellt eine Parameterdeklaration für eine Methode, eine Eigenschaft oder einen Konstruktor dar.</span><span class="sxs-lookup"><span data-stu-id="4a486-101">Represents a parameter declaration for a method, property, or constructor.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a486-102"><xref:System.CodeDom.CodeParameterDeclarationExpression> kann verwendet werden, um Code darzustellen, die einen Parameter für eine Methode, eine Eigenschaft oder ein Konstruktor deklariert.</span><span class="sxs-lookup"><span data-stu-id="4a486-102"><xref:System.CodeDom.CodeParameterDeclarationExpression> can be used to represent code that declares a parameter for a method, property, or constructor.</span></span>  
  
 <span data-ttu-id="4a486-103">Die <xref:System.CodeDom.CodeParameterDeclarationExpression.Name%2A> Eigenschaft gibt den Namen des Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-103">The <xref:System.CodeDom.CodeParameterDeclarationExpression.Name%2A> property specifies the name of the parameter.</span></span> <span data-ttu-id="4a486-104">Die <xref:System.CodeDom.CodeParameterDeclarationExpression.Type%2A> Eigenschaft gibt den Datentyp des Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-104">The <xref:System.CodeDom.CodeParameterDeclarationExpression.Type%2A> property specifies the data type of the parameter.</span></span> <span data-ttu-id="4a486-105">Die <xref:System.CodeDom.CodeParameterDeclarationExpression.Direction%2A> Eigenschaft gibt an, den Richtungsmodifizierer des Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-105">The <xref:System.CodeDom.CodeParameterDeclarationExpression.Direction%2A> property specifies the direction modifier of the parameter.</span></span> <span data-ttu-id="4a486-106">Die <xref:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes%2A> Eigenschaft gibt an, die den Parameter zugeordneten Attribute.</span><span class="sxs-lookup"><span data-stu-id="4a486-106">The <xref:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes%2A> property specifies the attributes associated with the parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a486-107">Das folgende Beispiel veranschaulicht die Verwendung von <xref:System.CodeDom.CodeParameterDeclarationExpression> Parameter einer Methode mit verschiedenen deklarieren <xref:System.CodeDom.FieldDirection> Feld Verweis Typspezifizierer.</span><span class="sxs-lookup"><span data-stu-id="4a486-107">The following example demonstrates use of <xref:System.CodeDom.CodeParameterDeclarationExpression> to declare parameters of a method using different <xref:System.CodeDom.FieldDirection> field reference type specifiers.</span></span>  
  
 [!code-cpp[CodeParameterDeclarationExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeParameterDeclarationExample/CPP/codeparameterdeclarationexample.cpp#3)]
 [!code-csharp[CodeParameterDeclarationExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeParameterDeclarationExample/CS/codeparameterdeclarationexample.cs#3)]
 [!code-vb[CodeParameterDeclarationExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeParameterDeclarationExample/VB/codeparameterdeclarationexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4a486-108">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4a486-108">Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeParameterDeclarationExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeParameterDeclarationExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4a486-109">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4a486-109">Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeParameterDeclarationExpression (System.CodeDom.CodeTypeReference type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.CodeDom.CodeTypeReference type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.CodeDom.CodeTypeReference,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As CodeTypeReference, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeParameterDeclarationExpression(System::CodeDom::CodeTypeReference ^ type, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4a486-110">Ein Objekt, das den Typ des zu deklarierenden Parameters angibt.</span><span class="sxs-lookup"><span data-stu-id="4a486-110">An object that indicates the type of the parameter to declare.</span></span></param>
        <param name="name"><span data-ttu-id="4a486-111">Der Name des zu deklarierenden Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-111">The name of the parameter to declare.</span></span></param>
        <summary><span data-ttu-id="4a486-112">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />-Klasse unter Verwendung des angegebenen Parametertyps und -namens.</span><span class="sxs-lookup"><span data-stu-id="4a486-112">Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> class using the specified parameter type and name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeParameterDeclarationExpression (string type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeParameterDeclarationExpression(System::String ^ type, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4a486-113">Der Typ des zu deklarierenden Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-113">The type of the parameter to declare.</span></span></param>
        <param name="name"><span data-ttu-id="4a486-114">Der Name des zu deklarierenden Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-114">The name of the parameter to declare.</span></span></param>
        <summary><span data-ttu-id="4a486-115">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />-Klasse unter Verwendung des angegebenen Parametertyps und -namens.</span><span class="sxs-lookup"><span data-stu-id="4a486-115">Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> class using the specified parameter type and name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a486-116">Wenn die `type` Parameter verweist auf einen generischen Typ, muss er die Syntaxkonventionen für generische Typen entsprechen.</span><span class="sxs-lookup"><span data-stu-id="4a486-116">If the `type` parameter references a generic type, it must follow the syntax conventions for generic types.</span></span> <span data-ttu-id="4a486-117">Generische Typen werden wie folgt formatiert: der Name des Typs, gefolgt von einem Gravis-Akzent ("" "), gefolgt von einer Anzahl von generischen Typargumenten, gefolgt von den Parametern, die durch Klammern getrennt.</span><span class="sxs-lookup"><span data-stu-id="4a486-117">Generic types are formatted as follows: the name of the type, followed by a grave accent ("\`"), followed by a count of the generic type arguments, followed by the parameters delimited with brackets.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a486-118">Zur Begrenzung von generischer Parameters müssen Sie eckige Klammern ([]) und nicht die C#-spitzen Klammern (<>) verwenden.</span><span class="sxs-lookup"><span data-stu-id="4a486-118">You must use square brackets ([]) and not the C# angle brackets (<>) to delimit generic parameters.</span></span>  
  
 <span data-ttu-id="4a486-119">Um die Möglichkeit, einen syntaktischen Fehler zu vermeiden, sollten Sie mithilfe der <xref:System.CodeDom.CodeParameterDeclarationExpression.%23ctor%28System.Type%2CSystem.String%29> Konstruktor, der einen Typ anstelle einer Zeichenfolge als Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="4a486-119">To avoid the possibility of making a syntactic mistake, consider using the <xref:System.CodeDom.CodeParameterDeclarationExpression.%23ctor%28System.Type%2CSystem.String%29> constructor that takes a type instead of a string as a parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeParameterDeclarationExpression (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeParameterDeclarationExpression.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeParameterDeclarationExpression(Type ^ type, System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4a486-120">Der Typ des zu deklarierenden Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-120">The type of the parameter to declare.</span></span></param>
        <param name="name"><span data-ttu-id="4a486-121">Der Name des zu deklarierenden Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-121">The name of the parameter to declare.</span></span></param>
        <summary><span data-ttu-id="4a486-122">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" />-Klasse unter Verwendung des angegebenen Parametertyps und -namens.</span><span class="sxs-lookup"><span data-stu-id="4a486-122">Initializes a new instance of the <see cref="T:System.CodeDom.CodeParameterDeclarationExpression" /> class using the specified parameter type and name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeAttributeDeclarationCollection CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeParameterDeclarationExpression.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomAttributes As CodeAttributeDeclarationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeAttributeDeclarationCollection ^ CustomAttributes { System::CodeDom::CodeAttributeDeclarationCollection ^ get(); void set(System::CodeDom::CodeAttributeDeclarationCollection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeAttributeDeclarationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a486-123">Ruft die benutzerdefinierten Attribute für die Parameterdeklaration ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="4a486-123">Gets or sets the custom attributes for the parameter declaration.</span></span></summary>
        <value><span data-ttu-id="4a486-124">Ein Objekt, das die benutzerdefinierten Attribute angibt.</span><span class="sxs-lookup"><span data-stu-id="4a486-124">An object that indicates the custom attributes.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeAttributeDeclarationCollection" />
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.CodeDom.FieldDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.CodeDom.FieldDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeParameterDeclarationExpression.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As FieldDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::FieldDirection Direction { System::CodeDom::FieldDirection get(); void set(System::CodeDom::FieldDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.FieldDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a486-125">Ruft die Richtung des Felds ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="4a486-125">Gets or sets the direction of the field.</span></span></summary>
        <value><span data-ttu-id="4a486-126">Ein Objekt, das die Richtung des Felds angibt.</span><span class="sxs-lookup"><span data-stu-id="4a486-126">An object that indicates the direction of the field.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.FieldDirection" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeParameterDeclarationExpression.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a486-127">Ruft den Namen des Parameters ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="4a486-127">Gets or sets the name of the parameter.</span></span></summary>
        <value><span data-ttu-id="4a486-128">Der Name des Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-128">The name of the parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReference Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReference Type" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeParameterDeclarationExpression.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As CodeTypeReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReference ^ Type { System::CodeDom::CodeTypeReference ^ get(); void set(System::CodeDom::CodeTypeReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4a486-129">Ruft den Typ des Parameters ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="4a486-129">Gets or sets the type of the parameter.</span></span></summary>
        <value><span data-ttu-id="4a486-130">Der Typ des Parameters.</span><span class="sxs-lookup"><span data-stu-id="4a486-130">The type of the parameter.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>