<Type Name="CodeTypeDeclaration" FullName="System.CodeDom.CodeTypeDeclaration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fa9c33ba58c2a37f513187950a7f4036fca7ba1" /><Meta Name="ms.sourcegitcommit" Value="367e1eae0725e6da7136cd073aaa856ded5d5c29" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/13/2019" /><Meta Name="ms.locfileid" Value="75027885" /></Metadata><TypeSignature Language="C#" Value="public class CodeTypeDeclaration : System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeTypeDeclaration extends System.CodeDom.CodeTypeMember" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.CodeTypeDeclaration" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeTypeDeclaration&#xA;Inherits CodeTypeMember" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeTypeDeclaration : System::CodeDom::CodeTypeMember" />
  <TypeSignature Language="F#" Value="type CodeTypeDeclaration = class&#xA;    inherit CodeTypeMember" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.CodeDom.CodeTypeMember</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="af785-101">Stellt eine Typdeklaration für eine Klasse, Struktur, Schnittstelle oder Enumeration dar.</span><span class="sxs-lookup"><span data-stu-id="af785-101">Represents a type declaration for a class, structure, interface, or enumeration.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af785-102"><xref:System.CodeDom.CodeTypeDeclaration> kann verwendet werden, um Code darzustellen, der eine Klasse, eine Struktur, eine Schnittstelle oder eine Enumeration deklariert.</span><span class="sxs-lookup"><span data-stu-id="af785-102"><xref:System.CodeDom.CodeTypeDeclaration> can be used to represent code that declares a class, structure, interface, or enumeration.</span></span> <span data-ttu-id="af785-103"><xref:System.CodeDom.CodeTypeDeclaration> kann verwendet werden, um einen Typ zu deklarieren, der in einem anderen Typ geschachtelt ist.</span><span class="sxs-lookup"><span data-stu-id="af785-103"><xref:System.CodeDom.CodeTypeDeclaration> can be used to declare a type that is nested within another type.</span></span>  
  
 <span data-ttu-id="af785-104">Die <xref:System.CodeDom.CodeTypeDeclaration.BaseTypes%2A>-Eigenschaft gibt den Basistyp oder die Basis Typen des deklarierten Typs an.</span><span class="sxs-lookup"><span data-stu-id="af785-104">The <xref:System.CodeDom.CodeTypeDeclaration.BaseTypes%2A> property specifies the base type or base types of the type being declared.</span></span> <span data-ttu-id="af785-105">Die <xref:System.CodeDom.CodeTypeDeclaration.Members%2A>-Eigenschaft enthält die Typmember, die Methoden, Felder, Eigenschaften, Kommentare und andere Typen einschließen können.</span><span class="sxs-lookup"><span data-stu-id="af785-105">The <xref:System.CodeDom.CodeTypeDeclaration.Members%2A> property contains the type members, which can include methods, fields, properties, comments and other types.</span></span> <span data-ttu-id="af785-106">Die <xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A>-Eigenschaft gibt die <xref:System.Reflection.TypeAttributes> Werte für die Typdeklaration an, die die Typkategorie des Typs angeben.</span><span class="sxs-lookup"><span data-stu-id="af785-106">The <xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A> property indicates the <xref:System.Reflection.TypeAttributes> values for the type declaration, which indicate the type category of the type.</span></span> <span data-ttu-id="af785-107">Die Methoden <xref:System.CodeDom.CodeTypeDeclaration.IsClass%2A>, <xref:System.CodeDom.CodeTypeDeclaration.IsStruct%2A>, <xref:System.CodeDom.CodeTypeDeclaration.IsEnum%2A>und <xref:System.CodeDom.CodeTypeDeclaration.IsInterface%2A> geben an, ob der Typ eine Klasse, Struktur, Enumeration bzw. Schnittstellentyp ist.</span><span class="sxs-lookup"><span data-stu-id="af785-107">The <xref:System.CodeDom.CodeTypeDeclaration.IsClass%2A>, <xref:System.CodeDom.CodeTypeDeclaration.IsStruct%2A>, <xref:System.CodeDom.CodeTypeDeclaration.IsEnum%2A>, and <xref:System.CodeDom.CodeTypeDeclaration.IsInterface%2A> methods indicate whether the type is a class, structure, enumeration, or interface type, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af785-108">Einige Programmiersprachen unterstützen nur die Deklaration von Verweis Typen oder-Klassen.</span><span class="sxs-lookup"><span data-stu-id="af785-108">Some programming languages only support the declaration of reference types, or classes.</span></span> <span data-ttu-id="af785-109">Um einen sprachspezifischen CodeDOM-Code-Generator für die Unterstützung zum Deklarieren von Schnittstellen, Enumerationen oder Werttypen zu überprüfen, müssen Sie die <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>-Methode zum Testen der entsprechenden <xref:System.CodeDom.Compiler.GeneratorSupport> Flags aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="af785-109">To check a language-specific CodeDOM code generator for support for declaring interfaces, enumerations, or value types, call the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method to test for the appropriate <xref:System.CodeDom.Compiler.GeneratorSupport> flags.</span></span> <span data-ttu-id="af785-110"><xref:System.CodeDom.Compiler.GeneratorSupport.DeclareInterfaces> die Unterstützung für Schnittstellen angibt, <xref:System.CodeDom.Compiler.GeneratorSupport.DeclareEnums> die Unterstützung für Enumerationen anzeigt, und <xref:System.CodeDom.Compiler.GeneratorSupport.DeclareValueTypes> die Unterstützung für Werttypen wie Strukturen angibt.</span><span class="sxs-lookup"><span data-stu-id="af785-110"><xref:System.CodeDom.Compiler.GeneratorSupport.DeclareInterfaces> indicates support for interfaces, <xref:System.CodeDom.Compiler.GeneratorSupport.DeclareEnums> indicates support for enumerations, and <xref:System.CodeDom.Compiler.GeneratorSupport.DeclareValueTypes> indicates support for value types such as structures.</span></span>  
  
 <span data-ttu-id="af785-111">Sie können eine Klasse oder eine Struktur Implementierung in einer kompletten Deklaration erstellen oder die Implementierung auf mehrere Deklarationen verteilen.</span><span class="sxs-lookup"><span data-stu-id="af785-111">You can build a class or a structure implementation in one complete declaration, or spread the implementation across multiple declarations.</span></span> <span data-ttu-id="af785-112">Die <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A>-Eigenschaft gibt an, ob die Typdeklaration vollständig oder teilweise ist.</span><span class="sxs-lookup"><span data-stu-id="af785-112">The <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A> property indicates whether the type declaration is complete or partial.</span></span> <span data-ttu-id="af785-113">Nicht alle Code-Generatoren unterstützen partielle Typdeklarationen. Daher sollten Sie diese Unterstützung überprüfen, indem Sie die <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>-Methode mit dem Flag <xref:System.CodeDom.Compiler.GeneratorSupport.PartialTypes>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="af785-113">Not all code generators support partial type declarations, so you should test for this support by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the flag <xref:System.CodeDom.Compiler.GeneratorSupport.PartialTypes>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af785-114">Dieses Beispiel veranschaulicht die Verwendung eines <xref:System.CodeDom.CodeTypeDeclaration>, um einen Typ zu deklarieren.</span><span class="sxs-lookup"><span data-stu-id="af785-114">This example demonstrates using a <xref:System.CodeDom.CodeTypeDeclaration> to declare a type.</span></span>  
  
 [!code-cpp[CodeTypeDeclarationExample#2](~/samples/snippets/cpp/VS_Snippets_CLR/CodeTypeDeclarationExample/CPP/codetypedeclarationexample.cpp#2)]
 [!code-csharp[CodeTypeDeclarationExample#2](~/samples/snippets/csharp/VS_Snippets_CLR/CodeTypeDeclarationExample/CS/codetypedeclarationexample.cs#2)]
 [!code-vb[CodeTypeDeclarationExample#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeTypeDeclarationExample/VB/codetypedeclarationexample.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.CodeDom.CodeTypeDeclarationCollection" />
    <altmember cref="T:System.CodeDom.Compiler.GeneratorSupport" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="af785-115">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeDeclaration" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="af785-115">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDeclaration" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeDeclaration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclaration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeDeclaration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="af785-116">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeDeclaration" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="af785-116">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDeclaration" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeTypeDeclaration (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.CodeTypeDeclaration.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeTypeDeclaration(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.CodeDom.CodeTypeDeclaration : string -&gt; System.CodeDom.CodeTypeDeclaration" Usage="new System.CodeDom.CodeTypeDeclaration name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="af785-117">Der Name für den neuen Typ.</span><span class="sxs-lookup"><span data-stu-id="af785-117">The name for the new type.</span></span></param>
        <summary><span data-ttu-id="af785-118">Initialisiert eine neue Instanz der <see cref="T:System.CodeDom.CodeTypeDeclaration" />-Klasse mit dem angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="af785-118">Initializes a new instance of the <see cref="T:System.CodeDom.CodeTypeDeclaration" /> class with the specified name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseTypes">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeReferenceCollection BaseTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeReferenceCollection BaseTypes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclaration.BaseTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseTypes As CodeTypeReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeReferenceCollection ^ BaseTypes { System::CodeDom::CodeTypeReferenceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseTypes : System.CodeDom.CodeTypeReferenceCollection" Usage="System.CodeDom.CodeTypeDeclaration.BaseTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-119">Ruft die Basistypen des Typs ab.</span><span class="sxs-lookup"><span data-stu-id="af785-119">Gets the base types of the type.</span></span></summary>
        <value><span data-ttu-id="af785-120">Ein <see cref="T:System.CodeDom.CodeTypeReferenceCollection" />-Objekt, das die Basistypen des Typs angibt.</span><span class="sxs-lookup"><span data-stu-id="af785-120">A <see cref="T:System.CodeDom.CodeTypeReferenceCollection" /> object that indicates the base types of the type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af785-121">Wenn Sie eine Klasse in Visual Basic generieren möchten, die nicht von einem Basistyp erbt, aber eine oder mehrere Schnittstellen implementiert, müssen Sie <xref:System.Object> als erstes Element in der <xref:System.CodeDom.CodeTypeDeclaration.BaseTypes%2A> Auflistung einschließen.</span><span class="sxs-lookup"><span data-stu-id="af785-121">To generate a class in Visual Basic that does not inherit from a base type, but that does implement one or more interfaces, you must include <xref:System.Object> as the first item in the <xref:System.CodeDom.CodeTypeDeclaration.BaseTypes%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af785-122">In der .NET Framework Version 2,0 benötigen Sie die <xref:System.CodeDom.CodeTypeReference> für <xref:System.Object> nicht, wenn die Schnittstelle, die Sie implementieren, bereits vorhanden ist und Sie Sie durch den Typ verweisen.</span><span class="sxs-lookup"><span data-stu-id="af785-122">In the .NET Framework version 2.0 you do not need the <xref:System.CodeDom.CodeTypeReference> for <xref:System.Object> if the interface you are implementing already exists and you are referring to it by type.</span></span> <span data-ttu-id="af785-123">Wenn Sie z. b. die <xref:System.Collections.ICollection>-Schnittstelle implementieren und Sie der-Auflistung mit dieser Anweisung, `ctd.BaseTypes.Add(New CodeTypeReference(typeof(ICollection)))`, hinzufügen, benötigen Sie die vorangehende `ctd.BaseTypes.Add(New CodeTypeReference(GetType(Object)))`-Anweisung nicht.</span><span class="sxs-lookup"><span data-stu-id="af785-123">For example, if you are implementing the <xref:System.Collections.ICollection> interface and add it to the collection with this statement, `ctd.BaseTypes.Add(New CodeTypeReference(typeof(ICollection)))`, you do not need the preceding `ctd.BaseTypes.Add(New CodeTypeReference(GetType(Object)))` statement.</span></span>  
  
 <span data-ttu-id="af785-124">Der folgende Code veranschaulicht das Hinzufügen einer <xref:System.CodeDom.CodeTypeReference> zu der-Auflistung, die auf <xref:System.Object>verweist.</span><span class="sxs-lookup"><span data-stu-id="af785-124">The following code illustrates the addition of a <xref:System.CodeDom.CodeTypeReference> to the collection that refers to <xref:System.Object>.</span></span>  
  
```vb  
Dim ctd As New CodeTypeDeclaration("Class1")  
ctd.IsClass = True  
ctd.BaseTypes.Add(New CodeTypeReference(GetType(Object)))  
ctd.BaseTypes.Add(New CodeTypeReference("Interface1"))  
```  
  
```csharp  
CodeTypeDeclaration ctd = new CodeTypeDeclaration("Class1");  
ctd.IsClass = true;  
ctd.BaseTypes.Add(new CodeTypeReference(typeof(Object)));  
ctd.BaseTypes.Add(new CodeTypeReference("Interface1"));  
```  
  
 <span data-ttu-id="af785-125">Der vorangehende Code generiert das Äquivalent der folgenden Visual Basic-Codes.</span><span class="sxs-lookup"><span data-stu-id="af785-125">The preceding code generates the equivalent of the following Visual Basic code.</span></span>  
  
```vb  
Public Class Class1  
Implements Interface1  
```  
  
 <span data-ttu-id="af785-126">Der Visual Basic Code, der tatsächlich generiert wird, ist jedoch die folgende.</span><span class="sxs-lookup"><span data-stu-id="af785-126">However, the Visual Basic code actually generated is the following.</span></span>  
  
```vb  
Public Class Class1  
Inherits Object  
Implements Interface1  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeTypeReferenceCollection" />
      </Docs>
    </Member>
    <Member MemberName="IsClass">
      <MemberSignature Language="C#" Value="public bool IsClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClass" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclaration.IsClass" />
      <MemberSignature Language="VB.NET" Value="Public Property IsClass As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsClass { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsClass : bool with get, set" Usage="System.CodeDom.CodeTypeDeclaration.IsClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-127">Ruft einen Wert ab, der angibt, ob es sich bei dem Typ um eine Klasse oder einen Verweistyp handelt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="af785-127">Gets or sets a value indicating whether the type is a class or reference type.</span></span></summary>
        <value><span data-ttu-id="af785-128"><see langword="true" />, wenn der Typ eine Klasse oder ein Verweistyp ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="af785-128"><see langword="true" /> if the type is a class or reference type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnum">
      <MemberSignature Language="C#" Value="public bool IsEnum { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnum" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclaration.IsEnum" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnum As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnum { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnum : bool with get, set" Usage="System.CodeDom.CodeTypeDeclaration.IsEnum" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-129">Ruft einen Wert ab, der angibt, ob der Typ eine Enumeration ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="af785-129">Gets or sets a value indicating whether the type is an enumeration.</span></span></summary>
        <value><span data-ttu-id="af785-130"><see langword="true" />, wenn der Typ eine Enumeration ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="af785-130"><see langword="true" /> if the type is an enumeration; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInterface">
      <MemberSignature Language="C#" Value="public bool IsInterface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInterface" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclaration.IsInterface" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInterface As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInterface { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInterface : bool with get, set" Usage="System.CodeDom.CodeTypeDeclaration.IsInterface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-131">Ruft einen Wert ab, der angibt, ob der Typ eine Schnittstelle ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="af785-131">Gets or sets a value indicating whether the type is an interface.</span></span></summary>
        <value><span data-ttu-id="af785-132"><see langword="true" />, wenn der Typ eine Schnittstelle ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="af785-132"><see langword="true" /> if the type is an interface; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPartial">
      <MemberSignature Language="C#" Value="public bool IsPartial { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPartial" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclaration.IsPartial" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPartial As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPartial { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPartial : bool with get, set" Usage="System.CodeDom.CodeTypeDeclaration.IsPartial" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-133">Ruft einen Wert ab, der angibt, ob die Typdeklaration vollständig oder partiell ist, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="af785-133">Gets or sets a value indicating whether the type declaration is complete or partial.</span></span></summary>
        <value><span data-ttu-id="af785-134"><see langword="true" />, wenn die Klassen- oder Strukturdeklaration eine partielle Repräsentation der Implementierung darstellt, und <see langword="false" />, wenn die Deklaration eine vollständige Implementierung der Klasse oder der Struktur ist.</span><span class="sxs-lookup"><span data-stu-id="af785-134"><see langword="true" /> if the class or structure declaration is a partial representation of the implementation; <see langword="false" /> if the declaration is a complete implementation of the class or structure.</span></span> <span data-ttu-id="af785-135">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="af785-135">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af785-136">Sie können eine Klassen-oder Struktur Implementierung in einer kompletten Deklaration erstellen oder die Implementierung auf mehrere Deklarationen verteilen.</span><span class="sxs-lookup"><span data-stu-id="af785-136">You can build a class or structure implementation in one complete declaration, or spread the implementation across multiple declarations.</span></span> <span data-ttu-id="af785-137">Implementierungen werden häufig in einer umfassenden Typdeklaration bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="af785-137">Implementations are commonly supplied in one complete type declaration.</span></span> <span data-ttu-id="af785-138">Legen Sie in diesem Fall die Typdeklaration <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A>-Eigenschaft auf `false`fest, wodurch angegeben wird, dass die Typdeklaration alle Details für die Klassen-oder Struktur Implementierung darstellt.</span><span class="sxs-lookup"><span data-stu-id="af785-138">In this case, set the type declaration <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A> property to `false`, which indicates that the type declaration represents all details for the class or structure implementation.</span></span>  
  
 <span data-ttu-id="af785-139">Eine partielle Typdeklaration vereinfacht das Erstellen unterschiedlicher Teile einer Klassen-oder Struktur Implementierung in verschiedenen Modulen Ihrer Anwendung.</span><span class="sxs-lookup"><span data-stu-id="af785-139">A partial type declaration makes it easier to build different portions of a class or structure implementation in different modules of your application.</span></span> <span data-ttu-id="af785-140">Die partiellen Typdeklarationen können in einer Quelldatei gespeichert oder auf mehrere Quelldateien verteilt werden, die schließlich zusammen kompiliert werden, um die kombinierte Typimplementierung zu bilden.</span><span class="sxs-lookup"><span data-stu-id="af785-140">The partial type declarations can be stored in one source file, or spread across multiple source files that are eventually compiled together to form the combined type implementation.</span></span>  
  
 <span data-ttu-id="af785-141">Die C# Sprache unterstützt partielle Typdeklarationen von Klassen und Strukturen über das `partial`-Schlüsselwort.</span><span class="sxs-lookup"><span data-stu-id="af785-141">The C# language supports partial type declarations of classes and structures through the `partial` keyword.</span></span> <span data-ttu-id="af785-142">Visual Basic unterstützt partielle Typdeklarationen von Klassen und Strukturen mit dem Schlüsselwort `Partial`.</span><span class="sxs-lookup"><span data-stu-id="af785-142">Visual Basic supports partial type declarations of classes and structures with the `Partial` keyword.</span></span> <span data-ttu-id="af785-143">Nicht alle Code-Generatoren unterstützen partielle Typdeklarationen. Daher sollten Sie diese Unterstützung überprüfen, indem Sie die <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>-Methode mit dem Flag <xref:System.CodeDom.Compiler.GeneratorSupport.PartialTypes>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="af785-143">Not all code generators support partial type declarations, so you should test for this support by calling the <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A> method with the flag <xref:System.CodeDom.Compiler.GeneratorSupport.PartialTypes>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af785-144">Partielle Typdeklarationen werden für Klassen und Strukturen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="af785-144">Partial type declarations are supported for classes and structures.</span></span> <span data-ttu-id="af785-145">Wenn Sie eine partielle Typdeklaration für eine Enumeration oder Schnittstelle angeben, erzeugt der generierte Code Compilerfehler.</span><span class="sxs-lookup"><span data-stu-id="af785-145">If you specify a partial type declaration for an enumeration or interface, the generated code produces compiler errors.</span></span>  
  
 <span data-ttu-id="af785-146">Wenn Sie eine Klassen-oder Struktur Implementierung über mehrere Deklarationen hinweg bereitstellen, legen Sie die <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A>-Eigenschaft auf `true` für die erste Deklaration und alle ergänzenden Deklarationen fest.</span><span class="sxs-lookup"><span data-stu-id="af785-146">When supplying a class or structure implementation across multiple declarations, set the <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A> property to `true` for the initial declaration and all supplemental declarations.</span></span> <span data-ttu-id="af785-147">Die ursprüngliche Deklaration muss die Typsignatur vollständig angeben, einschließlich der Zugriffsmodifizierer, geerbte Typen und implementierter Schnittstellen</span><span class="sxs-lookup"><span data-stu-id="af785-147">The initial declaration must fully specify the type signature, including access modifiers, inherited types, and implemented interfaces.</span></span> <span data-ttu-id="af785-148">Die ergänzenden Deklarationen müssen die Typsignatur nicht erneut angeben.</span><span class="sxs-lookup"><span data-stu-id="af785-148">The supplementary declarations do not need to re-specify the type signature.</span></span> <span data-ttu-id="af785-149">Ein Compilerfehler ergibt sich in der Regel, wenn Sie die Typsignatur in einer ergänzenden Deklaration neu definieren.</span><span class="sxs-lookup"><span data-stu-id="af785-149">A compiler error typically results if you redefine the type signature in a supplementary declaration.</span></span>  
  
 <span data-ttu-id="af785-150">Visual Studio 2005 verwendet partielle Typen, um vom benutzergenerierten Code aus dem Designer Code zu trennen.</span><span class="sxs-lookup"><span data-stu-id="af785-150">Visual Studio 2005 uses partial types to separate user-generated code from designer code.</span></span> <span data-ttu-id="af785-151">In Visual Basic Windows-Anwendungsprojekten wird der Benutzercode in einer partiellen Klasse platziert, die nicht durch das `Partial`-Schlüsselwort qualifiziert ist. der vom Designer bereitgestellte Code wird in der partiellen Klasse mit dem `Partial`-Schlüsselwort angezeigt.</span><span class="sxs-lookup"><span data-stu-id="af785-151">In Visual Basic Windows Application projects, the user code is placed in a partial class that is not qualified by the `Partial` keyword; the designer-provided code appears in the partial class that has the `Partial` keyword.</span></span> <span data-ttu-id="af785-152">In C#werden der Benutzercode und der Designer Code in partiellen Klassen angezeigt, die durch das `partial`-Schlüsselwort identifiziert werden.</span><span class="sxs-lookup"><span data-stu-id="af785-152">In C#, both the user code and designer code appear in partial classes identified by the `partial` keyword.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="af785-153">Dieses Beispiel veranschaulicht die Verwendung eines <xref:System.CodeDom.CodeTypeDeclaration>, um eine Klassen Implementierung über mehrere Deklarationen hinweg bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="af785-153">This example demonstrates using a <xref:System.CodeDom.CodeTypeDeclaration> to supply a class implementation across multiple declarations.</span></span> <span data-ttu-id="af785-154">Im Beispiel wird die anfängliche Klassen Deklarations Anweisung erstellt und die <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A>-Eigenschaft auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="af785-154">The example builds the initial class declaration statement and sets the <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A> property to `true`.</span></span>  
  
 [!code-cpp[CodeDomPartialTypeExample#3](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomPartialTypeExample/CPP/source.cpp#3)]
 [!code-csharp[CodeDomPartialTypeExample#3](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomPartialTypeExample/CS/source.cs#3)]
 [!code-vb[CodeDomPartialTypeExample#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomPartialTypeExample/VB/source.vb#3)]  
  
 <span data-ttu-id="af785-155">Eine andere Methode im Beispiel erweitert die-Klassen Implementierung.</span><span class="sxs-lookup"><span data-stu-id="af785-155">A different method in the example extends the class implementation.</span></span> <span data-ttu-id="af785-156">Diese Methode erstellt eine neue typdeklarations Anweisung für die vorhandene Klasse und legt die <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A>-Eigenschaft auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="af785-156">This method builds a new type declaration statement for the existing class and sets the <xref:System.CodeDom.CodeTypeDeclaration.IsPartial%2A> property to `true`.</span></span> <span data-ttu-id="af785-157">Der Compiler kombiniert die beiden partiellen Typdeklarationen zusammen für die vollständige Klassen Implementierung.</span><span class="sxs-lookup"><span data-stu-id="af785-157">The compiler combines the two partial type declarations together for the complete class implementation.</span></span>  
  
 [!code-cpp[CodeDomPartialTypeExample#7](~/samples/snippets/cpp/VS_Snippets_CLR/CodeDomPartialTypeExample/CPP/source.cpp#7)]
 [!code-csharp[CodeDomPartialTypeExample#7](~/samples/snippets/csharp/VS_Snippets_CLR/CodeDomPartialTypeExample/CS/source.cs#7)]
 [!code-vb[CodeDomPartialTypeExample#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/CodeDomPartialTypeExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.CodeDom.Compiler.GeneratorSupport.PartialTypes" />
      </Docs>
    </Member>
    <Member MemberName="IsStruct">
      <MemberSignature Language="C#" Value="public bool IsStruct { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStruct" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclaration.IsStruct" />
      <MemberSignature Language="VB.NET" Value="Public Property IsStruct As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStruct { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsStruct : bool with get, set" Usage="System.CodeDom.CodeTypeDeclaration.IsStruct" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-158">Ruft einen Wert ab, der angibt, ob es sich bei dem Typ um einen Werttyp (Struktur) handelt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="af785-158">Gets or sets a value indicating whether the type is a value type (struct).</span></span></summary>
        <value><span data-ttu-id="af785-159"><see langword="true" />, wenn der Typ ein Werttyp ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="af785-159"><see langword="true" /> if the type is a value type; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeMemberCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeMemberCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclaration.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As CodeTypeMemberCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeMemberCollection ^ Members { System::CodeDom::CodeTypeMemberCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Members : System.CodeDom.CodeTypeMemberCollection" Usage="System.CodeDom.CodeTypeDeclaration.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeMemberCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-160">Ruft die Auflistung der Klassenmember für den dargestellten Typ ab.</span><span class="sxs-lookup"><span data-stu-id="af785-160">Gets the collection of class members for the represented type.</span></span></summary>
        <value><span data-ttu-id="af785-161">Ein <see cref="T:System.CodeDom.CodeTypeMemberCollection" />-Objekt, das die Klassenmember angibt.</span><span class="sxs-lookup"><span data-stu-id="af785-161">A <see cref="T:System.CodeDom.CodeTypeMemberCollection" /> object that indicates the class members.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.CodeDom.CodeTypeMemberCollection" />
      </Docs>
    </Member>
    <Member MemberName="PopulateBaseTypes">
      <MemberSignature Language="C#" Value="public event EventHandler PopulateBaseTypes;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PopulateBaseTypes" />
      <MemberSignature Language="DocId" Value="E:System.CodeDom.CodeTypeDeclaration.PopulateBaseTypes" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PopulateBaseTypes As EventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PopulateBaseTypes;" />
      <MemberSignature Language="F#" Value="member this.PopulateBaseTypes : EventHandler " Usage="member this.PopulateBaseTypes : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event PopulateBaseTypes As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-162">Erfolgt beim erstmaligen Zugriff auf die <see cref="P:System.CodeDom.CodeTypeDeclaration.BaseTypes" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="af785-162">Occurs when the <see cref="P:System.CodeDom.CodeTypeDeclaration.BaseTypes" /> collection is accessed for the first time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopulateMembers">
      <MemberSignature Language="C#" Value="public event EventHandler PopulateMembers;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PopulateMembers" />
      <MemberSignature Language="DocId" Value="E:System.CodeDom.CodeTypeDeclaration.PopulateMembers" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PopulateMembers As EventHandler " FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PopulateMembers;" />
      <MemberSignature Language="F#" Value="member this.PopulateMembers : EventHandler " Usage="member this.PopulateMembers : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event PopulateMembers As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-163">Erfolgt beim erstmaligen Zugriff auf die <see cref="P:System.CodeDom.CodeTypeDeclaration.Members" />-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="af785-163">Occurs when the <see cref="P:System.CodeDom.CodeTypeDeclaration.Members" /> collection is accessed for the first time.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeAttributes">
      <MemberSignature Language="C#" Value="public System.Reflection.TypeAttributes TypeAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.TypeAttributes TypeAttributes" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclaration.TypeAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeAttributes As TypeAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::TypeAttributes TypeAttributes { System::Reflection::TypeAttributes get(); void set(System::Reflection::TypeAttributes value); };" />
      <MemberSignature Language="F#" Value="member this.TypeAttributes : System.Reflection.TypeAttributes with get, set" Usage="System.CodeDom.CodeTypeDeclaration.TypeAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-164">Ruft die Attribute des Typs ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="af785-164">Gets or sets the attributes of the type.</span></span></summary>
        <value><span data-ttu-id="af785-165">Ein <see cref="T:System.Reflection.TypeAttributes" />-Objekt, das die Attribute des Typs angibt.</span><span class="sxs-lookup"><span data-stu-id="af785-165">A <see cref="T:System.Reflection.TypeAttributes" /> object that indicates the attributes of the type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af785-166">Die <xref:System.Reflection.TypeAttributes>-Eigenschaft enthält die gleichen Werte, die von <xref:System.Reflection> verwendet werden, wenn ein Typ zur Laufzeit untersucht wird.</span><span class="sxs-lookup"><span data-stu-id="af785-166">The <xref:System.Reflection.TypeAttributes> property contains the same type of values used by <xref:System.Reflection> when investigating a type at run time.</span></span> <span data-ttu-id="af785-167">Viele dieser Flags entsprechen nicht der typdeklarations Syntax für einige Sprachen.</span><span class="sxs-lookup"><span data-stu-id="af785-167">Many of these flags do not correspond to the type declaration syntax for some languages.</span></span> <span data-ttu-id="af785-168">Folglich sind nur die folgenden Flags für <xref:System.CodeDom.CodeTypeDeclaration> signifikant: <xref:System.Reflection.TypeAttributes.Class>, <xref:System.Reflection.TypeAttributes.Interface>, <xref:System.Reflection.TypeAttributes.Abstract>, <xref:System.Reflection.TypeAttributes.Sealed>, <xref:System.Reflection.TypeAttributes.Public>, <xref:System.Reflection.TypeAttributes.NotPublic>, <xref:System.Reflection.TypeAttributes.NestedPublic>und <xref:System.Reflection.TypeAttributes.NestedPrivate>.</span><span class="sxs-lookup"><span data-stu-id="af785-168">As a result, only the following flags are significant to <xref:System.CodeDom.CodeTypeDeclaration> : <xref:System.Reflection.TypeAttributes.Class>, <xref:System.Reflection.TypeAttributes.Interface>, <xref:System.Reflection.TypeAttributes.Abstract>, <xref:System.Reflection.TypeAttributes.Sealed>, <xref:System.Reflection.TypeAttributes.Public>, <xref:System.Reflection.TypeAttributes.NotPublic>, <xref:System.Reflection.TypeAttributes.NestedPublic>, and <xref:System.Reflection.TypeAttributes.NestedPrivate>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af785-169">Einige der Flags, wie z. b. <xref:System.Reflection.TypeAttributes.Abstract>, überschneiden sich mit der Bedeutung von Flags in der <xref:System.CodeDom.CodeTypeMember.Attributes%2A>-Eigenschaft von <xref:System.CodeDom.CodeTypeDeclaration>, die von <xref:System.CodeDom.CodeTypeMember>geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="af785-169">Some of the flags such as <xref:System.Reflection.TypeAttributes.Abstract> overlap with the meaning of flags in the <xref:System.CodeDom.CodeTypeMember.Attributes%2A> property of <xref:System.CodeDom.CodeTypeDeclaration> that is inherited from <xref:System.CodeDom.CodeTypeMember>.</span></span> <span data-ttu-id="af785-170">Die <xref:System.CodeDom.CodeTypeMember.Attributes%2A>-Eigenschaft ist ein Nebeneffekt der <xref:System.CodeDom.CodeTypeDeclaration> Klasse, die von <xref:System.CodeDom.CodeTypeMember> erbt, damit Klassen eingefügt werden können.</span><span class="sxs-lookup"><span data-stu-id="af785-170">The <xref:System.CodeDom.CodeTypeMember.Attributes%2A> property is a side effect of the <xref:System.CodeDom.CodeTypeDeclaration> class inheriting from <xref:System.CodeDom.CodeTypeMember> so that classes can be nested.</span></span> <span data-ttu-id="af785-171">Die Flags in der <xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A>-Eigenschaft sollten anstelle der Flags in der <xref:System.CodeDom.CodeTypeMember.Attributes%2A>-Eigenschaft verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="af785-171">The flags in the <xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A> property should be used instead of the flags in the <xref:System.CodeDom.CodeTypeMember.Attributes%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="af785-172">Das Muster für das Festlegen der Sichtbarkeits Kennzeichen (Flags, die die Wörter `Public` oder `Nested`) enthalten, besteht darin, alle Sichtbarkeits Kennzeichen mit dem <xref:System.Reflection.TypeAttributes.VisibilityMask> zu maskieren und dann das gewünschte Sichtbarkeits Kennzeichen festzulegen.</span><span class="sxs-lookup"><span data-stu-id="af785-172">The pattern for setting the visibility flags (flags containing the words `Public` or `Nested`) is to mask out all visibility flags using the <xref:System.Reflection.TypeAttributes.VisibilityMask> and then set the desired visibility flag.</span></span> <span data-ttu-id="af785-173">Beispielsweise ist die C# Code Anweisung, mit der die <xref:System.CodeDom.CodeTypeDeclaration> (mit dem Namen `cd`) als interne Klasse identifiziert werden, `cd.TypeAttributes = (cd.TypeAttributes & ~TypeAttributes.VisibilityMask) | TypeAttributes.NotPublic;`.</span><span class="sxs-lookup"><span data-stu-id="af785-173">For example, the C# code statement to identify the <xref:System.CodeDom.CodeTypeDeclaration> (named `cd`) as an internal class is `cd.TypeAttributes = (cd.TypeAttributes & ~TypeAttributes.VisibilityMask) | TypeAttributes.NotPublic;`.</span></span>  <span data-ttu-id="af785-174">Der Code zum Festlegen desselben Werts in Visual Basic ist `cd.TypeAttributes = (cd.TypeAttributes And (TypeAttributes.VisibilityMask Xor -1)) Or TypeAttributes.NotPublic`.</span><span class="sxs-lookup"><span data-stu-id="af785-174">The code to set the same value in Visual Basic is `cd.TypeAttributes = (cd.TypeAttributes And (TypeAttributes.VisibilityMask Xor -1)) Or TypeAttributes.NotPublic`.</span></span> <span data-ttu-id="af785-175">Wenn Sie die <xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A>-Eigenschaft direkt auf ein Sichtbarkeits Flag (`cd.TypeAttributes = TypeAttributes.NotPublic;`) festlegen, werden alle anderen Flags, die festgelegt werden können, gelöscht.</span><span class="sxs-lookup"><span data-stu-id="af785-175">Setting the <xref:System.CodeDom.CodeTypeDeclaration.TypeAttributes%2A> property directly to a visibility flag (`cd.TypeAttributes = TypeAttributes.NotPublic;`) erases all other flags that might be set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.TypeAttributes" />
      </Docs>
    </Member>
    <Member MemberName="TypeParameters">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeParameterCollection TypeParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeParameterCollection TypeParameters" />
      <MemberSignature Language="DocId" Value="P:System.CodeDom.CodeTypeDeclaration.TypeParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeParameters As CodeTypeParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeParameterCollection ^ TypeParameters { System::CodeDom::CodeTypeParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TypeParameters : System.CodeDom.CodeTypeParameterCollection" Usage="System.CodeDom.CodeTypeDeclaration.TypeParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af785-176">Ruft die Typparameter für die Typdeklaration ab.</span><span class="sxs-lookup"><span data-stu-id="af785-176">Gets the type parameters for the type declaration.</span></span></summary>
        <value><span data-ttu-id="af785-177">Eine <see cref="T:System.CodeDom.CodeTypeParameterCollection" />-Klasse, die die Typparameter für die Typdeklaration enthält.</span><span class="sxs-lookup"><span data-stu-id="af785-177">A <see cref="T:System.CodeDom.CodeTypeParameterCollection" /> that contains the type parameters for the type declaration.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af785-178">Eine generische Typdeklaration enthält einen oder mehrere nicht angegebene Typen, die als Typparameter bezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="af785-178">A generic type declaration contains one or more unspecified types known as type parameters.</span></span> <span data-ttu-id="af785-179">Ein Typparameter Name steht für den Typ im Text der generischen Deklaration.</span><span class="sxs-lookup"><span data-stu-id="af785-179">A type parameter name stands for the type within the body of the generic declaration.</span></span> <span data-ttu-id="af785-180">Die generische Deklaration für die <xref:System.Collections.Generic.List%601>-Klasse enthält z. b. den Typparameter `T`.</span><span class="sxs-lookup"><span data-stu-id="af785-180">For example, the generic declaration for the <xref:System.Collections.Generic.List%601> class contains the type parameter `T`.</span></span>  
  
 <span data-ttu-id="af785-181">Weitere Informationen zu Generika finden Sie unter [Generika in der .NET Framework-Klassenbibliothek](~/docs/csharp/programming-guide/generics/generics-in-the-net-framework-class-library.md).</span><span class="sxs-lookup"><span data-stu-id="af785-181">For more information on generics, see [Generics in the .NET Framework Class Library](~/docs/csharp/programming-guide/generics/generics-in-the-net-framework-class-library.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.CodeTypeParameterCollection" />
        <altmember cref="T:System.CodeDom.CodeTypeParameter" />
      </Docs>
    </Member>
  </Members>
</Type>
