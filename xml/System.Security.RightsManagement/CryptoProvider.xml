<Type Name="CryptoProvider" FullName="System.Security.RightsManagement.CryptoProvider">
  <TypeSignature Language="C#" Value="public class CryptoProvider : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CryptoProvider extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.CryptoProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CryptoProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CryptoProvider : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c4bd4-101">Stellt DRM-Dienste (Digital Rights Management) zum Verschlüsseln und Entschlüsseln von geschütztem Inhalt bereit.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-101">Provides digital rights management services for encrypting and decrypting protected content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bd4-102"><xref:System.Security.RightsManagement.CryptoProvider> wird als Ergebnis des erstellt die <xref:System.Security.RightsManagement.UseLicense.Bind%2A> Methode, wenn die Zugriffsrechte einer Bindung verwaltet <xref:System.Security.RightsManagement.UseLicense> zu einem <xref:System.Security.RightsManagement.SecureEnvironment>.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-102"><xref:System.Security.RightsManagement.CryptoProvider> is created as a result of the <xref:System.Security.RightsManagement.UseLicense.Bind%2A> method when binding a rights managed <xref:System.Security.RightsManagement.UseLicense> to a <xref:System.Security.RightsManagement.SecureEnvironment>.</span></span>  
  
 <span data-ttu-id="c4bd4-103">Wie bei anderen <xref:System.Security.RightsManagement> Typen <xref:System.Security.RightsManagement.CryptoProvider> kann nur in Anwendungen mit voller Vertrauenswürdigkeit verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-103">As with other <xref:System.Security.RightsManagement> types, <xref:System.Security.RightsManagement.CryptoProvider> is only usable in full trust applications.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bd4-104">Das folgende Beispiel zeigt, wie Sie die <xref:System.Security.RightsManagement.CryptoProvider> -Klasse zum Erstellen einer <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-104">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider> class to create an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.RightsManagement.UseLicense" />
    <altmember cref="T:System.Security.RightsManagement.SecureEnvironment" />
  </Docs>
  <Members>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public int BlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4bd4-105">Ruft die Verschlüsselungsblockgröße in Bytes ab.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-105">Gets the cipher block size, in bytes.</span></span></summary>
        <value><span data-ttu-id="c4bd4-106">Die Verschlüsselungsblockgröße in Bytes.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-106">The cipher block size, in bytes.</span></span>  <span data-ttu-id="c4bd4-107">Die Standardblockgröße für Advanced Encryption Standard (AES) ist 8.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-107">The default block size for Advanced Encryption Standard (AES) is 8.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bd4-108">Die `clearText` und `cipherText` Puffer zu übergeben, um <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> und <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> muss n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> Byte lang, "n" ist eine ganze Zahl größer als oder gleich 1.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-108">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="c4bd4-109">Wenn <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> ist `false`, Puffer, der an übergebene <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> muss die gleiche Länge wie der Puffer, die an <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-109">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `false`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="c4bd4-110">Wenn <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> ist `true`, Puffer die an <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> kann eine andere Länge als die Puffer übergeben <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (alle Puffergrößen muss noch immer ein Vielfaches von <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> Bytes lang).</span><span class="sxs-lookup"><span data-stu-id="c4bd4-110">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is `true`, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 <span data-ttu-id="c4bd4-111">Ein <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> von 1 gibt an, dass das Verschlüsselungsverfahren ein Streamverschlüsselung; ein <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> von 2 oder höher gibt Sie an einer Blockchiffre.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-111">A <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 1 indicates that the cipher is a stream cipher; a <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> of 2 or greater indicates a block cipher.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bd4-112">Das folgende Beispiel zeigt, wie Sie die <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> Eigenschaft beim Konvertieren von Klartextdaten in verschlüsselte Daten.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-112">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property in converting clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BoundGrants">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt; BoundGrants { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.RightsManagement.ContentGrant&gt; BoundGrants" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.BoundGrants" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundGrants As ReadOnlyCollection(Of ContentGrant)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ BoundGrants { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::RightsManagement::ContentGrant ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.RightsManagement.ContentGrant&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4bd4-113">Ruft eine Auflistung von Rechten ab, die erfolgreich überprüft und dem Benutzer gewährt wurden.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-113">Gets a collection listing the rights that passed verification and that are granted to the user.</span></span></summary>
        <value><span data-ttu-id="c4bd4-114">Eine Auflistung der Rechte, die erfolgreich überprüft und dem Benutzer gewährt wurden.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-114">A collection enumerating the rights that passed verification and that are granted to the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bd4-115">Das folgende Beispiel zeigt, wie Sie die <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> Eigenschaft Abrufen einer Liste Rechte gewährt, die über eine <xref:System.Security.RightsManagement.UseLicense>.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-115">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.BoundGrants%2A> property to obtain a list rights granted through a <xref:System.Security.RightsManagement.UseLicense>.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanDecrypt">
      <MemberSignature Language="C#" Value="public bool CanDecrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDecrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanDecrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanDecrypt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4bd4-116">Ruft einen Wert ab, der angibt, ob der Benutzer über Entschlüsselungsrechte verfügt.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-116">Gets a value that indicates whether the user has rights to decrypt.</span></span></summary>
        <value><span data-ttu-id="c4bd4-117">**"true"** Wenn die <see cref="T:System.Security.RightsManagement.UseLicense" /> gewährt die Benutzerrechte zum Entschlüsseln; andernfalls **"false"**.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-117">**true** if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to decrypt; otherwise, **false**.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bd4-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Gibt **"true"** Wenn die <xref:System.Security.RightsManagement.UseLicense> an diese gebunden <xref:System.Security.RightsManagement.CryptoProvider> gewährt dem Benutzer Lesezugriffsrechte wie anzeigen, bearbeiten, drucken oder Besitzer.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-118"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user read access rights such as View, Edit, Print, or Owner.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bd4-119">Das folgende Beispiel zeigt, wie Sie die <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Eigenschaft, um zu bestimmen, ob die Entschlüsselung zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-119">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> property to determine if decryption is allowed.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewuselicense)]
 [!code-vb[RightsManagedContentViewer#RmContViewUseLicense](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewuselicense)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanEncrypt">
      <MemberSignature Language="C#" Value="public bool CanEncrypt { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanEncrypt" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanEncrypt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanEncrypt { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4bd4-120">Ruft einen Wert ab, der angibt, ob der Benutzer über Verschlüsselungsrechte verfügt.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-120">Gets a value that indicates whether the user has rights to encrypt.</span></span></summary>
        <value><span data-ttu-id="c4bd4-121">**"true"** Wenn die <see cref="T:System.Security.RightsManagement.UseLicense" /> gewährt die Benutzerrechte zum Verschlüsseln; andernfalls **"false"**.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-121">**true** if the <see cref="T:System.Security.RightsManagement.UseLicense" /> grants the user rights to encrypt; otherwise, **false**.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bd4-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> Gibt **"true"** Wenn die <xref:System.Security.RightsManagement.UseLicense> an diese gebunden <xref:System.Security.RightsManagement.CryptoProvider> erhält der Benutzer Schreibzugriff auf die Zugriffsrechte wie bearbeiten oder Besitzer.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-122"><xref:System.Security.RightsManagement.CryptoProvider.CanDecrypt%2A> returns **true** if the <xref:System.Security.RightsManagement.UseLicense> bound to this <xref:System.Security.RightsManagement.CryptoProvider> grants the user write access rights such as Edit or Owner.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
    <Member MemberName="CanMergeBlocks">
      <MemberSignature Language="C#" Value="public bool CanMergeBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMergeBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMergeBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMergeBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4bd4-123">Ruft einen Wert ab, der angibt, ob <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> und <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> Puffer mit unterschiedlichen Blockgrößen akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-123">Gets a value that indicates whether <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> can accept buffers that are different block sizes in length.</span></span></summary>
        <value><span data-ttu-id="c4bd4-124">**"true"** wenn übergebene Puffer zu <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> kann eine andere Länge aus der an übergebene Puffer <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />ist, andernfalls **"false"** , wenn der Puffer, die an <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> und <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> muss die genaue dieselbe Länge.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-124">**true** if the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> can be a different length from the buffer passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />; otherwise, **false** if the buffers passed to <see cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" /> and <see cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" /> must be the exact same length.</span></span>  <span data-ttu-id="c4bd4-125">Die Standardeinstellung für AES ist **"true"**.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-125">For AES the default is **true**.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bd4-126">Die `clearText` und `cipherText` Puffer zu übergeben, um <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> und <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> muss n \*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> Byte lang, "n" ist eine ganze Zahl größer als oder gleich 1.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-126">The `clearText` and `cipherText` buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> and <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> must be n\*<xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length, where 'n' is an integer greater than or equal to 1.</span></span>  
  
 <span data-ttu-id="c4bd4-127">Wenn <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> ist **"false"**, Puffer, der an übergebene <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> muss die gleiche Länge wie der Puffer, die an <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-127">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **false**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> must be the same length as the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A>.</span></span>  
  
 <span data-ttu-id="c4bd4-128">Wenn <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> ist **"true"**, Puffer die an <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> kann eine andere Länge als die Puffer übergeben <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (alle Puffergrößen muss noch immer ein Vielfaches von <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> Bytes lang).</span><span class="sxs-lookup"><span data-stu-id="c4bd4-128">If <xref:System.Security.RightsManagement.CryptoProvider.CanMergeBlocks%2A> is **true**, buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> can be a different length from the buffers passed to <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> (all buffer sizes must still always be a multiple of <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> bytes in length).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] cryptoText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] cryptoText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Decrypt (cryptoText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Decrypt(cli::array &lt;System::Byte&gt; ^ cryptoText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cryptoText"><span data-ttu-id="c4bd4-129">Der verschlüsselte Text, der entschlüsselt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-129">The cipher text to decrypt.</span></span></param>
        <summary><span data-ttu-id="c4bd4-130">Entschlüsselt verschlüsselten Text.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-130">Decrypts cipher text to clear text.</span></span></summary>
        <returns><span data-ttu-id="c4bd4-131">Der entschlüsselte Klartext von <paramref name="cryptoText" />.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-131">The decrypted clear text of <paramref name="cryptoText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c4bd4-132">Das folgende Beispiel zeigt, wie Sie die <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> Methode, um verschlüsselte Daten auf unverschlüsselten Daten konvertieren.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-132">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Decrypt%2A> method to convert encrypted data to unencrypted data.</span></span>  
  
 [!code-csharp[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentViewer/CSharp/Window1.xaml.cs#rmcontviewdecrypt)]
 [!code-vb[RightsManagedContentViewer#RmContViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentViewer/visualbasic/window1.xaml.vb#rmcontviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4bd4-133"><paramref name="cipherText" /> ist NULL.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-133"><paramref name="cipherText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="c4bd4-134">Es wurden keine Entschlüsselungsrechte gewährt.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-134">Decryption right not granted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanDecrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c4bd4-135">Gibt die von der <see cref="T:System.Security.RightsManagement.CryptoProvider" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-135">Releases the resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4bd4-136">Gibt alle vom <see cref="T:System.Security.RightsManagement.CryptoProvider" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-136">Releases all resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bd4-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> führt <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**"true"**).</span><span class="sxs-lookup"><span data-stu-id="c4bd4-137"><xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**true**).</span></span>  
  
 <span data-ttu-id="c4bd4-138">Rufen Sie <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> auf, wenn Sie <xref:System.Security.RightsManagement.CryptoProvider> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-138">Call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> when you are finished using the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="c4bd4-139">Die <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>-Methode bewirkt, dass <xref:System.Security.RightsManagement.CryptoProvider> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-139">The <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> method leaves the <xref:System.Security.RightsManagement.CryptoProvider> in an unusable state.</span></span> <span data-ttu-id="c4bd4-140">Nach dem Aufruf <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, müssen Sie alle Verweise auf Freigeben der <xref:System.Security.RightsManagement.CryptoProvider> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <xref:System.Security.RightsManagement.CryptoProvider> belegt wurde.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-140">After calling <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>, you must release all references to the <xref:System.Security.RightsManagement.CryptoProvider> so the garbage collector can reclaim the memory that the <xref:System.Security.RightsManagement.CryptoProvider> was occupying.</span></span> <span data-ttu-id="c4bd4-141">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="c4bd4-141">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c4bd4-142">Rufen Sie immer <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Security.RightsManagement.CryptoProvider> freigeben.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-142">Always call <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A> before you release your last reference to the <xref:System.Security.RightsManagement.CryptoProvider>.</span></span> <span data-ttu-id="c4bd4-143">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Security.RightsManagement.CryptoProvider>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-143">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.RightsManagement.CryptoProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="c4bd4-144"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-144"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="c4bd4-145">Gibt die von <see cref="T:System.Security.RightsManagement.CryptoProvider" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-145">Releases the unmanaged resources used by the <see cref="T:System.Security.RightsManagement.CryptoProvider" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bd4-146">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-146">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="c4bd4-147">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-147">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="c4bd4-148"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-148"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="c4bd4-149">Wenn die `disposing` Parameter ist "true", gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte, die von diesem <xref:System.Security.RightsManagement.CryptoProvider> Verweise.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-149">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Security.RightsManagement.CryptoProvider> references.</span></span> <span data-ttu-id="c4bd4-150">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-150">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="c4bd4-151"><see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-151"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="c4bd4-152">Zum Überschreiben <see langword="Dispose(Boolean)" /> Achten Sie darauf, dass Sie nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-152">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="c4bd4-153">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="c4bd4-153">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="c4bd4-154">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="c4bd4-154">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] clearText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] clearText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Encrypt (clearText As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encrypt(cli::array &lt;System::Byte&gt; ^ clearText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clearText" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="clearText"><span data-ttu-id="c4bd4-155">Der zu verschlüsselnde Klartextinhalt.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-155">The clear text content to encrypt.</span></span></param>
        <summary><span data-ttu-id="c4bd4-156">Verschlüsselt Klartext in Verschlüsselungstext.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-156">Encrypts clear text to cipher text.</span></span></summary>
        <returns><span data-ttu-id="c4bd4-157">Der verschlüsselte Verschlüsselungstext des angegebenen <paramref name="clearText" />.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-157">Encrypted cipher text of the given <paramref name="clearText" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bd4-158">Die Bytelänge der `clearText` Puffer muss ein Vielfaches von das Verschlüsselungsverfahren <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-158">The byte length of the `clearText` buffer should be a multiple of the cipher <xref:System.Security.RightsManagement.CryptoProvider.BlockSize%2A> property.</span></span>  
  
 <span data-ttu-id="c4bd4-159">Das digital Rights Management-System verwendet Blockchiffre AES.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-159">The digital rights management system uses AES block cipher.</span></span>  <span data-ttu-id="c4bd4-160">Mit AES werden die Blöcke, dass zwei Blöcke identische Klartext identische verschlüsseltem Text Ergebnissen unabhängig verschlüsselt.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-160">With AES, blocks are encrypted independently such that two blocks of identical clear text produce identical cipher text results.</span></span>  <span data-ttu-id="c4bd4-161">Um mögliche Entschlüsselung Bedrohungen von unabhängigen Block-Verschlüsselung zu minimieren, sollten Anwendungen Methoden zum Ändern von Inhalten, z. B. Komprimierung, um zu vermeiden, Blocks identisch Klartext verschlüsselt nutzen.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-161">To minimize potential decryption threats from independent block encryption, applications should employ methods to modify content, such as compression, to avoid encrypting identical clear text blocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4bd4-162">Das folgende Beispiel zeigt, wie Sie die <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> Methode, um die Klartext-Daten in verschlüsselte Daten zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-162">The following example shows how to use the <xref:System.Security.RightsManagement.CryptoProvider.Encrypt%2A> method to convert clear-text data to encrypted-text data.</span></span>  
  
 [!code-csharp[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedContentPublish/CSharp/Window1.xaml.cs#rmcontpubencrypt)]
 [!code-vb[RightsManagedContentPublish#RmContPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedContentPublish/visualbasic/window1.xaml.vb#rmcontpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c4bd4-163"><paramref name="clearText" /> ist NULL.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-163"><paramref name="clearText" /> is null.</span></span></exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException"><span data-ttu-id="c4bd4-164">Verschlüsselung ist nicht zulässig.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-164">Encryption is not permitted.</span></span></exception>
        <altmember cref="P:System.Security.RightsManagement.CryptoProvider.CanEncrypt" />
        <altmember cref="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CryptoProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.CryptoProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CryptoProvider ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c4bd4-165">Gibt Ressourcen frei und führt eine interne Bereinigung durch, bevor die Instanz durch die Garbage Collection wieder freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-165">Frees resources and performs internal cleanup before the instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4bd4-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> führt <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**"false"**).</span><span class="sxs-lookup"><span data-stu-id="c4bd4-166"><xref:System.Security.RightsManagement.CryptoProvider.Finalize%2A> performs <xref:System.Security.RightsManagement.CryptoProvider.Dispose%2A>(**false**).</span></span>  
  
 <span data-ttu-id="c4bd4-167">Diese Methode überschreibt <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-167">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="c4bd4-168">Diese Methode sollte nicht von Anwendungscode aufgerufen werden. ein Objekt `Finalize` Methode wird automatisch während der Garbagecollection aufgerufen, durch einen Aufruf von seiner Finalisierung verfolgt, durch den Garbage Collector deaktiviert wurde die <xref:System.GC.SuppressFinalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="c4bd4-168">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 <span data-ttu-id="c4bd4-169">Weitere Informationen finden Sie unter [Finalize-Methoden und Destruktoren](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md), und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="c4bd4-169">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>