<Type Name="PublishLicense" FullName="System.Security.RightsManagement.PublishLicense">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ed80a727610000eb6e91e4b54487d4b2fc65f0e2" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48621743" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PublishLicense" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PublishLicense extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.RightsManagement.PublishLicense" />
  <TypeSignature Language="VB.NET" Value="Public Class PublishLicense" />
  <TypeSignature Language="C++ CLI" Value="public ref class PublishLicense" />
  <TypeSignature Language="F#" Value="type PublishLicense = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine durch Rights Management geschützte signierte Lizenz für Veröffentlichungen dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.RightsManagement.PublishLicense> definiert die Sicherheitsdaten Rechte, Benutzer und andere sicherheitsrelevante Informationen.  Die Lizenz wird definiert, wie ein bestimmten Benutzer auf einem bestimmten Computer angegebenen rechteverwaltung geschützte Inhalte verwenden kann.  
  
 Der Veröffentlichungsprozess beginnt mit der Autor des Dokuments, Rechteinformationen in definiert eine <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Als Nächstes erstellt der Autor eines signierten <xref:System.Security.RightsManagement.PublishLicense> durch Aufrufen der <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> Methode der <xref:System.Security.RightsManagement.UnsignedPublishLicense>.  Die serialisierte Form der signierten <xref:System.Security.RightsManagement.PublishLicense> kann dann von Endbenutzern, die sie verwenden können, um das Abrufen bereitgestellt werden eine <xref:System.Security.RightsManagement.UseLicense> durch Aufrufen der <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> Methode der <xref:System.Security.RightsManagement.PublishLicense>.  Das zurückgegebene <xref:System.Security.RightsManagement.UseLicense> dann kann die Clientanwendung So führen Sie die Rechte aus, die dem Benutzer gewährt wurden.  
  
 Wie bei anderen <xref:System.Security.RightsManagement> Typen <xref:System.Security.RightsManagement.PublishLicense> ist nur in Anwendungen mit voller Vertrauenswürdigkeit verwendet werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie initialisieren eine <xref:System.Security.RightsManagement.PublishLicense> mithilfe der <xref:System.Security.RightsManagement.UnsignedPublishLicense.Sign%2A> Methode.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PublishLicense (string signedPublishLicense);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string signedPublishLicense) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signedPublishLicense As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PublishLicense(System::String ^ signedPublishLicense);" />
      <MemberSignature Language="F#" Value="new System.Security.RightsManagement.PublishLicense : string -&gt; System.Security.RightsManagement.PublishLicense" Usage="new System.Security.RightsManagement.PublishLicense signedPublishLicense" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signedPublishLicense" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="signedPublishLicense">Eine signierte und serialisierte Lizenz für Veröffentlichungen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Security.RightsManagement.PublishLicense" />-Klasse von der serialisierten und signierten <see cref="T:System.Security.RightsManagement.PublishLicense" />, die angegeben wurde.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signedPublishLicense" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Die Lizenz ist ungültig.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicense (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicense(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicense(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicense : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicense secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Die sichere Umgebung für die Lizenzaktivierung und Bindung.</param>
        <summary>Versucht, in einer angegebenen <see cref="T:System.Security.RightsManagement.UseLicense" /> eine <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> für einen Benutzer oder eine Benutzergruppe abzurufen.</summary>
        <returns>Die <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen Benutzer oder eine Benutzergruppe in der angegebenen <paramref name="secureEnvironment" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Fehler bei der Authentifizierung.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="AcquireUseLicenseNoUI">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI (System.Security.RightsManagement.SecureEnvironment secureEnvironment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UseLicense AcquireUseLicenseNoUI(class System.Security.RightsManagement.SecureEnvironment secureEnvironment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UseLicense ^ AcquireUseLicenseNoUI(System::Security::RightsManagement::SecureEnvironment ^ secureEnvironment);" />
      <MemberSignature Language="F#" Value="member this.AcquireUseLicenseNoUI : System.Security.RightsManagement.SecureEnvironment -&gt; System.Security.RightsManagement.UseLicense" Usage="publishLicense.AcquireUseLicenseNoUI secureEnvironment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UseLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="secureEnvironment" Type="System.Security.RightsManagement.SecureEnvironment" />
      </Parameters>
      <Docs>
        <param name="secureEnvironment">Die sichere Umgebung für die Lizenzaktivierung und Bindung.</param>
        <summary>Versucht, in einer angegebenen <see cref="T:System.Security.RightsManagement.UseLicense" /> eine <see cref="T:System.Security.RightsManagement.SecureEnvironment" /> für einen Benutzer oder eine Benutzergruppe abzurufen.</summary>
        <returns>Die <see cref="T:System.Security.RightsManagement.UseLicense" /> für einen Benutzer oder eine Benutzergruppe in der angegebenen <paramref name="secureEnvironment" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> Methode unterdrückt die Windows-Authentifizierung Dialogfeld "Netzwerk". Wenn die lizenzanforderung abgelehnt wird, da der Benutzer keine Berechtigung, <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI%2A> verhindert, dass die Netzwerk-Authentifizierungsdialogfeld angezeigt. Verwenden Sie automatische Abruf beim Versuch zum Abrufen von Lizenzen in einem Hintergrundtask oder in einer nicht-Benutzeroberfläche, die möglicherweise verwirrend Dialogfelder angezeigt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="secureEnvironment" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Security.RightsManagement.RightsManagementException">Fehler bei der Authentifizierung.</exception>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      </Docs>
    </Member>
    <Member MemberName="ContentId">
      <MemberSignature Language="C#" Value="public Guid ContentId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid ContentId" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentId As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid ContentId { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentId : Guid" Usage="System.Security.RightsManagement.PublishLicense.ContentId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den vom Herausgeber erstellten Inhaltsbezeichner ab.</summary>
        <value>Der vom Herausgeber erstellte Inhaltsbezeichner.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Herausgeber erstellen eine <xref:System.Security.RightsManagement.UnsignedPublishLicense.ContentId%2A> die geschützte Inhalte zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecryptUnsignedPublishLicense">
      <MemberSignature Language="C#" Value="public System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense (System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.RightsManagement.UnsignedPublishLicense DecryptUnsignedPublishLicense(class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::RightsManagement::UnsignedPublishLicense ^ DecryptUnsignedPublishLicense(System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="member this.DecryptUnsignedPublishLicense : System.Security.RightsManagement.CryptoProvider -&gt; System.Security.RightsManagement.UnsignedPublishLicense" Usage="publishLicense.DecryptUnsignedPublishLicense cryptoProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.RightsManagement.UnsignedPublishLicense</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="cryptoProvider">Der durch die Rechteverwaltung geschützte Dienst, mit dem die Lizenz entschlüsselt wird.</param>
        <summary>Gibt eine entschlüsselte <see cref="T:System.Security.RightsManagement.UnsignedPublishLicense" />-Version dieser signierten <see cref="T:System.Security.RightsManagement.PublishLicense" /> zurück.</summary>
        <returns>Eine entschlüsselte unsignierte Version dieser Lizenz.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense%2A> Methode ermöglicht die Besitzers der Veröffentlichungslizenz und einen Benutzer erteilt wurden <xref:System.Security.RightsManagement.ContentRight.ViewRightsData> um die ursprünglichen Daten zu extrahieren, die verschlüsselt, wenn die <xref:System.Security.RightsManagement.PublishLicense> erstellt wurde.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="cryptoProvider" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoName">
      <MemberSignature Language="C#" Value="public string ReferralInfoName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReferralInfoName" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ReferralInfoName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoName : string" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Kontaktnamen für den Autor oder den Herausgeber des Inhalts ab.</summary>
        <value>Der Kontaktname für den Autor oder den Herausgeber des Inhalts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebene Zeichenfolge den <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoName%2A> Eigenschaft ist nicht verschlüsselt und kann zugegriffen werden, selbst wenn der Benutzer noch keine <xref:System.Security.RightsManagement.UseLicense>.  Die zurückgegebene Zeichenfolge ermöglicht Benutzern, den Herausgeber zum Anfordern einer <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      </Docs>
    </Member>
    <Member MemberName="ReferralInfoUri">
      <MemberSignature Language="C#" Value="public Uri ReferralInfoUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ReferralInfoUri" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferralInfoUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ReferralInfoUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferralInfoUri : Uri" Usage="System.Security.RightsManagement.PublishLicense.ReferralInfoUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]-Kontakt für den Autor oder den Herausgeber des Inhalts ab.</summary>
        <value>Der Kontakt [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] für den Autor oder den Herausgeber des Inhalts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebene Zeichenfolge den <xref:System.Security.RightsManagement.PublishLicense.ReferralInfoUri%2A> Eigenschaft ist nicht verschlüsselt und kann zugegriffen werden, selbst wenn der Benutzer noch keine <xref:System.Security.RightsManagement.UseLicense>.  Die zurückgegebene Zeichenfolge ermöglicht Benutzern, den Herausgeber zum Anfordern einer <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.RightsManagement.PublishLicense.ReferralInfoName" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.RightsManagement.PublishLicense.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="publishLicense.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die serialisierte [!INCLUDE[TLA2#tla_xrml](~/includes/tla2sharptla-xrml-md.md)]-Zeichenfolge zurück, mit der diese Lizenz erstellt wurde.</summary>
        <returns>Die serialisierte [!INCLUDE[TLA#tla_xrml](~/includes/tlasharptla-xrml-md.md)]-Zeichenfolge, mit der diese Lizenz erstellt wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLicenseAcquisitionUrl">
      <MemberSignature Language="C#" Value="public Uri UseLicenseAcquisitionUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UseLicenseAcquisitionUrl" />
      <MemberSignature Language="DocId" Value="P:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UseLicenseAcquisitionUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UseLicenseAcquisitionUrl { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UseLicenseAcquisitionUrl : Uri" Usage="System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] ab, der zum Abrufen einer <see cref="T:System.Security.RightsManagement.UseLicense" /> verwendet werden soll.</summary>
        <value>Der [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], der zum Abrufen einer <see cref="T:System.Security.RightsManagement.UseLicense" /> verwendet werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Security.RightsManagement.PublishLicense.UseLicenseAcquisitionUrl%2A> Eigenschaft wird verwendet, indem die <xref:System.Security.RightsManagement.PublishLicense.AcquireUseLicense%2A> Methode, wenn ein Benutzer erhält eine <xref:System.Security.RightsManagement.UseLicense>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)" />
      </Docs>
    </Member>
  </Members>
</Type>