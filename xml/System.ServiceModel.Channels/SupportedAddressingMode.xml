<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e96bbd9b4b430691aed6a16a4a3b6015bec77b8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="0e218-101">Gibt an, ob ein Dienst das Senden von Antworten nur an anonyme Adressen, nur an nicht anonyme Adressen oder beides unterstützt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0e218-101">Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0e218-102">Diese Enumeration wird zur Angabe der Funktionen eines Servers verwendet, die wiederum als Anforderungen für die Clients gelten.</span><span class="sxs-lookup"><span data-stu-id="0e218-102">This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</span></span>  
  
 [!INCLUDE[indigo1](~/includes/indigo1-md.md)]<span data-ttu-id="0e218-103"> hat eine Vielzahl von Adressierungs-Steuerelementen, um anzugeben, wohin Nachrichten gesendet werden sollten.</span><span class="sxs-lookup"><span data-stu-id="0e218-103"> has a variety of addressing controls for specifying where messages should be sent.</span></span> <span data-ttu-id="0e218-104">Beispielsweise gibt es eine logische <xref:System.ServiceModel.Channels.MessageHeaders.To%2A>-Adresse für das Nachrichtenziel, die physische Adresse ("Via"), die vom Transport verwendet und von einem Dienst überwacht wird, sowie die <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A>-Adresse des Endpunkts, der die Adresse des Clientendpunkts angibt.</span><span class="sxs-lookup"><span data-stu-id="0e218-104">For example, there is the logical <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> address of the endpoint that provides the address of the client endpoint.</span></span>  
  
 <span data-ttu-id="0e218-105">Im einfachsten Fall, wenn zwei Teilnehmer Nachrichten nur untereinander austauschen, ist es nicht notwendig, diese Adressen separat anzugeben.</span><span class="sxs-lookup"><span data-stu-id="0e218-105">In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</span></span> <span data-ttu-id="0e218-106">Da der Austausch jedoch andere Nachrichtenziele umfassen kann, müssen Sie bestimmen können, wann Adressen explizit bereitgestellt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="0e218-106">But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</span></span> <span data-ttu-id="0e218-107">Selbst zwischen zwei Teilnehmern ist dies manchmal erforderlich, z. B. bei dualem HTTP, wenn der Server eigene HTTP-Anforderungen erstellen muss.</span><span class="sxs-lookup"><span data-stu-id="0e218-107">Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</span></span> <span data-ttu-id="0e218-108">Die folgenden Arten von Beziehungen werden von der <xref:System.ServiceModel.Channels.SupportedAddressingMode>-Enumeration definiert, um diese Nachrichtenmuster zu erfassen:</span><span class="sxs-lookup"><span data-stu-id="0e218-108">The following kinds of relationships are defined by the <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeration to capture these messaging patterns:</span></span>  
  
-   <span data-ttu-id="0e218-109">Anonyme Adressen sind die grundlegendste Form der Adressierung.</span><span class="sxs-lookup"><span data-stu-id="0e218-109">Anonymous addresses are the most basic form of addressing.</span></span> <span data-ttu-id="0e218-110">Anonyme Adressierung wird verwendet, wenn es einen Standardpfad für eine Antwort gibt.</span><span class="sxs-lookup"><span data-stu-id="0e218-110">Anonymous addressing is used when there is a default path for a response.</span></span> <span data-ttu-id="0e218-111">TCP ist ein bidirektionaler Kommunikationstransport, und die Antwort auf eine TCP-Nachricht kann an die andere Seite des Sockets gesendet werden, die die Originalnachricht gesendet hat.</span><span class="sxs-lookup"><span data-stu-id="0e218-111">TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</span></span> <span data-ttu-id="0e218-112">Auf ähnliche Weise sendet das Anforderungs-Antwort-Modell von HTTP Antworten durch den HTTP-Antwortkanal.</span><span class="sxs-lookup"><span data-stu-id="0e218-112">Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</span></span> <span data-ttu-id="0e218-113">Keine dieser Antworten erfordert die Angabe, wohin die Antwortnachrichten gehen.</span><span class="sxs-lookup"><span data-stu-id="0e218-113">Neither of these responses requires specifying where the response messages are going.</span></span> <span data-ttu-id="0e218-114">Wenn ein Server anonyme Antworten vom Client erforderlich ist, wird der anonyme Wert der Enumeration verwendet.</span><span class="sxs-lookup"><span data-stu-id="0e218-114">When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</span></span> <span data-ttu-id="0e218-115">Die [!INCLUDE[indigo2](~/includes/indigo2-md.md)] vom System bereitgestellte <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> und <xref:System.ServiceModel.WSHttpBinding> Bindungen immer anonyme Adressen verwenden.</span><span class="sxs-lookup"><span data-stu-id="0e218-115">The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] system-provided <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> and <xref:System.ServiceModel.WSHttpBinding> bindings always use Anonymous addresses.</span></span>  
  
-   <span data-ttu-id="0e218-116">Nicht anonyme Adressen werden beim Senden der Antwort ist zum Erstellen eines neuen Kanals für die Kommunikation verwendet.</span><span class="sxs-lookup"><span data-stu-id="0e218-116">NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</span></span> <span data-ttu-id="0e218-117">Die [!INCLUDE[indigo2](~/includes/indigo2-md.md)] vom System bereitgestellte <xref:System.ServiceModel.WSDualHttpBinding> Bindung verwendet, eine nicht anonyme Adresse.</span><span class="sxs-lookup"><span data-stu-id="0e218-117">The [!INCLUDE[indigo2](~/includes/indigo2-md.md)] system-provided <xref:System.ServiceModel.WSDualHttpBinding> binding uses a NonAnonymous address.</span></span> <span data-ttu-id="0e218-118">Mit dualem HTTP erstellt der Client eine HTTP-Anforderung zum Senden einer Nachricht, anschließend muss der Server eine eigene HTTP-Anforderung zum Senden der Antwort erstellen.</span><span class="sxs-lookup"><span data-stu-id="0e218-118">With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</span></span> <span data-ttu-id="0e218-119">Da der Server das Senden initiiert, muss er einen bestimmten Endpunkt haben, um die Verbindung herzustellen.</span><span class="sxs-lookup"><span data-stu-id="0e218-119">Because the server is initiating the send, it must have a specific endpoint to establish the connection.</span></span> <span data-ttu-id="0e218-120">Sie müssen dem Server die Adresse eines Endpunkts für die Antwort geben.</span><span class="sxs-lookup"><span data-stu-id="0e218-120">You must provide the server the address of an endpoint for its response.</span></span> <span data-ttu-id="0e218-121">Auf ähnliche Weise, wenn ein Dienst auf eine unidirektionale Nachricht, die empfangen wurde reagieren muss, muss dieser ebenfalls eine NonAnonymous zu beheben, da kein Rückkanal für die Kommunikation verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="0e218-121">Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</span></span> <span data-ttu-id="0e218-122">Wenn der Server eine Nachricht zurücksendet, ist ein völlig separater Vorgang von dem zum Senden der ersten Nachricht erforderlich.</span><span class="sxs-lookup"><span data-stu-id="0e218-122">If the server sends a message back, a completely separate operation from that used to send the first message is required.</span></span>  
  
-   <span data-ttu-id="0e218-123">Gemischt ist eine dritte Form der Adressierung, die anonyme Authentifizierung und NonAnonymous Adressen abhängig von der Nachricht kombiniert, die gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="0e218-123">Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</span></span> <span data-ttu-id="0e218-124">Ein typisches Beispiel einer Adressierung im gemischten Modus ist die Verwendung eines dedizierten Computers für die Verarbeitung von fehlerhaften oder Bestätigungsnachrichten.</span><span class="sxs-lookup"><span data-stu-id="0e218-124">A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</span></span> <span data-ttu-id="0e218-125">Wenn die standardaustauschsequenz für Antworten HTTP oder TCP ist, verwenden die Antworten anonyme Adressierung, aber verwenden Sie die Fehler nicht anonyme Adressierung.</span><span class="sxs-lookup"><span data-stu-id="0e218-125">If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</span></span> <span data-ttu-id="0e218-126">Während [!INCLUDE[indigo2](~/includes/indigo2-md.md)] bietet keine gemischten-Adressierungsfunktion in den standardbindungen, es ist möglich, einen Kanal zu schreiben, mit dem den Dienst zum Senden von Antworten direkt auf den Rückkanal (wenn die Antwortadresse anonym ist) oder auf einem separaten Kanal (wenn die Antwortadresse NonAnonymous ist).</span><span class="sxs-lookup"><span data-stu-id="0e218-126">While [!INCLUDE[indigo2](~/includes/indigo2-md.md)] does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</span></span> <span data-ttu-id="0e218-127">In diesem Fall wird das Bindungselement des Kanals festzulegende verwendet <xref:System.ServiceModel.Channels.SupportedAddressingMode> Mixed.</span><span class="sxs-lookup"><span data-stu-id="0e218-127">In such a case, the binding element of the channel is used to set <xref:System.ServiceModel.Channels.SupportedAddressingMode> to Mixed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e218-128">Der Server unterstützt nur anonyme Adressen, und Clients müssen eine anonyme Antwortadresse angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e218-128">The server only supports anonymous addresses and clients must provide an anonymous response address.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e218-129">Der Server unterstützt sowohl anonyme als auch nicht anonyme Adressen, und Clients können eine von beiden oder beide verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e218-129">The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="0e218-130">Der Server unterstützt nur nicht anonyme Adressen, und Clients müssen eine nicht anonyme Antwortadresse angeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0e218-130">The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>