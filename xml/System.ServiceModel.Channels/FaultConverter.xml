<Type Name="FaultConverter" FullName="System.ServiceModel.Channels.FaultConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="57cdbe1554322681a01ab185baa3a2634dd6d0ed" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86575629" /></Metadata><TypeSignature Language="C#" Value="public abstract class FaultConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FaultConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.FaultConverter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FaultConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FaultConverter abstract" />
  <TypeSignature Language="F#" Value="type FaultConverter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.6.0.0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="4.7.0.0" FrameworkAlternate="dotnet-plat-ext-3.1" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="5.0.0.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="System.ServiceModel" FromVersion="4.0.0.0" To="System.ServiceModel.Primitives" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Konvertiert von einem Kanal ausgelöste Ausnahmen in SOAP-Fehlernachrichten, die dem Protokoll des Kanals entsprechen.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FaultConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FaultConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.FaultConverter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultFaultConverter">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Channels.FaultConverter GetDefaultFaultConverter (System.ServiceModel.Channels.MessageVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Channels.FaultConverter GetDefaultFaultConverter(class System.ServiceModel.Channels.MessageVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter(System.ServiceModel.Channels.MessageVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultFaultConverter (version As MessageVersion) As FaultConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Channels::FaultConverter ^ GetDefaultFaultConverter(System::ServiceModel::Channels::MessageVersion ^ version);" />
      <MemberSignature Language="F#" Value="static member GetDefaultFaultConverter : System.ServiceModel.Channels.MessageVersion -&gt; System.ServiceModel.Channels.FaultConverter" Usage="System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.FaultConverter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.ServiceModel.Channels.MessageVersion" />
      </Parameters>
      <Docs>
        <param name="version">Die Nachrichtenversion.</param>
        <summary>Ruft den Standard-FaultConverter ab.</summary>
        <returns>Eine Instanz von <see cref="T:System.ServiceModel.Channels.FaultConverter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Transportkanäle sollten eine Delegierung an diese Methode ausführen, um den standardmäßigen FaultConverter der SOAP/WS-Adressierung abzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTryCreateException">
      <MemberSignature Language="C#" Value="protected abstract bool OnTryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTryCreateException(class System.ServiceModel.Channels.Message message, class System.ServiceModel.Channels.MessageFault fault, [out] class System.Exception&amp; exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnTryCreateException (message As Message, fault As MessageFault, ByRef exception As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnTryCreateException(System::ServiceModel::Channels::Message ^ message, System::ServiceModel::Channels::MessageFault ^ fault, [Runtime::InteropServices::Out] Exception ^ % exception);" />
      <MemberSignature Language="F#" Value="abstract member OnTryCreateException : System.ServiceModel.Channels.Message * System.ServiceModel.Channels.MessageFault * Exception -&gt; bool" Usage="faultConverter.OnTryCreateException (message, fault, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.MessageFault" />
        <Parameter Name="exception" Type="System.Exception" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">Die Fehlernachricht.</param>
        <param name="fault">Der Fehler.</param>
        <param name="exception">Die SOAP-Ausnahme, bei erfolgreicher Konvertierung , als <see langword="out" />-Parameter zurückgegeben.</param>
        <summary>Versucht, die Ausnahme zu erstellen.</summary>
        <returns><see langword="true" />, wenn der Fehler erfolgreich konvertiert wurde, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Damit eine Kanalschicht `GetProperty<FaultConverter>` zur Unterstützung der Konvertierung von Fehlernachrichten in SOAP-Ausnahmen unterstützt, wird diese Methode überschrieben, um anhand der folgenden Schritte eine Ausnahme zu erstellen:  
  
-   Überprüfen der Fehlernachricht  
  
-   Wenn erkannt, wird die entsprechende Konvertierung durchgeführt  
  
-   Wenn sie nicht erkannt wird, wird sie durch einen Aufruf von `GetProperty<FaultConverter>` für den inneren Kanal konvertiert  
  
 Transportkanäle sollten eine Delegierung an <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> durchführen, um den standardmäßigen FaultConverter der SOAP/WS-Adressierung abzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTryCreateFaultMessage">
      <MemberSignature Language="C#" Value="protected abstract bool OnTryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTryCreateFaultMessage(class System.Exception exception, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OnTryCreateFaultMessage (exception As Exception, ByRef message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract bool OnTryCreateFaultMessage(Exception ^ exception, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="abstract member OnTryCreateFaultMessage : Exception * Message -&gt; bool" Usage="faultConverter.OnTryCreateFaultMessage (exception, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" RefType="out" />
      </Parameters>
      <Docs>
        <param name="exception">Die SOAP-Ausnahme.</param>
        <param name="message">Die Fehlernachricht, als <see langword="out" />-Parameter zurückgegeben.</param>
        <summary>Versucht, die Fehlernachricht zu erstellen, sobald der Fehler in eine SOAP-Ausnahme konvertiert wurde.</summary>
        <returns><see langword="true" />, wenn die Fehlernachricht erfolgreich erstellt wurde, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kanäle, die die Fehlerkonvertierung unterstützen, implementieren `GetProperty<FaultConverter>` und überschreiben diese Methode, um folgendes durchzuführen. Wenn eine Schicht die Ausnahme konvertieren kann, wird dies durchgeführt; andernfalls wird `GetProperty<FaultConverter>` für den inneren Kanal aufgerufen. Transportkanäle sollten eine Delegierung an <xref:System.ServiceModel.Channels.FaultConverter.GetDefaultFaultConverter%2A> durchführen, um den standardmäßigen FaultConverter der SOAP/WS-Adressierung abzurufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateException">
      <MemberSignature Language="C#" Value="public bool TryCreateException (System.ServiceModel.Channels.Message message, System.ServiceModel.Channels.MessageFault fault, out Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCreateException(class System.ServiceModel.Channels.Message message, class System.ServiceModel.Channels.MessageFault fault, [out] class System.Exception&amp; exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.TryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateException (message As Message, fault As MessageFault, ByRef exception As Exception) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateException(System::ServiceModel::Channels::Message ^ message, System::ServiceModel::Channels::MessageFault ^ fault, [Runtime::InteropServices::Out] Exception ^ % exception);" />
      <MemberSignature Language="F#" Value="member this.TryCreateException : System.ServiceModel.Channels.Message * System.ServiceModel.Channels.MessageFault * Exception -&gt; bool" Usage="faultConverter.TryCreateException (message, fault, exception)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="fault" Type="System.ServiceModel.Channels.MessageFault" />
        <Parameter Name="exception" Type="System.Exception" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">Die Fehlernachricht.</param>
        <param name="fault">Der Fehler.</param>
        <param name="exception">Die SOAP-Ausnahme, bei erfolgreicher Konvertierung , als <see langword="out" />-Parameter zurückgegeben.</param>
        <summary>Schließt <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> mit Fehlerüberprüfung ein.</summary>
        <returns><see langword="true" />, wenn der Fehler erfolgreich konvertiert wurde, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateException%2A> ist eine abstrakte Klasse, die Sie implementieren müssen. Die aktuelle Methode bindet mehrere Parameterfehlertests in einen Aufruf dieser Methode ein.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="message" /> oder <paramref name="fault" /> ist <see langword="null" />.

- oder -

<see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> hat <see langword="true" /> zurückgegeben, <paramref name="exception" /> ist jedoch <see langword="null" />.

- oder -

<see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> hat <see langword="false" /> zurückgegeben, <paramref name="exception" /> ist jedoch nicht <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="TryCreateFaultMessage">
      <MemberSignature Language="C#" Value="public bool TryCreateFaultMessage (Exception exception, out System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryCreateFaultMessage(class System.Exception exception, [out] class System.ServiceModel.Channels.Message&amp; message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.FaultConverter.TryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryCreateFaultMessage (exception As Exception, ByRef message As Message) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryCreateFaultMessage(Exception ^ exception, [Runtime::InteropServices::Out] System::ServiceModel::Channels::Message ^ % message);" />
      <MemberSignature Language="F#" Value="member this.TryCreateFaultMessage : Exception * Message -&gt; bool" Usage="faultConverter.TryCreateFaultMessage (exception, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" RefType="out" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="exception">Die SOAP-Ausnahme.</param>
        <param name="message">Die Fehlernachricht, als <see langword="out" />-Parameter zurückgegeben.</param>
        <summary>Schließt <see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage(System.Exception,System.ServiceModel.Channels.Message@)" /> mit Fehlerüberprüfung ein.</summary>
        <returns><see langword="true" />, wenn die Fehlernachricht erfolgreich erstellt wurde, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Channels.FaultConverter.OnTryCreateFaultMessage%2A> ist eine abstrakte Klasse, die Sie implementieren müssen. Die aktuelle Methode bindet mehrere Fehlertests in einen Aufruf dieser Methode ein.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> hat <see langword="true" /> zurückgegeben, <paramref name="message" /> ist jedoch <see langword="null" />.

- oder -

<see cref="M:System.ServiceModel.Channels.FaultConverter.OnTryCreateException(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.MessageFault,System.Exception@)" /> hat <see langword="false" /> zurückgegeben, <paramref name="message" /> ist jedoch nicht <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
