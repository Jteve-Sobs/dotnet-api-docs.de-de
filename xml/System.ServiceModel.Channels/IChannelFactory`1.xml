<Type Name="IChannelFactory&lt;TChannel&gt;" FullName="System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="31c0178884e6fadc0fad15f1e5f9800713417810" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37621580" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IChannelFactory&lt;TChannel&gt; : System.ServiceModel.Channels.IChannelFactory" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IChannelFactory`1&lt;TChannel&gt; implements class System.ServiceModel.Channels.IChannelFactory, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IChannelFactory`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IChannelFactory(Of TChannel)&#xA;Implements IChannelFactory" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TChannel&gt;&#xA;public interface class IChannelFactory : System::ServiceModel::Channels::IChannelFactory" />
  <TypeSignature Language="F#" Value="type IChannelFactory&lt;'Channel&gt; = interface&#xA;    interface IChannelFactory&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TChannel" />
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannelFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TChannel">
      <span data-ttu-id="4b6d4-101">Der Kanaltyp, der von der Kanalfactory erstellt wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b6d4-101">The type of channel that the channel factory creates.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="4b6d4-102">Definiert die Schnittstelle, die von Kanalfactorys implementiert werden muss, mit denen typspezifische Kanäle erstellt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b6d4-102">Defines the interface that must be implemented by channel factories that create type-specific channels.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b6d4-103">Die Implementierung des <xref:System.ServiceModel.Channels.IChannelFactory%601>-Vertrags ermöglicht es Benutzern, mehrere Kanäle eines bestimmten Typs zu erstellen, ohne jedes Mal den Kanaltyp angeben zu müssen.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-103">Implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> contract allows users to create multiple channels of a given type without having to specify the channel type each time.</span></span> <span data-ttu-id="4b6d4-104">Anders gesagt, durch Definieren des Kanaltyps als generischer Parameter für die Kanalfactory, die die <xref:System.ServiceModel.Channels.IChannelFactory%601>-Schnittstelle implementiert, ist das Übergeben des Typs an die <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A>-Methoden nicht erforderlich.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-104">In other words, defining the channel type as a generic parameter for the channel factory implementing the <xref:System.ServiceModel.Channels.IChannelFactory%601> interface means that it is not necessary to pass the type into the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A> methods.</span></span> <span data-ttu-id="4b6d4-105">Wenn Sie unterschiedliche Kanaltypen erstellen möchten, können Sie zusätzliche Kanalfactorys für jeden erforderlichen Kanaltyp erstellen.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-105">If users want to create different channel types, they can create additional channel factories for each type of channel required.</span></span> <span data-ttu-id="4b6d4-106">Mit der <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29>-Überladung kann die Adresse, an die die Nachricht zuerst gesendet wird, von der endgültigen Zieladresse unterschieden werden.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-106">The <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload allows you to distinguish the address to which the message is initially sent from the ultimate destination.</span></span> <span data-ttu-id="4b6d4-107">Eine Erläuterung der Adressierung, finden Sie unter den [Adressen](~/docs/framework/wcf/feature-details/endpoint-addresses.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-107">For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="CreateChannel">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b6d4-108">Erstellt einen Kanal eines angegebenen Typs für eine angegebene Endpunktadresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b6d4-108">Creates a channel of a specified type to a specified endpoint address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b6d4-109">Mit der <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29>-Überladung kann die Adresse, an die die Nachricht zuerst gesendet wird, beim manuellen Routing von der endgültigen Zieladresse unterschieden werden.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-109">Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing.</span></span> <span data-ttu-id="4b6d4-110">Alle Kanäle, die von dieser Kanalfactory erstellt werden, werden beim Schließen der Kanalfactory ebenfalls geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-110">Note that any channels created by this channel factory are closed when the channel factory is closed.</span></span> <span data-ttu-id="4b6d4-111">Eine Erläuterung der Adressierung, finden Sie unter den [Adressen](~/docs/framework/wcf/feature-details/endpoint-addresses.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-111">For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.EndpointAddress to);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress to) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel (to As EndpointAddress) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannel(System::ServiceModel::EndpointAddress ^ to);" />
      <MemberSignature Language="F#" Value="abstract member CreateChannel : System.ServiceModel.EndpointAddress -&gt; 'Channel" Usage="iChannelFactory.CreateChannel to" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="to">
          <span data-ttu-id="4b6d4-112">Die <see cref="T:System.ServiceModel.EndpointAddress" />, die den Speicherort des Diensts bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b6d4-112">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b6d4-113">Erstellt einen Kanal eines angegebenen Typs für eine angegebene Endpunktadresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b6d4-113">Creates a channel of a specified type to a specified endpoint address.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b6d4-114">Ein Kanal vom Typ <paramref name="TChannel" /> für die angegebene Endpunktadresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b6d4-114">A channel of type <paramref name="TChannel" /> to the specified endpoint address.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b6d4-115">Mit der <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29>-Überladung kann die Adresse, an die die Nachricht zuerst gesendet wird, beim manuellen Routing von der endgültigen Zieladresse unterschieden werden.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-115">Use the <xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing.</span></span> <span data-ttu-id="4b6d4-116">Alle Kanäle, die von dieser Kanalfactory erstellt werden, werden beim Schließen der Kanalfactory ebenfalls geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-116">Note that any channels created by this channel factory are closed when the channel factory is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChannel">
      <MemberSignature Language="C#" Value="public TChannel CreateChannel (System.ServiceModel.EndpointAddress to, Uri via);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TChannel CreateChannel(class System.ServiceModel.EndpointAddress to, class System.Uri via) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateChannel (to As EndpointAddress, via As Uri) As TChannel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TChannel CreateChannel(System::ServiceModel::EndpointAddress ^ to, Uri ^ via);" />
      <MemberSignature Language="F#" Value="abstract member CreateChannel : System.ServiceModel.EndpointAddress * Uri -&gt; 'Channel" Usage="iChannelFactory.CreateChannel (to, via)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="to" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="via" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="to">
          <span data-ttu-id="4b6d4-117">Die <see cref="T:System.ServiceModel.EndpointAddress" />, die den Speicherort des Diensts bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b6d4-117">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</span>
          </span>
        </param>
        <param name="via">
          <span data-ttu-id="4b6d4-118">Der <see cref="T:System.Uri" />, der die Transportadresse enthält, an die die Nachricht gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b6d4-118">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b6d4-119">Erstellt einen Kanal des angegebenen Typs für eine angegebene Endpunktadresse sowie für eine Transportadresse, an die die Nachrichten gesendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b6d4-119">Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b6d4-120">Ein Kanal vom Typ <paramref name="TChannel" /> für die angegebene Endpunktadresse und die angegebene Transportadresse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b6d4-120">A channel of type <paramref name="TChannel" /> to the specified endpoint address and transport address.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b6d4-121">Nachrichten sollten zunächst an die Transportadresse gesendet werden, die von `via` angegeben wird, bevor sie an eine andere Remoteadresse gesendet werden, die von `to` angegeben wird und an der sich der Dienst befindet.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-121">The transport address specified by the `via` is the location to which a message should initially be sent on its way to some other remote address specified by the `to` at which the service is located.</span></span> <span data-ttu-id="4b6d4-122">In aller Regel entspricht der `via`-URI dem <xref:System.ServiceModel.EndpointAddress.Uri%2A> der endgültigen `to`-Adresse des Diensts.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-122">In most Internet scenarios, the `via` URI is the same as the <xref:System.ServiceModel.EndpointAddress.Uri%2A> of the final `to` address of the service.</span></span> <span data-ttu-id="4b6d4-123">Eine Unterscheidung zwischen den beiden Adressen ist nur beim manuellen Routing erforderlich.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-123">You only distinguish between these two addresses when you want to do some kind of manual routing.</span></span> <span data-ttu-id="4b6d4-124">Alle Kanäle, die von dieser Kanalfactory erstellt werden, werden beim Schließen der Kanalfactory ebenfalls geschlossen.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-124">Note that any channels created by this channel factory are closed when the channel factory is closed.</span></span> <span data-ttu-id="4b6d4-125">Eine Erläuterung der Adressierung, finden Sie unter den [Adressen](~/docs/framework/wcf/feature-details/endpoint-addresses.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="4b6d4-125">For a discussion of addressing, see the [Addresses](~/docs/framework/wcf/feature-details/endpoint-addresses.md) topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>