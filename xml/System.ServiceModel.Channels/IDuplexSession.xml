<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4893578ce73fa37c40f4ed3571ed2e659faba7dc" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70722575" /></Metadata><TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d1274-101">Definiert die Schnittstelle für die auf jeder Seite einer bidirektionalen Kommunikation zwischen Messagingendpunkten implementierte Sitzung.</span><span class="sxs-lookup"><span data-stu-id="d1274-101">Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1274-102">Die <xref:System.ServiceModel.Channels.IDuplexSession>-Schnittstelle ist die Gesamtmenge aus der eingehenden Sitzung, die von der <xref:System.ServiceModel.Channels.IInputSession>-Schnittstelle definiert wird, und der ausgehenden Sitzung, die von der <xref:System.ServiceModel.Channels.IOutputSession>-Schnittstelle definiert wird.</span><span class="sxs-lookup"><span data-stu-id="d1274-102">The <xref:System.ServiceModel.Channels.IDuplexSession> interface is the union of the inbound session, defined by the <xref:System.ServiceModel.Channels.IInputSession> interface, and the outbound session, defined by the <xref:System.ServiceModel.Channels.IOutputSession> interface.</span></span> <span data-ttu-id="d1274-103">Sowohl die eingehende als auch die ausgehende Sitzung können unabhängig voneinander beendet werden.</span><span class="sxs-lookup"><span data-stu-id="d1274-103">Either the inbound session or outbound session can be terminated independently of the other.</span></span> <span data-ttu-id="d1274-104">Die ausgehende Sitzung kann synchron durch Aufruf von <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> oder asynchron durch Aufruf von <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A> beendet werden.</span><span class="sxs-lookup"><span data-stu-id="d1274-104">The outbound session can be terminated synchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> or asynchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span></span>  
  
 <span data-ttu-id="d1274-105">Die eingehende Sitzung kann remote beendet werden.</span><span class="sxs-lookup"><span data-stu-id="d1274-105">The inbound session can be remotely terminated.</span></span> <span data-ttu-id="d1274-106">Der zur eingehenden Sitzung gehörende <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> gibt `null` zurück, wenn diese Sitzung beendet wird.</span><span class="sxs-lookup"><span data-stu-id="d1274-106">The <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associated with the inbound session starts returning `null` when that session is shutdown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1274-107">Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung.</span><span class="sxs-lookup"><span data-stu-id="d1274-107">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="d1274-108">Der <see cref="T:System.AsyncCallback" />-Delegat.</span><span class="sxs-lookup"><span data-stu-id="d1274-108">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="d1274-109">Ein Objekt (<see langword="object" />), das Statusinformationen für diese Anforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="d1274-109">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="d1274-110">Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung.</span><span class="sxs-lookup"><span data-stu-id="d1274-110">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
        <returns><span data-ttu-id="d1274-111">Der <see cref="T:System.IAsyncResult" />, der auf das asynchrone Beenden der ausgehenden Sitzung verweist.</span><span class="sxs-lookup"><span data-stu-id="d1274-111">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1274-112">Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung.</span><span class="sxs-lookup"><span data-stu-id="d1274-112">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span> <span data-ttu-id="d1274-113">Dieser Vorgang muss innerhalb eines Standardzeitintervalls abgeschlossen sein.</span><span class="sxs-lookup"><span data-stu-id="d1274-113">This operation must complete within a default interval of time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d1274-114">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, innerhalb dessen der Vorgang abgeschlossen werden muss.</span><span class="sxs-lookup"><span data-stu-id="d1274-114">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <param name="callback"><span data-ttu-id="d1274-115">Der <see cref="T:System.AsyncCallback" />-Delegat.</span><span class="sxs-lookup"><span data-stu-id="d1274-115">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="d1274-116">Ein Objekt (<see langword="object" />), das Statusinformationen für diese Anforderung enthält.</span><span class="sxs-lookup"><span data-stu-id="d1274-116">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="d1274-117">Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung mit einem festgelegten Timeout, innerhalb dessen der Vorgang abgeschlossen sein muss.</span><span class="sxs-lookup"><span data-stu-id="d1274-117">Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</span></span></summary>
        <returns><span data-ttu-id="d1274-118">Der <see cref="T:System.IAsyncResult" />, der auf das asynchrone Beenden der ausgehenden Sitzung verweist.</span><span class="sxs-lookup"><span data-stu-id="d1274-118">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1274-119">Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung.</span><span class="sxs-lookup"><span data-stu-id="d1274-119">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d1274-120">Beendet die ausgehende Sitzung, wobei angegeben wird, dass keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden.</span><span class="sxs-lookup"><span data-stu-id="d1274-120">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d1274-121">Beendet die ausgehende Sitzung, wobei angegeben wird, dass keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden.</span><span class="sxs-lookup"><span data-stu-id="d1274-121">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1274-122">Der <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> Aufruf von signalisiert der anderen Seite der Sitzung, dass Sie von `null` ausstehenden oder nachfolgenden Aufrufen an <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="d1274-122">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="d1274-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A>ist idempotent, sodass ein erneutes aufrufen keine Auswirkung hat.</span><span class="sxs-lookup"><span data-stu-id="d1274-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="d1274-124">Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung.</span><span class="sxs-lookup"><span data-stu-id="d1274-124">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d1274-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> ist eine Sitzungsmethode, die mit dem <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> interagieren kann, der die Sitzung besitzt.</span><span class="sxs-lookup"><span data-stu-id="d1274-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="d1274-126">Dies ist insbesondere der Fall, wenn Ihre Sitzungsdauer zur Kanallebensdauer hinzugefügt wird (wie bei TCP, zuverlässiger Sitzung und Sicherheit):</span><span class="sxs-lookup"><span data-stu-id="d1274-126">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="d1274-127">-Wenn <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> aufgerufen wird, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> bevor auf dem <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> Kanal aufgerufen wird <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> , sollte warten, bis abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="d1274-127">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="d1274-128">-Wenn sich der Kanal im- <see cref="F:System.ServiceModel.CommunicationState.Created" /> Zustand <see cref="F:System.ServiceModel.CommunicationState.Opening" /> oder im <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> -Zustand befindet <see cref="T:System.InvalidOperationException" />, sollte eine auslösen.</span><span class="sxs-lookup"><span data-stu-id="d1274-128">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="d1274-129">-Wenn sich der Kanal im <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> -Zustand befindet, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> sollte eine <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />auslösen.</span><span class="sxs-lookup"><span data-stu-id="d1274-129">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="d1274-130">-Der Kanal sollte einen Fehler <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> auslösen, wenn auslöst.</span><span class="sxs-lookup"><span data-stu-id="d1274-130">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="d1274-131">-Die Implementierung von <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> auf dem Kanal sollte aufrufen <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> und dann überprüfen <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> , <see langword="null" />dass zurückgibt, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> wodurch angegeben wird, dass von der anderen Seite der Sitzung aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="d1274-131">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, which indicates that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="d1274-132">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, innerhalb dessen der Vorgang abgeschlossen werden muss.</span><span class="sxs-lookup"><span data-stu-id="d1274-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <summary><span data-ttu-id="d1274-133">Beendet die ausgehende Sitzung, wobei angegeben wird, dass innerhalb eines angegebenen Zeitintervalls keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden.</span><span class="sxs-lookup"><span data-stu-id="d1274-133">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1274-134">Der <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> Aufruf von signalisiert der anderen Seite der Sitzung, dass Sie von `null` ausstehenden oder nachfolgenden Aufrufen an <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="d1274-134">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="d1274-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A>ist idempotent, sodass ein erneutes aufrufen keine Auswirkung hat.</span><span class="sxs-lookup"><span data-stu-id="d1274-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="d1274-136">Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung.</span><span class="sxs-lookup"><span data-stu-id="d1274-136">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d1274-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> ist eine Sitzungsmethode, die mit dem <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> interagieren kann, der die Sitzung besitzt.</span><span class="sxs-lookup"><span data-stu-id="d1274-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="d1274-138">Dies ist insbesondere der Fall, wenn Ihre Sitzungsdauer zur Kanallebensdauer hinzugefügt wird (wie bei TCP, zuverlässiger Sitzung und Sicherheit):</span><span class="sxs-lookup"><span data-stu-id="d1274-138">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="d1274-139">-Wenn <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> aufgerufen wird, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> bevor auf dem <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> Kanal aufgerufen wird <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> , sollte warten, bis abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="d1274-139">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="d1274-140">-Wenn sich der Kanal im- <see cref="F:System.ServiceModel.CommunicationState.Created" /> Zustand <see cref="F:System.ServiceModel.CommunicationState.Opening" /> oder im <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> -Zustand befindet <see cref="T:System.InvalidOperationException" />, sollte eine auslösen.</span><span class="sxs-lookup"><span data-stu-id="d1274-140">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="d1274-141">-Wenn sich der Kanal im <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> -Zustand befindet, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> sollte eine <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />auslösen.</span><span class="sxs-lookup"><span data-stu-id="d1274-141">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="d1274-142">-Der Kanal sollte einen Fehler <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> auslösen, wenn auslöst.</span><span class="sxs-lookup"><span data-stu-id="d1274-142">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="d1274-143">-Die Implementierung von <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> auf dem Kanal sollte aufrufen <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> und dann überprüfen <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> , <see langword="null" />dass zurückgibt <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> , wodurch angegeben wird, dass von der anderen Seite der Sitzung aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="d1274-143">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, indicating that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="d1274-144"><see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />-Methoden zurückgegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d1274-144">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> methods.</span></span></param>
        <summary><span data-ttu-id="d1274-145">Schließt einen asynchronen Vorgang ab, der die ausgehende Sitzung beendet, wobei angegeben wird, dass keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden.</span><span class="sxs-lookup"><span data-stu-id="d1274-145">Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1274-146">Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung.</span><span class="sxs-lookup"><span data-stu-id="d1274-146">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
