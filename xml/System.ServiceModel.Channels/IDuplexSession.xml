<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62d83bb1e28be138c942555207ea0e72095d52de" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37461051" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiert die Schnittstelle für die auf jeder Seite einer bidirektionalen Kommunikation zwischen Messagingendpunkten implementierte Sitzung.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ServiceModel.Channels.IDuplexSession>-Schnittstelle ist die Gesamtmenge aus der eingehenden Sitzung, die von der <xref:System.ServiceModel.Channels.IInputSession>-Schnittstelle definiert wird, und der ausgehenden Sitzung, die von der <xref:System.ServiceModel.Channels.IOutputSession>-Schnittstelle definiert wird. Sowohl die eingehende als auch die ausgehende Sitzung können unabhängig voneinander beendet werden. Die ausgehende Sitzung kann synchron durch Aufruf von <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> oder asynchron durch Aufruf von <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A> beendet werden.  
  
 Die eingehende Sitzung kann remote beendet werden. Der zur eingehenden Sitzung gehörende <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> gibt `null` zurück, wenn diese Sitzung beendet wird.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
        <param name="state">Ein Objekt (<see langword="object" />), das Statusinformationen für diese Anforderung enthält.</param>
        <summary>Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung.</summary>
        <returns>Der <see cref="T:System.IAsyncResult" />, der auf das asynchrone Beenden der ausgehenden Sitzung verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung. Dieser Vorgang muss innerhalb eines Standardzeitintervalls abgeschlossen sein.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, innerhalb dessen der Vorgang abgeschlossen werden muss.</param>
        <param name="callback">Der <see cref="T:System.AsyncCallback" />-Delegat.</param>
        <param name="state">Ein Objekt (<see langword="object" />), das Statusinformationen für diese Anforderung enthält.</param>
        <summary>Startet einen asynchronen Vorgang zum Beenden der ausgehenden Sitzung mit einem festgelegten Timeout, innerhalb dessen der Vorgang abgeschlossen sein muss.</summary>
        <returns>Der <see cref="T:System.IAsyncResult" />, der auf das asynchrone Beenden der ausgehenden Sitzung verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Beendet die ausgehende Sitzung, wobei angegeben wird, dass keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die ausgehende Sitzung, wobei angegeben wird, dass keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen von <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signalisiert der anderen Seite der Sitzung, die sie zurückgeben soll `null` auf ausstehende oder folgende Aufrufe zu <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> ist idempotent, d. h., ein erneuter Aufruf hat keine Auswirkungen.  
  
 Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> ist eine sitzungsmethode, die mit interagieren kann die <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> , die die Sitzung besitzt. Insbesondere wenn Ihre Sitzungsdauer zur zusammen mit Ihrer kanallebensdauer eingefügt wird (wie mit TCP, zuverlässiger Sitzung und Sicherheit):: Wenn <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> wird aufgerufen, bevor <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> aufgerufen wird, auf dem Kanal <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> warten soll <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> um den Vorgang abzuschließen.  – Wenn der Kanal den <see cref="F:System.ServiceModel.CommunicationState.Created" /> oder <see cref="F:System.ServiceModel.CommunicationState.Opening" /> Zustand <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> sollte Auslösen einer <see cref="T:System.InvalidOperationException" />.  – Wenn der Kanal den <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> Zustand <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> sollte Auslösen einer <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  -Der Kanal sollte fehlschlagen, wenn <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> auslöst.  – Die Implementierung von <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> auf dem Kanal sollte Aufrufen <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> und überprüfen Sie, ob <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> gibt <see langword="null" />, die angibt, dass <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> von der anderen Seite der Sitzung aus aufgerufen wurde.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Die <see cref="T:System.TimeSpan" />, die das Zeitintervall angibt, innerhalb dessen der Vorgang abgeschlossen werden muss.</param>
        <summary>Beendet die ausgehende Sitzung, wobei angegeben wird, dass innerhalb eines angegebenen Zeitintervalls keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufrufen von <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signalisiert der anderen Seite der Sitzung, die sie zurückgeben soll `null` auf ausstehende oder folgende Aufrufe zu <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> ist idempotent, d. h., ein erneuter Aufruf hat keine Auswirkungen.  
  
 Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> ist eine sitzungsmethode, die mit interagieren kann die <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> , die die Sitzung besitzt. Insbesondere wenn Ihre Sitzungsdauer zur zusammen mit Ihrer kanallebensdauer eingefügt wird (wie mit TCP, zuverlässiger Sitzung und Sicherheit):: Wenn <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> wird aufgerufen, bevor <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> aufgerufen wird, auf dem Kanal <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> warten soll <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> um den Vorgang abzuschließen.  – Wenn der Kanal den <see cref="F:System.ServiceModel.CommunicationState.Created" /> oder <see cref="F:System.ServiceModel.CommunicationState.Opening" /> Zustand <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> sollte Auslösen einer <see cref="T:System.InvalidOperationException" />.  – Wenn der Kanal den <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> Zustand <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> sollte Auslösen einer <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  -Der Kanal sollte fehlschlagen, wenn <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> auslöst.  – Die Implementierung von <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> auf dem Kanal sollte Aufrufen <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> und überprüfen Sie, ob <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> gibt <see langword="null" />, um anzugeben, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> von der anderen Seite der Sitzung aus aufgerufen wurde.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" />, das von einem Aufruf der <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />-Methoden zurückgegeben wurde.</param>
        <summary>Schließt einen asynchronen Vorgang ab, der die ausgehende Sitzung beendet, wobei angegeben wird, dass keine weiteren Nachrichten mehr von diesem Endpunkt aus auf dem zur Sitzung gehörenden Kanal versendet werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Beenden der ausgehenden Sitzung hat keinen Einfluss auf die eingehende Sitzung. Daher erfolgt keine Anweisung über die Verfügbarkeit des Nachrichtenempfangs auf der zum Eingabekanal gehörenden Sitzung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>