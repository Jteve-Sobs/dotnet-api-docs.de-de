<Type Name="IContextManager" FullName="System.ServiceModel.Channels.IContextManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4e6201dd01364cbda423d298fa5d228b22dde540" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86575693" /></Metadata><TypeSignature Language="C#" Value="public interface IContextManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContextManager" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IContextManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContextManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContextManager" />
  <TypeSignature Language="F#" Value="type IContextManager = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.WorkflowServices" FromVersion="4.0.0.0" To="System.ServiceModel" ToVersion="4.0.0.0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TypeForwardedFrom("System.WorkflowServices, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e71f6-101">Definiert eine Schnittstelle, die Ihnen ermöglicht, den Kontext für den Kanal abzurufen und festzulegen.</span><span class="sxs-lookup"><span data-stu-id="e71f6-101">Defines an interface that allows you to get and set the context on the channel.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e71f6-102">Bei Channels, für die <xref:System.ServiceModel.WSHttpContextBinding> mit dem festgelegten Wert <xref:System.ServiceModel.SessionMode.NotAllowed> verwendet wird, kann der Kontext nicht auf dem Client mithilfe von <xref:System.ServiceModel.Channels.IContextManager> abgerufen werden, da bei jedem Aufruf von <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> zum Erzwingen der <xref:System.ServiceModel.SessionMode.NotAllowed>-Semantik eines Channels ein neuer Channel zum Einrichten der Sitzung erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="e71f6-102">For channels that use <xref:System.ServiceModel.WSHttpContextBinding> with the <xref:System.ServiceModel.SessionMode.NotAllowed> value set, the context cannot be retrieved on the client using <xref:System.ServiceModel.Channels.IContextManager> because a new channel that establishes a session is created each time <xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A> is called to enforce <xref:System.ServiceModel.SessionMode.NotAllowed> semantics on a channel.</span></span> <span data-ttu-id="e71f6-103">Das bedeutet, dass der Kontext nicht mithilfe von <xref:System.ServiceModel.Channels.IContextManager> abgerufen werden kann, obgleich er in diesem Fall ordnungsgemäß an den Client zurückgegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="e71f6-103">This means that even though the context is properly propagated back to the client in this case, it cannot be retrieved using <xref:System.ServiceModel.Channels.IContextManager>.</span></span> <span data-ttu-id="e71f6-104">Zum Abrufen kann jedoch noch <xref:System.ServiceModel.Channels.ContextMessageProperty> verwendet werden. Dies wird im folgenden Code veranschaulicht:</span><span class="sxs-lookup"><span data-stu-id="e71f6-104">You can still retrieve it using <xref:System.ServiceModel.Channels.ContextMessageProperty> as shown in the following code.</span></span>  
  
```csharp  
using (new OperationContextScope((IContextChannel)channel))  
{  
    channel.MyChannel("Test");  
    ContextMessageProperty context;  
    if (ContextMessageProperty.TryGet(OperationContext.Current.IncomingMessageProperties, out context))  
    {  
        Console.WriteLine(context.Count);  
    }  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IContextManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.ServiceModel.Channels.IContextManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e71f6-105">Ruft einen Wert ab, der angibt, ob die Kontextverwaltung aktiviert wurde, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="e71f6-105">Gets or sets a value that indicates whether the context management is enabled.</span></span></summary>
        <value><span data-ttu-id="e71f6-106"><see langword="true" />, wenn der Kontext aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e71f6-106"><see langword="true" /> if the context is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e71f6-107">Bei aktivierter Kontextverwaltung nimmt der Kontextkanal eine Zwischenspeicherung des Kontexts in seiner Lebensdauer vor.</span><span class="sxs-lookup"><span data-stu-id="e71f6-107">When context management is enabled the context channel caches the context in its lifetime.</span></span> <span data-ttu-id="e71f6-108">Der Kontext kann über den Kanaleigenschaft `IContextManager` durch einen Aufruf der <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A>-Methode vom Kanal abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="e71f6-108">Context can be retrieved from the channel through the `IContextManager` channel property by calling <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> method on it.</span></span> <span data-ttu-id="e71f6-109">Der Kanal kann auch vor dem Öffnen vorab mit einem Kontext initialisiert werden, indem die <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A>-Methode für die Kanaleigenschaft aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="e71f6-109">The channel can also be pre-initialized with context before being opened by calling the <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> method on the channel property.</span></span> <span data-ttu-id="e71f6-110">Sobald der Kanal mit einem Kontext initialisiert wurde, kann er nicht mehr zurückgesetzt werden.</span><span class="sxs-lookup"><span data-stu-id="e71f6-110">Once the channel is initialized with context it cannot be reset.</span></span>  
  
 <span data-ttu-id="e71f6-111">Nachfolgend sind Invarianten in diesem Modus aufgeführt:</span><span class="sxs-lookup"><span data-stu-id="e71f6-111">The following are invariants in this mode:</span></span>  
  
-   <span data-ttu-id="e71f6-112">Durch jeden Aufruf von <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> nach dem Öffnen des Kanals wird eine `InvalidOperationException` ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e71f6-112">Any call to <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> after the channel is open throws an `InvalidOperationException`.</span></span>  
  
-   <span data-ttu-id="e71f6-113">Jeder Versuch, Kontext mithilfe der `ContextMessageProperty` in einer ausgehenden Nachricht zu senden, löst eine `InvalidOperationException` aus.</span><span class="sxs-lookup"><span data-stu-id="e71f6-113">Any attempt to send context through the `ContextMessageProperty` in an outgoing message throws `InvalidOperationException`.</span></span>  
  
-   <span data-ttu-id="e71f6-114">Wird vom Server eine Nachricht mit Kontext empfangen, wenn der Kanal bereits mit einem Kontext intialisiert wurde, wird eine `ProtocolException` ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e71f6-114">If a message is received from the server with context, when the channel is already initialized with a context a `ProtocolException` is thrown.</span></span> <span data-ttu-id="e71f6-115">Anfangskontext kann von einem Server empfangen werden, falls der Kanal ohne ausdrückliches Festlegen des Kontexts geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="e71f6-115">Note that you can receive initial context from a server if the channel is opened without explicitly setting the context.</span></span>  
  
-   <span data-ttu-id="e71f6-116">Die `ContextMessageProperty` einer eingehenden Nachricht ist immer always `null`.</span><span class="sxs-lookup"><span data-stu-id="e71f6-116">The `ContextMessageProperty` on an incoming message is always `null`.</span></span>  
  
 <span data-ttu-id="e71f6-117">Wenn Kontextverwaltung nicht aktiviert wird, wird der Kontext vom Kontextkanal nicht verwaltet.</span><span class="sxs-lookup"><span data-stu-id="e71f6-117">When context management is not enabled, the context channel does not manage context.</span></span> <span data-ttu-id="e71f6-118">Es ist Aufgabe der Anwendung, den Kontext mithilfe von `ContextMessageProperty` abzurufen, zu verwalten und zu übernehmen.</span><span class="sxs-lookup"><span data-stu-id="e71f6-118">It is the application's responsibility to retrieve, manage and apply context through the `ContextMessageProperty`.</span></span> <span data-ttu-id="e71f6-119">Jeder Versuch, <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> oder <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> über die `IContextManager`-Channeleigenschaft aufzurufen, führt zu `InvalidOperationException`.</span><span class="sxs-lookup"><span data-stu-id="e71f6-119">Any attempt to call <xref:System.ServiceModel.Channels.IContextManager.GetContext%2A> or <xref:System.ServiceModel.Channels.IContextManager.SetContext%2A> using through the `IContextManager` channel property results in `InvalidOperationException`.</span></span>  
  
 <span data-ttu-id="e71f6-120">Mit Ausnahme von Kontext-HTTP-Cookies werden alle HTTP-Cookies auf Kanalebene behandelt.</span><span class="sxs-lookup"><span data-stu-id="e71f6-120">All HTTP cookies, except for context HTTP cookies, are handled at the channel level.</span></span> <span data-ttu-id="e71f6-121">Kontext-HTTP-Cookies werden auf Anwendungsebene verwaltet.</span><span class="sxs-lookup"><span data-stu-id="e71f6-121">Context HTTP cookies are managed at the application level.</span></span> <span data-ttu-id="e71f6-122">Dies kann unerwartete Auswirkungen haben, wenn Kanäle für die Kommunikation mit verschiedenen Zielinstanzen von <xref:System.ServiceModel.Channels.ContextMessageProperty> freigegeben werden.</span><span class="sxs-lookup"><span data-stu-id="e71f6-122">This can have unexpected consequences when channels are shared to talk to different instances targeted by <xref:System.ServiceModel.Channels.ContextMessageProperty>.</span></span> <span data-ttu-id="e71f6-123">In der folgenden Tabelle sind die Auswirkungen auf HTTP-Cookies aufgeführt, wenn <xref:System.ServiceModel.Channels.IContextManager.Enabled%2A> entweder auf `true` oder auf `false` festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="e71f6-123">The following table shows how HTTP cookies are affected when <xref:System.ServiceModel.Channels.IContextManager.Enabled%2A> is set to either `true` or `false`.</span></span>  
  
|<span data-ttu-id="e71f6-124">Bindung</span><span class="sxs-lookup"><span data-stu-id="e71f6-124">Binding</span></span>|<span data-ttu-id="e71f6-125">IContextManager.Enabled-Wert</span><span class="sxs-lookup"><span data-stu-id="e71f6-125">IContextManager.Enabled Value</span></span>|<span data-ttu-id="e71f6-126">Bereich für Kontext-HTTP-Cookies</span><span class="sxs-lookup"><span data-stu-id="e71f6-126">Context HTTP Cookie Scope</span></span>|<span data-ttu-id="e71f6-127">Bereich für andere HTTP-Cookies</span><span class="sxs-lookup"><span data-stu-id="e71f6-127">Other HTTP Cookies Scope</span></span>|  
|-------------|-----------------------------------|-------------------------------|------------------------------|  
|<span data-ttu-id="e71f6-128">BasicHttpBinding</span><span class="sxs-lookup"><span data-stu-id="e71f6-128">BasicHttpBinding</span></span>|<span data-ttu-id="e71f6-129">–</span><span class="sxs-lookup"><span data-stu-id="e71f6-129">n/a</span></span>|<span data-ttu-id="e71f6-130">ChannelFactory</span><span class="sxs-lookup"><span data-stu-id="e71f6-130">ChannelFactory</span></span>|<span data-ttu-id="e71f6-131">ChannelFactory</span><span class="sxs-lookup"><span data-stu-id="e71f6-131">ChannelFactory</span></span>|  
|<span data-ttu-id="e71f6-132">BasicHttpContextBinding</span><span class="sxs-lookup"><span data-stu-id="e71f6-132">BasicHttpContextBinding</span></span>|<span data-ttu-id="e71f6-133">true</span><span class="sxs-lookup"><span data-stu-id="e71f6-133">true</span></span>|<span data-ttu-id="e71f6-134">Kanal</span><span class="sxs-lookup"><span data-stu-id="e71f6-134">Channel</span></span>|<span data-ttu-id="e71f6-135">Kanal</span><span class="sxs-lookup"><span data-stu-id="e71f6-135">Channel</span></span>|  
|<span data-ttu-id="e71f6-136">BasicHttpContextBinding</span><span class="sxs-lookup"><span data-stu-id="e71f6-136">BasicHttpContextBinding</span></span>|<span data-ttu-id="e71f6-137">false</span><span class="sxs-lookup"><span data-stu-id="e71f6-137">false</span></span>|<span data-ttu-id="e71f6-138">Für jede (explizit von der Anwendung verwaltete) Nachricht</span><span class="sxs-lookup"><span data-stu-id="e71f6-138">For each message (explicitly managed by application)</span></span>|<span data-ttu-id="e71f6-139">Kanal</span><span class="sxs-lookup"><span data-stu-id="e71f6-139">Channel</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IContextManager.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetContext();" />
      <MemberSignature Language="F#" Value="abstract member GetContext : unit -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="iContextManager.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e71f6-140">Ruft den Kontext ab.</span><span class="sxs-lookup"><span data-stu-id="e71f6-140">Gets the context.</span></span></summary>
        <returns><span data-ttu-id="e71f6-141">Das <see cref="T:System.Collections.Generic.IDictionary`2" /> von Schlüssel/Wert-Paaren mit dem Namespace und dem Namen des Kontexts.</span><span class="sxs-lookup"><span data-stu-id="e71f6-141">The <see cref="T:System.Collections.Generic.IDictionary`2" /> of key/value pairs with the namespace and name of the context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e71f6-142">Im folgenden Code wird das Abrufen des Kontexts von einer typisierten Proxyinstanz auf dem Client veranschaulicht:</span><span class="sxs-lookup"><span data-stu-id="e71f6-142">The following code shows how the context can be obtained from a typed proxy instance on the client.</span></span>  
  
```  
IDictionary<string, string> context;  
CalculatorProxy proxy;  
IContextManager cm = proxy.InnerChannel.GetProperty<IContextManager>();  
if (cm != null)  
    context = cm.GetContext();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContext">
      <MemberSignature Language="C#" Value="public void SetContext (System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContext(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IContextManager.SetContext(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetContext (context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetContext(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberSignature Language="F#" Value="abstract member SetContext : System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="iContextManager.SetContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="e71f6-143">Das <see cref="T:System.Collections.Generic.IDictionary`2" /> von Schlüssel/Wert-Paaren mit dem Namespace und dem Namen des festgelegten Kontexts.</span><span class="sxs-lookup"><span data-stu-id="e71f6-143">The <see cref="T:System.Collections.Generic.IDictionary`2" /> of key/value pairs with the namespace and name of the context that is set.</span></span></param>
        <summary><span data-ttu-id="e71f6-144">Legt den Kontext fest.</span><span class="sxs-lookup"><span data-stu-id="e71f6-144">Sets the context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e71f6-145">Im folgenden Code wird gezeigt, wie der Kontext auf dem Client festgelegt werden kann:</span><span class="sxs-lookup"><span data-stu-id="e71f6-145">The following code shows how the context can be set on the client.</span></span>  
  
```  
IDictionary<string, string> context;  
CalculatorProxy proxy;  
IContextManager cm = proxy.InnerChannel.GetProperty<IContextManager>();  
if (cm != null)  
    cm.SetContext(context);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
