<Type Name="StreamUpgradeInitiator" FullName="System.ServiceModel.Channels.StreamUpgradeInitiator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4cb514637ce30300a803c7aea8160ddad049cf09" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51910060" /></Metadata><TypeSignature Language="C#" Value="public abstract class StreamUpgradeInitiator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamUpgradeInitiator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamUpgradeInitiator" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamUpgradeInitiator abstract" />
  <TypeSignature Language="F#" Value="type StreamUpgradeInitiator = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3d215-101">Um einen benutzerdefinierten Upgradeinitiator zu implementieren, wird von dieser <see langword="abstract" />-Basisklasse geerbt.</span><span class="sxs-lookup"><span data-stu-id="3d215-101">To implement a custom upgrade initiator, inherit from this <see langword="abstract" /> base class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d215-102">Ein Beispiel für ein Streamupgrade ist das Erstellen eines Komprimierungsstreams direkt über dem Transportstream.</span><span class="sxs-lookup"><span data-stu-id="3d215-102">An example of a stream upgrade is to build a compression stream directly on top of the transport stream.</span></span> <span data-ttu-id="3d215-103">Diese Klasse wird mit <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> und <xref:System.ServiceModel.Channels.StreamUpgradeProvider> verwendet, um ein benutzerdefiniertes Streamupgrade zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="3d215-103">This class is used with <xref:System.ServiceModel.Channels.StreamUpgradeAcceptor> and <xref:System.ServiceModel.Channels.StreamUpgradeProvider> to implement a custom stream upgrade.</span></span>  
  
 <span data-ttu-id="3d215-104">Eine ausführliche Beschreibung der Aktualisierung finden Sie unter dem <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.</span><span class="sxs-lookup"><span data-stu-id="3d215-104">For a detailed description of the upgrade process, see <xref:System.ServiceModel.Channels.StreamUpgradeProvider>.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/e3da85c8-57f3-4e32-a4cb-50123f30fea6"><span data-ttu-id="3d215-105">Benutzerdefinierte Stream-Upgrades</span><span class="sxs-lookup"><span data-stu-id="3d215-105">Custom Stream Upgrades</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StreamUpgradeInitiator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StreamUpgradeInitiator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d215-106">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="3d215-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.StreamUpgradeInitiator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginInitiateUpgrade (System.IO.Stream stream, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginInitiateUpgrade(class System.IO.Stream stream, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginInitiateUpgrade(System::IO::Stream ^ stream, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginInitiateUpgrade : System.IO.Stream * AsyncCallback * obj -&gt; IAsyncResult" Usage="streamUpgradeInitiator.BeginInitiateUpgrade (stream, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="3d215-107">Der zu aktualisierende Stream.</span><span class="sxs-lookup"><span data-stu-id="3d215-107">The stream to be upgraded.</span></span></param>
        <param name="callback"><span data-ttu-id="3d215-108">Die Methode, die aufgerufen wird, wenn <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" /> abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="3d215-108">The method to call when the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" /> has completed.</span></span></param>
        <param name="state"><span data-ttu-id="3d215-109">Statusinformationen über den Status des asynchronen Aufrufs.</span><span class="sxs-lookup"><span data-stu-id="3d215-109">State information about the status of the asynchronous call.</span></span></param>
        <summary><span data-ttu-id="3d215-110">Diese <see langword="abstract" />-Methode kann implementiert werden, um eine asynchrone Verarbeitung vorzunehmen, die ein Upgrade initiiert.</span><span class="sxs-lookup"><span data-stu-id="3d215-110">This <see langword="abstract" /> method can be implemented to do asynchronous processing that initiates an upgrade.</span></span></summary>
        <returns><span data-ttu-id="3d215-111">Gibt ein <see cref="T:System.IAsyncResult" /> zurück, das an die <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />-Methode weitergegeben wird.</span><span class="sxs-lookup"><span data-stu-id="3d215-111">Returns an <see cref="T:System.IAsyncResult" /> to be passed into the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d215-112">Diese Methode ruft <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A> auf und gibt zurück.</span><span class="sxs-lookup"><span data-stu-id="3d215-112">This method calls <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A> and returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream EndInitiateUpgrade (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream EndInitiateUpgrade(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.EndInitiateUpgrade(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndInitiateUpgrade (result As IAsyncResult) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ EndInitiateUpgrade(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndInitiateUpgrade : IAsyncResult -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.EndInitiateUpgrade result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="3d215-113">Das von der <see langword="IAsyncResult" />-Methode zurückgegebene <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="3d215-113">The <see langword="IAsyncResult" /> returned from the <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="3d215-114">Diese Methode ist die asynchrone Rückrufmethode, die aufgerufen wird, nachdem <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="3d215-114">This method is the asynchronous callback method that is called after <see cref="M:System.ServiceModel.Channels.StreamUpgradeInitiator.BeginInitiateUpgrade(System.IO.Stream,System.AsyncCallback,System.Object)" /> has completed.</span></span></summary>
        <returns><span data-ttu-id="3d215-115">Gibt den aktualisierten Stream zurück.</span><span class="sxs-lookup"><span data-stu-id="3d215-115">Returns the upgraded stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d215-116">Weitere Informationen über die Verwendung dieser Methoden finden Sie in den Hinweisen unter <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A>.</span><span class="sxs-lookup"><span data-stu-id="3d215-116">For more information about using this method, see the remarks in <xref:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextUpgrade">
      <MemberSignature Language="C#" Value="public abstract string GetNextUpgrade ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNextUpgrade() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.GetNextUpgrade" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetNextUpgrade () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetNextUpgrade();" />
      <MemberSignature Language="F#" Value="abstract member GetNextUpgrade : unit -&gt; string" Usage="streamUpgradeInitiator.GetNextUpgrade " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3d215-117">Gibt den Inhaltstyp der nächsten Aktualisierung zurück, die ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="3d215-117">Returns the content type of the next upgrade to be performed.</span></span></summary>
        <returns><span data-ttu-id="3d215-118">Gibt den Inhaltstyp der nächsten Aktualisierung zurück.</span><span class="sxs-lookup"><span data-stu-id="3d215-118">Returns the content type of the next upgrade.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d215-119">Diese Methode gibt in der erwarteten Reihenfolge einen Satz an Aktualisierungsinhaltstypen zurück, die vom Aktualisierungsanbieter unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="3d215-119">This method returns a set of upgrade content types supported by the upgrade provider in the order in which they are expected.</span></span> <span data-ttu-id="3d215-120">Aktualisierungsanbieter, die nur eine Aktualisierung unterstützen, geben nur einen Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="3d215-120">Upgrade providers that support a single upgrade return only a single value.</span></span> <span data-ttu-id="3d215-121">Aktualisierungsanbieter, die mehrere Aktualisierungen unterstützen, geben die Werte in der entsprechenden Reihenfolge aus (Beispiel: Komprimierungsinhaltstyp gefolgt vom Sicherheitsinhaltstyp).</span><span class="sxs-lookup"><span data-stu-id="3d215-121">Upgrade providers that support multiple upgrades return the values in order (for example, compression content type followed by the security content type).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitiateUpgrade">
      <MemberSignature Language="C#" Value="public abstract System.IO.Stream InitiateUpgrade (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream InitiateUpgrade(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.StreamUpgradeInitiator.InitiateUpgrade(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::IO::Stream ^ InitiateUpgrade(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member InitiateUpgrade : System.IO.Stream -&gt; System.IO.Stream" Usage="streamUpgradeInitiator.InitiateUpgrade stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="3d215-122">Der zu aktualisierende Stream.</span><span class="sxs-lookup"><span data-stu-id="3d215-122">The stream to be upgraded.</span></span></param>
        <summary><span data-ttu-id="3d215-123">Initiiert die Aktualisierung des Streams durch eine Anforderung an das andere Ende der Verbindung zur Aktualisierung der Kanaltransportebene.</span><span class="sxs-lookup"><span data-stu-id="3d215-123">Initiates the upgrade of the stream by requesting the other end of its connection to upgrade the channel transport layer.</span></span></summary>
        <returns><span data-ttu-id="3d215-124">Gibt den aktualisierten Stream zurück.</span><span class="sxs-lookup"><span data-stu-id="3d215-124">Returns the upgraded stream.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3d215-125">Diese Methode kann für jede vom Aktualisierungsanbieter unterstützte Aktualisierung mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="3d215-125">This method can be called multiple times for each upgrade supported by the upgrade provider.</span></span> <span data-ttu-id="3d215-126">Beispielsweise würde ein Aktualisierungsanbieter, der Komprimierung und Sicherheit unterstützt, diese Methode zweimal aufrufen: zunächst zur Aktualisierung des Standardtransportstreamings für die Komprimierung und dann ein zweites Mal für die Aktualisierung der Sicherheit.</span><span class="sxs-lookup"><span data-stu-id="3d215-126">For example, an upgrade provider that supports compression and security would call this method twice: first to upgrade the default transport streaming for compression, and second to upgrade the security.</span></span> <span data-ttu-id="3d215-127">Nachfolgende Aufrufe dieser Methode sollten vom vorherigen Aufruf in den Aktualisierungsstream übergehen.</span><span class="sxs-lookup"><span data-stu-id="3d215-127">Subsequent calls to this method should pass in the upgrade stream from the previous call.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>