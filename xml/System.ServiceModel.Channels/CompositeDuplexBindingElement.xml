<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompositeDuplexBindingElement.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e88f8b0e475131ee9d2ad9c054af95bf6acfeaa8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e88f8b0e475131ee9d2ad9c054af95bf6acfeaa8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client.</source>
          <target state="translated">Stellt das Bindungselement dar, das verwendet werden muss, wenn der Client einen Endpunkt für den Dienst zum Senden von Nachrichten zurück an den Client verfügbar machen muss.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>This is commonly used with transports, such as HTTP, that do not allow duplex communications natively.</source>
          <target state="translated">Dies wird häufig mit Transporten verwendet, z.&amp;#160;B. HTTP, die keine systemseitige Duplexkommunikation ermöglichen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>TCP, by contrast, does allow duplex communications natively and so does not require the use of this binding element for the service to send messages back to a client.</source>
          <target state="translated">Im Gegensatz dazu ermöglicht das TCP-Protokoll nicht die systemseitige Duplexkommunikation, sodass das Bindungselement vom Dienst zum Senden von Nachrichten zurück an den Client nicht benötigt wird.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>The client must expose an address at which the service can contact it to establish a connection from the service to the client.</source>
          <target state="translated">Der Client muss eine Adresse zur Verfügung stellen, an der der Dienst ihn zum Herstellen einer Verbindung vom Dienst zum Client erreichen kann.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>This client address is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> property.</source>
          <target state="translated">Die Clientadresse wird von der <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph>-Eigenschaft bereitgestellt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
          <source>Note that <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> auto-generates a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> if one is not explicitly set by the user.</source>
          <target state="translated">Beachten Sie, dass <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> automatisch eine <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> generiert, wenn der Benutzer keine explizit festlegt.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the factory produces.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>, den die Factory erstellt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel factory.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>, der den Kontext bereitstellt, der zum Erstellen der Kanalfactory erforderlich ist.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a channel factory that can create a composite duplex channel.</source>
          <target state="translated">Gibt eine Kanalfactory zurück, die einen zusammengesetzten Duplexkanal erstellen kann.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> that creates a composite duplex channel of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph>, die einen zusammengesetzten Duplexkanal des Typs <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> erstellt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The build context requires an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> for the <ph id="ph2">`TChannel`</ph>.</source>
          <target state="translated">Der Buildkontext erfordert einen <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> für den <ph id="ph2">`TChannel`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph> and is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> ist nicht vom Typ <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IOutputChannel" /&gt;</ph> und wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the listener accepts.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>, der vom Listener akzeptiert wird.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>, der den Kontext bereitstellt, der zum Erstellen des Kanallisteners erforderlich ist.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a channel listener that can accept a composite duplex channel.</source>
          <target state="translated">Gibt einen Kanallistener zurück, der einen zusammengesetzten Duplexkanal akzeptieren kann.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> that accepts a composite duplex channel of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph>, der einen zusammengesetzten Duplexkanal des Typs <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> akzeptiert.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The build context requires an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for the <ph id="ph2">`TChannel`</ph>.</source>
          <target state="translated">Der Buildkontext erfordert einen <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> für den <ph id="ph2">`TChannel`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> is not of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph> and is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TChannel" /&gt;</ph> ist nicht vom Typ <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IInputChannel" /&gt;</ph> und wird nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the channel factory produces.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>, der von der Kanalfactory generiert wird.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>, der den Kontext bereitstellt, der zum Erstellen des Kanallisteners erforderlich ist.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding can build the channel factory that produces a specific type of channel that satisfies the context requirements.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob die Bindung die Kanalfactory erstellen kann, die einen bestimmten Kanaltyp generiert, der die Kontextanforderungen erfüllt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binding can build the channel factory; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn von der Bindung eine Kanalfactory erstellt werden kann, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">`TChannel`</ph><ph id="ph3"> == </ph><ph id="ph4">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> and the inner binding can also build <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> Wenn <ph id="ph2">`TChannel`</ph> <ph id="ph3"> == </ph> <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph> und die innere Bindung ebenfalls erstellen <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IOutputChannel&gt;</ph>ist, andernfalls <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> that the listener accepts.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph>, der vom Listener akzeptiert wird.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel listener.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>, der den Kontext bereitstellt, der zum Erstellen des Kanallisteners erforderlich ist.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding can build the channel listener that accepts a specific type of channel that satisfies the context requirements.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob die Bindung den Kanallistener erstellen kann, der einen bestimmten Kanaltyp akzeptiert, der die Kontextanforderungen erfüllt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the channel listener can be built for the build required to accept the specified type of channel; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Kanallistener für den Build erstellt werden kann, der zur Annahme des angegebenen Kanaltyps erforderlich ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">`TChannel`</ph><ph id="ph3"> == </ph><ph id="ph4">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> and the inner binding can also build <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`true`</ph> Wenn <ph id="ph2">`TChannel`</ph> <ph id="ph3"> == </ph> <ph id="ph4">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> und die innere Bindung ebenfalls erstellen <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>ist, andernfalls <ph id="ph6">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>Gets or sets the base address for the client.</source>
          <target state="translated">Ruft die Basisadresse für den Client ab, oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph> that contains the base address for the client.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Uri" /&gt;</ph>, der die Basisadresse für den Client enthält.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>This property provides an address at which the service can contact the client.</source>
          <target state="translated">Diese Eigenschaft stellt eine Adresse bereit, unter der der Dienst den Client kontaktieren kann.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A <ph id="ph1">`null`</ph> value causes the system to automatically generate a client base address.</source>
          <target state="translated">Ein <ph id="ph1">`null`</ph>-Wert bewirkt, dass das System automatisch eine Clientbasisadresse generiert.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>This is a base address, not an absolute address.</source>
          <target state="translated">Dies ist eine Basisadresse, keine absolute Adresse.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress">
          <source>A GUID is appended to the base address when generating client endpoints from this binding.</source>
          <target state="translated">Eine GUID wird an die Basisadresse angefügt, wenn Clientendpunkte von dieser Bindung generiert werden.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>Returns a deep clone of the current binding element.</source>
          <target state="translated">Gibt einen tiefen Klon des aktuellen Bindungselements zurück.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph> that is a deep clone of the current binding element.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /&gt;</ph>, das ein tiefes Klon des aktuellen Bindungselements darstellt.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">Durch das Zurückgeben eines Klons kann zur Laufzeit der Fall unterstützt werden, in dem mehrere benutzerdefinierte Bindungen ein benutzerdefiniertes Bindungselement gemeinsam nutzen.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>If a clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">Wenn ein Klon nicht zurückgegeben wird, ist das Laufzeitverhalten nicht definiert.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">Mit einem tiefen Klon eines Objekts wird neben der Kopie des Objekts eine Kopie aller Elemente erstellt, auf die das betreffende Objekt direkt oder indirekt verweist.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">(Dieser Vorgang wird auch als Kopieren des gesamten Objektdiagramms bezeichnet.) Ein flacher Klon eines Objekts stellt im Gegensatz dazu nur eine Kopie des Objekts dar.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">Wenn das Objekt Verweise auf andere Objekte enthält, werden von der flachen Kopie keine Kopien der Objekte erstellt, auf die verwiesen wird. Stattdessen werden nur die Verweise auf die ursprünglichen Objekte kopiert.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.Clone">
          <source>In particular, a deep copy of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</ph> copies over the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph> value.</source>
          <target state="translated">Vor allem eine tiefe Kopie von <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement&gt;</ph> kopiert über den <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object whose support is being tested.</source>
          <target state="translated">Das typisierte Objekt, dessen Unterstützung getestet wird.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides the context required to build the channel.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph>, der den Kontext bereitstellt, der zum Erstellen des Kanals erforderlich ist.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a typed object requested from the appropriate layer in one of the channel stacks.</source>
          <target state="translated">Gibt ein angefordertes typisiertes Objekt aus der entsprechenden Ebene in einem der Kanalstapel zurück.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is supported; or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">Das von <ph id="ph1">&lt;paramref name="T" /&gt;</ph> angeforderte typisierte Objekt, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, falls das Objekt nicht unterstützt wird.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to request a typed object, such as an interface for setting properties or getting status, from the appropriate layer in the stacked binding.</source>
          <target state="translated">Mit dieser Anforderung können Sie typisierte Objekte, wie beispielsweise eine Schnittstelle, für das Festlegen von Eigenschaften oder für das Abrufen des Status aus der entsprechenden Ebene in der gestapelten Bindung abfragen.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a layer supports returning the requested object, it returns it.</source>
          <target state="translated">Wenn eine Ebene das Zurückgeben des angeforderten Objekts unterstützt, wird der Vorgang ausgeführt.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
          <target state="translated">Andernfalls wird der Aufruf an die nächst tiefere Ebene im Stapel delegiert.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no layer supports getting the requested object then the caller is returned a <ph id="ph1">`null`</ph> value.</source>
          <target state="translated">Wenn die letzte Ebene erreicht ist und der Abruf des angeforderten Objekts von keiner Ebene unterstützt wird, gibt der Anrufer einen <ph id="ph1">`null`</ph>-Wert zurück.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph> that you can use to modify the exporting process.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.MetadataExporter" /&gt;</ph>, den Sie zum Ändern des Exportvorgangs verwenden können.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph> that you can use to insert your custom policy assertion.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.PolicyConversionContext" /&gt;</ph>, den Sie zum Einfügen einer benutzerdefinierten Richtlinienassertion verwenden können.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source>Exports custom policy assertions about bindings that represent the presence of composite duplex in the binding.</source>
          <target state="translated">Exportiert benutzerdefinierte Richtlinienassertionen über Bindungen, die das Vorhandensein von Composite Duplex in der Bindung darstellen.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <ph id="ph2">&lt;xref:System.ServiceModel.Description.IPolicyExportExtension&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>