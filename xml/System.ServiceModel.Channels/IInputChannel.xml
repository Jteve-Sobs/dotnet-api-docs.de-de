<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IInputChannel.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c1491efafc1411697f4583e7dbfb438a0f2d5afc.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c1491efafc1411697f4583e7dbfb438a0f2d5afc</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>Defines the interface that a channel must implement to receive a message.</source>
          <target state="translated">Definiert die Schnittstelle, die ein Kanal implementieren muss, um eine Nachricht zu empfangen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> contract includes synchronous and asynchronous variants of receive, try-to-receive and wait-for-a-message functionality.</source>
          <target state="translated">Der <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>-Vertrag enthält synchrone und asynchrone Varianten von Empfangs-, Empfangsversuchs- und Warten-auf-Nachricht-Funktionen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>The pull model is used typically with an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> to receive messages: you call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> (to "pull" a message out of the channel) and then wait for a message to arrive.</source>
          <target state="translated">Das Pullmodell wird üblicherweise mit <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> verwendet, um Nachrichten zu empfangen: Sie rufen <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> auf (um eine Nachricht aus dem Kanal zu 'ziehen' (pull) und warten dann auf das Eingehen der Nachricht.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>An alternative usage pattern is to call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>, and then call <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%28System.TimeSpan%29&gt;</ph>.</source>
          <target state="translated">Ein alternatives Verwendungsmuster ist der Aufruf von <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> oder <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> und dann <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%28System.TimeSpan%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>This approach is common for transactional usages where you start the transaction between the calls to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>.</source>
          <target state="translated">Dieser Ansatz ist für eine transaktionale Verwendung üblich, wobei die Transaktion zwischen den Aufrufen von <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph> und <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> gestartet wird.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>An <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> is not necessarily bound to a single sender.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> ist nicht notwendigerweise an einen einzelnen Absender gebunden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>Other channels and channel interfaces can provide a correlation between particular senders and an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph>, but the base contract makes no such restriction.</source>
          <target state="translated">Andere Kanäle und Kanalschnittstellen können eine Beziehung zwischen bestimmten Absendern und <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> bieten, aber der Basisvertrag macht diese Einschränkung nicht.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>An implementation can create a new <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for each message or reuse the same <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> for multiple messages and senders.</source>
          <target state="translated">Eine Implementierung kann einen neuen <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> für jede Nachricht erstellen oder denselben <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel&gt;</ph> für mehrere Nachrichten und Absender wiederverwenden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>Begins an asynchronous receive operation.</source>
          <target state="translated">Beginnt einen asynchronen Empfangsvorgang.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph> method when you want the application processing to continue without waiting for the request to be received.</source>
          <target state="translated">Verwenden Sie die asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph>-Methode, wenn die Anwendungsverarbeitung ohne Wartezeiten für den Empfang der Anforderung fortgesetzt werden soll.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>Use the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> method when it is acceptable for the current thread to be blocked until the request message is received or the interval of time specified by the <ph id="ph2">`timeout`</ph> has been exceeded.</source>
          <target state="translated">Verwenden Sie die synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Methode, wenn eine Blockade des aktuellen Threads bis zum Eingehen einer Anforderungsnachricht oder bis zum Überschreiten des von <ph id="ph2">`timeout`</ph> festgelegten Zeitintervalls akzeptabel ist</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>The asynchronous operation is available with or without an explicit timeout.</source>
          <target state="translated">Der asynchrone Vorgang ist mit oder ohne ein explizites Timeout verfügbar.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to receive a message that has a state object associated with it.</source>
          <target state="translated">Startet einen asynchronen Vorgang, um eine Nachricht zu empfangen, die über ein ihm zugeordnetes Statusobjekt verfügt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous message reception.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Wert, der auf den asynchronen Nachrichtenempfang verweist.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph> method when you want the application processing to continue without waiting for the request to be received.</source>
          <target state="translated">Verwenden Sie die asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph>-Methode, wenn die Anwendungsverarbeitung ohne Wartezeiten für den Empfang der Anforderung fortgesetzt werden soll.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Use the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> method when it is acceptable for the current thread to be blocked until the request message is received or the interval of time specified by the <ph id="ph2">`timeout`</ph> has been exceeded.</source>
          <target state="translated">Verwenden Sie die synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Methode, wenn eine Blockade des aktuellen Threads bis zum Eingehen einer Anforderungsnachricht oder bis zum Überschreiten des von <ph id="ph2">`timeout`</ph> festgelegten Zeitintervalls akzeptabel ist</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The asynchronous operation is available with or without an explicit timeout.</source>
          <target state="translated">Der asynchrone Vorgang ist mit oder ohne ein explizites Timeout verfügbar.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Dieser Methode wird in einem Rückruf die Identität des Ereignishandlers für den Vorgang mitgeteilt.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The operation is not complete until a message becomes available in the channel.</source>
          <target state="translated">Dieser Vorgang wird nicht abgeschlossen, bevor eine Nachricht im Kanal verfügbar wird.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for a message to become available.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Wert, der das Zeitintervall für das Warten darauf angibt, das eine Nachricht verfügbar wird.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.</source>
          <target state="translated">Startet einen asynchronen Vorgang, eine Nachricht zu empfangen, die über einen angegebenen Timeout und ein zugeordnetes Statusobjekt verfügt.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous receive operation.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Wert, der auf den asynchronen Empfangsvorgang verweist.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph> method when you want the application processing to continue without waiting for the request to be received.</source>
          <target state="translated">Verwenden Sie die asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph>-Methode, wenn die Anwendungsverarbeitung ohne Wartezeiten für den Empfang der Anforderung fortgesetzt werden soll.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> method when it is acceptable for the current thread to be blocked until the request message is received or the interval of time specified by the <ph id="ph2">`timeout`</ph> has been exceeded.</source>
          <target state="translated">Verwenden Sie die synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Methode, wenn eine Blockade des aktuellen Threads bis zum Eingehen einer Anforderungsnachricht oder bis zum Überschreiten des von <ph id="ph2">`timeout`</ph> festgelegten Zeitintervalls akzeptabel ist</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The asynchronous operation is available with or without an explicit timeout.</source>
          <target state="translated">Der asynchrone Vorgang ist mit oder ohne ein explizites Timeout verfügbar.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either a message becomes available in the channel or the time out occurs.</source>
          <target state="translated">Der Vorgang ist nicht abgeschlossen, bevor entweder eine Nachricht im Kanal verfügbar wird oder der Timeout auftritt.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The specified <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is exceeded before the operation is completed.</source>
          <target state="translated">Der festgelegte <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> wird überstiegen, bevor der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The timeout specified is less than zero.</source>
          <target state="translated">Der festgelegte Timeout ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation throws a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded before it completes.</source>
          <target state="translated">Der Vorgang löst eine <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> aus, wenn der festgelegte <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph>-Wert vor Abschluss überschritten wird.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for a message to become available.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Wert, der das Zeitintervall für das Warten darauf angibt, das eine Nachricht verfügbar wird.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to receive a message that has a specified time out and state object associated with it.</source>
          <target state="translated">Startet einen asynchronen Vorgang, eine Nachricht zu empfangen, die über einen angegebenen Timeout und ein zugeordnetes Statusobjekt verfügt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous receive operation.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Wert, der auf den asynchronen Empfangsvorgang verweist.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method when you want the application processing to continue without waiting.</source>
          <target state="translated">Verwenden Sie die asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>-Methode, wenn die Anwendungsverarbeitung ohne Wartezeiten fortgesetzt werden soll.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29&gt;</ph> method when it is acceptable for the current thread to be blocked while it replies to the request message or until the timeout interval is exceeded.</source>
          <target state="translated">Verwenden Sie die synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29&gt;</ph>-Methode, wenn eine Blockade des aktuellen Threads bis zur Antwort auf die Anforderungsnachricht akzeptabel ist oder bis das Timeoutintervall abgelaufen ist.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either a message becomes available in the channel or the timeout occurs.</source>
          <target state="translated">Der Vorgang ist nicht abgeschlossen, bevor entweder eine Nachricht im Kanal verfügbar wird oder der Timeout auftritt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If you are going to handle timeouts and not just re-throw or wrap the <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph>, then you should call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> instead of <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph>.</source>
          <target state="translated">Wenn Sie Timeouts handhaben und nicht nur den <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> neu auslösen oder einbinden, sollten Sie <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginTryReceive%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> anstatt <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If you are not going to treat timeouts specially then just call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph>, otherwise you lose error information.</source>
          <target state="translated">Wenn Sie Timeouts nicht gesondert behandeln, rufen Sie einfach <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph> auf, andernfalls verlieren Sie Fehlerinformationen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The specified <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is exceeded before the operation is completed.</source>
          <target state="translated">Der festgelegte <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> wird überstiegen, bevor der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The timeout specified is less than zero.</source>
          <target state="translated">Der festgelegte Timeout ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> from <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)" /&gt;</ph> if the specified <ph id="ph3">&lt;paramref name="timeout" /&gt;</ph> is exceeded.</source>
          <target state="translated">Der Vorgang gibt <ph id="ph1">&lt;see langword="false" /&gt;</ph> von <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)" /&gt;</ph> zurück, wenn die angegebene <ph id="ph3">&lt;paramref name="timeout" /&gt;</ph> überschritten wurde.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for a message to become available.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Wert, der das Zeitintervall für das Warten darauf angibt, das eine Nachricht verfügbar wird.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>-Delegat, der die Benachrichtigung über den Abschluss des asynchronen Vorgangs erhält.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          <target state="translated">Ein durch die Anwendung festgelegtes Objekt, das dem asynchronen Vorgang zugeordnete Statusinformationen enthält.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous wait-for-a-message-to-arrive operation that has a specified time out and state object associated with it.</source>
          <target state="translated">Startet einen asynchronen Vorgang für das Warten auf den Nachrichteneingang, der über einen angegebenen Timeout und ein zugeordnetes Statusobjekt verfügt.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation to wait for a message to arrive.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Wert, der auf den asynchronen Vorgang für das Warten auf den Nachrichteneingang verweist.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method if you need the application processing to continue without waiting for the message to arrive.</source>
          <target state="translated">Verwenden Sie die asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>-Methode, wenn die Anwendungsverarbeitung ohne Wartezeiten für den Nachrichteneingang fortgesetzt werden soll.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph> method when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">Verwenden Sie die synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph>-Methode, wenn eine Blockade des aktuellen Threads während des Wartens auf das Eingehen einer Nachricht in der Warteschlange akzeptabel ist.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">Der Thread wird zum angegebenen <ph id="ph1">`timeout`</ph> blockiert.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Dieser Methode wird in einem Rückruf die Identität des Ereignishandlers für den Vorgang mitgeteilt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either a message becomes available in the channel or the time out occurs.</source>
          <target state="translated">Der Vorgang ist nicht abgeschlossen, bevor entweder eine Nachricht im Kanal verfügbar wird oder der Timeout auftritt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The specified <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is exceeded before the operation is completed.</source>
          <target state="translated">Der festgelegte <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> wird überstiegen, bevor der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The timeout specified is less than zero.</source>
          <target state="translated">Der festgelegte Timeout ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded, not a timeout exception.</source>
          <target state="translated">Der Vorgang gibt <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurück, wenn der angegebene <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> überschritten wird, nicht eine Timeoutausnahme.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to one of the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, das von einem Aufruf der <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /&gt;</ph>-Methoden zurückgegeben wurde.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
          <source>Completes an asynchronous operation to receive a message.</source>
          <target state="translated">Schließt einen asynchronen Vorgang zum Empfang einer Nachricht ab.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> received.</source>
          <target state="translated">Der empfangene <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.EndReceive(System.IAsyncResult)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, das durch einen Aufruf der <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.BeginTryReceive(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>-Methode zurückgegeben wurde.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> received.</source>
          <target state="translated">Der empfangene <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
          <source>Completes the specified asynchronous operation to receive a message.</source>
          <target state="translated">Schließt den angegebenen asynchronen Vorgang ab, um eine Nachricht zu empfangen.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a message is received before the specified interval of time elapses; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn eine Nachricht empfangen wird, bevor das angegebene Zeitintervall abgelaufen ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.EndTryReceive(System.IAsyncResult,System.ServiceModel.Channels.Message@)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that identifies the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> operation to finish, and from which to retrieve an end result.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, das den abzuschließenden <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph>-Vorgang bestimmt und über das Endergebnis abgerufen werden kann.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
          <source>Completes the specified asynchronous wait-for-a-message operation.</source>
          <target state="translated">Schließt den angegebenen asynchronen Vorgang des Wartens auf eine Nachricht ab.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a message has arrived before the <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> has been exceeded; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn eine Nachricht angekommen ist, bevor der <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> überschritten wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.EndWaitForMessage(System.IAsyncResult)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
          <source>Gets the address on which the input channel receives messages.</source>
          <target state="translated">Ruft die Adresse ab, auf der der Eingabekanal Nachrichten empfängt.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> on which the input channel receives messages.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph>, auf der der Eingabekanal Nachrichten empfängt.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
          <source>If this input channel does not have a standalone address (for example, it is the input-side of a client-initiated TCP channel), then this property is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Verfügt dieser Eingabekanal nicht über eine eigenständige Adresse (Beispiel: Eingabeseite eines vom Client initiierten TCP-Kanals), lautet die Eigenschaft <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
          <source>This property can be used by higher-level channels for correlation purposes.</source>
          <target state="translated">Diese Eigenschaft kann von Kanälen höherer Ebene zu Korrelationszwecken verwendet werden.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
          <source>For example, if a higher-level channel implements request-reply on top of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexChannel&gt;</ph>, it can use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.LocalAddress%2A&gt;</ph> property in the WS-Addressing ReplyTo header.</source>
          <target state="translated">Implementiert beispielsweise ein Kanal höherer Ebene eine Anforderung-Antwort auf einem <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IDuplexChannel&gt;</ph>, kann die <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.LocalAddress%2A&gt;</ph>-Eigenschaft im WS-Addressing-ReplyTo-Header verwendet werden.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.IInputChannel.LocalAddress">
          <source>The following code illustrates how to implement this property:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Eigenschaft implementiert wird:</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>The operation did not complete with the timeout interval.</source>
          <target state="translated">Der Vorgang wurde mit dem Timeoutintervall nicht abgeschlossen.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>The input channel failed.</source>
          <target state="translated">Der Eingabekanal ist fehlgeschlagen.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>The input channel has been aborted.</source>
          <target state="translated">Der Eingabekanal wurde abgebrochen.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>The input channel faulted.</source>
          <target state="translated">Der Eingabekanal hat einen Fehler verursacht.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>Returns a message received by the input channel, if one is available with an interval of time that is explicitly or implicitly defined.</source>
          <target state="translated">Gibt, wenn verfügbar, eine vom Eingabekanal empfangene Nachricht mit einem Zeitintervall aus, das explizit oder implizit definiert ist.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>Use the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> method when it is acceptable for the current thread to be blocked until it receives the request message or exceeds the interval of time specified by <ph id="ph2">`timeout`</ph>.</source>
          <target state="translated">Verwenden Sie die synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Methode, wenn eine Blockade des aktuellen Threads bis zum Eingehen einer Anforderungsnachricht oder bis zum Überschreiten des von <ph id="ph2">`timeout`</ph> festgelegten Zeitintervalls akzeptabel ist</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph> method when you need the application processing to continue without waiting for the request to be received.</source>
          <target state="translated">Verwenden Sie die asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph>-Methode, wenn die Anwendungsverarbeitung ohne Wartezeiten für den Empfang der Anforderung fortgesetzt werden soll.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>The synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> operation is available with or without an explicit timeout.</source>
          <target state="translated">Der synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Vorgang ist mit oder ohne ein explizites Timeout verfügbar.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.IInputChannel">
          <source>If a message is not available, it blocks until one is available or until the timeout is exceeded.</source>
          <target state="translated">Wenn keine Nachricht verfügbar ist, erfolgt eine Blockade, bis eine verfügbar ist oder bis der Timeout überschritten wird.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source>Returns the message received, if one is available.</source>
          <target state="translated">Gibt die empfangene Nachricht zurück, wenn eine verfügbar ist.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source>If a message is not available, blocks for a default interval of time.</source>
          <target state="translated">Ist keine Nachricht verfügbar, erfolgt eine Blockade für die Dauer des Standardzeitintervalls.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> received.</source>
          <target state="translated">Der empfangene <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source>Use the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> method when it is acceptable for the current thread to be blocked until it receives the request message or exceeds the interval of time specified by <ph id="ph2">`timeout`</ph>.</source>
          <target state="translated">Verwenden Sie die synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Methode, wenn eine Blockade des aktuellen Threads bis zum Eingehen einer Anforderungsnachricht oder bis zum Überschreiten des von <ph id="ph2">`timeout`</ph> festgelegten Zeitintervalls akzeptabel ist</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph> method when you want the application processing to continue without waiting for the request to be received.</source>
          <target state="translated">Verwenden Sie die asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph>-Methode, wenn die Anwendungsverarbeitung ohne Wartezeiten für den Empfang der Anforderung fortgesetzt werden soll.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source>The synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> operation is available with or without an explicit timeout.</source>
          <target state="translated">Der synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Vorgang ist mit oder ohne ein explizites Timeout verfügbar.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source>If a message is not available, it blocks until one is available or until the timeout is exceeded.</source>
          <target state="translated">Wenn keine Nachricht verfügbar ist, erfolgt eine Blockade, bis eine verfügbar ist oder bis der Timeout überschritten wird.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> can be called multiple times or concurrently.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> kann mehrmals oder gleichzeitig aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source>Only one <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> call can complete for each message received.</source>
          <target state="translated">Für jede empfangene Nachricht kann nur ein <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Aufruf durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the receive operation has to complete before timing out and throwing a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Wert, der angibt, wie lange der Empfangsvorgang vor Timeout und Ausgabe von <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> abgeschlossen sein muss.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>Returns the message received, if one is available.</source>
          <target state="translated">Gibt die empfangene Nachricht zurück, wenn eine verfügbar ist.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>If a message is not available, blocks for a specified interval of time.</source>
          <target state="translated">Ist keine Nachricht verfügbar, erfolgt eine Blockade für die Dauer eines festgelegten Zeitintervalls.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> received.</source>
          <target state="translated">Der empfangene <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>Use the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> method when it is acceptable for the current thread to be blocked until it receives the request message or exceeds the interval of time specified by <ph id="ph2">`timeout`</ph>.</source>
          <target state="translated">Verwenden Sie die synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Methode, wenn eine Blockade des aktuellen Threads bis zum Eingehen einer Anforderungsnachricht oder bis zum Überschreiten des von <ph id="ph2">`timeout`</ph> festgelegten Zeitintervalls akzeptabel ist</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph> method when you want the application processing to continue without waiting for the request to be received.</source>
          <target state="translated">Verwenden Sie die asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginReceive%2A&gt;</ph>-Methode, wenn die Anwendungsverarbeitung ohne Wartezeiten für den Empfang der Anforderung fortgesetzt werden soll.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>The synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> operation is available with or without an explicit timeout.</source>
          <target state="translated">Der synchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Vorgang ist mit oder ohne ein explizites Timeout verfügbar.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>If a message is not available, it blocks until one is available or until the timeout is exceeded.</source>
          <target state="translated">Wenn keine Nachricht verfügbar ist, erfolgt eine Blockade, bis eine verfügbar ist oder bis der Timeout überschritten wird.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> can be called multiple times or concurrently.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> kann mehrmals oder gleichzeitig aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>Only one <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> call can complete for each message received.</source>
          <target state="translated">Für jede empfangene Nachricht kann nur ein <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>-Aufruf durchgeführt werden.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>The specified <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is exceeded before the operation is completed.</source>
          <target state="translated">Der festgelegte <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> wird überstiegen, bevor der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.Receive(System.TimeSpan)">
          <source>The timeout specified is less than zero.</source>
          <target state="translated">Der festgelegte Timeout ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to one of the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, das von einem Aufruf der <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /&gt;</ph>-Methoden zurückgegeben wurde.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> received.</source>
          <target state="translated">Der empfangene <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
          <source>Tries to receive a message within a specified interval of time.</source>
          <target state="translated">Versucht, eine Nachricht innerhalb eines angegebenen Zeitintervalls zu empfangen.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a message is received before the <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> has been exceeded; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn eine Nachricht empfangen wird, bevor der <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> überschritten wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
          <source>If you are going to handle timeouts and not just re-throw or wrap the <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph>, then you should call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29&gt;</ph> instead of <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>.</source>
          <target state="translated">Wenn Sie Timeouts handhaben und nicht nur den <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> neu auslösen oder einbinden, sollten Sie <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.TryReceive%28System.TimeSpan%2CSystem.ServiceModel.Channels.Message%40%29&gt;</ph> anstatt <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> aufrufen.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
          <source>If you are not going to treat timeouts specially then just call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph>, otherwise you will lose error information.</source>
          <target state="translated">Wenn Sie Timeouts nicht gesondert behandeln, rufen Sie einfach <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> auf, andernfalls verlieren Sie Fehlerinformationen.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
          <source>The specified <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is exceeded before the operation is completed.</source>
          <target state="translated">Der festgelegte <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> wird überstiegen, bevor der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.TryReceive(System.TimeSpan,System.ServiceModel.Channels.Message@)">
          <source>The timeout specified is less than zero.</source>
          <target state="translated">Der festgelegte Timeout ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> specifies the maximum interval of time to wait for a message to arrive before timing out.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph>-Wert, der das maximale Zeitintervall für das Warten auf den Nachrichteneingang vor dem Timeout angibt.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>Returns a value that indicates whether a message has arrived within a specified interval of time.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob eine Nachricht innerhalb eines angegebenen Zeitintervalls angekommen ist.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a message has arrived before the <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> has been exceeded; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn eine Nachricht angekommen ist, bevor der <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> überschritten wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>Calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph> does not result in a message being received or processed in any other way.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph> aufzurufen, führt nicht dazu, dass eine Nachricht empfangen oder auf jegliche andere Art und Weise verarbeitet wird.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph> method exists primarily for transacted scenarios where the user wants to receive the message using a transaction.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph>-Methode existiert primär für transaktive Szenarien, bei denen der Benutzer die Nachricht unter Verwendung einer Transaktion empfangen möchte.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>When using just <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> normally for this, the user must create the transaction and then call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> and hope the message arrives before the transaction times out, which may not be possible.</source>
          <target state="translated">Bei der Verwendung von lediglich <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> hierfür, muss der Benutzer eine Transaktion erstellen und dann <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> aufrufen und hoffen, dass die Nachricht eingeht, bevor der Transaktions-Timeout abläuft. Dies ist nicht notwendigerweise möglich.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>Instead, the user can call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph> with whatever time out they want (even infinite), then when a message arrives they can open the transaction, call <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> and be confident that they can get the message back before the transaction expires.</source>
          <target state="translated">Stattdessen kann der Benutzer <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph> mit beliebigem Timeout (auch unendlich) aufrufen, um dann bei Nachrichteneingang die Transaktion zu öffnen, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A&gt;</ph> aufzurufen und so sicherzustellen, dass vor Ablauf der Transaktion die Nachricht zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>This method is synchronous, so it blocks the current thread until a message is available or the time out occurs.</source>
          <target state="translated">Diese Methode ist synchron. Sie blockiert daher den aktuellen Thread, bis eine Nachricht verfügbar ist oder der Timeout eintritt.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph> when it is acceptable for the current thread to be blocked while it waits for a message to arrive in the queue.</source>
          <target state="translated">Verwenden Sie <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.WaitForMessage%28System.TimeSpan%29&gt;</ph>¸ wenn eine Blockade des aktuellen Threads bis zum Eingehen einer Nachricht in die Warteschlange akzeptabel ist.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">Der Thread wird zum angegebenen <ph id="ph1">`timeout`</ph> blockiert.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>If you need the application processing to continue without waiting, use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Wenn die Anwendungsverarbeitung ohne Wartezeiten fortgesetzt werden soll, verwenden Sie die asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.BeginWaitForMessage%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>The following code illustrates how to implement this method:</source>
          <target state="translated">Im folgenden Code wird veranschaulicht, wie diese Methode implementiert wird:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>The specified <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is exceeded before the operation is completed.</source>
          <target state="translated">Der festgelegte <ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> wird überstiegen, bevor der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>The timeout specified is less than zero.</source>
          <target state="translated">Der festgelegte Timeout ist kleiner als 0 (null).</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.IInputChannel.WaitForMessage(System.TimeSpan)">
          <source>The operation returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded, not a timeout exception.</source>
          <target state="translated">Der Vorgang gibt <ph id="ph1">&lt;see langword="false" /&gt;</ph> zurück, wenn der angegebene <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> überschritten wird, nicht eine Timeoutausnahme.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>