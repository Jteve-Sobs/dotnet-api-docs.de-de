<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c657e7373c6587fb8b7cb0885341a51aaace76e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69416538" /></Metadata><TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <TypeSignature Language="F#" Value="type XamlMemberInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Erweiterungspunkt bereit, der den Zugriff auf Membereigenschaften eines XAML-Members mit anderen Methoden als Reflektion ermöglicht.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Zweck von <xref:System.Xaml.Schema.XamlMemberInvoker> besteht darin, ein erweiterbares XAML-Typsystem, Schema und eine funktionierende Laufzeit zu aktivieren, die nicht vollständig von CLR-Funktionen wie CLR-Attributen, Reflektionsinformationen durch <xref:System.Type> und <xref:System.Reflection.MemberInfo>usw. abhängig ist. Unterklassen von <xref:System.Xaml.Schema.XamlMemberInvoker> werden als Eingabeparameter für die alternativen Konstruktoren von XAML-Schema Klassen verwendet, <xref:System.Xaml.XamlMember>z. b. Sie Unterklasse <xref:System.Xaml.XamlMember> und <xref:System.Xaml.Schema.XamlMemberInvoker> übergeben Sie an den Basiskonstruktor. Zusammen mit dem definieren <xref:System.Xaml.Schema.XamlMemberInvoker> von für den Konstruktor müssen Sie auch über Schreibungen für mindestens einige `Lookup` Methoden von <xref:System.Xaml.XamlMember>bereitstellen.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker>verfügt über eine Standard Implementierung. Die Standard Implementierung folgt einem ähnlichen Modell wie die Standard Implementierung von XAML-Schema <xref:System.Xaml.XamlType> Typen <xref:System.Xaml.XamlMember>und: das CLR-Typsystem wird für Instanziierung, Werte und Lookups verwendet, einschließlich der <xref:System.Type> Verwendung von CLR- Attributen.<xref:System.Reflection.MemberInfo>usw.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker>stellt Methoden für grundlegende Get-und Set<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>-Vorgänge bereit (; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>). Außerdem werden die Eigenschaften <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> und <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>bereitstellt. diese sind jedoch nicht virtuell.  
  
> [!NOTE]
>  Möglicherweise kann ein <xref:System.Xaml.Schema.XamlMemberInvoker> Wert abgerufen werden, der eine XAML-Direktive darstellt, die in der System. XAML-Implementierung als private Klasse implementiert wird. Wenn Sie versuchen, oder <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> für diesen Invoker aufzurufen, wird eine Ausnahme ausgelöst.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung ist leer.  
  
 Dieser Konstruktor wird intern aufgerufen, um einen Wert für <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>bereitzustellen. Bei einer <xref:System.Xaml.Schema.XamlMemberInvoker> Unterklasse wird erwartet, dass Sie entweder die Signatur für <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> die Erstellung verwenden oder eine außer Kraft Setzung bereit <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> stellen, die als Basis aufruft. Durch die <xref:System.Xaml.XamlMember> Bereitstellung von wird ein <xref:System.Xaml.Schema.XamlMemberInvoker> Standardmuster implementiert, bei dem unveränderlich ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlMemberInvoker : System.Xaml.XamlMember -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="new System.Xaml.Schema.XamlMemberInvoker member" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member">Der <see cref="T:System.Xaml.XamlMember" />-Wert für den bestimmten XAML-Member, der für das <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Klasse auf der Grundlage eines angegebenen <see cref="T:System.Xaml.XamlMember" />-Objekts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird intern auf der Grundlage des <xref:System.Xaml.XamlMember> aufgerufen, <xref:System.Xaml.Schema.XamlMemberInvoker> wo für die Erstellung verwendet wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="member" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj&#xA;override this.GetValue : obj -&gt; obj" Usage="xamlMemberInvoker.GetValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Eine Instanz des Besitzertyps für den Member.</param>
        <summary>Ruft einen Wert der relevanten Eigenschaft von einer Instanz ab.</summary>
        <returns>Der angeforderte Eigenschaftswert.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlMember" /> basiert.  
  
 **-oder-**  
  
Diese Methode wurde für einen schreibgeschützten Member aufgerufen.  
  
 **-oder-**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> ist <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Die Basis Implementierung umfasst einen aufzurufenden internen <c>hilfsdrowifunknown</c>. Dieses Hilfsprogramm löst immer in Fällen aus <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> , in denen eine auf <see cref="T:System.Xaml.XamlMember" />einem unbekannten basiert. Dies schließt <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> <see cref="T:System.Xaml.XamlMember" /> Fälle ein, <see langword="null" />in denen der von ist.  
  
Die Basis Implementierung löst aus <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> , <see langword="null" />wenn den Wert hat.  
  
Bei statischen Eigenschaften (<see cref="P:System.Reflection.MethodBase.IsStatic" /> ist <see langword="true" /> pro <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) ruft <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> die Standard Implementierung auf <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> , <see langword="null" /> wenn als erster Parameter übergeben und <paramref name="instance" /> in der zweiten verpackt werden. Bei nicht statischen Eigenschaften ruft <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> Sie auf und leitet den <paramref name="instance" /> als ersten Parameter und ein leeres Paket als zweiten Parameter weiter.</para></block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="xamlMemberInvoker.SetValue (instance, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Eine Instanz des Besitzertyps für den Member.</param>
        <param name="value">Der festzulegende Eigenschaftswert.</param>
        <summary>Legt einen Wert der relevanten Eigenschaft für eine Instanz fest.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="instance" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlMember" /> basiert.  
  
 **-oder-**  
  
Diese Methode wurde für einen schreibgeschützten Member aufgerufen.  
  
 **-oder-**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> ist <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Die Basis Implementierung umfasst einen aufzurufenden internen <c>hilfsdrowifunknown</c>. Dieses Hilfsprogramm löst immer in Fällen aus <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> , in denen eine auf <see cref="T:System.Xaml.XamlMember" />einem unbekannten basiert. Dies schließt <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> <see cref="T:System.Xaml.XamlMember" /> Fälle ein, <see langword="null" />in denen der von ist.  
  
Die Basis Implementierung löst aus <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> , <see langword="null" />wenn den Wert hat.  
  
Bei statischen Eigenschaften (<see cref="P:System.Reflection.MethodBase.IsStatic" /> ist <see langword="true" /> pro <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) ruft <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> die Standard Implementierung beim <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> übergeben <see langword="null" /> als ersten Parameter und Verpacken <paramref name="instance" /> und <paramref name="value" /> als zweiter Parameter. Bei nicht statischen Eigenschaften ruft <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> Sie als ersten Parameter und <paramref name="instance" /> <paramref name="value" /> als zweiten Parameter auf und leitet Sie weiter.</para></block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult&#xA;override this.ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult" Usage="xamlMemberInvoker.ShouldSerializeValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Die Instanz mit der Eigenschaft, die auf Dauerhaftigkeit überprüft werden soll.</param>
        <summary>Gibt an, ob der Wert von Serialisierungsprozessen beibehalten werden muss.</summary>
        <returns>Ein Wert aus der Enumeration.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standard Implementierung gibt <xref:System.Xaml.Schema.ShouldSerializeResult.Default> zurück, wenn das XAML- <xref:System.Xaml.XamlMember.IsUnknown%2A>Element selbst ist, oder wenn keine relevante `ShouldSerialize` CLR-Reflektionsmethode für den zugrunde liegenden Member durch Standard Reflektion gefunden wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingGetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode ab, die Werte für die Eigenschaft abruft, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist.</summary>
        <value>Das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode, die Werte für die Eigenschaft abruft, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist, oder <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft basiert auf dem <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> Aufruf von bei <xref:System.Xaml.XamlMember>der Konstruktion. Für einen unbekannten <xref:System.Xaml.XamlMember>oder für Fälle, in <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> denen `null`zurückgibt, gibt `null`diese Eigenschaft zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode ab, die Werte für die Eigenschaft festlegt, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist.</summary>
        <value>Das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode, die Werte für die Eigenschaft festlegt, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist, oder <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft basiert auf dem <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> Aufruf von bei <xref:System.Xaml.XamlMember>der Konstruktion. Für einen unbekannten <xref:System.Xaml.XamlMember>oder für Fälle, in <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> denen `null`zurückgibt, gibt `null`diese Eigenschaft zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt einen statischen Wert bereit, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt darstellt.</summary>
        <value>Ein statischer Wert, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie diesen Wert für <xref:System.Xaml.Schema.XamlMemberInvoker> einen Parameter der System. XAML-API-API bereitstellen, wird der aufgerufene Code in der Regel Ausnahmen auslösen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
