<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="36ea554d49653a5eec1ed15b36f4f1c56feba4ec" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86713689" /></Metadata><TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <TypeSignature Language="F#" Value="type XamlMemberInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="253c1-101">Stellt einen Erweiterungspunkt bereit, der den Zugriff auf Membereigenschaften eines XAML-Members mit anderen Methoden als Reflektion ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="253c1-101">Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="253c1-102">Der Zweck von <xref:System.Xaml.Schema.XamlMemberInvoker> besteht darin, ein erweiterbares XAML-Typsystem, Schema und eine funktionierende Laufzeit zu aktivieren, die nicht vollständig von CLR-Funktionen wie CLR-Attributen, Reflektionsinformationen durch <xref:System.Type> und <xref:System.Reflection.MemberInfo> usw. abhängig ist.</span><span class="sxs-lookup"><span data-stu-id="253c1-102">The purpose of <xref:System.Xaml.Schema.XamlMemberInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="253c1-103">Unterklassen von <xref:System.Xaml.Schema.XamlMemberInvoker> werden als Eingabeparameter für die alternativen Konstruktoren von XAML-Schema Klassen verwendet, z <xref:System.Xaml.XamlMember> . b..</span><span class="sxs-lookup"><span data-stu-id="253c1-103">Subclasses of <xref:System.Xaml.Schema.XamlMemberInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="253c1-104">Sie Unterklasse <xref:System.Xaml.XamlMember> und übergeben Sie <xref:System.Xaml.Schema.XamlMemberInvoker> an den Basiskonstruktor.</span><span class="sxs-lookup"><span data-stu-id="253c1-104">You subclass <xref:System.Xaml.XamlMember> and pass the <xref:System.Xaml.Schema.XamlMemberInvoker> through to the base constructor.</span></span> <span data-ttu-id="253c1-105">Zusammen mit dem Definieren von <xref:System.Xaml.Schema.XamlMemberInvoker> für den Konstruktor müssen Sie auch über Schreibungen für mindestens einige Methoden von bereitstellen `Lookup` <xref:System.Xaml.XamlMember> .</span><span class="sxs-lookup"><span data-stu-id="253c1-105">Along with defining a <xref:System.Xaml.Schema.XamlMemberInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlMember>.</span></span>  
  
 <span data-ttu-id="253c1-106"><xref:System.Xaml.Schema.XamlMemberInvoker> verfügt über eine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="253c1-106"><xref:System.Xaml.Schema.XamlMemberInvoker> has a default implementation.</span></span> <span data-ttu-id="253c1-107">Die Standard Implementierung folgt einem ähnlichen Modell wie die Standard Implementierung von XAML-Schema Typen <xref:System.Xaml.XamlType> und <xref:System.Xaml.XamlMember> : das CLR-Typsystem wird für Instanziierung, Werte und Lookups verwendet, einschließlich der Verwendung von CLR-Attributen, <xref:System.Type> und <xref:System.Reflection.MemberInfo> usw.</span><span class="sxs-lookup"><span data-stu-id="253c1-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="253c1-108"><xref:System.Xaml.Schema.XamlMemberInvoker> stellt Methoden für grundlegende Get-und Set-Vorgänge ( <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> ; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> ) bereit.</span><span class="sxs-lookup"><span data-stu-id="253c1-108"><xref:System.Xaml.Schema.XamlMemberInvoker> provides methods for basic get and set operations (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>).</span></span> <span data-ttu-id="253c1-109">Außerdem werden die Eigenschaften und bereitstellt <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> . diese sind jedoch nicht virtuell.</span><span class="sxs-lookup"><span data-stu-id="253c1-109">It also provides the properties <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> and <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, but these are not virtual.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="253c1-110">Möglicherweise kann ein Wert abgerufen werden, <xref:System.Xaml.Schema.XamlMemberInvoker> der eine XAML-Direktive darstellt, die in der System. XAML-Implementierung als private Klasse implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="253c1-110">It may be possible to obtain a <xref:System.Xaml.Schema.XamlMemberInvoker> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</span></span> <span data-ttu-id="253c1-111">Wenn Sie versuchen, <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> oder <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> für diesen Invoker aufzurufen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="253c1-111">If you attempt to call <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> or <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> on this invoker, an exception is thrown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="253c1-112">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="253c1-112">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="253c1-113">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="253c1-113">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="253c1-114">Der Standardimplementierung ist leer.</span><span class="sxs-lookup"><span data-stu-id="253c1-114">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="253c1-115">Dieser Konstruktor wird intern aufgerufen, um einen Wert für bereitzustellen <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A> .</span><span class="sxs-lookup"><span data-stu-id="253c1-115">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="253c1-116">Bei einer <xref:System.Xaml.Schema.XamlMemberInvoker> Unterklasse wird erwartet, dass Sie entweder die <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> Signatur für die Erstellung verwenden oder eine außer Kraft Setzung bereitstellen, die <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> als Basis aufruft.</span><span class="sxs-lookup"><span data-stu-id="253c1-116">For a <xref:System.Xaml.Schema.XamlMemberInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> as base.</span></span> <span data-ttu-id="253c1-117">Durch die Bereitstellung von <xref:System.Xaml.XamlMember> wird ein Standardmuster implementiert, bei dem <xref:System.Xaml.Schema.XamlMemberInvoker> unveränderlich ist.</span><span class="sxs-lookup"><span data-stu-id="253c1-117">Providing the <xref:System.Xaml.XamlMember> implements a default pattern where <xref:System.Xaml.Schema.XamlMemberInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlMemberInvoker : System.Xaml.XamlMember -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="new System.Xaml.Schema.XamlMemberInvoker member" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="253c1-118">Der <see cref="T:System.Xaml.XamlMember" />-Wert für den bestimmten XAML-Member, der für das <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist.</span><span class="sxs-lookup"><span data-stu-id="253c1-118">The <see cref="T:System.Xaml.XamlMember" /> value for the specific XAML member relevant to this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></param>
        <summary><span data-ttu-id="253c1-119">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Klasse auf der Grundlage eines angegebenen <see cref="T:System.Xaml.XamlMember" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="253c1-119">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="253c1-120">Dieser Konstruktor wird intern auf der Grundlage des aufgerufen, <xref:System.Xaml.XamlMember> wo <xref:System.Xaml.Schema.XamlMemberInvoker> für die Erstellung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="253c1-120">This constructor is called internally based on the <xref:System.Xaml.XamlMember> where the <xref:System.Xaml.Schema.XamlMemberInvoker> is used for construction.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="253c1-121"><paramref name="member" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="253c1-121"><paramref name="member" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj&#xA;override this.GetValue : obj -&gt; obj" Usage="xamlMemberInvoker.GetValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="253c1-122">Eine Instanz des Besitzertyps für den Member.</span><span class="sxs-lookup"><span data-stu-id="253c1-122">An instance of the owner type for the member.</span></span></param>
        <summary><span data-ttu-id="253c1-123">Ruft einen Wert der relevanten Eigenschaft von einer Instanz ab.</span><span class="sxs-lookup"><span data-stu-id="253c1-123">Gets a value of the relevant property from an instance.</span></span></summary>
        <returns><span data-ttu-id="253c1-124">Der angeforderte Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="253c1-124">The requested property value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="253c1-125"><paramref name="instance" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="253c1-125"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="253c1-126">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlMember" /> basiert.</span><span class="sxs-lookup"><span data-stu-id="253c1-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="253c1-127">**-oder-**</span><span class="sxs-lookup"><span data-stu-id="253c1-127">**-or-**</span></span>  
  
<span data-ttu-id="253c1-128">Diese Methode wurde für einen schreibgeschützten Member aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="253c1-128">Invoked this method on a write-only member.</span></span>  
  
 <span data-ttu-id="253c1-129">**-oder-**</span><span class="sxs-lookup"><span data-stu-id="253c1-129">**-or-**</span></span>  
  
 <span data-ttu-id="253c1-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="253c1-130"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="253c1-131">Die Basis Implementierung umfasst einen aufzurufenden internen <c>hilfsdrowifunknown</c>.</span><span class="sxs-lookup"><span data-stu-id="253c1-131">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="253c1-132">Dieses Hilfsprogramm löst immer in Fällen aus, in denen eine <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> auf einem unbekannten basiert <see cref="T:System.Xaml.XamlMember" /> . Dies schließt Fälle ein, in denen der <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> von <see cref="T:System.Xaml.XamlMember" /> ist <see langword="null" /> .</span><span class="sxs-lookup"><span data-stu-id="253c1-132">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="253c1-133">Die Basis Implementierung löst aus, wenn den Wert hat <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> <see langword="null" /> .</span><span class="sxs-lookup"><span data-stu-id="253c1-133">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="253c1-134">Bei statischen Eigenschaften ( <see cref="P:System.Reflection.MethodBase.IsStatic" /> ist <see langword="true" /> pro <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> ) Ruft die Standard Implementierung <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> auf <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> , <see langword="null" /> Wenn als erster Parameter übergeben und <paramref name="instance" /> in der zweiten verpackt werden.</span><span class="sxs-lookup"><span data-stu-id="253c1-134">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> passing <see langword="null" /> as the first parameter and packaged <paramref name="instance" /> in the second.</span></span> <span data-ttu-id="253c1-135">Bei nicht statischen Eigenschaften ruft Sie auf <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> und leitet den <paramref name="instance" /> als ersten Parameter und ein leeres Paket als zweiten Parameter weiter.</span><span class="sxs-lookup"><span data-stu-id="253c1-135">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards the <paramref name="instance" /> as the first parameter and an empty package as the second parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="xamlMemberInvoker.SetValue (instance, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="253c1-136">Eine Instanz des Besitzertyps für den Member.</span><span class="sxs-lookup"><span data-stu-id="253c1-136">An instance of the owner type for the member.</span></span></param>
        <param name="value"><span data-ttu-id="253c1-137">Der festzulegende Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="253c1-137">The property value to set.</span></span></param>
        <summary><span data-ttu-id="253c1-138">Legt einen Wert der relevanten Eigenschaft für eine Instanz fest.</span><span class="sxs-lookup"><span data-stu-id="253c1-138">Sets a value of the relevant property on an instance.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="253c1-139"><paramref name="instance" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="253c1-139"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="253c1-140">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlMember" /> basiert.</span><span class="sxs-lookup"><span data-stu-id="253c1-140">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlMember" />.</span></span>  
  
 <span data-ttu-id="253c1-141">**-oder-**</span><span class="sxs-lookup"><span data-stu-id="253c1-141">**-or-**</span></span>  
  
<span data-ttu-id="253c1-142">Diese Methode wurde für einen schreibgeschützten Member aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="253c1-142">Invoked this method on a read-only member.</span></span>  
  
 <span data-ttu-id="253c1-143">**-oder-**</span><span class="sxs-lookup"><span data-stu-id="253c1-143">**-or-**</span></span>  
  
 <span data-ttu-id="253c1-144"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="253c1-144"><see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="253c1-145">Die Basis Implementierung umfasst einen aufzurufenden internen <c>hilfsdrowifunknown</c>.</span><span class="sxs-lookup"><span data-stu-id="253c1-145">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="253c1-146">Dieses Hilfsprogramm löst immer in Fällen aus, in denen eine <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> auf einem unbekannten basiert <see cref="T:System.Xaml.XamlMember" /> . Dies schließt Fälle ein, in denen der <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> von <see cref="T:System.Xaml.XamlMember" /> ist <see langword="null" /> .</span><span class="sxs-lookup"><span data-stu-id="253c1-146">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlMember" />, which includes cases where the <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> of the <see cref="T:System.Xaml.XamlMember" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="253c1-147">Die Basis Implementierung löst aus, wenn den Wert hat <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> <see langword="null" /> .</span><span class="sxs-lookup"><span data-stu-id="253c1-147">The base implementation throws if <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="253c1-148">Bei statischen Eigenschaften ( <see cref="P:System.Reflection.MethodBase.IsStatic" /> ist <see langword="true" /> pro <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> ) Ruft die Standard Implementierung <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> auf, um <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> <see langword="null" /> als ersten Parameter und als ersten Parameter <paramref name="instance" /> und <paramref name="value" /> als zweiten Parameter zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="253c1-148">For static properties (<see cref="P:System.Reflection.MethodBase.IsStatic" /> is <see langword="true" /> per <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) the default implementation calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> on <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> passing <see langword="null" /> as the first parameter and packaging <paramref name="instance" /> and <paramref name="value" /> as the second parameter.</span></span> <span data-ttu-id="253c1-149">Bei nicht statischen Eigenschaften ruft Sie <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> <paramref name="instance" /> als ersten Parameter und als zweiten Parameter auf und leitet Sie weiter <paramref name="value" /> .</span><span class="sxs-lookup"><span data-stu-id="253c1-149">For non-static properties, it calls <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> and forwards <paramref name="instance" /> as first parameter and <paramref name="value" /> as second parameter.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult&#xA;override this.ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult" Usage="xamlMemberInvoker.ShouldSerializeValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="253c1-150">Die Instanz mit der Eigenschaft, die auf Dauerhaftigkeit überprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="253c1-150">The instance with the property to be examined for persistence.</span></span></param>
        <summary><span data-ttu-id="253c1-151">Gibt an, ob der Wert von Serialisierungsprozessen beibehalten werden muss.</span><span class="sxs-lookup"><span data-stu-id="253c1-151">Indicates whether the value needs to be persisted by serialization processes.</span></span></summary>
        <returns><span data-ttu-id="253c1-152">Ein Wert aus der Enumeration.</span><span class="sxs-lookup"><span data-stu-id="253c1-152">A value of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="253c1-153">Die Standard Implementierung gibt zurück <xref:System.Xaml.Schema.ShouldSerializeResult.Default> , wenn das XAML-Element selbst ist <xref:System.Xaml.XamlMember.IsUnknown%2A> , oder wenn keine relevante CLR-Reflektionsmethode `ShouldSerialize` für den zugrunde liegenden Member durch Standard Reflektion gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="253c1-153">The default implementation returns <xref:System.Xaml.Schema.ShouldSerializeResult.Default> if the XAML member itself is <xref:System.Xaml.XamlMember.IsUnknown%2A>, or if no CLR-reflection relevant `ShouldSerialize` method is found on the underlying member through default reflection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingGetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="253c1-154">Ruft das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode ab, die Werte für die Eigenschaft abruft, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist.</span><span class="sxs-lookup"><span data-stu-id="253c1-154">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="253c1-155">Das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode, die Werte für die Eigenschaft abruft, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="253c1-155">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that gets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="253c1-156">Diese Eigenschaft basiert auf <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> dem Aufruf von bei der Konstruktion <xref:System.Xaml.XamlMember> .</span><span class="sxs-lookup"><span data-stu-id="253c1-156">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="253c1-157">Für einen unbekannten <xref:System.Xaml.XamlMember> oder für Fälle, in denen <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> zurückgibt `null` , gibt diese Eigenschaft zurück `null` .</span><span class="sxs-lookup"><span data-stu-id="253c1-157">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="253c1-158">Ruft das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode ab, die Werte für die Eigenschaft festlegt, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist.</span><span class="sxs-lookup"><span data-stu-id="253c1-158">Gets the <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="253c1-159">Das <see cref="T:System.Reflection.MethodInfo" />-Objekt für die CLR-Methode, die Werte für die Eigenschaft festlegt, die für dieses <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt relevant ist, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="253c1-159">The <see cref="T:System.Reflection.MethodInfo" /> for the CLR method that sets values for the property that is relevant for this <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, or <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="253c1-160">Diese Eigenschaft basiert auf <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> dem Aufruf von bei der Konstruktion <xref:System.Xaml.XamlMember> .</span><span class="sxs-lookup"><span data-stu-id="253c1-160">This property relies on calling <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> on the constructing <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="253c1-161">Für einen unbekannten <xref:System.Xaml.XamlMember> oder für Fälle, in denen <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> zurückgibt `null` , gibt diese Eigenschaft zurück `null` .</span><span class="sxs-lookup"><span data-stu-id="253c1-161">For an unknown <xref:System.Xaml.XamlMember>, or for cases where <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> returns `null`, this property returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="253c1-162">Stellt einen statischen Wert bereit, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="253c1-162">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></summary>
        <value><span data-ttu-id="253c1-163">Ein statischer Wert, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />-Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="253c1-163">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="253c1-164">Wenn Sie diesen Wert für einen <xref:System.Xaml.Schema.XamlMemberInvoker> Parameter der System. XAML-API-API bereitstellen, wird der aufgerufene Code in der Regel Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="253c1-164">Supplying this value for a <xref:System.Xaml.Schema.XamlMemberInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
