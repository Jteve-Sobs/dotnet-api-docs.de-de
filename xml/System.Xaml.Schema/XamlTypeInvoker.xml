<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cab8b4ba43d15f1dca4640d35056935ab7791fdb" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70623892" /></Metadata><TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <TypeSignature Language="F#" Value="type XamlTypeInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d57c8-101">Stellt einen Erweiterungspunkt bereit, mit dem Instanzen eines XAML-Typs durch andere Methoden als Reflektion und Konstruktoren erstellt werden können.</span><span class="sxs-lookup"><span data-stu-id="d57c8-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-102">Der Zweck von <xref:System.Xaml.Schema.XamlTypeInvoker> besteht darin, ein erweiterbares XAML-Typsystem, Schema und eine funktionierende Laufzeit zu aktivieren, die nicht vollständig von CLR-Funktionen wie CLR-Attributen, Reflektionsinformationen durch <xref:System.Type> und <xref:System.Reflection.MemberInfo>usw. abhängig ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="d57c8-103">Unterklassen von <xref:System.Xaml.Schema.XamlTypeInvoker> werden als Eingabeparameter für die alternativen Konstruktoren von XAML-Schema Klassen verwendet, <xref:System.Xaml.XamlType>z. b..</span><span class="sxs-lookup"><span data-stu-id="d57c8-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="d57c8-104">Sie Unterklasse <xref:System.Xaml.XamlType> und <xref:System.Xaml.Schema.XamlTypeInvoker> übergeben Sie an den Basiskonstruktor.</span><span class="sxs-lookup"><span data-stu-id="d57c8-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="d57c8-105">Zusammen mit dem definieren <xref:System.Xaml.Schema.XamlTypeInvoker> von für den Konstruktor müssen Sie auch über Schreibungen für mindestens einige `Lookup` Methoden von <xref:System.Xaml.XamlType>bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="d57c8-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="d57c8-106"><xref:System.Xaml.Schema.XamlTypeInvoker>verfügt über eine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="d57c8-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="d57c8-107">Die Standard Implementierung folgt einem ähnlichen Modell wie die Standard Implementierung von XAML-Schema <xref:System.Xaml.XamlType> Typen <xref:System.Xaml.XamlMember>und: das CLR-Typsystem wird für Instanziierung, Werte und Lookups verwendet, einschließlich der <xref:System.Type> Verwendung von CLR- Attributen. <xref:System.Reflection.MemberInfo> usw.</span><span class="sxs-lookup"><span data-stu-id="d57c8-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="d57c8-108"><xref:System.Xaml.Schema.XamlTypeInvoker>stellt Methoden für grundlegende Instanziierung<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>() und Methoden bereit, die für Typen relevant <xref:System.Xaml.XamlType> sind, bei denen die eine Auflistung,<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>ein Wörterbuch oder ein Array darstellt (; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="d57c8-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d57c8-109">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d57c8-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d57c8-110">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d57c8-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-111">Die Standardimplementierung ist leer.</span><span class="sxs-lookup"><span data-stu-id="d57c8-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="d57c8-112">Dieser Konstruktor wird intern aufgerufen, um einen Wert für <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="d57c8-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="d57c8-113">Bei einer <xref:System.Xaml.Schema.XamlTypeInvoker> Unterklasse wird erwartet, dass Sie entweder die Signatur für <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> die Erstellung verwenden oder eine außer Kraft Setzung bereit <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> stellen, die als Basis aufruft.</span><span class="sxs-lookup"><span data-stu-id="d57c8-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="d57c8-114">Durch die <xref:System.Xaml.XamlType> Bereitstellung von wird ein <xref:System.Xaml.Schema.XamlTypeInvoker> Standardmuster implementiert, bei dem unveränderlich ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeInvoker : System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="new System.Xaml.Schema.XamlTypeInvoker type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d57c8-115">Der <see cref="T:System.Xaml.XamlType" />-Wert für den bestimmten XAML-Typ, der für das <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt relevant ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <summary><span data-ttu-id="d57c8-116">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Klasse auf der Grundlage eines angegebenen <see cref="T:System.Xaml.XamlType" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="d57c8-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-117">Dieser Konstruktor wird intern auf der Grundlage des <xref:System.Xaml.XamlType> aufgerufen, <xref:System.Xaml.Schema.XamlTypeInvoker> wo für die Erstellung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="d57c8-118">Der `type` hier angegebene ist für alle anderen Methodenaufrufe für <xref:System.Xaml.Schema.XamlTypeInvoker>relevant.</span><span class="sxs-lookup"><span data-stu-id="d57c8-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d57c8-119"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d57c8-119"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToCollection : obj * obj -&gt; unit&#xA;override this.AddToCollection : obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToCollection (instance, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d57c8-120">Eine Instanz des Typs, der von dem für die Erstellung dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> verwendeten <see cref="T:System.Xaml.XamlType" /> angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <param name="item"><span data-ttu-id="d57c8-121">Das Element, das hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d57c8-121">The item to add.</span></span></param>
        <summary><span data-ttu-id="d57c8-122">Fügt das bereitgestellte Element einer Instanz des Typs hinzu, der für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> relevant ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-123">Diese Methode sollte nur für eine <xref:System.Xaml.XamlType> aufgerufen werden, die eine Auflistung darstellt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d57c8-124">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlType" /> basiert.</span><span class="sxs-lookup"><span data-stu-id="d57c8-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="d57c8-125">**-oder-**</span><span class="sxs-lookup"><span data-stu-id="d57c8-125">**-or-**</span></span>  
  
<span data-ttu-id="d57c8-126">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, wobei der entsprechende Typ keine Sammlung ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d57c8-127"><paramref name="instance" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d57c8-127"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlSchemaException"><span data-ttu-id="d57c8-128"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gibt <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="d57c8-128"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d57c8-129">Die Basis Implementierung umfasst einen aufzurufenden internen <c>hilfsdrowifunknown</c>.</span><span class="sxs-lookup"><span data-stu-id="d57c8-129">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="d57c8-130">Dieses Hilfsprogramm löst immer in Fällen aus <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> , in denen eine auf <see cref="T:System.Xaml.XamlType" />einem unbekannten basiert. Dies schließt <see cref="P:System.Xaml.XamlType.UnderlyingType" /> <see cref="T:System.Xaml.XamlType" /> Fälle ein, <see langword="null" />in denen der von ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-130">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d57c8-131">Intern ruft <see cref="P:System.Xaml.XamlType.IsCollection" />die Basis Implementierung auf und löst aus, wenn das Ergebnis <see langword="false" />ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-131">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.</span></span>  
  
<span data-ttu-id="d57c8-132">Die Basis Implementierung verwendet nicht notwendigerweise eine eigene <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="d57c8-132">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span></span> <span data-ttu-id="d57c8-133">Zuerst wird versucht, eine <paramref name="instance" /> Umwandlung <see cref="T:System.Collections.IList" /> von in auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d57c8-133">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted.</span></span> <span data-ttu-id="d57c8-134">Wenn dies erfolgreich ist, <see cref="M:System.Collections.IList.Add(System.Object)" /> wird ein-Vorgang durchgeführt, und die-Methode gibt zurück.</span><span class="sxs-lookup"><span data-stu-id="d57c8-134">If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns.</span></span> <span data-ttu-id="d57c8-135">Andernfalls verwendet die Basis Implementierung <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> CLR, um die zugrunde liegende <see langword="Add" /> Methode aufzurufen, wie von einem Aufruf von <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> für <paramref name="" />diese <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />abgerufen.</span><span class="sxs-lookup"><span data-stu-id="d57c8-135">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span>  
  
<span data-ttu-id="d57c8-136">In der Basis Implementierung wird auf dieser Ebene keine Ausnahme ausgelöst, <paramref name="item" /> Wenn <see langword="null" />ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-136">In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />.</span></span> <span data-ttu-id="d57c8-137">Es ist immer noch möglich, dass <see langword="Add" /> die zugrunde liegende Methode eine Ausnahme auslöst, wenn Sie aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-137">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span></span> <span data-ttu-id="d57c8-138">Weitere Lauf Zeit Ausnahmen sind möglich, <see cref="P:System.Xaml.XamlType.ItemType" /> wenn kein gültiges Ergebnis zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-138">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToDictionary : obj * obj * obj -&gt; unit&#xA;override this.AddToDictionary : obj * obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToDictionary (instance, key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d57c8-139">Eine Instanz des Typs, der von dem für die Erstellung dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> verwendeten <see cref="T:System.Xaml.XamlType" /> angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-139">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <param name="key"><span data-ttu-id="d57c8-140">Wörterbuchschlüssel für das hinzuzufügende Element.</span><span class="sxs-lookup"><span data-stu-id="d57c8-140">Dictionary key for the item to add.</span></span></param>
        <param name="item"><span data-ttu-id="d57c8-141">Der hinzuzufügende Elementwert.</span><span class="sxs-lookup"><span data-stu-id="d57c8-141">The item value to add.</span></span></param>
        <summary><span data-ttu-id="d57c8-142">Fügt den bereitgestellten Schlüssel und den Elementwert einer Instanz des Typs hinzu, der für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> relevant ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-142">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-143">Diese Methode sollte nur für eine <xref:System.Xaml.XamlType> aufgerufen werden, die ein Wörterbuch darstellt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-143">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d57c8-144">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlType" /> basiert.</span><span class="sxs-lookup"><span data-stu-id="d57c8-144">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="d57c8-145">**-oder-**</span><span class="sxs-lookup"><span data-stu-id="d57c8-145">**-or-**</span></span>  
  
<span data-ttu-id="d57c8-146">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, wobei der entsprechende Typ kein Wörterbuch ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-146">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d57c8-147"><paramref name="instance" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d57c8-147"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Xaml.XamlSchemaException"><span data-ttu-id="d57c8-148"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gibt <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="d57c8-148"><see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d57c8-149">Die Basis Implementierung umfasst einen aufzurufenden internen <c>hilfsdrowifunknown</c>.</span><span class="sxs-lookup"><span data-stu-id="d57c8-149">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="d57c8-150">Dieses Hilfsprogramm löst immer in Fällen aus <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> , in denen eine auf <see cref="T:System.Xaml.XamlType" />einem unbekannten basiert. Dies schließt <see cref="P:System.Xaml.XamlType.UnderlyingType" /> <see cref="T:System.Xaml.XamlType" /> Fälle ein, <see langword="null" />in denen der von ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-150">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d57c8-151">Intern ruft <see cref="P:System.Xaml.XamlType.IsDictionary" />die Basis Implementierung auf und löst aus, wenn das Ergebnis <see langword="false" />ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-151">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.</span></span>  
  
<span data-ttu-id="d57c8-152">Die Basis Implementierung verwendet nicht notwendigerweise eine eigene <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="d57c8-152">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span></span> <span data-ttu-id="d57c8-153">Zuerst wird versucht, eine <paramref name="instance" /> Umwandlung <see cref="T:System.Collections.IDictionary" /> von in auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d57c8-153">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted.</span></span> <span data-ttu-id="d57c8-154">Wenn dies erfolgreich ist, <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> wird ein-Vorgang durchgeführt, und die-Methode gibt zurück.</span><span class="sxs-lookup"><span data-stu-id="d57c8-154">If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns.</span></span> <span data-ttu-id="d57c8-155">Andernfalls verwendet die Basis Implementierung <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> CLR, um die zugrunde liegende <see langword="Add" /> Methode aufzurufen, wie von einem Aufruf von <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> für <paramref name="" />diese <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />abgerufen.</span><span class="sxs-lookup"><span data-stu-id="d57c8-155">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span>  
  
<span data-ttu-id="d57c8-156">In der Basis Implementierung wird auf dieser Ebene keine Ausnahme ausgelöst, <paramref name="item" /> Wenn <paramref name="key" /> oder <see langword="null" />sind.</span><span class="sxs-lookup"><span data-stu-id="d57c8-156">In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />.</span></span> <span data-ttu-id="d57c8-157">Es ist immer noch möglich, dass <see langword="Add" /> die zugrunde liegende Methode eine Ausnahme auslöst, wenn Sie aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-157">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span></span> <span data-ttu-id="d57c8-158">Weitere Lauf Zeit Ausnahmen sind möglich, <see cref="P:System.Xaml.XamlType.ItemType" /> wenn kein gültiges Ergebnis zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-158">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : obj[] -&gt; obj&#xA;override this.CreateInstance : obj[] -&gt; obj" Usage="xamlTypeInvoker.CreateInstance arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="d57c8-159">Ein Objektarray, durch das die <see langword="x:ConstructorArgs" /> für die Instanz angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="d57c8-159">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span></span> <span data-ttu-id="d57c8-160">Ist möglicherweise <see langword="null" /> für Typen, die nicht <see langword="x:ConstructorArgs" /> erfordern oder verwenden.</span><span class="sxs-lookup"><span data-stu-id="d57c8-160">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span></span></param>
        <summary><span data-ttu-id="d57c8-161">Erstellt eine Objektinstanz auf Grundlage des durch Konstruktion initiierten <see cref="T:System.Xaml.XamlType" />-Objekts für dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-161">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <returns><span data-ttu-id="d57c8-162">Die erstellte Instanz auf Grundlage des durch Konstruktion initiierten <see cref="T:System.Xaml.XamlType" />-Objekts für dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-162">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d57c8-163">Ein Konstruktor konnte nicht aufgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="d57c8-163">Could not resolve a constructor.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d57c8-164">Die Basis Implementierung umfasst einen aufzurufenden internen <c>hilfsdrowifunknown</c>.</span><span class="sxs-lookup"><span data-stu-id="d57c8-164">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="d57c8-165">Dieses Hilfsprogramm löst immer in Fällen aus <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> , in denen eine auf <see cref="T:System.Xaml.XamlType" />einem unbekannten basiert. Dies schließt <see cref="P:System.Xaml.XamlType.UnderlyingType" /> <see cref="T:System.Xaml.XamlType" /> Fälle ein, <see langword="null" />in denen der von ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-165">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo&#xA;override this.GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetAddMethod contentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType"><span data-ttu-id="d57c8-166"><see cref="T:System.Xaml.XamlType" /> für den Elementtyp, der von der <see langword="Add" />-Methode verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-166"><see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span></span></param>
        <summary><span data-ttu-id="d57c8-167">Gibt die relevante <see langword="Add" />-Methode für ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt zurück, das relevant für eine Auflistung oder ein Wörterbuch ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-167">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span></span></summary>
        <returns><span data-ttu-id="d57c8-168">CLR-bezogene <see cref="T:System.Reflection.MethodInfo" />-Informationen für die <see langword="Add" />-Methode oder NULL.</span><span class="sxs-lookup"><span data-stu-id="d57c8-168">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-169">Diese Methode sollte für `null` Fälle zurückgeben, <xref:System.Xaml.XamlType> in denen <xref:System.Xaml.Schema.XamlTypeInvoker> der für dieses keine beschreibbare Auflistung oder dieses Wörterbuch ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-169">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="d57c8-170">Insbesondere sollte für Fälle `null` zurückgeben, <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> in `None`denen von zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-170">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d57c8-171">Wenn Sie nicht auf ein vollständig vertrauenswürdiges XAML-Typsystem zugreifen, bietet diese Methode die Möglichkeit <xref:System.Reflection.MethodInfo> , den Aufrufern falsche Informationen zu melden.</span><span class="sxs-lookup"><span data-stu-id="d57c8-171">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d57c8-172"><paramref name="contentType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d57c8-172"><paramref name="contentType" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d57c8-173">Die Basis Implementierung gibt <see langword="null" /> für Fälle zurück <see langword="null" /> <see cref="P:System.Xaml.XamlType.UnderlyingType" /> <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> , in <see cref="T:System.Xaml.XamlType" /> denen eine auf einem unbekannten basiert. Dies schließt Fälle ein, in denen der von ist. <see cref="T:System.Xaml.XamlType" /></span><span class="sxs-lookup"><span data-stu-id="d57c8-173">The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span> <span data-ttu-id="d57c8-174">Außerdem gibt Sie <see langword="null" /> zurück <see cref="P:System.Xaml.XamlType.ItemType" /> , <see langword="null" />wenn den Wert hat.</span><span class="sxs-lookup"><span data-stu-id="d57c8-174">It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d57c8-175">XAML-Auflistungen verfügen möglich <see langword="Add" /> erweise über mehr als eine Methode, da eine XAML-Auflistung möglicherweise mehr als <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />einen Inhaltstyp unterstützt (siehe), oder <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> finden Sie Informationen zu einer Implementierung dieses Konzepts in WPF.</span><span class="sxs-lookup"><span data-stu-id="d57c8-175">XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF).</span></span> <span data-ttu-id="d57c8-176">Die Standard Implementierung verwendet die interne Logik, um die beste Entsprechung basierend auf den Signaturen und dem Typ des <paramref name="contentType" />angegebenen zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="d57c8-176">The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetEnumeratorMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d57c8-177">Gibt ein Objekt zurück, das eine Methode darstellt, die Enumerationen über Elemente ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="d57c8-177">Returns an object representing a method that can enumerate over items.</span></span></summary>
        <returns><span data-ttu-id="d57c8-178"><see cref="T:System.Reflection.MethodInfo" /> für eine Enumeratormethode oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d57c8-178"><see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-179">Sollte für `null` Fälle zurückgeben <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> , `None`in denen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-179">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d57c8-180">Wenn Sie nicht auf ein vollständig vertrauenswürdiges XAML-Typsystem zugreifen, bietet diese Methode die Möglichkeit <xref:System.Reflection.MethodInfo> , den Aufrufern falsche Informationen zu melden.</span><span class="sxs-lookup"><span data-stu-id="d57c8-180">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d57c8-181">Die Basis Implementierung ruft eine interne Hilfsmethode auf.</span><span class="sxs-lookup"><span data-stu-id="d57c8-181">The base implementation calls an internal helper method.</span></span> <span data-ttu-id="d57c8-182">Diese Hilfsmethode <see langword="null" /> gibt für Fälle zurück <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> <see cref="T:System.Xaml.XamlType" /> <see cref="P:System.Xaml.XamlType.UnderlyingType" /> , in <see langword="null" /> denen eine auf einem unbekannten basiert. Dies schließt Fälle ein, in denen der von ist. <see cref="T:System.Xaml.XamlType" /></span><span class="sxs-lookup"><span data-stu-id="d57c8-182">That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span> <span data-ttu-id="d57c8-183">Er gibt auch <see langword="null" /> für Fälle zurück <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> , <see langword="None" />in denen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-183">It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetItems : obj -&gt; System.Collections.IEnumerator&#xA;override this.GetItems : obj -&gt; System.Collections.IEnumerator" Usage="xamlTypeInvoker.GetItems instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="d57c8-184">Eine Instanz des Typs, der von dem für die Erstellung dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> verwendeten <see cref="T:System.Xaml.XamlType" /> angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-184">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></param>
        <summary><span data-ttu-id="d57c8-185">Gibt ein <see cref="T:System.Collections.IEnumerator" />-Objekt zurück, das den Satz der Elemente darstellt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-185">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span></span></summary>
        <returns><span data-ttu-id="d57c8-186">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d57c8-186">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d57c8-187">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlType" /> basiert.</span><span class="sxs-lookup"><span data-stu-id="d57c8-187">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span></span>  
  
 <span data-ttu-id="d57c8-188">**-oder-**</span><span class="sxs-lookup"><span data-stu-id="d57c8-188">**-or-**</span></span>  
  
<span data-ttu-id="d57c8-189">Rief diese Methode für ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> auf, wobei der relevante Typ keine Auflistung bzw. kein Wörterbuch darstellt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-189">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d57c8-190"><paramref name="instance" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d57c8-190"><paramref name="instance" /> is <see langword="null" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="d57c8-191">Die Basis Implementierung umfasst einen aufzurufenden internen <c>hilfsdrowifunknown</c>.</span><span class="sxs-lookup"><span data-stu-id="d57c8-191">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span></span> <span data-ttu-id="d57c8-192">Dieses Hilfsprogramm löst immer in Fällen aus <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> , in denen eine auf <see cref="T:System.Xaml.XamlType" />einem unbekannten basiert. Dies schließt <see cref="P:System.Xaml.XamlType.UnderlyingType" /> <see cref="T:System.Xaml.XamlType" /> Fälle ein, <see langword="null" />in denen der von ist.</span><span class="sxs-lookup"><span data-stu-id="d57c8-192">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="d57c8-193">Die Basis Implementierung verwendet nicht notwendigerweise eine eigene <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="d57c8-193">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation.</span></span> <span data-ttu-id="d57c8-194">Zuerst wird versucht, eine <paramref name="instance" /> Umwandlung <see cref="T:System.Collections.IEnumerable" /> von in auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d57c8-194">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted.</span></span> <span data-ttu-id="d57c8-195">Wenn dies erfolgreich ist, <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> wird ein-Vorgang durchgeführt, und die-Methode gibt diesen Rückgabewert zurück.</span><span class="sxs-lookup"><span data-stu-id="d57c8-195">If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value.</span></span> <span data-ttu-id="d57c8-196">Andernfalls verwendet die Basis Implementierung <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> CLR, um die zugrunde liegende <see langword="GetEnumerator" /> Methode aufzurufen, wie von einem Aufruf von <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> für <paramref name="" />diese <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />abgerufen.</span><span class="sxs-lookup"><span data-stu-id="d57c8-196">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetMarkupExtensionHandler : EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d57c8-197">Ruft den zu verwendenden Handler ab, wenn ein <see cref="T:System.Xaml.XamlObjectWriter" /> eine implementierte <see cref="T:System.Windows.Markup.MarkupExtension" /> aufruft.</span><span class="sxs-lookup"><span data-stu-id="d57c8-197">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span></span></summary>
        <value><span data-ttu-id="d57c8-198">Eine Handlerimplementierung, in der dieser Fall behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-198">A handler implementation that handles this case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-199">Der Ereignishandler basiert auf <xref:System.EventHandler%601> <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> eingeschränkten Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="d57c8-199">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="d57c8-200">Der zurückgegebene Wert ruft <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> das Verhalten <xref:System.Xaml.XamlType> des auf, <xref:System.Xaml.Schema.XamlTypeInvoker> auf dem basiert.</span><span class="sxs-lookup"><span data-stu-id="d57c8-200">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="d57c8-201">Der Rückgabewert ist `null` für einen <xref:System.Xaml.Schema.XamlTypeInvoker> , der auf einem unbekannten <xref:System.Xaml.XamlType>basiert.</span><span class="sxs-lookup"><span data-stu-id="d57c8-201">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetTypeConverterHandler : EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d57c8-202">Ruft den zu verwendenden Handler ab, wenn ein <see cref="T:System.Xaml.XamlObjectWriter" />-Objekt einen Aufruf an ein CLR-implementiertes <see cref="T:System.ComponentModel.TypeConverter" />-Objekt richtet.</span><span class="sxs-lookup"><span data-stu-id="d57c8-202">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span></span></summary>
        <value><span data-ttu-id="d57c8-203">Eine Handlerimplementierung, in der dieser Fall behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="d57c8-203">A handler implementation that handles this case.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-204">Der Ereignishandler basiert auf <xref:System.EventHandler%601> <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> eingeschränkten Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="d57c8-204">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="d57c8-205">Der zurückgegebene Wert ruft <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> das Verhalten <xref:System.Xaml.XamlType> des auf, <xref:System.Xaml.Schema.XamlTypeInvoker> auf dem basiert.</span><span class="sxs-lookup"><span data-stu-id="d57c8-205">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="d57c8-206">Der Rückgabewert ist `null` für einen <xref:System.Xaml.Schema.XamlTypeInvoker> , der auf einem unbekannten <xref:System.Xaml.XamlType>basiert.</span><span class="sxs-lookup"><span data-stu-id="d57c8-206">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d57c8-207">Stellt einen statischen Wert bereit, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-207">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></summary>
        <value><span data-ttu-id="d57c8-208">Ein statischer Wert, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt darstellt.</span><span class="sxs-lookup"><span data-stu-id="d57c8-208">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d57c8-209">Wenn Sie diesen Wert für <xref:System.Xaml.Schema.XamlTypeInvoker> einen Parameter der System. XAML-API-API bereitstellen, wird der aufgerufene Code in der Regel Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="d57c8-209">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
