<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bd266704ee3fe75b84f3b0e3aa578f64c1e8009d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36445043" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <TypeSignature Language="F#" Value="type XamlTypeInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fa16c-101">Stellt einen Erweiterungspunkt bereit, mit dem Instanzen eines XAML-Typs durch andere Methoden als Reflektion und Konstruktoren erstellt werden können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fa16c-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-102">Der Zweck der <xref:System.Xaml.Schema.XamlTypeInvoker> ist ein erweiterbares XAML-Typsystem, Schema und eine Laufzeit, die nicht als vollständig zu CLR-Funktionen wie Reflektionsinformationen über CLR-Attributen basiert funktionierende ermöglichen <xref:System.Type> und <xref:System.Reflection.MemberInfo>und so weiter.</span><span class="sxs-lookup"><span data-stu-id="fa16c-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="fa16c-103">Unterklassen des <xref:System.Xaml.Schema.XamlTypeInvoker> dienen als Eingabeparameter für die alternativen Konstruktoren von XAML-Schema-Klassen wie z. B. <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="fa16c-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="fa16c-104">Sie eine Unterklasse von <xref:System.Xaml.XamlType> und übergeben Sie die <xref:System.Xaml.Schema.XamlTypeInvoker> über des Basiskonstruktors.</span><span class="sxs-lookup"><span data-stu-id="fa16c-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="fa16c-105">Zusammen mit definieren eine <xref:System.Xaml.Schema.XamlTypeInvoker> des Konstruktors, müssen Sie auch angeben Außerkraftsetzungen für mindestens einige der `Lookup` Methoden der <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="fa16c-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="fa16c-106"><xref:System.Xaml.Schema.XamlTypeInvoker> ist eine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="fa16c-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="fa16c-107">Die standardmäßige Implementierung folgt auf ein ähnliches Modell, um die standardmäßige Implementierung des XAML-Schematypen <xref:System.Xaml.XamlType> und <xref:System.Xaml.XamlMember>: das CLR-Typsystem wird verwendet, für die Instanziierung, Werte und Suchvorgänge, einschließlich der Verwendung von CLR-Attributen <xref:System.Type> und <xref:System.Reflection.MemberInfo>und so weiter.</span><span class="sxs-lookup"><span data-stu-id="fa16c-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="fa16c-108"><xref:System.Xaml.Schema.XamlTypeInvoker> Stellt Methoden für grundlegende Instanziierung (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) und Methoden, die relevant für Typen sind, in denen die <xref:System.Xaml.XamlType> stellt eine Auflistung, Wörterbuch oder ein Array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="fa16c-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fa16c-109">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa16c-110">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-111">Die Standardimplementierung ist leer.</span><span class="sxs-lookup"><span data-stu-id="fa16c-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="fa16c-112">Dieser Konstruktor wird intern aufgerufen, um einen Wert für <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="fa16c-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="fa16c-113">Für eine <xref:System.Xaml.Schema.XamlTypeInvoker> -Unterklasse, die es wird erwartet, dass Sie entweder die <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> Signatur für die Konstruktion, oder geben Sie eine Außerkraftsetzung, die aufruft <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> als Basis.</span><span class="sxs-lookup"><span data-stu-id="fa16c-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="fa16c-114">Bereitstellen der <xref:System.Xaml.XamlType> ein Standardmuster implementiert Where <xref:System.Xaml.Schema.XamlTypeInvoker> ist unveränderlich.</span><span class="sxs-lookup"><span data-stu-id="fa16c-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlTypeInvoker : System.Xaml.XamlType -&gt; System.Xaml.Schema.XamlTypeInvoker" Usage="new System.Xaml.Schema.XamlTypeInvoker type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="fa16c-115">Der <see cref="T:System.Xaml.XamlType" />-Wert für den bestimmten XAML-Typ, der für das <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt relevant ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa16c-116">Initialisiert eine neue Instanz der <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Klasse auf der Grundlage eines angegebenen <see cref="T:System.Xaml.XamlType" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-117">Intern auf Grundlage dieser Konstruktor wird aufgerufen, die <xref:System.Xaml.XamlType> , in dem die <xref:System.Xaml.Schema.XamlTypeInvoker> zur Erstellung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fa16c-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="fa16c-118">Die `type` bereitgestellte hier relevant für ist alle anderen Methodenaufrufe für <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="fa16c-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa16c-119">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-119">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToCollection : obj * obj -&gt; unit&#xA;override this.AddToCollection : obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToCollection (instance, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="fa16c-120">Eine Instanz des Typs, der von dem für die Erstellung dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> verwendeten <see cref="T:System.Xaml.XamlType" /> angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="fa16c-121">Das Element, das hinzugefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-121">The item to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa16c-122">Fügt das bereitgestellte Element einer Instanz des Typs hinzu, der für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> relevant ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-123">Rufen Sie diese Methode nur auf eine <xref:System.Xaml.XamlType> , die eine Auflistung darstellt.</span><span class="sxs-lookup"><span data-stu-id="fa16c-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fa16c-124">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlType" /> basiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="fa16c-125">**Oder:**  Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, wobei der entsprechende Typ keine Sammlung ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-125">**-or-**  Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa16c-126">
            <paramref name="instance" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-126">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="fa16c-127">
            <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gibt <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-127">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fa16c-128">
            <para>Die grundlegende Implementierung enthält einen Aufruf an die interne Hilfsmethode <c>ThrowIfUnknown</c>. Dieses Hilfsprogramm löst immer für Fälle, in denen ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basiert auf einem unbekannten <see cref="T:System.Xaml.XamlType" />, inklusive der Fälle, in denen die <see cref="P:System.Xaml.XamlType.UnderlyingType" /> von der <see cref="T:System.Xaml.XamlType" /> ist <see langword="null" />.  Intern ruft die basisimplementierung <see cref="P:System.Xaml.XamlType.IsCollection" />, und löst aus, wenn das Ergebnis ist <see langword="false" />.  Die grundlegende Implementierung nicht notwendigerweise verwendet eine eigene <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> Implementierung. Zuerst wird eine Umwandlung von <paramref name="instance" /> auf <see cref="T:System.Collections.IList" /> versucht wird. Wenn dies erfolgreich ist, einen Aufruf von <see cref="M:System.Collections.IList.Add(System.Object)" /> erfolgt und gibt die Methode zurück. Andernfalls verwendet die grundlegende Implementierung CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> zum Aufrufen des zugrunde liegenden <see langword="Add" /> -Methode, wie von einem Aufruf abgerufen <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> dafür <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  In der basisimplementierung wird auf dieser Ebene vorhanden, wenn keine Ausnahme ausgelöst <paramref name="item" /> ist <see langword="null" />. Es ist weiterhin möglich, die die zugrunde liegende <see langword="Add" /> Methode löst eine Ausnahme beim Aufrufen. Andere zur Laufzeitausnahmen sind möglich, wenn <see cref="P:System.Xaml.XamlType.ItemType" /> kein gültiges Ergebnis zurückgibt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-128">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.  Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.  The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation. First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted. If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns. Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />. It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked. Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member AddToDictionary : obj * obj * obj -&gt; unit&#xA;override this.AddToDictionary : obj * obj * obj -&gt; unit" Usage="xamlTypeInvoker.AddToDictionary (instance, key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="fa16c-129">Eine Instanz des Typs, der von dem für die Erstellung dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> verwendeten <see cref="T:System.Xaml.XamlType" /> angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-129">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="fa16c-130">Wörterbuchschlüssel für das hinzuzufügende Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-130">Dictionary key for the item to add.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="fa16c-131">Der hinzuzufügende Elementwert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-131">The item value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa16c-132">Fügt den bereitgestellten Schlüssel und den Elementwert einer Instanz des Typs hinzu, der für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> relevant ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-132">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-133">Rufen Sie diese Methode nur auf eine <xref:System.Xaml.XamlType> , die ein Wörterbuch darstellt.</span><span class="sxs-lookup"><span data-stu-id="fa16c-133">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fa16c-134">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlType" /> basiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-134">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="fa16c-135">**Oder:**  Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, wobei der entsprechende Typ kein Wörterbuch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-135">**-or-**  Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa16c-136">
            <paramref name="instance" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-136">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="fa16c-137">
            <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> für diesen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> gibt <see langword="null" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-137">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fa16c-138">
            <para>Die grundlegende Implementierung enthält einen Aufruf an die interne Hilfsmethode <c>ThrowIfUnknown</c>. Dieses Hilfsprogramm löst immer für Fälle, in denen ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basiert auf einem unbekannten <see cref="T:System.Xaml.XamlType" />, inklusive der Fälle, in denen die <see cref="P:System.Xaml.XamlType.UnderlyingType" /> von der <see cref="T:System.Xaml.XamlType" /> ist <see langword="null" />.  Intern ruft die basisimplementierung <see cref="P:System.Xaml.XamlType.IsDictionary" />, und löst aus, wenn das Ergebnis ist <see langword="false" />.  Die grundlegende Implementierung nicht notwendigerweise verwendet eine eigene <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> Implementierung. Zuerst wird eine Umwandlung von <paramref name="instance" /> auf <see cref="T:System.Collections.IDictionary" /> versucht wird. Wenn dies erfolgreich ist, einen Aufruf von <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> erfolgt und gibt die Methode zurück. Andernfalls verwendet die grundlegende Implementierung CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> zum Aufrufen des zugrunde liegenden <see langword="Add" /> -Methode, wie von einem Aufruf abgerufen <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> dafür <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  In der basisimplementierung wird auf dieser Ebene vorhanden, wenn keine Ausnahme ausgelöst <paramref name="item" /> oder <paramref name="key" /> sind <see langword="null" />. Es ist weiterhin möglich, die die zugrunde liegende <see langword="Add" /> Methode löst eine Ausnahme beim Aufrufen. Andere zur Laufzeitausnahmen sind möglich, wenn <see cref="P:System.Xaml.XamlType.ItemType" /> kein gültiges Ergebnis zurückgibt.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-138">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.  Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.  The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation. First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted. If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns. Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.  In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />. It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked. Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberSignature Language="F#" Value="abstract member CreateInstance : obj[] -&gt; obj&#xA;override this.CreateInstance : obj[] -&gt; obj" Usage="xamlTypeInvoker.CreateInstance arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="fa16c-139">Ein Objektarray, durch das die <see langword="x:ConstructorArgs" /> für die Instanz angegeben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-139">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span>
          </span>
          <span data-ttu-id="fa16c-140">Ist möglicherweise <see langword="null" /> für Typen, die nicht <see langword="x:ConstructorArgs" /> erfordern oder verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-140">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa16c-141">Erstellt eine Objektinstanz auf Grundlage des durch Konstruktion initiierten <see cref="T:System.Xaml.XamlType" />-Objekts für dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-141">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa16c-142">Die erstellte Instanz auf Grundlage des durch Konstruktion initiierten <see cref="T:System.Xaml.XamlType" />-Objekts für dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-142">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="fa16c-143">Ein Konstruktor konnte nicht aufgelöst werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-143">Could not resolve a constructor.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fa16c-144">
            <para>Die grundlegende Implementierung enthält einen Aufruf an die interne Hilfsmethode <c>ThrowIfUnknown</c>. Dieses Hilfsprogramm löst immer für Fälle, in denen ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basiert auf einem unbekannten <see cref="T:System.Xaml.XamlType" />, inklusive der Fälle, in denen die <see cref="P:System.Xaml.XamlType.UnderlyingType" /> von der <see cref="T:System.Xaml.XamlType" /> ist <see langword="null" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-144">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo&#xA;override this.GetAddMethod : System.Xaml.XamlType -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetAddMethod contentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="fa16c-145">
            <see cref="T:System.Xaml.XamlType" /> für den Elementtyp, der von der <see langword="Add" />-Methode verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-145">
              <see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa16c-146">Gibt die relevante <see langword="Add" />-Methode für ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt zurück, das relevant für eine Auflistung oder ein Wörterbuch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-146">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa16c-147">CLR-bezogene <see cref="T:System.Reflection.MethodInfo" />-Informationen für die <see langword="Add" />-Methode oder NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-147">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-148">Diese Methode sollte zurückgeben `null` für Fälle, in denen die <xref:System.Xaml.XamlType> für diesen <xref:System.Xaml.Schema.XamlTypeInvoker> ist nicht überschreibbare Auflistung oder ein Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="fa16c-148">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="fa16c-149">Insbesondere sollten zurückgeben `null` für Fälle, in denen <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> gibt `None`.</span><span class="sxs-lookup"><span data-stu-id="fa16c-149">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fa16c-150">Wenn Sie nicht auf ein voll vertrauenswürdiges XAML-Typsystem zugreifen, wird diese Methode hat die Möglichkeit, den Bericht "false" <xref:System.Reflection.MethodInfo> Informationen zu Aufrufern.</span><span class="sxs-lookup"><span data-stu-id="fa16c-150">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa16c-151">
            <paramref name="contentType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-151">
              <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fa16c-152">
            <para>Gibt die grundlegende Implementierung <see langword="null" /> für Fälle, in denen ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basiert auf einem unbekannten <see cref="T:System.Xaml.XamlType" />, inklusive der Fälle, in denen die <see cref="P:System.Xaml.XamlType.UnderlyingType" /> von der <see cref="T:System.Xaml.XamlType" /> ist <see langword="null" />. Sie gibt überdies <see langword="null" /> Wenn <see cref="P:System.Xaml.XamlType.ItemType" /> ist <see langword="null" />.  XAML-Auflistungen haben möglicherweise mehrere <see langword="Add" /> -Methode, da eine XAML-Auflistung möglicherweise mehr als ein Inhaltstyp unterstützen (finden Sie unter <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, oder finden Sie unter <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> Informationen über eine Implementierung dieses Konzept in WPF). Die Standardimplementierung verwendet internen Logik, um die beste Übereinstimmung basierend auf den Signaturen und der Typ des angegebenen zurückzugeben <paramref name="contentType" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-152">
              <para>The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />. It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.  XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF). The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetEnumeratorMethod : unit -&gt; System.Reflection.MethodInfo" Usage="xamlTypeInvoker.GetEnumeratorMethod " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fa16c-153">Gibt ein Objekt zurück, das eine Methode darstellt, die Enumerationen über Elemente ermöglicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-153">Returns an object representing a method that can enumerate over items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa16c-154">
            <see cref="T:System.Reflection.MethodInfo" /> für eine Enumeratormethode oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-154">
              <see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-155">Sollte zurückgeben `null` für Fälle, in denen <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> gibt `None`.</span><span class="sxs-lookup"><span data-stu-id="fa16c-155">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fa16c-156">Wenn Sie nicht auf ein voll vertrauenswürdiges XAML-Typsystem zugreifen, wird diese Methode hat die Möglichkeit, den Bericht "false" <xref:System.Reflection.MethodInfo> Informationen zu Aufrufern.</span><span class="sxs-lookup"><span data-stu-id="fa16c-156">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="fa16c-157">
            <para>Die grundlegende Implementierung ruft eine interne Hilfsmethode. Dieses Hilfsprogramm gibt <see langword="null" /> für Fälle, in denen ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basiert auf einem unbekannten <see cref="T:System.Xaml.XamlType" />, inklusive der Fälle, in denen die <see cref="P:System.Xaml.XamlType.UnderlyingType" /> von der <see cref="T:System.Xaml.XamlType" /> ist <see langword="null" />. Sie gibt überdies <see langword="null" /> für Fälle, in denen <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> gibt <see langword="None" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-157">
              <para>The base implementation calls an internal helper method. That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />. It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetItems : obj -&gt; System.Collections.IEnumerator&#xA;override this.GetItems : obj -&gt; System.Collections.IEnumerator" Usage="xamlTypeInvoker.GetItems instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="fa16c-158">Eine Instanz des Typs, der von dem für die Erstellung dieses <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> verwendeten <see cref="T:System.Xaml.XamlType" /> angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-158">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fa16c-159">Gibt ein <see cref="T:System.Collections.IEnumerator" />-Objekt zurück, das den Satz der Elemente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-159">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fa16c-160">Ein <see cref="T:System.Collections.IEnumerator" />-Objekt oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-160">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="fa16c-161">Diese Methode wurde für einen <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, der auf einem unbekannten <see cref="T:System.Xaml.XamlType" /> basiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-161">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="fa16c-162">**Oder:**  Diese Methode wurde für <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> aufgerufen, wobei der entsprechende Typ keine Auflistung bzw. kein Wörterbuch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-162">**-or-**  Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="fa16c-163">
            <paramref name="instance" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-163">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="fa16c-164">
            <para>Die grundlegende Implementierung enthält einen Aufruf an die interne Hilfsmethode <c>ThrowIfUnknown</c>. Dieses Hilfsprogramm löst immer für Fälle, in denen ein <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basiert auf einem unbekannten <see cref="T:System.Xaml.XamlType" />, inklusive der Fälle, in denen die <see cref="P:System.Xaml.XamlType.UnderlyingType" /> von der <see cref="T:System.Xaml.XamlType" /> ist <see langword="null" />.  Die grundlegende Implementierung nicht notwendigerweise verwendet eine eigene <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> Implementierung. Zuerst wird eine Umwandlung von <paramref name="instance" /> auf <see cref="T:System.Collections.IEnumerable" /> versucht wird. Wenn dies erfolgreich ist, einen Aufruf von <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> erfolgt und die Methode gibt zurück, der Wert zurückgeben. Andernfalls verwendet die grundlegende Implementierung CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> zum Aufrufen des zugrunde liegenden <see langword="GetEnumerator" /> -Methode, wie von einem Aufruf abgerufen <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> dafür <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-164">
              <para>The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>. This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.  The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation. First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted. If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value. Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetMarkupExtensionHandler : EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa16c-165">Ruft den zu verwendenden Handler ab, wenn ein <see cref="T:System.Xaml.XamlObjectWriter" /> eine implementierte <see cref="T:System.Windows.Markup.MarkupExtension" /> aufruft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-165">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa16c-166">Eine Handlerimplementierung, in der dieser Fall behandelt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-166">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-167">Der Ereignishandler basiert auf <xref:System.EventHandler%601> Zeilenumbruchalgorithmus <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="fa16c-167">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="fa16c-168">Der zurückgegebene Wert Ruft die <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> Verhalten der <xref:System.Xaml.XamlType> , die die <xref:System.Xaml.Schema.XamlTypeInvoker> basiert auf.</span><span class="sxs-lookup"><span data-stu-id="fa16c-168">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="fa16c-169">Der Rückgabewert ist `null` für eine <xref:System.Xaml.Schema.XamlTypeInvoker> , basiert auf einem unbekannten <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="fa16c-169">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetTypeConverterHandler : EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;" Usage="System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa16c-170">Ruft den zu verwendenden Handler ab, wenn ein <see cref="T:System.Xaml.XamlObjectWriter" />-Objekt einen Aufruf an ein CLR-implementiertes <see cref="T:System.ComponentModel.TypeConverter" />-Objekt richtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-170">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa16c-171">Eine Handlerimplementierung, in der dieser Fall behandelt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-171">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-172">Der Ereignishandler basiert auf <xref:System.EventHandler%601> Zeilenumbruchalgorithmus <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="fa16c-172">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="fa16c-173">Der zurückgegebene Wert Ruft die <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> Verhalten der <xref:System.Xaml.XamlType> , die die <xref:System.Xaml.Schema.XamlTypeInvoker> basiert auf.</span><span class="sxs-lookup"><span data-stu-id="fa16c-173">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="fa16c-174">Der Rückgabewert ist `null` für eine <xref:System.Xaml.Schema.XamlTypeInvoker> , basiert auf einem unbekannten <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="fa16c-174">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlTypeInvoker" Usage="System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fa16c-175">Stellt einen statischen Wert bereit, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-175">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fa16c-176">Ein statischer Wert, der ein unbekanntes, nicht vollständig implementiertes <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />-Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fa16c-176">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fa16c-177">Angabe dieses Werts für einen <xref:System.Xaml.Schema.XamlTypeInvoker> Parameter von "System.xaml" definierte API führt normalerweise dazu, dass den aufgerufenen Code zum Auslösen von Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="fa16c-177">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>