<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlValueConverter`1.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac582f14de8f717b193872473b74a49ccbceec4793c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82f14de8f717b193872473b74a49ccbceec4793c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>The CLR base class for the particular converter that this <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> represents.</source>
          <target state="translated">Die CLR-Basisklasse für den bestimmten Konverter, den dieses <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt darstellt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Typically this is one of the following: <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>; <ph id="ph2">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph>; <ph id="ph3">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph>;</source>
          <target state="translated">Normalerweise handelt es sich um eines der folgenden Objekte: <ph id="ph1">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph>; <ph id="ph2">&lt;see cref="T:System.Windows.Markup.MarkupExtension" /&gt;</ph>; <ph id="ph3">&lt;see cref="T:System.Windows.Markup.ValueSerializer" /&gt;</ph>;</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Provides a common API surface for techniques that generate initialization or serialization values for XAML based on input other than the eventual destination type.</source>
          <target state="translated">Stellt eine allgemeine API-Oberfläche für alle Methoden bereit, die Initialisierungs- oder Serialisierungswerte für XAML auf Grundlage anderer Eingaben als der des endgültigen Zieltyps generieren.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>This includes markup extensions and type converters.</source>
          <target state="translated">Dazu zählen Markuperweiterungen und Typkonverter.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Instances of this type are returned by methods of the XAML schema API such as <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph>.</source>
          <target state="translated">Instanzen dieses Typs werden durch die Verwendung von XAML-Schema-API-Methoden zurückgegeben, wie z. B. <ph id="ph1">&lt;xref:System.Xaml.XamlType.LookupTypeConverter%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>The generic implementation of <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> provides indirection for the System.Xaml assembly so that the basic XAML schema and type system does not have to take dependencies on different value conversion techniques that are typically implementations in other assemblies.</source>
          <target state="translated">Die generische Implementierung <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> Dereferenzierung für die Assembly "System.xaml" bietet, sodass die grundlegende Verwendung von XAML-Schema und das Typsystem keine Abhängigkeiten von anderen Wert Konvertierungstechniken nutzen, die in der Regel in anderen Implementierungen sind Assemblys.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> can be constructed with a null implementation type, but such a <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> will return <ph id="ph3">`null`</ph> for <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> konstruiert werden kann, mit einem null-Implementierungstyp, aber z. B. eine <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> zurück <ph id="ph3">`null`</ph> für <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Constructor signatures for <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> use a <ph id="ph2">`converterType`</ph> parameter that references the specific type that implements the conversion behavior.</source>
          <target state="translated">Konstruktorsignaturen für <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> verwenden eine <ph id="ph2">`converterType`</ph> Parameter, der den spezifischen Typ verweist, die das Konvertierungsverhalten implementiert.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>For a properly functioning <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> (one that has a nonnull <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>), the <ph id="ph3">`converterType`</ph> type is expected to be castable to the <ph id="ph4">`TConverterBase`</ph> constraint.</source>
          <target state="translated">Für einen ordnungsgemäß funktionierenden <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> (Kennzeichnung einer ungleich NULL <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>), die <ph id="ph3">`converterType`</ph> wird erwartet, umwandelbare werden die <ph id="ph4">`TConverterBase`</ph> Einschränkung.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>A mismatch condition is not enforced by constructors, but might produce an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> at run time.</source>
          <target state="translated">Eine Nichtübereinstimmung Bedingung wird von Konstruktoren nicht erzwungen, aber ergibt möglicherweise ein <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> zur Laufzeit.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that implements the converter behavior.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Klasse, von der das Konverterverhalten implementiert wird.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
          <source>The target/destination <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Das Ziel-<ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Element des <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> class, based on a converter implementing <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> and the target/destination type of the <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Klasse auf Grundlage eines Konverters, der <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> implementiert, und des Ziels/Zieltyps des <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that implements the converter behavior.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Klasse, von der das Konverterverhalten implementiert wird.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>The target/destination <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Das Ziel-<ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Element des <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>The string name.</source>
          <target state="translated">Der Name der Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> class, based on a converter implementing <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> the target/destination type of the <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, and a string name.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Klasse auf Grundlage eines Konverters, der <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> implementiert, des Ziels/Zieltyps des <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekts und eines Zeichenfolgennamens.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>If <ph id="ph1">`name`</ph> is provided as <ph id="ph2">`null`</ph>, a default name is generated based on either <ph id="ph3">`converterType`</ph> or <ph id="ph4">`targetType`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`name`</ph> dient als <ph id="ph2">`null`</ph>, ein Standardname wird basierend auf entweder generiert <ph id="ph3">`converterType`</ph> oder <ph id="ph4">`targetType`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.#ctor(System.Type,System.Xaml.XamlType,System.String)">
          <source>All three parameters are <ph id="ph1">&lt;see langword="null" /&gt;</ph> (at least one is required to be non-null).</source>
          <target state="translated">Alle drei Parameter sind <ph id="ph1">&lt;see langword="null" /&gt;</ph> (mindestens einer muss nicht 0 (null) sein).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
          <source>Gets a created instance of the converter implementation.</source>
          <target state="translated">Ruft eine erstellte Instanz der Konverterimplementierung ab.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
          <source>A created instance of the converter implementation, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eine erstellte Instanz der Konverterimplementierung oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> calls the protected default implementation of <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph> to get its value (and might be accessing a stored value if <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> was already called once on this <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> Ruft die geschützte standardmäßige Implementierung des <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph> den Wert abrufen (und möglicherweise auf einen gespeicherten Wert zugreifen werden, wenn <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph> wurde bereits für dieses einmal aufgerufen <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterInstance">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> can be constructed with a null implementation type, but such a <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> will return <ph id="ph3">`null`</ph> for <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> konstruiert werden kann, mit einem null-Implementierungstyp, aber z. B. eine <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> zurück <ph id="ph3">`null`</ph> für <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the class that implements the converter behavior.</source>
          <target state="translated">Ruft das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt für die Klasse ab, von der das Konverterverhalten implementiert wird.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.ConverterType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for the class that implements the converter behavior.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>-Objekt für die Klasse, von der das Konverterverhalten implementiert wird.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>Returns an instance of the converter implementation.</source>
          <target state="translated">Gibt eine Instanz der Konverterimplementierung zurück.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>An instance of the converter implementation, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz der Konverterimplementierung oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph> is protected.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph> ist geschützt.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>To get a converter instance with a public API, get the value of <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>.</source>
          <target state="translated">Um einer Konverterinstanz mit einer öffentlichen API zu erhalten, rufen Sie den Wert des <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>A <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> can be constructed with a null implementation type, but such a <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> will return <ph id="ph3">`null`</ph> for <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> konstruiert werden kann, mit einem null-Implementierungstyp, aber z. B. eine <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601&gt;</ph> zurück <ph id="ph3">`null`</ph> für <ph id="ph4">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.CreateInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <source>Converter did not implement the correct base type.</source>
          <target state="translated">Konverter hat den richtigen Basistyp nicht implementiert.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlValueConverter`1">
          <source>Determines whether this instance of <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and an object have the same value.</source>
          <target state="translated">Bestimmt, ob diese Instanz von <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> und eines Objekts den gleichen Wert besitzen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
          <source>The object to compare.</source>
          <target state="translated">Das zu vergleichende Objekt.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
          <source>Determines whether this instance of <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and a specified object, which must also be a <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, have the same value.</source>
          <target state="translated">Bestimmt, ob diese Instanz von <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> und ein angegebenes Objekt, das ebenfalls ein <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt sein muss, denselben Wert haben.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and its value is the same as this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> ein <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> ist und denselben Wert wie diese Instanz hat, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> to compare.</source>
          <target state="translated">Der zu vergleichende <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
          <source>Determines whether this instance of <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and another <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object have the same value.</source>
          <target state="translated">Bestimmt, ob diese Instanz von <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> und eines anderen <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekts den gleichen Wert besitzen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.Equals(System.Xaml.Schema.XamlValueConverter{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="other" /&gt;</ph> is a <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> and its value is the same as this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="other" /&gt;</ph> ein <ph id="ph3">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> ist und denselben Wert wie diese Instanz hat, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Gibt den Hashcode für diesen <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.GetHashCode">
          <source>An integer hash code.</source>
          <target state="translated">Ein ganzzahliger Hashcode.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>Gets a string name for this <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Zeichenfolgennamen für dieses <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt ab.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>A string name for this <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Ein Zeichenfolgenname für dieses <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>The value of this property is established by one of the following:</source>
          <target state="translated">Der Wert dieser Eigenschaft wird durch eine der folgenden angezeigt:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>A constructor parameter (see <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Konstruktorparameter (siehe <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.%23ctor%2A?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.Name">
          <source>Internal logic that processes other constructor inputs and forms a string.</source>
          <target state="translated">Interne Logik, der andere Konstruktoreingaben verarbeitet und eine Zeichenfolge bildet.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> objects have the same value.</source>
          <target state="translated">Bestimmt, ob zwei angegebene <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekte denselben Wert haben.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Equality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of <ph id="ph2">&lt;paramref name="converter1" /&gt;</ph> is the same as the value of <ph id="ph3">&lt;paramref name="converter2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="converter1" /&gt;</ph> und <ph id="ph3">&lt;paramref name="converter2" /&gt;</ph> denselben Wert haben, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source>Determines whether two specified <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> objects have different values.</source>
          <target state="translated">Bestimmt, ob zwei angegebene <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekte verschiedene Werte haben.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.op_Inequality(System.Xaml.Schema.XamlValueConverter{`0},System.Xaml.Schema.XamlValueConverter{`0})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of <ph id="ph2">&lt;paramref name="converter1" /&gt;</ph> is different than the value of <ph id="ph3">&lt;paramref name="converter2" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn sich der Wert von <ph id="ph2">&lt;paramref name="converter1" /&gt;</ph> vom Wert von <ph id="ph3">&lt;paramref name="converter2" /&gt;</ph> unterscheidet, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
          <source>Gets the target/destination <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Ruft das Ziel-<ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Element des <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekts ab.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlValueConverter`1.TargetType">
          <source>The target/destination <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Das Ziel-<ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>-Element des <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Gibt ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>-Objekt zurück, das die <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>-Klasse darstellt.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der diesen <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlValueConverter`1.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A&gt;</ph> value is based on <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.ToString%2A&gt;</ph> Wert basiert auf <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>