<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="96ad5deed36463a85848211bc369ec4cff718020" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37706241" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteObjectContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiert einen Vertrag, den Komponenten verwenden können, um über die Grenzen von Anwendungsdomänen und Prozessen hinweg auf ein Objekt  zuzugreifen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der Implementierung <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> für einen Typ können Komponenten den Vertrag verwenden, um Typinformationen für Objekte des Typs zuzugreifen. Komponenten den Zugriff auf Typinformationen durch Aufrufen der <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> Methode zum Abrufen einer <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. Die <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> Schnittstelle definiert einen Vertrag, den Komponenten verwenden können, dass auf bestimmten Typ- und Memberinformationen zugreifen und Aufrufen von Membern.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteType : unit -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteObjectContract.GetRemoteType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> zurück, der den Typ des aktuellen <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> angibt.</summary>
        <returns>Ein <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, der den Typ des aktuellen <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> angibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> -Methode den Zugriff auf Member von der Remote-Objekts, das das aktuelle <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifiziert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member RemoteCast : string -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteObjectContract.RemoteCast canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">Der kanonische Name des Typs, in den das Objekt umgewandelt werden soll.</param>
        <summary>Wandelt das vom aktuellen <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> identifizierte Objekt in einen angegebenen Typ um.</summary>
        <returns>Ein <see cref="T:System.AddIn.Contract.RemoteArgument" />, das das Ergebnis der Umwandlung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Kanonischer Name ist ein global eindeutiger Name, z. B. eine GUID. Zeichenfolgen im Format \< *Assemblyname*>, \< *vollqualifizierten Typnamen*> werden empfohlen. Ein Beispiel für einen kanonischen Namen das empfohlene Format ist "ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application".  
  
 Der kanonische Name für einen Typ kann nicht nach dem Veröffentlichen eines Typs in eine Komponente ändern. Ändern den kanonischen Namen eines Typs in einer zukünftigen Version von einer Komponente die Kompatibilität zwischen der Komponente und die Clients, die den Typ bereits verwenden, werden aufgehoben.  
  
 Es wird empfohlen, <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> Implementierungen sind, lösen eine <xref:System.InvalidCastException> fällt die Cast-Vorgang.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>