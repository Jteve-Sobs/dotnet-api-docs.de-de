<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="831992608cc45d7411406940c9eaf8c6849ba920" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69343280" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteObjectContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Definiert einen Vertrag, den Komponenten verwenden können, um über die Grenzen von Anwendungsdomänen und Prozessen hinweg auf ein Objekt  zuzugreifen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie für <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> einen Typ implementieren, können-Komponenten den-Vertrag verwenden, um auf Typinformationen für Objekte des Typs zuzugreifen. -Komponenten greifen auf Typinformationen zu <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> , indem Sie die <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>-Methode aufrufen, um eine abzurufen Die <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> -Schnittstelle definiert einen Vertrag, den Komponenten verwenden können, um auf bestimmte Typ-und Element Informationen zuzugreifen und Member aufzurufen.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteType : unit -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteObjectContract.GetRemoteType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> zurück, der den Typ des aktuellen <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> angibt.</summary>
        <returns>Ein <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />, der den Typ des aktuellen <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> angibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> die-Methode, um auf die Member des Remote Objekts zuzugreifen <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> , das das aktuelle-Objekt identifiziert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member RemoteCast : string -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteObjectContract.RemoteCast canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">Der kanonische Name des Typs, in den das Objekt umgewandelt werden soll.</param>
        <summary>Wandelt das vom aktuellen <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> identifizierte Objekt in einen angegebenen Typ um.</summary>
        <returns>Ein <see cref="T:System.AddIn.Contract.RemoteArgument" />, das das Ergebnis der Umwandlung darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein kanonischer Name ist ein global eindeutiger Name, z. b. eine GUID. Es werden Zeichen folgen \<im Format AssemblyName >, ** \< *voll qualifizierter Typname*> empfohlen. Ein Beispiel für das empfohlene Format eines kanonischen Namens ist "ShapeApp, Microsoft. VisualStudio. Tools. Applications. Samples. ShapeApp. Application".  
  
 Der kanonische Name für einen Typ kann nicht geändert werden, nachdem ein Typ in einer Komponente veröffentlicht wurde. Wenn Sie den kanonischen Namen eines Typs in einer zukünftigen Version einer Komponente ändern, wird die Kompatibilität zwischen der Komponente und den Clients, die den Typ bereits verwenden, beeinträchtigt.  
  
 Es wird empfohlen, <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> dass-Implementierungen <xref:System.InvalidCastException> beim Fehlschlagen des Umwandlungs Vorgangs eine auslösen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
