<Type Name="IDynamicProperty" FullName="System.Runtime.Remoting.Contexts.IDynamicProperty">
  <TypeSignature Language="C#" Value="public interface IDynamicProperty" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicProperty" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IDynamicProperty" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicProperty" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicProperty" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5626c-101">Gibt an, dass die implementierende Eigenschaft zur Laufzeit über die <see cref="M:System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)" />-Methode registriert werden soll.</span><span class="sxs-lookup"><span data-stu-id="5626c-101">Indicates that the implementing property should be registered at runtime through the <see cref="M:System.Runtime.Remoting.Contexts.Context.RegisterDynamicProperty(System.Runtime.Remoting.Contexts.IDynamicProperty,System.ContextBoundObject,System.Runtime.Remoting.Contexts.Context)" /> method.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5626c-102">Dynamische Eigenschaften auch verfügbar machen müssen die <xref:System.Runtime.Remoting.Contexts.IContributeDynamicSink> Schnittstelle, wenn sie dynamische Senken bereitstellen möchten.</span><span class="sxs-lookup"><span data-stu-id="5626c-102">Dynamic properties must also expose the <xref:System.Runtime.Remoting.Contexts.IContributeDynamicSink> interface if they want to provide dynamic sinks.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Contexts.IDynamicProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5626c-103">Ruft den Namen der dynamischen Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="5626c-103">Gets the name of the dynamic property.</span></span></summary>
        <value><span data-ttu-id="5626c-104">Der Name der dynamischen Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5626c-104">The name of the dynamic property.</span></span></value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>