<Type Name="IDynamicMessageSink" FullName="System.Runtime.Remoting.Contexts.IDynamicMessageSink">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d1e7bf970e5fa7e3328a8adb2ea99eb3daef445" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70730815" /></Metadata><TypeSignature Language="C#" Value="public interface IDynamicMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IDynamicMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicMessageSink" />
  <TypeSignature Language="F#" Value="type IDynamicMessageSink = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="91781-101">Gibt an, dass die implementierende Meldungssenke von dynamisch registrierten Eigenschaften bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="91781-101">Indicates that the implementing message sink will be provided by dynamically registered properties.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91781-102">Dynamische Nachrichten senken werden mit Benachrichtigungen Ã¼ber den Start des Aufrufes und das Beenden des Aufrufes mit Flags bereitgestellt, die angeben, ob sich der Client derzeit auf der Clientseite oder der Serverseite befindet</span><span class="sxs-lookup"><span data-stu-id="91781-102">Dynamic message sinks are provided with notifications of call start and call finish with flags indicating whether the call is currently on the client side or server side (this is useful for the context level sinks).</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ProcessMessageFinish">
      <MemberSignature Language="C#" Value="public void ProcessMessageFinish (System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageFinish(class System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageFinish(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageFinish (replyMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageFinish(System::Runtime::Remoting::Messaging::IMessage ^ replyMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessageFinish : System.Runtime.Remoting.Messaging.IMessage * bool * bool -&gt; unit" Usage="iDynamicMessageSink.ProcessMessageFinish (replyMsg, bCliSide, bAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replyMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="replyMsg"><span data-ttu-id="91781-103">Eine Antwortmeldung.</span><span class="sxs-lookup"><span data-stu-id="91781-103">A reply message.</span></span></param>
        <param name="bCliSide"><span data-ttu-id="91781-104"><see langword="true" />, wenn die Methode auf der Clientseite aufgerufen wird, und <see langword="false" /> bei einem Aufruf auf der Serverseite.</span><span class="sxs-lookup"><span data-stu-id="91781-104">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if it is invoked on the server side.</span></span></param>
        <param name="bAsync"><span data-ttu-id="91781-105"><see langword="true" /> bei einem asynchronen Aufruf, und <see langword="false" /> bei einem synchronen Aufruf.</span><span class="sxs-lookup"><span data-stu-id="91781-105">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span></span></param>
        <summary><span data-ttu-id="91781-106">Gibt an, dass ein Aufruf beendet wird.</span><span class="sxs-lookup"><span data-stu-id="91781-106">Indicates that a call is returning.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91781-107">Die booleschen Parameter geben an, ob sich die Senke auf der Clientseite oder der Serverseite befindet und ob der- <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> Befehl die-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="91781-107">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessMessageStart">
      <MemberSignature Language="C#" Value="public void ProcessMessageStart (System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageStart(class System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageStart(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageStart (reqMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageStart(System::Runtime::Remoting::Messaging::IMessage ^ reqMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessageStart : System.Runtime.Remoting.Messaging.IMessage * bool * bool -&gt; unit" Usage="iDynamicMessageSink.ProcessMessageStart (reqMsg, bCliSide, bAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reqMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reqMsg"><span data-ttu-id="91781-108">Eine Anforderungsmeldung.</span><span class="sxs-lookup"><span data-stu-id="91781-108">A request message.</span></span></param>
        <param name="bCliSide"><span data-ttu-id="91781-109"><see langword="true" />, wenn die Methode auf der Clientseite aufgerufen wird, und <see langword="false" /> bei einem Aufruf auf der Serverseite.</span><span class="sxs-lookup"><span data-stu-id="91781-109">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if the method is on the server side.</span></span></param>
        <param name="bAsync"><span data-ttu-id="91781-110"><see langword="true" /> bei einem asynchronen Aufruf, und <see langword="false" /> bei einem synchronen Aufruf.</span><span class="sxs-lookup"><span data-stu-id="91781-110">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span></span></param>
        <summary><span data-ttu-id="91781-111">Gibt an, dass ein Aufruf gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="91781-111">Indicates that a call is starting.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="91781-112">Die booleschen Parameter geben an, ob sich die Senke auf der Clientseite oder der Serverseite befindet und ob der- <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> Befehl die-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="91781-112">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>
