<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5f5fd-101">Stellt einen Writer für die schnelle, nicht zwischengespeicherte Vorwärtsgenerierung von Streams oder Dateien dar, die XML-Daten gemäß den W3C-Empfehlungen zu XML (Extensible Markup Language), Version 1.0, und zu Namespaces in XML enthalten.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span>  
  
 <span data-ttu-id="5f5fd-102">Ab .NET Framework 2.0 sollten Sie stattdessen die <see cref="T:System.Xml.XmlWriter" />-Klasse verwenden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f5fd-103">Diese Klasse implementiert die <xref:System.Xml.XmlWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-104">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-105">`XmlTextWriter` verwaltet einen Namespacestapel, der alle Namespaces, die im aktuellen Elementstapel definiert entspricht.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="5f5fd-106">Mit `XmlTextWriter` können Sie manuell Namespaces deklarieren.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="5f5fd-107">Der oben aufgeführten C#-Code erzeugt die folgende Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-107">The above C# code produces the following output.</span></span> <span data-ttu-id="5f5fd-108">`XmlTextWriter` stuft die Namespacedeklaration dem Stammelement zu vermeiden, dass er auf die beiden untergeordneten Elemente dupliziert.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="5f5fd-109">Die untergeordneten Elemente übernehmen das Präfix, aus der Namespacedeklaration.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="5f5fd-110">`XmlTextWriter` Außerdem können Sie die aktuellen Namespacedeklaration zu überschreiben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="5f5fd-111">Im folgenden Beispiel wird der Namespace-URI "123" durch "Abc", um die XML-Element überschrieben `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="5f5fd-112">Mit der Write-Methoden, die ein Präfix als Argument akzeptieren können Sie auch angeben, die als Präfix verwenden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="5f5fd-113">Im folgenden Beispiel werden zwei unterschiedliche Präfixe an denselben Namespace-URI, um den XML-Text zu erzeugen zugeordnet `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="5f5fd-114">Wenn es gibt mehrere unterschiedliche Präfixe an denselben Namespace-URI zuordnen Namespacedeklarationen `XmlTextWriter` Rückwärts-Stackwalk durch die Namespacedeklarationen aus und wählt die nächste aus.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="5f5fd-115">Im obigen C#-Beispiel da die `WriteAttributeString` Aufruf gibt kein Präfix, der Writer verwendet das letzte Präfix, das auf dem Namespacestapel abgelegt und erzeugt die folgende XML:</span><span class="sxs-lookup"><span data-stu-id="5f5fd-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="5f5fd-116">Wenn der Namespacekonflikte auftreten, `XmlTextWriter` löst diese alternative Präfixe generieren.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="5f5fd-117">Wenn ein Attribut- und Elementnamen haben dasselbe Präfix, z. B. aber unterschiedliche Namespaces `XmlWriter` ein anderes Präfix für das Attribut generiert.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="5f5fd-118">Die generierten Präfixe werden mit dem Namen `n{i}` , in denen `i` ist eine bei 1 beginnende Zahl.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="5f5fd-119">Die Zahl wird für jedes Element auf 1 zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="5f5fd-120">Attribute, die einen Namespace-URI zugeordnet sind, müssen ein Präfix (Standard, die Namespaces nicht für Attribute gelten) haben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="5f5fd-121">Dies entspricht Abschnitt 5.2 der W3C-Namespaces in XML-Empfehlung.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="5f5fd-122">Wenn ein Attribut auf einen Namespace-URI verweist, aber kein Präfix angegeben ist, generiert der Writer ein Präfix für das Attribut an.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="5f5fd-123">Wenn Sie ein leeres Element schreiben, ein zusätzliches Leerzeichen hinzugefügt zwischen Tagname und dem Endtag z. B. `<item />`.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="5f5fd-124">Dies bietet Kompatibilität mit älteren Browsern.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="5f5fd-125">Wenn eine `String` dient als Methodenparameter, `null` und `String.Empty` sind gleichwertig.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="5f5fd-126">`String.Empty` folgt den W3C-Regeln.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="5f5fd-127">Um stark typisierte Daten zu schreiben, verwenden Sie die <xref:System.Xml.XmlConvert> -Klasse zum Konvertieren von Datentypen in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="5f5fd-128">Der folgende C#-Code konvertiert z. B. die Daten aus `Double` auf `String` und schreibt das Element `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="5f5fd-129">`XmlTextWriter` überprüft nicht auf Folgendes:</span><span class="sxs-lookup"><span data-stu-id="5f5fd-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="5f5fd-130">Ungültige Zeichen in Attribut- und Elementnamen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="5f5fd-131">Unicode-Zeichen, die die angegebene Codierung nicht passen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="5f5fd-132">Wenn die Unicode-Zeichen nicht groß der angegebenen Codierung genug ist, die `XmlTextWriter` ist nicht mit Escapezeichen versehen Unicode-Zeichen in Zeichenentitäten.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="5f5fd-133">Doppelte Attribute.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="5f5fd-134">Zeichen in der DOCTYPE-public-Bezeichner oder Systembezeichner.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="5f5fd-135">Sicherheitsüberlegungen</span><span class="sxs-lookup"><span data-stu-id="5f5fd-135">Security Considerations</span></span>  
 <span data-ttu-id="5f5fd-136">Die folgenden Elemente werden zu berücksichtigende Aspekte bei der Arbeit mit der <xref:System.Xml.XmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="5f5fd-137">Ausnahmen, die von der <xref:System.Xml.XmlTextWriter> können Offenlegen Pfadinformationen, die Sie nicht möchten, die der Anwendung weitergegeben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="5f5fd-138">Die Anwendungen müssen diese Ausnahmen abfangen und entsprechend verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="5f5fd-139">Wenn ein <xref:System.Xml.XmlTextWriter> an eine andere Anwendung übergeben wird, wird der zu Grunde liegenden Stream für diese Anwendung offengelegt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="5f5fd-140">Übergeben Sie an eine teilweise vertrauenswürdige Anwendung ein von der <xref:System.Xml.XmlTextWriter>-Methode erstelltes <xref:System.Xml.XmlWriter>-Objekt anstelle eines <xref:System.Xml.XmlWriter.Create%2A>-Objekts.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="5f5fd-141">Die <xref:System.Xml.XmlTextWriter> überprüft nicht, dass alle Daten, die an die <xref:System.Xml.XmlTextWriter.WriteDocType%2A> oder <xref:System.Xml.XmlTextWriter.WriteRaw%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="5f5fd-142">Sie sollten keine willkürlichen Daten an diese Methoden übergeben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="5f5fd-143">Wenn die Standardeinstellungen geändert werden, besteht keine Garantie, dass die generierte Ausgabe wohlgeformte XML-Daten ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="5f5fd-144">Akzeptieren Sie keine unterstützende Komponenten, wie z. B. ein <xref:System.Text.Encoding> Objekt, aus einer nicht vertrauenswürdigen Quelle.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f5fd-145">Erstellt eine Instanz der <see langword="XmlTextWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-145">Creates an instance of the <see langword="XmlTextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-146">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-146">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="5f5fd-147">Der <see langword="TextWriter" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-147">The <see langword="TextWriter" /> to write to.</span></span> <span data-ttu-id="5f5fd-148">Hierbei wird vorausgesetzt, dass der <see langword="TextWriter" /> bereits auf die korrekte Codierung eingestellt ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-148">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span></span></param>
        <summary><span data-ttu-id="5f5fd-149">Erstellt mithilfe des angegebenen <see cref="T:System.IO.TextWriter" /> eine Instanz der <see langword="XmlTextWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-149">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-150">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-150">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="5f5fd-151">Der Stream, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-151">The stream to which you want to write.</span></span></param>
        <param name="encoding"><span data-ttu-id="5f5fd-152">Die zu generierende Codierung.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-152">The encoding to generate.</span></span> <span data-ttu-id="5f5fd-153">Wenn die Codierung <see langword="null" /> ist, wird der Stream UTF-8-codiert ausgegeben, und das Codierungsattribut der <see langword="ProcessingInstruction" /> wird nicht berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-153">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="5f5fd-154">Erstellt mithilfe des angegebenen Streams und der angegebenen Codierung eine Instanz der <see langword="XmlTextWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-154">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-155">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-155">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-156">Die Codierung wird nicht unterstützt, oder es kann nicht in den Stream geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-156">The encoding is not supported or the stream cannot be written to.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f5fd-157"><paramref name="w" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-157"><paramref name="w" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="5f5fd-158">Der Name der Datei, in die geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-158">The filename to write to.</span></span> <span data-ttu-id="5f5fd-159">Wenn die Datei vorhanden ist, wird diese abgeschnitten und mit dem neuen Inhalt überschrieben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-159">If the file exists, it truncates it and overwrites it with the new content.</span></span></param>
        <param name="encoding"><span data-ttu-id="5f5fd-160">Die zu generierende Codierung.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-160">The encoding to generate.</span></span> <span data-ttu-id="5f5fd-161">Wenn die Codierung <see langword="null" /> ist, wird die Datei UTF-8-codiert ausgegeben, und das Codierungsattribut der <see langword="ProcessingInstruction" /> wird nicht berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-161">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="5f5fd-162">Erstellt mithilfe der angegebenen Datei eine Instanz der <see cref="T:System.Xml.XmlTextWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-162">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-163">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-163">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-164">Die Codierung wird nicht unterstützt; der Dateiname ist leer oder enthält nur Leerraum bzw. ein oder mehrere ungültige(s) Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-164">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="5f5fd-165">Der Zugriff wird verweigert.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-165">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="5f5fd-166">Der Dateiname ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-166">The filename is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="5f5fd-167">Das Verzeichnis, in das geschrieben werden soll, wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-167">The directory to write to is not found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="5f5fd-168">Der Dateiname enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-168">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="5f5fd-169">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-169">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5fd-170">Ruft das zugrunde liegende Streamobjekt ab.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-170">Gets the underlying stream object.</span></span></summary>
        <value><span data-ttu-id="5f5fd-171">Der Stream, in den der <see langword="XmlTextWriter" /> schreibt oder <see langword="null" />, wenn der <see langword="XmlTextWriter" /> mithilfe eines <see cref="T:System.IO.TextWriter" /> erstellt wurde, der nicht von der <see cref="T:System.IO.StreamWriter" />-Klasse vererbt wird.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-171">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-172">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-172">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-173">Wenn der Writer erstellt wurde, mithilfe einer `TextWriter` , stammt aus der `StreamWriter` -Klasse, die diese Eigenschaft ist identisch mit der <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-173">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="5f5fd-174">Wenn der Writer erstellt wurde, mithilfe einer <xref:System.IO.Stream>, gibt diese Eigenschaft die `Stream` an den Konstruktor übergeben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-174">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="5f5fd-175">Wenn der Writer mit einem Dateinamen erstellt wurde, gibt diese Eigenschaft die `Stream` repräsentiert.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-175">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f5fd-176">Schließt diesen Stream und den zugrunde liegenden Stream.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-176">Closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-177">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-177">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-178">Alle Elemente oder Attribute, die geöffnet bleiben, werden automatisch geschlossen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-178">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="5f5fd-179">Diese Methode löst keine Ausnahmen aus.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-179">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-180">Das folgende Beispiel schreibt ein XML-Fragment.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-180">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f5fd-181">Entleert den Pufferinhalt in die zugrunde liegenden Streams und entleert den zugrunde liegenden Stream ebenfalls.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-181">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-182">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-182">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-183">Hierbei spricht anstelle von <xref:System.Xml.XmlTextWriter.Close%2A> Wenn Sie weitere Daten in den zugrunde liegenden Stream ohne Verlust, was immer noch im Puffer ist schreiben möchten.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-183">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-184">Das folgende Beispiel schreibt zwei XML-Fragmente aus.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-184">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5fd-185">Gibt die Formatierung der Ausgabe an.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-185">Indicates how the output is formatted.</span></span></summary>
        <value><span data-ttu-id="5f5fd-186">Einer der <see cref="T:System.Xml.Formatting" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-186">One of the <see cref="T:System.Xml.Formatting" /> values.</span></span> <span data-ttu-id="5f5fd-187">Der Standardwert ist <see langword="Formatting.None" /> (keine besondere Formatierung).</span><span class="sxs-lookup"><span data-stu-id="5f5fd-187">The default is <see langword="Formatting.None" /> (no special formatting).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-188">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-188">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-189">Wenn die `Indented` -Option festgelegt ist, untergeordnete Elemente eingezogen mithilfe der <xref:System.Xml.XmlTextWriter.Indentation%2A> und <xref:System.Xml.XmlTextWriter.IndentChar%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-189">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="5f5fd-190">Nur Elementinhalt wird eingerückt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-190">Only element content is indented.</span></span> <span data-ttu-id="5f5fd-191">Der folgende C#-Code schreibt HTML-Elemente mit gemischtem Inhalt:</span><span class="sxs-lookup"><span data-stu-id="5f5fd-191">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="5f5fd-192">Der obige Code erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="5f5fd-192">The above code produces the following output:</span></span>  
  
```  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="5f5fd-193">Wenn dies in HTML angezeigt wird kein Leerraum zwischen den Elementen fett und kursiven angezeigt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-193">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="5f5fd-194">In der Tat in diesem Beispiel würde Wenn Einzug zwischen diesen Elementen hinzugefügt wurde das Wort "Elephant" fälschlicherweise unterbrochen werden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-194">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-195">Schreiben Sie einen beliebigen Text-Inhalt, mit Ausnahme von `String.Empty` versetzt dieses Element in den Modus mit gemischtem Inhalt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-195">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="5f5fd-196">Dieser Status "gemischt" untergeordnete Elemente nicht geerbt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-196">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="5f5fd-197">Ein untergeordnetes Element eines Elements "mixed" ist den Einzug, es sei denn, es ist auch "mixed" Inhalt enthält.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-197">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="5f5fd-198">Elementinhalt (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) und gemischte Inhalte (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) werden gemäß der XML 1.0-Definitionen dieser Begriffe definiert.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-198">Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-199">Das folgende Beispiel schreibt ein XML-Fragment.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-199">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5fd-200">Ruft ab oder legt fest, wie viele IndentChars für jede Ebene der Hierarchie geschrieben werden sollen, wenn <see cref="P:System.Xml.XmlTextWriter.Formatting" /> auf <see langword="Formatting.Indented" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-200">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="5f5fd-201">Anzahl von <see langword="IndentChars" /> für jede Ebene.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-201">Number of <see langword="IndentChars" /> for each level.</span></span> <span data-ttu-id="5f5fd-202">Der Standard ist 2.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-202">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-203">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-203">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-204">Einzug ist für die folgenden Knotentypen ausgeführt: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, und `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-204">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="5f5fd-205">Alle anderen Knotentypen sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-205">All other node types are not affected.</span></span> <span data-ttu-id="5f5fd-206">Die `XmlTextWriter` zieht die interne DTD-Teilmenge nicht.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-206">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="5f5fd-207">Jedoch könnten Sie Folgendes ein, um die interne DTD-Teilmenge formatieren tun.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-207">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-208">Das folgende Beispiel schreibt ein XML-Fragment.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-208">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-209">Diese Eigenschaft wird auf einen negativen Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-209">Setting this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5fd-210">Ruft ab oder legt fest, welches Zeichen für den Einzug verwendet werden soll, wenn <see cref="P:System.Xml.XmlTextWriter.Formatting" /> auf <see langword="Formatting.Indented" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-210">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="5f5fd-211">Das für den Einzug zu verwendende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-211">The character to use for indenting.</span></span> <span data-ttu-id="5f5fd-212">Standardmäßig wird ein Leerzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-212">The default is space.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="5f5fd-213">Sie können diese Eigenschaft mit dem <see langword="XmlTextWriter" /> auf ein beliebiges Zeichen festlegen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-213">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span></span> <span data-ttu-id="5f5fd-214">Um die Gültigkeit des XML-Codes sicherzustellen, müssen Sie ein gültiges Leerraumzeichen wie 0x9, 0x10, 0x13 oder 0x20 angeben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-214">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-215">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-215">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="5f5fd-216">Der Namespace-URI, dessen Präfix gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-216">Namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="5f5fd-217">Gibt das nächstliegende Präfix zurück, das im aktuellen Namespacebereich für den Namespace-URI definiert ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-217">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="5f5fd-218">Das passende Präfix.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-218">The matching prefix.</span></span> <span data-ttu-id="5f5fd-219">Oder <see langword="null" />, wenn im aktuellen Gültigkeitsbereich kein übereinstimmender Namespace-URI gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-219">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-220">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-220">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-221">Das folgende Beispiel schreibt ein Buch aus.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-221">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f5fd-222"><paramref name="ns" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-222"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5fd-223">Ruft einen Wert ab, der angibt, ob Namespaces unterstützt werden, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-223">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value>
          <span data-ttu-id="5f5fd-224"><see langword="true" />, um Namespaces zu unterstützen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-224"><see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span></span>  
  
 <span data-ttu-id="5f5fd-225">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-225">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-226">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-226">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-227">Diese Eigenschaft bestimmt, ob der Writer die W3C-Namespaces in XML-Empfehlung zur www.w3.org/TR/REC-xml-names unterstützt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-227">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-228">Diese Eigenschaft können Sie nur im Zustand <see langword="WriteState.Start" /> ändern.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-228">You can only change this property when in the <see langword="WriteState.Start" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5fd-229">Ruft ab oder legt fest, welches Zeichen als Anführungszeichen für Attributwerte verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-229">Gets or sets which character to use to quote attribute values.</span></span></summary>
        <value><span data-ttu-id="5f5fd-230">Das als Anführungszeichen für Attributwerte zu verwendende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-230">The character to use to quote attribute values.</span></span> <span data-ttu-id="5f5fd-231">Diese Angabe muss ein einfaches Anführungszeichen (&amp;#39;) oder ein doppeltes Anführungszeichen (&amp;#34;).</span><span class="sxs-lookup"><span data-stu-id="5f5fd-231">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span></span> <span data-ttu-id="5f5fd-232">Standardmäßig werden doppelte Anführungszeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-232">The default is a double quote.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-233">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-233">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-234">Diese Eigenschaft wird statt auf ein einfaches oder doppeltes Anführungszeichen auf einen anderen Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-234">Setting this property to something other than either a single or double quote.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="5f5fd-235">Zu codierendes Bytearray.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-235">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="5f5fd-236">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-236">The position within the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="5f5fd-237">Die Anzahl der zu schreibenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-237">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="5f5fd-238">Codiert die angegebenen binären Bytes als base64 und schreibt den resultierenden Text.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-238">Encodes the specified binary bytes as base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-239">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-239">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-240">Im folgenden Beispiel wird codiert eine Eingabedatei mit `WriteBase64` und generiert eine temporäre XML-Datei.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-240">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="5f5fd-241">Die temporäre XML-Datei wird mit decodiert die <xref:System.Xml.XmlTextReader.ReadBase64%2A> Methode, und klicken Sie mit der ursprünglichen Datei verglichen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-241">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f5fd-242"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-242"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-243">Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-243">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f5fd-244"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-244"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-245"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-245">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="5f5fd-246">Zu codierendes Bytearray.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-246">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="5f5fd-247">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-247">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="5f5fd-248">Die Anzahl der zu schreibenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-248">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="5f5fd-249">Codiert die angegebenen binären Bytes als Binhex und schreibt den resultierenden Text.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-249">Encodes the specified binary bytes as binhex and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-250">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-250">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f5fd-251"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-251"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-252">Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-252">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f5fd-253"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-253"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-254">Der <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist Closed.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-254">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="5f5fd-255">Text, der in den CDATA-Block eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-255">Text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="5f5fd-256">Schreibt einen &lt;![CDATA[...]]&gt;-Block mit dem angegebenen Text.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-256">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-257">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-257">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-258">Wenn `text` handelt es sich um `null` oder `String.Empty`, diese Methode schreibt einen leeren CDATA-Block, z. B. \<![CDATA []]] ><! [CDATA [] >.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-258">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]]]><![CDATA[]>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-259">Das folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-259">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-260">Der Text ergibt kein wohlgeformtes XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-260">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-261"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="5f5fd-262">Unicode-Zeichen, für das eine Zeichenentität generiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-262">Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="5f5fd-263">Erzwingt das Generieren einer Zeichenentität für den angegebenen Unicode-Zeichenwert.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-263">Forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-264">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-265">Diese Methode schreibt das Unicode-Zeichen in hexadezimaler Zeichenentitätsverweise.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-266">Im folgenden Beispiel wird die `WriteCharEntity` -Methode, eine e-Mail-Adresse zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-267">Das Zeichen liegt im Ersatzzeichenpaar-Bereich, <see langword="0xd800" /> - <see langword="0xdfff" />, oder aus dem Text würde ein wohlgeformtes XML-Dokument resultieren.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-268"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="5f5fd-269">Zeichenarray, das den zu schreibenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-269">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="5f5fd-270">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-270">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="5f5fd-271">Die Anzahl der zu schreibenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-271">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="5f5fd-272">Schreibt Text in jeweils einen Puffer.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-272">Writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-273">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-274">Diese Methode kann verwendet werden, um große Mengen an einen Puffer zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="5f5fd-275">Besondere Behandlung muss erfolgen, um sicherzustellen, dass die `WriteChars` Methode teilt Ersatzzeichenpaare nicht über mehrere Pufferschreibvorgänge.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="5f5fd-276">Die XML-Spezifikation definiert die gültigen Bereiche für Ersatzzeichenpaare.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="5f5fd-277">Eine Ausnahme wird ausgelöst, wenn Ersatzzeichenpaare geschrieben werden, die die Ersatzzeichenpaare im Puffer aufgeteilt wird dazu führen würde, dass.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f5fd-278"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-278"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f5fd-279"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-279"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5f5fd-280">- oder - </span><span class="sxs-lookup"><span data-stu-id="5f5fd-280">-or-</span></span>  
  
 <span data-ttu-id="5f5fd-281">Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />. Der Aufruf führt zur Aufteilung eines Ersatzzeichenpaars oder zum Schreiben eines ungültigen Ersatzzeichenpaars.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-282">Der <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist Closed.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="5f5fd-283">Text, der in den Kommentar eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-283">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="5f5fd-284">Schreibt den Kommentar &lt;!--...--&gt; mit dem angegebenen Text.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-285">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-286">Wenn `text` handelt es sich um `null` oder `String.Empty`, diese Methode schreibt eine `Comment` ohne Inhalt, z. B. Daten \<!--->.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-287">Das folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-288">Der Text ergibt kein wohlgeformtes XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-288">The text would result in a non-well formed XML document</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-289"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5f5fd-290">Der Name des DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-290">The name of the DOCTYPE.</span></span> <span data-ttu-id="5f5fd-291">Dieser darf nicht leer sein.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-291">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="5f5fd-292">Bei einem Wert ungleich NULL wird auch PUBLIC „pubid“ und „sysid“ geschrieben, wobei <c>pubid</c> und <c>sysid</c> durch die Werte der angegebenen Argumente ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-292">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="5f5fd-293">Wenn <c>pubid</c> gleich NULL und <c>sysid</c> ungleich NULL ist, wird SYSTEM „sysid“ geschrieben, wobei <c>sysid</c> durch den Wert dieses Arguments ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-293">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="5f5fd-294">Wenn nicht NULL, wird [subset] geschrieben, wobei subset durch den Wert dieses Arguments ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="5f5fd-295">Schreibt die DOCTYPE-Deklaration mit dem angegebenen Namen und optionalen Attributen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-296">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-297">Diese Methode überprüft nicht für ungültige Zeichen in `pubid`, `sysid` oder `subset`.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="5f5fd-298">Er überprüft auch nicht, dass die interne Teilmenge wohlgeformt ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5f5fd-299">Die <xref:System.Xml.XmlTextWriter> überprüft nicht, dass alle Daten, die an die <xref:System.Xml.XmlTextWriter.WriteDocType%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="5f5fd-300">Sie sollten Sie beliebige Daten nicht an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-301">Das folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-302">Diese Methode wurde außerhalb des Prologs (nach dem Stammelement) aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-302">This method was called outside the prolog (after the root element).</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f5fd-303"><paramref name="name" /> oder <see langword="null" /> ist <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-303"><paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span></span>  
  
 <span data-ttu-id="5f5fd-304">- oder - </span><span class="sxs-lookup"><span data-stu-id="5f5fd-304">-or-</span></span>  
  
 <span data-ttu-id="5f5fd-305">Der Wert für <paramref name="name" /> würde zu ungültigem XML-Code führen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-305">the value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f5fd-306">Schließt den vorherigen Aufruf von <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-307">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-308">Beim Aufrufen `WriteStartAttribute`, können Sie das Attribut mit dieser Methode schließen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="5f5fd-309">Sie können auch das Attribut schließen, durch den Aufruf `WriteStartAttribute` erneut aufrufen <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, oder zum Aufrufen von <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-310">Das folgende Beispiel schreibt ein Buch aus.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f5fd-311">Schließt alle geöffneten Elemente oder Attribute und setzt den Writer in den Startzustand zurück.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-311">Closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-312">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-313">Das folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-314">Das XML-Dokument ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-314">The XML document is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f5fd-315">Schließt ein Element und löst den entsprechenden Namespacebereich auf.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-315">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-316">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-317">Wenn das Element keinen Inhalt enthält eine kurze Endtag "/ >" geschrieben wird. Andernfalls wird ein vollständiges Endtag geschrieben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-318">Das folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5f5fd-319">Name des Entitätsverweises.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-319">Name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="5f5fd-320">Schreibt einen Entitätsverweis als <see langword="&amp;name;" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-320">Writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-321">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-322">Das folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-323">Der Text ergibt kein wohlgeformtes XML-Dokument, oder <paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f5fd-324">Schließt ein Element und löst den entsprechenden Namespacebereich auf.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-324">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-325">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-326">Diese Methode schreibt immer das vollständige Endtag.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-326">This method always writes the full end tag.</span></span> <span data-ttu-id="5f5fd-327">Dies ist hilfreich beim Umgang mit Elementen, die ein vollständiges Endtag einschließen muss.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="5f5fd-328">Beispielsweise Browsern erwarten HTML Skriptblöcke geschlossen werden, mit " \< /script >".</span><span class="sxs-lookup"><span data-stu-id="5f5fd-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-329">Das folgende Beispiel schreibt ein Element ohne Inhalt ab.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="5f5fd-330">WriteFullEndElement verwendet, um die vollständige Endtag schreiben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5f5fd-331">Zu schreibender Name.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-331">Name to write.</span></span></param>
        <summary><span data-ttu-id="5f5fd-332">Schreibt den angegebenen Namen und prüft dessen Gültigkeit entsprechend der W3C-Empfehlung für XML, Version 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="5f5fd-332">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-333">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-334">Wenn <xref:System.Xml.XmlTextWriter.Namespaces%2A> festgelegt ist, um `true`, `WriteName` überprüft auch, dass der Name gemäß der W3C-Namespaces in XML-Empfehlung gültig ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f5fd-335"><paramref name="name" /> ist kein gültiger XML-Name, oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-335"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5f5fd-336">Zu schreibender Name.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-336">Name to write.</span></span></param>
        <summary><span data-ttu-id="5f5fd-337">Schreibt den angegebenen Namen und prüft, ob es ein gültiger <see langword="NmToken" /> ist, entsprechend der W3C-Empfehlung für XML, Version 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span><span class="sxs-lookup"><span data-stu-id="5f5fd-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-338">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f5fd-339"><paramref name="name" /> ist kein gültiges <see langword="NmToken" />; oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-339"><paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="5f5fd-340">Name der Verarbeitungsanweisung.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-340">Name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="5f5fd-341">In die Verarbeitungsanweisung einzufügender Text.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-341">Text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="5f5fd-342">Schreibt eine Verarbeitungsanweisung mit einem Leerzeichen zwischen dem Namen und dem Text wie folgt: &lt;?name text?&gt;.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-343">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-344">Wenn `text` handelt es sich um `null` oder `String.Empty`, diese Methode schreibt eine `ProcessingInstruction` ohne Inhalt, z. B. Daten \<? Name? >.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-345">Das folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-346">Der Text ergibt kein wohlgeformtes XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-346">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="5f5fd-347"><paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-347"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="5f5fd-348">Diese Methode wird zum Erstellen einer XML-Deklaration nach einem Aufruf von <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="5f5fd-349">Der zu schreibende lokale Name.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-349">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="5f5fd-350">Der Namespace-URI, der dem Namen zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-350">The namespace URI to associate with the name.</span></span></param>
        <summary><span data-ttu-id="5f5fd-351">Schreibt den durch den Namespace angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-351">Writes out the namespace-qualified name.</span></span> <span data-ttu-id="5f5fd-352">Diese Methode sucht das Präfix im Gültigkeitsbereich des Namespaces.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-352">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-353">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-354">Um beispielsweise den folgenden Microsoft Visual C#-Code:</span><span class="sxs-lookup"><span data-stu-id="5f5fd-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="5f5fd-355">Generiert die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="5f5fd-355">Generates the following output:</span></span>  
  
```  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="5f5fd-356">Wenn `ns` ordnet dem aktuellen Standardnamespace, kein Präfix generiert wird.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="5f5fd-357">Beim Schreiben von Attributwerten generiert diese Methode ein Präfix an, wenn `ns` wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="5f5fd-358">Beim Schreiben von Elementinhalt wird eine Ausnahme ausgelöst, wenn `ns` wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="5f5fd-359">Wenn dieser Writer Namespaces unterstützt (<xref:System.Xml.XmlTextWriter.Namespaces%2A> festgelegt ist, um `true`), diese Methode überprüft außerdem, dass der Name gemäß der W3C-Namespaces in XML-Empfehlung gültig ist (http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="5f5fd-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-360">Das folgende Beispiel schreibt einen Teil eines XSD-Schemas.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f5fd-361"><paramref name="localName" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-361"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="5f5fd-362"><paramref name="localName" /> ist kein entsprechend der W3C-Spezifikation für Namespaces gültiger Name.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-362"><paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f5fd-363">Schreibt unformatiertes Markup manuell.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-363">Writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-364">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="5f5fd-365">Zeichenfolge, die den zu schreibenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-365">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="5f5fd-366">Schreibt unformatiertes Markup manuell aus einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-366">Writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-367">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-368">Diese Methode ist nicht Sonderzeichen mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5f5fd-369">Die <xref:System.Xml.XmlTextWriter> überprüft nicht, dass alle Daten, die an die <xref:System.Xml.XmlTextWriter.WriteRaw%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="5f5fd-370">Sie sollten Sie beliebige Daten nicht an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-371">Das folgende Beispiel schreibt eine Zeichenfolge mit der `WriteRaw` Methode.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="5f5fd-372">Zeichenarray, das den zu schreibenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-372">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="5f5fd-373">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-373">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="5f5fd-374">Die Anzahl der zu schreibenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-374">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="5f5fd-375">Schreibt unformatiertes Markup manuell aus einem Zeichenpuffer.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-375">Writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-376">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-377">Diese Methode ist nicht Sonderzeichen mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5f5fd-378">Die <xref:System.Xml.XmlTextWriter> überprüft nicht, dass alle Daten, die an die <xref:System.Xml.XmlTextWriter.WriteRaw%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="5f5fd-379">Sie sollten Sie beliebige Daten nicht an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f5fd-380"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-380"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5f5fd-381"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-381"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="5f5fd-382">- oder - </span><span class="sxs-lookup"><span data-stu-id="5f5fd-382">-or-</span></span>  
  
 <span data-ttu-id="5f5fd-383">Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="5f5fd-384"><see langword="Namespace" />-Präfix des Attributs.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-384"><see langword="Namespace" /> prefix of the attribute.</span></span></param>
        <param name="localName">
          <span data-ttu-id="5f5fd-385"><see langword="LocalName" /> des Attributs.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-385"><see langword="LocalName" /> of the attribute.</span></span></param>
        <param name="ns">
          <span data-ttu-id="5f5fd-386"><see langword="NamespaceURI" /> des Attributs.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-386"><see langword="NamespaceURI" /> of the attribute</span></span></param>
        <summary><span data-ttu-id="5f5fd-387">Schreibt den Anfang eines Attributs.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-387">Writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-388">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-389">Dies ist eine erweiterte Version des <xref:System.Xml.XmlWriter.WriteAttributeString%2A> , mit der Sie zum Schreiben eines Attributwerts mit mehreren Write-Methoden, wie <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-390">Das folgende Beispiel schreibt ein Buch aus.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5f5fd-391"><paramref name="localName" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-391"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="5f5fd-392">Schreibt die XML-Deklaration mit der Version "1.0".</span><span class="sxs-lookup"><span data-stu-id="5f5fd-392">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-393">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5f5fd-394">Schreibt die XML-Deklaration mit der Version "1.0".</span><span class="sxs-lookup"><span data-stu-id="5f5fd-394">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-395">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-396">Die Codierung des Dokuments wird bestimmt durch die Implementierung des Writers.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="5f5fd-397">Z. B. wenn ein <xref:System.Text.Encoding> Objekt wurde angegeben, der `XmlTextWriter` Konstruktor Dies bestimmt den Wert des Codierungsattributs.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="5f5fd-398">Diese Methode erstellt kein eigenständiges Attribut.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="5f5fd-399">Wenn `WriteStartDocument` heißt der Writer überprüft, ob Sie gerade ein wohlgeformtes XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="5f5fd-400">Beispielsweise überprüft er, dass die XML-Deklaration der erste Knoten, eine ist und nur ein Stamm-Level-Element vorhanden und so weiter ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="5f5fd-401">Diese Methode nicht aufgerufen wird, geht davon aus der Writer geschrieben wird, und ein XML-Fragment gilt keine Regeln auf Stammebene.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="5f5fd-402">Wenn `WriteStartDocument` aufgerufen wurde und dann die <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> Methode zum Erstellen einer anderen XML-Deklaration verwendet wird, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-403">Das folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-404">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-404">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="5f5fd-405">Wenn <see langword="true" />, wird "standalone=yes" geschrieben, wenn <see langword="false" />, wird "standalone=no" geschrieben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="5f5fd-406">Schreibt die XML-Deklaration mit der Version "1.0" und dem eigenständigen Attribut.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-407">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-408">Die Codierung des Dokuments wird bestimmt durch die Implementierung des Writers.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="5f5fd-409">Z. B. wenn ein <xref:System.Text.Encoding> Objekt wurde angegeben, der `XmlTextWriter` Konstruktor Dies bestimmt den Wert des Codierungsattributs.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="5f5fd-410">Wenn `WriteStartDocument` heißt der Writer überprüft, ob Sie gerade ein wohlgeformtes XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="5f5fd-411">Beispielsweise überprüft er, dass die XML-Deklaration der erste Knoten, eine ist und nur ein Stamm-Level-Element vorhanden und so weiter ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="5f5fd-412">Diese Methode nicht aufgerufen wird, geht davon aus der Writer geschrieben wird, und ein XML-Fragment gilt keine Regeln auf Stammebene.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="5f5fd-413">Wenn `WriteStartDocument` aufgerufen wurde und dann die <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> Methode zum Erstellen einer anderen XML-Deklaration verwendet wird, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-414">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-414">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="5f5fd-415">Das Namespacepräfix des Elements.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-415">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="5f5fd-416">Der lokale Name des Elements.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-416">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="5f5fd-417">Der Namespace-URI, der dem Element zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-417">The namespace URI to associate with the element.</span></span> <span data-ttu-id="5f5fd-418">Wenn sich dieser Namespace bereits im Gültigkeitsbereich befindet und dem Namespace ein Präfix zugeordnet ist, schreibt der Writer automatisch auch das Präfix.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="5f5fd-419">Schreibt das angegebene Starttag und ordnet dieses dem angegebenen Namespace und Präfix zu.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-419">Writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-420">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-421">Nach dem Aufrufen dieser Methode können Sie Attribute schreiben oder erstellen Sie Inhalt mithilfe von <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, oder <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> für untergeordnete Elemente.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="5f5fd-422">Sie können das Element mit schließen <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> zu diesem Zeitpunkt ein Endtag geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-423">Das folgende Beispiel schreibt ein Buch aus.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5f5fd-424">Der Writer ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-424">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5fd-425">Ruft den Zustand des Writers ab.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-425">Gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="5f5fd-426">Einer der <see cref="T:System.Xml.WriteState" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-427">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="5f5fd-428">Zu schreibender Text.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-428">Text to write.</span></span></param>
        <summary><span data-ttu-id="5f5fd-429">Schreibt den angegebenen Textinhalt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-429">Writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-430">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-431">`WriteString` führt die folgenden Aufgaben aus</span><span class="sxs-lookup"><span data-stu-id="5f5fd-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="5f5fd-432">Die Zeichen `&`, `<`, und `>` durch ersetzt `&amp;`, `&lt;`, und `&gt;`zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="5f5fd-433">Zeichenwerte im Bereich 0-x-0x1F (außer den Leerzeichen 0 x 9, 0xA und 0xD) werden durch numerische Zeichenentitäten ersetzt (`&#0;` über `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="5f5fd-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="5f5fd-434">Wenn `WriteString` heißt im Kontext eines Attributwerts durch doppelte und einfache Anführungszeichen ersetzt `&quot;` und `&apos;` bzw.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="5f5fd-435">Beispielsweise Eingabezeichenfolge `test<item>test` als geschrieben wird</span><span class="sxs-lookup"><span data-stu-id="5f5fd-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="5f5fd-436">Wenn `text` handelt es sich um `null` oder `String.Empty`, diese Methode schreibt einen Textknoten mit Dateninhalt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-437">Das folgende Beispiel schreibt ein XML-Fragment.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-438">Die Textzeichenfolge enthält ein ungültiges Ersatzzeichenpaar.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-438">The text string contains an invalid surrogate pair.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="5f5fd-439">Das niedrige Ersatzzeichen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-439">The low surrogate.</span></span> <span data-ttu-id="5f5fd-440">Dabei muss es sich um einen Wert zwischen <see langword="0xDC00" /> und <see langword="0xDFFF" /> handeln.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span></span></param>
        <param name="highChar"><span data-ttu-id="5f5fd-441">Das hohe Ersatzzeichen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-441">The high surrogate.</span></span> <span data-ttu-id="5f5fd-442">Dabei muss es sich um einen Wert zwischen <see langword="0xD800" /> und <see langword="0xDBFF" /> handeln.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span></span></param>
        <summary><span data-ttu-id="5f5fd-443">Generiert und schreibt die Ersatzzeichenentität für das Ersatzzeichenpaar.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-443">Generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-444">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-445">Diese Methode ist nur anwendbar auf Systemen, die UTF-16-Codierung verwenden.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="5f5fd-446">Die Ersatzzeichenentität wird im Hexadezimalformat geschrieben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="5f5fd-447">Der Bereich für Ersatzzeichen ist `#x10000` auf `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="5f5fd-448">Die folgende Formel wird verwendet, um die Ersatzzeichenentität zu generieren: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="5f5fd-449">Für HTML und XML-Dokument-Zeichensatz (und daher die Notation der numerischen Zeichenverweisen) UCS [ISO 10646] basiert.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="5f5fd-450">Einen einzelnen numerischen Zeichenverweis in ein Quelldokument kann daher in einigen Fällen zwei 16-Bit-Einheiten in einer Zeichenfolge (ein hohes Ersatzzeichen und ein niedriges Ersatzzeichen) entsprechen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="5f5fd-451">Diese 16-Bit-Einheiten werden als ein Ersatzzeichenpaar bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="5f5fd-452">Weitere Informationen über Ersatzzeichen oder Zeichen finden Sie in Abschnitt 3.7 des Unicode-standard 3.0/Unicode-2.0 finden Sie unter http://www.unicode.org, oder Abschnitt 2.2 des W3C XML 1.0-Empfehlung finden Sie unter http://www.w3.org/TR/REC-xml#charsets.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-452">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="5f5fd-453">Es wurde ein ungültiges Ersatzzeichenpaar übergeben.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-453">An invalid surrogate character pair was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="5f5fd-454">Die Zeichenfolge von Leerraumzeichen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-454">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="5f5fd-455">Schreibt den angegebenen Leerraum.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-455">Writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-456">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-457">Diese Methode wird verwendet, auf das Dokument manuell formatieren.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-457">This method is used to manually format your document.</span></span> <span data-ttu-id="5f5fd-458">Verwenden der <xref:System.Xml.XmlTextWriter.Formatting%2A> Eigenschaft so, dass den Writer automatisch formatieren der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-459">Im folgenden Beispiel wird die `WriteWhitespace` Methode, um zu steuern, wie die Datei formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="5f5fd-460">Die Zeichenfolge enthält Zeichen, die keine Leerraumzeichen sind.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-460">The string contains non-white space characters.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5fd-461">Ruft den aktuellen <see langword="xml:lang" />-Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-461">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="5f5fd-462">Der aktuelle <see langword="xml:lang" /> oder <see langword="null" />, wenn im aktuellen Bereich kein <see langword="xml:lang" /> vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-463">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-464">Diese Eigenschaft kann es sich um eine Komponente, um herauszufinden, welcher Zustand auf den Writer in einer anderen Komponente verlassen hat.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="5f5fd-465">Beispielsweise möchte vielleicht eine Komponente einer anderen mitteilen, welche Sprache Hilfetext generiert ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="5f5fd-466">Die Sprachinformationen durch Schreiben einer `xml:lang` Attribut.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="5f5fd-467">Ruft einen <see cref="T:System.Xml.XmlSpace" /> ab, der den aktuellen <see langword="xml:space" />-Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="5f5fd-468">Ein <see langword="XmlSpace" />, der den aktuellen <see langword="xml:space" />-Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <span data-ttu-id="5f5fd-469"><list type="table"><listheader><term> Wert</span><span class="sxs-lookup"><span data-stu-id="5f5fd-469"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="5f5fd-470"></term><description> Bedeutung</span><span class="sxs-lookup"><span data-stu-id="5f5fd-470"></term><description> Meaning</span></span>  
  
 <span data-ttu-id="5f5fd-471"></description></listheader><item><term> Keine</span><span class="sxs-lookup"><span data-stu-id="5f5fd-471"></description></listheader><item><term> None</span></span>  
  
 <span data-ttu-id="5f5fd-472"></term><description> Dies ist die Standardeinstellung, wenn kein <see langword="xml:space" /> -Bereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-472"></term><description> This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 <span data-ttu-id="5f5fd-473"></description></item><item><term> Standardwert</span><span class="sxs-lookup"><span data-stu-id="5f5fd-473"></description></item><item><term> Default</span></span>  
  
 <span data-ttu-id="5f5fd-474"></term><description> Der aktuelle Bereich ist <see langword="xml:space" />= "Default".</span><span class="sxs-lookup"><span data-stu-id="5f5fd-474"></term><description> The current scope is <see langword="xml:space" />="default".</span></span>  
  
 <span data-ttu-id="5f5fd-475"></description></item><item><term> Beibehalten</span><span class="sxs-lookup"><span data-stu-id="5f5fd-475"></description></item><item><term> Preserve</span></span>  
  
 <span data-ttu-id="5f5fd-476"></term><description> Der aktuelle Bereich ist <see langword="xml:space" />= "preserve".</span><span class="sxs-lookup"><span data-stu-id="5f5fd-476"></term><description> The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="5f5fd-477">Beginnend mit .NET Framework 2.0, wir empfehlen das Erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um neue Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="5f5fd-478">Diese Eigenschaft kann es sich um eine Komponente, um herauszufinden, in welchem Zustand sich, dass eine andere Komponente den Writer verlassen hat.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5f5fd-479">Im folgenden Beispiel wird die `WriteWhitespace` Methode, um zu steuern, wie die Datei formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="5f5fd-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>