<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="786f9bb888df9f3727847c867b60c8d2e82eee81" /><Meta Name="ms.sourcegitcommit" Value="05b28af3128fd8a2fe51178c9a1cc798d4601bf7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/12/2020" /><Meta Name="ms.locfileid" Value="83231218" /></Metadata><TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;netcore-2.2;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dc98d-101">Stellt einen Writer für die schnelle, nicht zwischengespeicherte Vorwärtsgenerierung von Streams oder Dateien dar, die XML-Daten gemäß den W3C-Empfehlungen zu XML (Extensible Markup Language), Version 1.0, und zu Namespaces in XML enthalten.</span><span class="sxs-lookup"><span data-stu-id="dc98d-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span></span>  
  
<span data-ttu-id="dc98d-102">Ab .NET Framework 2.0 sollten Sie stattdessen die <see cref="T:System.Xml.XmlWriter" />-Klasse verwenden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc98d-103">Diese Klasse implementiert die <xref:System.Xml.XmlWriter>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc98d-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-104">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-105">`XmlTextWriter` verwaltet einen Namespace Stapel, der allen im aktuellen Element Stapel definierten Namespaces entspricht.</span><span class="sxs-lookup"><span data-stu-id="dc98d-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="dc98d-106">Mithilfe `XmlTextWriter` können Sie Namespaces manuell deklarieren.</span><span class="sxs-lookup"><span data-stu-id="dc98d-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
w.WriteStartElement("item","urn:1");  
w.WriteEndElement();  
w.WriteStartElement("item","urn:1");  
w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="dc98d-107">Der obige C# Code erzeugt die folgende Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="dc98d-107">The above C# code produces the following output.</span></span> <span data-ttu-id="dc98d-108">`XmlTextWriter` stuft die Namespace Deklaration auf das Stamm Element herauf, um zu vermeiden, dass Sie in den beiden untergeordneten Elementen dupliziert wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="dc98d-109">Die untergeordneten Elemente übernehmen das Präfix aus der Namespace Deklaration.</span><span class="sxs-lookup"><span data-stu-id="dc98d-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="dc98d-110">`XmlTextWriter` ermöglicht außerdem das Überschreiben der aktuellen Namespace Deklaration.</span><span class="sxs-lookup"><span data-stu-id="dc98d-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="dc98d-111">Im folgenden Beispiel wird der Namespace-URI "123" von "ABC" überschrieben, um das XML-Element `<x:node xmlns:x="abc"/>`zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="dc98d-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="dc98d-112">Durch die Verwendung der Write-Methoden, die ein Präfix als Argument akzeptieren, können Sie auch angeben, welches Präfix verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="dc98d-113">Im folgenden Beispiel werden zwei unterschiedliche Präfixe dem gleichen Namespace-URI zugeordnet, um den XML-Text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="dc98d-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="dc98d-114">Wenn mehrere Namespace Deklarationen dem gleichen Namespace-URI unterschiedliche Präfixe zugeordnet sind, führt `XmlTextWriter` den Stapel von Namespace Deklarationen rückwärts aus und wählt die nächstgelegene aus.</span><span class="sxs-lookup"><span data-stu-id="dc98d-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="dc98d-115">Da im obigen C# Beispiel der `WriteAttributeString`-Aufrufe kein Präfix angibt, verwendet der Writer das letzte Präfix, das auf dem Namespace Stapel abgelegt wurde, und erzeugt den folgenden XML-Code:</span><span class="sxs-lookup"><span data-stu-id="dc98d-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="dc98d-116">Wenn Namespace Konflikte auftreten, werden Sie von `XmlTextWriter` durch das Erstellen alternativer Präfixe aufgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc98d-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="dc98d-117">Wenn ein Attribut und ein Element z. b. über das gleiche Präfix, aber unterschiedliche Namespaces verfügen, generiert `XmlWriter` ein alternatives Präfix für das Attribut.</span><span class="sxs-lookup"><span data-stu-id="dc98d-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="dc98d-118">Die generierten Präfixe werden `n{i}` benannt, wobei `i` eine Zahl ist, die bei 1 beginnt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="dc98d-119">Die Zahl wird für jedes Element auf 1 zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="dc98d-120">Attribute, die einem Namespace-URI zugeordnet sind, müssen ein Präfix aufweisen (Standardnamespaces gelten nicht für Attribute).</span><span class="sxs-lookup"><span data-stu-id="dc98d-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="dc98d-121">Dies entspricht Abschnitt 5,2 der Empfehlung "W3C-Namespaces in XML".</span><span class="sxs-lookup"><span data-stu-id="dc98d-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="dc98d-122">Wenn ein Attribut auf einen Namespace-URI verweist, aber kein Präfix angibt, generiert der Writer ein Präfix für das Attribut.</span><span class="sxs-lookup"><span data-stu-id="dc98d-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="dc98d-123">Wenn Sie ein leeres-Element schreiben, wird ein zusätzlicher Platz zwischen dem Tagnamen und dem schließenden Tag hinzugefügt, z. b. `<item />`.</span><span class="sxs-lookup"><span data-stu-id="dc98d-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="dc98d-124">Dadurch wird die Kompatibilität mit älteren Browsern ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="dc98d-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="dc98d-125">Wenn ein `String` als Methoden Parameter verwendet wird, sind `null` und `String.Empty` Äquivalent.</span><span class="sxs-lookup"><span data-stu-id="dc98d-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="dc98d-126">`String.Empty` folgt den W3C-Regeln.</span><span class="sxs-lookup"><span data-stu-id="dc98d-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="dc98d-127">Um stark typisierte Daten zu schreiben, verwenden Sie die <xref:System.Xml.XmlConvert>-Klasse zum Konvertieren von Datentypen in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="dc98d-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="dc98d-128">Der folgende C# Code konvertiert z. b. die Daten aus `Double` in `String` und schreibt das Element `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="dc98d-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="dc98d-129">`XmlTextWriter` prüft nicht Folgendes:</span><span class="sxs-lookup"><span data-stu-id="dc98d-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="dc98d-130">Ungültige Zeichen in Attribut-und Elementnamen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="dc98d-131">Unicode-Zeichen, die nicht der angegebenen Codierung entsprechen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="dc98d-132">Wenn die Unicode-Zeichen nicht der angegebenen Codierung entsprechen, werden die Unicode-Zeichen vom `XmlTextWriter` nicht in Zeichen Entitäten mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="dc98d-133">Doppelte Attribute.</span><span class="sxs-lookup"><span data-stu-id="dc98d-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="dc98d-134">Zeichen im öffentlichen Bezeichner DOCTYPE oder System Bezeichner.</span><span class="sxs-lookup"><span data-stu-id="dc98d-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="dc98d-135">Sicherheitsüberlegungen</span><span class="sxs-lookup"><span data-stu-id="dc98d-135">Security Considerations</span></span>  
 <span data-ttu-id="dc98d-136">Beim Arbeiten mit der <xref:System.Xml.XmlTextWriter>-Klasse sind die folgenden Punkte zu beachten:</span><span class="sxs-lookup"><span data-stu-id="dc98d-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="dc98d-137">Ausnahmen, die vom <xref:System.Xml.XmlTextWriter> ausgelöst werden, können Pfadinformationen offenlegen, die nicht an die Anwendung weitergegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="dc98d-138">Die Anwendungen müssen diese Ausnahmen abfangen und entsprechend verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="dc98d-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="dc98d-139">Wenn ein <xref:System.Xml.XmlTextWriter> an eine andere Anwendung übergeben wird, wird der zu Grunde liegenden Stream für diese Anwendung offengelegt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="dc98d-140">Übergeben Sie an eine teilweise vertrauenswürdige Anwendung ein von der <xref:System.Xml.XmlTextWriter>-Methode erstelltes <xref:System.Xml.XmlWriter>-Objekt anstelle eines <xref:System.Xml.XmlWriter.Create%2A>-Objekts.</span><span class="sxs-lookup"><span data-stu-id="dc98d-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="dc98d-141">Die <xref:System.Xml.XmlTextWriter> überprüft keine Daten, die an die Methoden <xref:System.Xml.XmlTextWriter.WriteDocType%2A> oder <xref:System.Xml.XmlTextWriter.WriteRaw%2A> übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="dc98d-142">Sie sollten keine beliebigen Daten an diese Methoden übergeben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="dc98d-143">Wenn die Standardeinstellungen geändert werden, gibt es keine Garantie dafür, dass die generierte Ausgabe wohlgeformte XML-Daten ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="dc98d-144">Akzeptieren Sie keine unterstützenden Komponenten, z. b. ein <xref:System.Text.Encoding> Objekt, von einer nicht vertrauenswürdigen Quelle.</span><span class="sxs-lookup"><span data-stu-id="dc98d-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md"><span data-ttu-id="dc98d-145">XML-Dokumente und XML-Daten</span><span class="sxs-lookup"><span data-stu-id="dc98d-145">XML Documents and Data</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc98d-146">Erstellt eine Instanz der <see langword="XmlTextWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc98d-146">Creates an instance of the <see langword="XmlTextWriter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-147">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="dc98d-148">Der <see langword="TextWriter" />, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-148">The <see langword="TextWriter" /> to write to.</span></span> <span data-ttu-id="dc98d-149">Hierbei wird vorausgesetzt, dass der <see langword="TextWriter" /> bereits auf die korrekte Codierung eingestellt ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-149">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span></span></param>
        <summary><span data-ttu-id="dc98d-150">Erstellt mithilfe des angegebenen <see langword="XmlTextWriter" /> eine Instanz der <see cref="T:System.IO.TextWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc98d-150">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-151">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As Stream, encoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="dc98d-152">Der Stream, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-152">The stream to which you want to write.</span></span></param>
        <param name="encoding"><span data-ttu-id="dc98d-153">Die zu generierende Codierung.</span><span class="sxs-lookup"><span data-stu-id="dc98d-153">The encoding to generate.</span></span> <span data-ttu-id="dc98d-154">Wenn die Codierung <see langword="null" /> ist, wird der Stream UTF-8-codiert ausgegeben, und das Codierungsattribut der <see langword="ProcessingInstruction" /> wird nicht berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-154">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="dc98d-155">Erstellt mithilfe des angegebenen Streams und der angegebenen Codierung eine Instanz der <see langword="XmlTextWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc98d-155">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-156">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-157">Die Codierung wird nicht unterstützt, oder es kann nicht in den Stream geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-157">The encoding is not supported or the stream cannot be written to.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc98d-158"><paramref name="w" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-158"><paramref name="w" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, encoding As Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename"><span data-ttu-id="dc98d-159">Der Name der Datei, in die geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-159">The filename to write to.</span></span> <span data-ttu-id="dc98d-160">Wenn die Datei vorhanden ist, wird diese abgeschnitten und mit dem neuen Inhalt überschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-160">If the file exists, it truncates it and overwrites it with the new content.</span></span></param>
        <param name="encoding"><span data-ttu-id="dc98d-161">Die zu generierende Codierung.</span><span class="sxs-lookup"><span data-stu-id="dc98d-161">The encoding to generate.</span></span> <span data-ttu-id="dc98d-162">Wenn die Codierung <see langword="null" /> ist, wird die Datei UTF-8-codiert ausgegeben, und das Codierungsattribut der <see langword="ProcessingInstruction" /> wird nicht berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-162">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span></span></param>
        <summary><span data-ttu-id="dc98d-163">Erstellt mithilfe der angegebenen Datei eine Instanz der <see cref="T:System.Xml.XmlTextWriter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dc98d-163">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-164">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-164">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-165">Die Codierung wird nicht unterstützt; der Dateiname ist leer oder enthält nur Leerraum bzw. ein oder mehrere ungültige(s) Zeichen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-165">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span></span></exception>
        <exception cref="T:System.UnauthorizedAccessException"><span data-ttu-id="dc98d-166">Der Zugriff wird verweigert.</span><span class="sxs-lookup"><span data-stu-id="dc98d-166">Access is denied.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc98d-167">Der Dateiname ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-167">The filename is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.DirectoryNotFoundException"><span data-ttu-id="dc98d-168">Das Verzeichnis, in das geschrieben werden soll, wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-168">The directory to write to is not found.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="dc98d-169">Der Dateiname enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</span><span class="sxs-lookup"><span data-stu-id="dc98d-169">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="dc98d-170">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span><span class="sxs-lookup"><span data-stu-id="dc98d-170">The caller does not have the required permission.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc98d-171">Ruft das zugrunde liegende Streamobjekt ab.</span><span class="sxs-lookup"><span data-stu-id="dc98d-171">Gets the underlying stream object.</span></span></summary>
        <value><span data-ttu-id="dc98d-172">Der Stream, in den der <see langword="XmlTextWriter" /> schreibt oder <see langword="null" />, wenn der <see langword="XmlTextWriter" /> mithilfe eines <see cref="T:System.IO.TextWriter" /> erstellt wurde, der nicht von der <see cref="T:System.IO.StreamWriter" />-Klasse vererbt wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-172">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-173">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-173">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-174">Wenn der Writer mithilfe eines `TextWriter` erstellt wurde, der von der `StreamWriter`-Klasse abgeleitet ist, entspricht diese Eigenschaft der <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="dc98d-174">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="dc98d-175">Wenn der Writer mithilfe eines <xref:System.IO.Stream>erstellt wurde, gibt diese Eigenschaft die `Stream` zurück, die an den Konstruktor übergeben wurden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-175">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="dc98d-176">Wenn der Writer mithilfe eines Datei namens erstellt wurde, gibt diese Eigenschaft die `Stream` zurück, die die Datei darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-176">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc98d-177">Schließt diesen Stream und den zugrunde liegenden Stream.</span><span class="sxs-lookup"><span data-stu-id="dc98d-177">Closes this stream and the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-178">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-179">Alle geöffneten Elemente oder Attribute werden automatisch geschlossen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-179">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="dc98d-180">Diese Methode löst keine Ausnahmen aus.</span><span class="sxs-lookup"><span data-stu-id="dc98d-180">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-181">Im folgenden Beispiel wird ein XML-Fragment geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-181">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc98d-182">Entleert den Pufferinhalt in die zugrunde liegenden Streams und entleert den zugrunde liegenden Stream ebenfalls.</span><span class="sxs-lookup"><span data-stu-id="dc98d-182">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-183">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-183">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-184">Dies wird anstelle von <xref:System.Xml.XmlTextWriter.Close%2A> aufgerufen, wenn Sie mehr in den zugrunde liegenden Stream schreiben möchten, ohne zu verlieren, was sich noch im Puffer befindet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-184">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-185">Im folgenden Beispiel werden zwei XML-Fragmente geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-185">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc98d-186">Gibt die Formatierung der Ausgabe an.</span><span class="sxs-lookup"><span data-stu-id="dc98d-186">Indicates how the output is formatted.</span></span></summary>
        <value><span data-ttu-id="dc98d-187">Einer der <see cref="T:System.Xml.Formatting" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="dc98d-187">One of the <see cref="T:System.Xml.Formatting" /> values.</span></span> <span data-ttu-id="dc98d-188">Der Standardwert ist <see langword="Formatting.None" /> (keine besondere Formatierung).</span><span class="sxs-lookup"><span data-stu-id="dc98d-188">The default is <see langword="Formatting.None" /> (no special formatting).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-189">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-190">Wenn die `Indented`-Option festgelegt ist, werden untergeordnete Elemente mithilfe der Eigenschaften <xref:System.Xml.XmlTextWriter.Indentation%2A> und <xref:System.Xml.XmlTextWriter.IndentChar%2A> eingezogen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-190">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="dc98d-191">Nur Element Inhalt wird eingezogen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-191">Only element content is indented.</span></span> <span data-ttu-id="dc98d-192">Der folgende C# Code schreibt HTML-Elemente einschließlich gemischtem Inhalt:</span><span class="sxs-lookup"><span data-stu-id="dc98d-192">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="dc98d-193">Mit dem obigen Code wird die folgende Ausgabe erzeugt:</span><span class="sxs-lookup"><span data-stu-id="dc98d-193">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="dc98d-194">Wenn dies in HTML angezeigt wird, wird kein Leerraum zwischen den Fetten und kursiv formatierten Elementen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-194">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="dc98d-195">In diesem Beispiel würde das Wort "Elephant" in diesem Beispiel fälschlicherweise beschädigt werden, wenn zwischen diesen Elementen ein Einzug hinzugefügt wurde.</span><span class="sxs-lookup"><span data-stu-id="dc98d-195">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
> <span data-ttu-id="dc98d-196">Wenn Sie Textinhalte ohne `String.Empty` schreiben, wird dieses Element in den gemischten Inhalts Modus versetzt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-196">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="dc98d-197">Untergeordnete Elemente erben den Status "gemischter Modus" nicht.</span><span class="sxs-lookup"><span data-stu-id="dc98d-197">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="dc98d-198">Ein untergeordnetes Element eines "gemischten" Elements führt einen Einzug durch, es sei denn, es enthält auch gemischte Inhalte.</span><span class="sxs-lookup"><span data-stu-id="dc98d-198">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="dc98d-199">[Element Inhalt](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) und [gemischter Inhalt](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) werden gemäß den XML 1,0-Definitionen dieser Begriffe definiert.</span><span class="sxs-lookup"><span data-stu-id="dc98d-199">[Element content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and [mixed content](https://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
## Examples  
 <span data-ttu-id="dc98d-200">Im folgenden Beispiel wird ein XML-Fragment geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-200">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc98d-201">Ruft ab oder legt fest, wie viele IndentChars für jede Ebene der Hierarchie geschrieben werden sollen, wenn <see cref="P:System.Xml.XmlTextWriter.Formatting" /> auf <see langword="Formatting.Indented" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-201">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="dc98d-202">Anzahl von <see langword="IndentChars" /> für jede Ebene.</span><span class="sxs-lookup"><span data-stu-id="dc98d-202">Number of <see langword="IndentChars" /> for each level.</span></span> <span data-ttu-id="dc98d-203">Der Standardwert ist&amp;#160;2.</span><span class="sxs-lookup"><span data-stu-id="dc98d-203">The default is 2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-204">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-204">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-205">Der Einzug wird für die folgenden Knoten Typen ausgeführt: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`und `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="dc98d-205">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="dc98d-206">Alle anderen Knoten Typen sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-206">All other node types are not affected.</span></span> <span data-ttu-id="dc98d-207">Der `XmlTextWriter` fügt die interne DTD-Teilmenge nicht ein.</span><span class="sxs-lookup"><span data-stu-id="dc98d-207">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="dc98d-208">Sie können jedoch wie folgt vorgehen, um die Formatierung auf die interne DTD-Teilmenge anzuwenden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-208">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft'>]>  
";  
XmlTextWriter tw = new XmlTextWriter(Console.Out);  
tw.WriteDocType(name, pubid, sysid, subset);  
```  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-209">Im folgenden Beispiel wird ein XML-Fragment geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-209">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-210">Diese Eigenschaft wird auf einen negativen Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-210">Setting this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc98d-211">Ruft ab oder legt fest, welches Zeichen für den Einzug verwendet werden soll, wenn <see cref="P:System.Xml.XmlTextWriter.Formatting" /> auf <see langword="Formatting.Indented" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-211">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span></span></summary>
        <value><span data-ttu-id="dc98d-212">Das für den Einzug zu verwendende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-212">The character to use for indenting.</span></span> <span data-ttu-id="dc98d-213">Standardmäßig wird ein Leerzeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-213">The default is space.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="dc98d-214">Sie können diese Eigenschaft mit dem <see langword="XmlTextWriter" /> auf ein beliebiges Zeichen festlegen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-214">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span></span> <span data-ttu-id="dc98d-215">Um die Gültigkeit des XML-Codes sicherzustellen, müssen Sie ein gültiges Leerraumzeichen wie 0x9, 0x10, 0x13 oder 0x20 angeben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-215">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-216">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-216">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns"><span data-ttu-id="dc98d-217">Der Namespace-URI, dessen Präfix gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-217">Namespace URI whose prefix you want to find.</span></span></param>
        <summary><span data-ttu-id="dc98d-218">Gibt das nächstliegende Präfix zurück, das im aktuellen Namespacebereich für den Namespace-URI definiert ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-218">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span></span></summary>
        <returns><span data-ttu-id="dc98d-219">Das passende Präfix.</span><span class="sxs-lookup"><span data-stu-id="dc98d-219">The matching prefix.</span></span> <span data-ttu-id="dc98d-220">Oder <see langword="null" />, wenn im aktuellen Gültigkeitsbereich kein übereinstimmender Namespace-URI gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-220">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-221">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-221">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-222">Im folgenden Beispiel wird ein Buch geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-222">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-223"><paramref name="ns" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-223"><paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc98d-224">Ruft einen Wert ab, der angibt, ob Namespaces unterstützt werden, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="dc98d-224">Gets or sets a value indicating whether to do namespace support.</span></span></summary>
        <value><span data-ttu-id="dc98d-225"><see langword="true" />, um Namespaces zu unterstützen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-225"><see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="dc98d-226">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-226">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-227">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-227">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-228">Diese Eigenschaft bestimmt, ob der Writer die W3C-Empfehlung " [Namespaces in XML](https://www.w3.org/TR/REC-xml-names) " unterstützt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-228">This property determines whether the writer supports the W3C [Namespaces in XML](https://www.w3.org/TR/REC-xml-names) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-229">Diese Eigenschaft können Sie nur im Zustand <see langword="WriteState.Start" /> ändern.</span><span class="sxs-lookup"><span data-stu-id="dc98d-229">You can only change this property when in the <see langword="WriteState.Start" /> state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc98d-230">Ruft ab oder legt fest, welches Zeichen als Anführungszeichen für Attributwerte verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-230">Gets or sets which character to use to quote attribute values.</span></span></summary>
        <value><span data-ttu-id="dc98d-231">Das als Anführungszeichen für Attributwerte zu verwendende Zeichen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-231">The character to use to quote attribute values.</span></span> <span data-ttu-id="dc98d-232">Dabei muss es sich um ein einzelnes Anführungszeichen (&amp;#39;) oder doppelte Anführungszeichen (&amp;#34;).</span><span class="sxs-lookup"><span data-stu-id="dc98d-232">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span></span> <span data-ttu-id="dc98d-233">Standardmäßig werden doppelte Anführungszeichen verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-233">The default is a double quote.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-234">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-234">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-235">Diese Eigenschaft wird statt auf ein einfaches oder doppeltes Anführungszeichen auf einen anderen Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-235">Setting this property to something other than either a single or double quote.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dc98d-236">Zu codierendes Bytearray.</span><span class="sxs-lookup"><span data-stu-id="dc98d-236">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="dc98d-237">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-237">The position within the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="dc98d-238">Die Anzahl der zu schreibenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="dc98d-238">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="dc98d-239">Codiert die angegebenen binären Bytes als base64 und schreibt den resultierenden Text.</span><span class="sxs-lookup"><span data-stu-id="dc98d-239">Encodes the specified binary bytes as base64 and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-240">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-240">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-241">Im folgenden Beispiel wird eine Eingabedatei mit `WriteBase64` codiert und eine temporäre XML-Datei generiert.</span><span class="sxs-lookup"><span data-stu-id="dc98d-241">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="dc98d-242">Die temporäre XML-Datei wird mit der <xref:System.Xml.XmlTextReader.ReadBase64%2A>-Methode decodiert und mit der ursprünglichen Datei verglichen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-242">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc98d-243"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-243"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-244">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-244">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc98d-245"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="dc98d-245"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-246"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-246">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dc98d-247">Zu codierendes Bytearray.</span><span class="sxs-lookup"><span data-stu-id="dc98d-247">Byte array to encode.</span></span></param>
        <param name="index"><span data-ttu-id="dc98d-248">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-248">The position in the buffer indicating the start of the bytes to write.</span></span></param>
        <param name="count"><span data-ttu-id="dc98d-249">Die Anzahl der zu schreibenden Bytes.</span><span class="sxs-lookup"><span data-stu-id="dc98d-249">The number of bytes to write.</span></span></param>
        <summary><span data-ttu-id="dc98d-250">Codiert die angegebenen binären Bytes als Binhex und schreibt den resultierenden Text.</span><span class="sxs-lookup"><span data-stu-id="dc98d-250">Encodes the specified binary bytes as binhex and writes out the resulting text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-251">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-251">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc98d-252"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-252"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-253">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-253">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc98d-254"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="dc98d-254"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-255">Der <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist Closed.</span><span class="sxs-lookup"><span data-stu-id="dc98d-255">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="dc98d-256">Text, der in den CDATA-Block eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-256">Text to place inside the CDATA block.</span></span></param>
        <summary><span data-ttu-id="dc98d-257">Schreibt einen &lt;![CDATA[...]]&gt;-Block mit dem angegebenen Text.</span><span class="sxs-lookup"><span data-stu-id="dc98d-257">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-258">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-258">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-259">Wenn `text` entweder `null` oder `String.Empty`ist, schreibt diese Methode einen leeren CDATA-Block, z. b. \<! [CDATA []</span><span class="sxs-lookup"><span data-stu-id="dc98d-259">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-260">Der Text ergibt kein wohlgeformtes XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="dc98d-260">The text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-261"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-261">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch"><span data-ttu-id="dc98d-262">Unicode-Zeichen, für das eine Zeichenentität generiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-262">Unicode character for which to generate a character entity.</span></span></param>
        <summary><span data-ttu-id="dc98d-263">Erzwingt das Generieren einer Zeichenentität für den angegebenen Unicode-Zeichenwert.</span><span class="sxs-lookup"><span data-stu-id="dc98d-263">Forces the generation of a character entity for the specified Unicode character value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-264">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-264">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-265">Diese Methode schreibt das Unicode-Zeichen im Entitäts Verweis Format des hexadezimal Zeichensatzes.</span><span class="sxs-lookup"><span data-stu-id="dc98d-265">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-266">Im folgenden Beispiel wird die `WriteCharEntity`-Methode zum Schreiben einer e-Mail-Adresse verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-266">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-267">Das Zeichen liegt im Ersatzzeichenpaar-Bereich, <see langword="0xd800" /> - <see langword="0xdfff" />, oder aus dem Text würde ein wohlgeformtes XML-Dokument resultieren.</span><span class="sxs-lookup"><span data-stu-id="dc98d-267">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-268"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-268">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dc98d-269">Zeichenarray, das den zu schreibenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="dc98d-269">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="dc98d-270">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-270">The position in the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="dc98d-271">Die Anzahl der zu schreibenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-271">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="dc98d-272">Schreibt Text in jeweils einen Puffer.</span><span class="sxs-lookup"><span data-stu-id="dc98d-272">Writes text one buffer at a time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-273">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-273">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-274">Diese Methode kann verwendet werden, um große Mengen von Text jeweils einen Puffer zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-274">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="dc98d-275">Eine spezielle Behandlung muss durchgeführt werden, um sicherzustellen, dass die `WriteChars`-Methode Ersatzpaar Zeichen nicht über mehrere Puffer Schreibvorgänge hinweg trennt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-275">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="dc98d-276">In der XML-Spezifikation werden die gültigen Bereiche für Ersatz Zeichenpaare definiert.</span><span class="sxs-lookup"><span data-stu-id="dc98d-276">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="dc98d-277">Eine Ausnahme wird ausgelöst, wenn Ersatzpaar Zeichen geschrieben werden, die dazu führen, dass die Ersatz Zeichenpaar Zeichen im Puffer aufgeteilt werden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-277">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc98d-278"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-278"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc98d-279"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="dc98d-279"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="dc98d-280">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc98d-280">-or-</span></span> 
<span data-ttu-id="dc98d-281">Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />. Der Aufruf führt zur Aufteilung eines Ersatzzeichenpaars oder zum Schreiben eines ungültigen Ersatzzeichenpaars.</span><span class="sxs-lookup"><span data-stu-id="dc98d-281">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-282">Der <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist Closed.</span><span class="sxs-lookup"><span data-stu-id="dc98d-282">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="dc98d-283">Text, der in den Kommentar eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-283">Text to place inside the comment.</span></span></param>
        <summary><span data-ttu-id="dc98d-284">Schreibt den Kommentar &lt;!--...--&gt; mit dem angegebenen Text.</span><span class="sxs-lookup"><span data-stu-id="dc98d-284">Writes out a comment &lt;!--...--&gt; containing the specified text.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-285">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-285">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-286">Wenn `text` entweder `null` oder `String.Empty`ist, schreibt diese Methode eine `Comment` ohne Dateninhalt, z. b. \<!---->.</span><span class="sxs-lookup"><span data-stu-id="dc98d-286">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-287">Im folgenden Beispiel wird eine XML-Datei geschrieben, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-287">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-288">Der Text ergibt kein wohlgeformtes XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="dc98d-288">The text would result in a non-well formed XML document</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-289"><see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-289">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dc98d-290">Der Name des DOCTYPE.</span><span class="sxs-lookup"><span data-stu-id="dc98d-290">The name of the DOCTYPE.</span></span> <span data-ttu-id="dc98d-291">Dieser darf nicht leer sein.</span><span class="sxs-lookup"><span data-stu-id="dc98d-291">This must be non-empty.</span></span></param>
        <param name="pubid"><span data-ttu-id="dc98d-292">Bei einem Wert ungleich NULL wird auch PUBLIC "pubid" "sysid" geschrieben, wobei <paramref name="pubid" /> und <paramref name="sysid" /> durch die Werte der angegebenen Argumente ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-292">If non-null it also writes PUBLIC "pubid" "sysid" where <paramref name="pubid" /> and <paramref name="sysid" /> are replaced with the value of the given arguments.</span></span></param>
        <param name="sysid"><span data-ttu-id="dc98d-293">Wenn <paramref name="pubid" /> NULL und <paramref name="sysid" /> ungleich NULL ist, wird SYSTEM "sysid" geschrieben, wobei <paramref name="sysid" /> durch den Wert dieses Arguments ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-293">If <paramref name="pubid" /> is null and <paramref name="sysid" /> is non-null it writes SYSTEM "sysid" where <paramref name="sysid" /> is replaced with the value of this argument.</span></span></param>
        <param name="subset"><span data-ttu-id="dc98d-294">Wenn nicht NULL, wird [subset] geschrieben, wobei subset durch den Wert dieses Arguments ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-294">If non-null it writes [subset] where subset is replaced with the value of this argument.</span></span></param>
        <summary><span data-ttu-id="dc98d-295">Schreibt die DOCTYPE-Deklaration mit dem angegebenen Namen und optionalen Attributen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-295">Writes the DOCTYPE declaration with the specified name and optional attributes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-296">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-296">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-297">Diese Methode prüft nicht auf ungültige Zeichen in `pubid`, `sysid` oder `subset`.</span><span class="sxs-lookup"><span data-stu-id="dc98d-297">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="dc98d-298">Außerdem wird nicht überprüft, ob die interne Teilmenge wohl geformt ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-298">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc98d-299">Die <xref:System.Xml.XmlTextWriter> überprüft keine Daten, die an die <xref:System.Xml.XmlTextWriter.WriteDocType%2A>-Methode übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-299">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="dc98d-300">Sie sollten keine beliebigen Daten an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-300">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-301">Im folgenden Beispiel wird eine XML-Datei geschrieben, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-301">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-302">Diese Methode wurde außerhalb des Prologs (nach dem Stammelement) aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-302">This method was called outside the prolog (after the root element).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-303"><paramref name="name" /> oder <see langword="null" /> ist <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-303"><paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span></span>  
  
<span data-ttu-id="dc98d-304">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc98d-304">-or-</span></span> 
<span data-ttu-id="dc98d-305">Der Wert für <paramref name="name" /> würde zu ungültigem XML-Code führen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-305">the value for <paramref name="name" /> would result in invalid XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc98d-306">Schließt den vorherigen Aufruf von <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-306">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-307">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-307">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-308">Wenn Sie `WriteStartAttribute`aufzurufen, können Sie das-Attribut mit dieser Methode schließen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-308">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="dc98d-309">Sie können das Attribut auch schließen, indem Sie `WriteStartAttribute` erneut aufrufen, <xref:System.Xml.XmlWriter.WriteAttributeString%2A>aufrufen oder <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>aufrufen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-309">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-310">Im folgenden Beispiel wird ein Buch geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-310">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc98d-311">Schließt alle geöffneten Elemente oder Attribute und setzt den Writer in den Startzustand zurück.</span><span class="sxs-lookup"><span data-stu-id="dc98d-311">Closes any open elements or attributes and puts the writer back in the Start state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-312">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-312">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-313">Im folgenden Beispiel wird eine XML-Datei geschrieben, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-313">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-314">Das XML-Dokument ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="dc98d-314">The XML document is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc98d-315">Schließt ein Element und löst den entsprechenden Namespacebereich auf.</span><span class="sxs-lookup"><span data-stu-id="dc98d-315">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-316">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-316">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-317">Wenn das Element keinen Inhalt enthält, wird ein kurzes Endtag "/>" geschrieben. Andernfalls wird ein vollständiges Endtag geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-317">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-318">Im folgenden Beispiel wird eine XML-Datei geschrieben, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-318">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dc98d-319">Name des Entitätsverweises.</span><span class="sxs-lookup"><span data-stu-id="dc98d-319">Name of the entity reference.</span></span></param>
        <summary><span data-ttu-id="dc98d-320">Schreibt einen Entitätsverweis als <see langword="&amp;name;" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-320">Writes out an entity reference as <see langword="&amp;name;" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-321">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-321">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-322">Im folgenden Beispiel wird eine XML-Datei geschrieben, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-322">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-323">Der Text ergibt kein wohlgeformtes XML-Dokument, oder <paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-323">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc98d-324">Schließt ein Element und löst den entsprechenden Namespacebereich auf.</span><span class="sxs-lookup"><span data-stu-id="dc98d-324">Closes one element and pops the corresponding namespace scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-325">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-325">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-326">Diese Methode schreibt immer das vollständige Endtag.</span><span class="sxs-lookup"><span data-stu-id="dc98d-326">This method always writes the full end tag.</span></span> <span data-ttu-id="dc98d-327">Dies ist nützlich, wenn Sie mit Elementen arbeiten, die ein vollständiges Endtag enthalten müssen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-327">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="dc98d-328">Beispielsweise erwarten Browser, dass HTML-Skriptblöcke mit "\</script >" geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-328">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-329">Im folgenden Beispiel wird ein Element ohne Inhalt geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-329">The following example writes out an element with no content.</span></span> <span data-ttu-id="dc98d-330">Es verwendet "Write-fullEndElement", um das vollständige Endelementtag zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-330">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dc98d-331">Zu schreibender Name.</span><span class="sxs-lookup"><span data-stu-id="dc98d-331">Name to write.</span></span></param>
        <summary><span data-ttu-id="dc98d-332">Schreibt den angegebenen Namen und prüft dessen Gültigkeit entsprechend der <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">W3C-Empfehlung für XML, Version 1.0</see>.</span><span class="sxs-lookup"><span data-stu-id="dc98d-332">Writes out the specified name, ensuring it is a valid name according to the <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">W3C XML 1.0 recommendation</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-333">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-333">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-334">Wenn <xref:System.Xml.XmlTextWriter.Namespaces%2A> auf `true`festgelegt ist, prüft `WriteName` auch, ob der Name auch gemäß der W3C-Empfehlung "Namespaces in XML" gültig ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-334">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-335"><paramref name="name" /> ist kein gültiger XML-Name, oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-335"><paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dc98d-336">Zu schreibender Name.</span><span class="sxs-lookup"><span data-stu-id="dc98d-336">Name to write.</span></span></param>
        <summary><span data-ttu-id="dc98d-337">Schreibt den angegebenen Namen und prüft, ob es ein gültiger <see langword="NmToken" /> ist, entsprechend der <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">W3C-Empfehlung für XML, Version 1.0</see>.</span><span class="sxs-lookup"><span data-stu-id="dc98d-337">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the <see href="https://www.w3.org/TR/1998/REC-xml-19980210#NT-Name">W3C XML 1.0 recommendation</see>.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-338">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-338">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-339"><paramref name="name" /> ist kein gültiges <see langword="NmToken" />; oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-339"><paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="dc98d-340">Name der Verarbeitungsanweisung.</span><span class="sxs-lookup"><span data-stu-id="dc98d-340">Name of the processing instruction.</span></span></param>
        <param name="text"><span data-ttu-id="dc98d-341">In die Verarbeitungsanweisung einzufügender Text.</span><span class="sxs-lookup"><span data-stu-id="dc98d-341">Text to include in the processing instruction.</span></span></param>
        <summary><span data-ttu-id="dc98d-342">Schreibt eine Verarbeitungsanweisung mit einem Leerzeichen zwischen dem Namen und dem Text wie folgt: &lt;?name text?&gt;.</span><span class="sxs-lookup"><span data-stu-id="dc98d-342">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-343">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-343">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-344">Wenn `text` entweder `null` oder `String.Empty`ist, schreibt diese Methode eine `ProcessingInstruction` ohne Dateninhalt, z. b. \<? Name? >.</span><span class="sxs-lookup"><span data-stu-id="dc98d-344">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-345">Im folgenden Beispiel wird eine XML-Datei geschrieben, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-345">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-346">Der Text ergibt kein wohlgeformtes XML-Dokument.</span><span class="sxs-lookup"><span data-stu-id="dc98d-346">The text would result in a non-well formed XML document.</span></span>  
  
 <span data-ttu-id="dc98d-347"><paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-347"><paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
<span data-ttu-id="dc98d-348">Diese Methode wird zum Erstellen einer XML-Deklaration nach einem Aufruf von <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-348">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName"><span data-ttu-id="dc98d-349">Der zu schreibende lokale Name.</span><span class="sxs-lookup"><span data-stu-id="dc98d-349">The local name to write.</span></span></param>
        <param name="ns"><span data-ttu-id="dc98d-350">Der Namespace-URI, der dem Namen zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-350">The namespace URI to associate with the name.</span></span></param>
        <summary><span data-ttu-id="dc98d-351">Schreibt den durch den Namespace angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-351">Writes out the namespace-qualified name.</span></span> <span data-ttu-id="dc98d-352">Diese Methode sucht das Präfix im Gültigkeitsbereich des Namespaces.</span><span class="sxs-lookup"><span data-stu-id="dc98d-352">This method looks up the prefix that is in scope for the given namespace.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-353">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-353">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-354">Beispielsweise der folgende Microsoft Visual C# Code:</span><span class="sxs-lookup"><span data-stu-id="dc98d-354">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="dc98d-355">Generiert die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="dc98d-355">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="dc98d-356">Wenn `ns` dem aktuellen Standard Namespace zugeordnet ist, wird kein Präfix generiert.</span><span class="sxs-lookup"><span data-stu-id="dc98d-356">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="dc98d-357">Beim Schreiben von Attributwerten generiert diese Methode ein Präfix, wenn `ns` nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-357">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="dc98d-358">Beim Schreiben von Element Inhalt wird eine Ausnahme ausgelöst, wenn `ns` nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-358">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="dc98d-359">Wenn dieser Writer Namespaces unterstützt (<xref:System.Xml.XmlTextWriter.Namespaces%2A> auf `true`festgelegt ist), überprüft diese Methode auch, ob der Name gemäß der [W3C-Empfehlung "Namespaces in XML](https://www.w3.org/TR/REC-xml-names)" gültig ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-359">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the [W3C Namespaces in XML recommendation](https://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-360">Im folgenden Beispiel wird ein Teil eines XSD-Schemas geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-360">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-361"><paramref name="localName" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-361"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span>  
  
 <span data-ttu-id="dc98d-362"><paramref name="localName" /> ist kein entsprechend der W3C-Spezifikation für Namespaces gültiger Name.</span><span class="sxs-lookup"><span data-stu-id="dc98d-362"><paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc98d-363">Schreibt unformatiertes Markup manuell.</span><span class="sxs-lookup"><span data-stu-id="dc98d-363">Writes raw markup manually.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-364">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-364">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="dc98d-365">Zeichenfolge, die den zu schreibenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="dc98d-365">String containing the text to write.</span></span></param>
        <summary><span data-ttu-id="dc98d-366">Schreibt unformatiertes Markup manuell aus einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="dc98d-366">Writes raw markup manually from a string.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-367">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-367">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-368">Diese Methode führt keine Escapezeichen für Sonderzeichen aus.</span><span class="sxs-lookup"><span data-stu-id="dc98d-368">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc98d-369">Die <xref:System.Xml.XmlTextWriter> überprüft keine Daten, die an die <xref:System.Xml.XmlTextWriter.WriteRaw%2A>-Methode übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-369">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="dc98d-370">Sie sollten keine beliebigen Daten an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-370">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-371">Im folgenden Beispiel wird mit der `WriteRaw`-Methode eine Zeichenfolge geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-371">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="dc98d-372">Zeichenarray, das den zu schreibenden Text enthält.</span><span class="sxs-lookup"><span data-stu-id="dc98d-372">Character array containing the text to write.</span></span></param>
        <param name="index"><span data-ttu-id="dc98d-373">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-373">The position within the buffer indicating the start of the text to write.</span></span></param>
        <param name="count"><span data-ttu-id="dc98d-374">Die Anzahl der zu schreibenden Zeichen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-374">The number of characters to write.</span></span></param>
        <summary><span data-ttu-id="dc98d-375">Schreibt unformatiertes Markup manuell aus einem Zeichenpuffer.</span><span class="sxs-lookup"><span data-stu-id="dc98d-375">Writes raw markup manually from a character buffer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-376">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-376">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-377">Diese Methode führt keine Escapezeichen für Sonderzeichen aus.</span><span class="sxs-lookup"><span data-stu-id="dc98d-377">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dc98d-378">Die <xref:System.Xml.XmlTextWriter> überprüft keine Daten, die an die <xref:System.Xml.XmlTextWriter.WriteRaw%2A>-Methode übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-378">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="dc98d-379">Sie sollten keine beliebigen Daten an diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-379">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dc98d-380"><paramref name="buffer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-380"><paramref name="buffer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="dc98d-381"><paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="dc98d-381"><paramref name="index" /> or <paramref name="count" /> is less than zero.</span></span>  
  
<span data-ttu-id="dc98d-382">- oder -</span><span class="sxs-lookup"><span data-stu-id="dc98d-382">-or-</span></span> 
<span data-ttu-id="dc98d-383">Die Pufferlänge minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-383">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="dc98d-384"><see langword="Namespace" />-Präfix des Attributs.</span><span class="sxs-lookup"><span data-stu-id="dc98d-384"><see langword="Namespace" /> prefix of the attribute.</span></span></param>
        <param name="localName"><span data-ttu-id="dc98d-385"><see langword="LocalName" /> des Attributs.</span><span class="sxs-lookup"><span data-stu-id="dc98d-385"><see langword="LocalName" /> of the attribute.</span></span></param>
        <param name="ns"><span data-ttu-id="dc98d-386"><see langword="NamespaceURI" /> des Attributs.</span><span class="sxs-lookup"><span data-stu-id="dc98d-386"><see langword="NamespaceURI" /> of the attribute</span></span></param>
        <summary><span data-ttu-id="dc98d-387">Schreibt den Anfang eines Attributs.</span><span class="sxs-lookup"><span data-stu-id="dc98d-387">Writes the start of an attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-388">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-388">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-389">Dies ist eine erweiterte Version von <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, mit der Sie einen Attribut Wert mit mehreren Schreib Methoden, z. b. <xref:System.Xml.XmlTextWriter.WriteString%2A>, schreiben können.</span><span class="sxs-lookup"><span data-stu-id="dc98d-389">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-390">Im folgenden Beispiel wird ein Buch geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-390">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-391"><paramref name="localName" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="dc98d-391"><paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span></span></exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dc98d-392">Schreibt die XML-Deklaration mit der Version "1.0".</span><span class="sxs-lookup"><span data-stu-id="dc98d-392">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-393">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-393">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dc98d-394">Schreibt die XML-Deklaration mit der Version "1.0".</span><span class="sxs-lookup"><span data-stu-id="dc98d-394">Writes the XML declaration with the version "1.0".</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-395">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-395">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-396">Die Codierungs Ebene des Dokuments hängt von der Implementierung des Writers ab.</span><span class="sxs-lookup"><span data-stu-id="dc98d-396">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="dc98d-397">Wenn z. b. ein <xref:System.Text.Encoding>-Objekt im `XmlTextWriter`-Konstruktor angegeben wird, bestimmt dies den Wert des Encoding-Attributs.</span><span class="sxs-lookup"><span data-stu-id="dc98d-397">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="dc98d-398">Diese Methode erstellt kein eigenständiges Attribut.</span><span class="sxs-lookup"><span data-stu-id="dc98d-398">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="dc98d-399">Wenn `WriteStartDocument` aufgerufen wird, überprüft der Writer, ob es sich um ein wohl geformtes XML-Dokument handelt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-399">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="dc98d-400">Beispielsweise wird überprüft, ob die XML-Deklaration der erste Knoten ist, dass nur ein Element auf Stamm Ebene vorhanden ist usw.</span><span class="sxs-lookup"><span data-stu-id="dc98d-400">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="dc98d-401">Wenn diese Methode nicht aufgerufen wird, geht der Writer davon aus, dass ein XML-Fragment geschrieben wird, und wendet keine Regeln auf Stamm Ebene an.</span><span class="sxs-lookup"><span data-stu-id="dc98d-401">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="dc98d-402">Wenn `WriteStartDocument` aufgerufen wurde und die <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A>-Methode verwendet wird, um eine andere XML-Deklaration zu erstellen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc98d-402">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-403">Im folgenden Beispiel wird eine XML-Datei geschrieben, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-403">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-404">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.</span><span class="sxs-lookup"><span data-stu-id="dc98d-404">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone"><span data-ttu-id="dc98d-405">Wenn <see langword="true" />, wird "standalone=yes" geschrieben, wenn <see langword="false" />, wird "standalone=no" geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-405">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span></span></param>
        <summary><span data-ttu-id="dc98d-406">Schreibt die XML-Deklaration mit der Version "1.0" und dem eigenständigen Attribut.</span><span class="sxs-lookup"><span data-stu-id="dc98d-406">Writes the XML declaration with the version "1.0" and the standalone attribute.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-407">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-407">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-408">Die Codierungs Ebene des Dokuments hängt von der Implementierung des Writers ab.</span><span class="sxs-lookup"><span data-stu-id="dc98d-408">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="dc98d-409">Wenn z. b. ein <xref:System.Text.Encoding>-Objekt im `XmlTextWriter`-Konstruktor angegeben wird, bestimmt dies den Wert des Encoding-Attributs.</span><span class="sxs-lookup"><span data-stu-id="dc98d-409">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="dc98d-410">Wenn `WriteStartDocument` aufgerufen wird, überprüft der Writer, ob es sich um ein wohl geformtes XML-Dokument handelt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-410">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="dc98d-411">Beispielsweise wird überprüft, ob die XML-Deklaration der erste Knoten ist, dass nur ein Element auf Stamm Ebene vorhanden ist usw.</span><span class="sxs-lookup"><span data-stu-id="dc98d-411">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="dc98d-412">Wenn diese Methode nicht aufgerufen wird, geht der Writer davon aus, dass ein XML-Fragment geschrieben wird, und wendet keine Regeln auf Stamm Ebene an.</span><span class="sxs-lookup"><span data-stu-id="dc98d-412">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="dc98d-413">Wenn `WriteStartDocument` aufgerufen wurde und die <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A>-Methode verwendet wird, um eine andere XML-Deklaration zu erstellen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="dc98d-413">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-414">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.</span><span class="sxs-lookup"><span data-stu-id="dc98d-414">This is not the first write method called after the constructor.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix"><span data-ttu-id="dc98d-415">Das Namespacepräfix des Elements.</span><span class="sxs-lookup"><span data-stu-id="dc98d-415">The namespace prefix of the element.</span></span></param>
        <param name="localName"><span data-ttu-id="dc98d-416">Der lokale Name des Elements.</span><span class="sxs-lookup"><span data-stu-id="dc98d-416">The local name of the element.</span></span></param>
        <param name="ns"><span data-ttu-id="dc98d-417">Der Namespace-URI, der dem Element zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-417">The namespace URI to associate with the element.</span></span> <span data-ttu-id="dc98d-418">Wenn sich dieser Namespace bereits im Gültigkeitsbereich befindet und dem Namespace ein Präfix zugeordnet ist, schreibt der Writer automatisch auch das Präfix.</span><span class="sxs-lookup"><span data-stu-id="dc98d-418">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span></span></param>
        <summary><span data-ttu-id="dc98d-419">Schreibt das angegebene Starttag und ordnet dieses dem angegebenen Namespace und Präfix zu.</span><span class="sxs-lookup"><span data-stu-id="dc98d-419">Writes the specified start tag and associates it with the given namespace and prefix.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-420">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-420">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-421">Nachdem Sie diese Methode aufgerufen haben, können Sie entweder Attribute schreiben oder mithilfe von <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>oder <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> für untergeordnete Elemente Inhalte erstellen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-421">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="dc98d-422">Sie können das-Element mit <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> schließen, zu dem ein Endtag geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-422">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-423">Im folgenden Beispiel wird ein Buch geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-423">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="dc98d-424">Der Writer ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-424">The writer is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc98d-425">Ruft den Zustand des Writers ab.</span><span class="sxs-lookup"><span data-stu-id="dc98d-425">Gets the state of the writer.</span></span></summary>
        <value><span data-ttu-id="dc98d-426">Einer der <see cref="T:System.Xml.WriteState" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="dc98d-426">One of the <see cref="T:System.Xml.WriteState" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-427">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-427">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="dc98d-428">Zu schreibender Text.</span><span class="sxs-lookup"><span data-stu-id="dc98d-428">Text to write.</span></span></param>
        <summary><span data-ttu-id="dc98d-429">Schreibt den angegebenen Textinhalt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-429">Writes the given text content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-430">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-430">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-431">`WriteString` führt Folgendes aus:</span><span class="sxs-lookup"><span data-stu-id="dc98d-431">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="dc98d-432">Die Zeichen `&`, `<`, und `>` werden durch ersetzt `&amp;`, `&lt;`, und `&gt;`bzw.</span><span class="sxs-lookup"><span data-stu-id="dc98d-432">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="dc98d-433">Zeichen Werte im Bereich 0x-0x1F (ausgenommen Leerraum Zeichen 0x9, 0xA und 0xD) werden durch numerische Zeichen Entitäten (`&#0;` durch `&#0x1F`) ersetzt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-433">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="dc98d-434">Wenn `WriteString` heißt im Kontext eines Attributwerts durch doppelte und einfache Anführungszeichen ersetzt `&quot;` und `&apos;` bzw.</span><span class="sxs-lookup"><span data-stu-id="dc98d-434">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="dc98d-435">Diese Eingabe Zeichenfolge `test<item>test` z. b. wie folgt geschrieben:</span><span class="sxs-lookup"><span data-stu-id="dc98d-435">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="dc98d-436">Wenn `text` entweder `null` oder `String.Empty`ist, schreibt diese Methode einen Textknoten ohne Dateninhalt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-436">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-437">Im folgenden Beispiel wird ein XML-Fragment geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-437">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-438">Die Textzeichenfolge enthält ein ungültiges Ersatzzeichenpaar.</span><span class="sxs-lookup"><span data-stu-id="dc98d-438">The text string contains an invalid surrogate pair.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar"><span data-ttu-id="dc98d-439">Das niedrige Ersatzzeichen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-439">The low surrogate.</span></span> <span data-ttu-id="dc98d-440">Dabei muss es sich um einen Wert zwischen <see langword="0xDC00" /> und <see langword="0xDFFF" /> handeln.</span><span class="sxs-lookup"><span data-stu-id="dc98d-440">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span></span></param>
        <param name="highChar"><span data-ttu-id="dc98d-441">Das hohe Ersatzzeichen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-441">The high surrogate.</span></span> <span data-ttu-id="dc98d-442">Dabei muss es sich um einen Wert zwischen <see langword="0xD800" /> und <see langword="0xDBFF" /> handeln.</span><span class="sxs-lookup"><span data-stu-id="dc98d-442">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span></span></param>
        <summary><span data-ttu-id="dc98d-443">Generiert und schreibt die Ersatzzeichenentität für das Ersatzzeichenpaar.</span><span class="sxs-lookup"><span data-stu-id="dc98d-443">Generates and writes the surrogate character entity for the surrogate character pair.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-444">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-444">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-445">Diese Methode gilt nur für Systeme, die UTF-16-Codierung verwenden.</span><span class="sxs-lookup"><span data-stu-id="dc98d-445">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="dc98d-446">Die Ersatz Zeichen Entität wird im hexadezimalen Format geschrieben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-446">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="dc98d-447">Der Bereich für Ersatz Zeichen ist `#x10000` `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="dc98d-447">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="dc98d-448">Die folgende Formel wird verwendet, um die Ersatz Zeichen Entität zu generieren: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="dc98d-448">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="dc98d-449">Sowohl für HTML als auch für XML basiert der Dokument Zeichensatz (und damit auch die Notation numerischer Zeichen Verweise) auf UCS [ISO-10646].</span><span class="sxs-lookup"><span data-stu-id="dc98d-449">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="dc98d-450">Ein einzelner numerischer Zeichen Verweis in einem Quelldokument kann daher in einigen Fällen 2 16-Bit-Einheiten in einer Zeichenfolge entsprechen (ein hohes Ersatz Zeichen und ein niedriges Ersatz Zeichen).</span><span class="sxs-lookup"><span data-stu-id="dc98d-450">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="dc98d-451">Diese 16-Bit-Einheiten werden als Ersatz Zeichenpaar bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="dc98d-451">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="dc98d-452">Weitere Informationen zu Ersatz Zeichen oder Zeichen finden Sie im Abschnitt 3,7 des [Unicode-Standards 3.0/Unicode 2,0](https://www.unicode.org)oder [im Abschnitt 2,2 der W3C-Empfehlung zu XML 1,0](https://www.w3.org/TR/REC-xml#charsets).</span><span class="sxs-lookup"><span data-stu-id="dc98d-452">For more information regarding surrogates or characters, refer to section 3.7 of the [Unicode 3.0/Unicode 2.0 standard](https://www.unicode.org), or [section 2.2 of the W3C XML 1.0 Recommendation](https://www.w3.org/TR/REC-xml#charsets).</span></span>
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="dc98d-453">Es wurde ein ungültiges Ersatzzeichenpaar übergeben.</span><span class="sxs-lookup"><span data-stu-id="dc98d-453">An invalid surrogate character pair was passed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws"><span data-ttu-id="dc98d-454">Die Zeichenfolge von Leerraumzeichen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-454">The string of white space characters.</span></span></param>
        <summary><span data-ttu-id="dc98d-455">Schreibt den angegebenen Leerraum.</span><span class="sxs-lookup"><span data-stu-id="dc98d-455">Writes out the given white space.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-456">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-456">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-457">Diese Methode wird verwendet, um das Dokument manuell zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="dc98d-457">This method is used to manually format your document.</span></span> <span data-ttu-id="dc98d-458">Verwenden Sie die <xref:System.Xml.XmlTextWriter.Formatting%2A>-Eigenschaft, damit das Writer die Ausgabe automatisch formatiert.</span><span class="sxs-lookup"><span data-stu-id="dc98d-458">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-459">Im folgenden Beispiel wird die `WriteWhitespace`-Methode verwendet, um zu steuern, wie die Datei formatiert wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-459">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="dc98d-460">Die Zeichenfolge enthält Zeichen, die keine Leerraumzeichen sind.</span><span class="sxs-lookup"><span data-stu-id="dc98d-460">The string contains non-white space characters.</span></span></exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc98d-461">Ruft den aktuellen <see langword="xml:lang" />-Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="dc98d-461">Gets the current <see langword="xml:lang" /> scope.</span></span></summary>
        <value><span data-ttu-id="dc98d-462">Der aktuelle <see langword="xml:lang" /> oder <see langword="null" />, wenn im aktuellen Bereich kein <see langword="xml:lang" /> vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-462">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-463">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-463">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-464">Diese Eigenschaft ermöglicht es einer Komponente, herauszufinden, in welchem Zustand eine andere Komponente den Writer hinterlassen hat.</span><span class="sxs-lookup"><span data-stu-id="dc98d-464">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="dc98d-465">Beispielsweise möchte eine Komponente einer anderen Komponente mitteilen, welche Sprache der Hilfe Text generieren soll.</span><span class="sxs-lookup"><span data-stu-id="dc98d-465">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="dc98d-466">Die Sprachinformationen werden durch das Schreiben eines `xml:lang` Attributs kommuniziert.</span><span class="sxs-lookup"><span data-stu-id="dc98d-466">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dc98d-467">Ruft einen <see cref="T:System.Xml.XmlSpace" /> ab, der den aktuellen <see langword="xml:space" />-Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-467">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span></summary>
        <value><span data-ttu-id="dc98d-468">Ein <see langword="XmlSpace" />, der den aktuellen <see langword="xml:space" />-Bereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="dc98d-468">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="dc98d-469">Wert</span><span class="sxs-lookup"><span data-stu-id="dc98d-469">Value</span></span> 
 </term><description> <span data-ttu-id="dc98d-470">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="dc98d-470">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="dc98d-471">Keiner</span><span class="sxs-lookup"><span data-stu-id="dc98d-471">None</span></span> 
 </term><description> <span data-ttu-id="dc98d-472">Dies ist der Standardwert, wenn kein <see langword="xml:space" />-Bereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="dc98d-472">This is the default if no <see langword="xml:space" /> scope exists.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="dc98d-473">Standard</span><span class="sxs-lookup"><span data-stu-id="dc98d-473">Default</span></span> 
 </term><description> <span data-ttu-id="dc98d-474">Der aktuelle Bereich ist <see langword="xml:space" />="default".</span><span class="sxs-lookup"><span data-stu-id="dc98d-474">The current scope is <see langword="xml:space" />="default".</span></span>  
  
 </description></item><item><term> <span data-ttu-id="dc98d-475">Preserve</span><span class="sxs-lookup"><span data-stu-id="dc98d-475">Preserve</span></span> 
 </term><description> <span data-ttu-id="dc98d-476">Der aktuelle Bereich ist <see langword="xml:space" />="preserve".</span><span class="sxs-lookup"><span data-stu-id="dc98d-476">The current scope is <see langword="xml:space" />="preserve".</span></span>  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dc98d-477">Ab .NET Framework 2,0 empfiehlt es sich, <xref:System.Xml.XmlWriter> Instanzen mit der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType>-Methode und der <xref:System.Xml.XmlWriterSettings>-Klasse zu erstellen, um die neuen Funktionen zu nutzen.</span><span class="sxs-lookup"><span data-stu-id="dc98d-477">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="dc98d-478">Mit dieser Eigenschaft kann eine Komponente herausfinden, in welchem Zustand eine andere Komponente den Writer verlassen hat.</span><span class="sxs-lookup"><span data-stu-id="dc98d-478">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc98d-479">Im folgenden Beispiel wird die `WriteWhitespace`-Methode verwendet, um zu steuern, wie die Datei formatiert wird.</span><span class="sxs-lookup"><span data-stu-id="dc98d-479">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
