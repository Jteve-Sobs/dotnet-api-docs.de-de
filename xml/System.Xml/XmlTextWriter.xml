<Type Name="XmlTextWriter" FullName="System.Xml.XmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fda932d8ded1d91a06f6ca7b146d93c88df64ce8" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48729337" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlTextWriter : System.Xml.XmlWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlTextWriter extends System.Xml.XmlWriter" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlTextWriter&#xA;Inherits XmlWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlTextWriter : System::Xml::XmlWriter" />
  <TypeSignature Language="F#" Value="type XmlTextWriter = class&#xA;    inherit XmlWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9de15-101">Stellt einen Writer für die schnelle, nicht zwischengespeicherte Vorwärtsgenerierung von Streams oder Dateien dar, die XML-Daten gemäß den W3C-Empfehlungen zu XML (Extensible Markup Language), Version 1.0, und zu Namespaces in XML enthalten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9de15-101">Represents a writer that provides a fast, non-cached, forward-only way of generating streams or files containing XML data that conforms to the W3C Extensible Markup Language (XML) 1.0 and the Namespaces in XML recommendations.</span>
      </span>
      <span data-ttu-id="9de15-102">Ab .NET Framework 2.0 sollten Sie stattdessen die <see cref="T:System.Xml.XmlWriter" />-Klasse verwenden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9de15-102">Starting with the .NET Framework 2.0, we recommend that you use the <see cref="T:System.Xml.XmlWriter" /> class instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9de15-103">Diese Klasse implementiert die <xref:System.Xml.XmlWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9de15-103">This class implements the <xref:System.Xml.XmlWriter> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9de15-104">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-104">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-105">`XmlTextWriter` verwaltet einen Namespacestapel, der alle Namespaces in der aktuellen Elementstapel definiert entspricht.</span><span class="sxs-lookup"><span data-stu-id="9de15-105">`XmlTextWriter` maintains a namespace stack corresponding to all the namespaces defined in the current element stack.</span></span> <span data-ttu-id="9de15-106">Mithilfe von `XmlTextWriter` können Sie manuell Namespaces deklarieren.</span><span class="sxs-lookup"><span data-stu-id="9de15-106">Using `XmlTextWriter` you can declare namespaces manually.</span></span>  
  
```csharp  
w.WriteStartElement("root");  
w.WriteAttributeString("xmlns", "x", null, "urn:1");  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
 w.WriteStartElement("item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
```  
  
 <span data-ttu-id="9de15-107">Der oben aufgeführten C#-Code erzeugt die folgende Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="9de15-107">The above C# code produces the following output.</span></span> <span data-ttu-id="9de15-108">`XmlTextWriter` definiert die Namespacedeklaration auf das Stammelement, um zu vermeiden, dass auf die beiden untergeordneten Elementen dupliziert.</span><span class="sxs-lookup"><span data-stu-id="9de15-108">`XmlTextWriter` promotes the namespace declaration to the root element to avoid having it duplicated on the two child elements.</span></span> <span data-ttu-id="9de15-109">Die untergeordneten Elemente übernehmen das Präfix aus der Namespacedeklaration.</span><span class="sxs-lookup"><span data-stu-id="9de15-109">The child elements pick up the prefix from the namespace declaration.</span></span>  
  
```xml  
<root xmlns:x="urn:1">  
 <x:item/>  
 <x:item/>  
</x:root>  
```  
  
 <span data-ttu-id="9de15-110">`XmlTextWriter` Außerdem können Sie die aktuellen Namespacedeklaration außer Kraft zu setzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-110">`XmlTextWriter` also allows you to override the current namespace declaration.</span></span> <span data-ttu-id="9de15-111">Im folgenden Beispiel wird der Namespace-URI "123" von "Abc", um die XML-Element überschrieben `<x:node xmlns:x="abc"/>`.</span><span class="sxs-lookup"><span data-stu-id="9de15-111">In the following example, the namespace URI "123" is overridden by "abc" to produce the XML element `<x:node xmlns:x="abc"/>`.</span></span>  
  
```csharp  
w.WriteStartElement("x","node","123");  
w.WriteAttributeString("xmlns","x",null,"abc");  
```  
  
 <span data-ttu-id="9de15-112">Mithilfe von Write-Methoden, die ein Präfix als Argument akzeptieren können Sie auch angeben, das Präfix verwenden.</span><span class="sxs-lookup"><span data-stu-id="9de15-112">By using the write methods that take a prefix as an argument you can also specify which prefix to use.</span></span> <span data-ttu-id="9de15-113">Im folgenden Beispiel werden zwei unterschiedliche Präfixe an denselben Namespace-URI, um die XML-Text zugeordnet `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span><span class="sxs-lookup"><span data-stu-id="9de15-113">In the following example, two different prefixes are mapped to the same namespace URI to produce the XML text `<x:root xmlns:x="urn:1"><y:item xmlns:y="urn:1"/></x:root>`.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.WriteStartElement("x","root","urn:1");  
 w.WriteStartElement("y","item","urn:1");  
 w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="9de15-114">Wenn mehrere Namespacedeklarationen denselben Namespace-URI, unterschiedliche Präfixe zuordnen `XmlTextWriter` führt Sie den Stapel der Namespacedeklarationen rückwärts und wählt die nächste aus.</span><span class="sxs-lookup"><span data-stu-id="9de15-114">If there are multiple namespace declarations mapping different prefixes to the same namespace URI, `XmlTextWriter` walks the stack of namespace declarations backwards and picks the closest one.</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);  
w.Formatting = Formatting.Indented;  
w.WriteStartElement("x","root","urn:1");  
w.WriteStartElement("y","item","urn:1");  
w.WriteAttributeString("attr","urn:1","123");  
w.WriteEndElement();  
w.WriteEndElement();  
w.Close();  
```  
  
 <span data-ttu-id="9de15-115">Im obigen C#-Beispiel da die `WriteAttributeString` Aufruf wird kein Präfix angegeben, die der Writer verwendet das letzte Präfix, das auf den Namespacestapel verschoben und wird die folgende XML erstellt:</span><span class="sxs-lookup"><span data-stu-id="9de15-115">In the above C# example, because the `WriteAttributeString` call does not specify a prefix, the writer uses the last prefix pushed onto the namespace stack, and produces the following XML:</span></span>  
  
```xml  
<x:root xmlns:x="urn:1">  
 <y:item y:attr="123" xmlns:y="urn:1" />  
</x:root>  
```  
  
 <span data-ttu-id="9de15-116">Wenn der Namespacekonflikte auftreten, `XmlTextWriter` diese durch alternative Präfixe generieren aufgelöst.</span><span class="sxs-lookup"><span data-stu-id="9de15-116">If namespace conflicts occur, `XmlTextWriter` resolves them by generating alternate prefixes.</span></span> <span data-ttu-id="9de15-117">Wenn ein Attribut- und Elementnamen haben dasselbe Präfix, z. B. aber unterschiedliche Namespaces `XmlWriter` für das Attribut ein anderes Präfix generiert.</span><span class="sxs-lookup"><span data-stu-id="9de15-117">For example, if an attribute and element have the same prefix but different namespaces, `XmlWriter` generates an alternate prefix for the attribute.</span></span> <span data-ttu-id="9de15-118">Die generierten Präfixe werden mit dem Namen `n{i}` , in denen `i` ist eine bei 1 beginnende Zahl.</span><span class="sxs-lookup"><span data-stu-id="9de15-118">The generated prefixes are named `n{i}` where `i` is a number beginning at 1.</span></span> <span data-ttu-id="9de15-119">Die Anzahl wird für jedes Element auf 1 zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="9de15-119">The number is reset to 1 for each element.</span></span>  
  
 <span data-ttu-id="9de15-120">Attribute, die einen Namespace-URI zugeordnet sind, müssen ein Präfix (Standard, die Namespaces für Attribute nicht gelten) haben.</span><span class="sxs-lookup"><span data-stu-id="9de15-120">Attributes which are associated with a namespace URI must have a prefix (default namespaces do not apply to attributes).</span></span> <span data-ttu-id="9de15-121">Dies entspricht Abschnitt 5.2 der W3C-Namespaces in XML-Empfehlung.</span><span class="sxs-lookup"><span data-stu-id="9de15-121">This conforms to section 5.2 of the W3C Namespaces in XML recommendation.</span></span> <span data-ttu-id="9de15-122">Wenn ein Attribut verweist auf einen Namespace-URI, aber kein Präfix angegeben ist, generiert der Writer ein Präfix für das Attribut an.</span><span class="sxs-lookup"><span data-stu-id="9de15-122">If an attribute references a namespace URI, but does not specify a prefix, the writer generates a prefix for the attribute.</span></span>  
  
 <span data-ttu-id="9de15-123">Wenn Sie ein leeres Element schreiben, ein zusätzliches Leerzeichen wurde zwischen Tagnamen und dem schließenden Tag, z. B. `<item />`.</span><span class="sxs-lookup"><span data-stu-id="9de15-123">When writing an empty element, an additional space is added between tag name and the closing tag, for example `<item />`.</span></span> <span data-ttu-id="9de15-124">Dadurch wird die Kompatibilität mit älteren Browsern.</span><span class="sxs-lookup"><span data-stu-id="9de15-124">This provides compatibility with older browsers.</span></span>  
  
 <span data-ttu-id="9de15-125">Wenn eine `String` dient als Methodenparameter `null` und `String.Empty` entsprechen.</span><span class="sxs-lookup"><span data-stu-id="9de15-125">When a `String` is used as method parameter, `null` and `String.Empty` are equivalent.</span></span> <span data-ttu-id="9de15-126">`String.Empty` folgt den W3C-Regeln.</span><span class="sxs-lookup"><span data-stu-id="9de15-126">`String.Empty` follows the W3C rules.</span></span>  
  
 <span data-ttu-id="9de15-127">Um stark typisierte Daten zu schreiben, verwenden die <xref:System.Xml.XmlConvert> -Klasse zum Konvertieren von Datentypen in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9de15-127">To write strongly typed data, use the <xref:System.Xml.XmlConvert> class to convert data types to string.</span></span> <span data-ttu-id="9de15-128">Der folgende C#-Code konvertiert z. B. die Daten aus `Double` zu `String` und schreibt das Element `<price>19.95</price>`.</span><span class="sxs-lookup"><span data-stu-id="9de15-128">For example, the following C# code converts the data from `Double` to `String` and writes the element `<price>19.95</price>`.</span></span>  
  
```csharp  
Double price = 19.95;  
writer.WriteElementString("price", XmlConvert.ToString(price));  
```  
  
 <span data-ttu-id="9de15-129">`XmlTextWriter` Folgendes wird nicht überprüft werden:</span><span class="sxs-lookup"><span data-stu-id="9de15-129">`XmlTextWriter` does not check for the following:</span></span>  
  
-   <span data-ttu-id="9de15-130">Attribut-und Elementnamen enthält ungültige Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9de15-130">Invalid characters in attribute and element names.</span></span>  
  
-   <span data-ttu-id="9de15-131">Unicode-Zeichen, die die angegebene Codierung nicht passen.</span><span class="sxs-lookup"><span data-stu-id="9de15-131">Unicode characters that do not fit the specified encoding.</span></span> <span data-ttu-id="9de15-132">Wenn die angegebene Codierung nicht Unicode-Zeichen passen die `XmlTextWriter` nicht mit Escapezeichen versehen die Unicode-Zeichen in Zeichenentitäten.</span><span class="sxs-lookup"><span data-stu-id="9de15-132">If the Unicode characters do not fit the specified encoding, the `XmlTextWriter` does not escape the Unicode characters into character entities.</span></span>  
  
-   <span data-ttu-id="9de15-133">Doppelte Attribute.</span><span class="sxs-lookup"><span data-stu-id="9de15-133">Duplicate attributes.</span></span>  
  
-   <span data-ttu-id="9de15-134">Zeichen in der DOCTYPE-public-Bezeichner oder ein Systembezeichner.</span><span class="sxs-lookup"><span data-stu-id="9de15-134">Characters in the DOCTYPE public identifier or system identifier.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9de15-135">Sicherheitsüberlegungen</span><span class="sxs-lookup"><span data-stu-id="9de15-135">Security Considerations</span></span>  
 <span data-ttu-id="9de15-136">Die folgenden Elemente sind zu berücksichtigende Aspekte bei der Arbeit mit der <xref:System.Xml.XmlTextWriter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9de15-136">The following items are things to consider when working with the <xref:System.Xml.XmlTextWriter> class.</span></span>  
  
-   <span data-ttu-id="9de15-137">Ausnahmen, die von der <xref:System.Xml.XmlTextWriter> können offen legen, die Informationen über Pfade, die Sie nicht möchten, die der Anwendung weitergegeben.</span><span class="sxs-lookup"><span data-stu-id="9de15-137">Exceptions thrown by the <xref:System.Xml.XmlTextWriter> can disclose path information that you do not want bubbled up to the application.</span></span> <span data-ttu-id="9de15-138">Die Anwendungen müssen diese Ausnahmen abfangen und entsprechend verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="9de15-138">Your applications must catch exceptions and process them appropriately.</span></span>  
  
-   <span data-ttu-id="9de15-139">Wenn ein <xref:System.Xml.XmlTextWriter> an eine andere Anwendung übergeben wird, wird der zu Grunde liegenden Stream für diese Anwendung offengelegt.</span><span class="sxs-lookup"><span data-stu-id="9de15-139">When you pass the <xref:System.Xml.XmlTextWriter> to another application the underlying stream is exposed to that application.</span></span> <span data-ttu-id="9de15-140">Übergeben Sie an eine teilweise vertrauenswürdige Anwendung ein von der <xref:System.Xml.XmlTextWriter>-Methode erstelltes <xref:System.Xml.XmlWriter>-Objekt anstelle eines <xref:System.Xml.XmlWriter.Create%2A>-Objekts.</span><span class="sxs-lookup"><span data-stu-id="9de15-140">If you need to pass the <xref:System.Xml.XmlTextWriter> to a semi-trusted application, you should use an <xref:System.Xml.XmlWriter> object created by the <xref:System.Xml.XmlWriter.Create%2A> method instead.</span></span>  
  
-   <span data-ttu-id="9de15-141">Die <xref:System.Xml.XmlTextWriter> überprüft nicht, dass alle Daten, die an die <xref:System.Xml.XmlTextWriter.WriteDocType%2A> oder <xref:System.Xml.XmlTextWriter.WriteRaw%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="9de15-141">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> or <xref:System.Xml.XmlTextWriter.WriteRaw%2A> methods.</span></span> <span data-ttu-id="9de15-142">Sie sollten keine willkürlichen Daten an diese Methoden übergeben.</span><span class="sxs-lookup"><span data-stu-id="9de15-142">You should not pass arbitrary data to these methods.</span></span>  
  
-   <span data-ttu-id="9de15-143">Wenn die Standardeinstellungen geändert werden, besteht keine Garantie, dass die generierte Ausgabe wohlgeformten XML-Daten ist.</span><span class="sxs-lookup"><span data-stu-id="9de15-143">If the default settings are changed, there is no guarantee that the generated output is well-formed XML data.</span></span>  
  
-   <span data-ttu-id="9de15-144">Akzeptieren Sie keine unterstützende Komponenten, wie z. B. eine <xref:System.Text.Encoding> Objekt, aus einer nicht vertrauenswürdigen Quelle.</span><span class="sxs-lookup"><span data-stu-id="9de15-144">Do not accept supporting components, such as an <xref:System.Text.Encoding> object, from an untrusted source.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/e695047f-3c0f-4045-8708-5baea91cc380">
      <span data-ttu-id="9de15-145">XML-Dokumente und XML-Daten</span>
      <span class="sxs-lookup">
        <span data-stu-id="9de15-145">XML Documents and Data</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-146">Erstellt eine Instanz der <see langword="XmlTextWriter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-146">Creates an instance of the <see langword="XmlTextWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-147">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-147">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.TextWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (w As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::TextWriter ^ w);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.TextWriter -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter w" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="9de15-148">Der <see langword="TextWriter" />, in den geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-148">The <see langword="TextWriter" /> to write to.</span>
          </span>
          <span data-ttu-id="9de15-149">Hierbei wird vorausgesetzt, dass der <see langword="TextWriter" /> bereits auf die korrekte Codierung eingestellt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-149">It is assumed that the <see langword="TextWriter" /> is already set to the correct encoding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-150">Erstellt mithilfe des angegebenen <see cref="T:System.IO.TextWriter" /> eine Instanz der <see langword="XmlTextWriter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-150">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified <see cref="T:System.IO.TextWriter" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-151">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-151">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (System.IO.Stream w, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream w, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.IO.Stream,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::IO::Stream ^ w, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : System.IO.Stream * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (w, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="w" Type="System.IO.Stream" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="w">
          <span data-ttu-id="9de15-152">Der Stream, in den geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-152">The stream to which you want to write.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="9de15-153">Die zu generierende Codierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-153">The encoding to generate.</span>
          </span>
          <span data-ttu-id="9de15-154">Wenn die Codierung <see langword="null" /> ist, wird der Stream UTF-8-codiert ausgegeben, und das Codierungsattribut der <see langword="ProcessingInstruction" /> wird nicht berücksichtigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-154">If encoding is <see langword="null" /> it writes out the stream as UTF-8 and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-155">Erstellt mithilfe des angegebenen Streams und der angegebenen Codierung eine Instanz der <see langword="XmlTextWriter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-155">Creates an instance of the <see langword="XmlTextWriter" /> class using the specified stream and encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-156">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-156">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-157">Die Codierung wird nicht unterstützt, oder es kann nicht in den Stream geschrieben werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-157">The encoding is not supported or the stream cannot be written to.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9de15-158">
            <paramref name="w" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-158">
              <paramref name="w" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlTextWriter (string filename, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.#ctor(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlTextWriter(System::String ^ filename, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlTextWriter : string * System.Text.Encoding -&gt; System.Xml.XmlTextWriter" Usage="new System.Xml.XmlTextWriter (filename, encoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="9de15-159">Der Name der Datei, in die geschrieben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-159">The filename to write to.</span>
          </span>
          <span data-ttu-id="9de15-160">Wenn die Datei vorhanden ist, wird diese abgeschnitten und mit dem neuen Inhalt überschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-160">If the file exists, it truncates it and overwrites it with the new content.</span>
          </span>
        </param>
        <param name="encoding">
          <span data-ttu-id="9de15-161">Die zu generierende Codierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-161">The encoding to generate.</span>
          </span>
          <span data-ttu-id="9de15-162">Wenn die Codierung <see langword="null" /> ist, wird die Datei UTF-8-codiert ausgegeben, und das Codierungsattribut der <see langword="ProcessingInstruction" /> wird nicht berücksichtigt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-162">If encoding is <see langword="null" /> it writes the file out as UTF-8, and omits the encoding attribute from the <see langword="ProcessingInstruction" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-163">Erstellt mithilfe der angegebenen Datei eine Instanz der <see cref="T:System.Xml.XmlTextWriter" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-163">Creates an instance of the <see cref="T:System.Xml.XmlTextWriter" /> class using the specified file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-164">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-164">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-165">Die Codierung wird nicht unterstützt; der Dateiname ist leer oder enthält nur Leerraum bzw. ein oder mehrere ungültige(s) Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-165">The encoding is not supported; the filename is empty, contains only white space, or contains one or more invalid characters.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="9de15-166">Der Zugriff wird verweigert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-166">Access is denied.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9de15-167">Der Dateiname ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-167">The filename is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <span data-ttu-id="9de15-168">Das Verzeichnis, in das geschrieben werden soll, wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-168">The directory to write to is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="9de15-169">Der Dateiname enthält eine falsche oder ungültige Syntax für den Dateinamen, Verzeichnisnamen oder die Volumebezeichnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-169">The filename includes an incorrect or invalid syntax for file name, directory name, or volume label syntax.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="9de15-170">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-170">The caller does not have the required permission.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BaseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream BaseStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream BaseStream" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.BaseStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ BaseStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseStream : System.IO.Stream" Usage="System.Xml.XmlTextWriter.BaseStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-171">Ruft das zugrunde liegende Streamobjekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-171">Gets the underlying stream object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9de15-172">Der Stream, in den der <see langword="XmlTextWriter" /> schreibt oder <see langword="null" />, wenn der <see langword="XmlTextWriter" /> mithilfe eines <see cref="T:System.IO.TextWriter" /> erstellt wurde, der nicht von der <see cref="T:System.IO.StreamWriter" />-Klasse vererbt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-172">The stream to which the <see langword="XmlTextWriter" /> is writing or <see langword="null" /> if the <see langword="XmlTextWriter" /> was constructed using a <see cref="T:System.IO.TextWriter" /> that does not inherit from the <see cref="T:System.IO.StreamWriter" /> class.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-173">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-173">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-174">Wenn der Writer erstellt wurde, mit einer `TextWriter` , ergibt sich aus der `StreamWriter` -Klasse, die diese Eigenschaft ist identisch mit der <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9de15-174">If the writer was constructed using a `TextWriter` that is derived from the `StreamWriter` class, this property is equivalent to the <xref:System.IO.StreamWriter.BaseStream%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9de15-175">Wenn der Writer erstellt wurde, mit einer <xref:System.IO.Stream>, gibt diese Eigenschaft die `Stream` an den Konstruktor übergeben.</span><span class="sxs-lookup"><span data-stu-id="9de15-175">If the writer was constructed using a <xref:System.IO.Stream>, this property returns the `Stream` passed to the constructor.</span></span> <span data-ttu-id="9de15-176">Wenn der Writer mit einem Dateinamen erstellt wurde, gibt diese Eigenschaft die `Stream` , das die Datei.</span><span class="sxs-lookup"><span data-stu-id="9de15-176">If the writer was constructed using a file name, this property returns the `Stream` representing the file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="xmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9de15-177">Schließt diesen Stream und den zugrunde liegenden Stream.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-177">Closes this stream and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-178">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-178">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-179">Alle Elemente oder Attribute, die offen gelassen werden automatisch geschlossen.</span><span class="sxs-lookup"><span data-stu-id="9de15-179">Any elements or attributes left open are automatically closed.</span></span>  
  
 <span data-ttu-id="9de15-180">Diese Methode löst keine Ausnahmen aus.</span><span class="sxs-lookup"><span data-stu-id="9de15-180">This method does not throw any exceptions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-181">Im folgende Beispiel schreibt ein XML-Fragment.</span><span class="sxs-lookup"><span data-stu-id="9de15-181">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="xmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9de15-182">Entleert den Pufferinhalt in die zugrunde liegenden Streams und entleert den zugrunde liegenden Stream ebenfalls.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-182">Flushes whatever is in the buffer to the underlying streams and also flushes the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-183">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-183">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-184">Dies wird aufgerufen, anstelle von <xref:System.Xml.XmlTextWriter.Close%2A> Wenn Sie weitere Daten in den zugrunde liegenden Stream ohne zu verlieren, was immer noch im Puffer ist zu schreiben möchten.</span><span class="sxs-lookup"><span data-stu-id="9de15-184">This is called instead of <xref:System.Xml.XmlTextWriter.Close%2A> when you want to write more to the underlying stream without losing what is still in the buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-185">Im folgende Beispiel schreibt zwei XML-Fragmente aus.</span><span class="sxs-lookup"><span data-stu-id="9de15-185">The following example writes out two XML fragments.</span></span>  
  
 [!code-cpp[XmlTextWriter.Flush#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlTextWriter.Flush/CPP/write2docs.cpp#1)]
 [!code-csharp[XmlTextWriter.Flush#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlTextWriter.Flush/CS/write2docs.cs#1)]
 [!code-vb[XmlTextWriter.Flush#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlTextWriter.Flush/VB/write2docs.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Formatting">
      <MemberSignature Language="C#" Value="public System.Xml.Formatting Formatting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Formatting Formatting" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Formatting" />
      <MemberSignature Language="VB.NET" Value="Public Property Formatting As Formatting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Formatting Formatting { System::Xml::Formatting get(); void set(System::Xml::Formatting value); };" />
      <MemberSignature Language="F#" Value="member this.Formatting : System.Xml.Formatting with get, set" Usage="System.Xml.XmlTextWriter.Formatting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Formatting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-186">Gibt die Formatierung der Ausgabe an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-186">Indicates how the output is formatted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9de15-187">Einer der <see cref="T:System.Xml.Formatting" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-187">One of the <see cref="T:System.Xml.Formatting" /> values.</span>
          </span>
          <span data-ttu-id="9de15-188">Der Standardwert ist <see langword="Formatting.None" /> (keine besondere Formatierung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-188">The default is <see langword="Formatting.None" /> (no special formatting).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-189">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-189">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-190">Wenn die `Indented` -Option festgelegt ist, untergeordnete Elemente werden eingerückt mithilfe der <xref:System.Xml.XmlTextWriter.Indentation%2A> und <xref:System.Xml.XmlTextWriter.IndentChar%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="9de15-190">If the `Indented` option is set, child elements are indented using the <xref:System.Xml.XmlTextWriter.Indentation%2A> and <xref:System.Xml.XmlTextWriter.IndentChar%2A> properties.</span></span> <span data-ttu-id="9de15-191">Nur Inhalt des Elements wird eingezogen.</span><span class="sxs-lookup"><span data-stu-id="9de15-191">Only element content is indented.</span></span> <span data-ttu-id="9de15-192">Der folgende C#-Code schreibt HTML-Elemente mit gemischtem Inhalt:</span><span class="sxs-lookup"><span data-stu-id="9de15-192">The following C# code writes out HTML elements including mixed content:</span></span>  
  
```csharp  
XmlTextWriter w = new XmlTextWriter(Console.Out);   
 w.Formatting = Formatting.Indented;   
 w.WriteStartElement("ol");   
 w.WriteStartElement("li");   
 w.WriteString("The big "); // This means "li" now has a mixed content model.  
 w.WriteElementString("b", "E");   
 w.WriteElementString("i", "lephant");   
 w.WriteString(" walks slowly.");   
 w.WriteEndElement();   
 w.WriteEndElement();  
```  
  
 <span data-ttu-id="9de15-193">Der obige Code erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="9de15-193">The above code produces the following output:</span></span>  
  
```xml  
<ol>   
  <li>The big <b>E</b><i>lephant</i> walks slowly.</li>   
</ol>  
```  
  
 <span data-ttu-id="9de15-194">Wenn dies im HTML-Format angezeigt wird kein Leerraum zwischen den Elementen fett und kursiven angezeigt.</span><span class="sxs-lookup"><span data-stu-id="9de15-194">When this is viewed in HTML no white space appears between the bold and italic elements.</span></span> <span data-ttu-id="9de15-195">In der Tat in diesem Beispiel würde Wenn Einzug zwischen diesen Elementen hinzugefügt wurde das Wort "Elephant" fälschlicherweise unterbrochen werden.</span><span class="sxs-lookup"><span data-stu-id="9de15-195">In fact, in this example, if indenting was added between these elements the word "Elephant" would be incorrectly broken.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9de15-196">Schreiben Sie einen beliebigen Text-Inhalt, mit Ausnahme von `String.Empty` versetzt Sie in den Modus mit gemischtem Inhalt dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="9de15-196">Writing any text content, excluding `String.Empty` puts that element into mixed content mode.</span></span> <span data-ttu-id="9de15-197">Untergeordnete Elemente erben keine dieser Status "gemischt" Modus.</span><span class="sxs-lookup"><span data-stu-id="9de15-197">Child elements do not inherit this "mixed" mode status.</span></span> <span data-ttu-id="9de15-198">Ein untergeordnetes Element eines Elements "mixed" ist der Einzug, es sei denn, es ist ebenfalls "mixed" Inhalt enthält.</span><span class="sxs-lookup"><span data-stu-id="9de15-198">A child element of a "mixed" element does indenting, unless it is also contains "mixed" content.</span></span> <span data-ttu-id="9de15-199">Inhalt des Elements (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) und gemischten Inhalt (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) werden gemäß der XML 1.0-Definitionen für diese Begriffe definiert.</span><span class="sxs-lookup"><span data-stu-id="9de15-199">Element content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-element-content) and mixed content (http://www.w3.org/TR/1998/REC-xml-19980210#sec-mixed-content) are defined according to the XML 1.0 definitions of these terms.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-200">Im folgende Beispiel schreibt ein XML-Fragment.</span><span class="sxs-lookup"><span data-stu-id="9de15-200">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="Indentation">
      <MemberSignature Language="C#" Value="public int Indentation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indentation" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Indentation" />
      <MemberSignature Language="VB.NET" Value="Public Property Indentation As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indentation { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indentation : int with get, set" Usage="System.Xml.XmlTextWriter.Indentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-201">Ruft ab oder legt fest, wie viele IndentChars für jede Ebene der Hierarchie geschrieben werden sollen, wenn <see cref="P:System.Xml.XmlTextWriter.Formatting" /> auf <see langword="Formatting.Indented" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-201">Gets or sets how many IndentChars to write for each level in the hierarchy when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9de15-202">Anzahl von <see langword="IndentChars" /> für jede Ebene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-202">Number of <see langword="IndentChars" /> for each level.</span>
          </span>
          <span data-ttu-id="9de15-203">Der Standard ist 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-203">The default is 2.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-204">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-204">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-205">Einzug für die folgenden Knotentypen ausgeführt wird: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, und `CDATASection`.</span><span class="sxs-lookup"><span data-stu-id="9de15-205">Indentation is performed on following node types: `DocumentType`, `Element`, `Comment`, `ProcessingInstruction`, and `CDATASection`.</span></span> <span data-ttu-id="9de15-206">Alle anderen Knotentypen sind nicht betroffen.</span><span class="sxs-lookup"><span data-stu-id="9de15-206">All other node types are not affected.</span></span> <span data-ttu-id="9de15-207">Die `XmlTextWriter` zieht nicht die interne DTD-Teilmenge.</span><span class="sxs-lookup"><span data-stu-id="9de15-207">The `XmlTextWriter` does not indent the internal DTD subset.</span></span> <span data-ttu-id="9de15-208">Allerdings könnten Sie Folgendes ein, um die Formatierung auf die interne DTD-Teilmenge anwenden tun.</span><span class="sxs-lookup"><span data-stu-id="9de15-208">However, you could do the following to apply formatting to the internal DTD subset.</span></span>  
  
```csharp  
String name = "Employees";  
String pubid = null;  
String sysid = null;  
String subset =  
@"  
    <!ELEMENT Employees (Employee)+>  
    <!ELEMENT Employee EMPTY>  
    <!ATTLIST Employee firstname CDATA #REQUIRED>  
    <!ENTITY Company 'Microsoft']]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-209">Diese Eigenschaft wird auf einen negativen Wert festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-209">Setting this property to a negative value.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.IndentChar" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="IndentChar">
      <MemberSignature Language="C#" Value="public char IndentChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char IndentChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.IndentChar" />
      <MemberSignature Language="VB.NET" Value="Public Property IndentChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char IndentChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.IndentChar : char with get, set" Usage="System.Xml.XmlTextWriter.IndentChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-210">Ruft ab oder legt fest, welches Zeichen für den Einzug verwendet werden soll, wenn <see cref="P:System.Xml.XmlTextWriter.Formatting" /> auf <see langword="Formatting.Indented" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-210">Gets or sets which character to use for indenting when <see cref="P:System.Xml.XmlTextWriter.Formatting" /> is set to <see langword="Formatting.Indented" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9de15-211">Das für den Einzug zu verwendende Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-211">The character to use for indenting.</span>
          </span>
          <span data-ttu-id="9de15-212">Standardmäßig wird ein Leerzeichen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-212">The default is space.</span>
          </span>
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="9de15-213">Sie können diese Eigenschaft mit dem <see langword="XmlTextWriter" /> auf ein beliebiges Zeichen festlegen.</span>
              <span class="sxs-lookup">
                <span data-stu-id="9de15-213">The <see langword="XmlTextWriter" /> allows you to set this property to any character.</span>
              </span>
              <span data-ttu-id="9de15-214">Um die Gültigkeit des XML-Codes sicherzustellen, müssen Sie ein gültiges Leerraumzeichen wie 0x9, 0x10, 0x13 oder 0x20 angeben.</span>
              <span class="sxs-lookup">
                <span data-stu-id="9de15-214">To ensure valid XML, you must specify a valid white space character, 0x9, 0x10, 0x13 or 0x20.</span>
              </span>
            </para>
          </block>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-215">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-215">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.XmlTextWriter.Indentation" />
        <altmember cref="T:System.Xml.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public override string LookupPrefix (string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string LookupPrefix(string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LookupPrefix (ns As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ LookupPrefix(System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.LookupPrefix : string -&gt; string" Usage="xmlTextWriter.LookupPrefix ns" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ns">
          <span data-ttu-id="9de15-216">Der Namespace-URI, dessen Präfix gesucht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-216">Namespace URI whose prefix you want to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-217">Gibt das nächstliegende Präfix zurück, das im aktuellen Namespacebereich für den Namespace-URI definiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-217">Returns the closest prefix defined in the current namespace scope for the namespace URI.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9de15-218">Das passende Präfix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-218">The matching prefix.</span>
          </span>
          <span data-ttu-id="9de15-219">Oder <see langword="null" />, wenn im aktuellen Gültigkeitsbereich kein übereinstimmender Namespace-URI gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-219">Or <see langword="null" /> if no matching namespace URI is found in the current scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-220">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-220">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-221">Im folgende Beispiel wird ein Buch geschrieben.</span><span class="sxs-lookup"><span data-stu-id="9de15-221">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-222">
            <paramref name="ns" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-222">
              <paramref name="ns" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public bool Namespaces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespaces As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Namespaces { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : bool with get, set" Usage="System.Xml.XmlTextWriter.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-223">Ruft einen Wert ab, der angibt, ob Namespaces unterstützt werden, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-223">Gets or sets a value indicating whether to do namespace support.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9de15-224">
            <see langword="true" />, um Namespaces zu unterstützen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-224">
              <see langword="true" /> to support namespaces; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9de15-225">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-225">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-226">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-226">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-227">Diese Eigenschaft bestimmt, ob der Writer die W3C-Namespaces in XML-Empfehlung zur www.w3.org/TR/REC-xml-names unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9de15-227">This property determines whether the writer supports the W3C Namespaces in XML recommendation located at www.w3.org/TR/REC-xml-names.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-228">Diese Eigenschaft können Sie nur im Zustand <see langword="WriteState.Start" /> ändern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-228">You can only change this property when in the <see langword="WriteState.Start" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="QuoteChar">
      <MemberSignature Language="C#" Value="public char QuoteChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char QuoteChar" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.QuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuoteChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char QuoteChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.QuoteChar : char with get, set" Usage="System.Xml.XmlTextWriter.QuoteChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-229">Ruft ab oder legt fest, welches Zeichen als Anführungszeichen für Attributwerte verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-229">Gets or sets which character to use to quote attribute values.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9de15-230">Das als Anführungszeichen für Attributwerte zu verwendende Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-230">The character to use to quote attribute values.</span>
          </span>
          <span data-ttu-id="9de15-231">Dies muss ein einfaches Anführungszeichen (&amp;#39;) oder ein doppeltes Anführungszeichen (&amp;#34;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-231">This must be a single quote (&amp;#39;) or a double quote (&amp;#34;).</span>
          </span>
          <span data-ttu-id="9de15-232">Standardmäßig werden doppelte Anführungszeichen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-232">The default is a double quote.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-233">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-233">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-234">Diese Eigenschaft wird statt auf ein einfaches oder doppeltes Anführungszeichen auf einen anderen Wert festgelegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-234">Setting this property to something other than either a single or double quote.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBase64">
      <MemberSignature Language="C#" Value="public override void WriteBase64 (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBase64(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBase64 (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBase64(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBase64 : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBase64 (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9de15-235">Zu codierendes Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-235">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9de15-236">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-236">The position within the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9de15-237">Die Anzahl der zu schreibenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-237">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-238">Codiert die angegebenen binären Bytes als base64 und schreibt den resultierenden Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-238">Encodes the specified binary bytes as base64 and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-239">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-239">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-240">Im folgenden Beispiel wird codiert eine Eingabedatei mit `WriteBase64` und generiert eine temporäre XML-Datei.</span><span class="sxs-lookup"><span data-stu-id="9de15-240">The following example encodes an input file using `WriteBase64` and generates a temporary XML file.</span></span> <span data-ttu-id="9de15-241">Die temporäre XML-Datei wird mit decodiert die <xref:System.Xml.XmlTextReader.ReadBase64%2A> Methode in der ursprünglichen Datei verglichen.</span><span class="sxs-lookup"><span data-stu-id="9de15-241">The temporary XML file is decoded using the <xref:System.Xml.XmlTextReader.ReadBase64%2A> method and compared to the original file.</span></span>  
  
 [!code-cpp[XmlWriter.WriteBase64#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlWriter.WriteBase64/CPP/writebase64.cpp#1)]
 [!code-csharp[XmlWriter.WriteBase64#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlWriter.WriteBase64/CS/writebase64.cs#1)]
 [!code-vb[XmlWriter.WriteBase64#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlWriter.WriteBase64/VB/writebase64.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9de15-242">
            <paramref name="buffer" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-242">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-243">Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-243">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9de15-244">
            <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-244">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-245">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-245">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteBinHex">
      <MemberSignature Language="C#" Value="public override void WriteBinHex (byte[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteBinHex(unsigned int8[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteBinHex (buffer As Byte(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteBinHex(cli::array &lt;System::Byte&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteBinHex : byte[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteBinHex (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9de15-246">Zu codierendes Bytearray.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-246">Byte array to encode.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9de15-247">Die Position innerhalb des Puffers, die den Anfang der zu schreibenden Bytes kennzeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-247">The position in the buffer indicating the start of the bytes to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9de15-248">Die Anzahl der zu schreibenden Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-248">The number of bytes to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-249">Codiert die angegebenen binären Bytes als Binhex und schreibt den resultierenden Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-249">Encodes the specified binary bytes as binhex and writes out the resulting text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-250">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-250">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9de15-251">
            <paramref name="buffer" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-251">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-252">Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-252">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9de15-253">
            <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-253">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-254">Der <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist Closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-254">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCData">
      <MemberSignature Language="C#" Value="public override void WriteCData (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCData(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCData (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCData(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteCData : string -&gt; unit" Usage="xmlTextWriter.WriteCData text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="9de15-255">Text, der in den CDATA-Block eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-255">Text to place inside the CDATA block.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-256">Schreibt einen &lt;![CDATA[...]]&gt;-Block mit dem angegebenen Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-256">Writes out a &lt;![CDATA[...]]&gt; block containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-257">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-257">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-258">Wenn `text` ist entweder `null` oder `String.Empty`, diese Methode schreibt einen leeren CDATA-Block, z. B. \<! [ CDATA]</span><span class="sxs-lookup"><span data-stu-id="9de15-258">If `text` is either `null` or `String.Empty`, this method writes an empty CDATA block, for example \<![CDATA[]</span></span>]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-259">Der Text ergibt kein wohlgeformtes XML-Dokument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-259">The text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-260">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-260">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteCharEntity (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteCharEntity(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteCharEntity(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteCharEntity (ch As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteCharEntity(char ch);" />
      <MemberSignature Language="F#" Value="override this.WriteCharEntity : char -&gt; unit" Usage="xmlTextWriter.WriteCharEntity ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="9de15-261">Unicode-Zeichen, für das eine Zeichenentität generiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-261">Unicode character for which to generate a character entity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-262">Erzwingt das Generieren einer Zeichenentität für den angegebenen Unicode-Zeichenwert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-262">Forces the generation of a character entity for the specified Unicode character value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-263">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-263">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-264">Diese Methode schreibt das Unicode-Zeichen in hexadezimaler Zeichenentitätsverweise.</span><span class="sxs-lookup"><span data-stu-id="9de15-264">This method writes the Unicode character in hexadecimal character entity reference format.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-265">Im folgenden Beispiel wird die `WriteCharEntity` Methode, um eine e-Mail-Adresse zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="9de15-265">The following example uses the `WriteCharEntity` method to write an email address.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteTimeSpan Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteTimeSpan Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-266">Das Zeichen liegt im Ersatzzeichenpaar-Bereich, <see langword="0xd800" /> - <see langword="0xdfff" />, oder aus dem Text würde ein wohlgeformtes XML-Dokument resultieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-266">The character is in the surrogate pair character range, <see langword="0xd800" /> - <see langword="0xdfff" />; or the text would result in a non-well formed XML document.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-267">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-267">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteChars">
      <MemberSignature Language="C#" Value="public override void WriteChars (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteChars(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteChars(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteChars (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteChars(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteChars : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteChars (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9de15-268">Zeichenarray, das den zu schreibenden Text enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-268">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9de15-269">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-269">The position in the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9de15-270">Die Anzahl der zu schreibenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-270">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-271">Schreibt Text in jeweils einen Puffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-271">Writes text one buffer at a time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-272">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-272">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-273">Diese Methode kann verwendet werden, um große Mengen an einen Puffer zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="9de15-273">This method can be used to write large amounts of text one buffer at a time.</span></span>  
  
 <span data-ttu-id="9de15-274">Besondere Behandlung muss ausgeführt werden, um sicherzustellen, dass die `WriteChars` Methode teilt Ersatzzeichenpaare nicht auf mehrere.</span><span class="sxs-lookup"><span data-stu-id="9de15-274">Special handling must be done to ensure the `WriteChars` method does not split surrogate pair characters across multiple buffer writes.</span></span> <span data-ttu-id="9de15-275">Die XML-Spezifikation definiert die gültigen Bereiche für Ersatzzeichenpaare.</span><span class="sxs-lookup"><span data-stu-id="9de15-275">The XML specification defines the valid ranges for surrogate pairs.</span></span>  
  
 <span data-ttu-id="9de15-276">Eine Ausnahme wird ausgelöst, wenn Ersatzzeichenpaare geschrieben werden, dass, die die Teilung im Puffer Ersatzzeichenpaare führen würde.</span><span class="sxs-lookup"><span data-stu-id="9de15-276">An exception is thrown if surrogate pair characters are written that would result in the surrogate pair characters being split in the buffer.</span></span>  
  
   
  
## Examples  
 [!code-csharp[XmlTextWriter.WriteChars#1](~/samples/snippets/csharp/VS_Snippets_Data/xmltextwriter.writechars/cs/xmlwriterwritecharsexample.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9de15-277">
            <paramref name="buffer" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-277">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9de15-278">
            <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-278">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9de15-279">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-279">-or-</span>
          </span>
          <span data-ttu-id="9de15-280">Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />. Der Aufruf führt zur Aufteilung eines Ersatzzeichenpaars oder zum Schreiben eines ungültigen Ersatzzeichenpaars.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-280">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />; the call results in surrogate pair characters being split or an invalid surrogate pair being written.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-281">Der <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist Closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-281">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is Closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteComment">
      <MemberSignature Language="C#" Value="public override void WriteComment (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteComment(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteComment(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteComment (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteComment(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteComment : string -&gt; unit" Usage="xmlTextWriter.WriteComment text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="9de15-282">Text, der in den Kommentar eingefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-282">Text to place inside the comment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-283">Schreibt den Kommentar &lt;!--...--&gt; mit dem angegebenen Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-283">Writes out a comment &lt;!--...--&gt; containing the specified text.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-284">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-284">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-285">Wenn `text` ist entweder `null` oder `String.Empty`, diese Methode schreibt einen `Comment` ohne Inhalt, z. B. Daten \<!--->.</span><span class="sxs-lookup"><span data-stu-id="9de15-285">If `text` is either `null` or `String.Empty`, this method writes a `Comment` with no data content, for example \<!---->.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-286">Im folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="9de15-286">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-287">Der Text ergibt kein wohlgeformtes XML-Dokument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-287">The text would result in a non-well formed XML document</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-288">
            <see cref="P:System.Xml.XmlTextWriter.WriteState" /> ist <see langword="Closed" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-288">The <see cref="P:System.Xml.XmlTextWriter.WriteState" /> is <see langword="Closed" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteDocType">
      <MemberSignature Language="C#" Value="public override void WriteDocType (string name, string pubid, string sysid, string subset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteDocType(string name, string pubid, string sysid, string subset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteDocType(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteDocType (name As String, pubid As String, sysid As String, subset As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteDocType(System::String ^ name, System::String ^ pubid, System::String ^ sysid, System::String ^ subset);" />
      <MemberSignature Language="F#" Value="override this.WriteDocType : string * string * string * string -&gt; unit" Usage="xmlTextWriter.WriteDocType (name, pubid, sysid, subset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="pubid" Type="System.String" />
        <Parameter Name="sysid" Type="System.String" />
        <Parameter Name="subset" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9de15-289">Der Name des DOCTYPE.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-289">The name of the DOCTYPE.</span>
          </span>
          <span data-ttu-id="9de15-290">Dieser darf nicht leer sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-290">This must be non-empty.</span>
          </span>
        </param>
        <param name="pubid">
          <span data-ttu-id="9de15-291">Bei einem Wert ungleich NULL wird auch PUBLIC „pubid“ und „sysid“ geschrieben, wobei <c>pubid</c> und <c>sysid</c> durch die Werte der angegebenen Argumente ersetzt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-291">If non-null it also writes PUBLIC "pubid" "sysid" where <c>pubid</c> and <c>sysid</c> are replaced with the value of the given arguments.</span>
          </span>
        </param>
        <param name="sysid">
          <span data-ttu-id="9de15-292">Wenn <c>pubid</c> gleich NULL und <c>sysid</c> ungleich NULL ist, wird SYSTEM „sysid“ geschrieben, wobei <c>sysid</c> durch den Wert dieses Arguments ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-292">If <c>pubid</c> is null and <c>sysid</c> is non-null it writes SYSTEM "sysid" where <c>sysid</c> is replaced with the value of this argument.</span>
          </span>
        </param>
        <param name="subset">
          <span data-ttu-id="9de15-293">Wenn nicht NULL, wird [subset] geschrieben, wobei subset durch den Wert dieses Arguments ersetzt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-293">If non-null it writes [subset] where subset is replaced with the value of this argument.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-294">Schreibt die DOCTYPE-Deklaration mit dem angegebenen Namen und optionalen Attributen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-294">Writes the DOCTYPE declaration with the specified name and optional attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-295">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-295">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-296">Diese Methode überprüft nicht auf ungültige Zeichen in `pubid`, `sysid` oder `subset`.</span><span class="sxs-lookup"><span data-stu-id="9de15-296">This method does not check for invalid characters in `pubid`, `sysid` or `subset`.</span></span> <span data-ttu-id="9de15-297">Er überprüft auch nicht, dass die interne Teilmenge wohlgeformt ist.</span><span class="sxs-lookup"><span data-stu-id="9de15-297">It also does not check that the internal subset is well-formed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9de15-298">Die <xref:System.Xml.XmlTextWriter> überprüft nicht, dass alle Daten, die an die <xref:System.Xml.XmlTextWriter.WriteDocType%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9de15-298">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteDocType%2A> method.</span></span> <span data-ttu-id="9de15-299">Sie sollten keine willkürlichen Daten für diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="9de15-299">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-300">Im folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="9de15-300">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-301">Diese Methode wurde außerhalb des Prologs (nach dem Stammelement) aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-301">This method was called outside the prolog (after the root element).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-302">
            <paramref name="name" /> oder <see langword="null" /> ist <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-302">
              <paramref name="name" /> is <see langword="null" /> or <see langword="String.Empty" /></span>
          </span>
          <span data-ttu-id="9de15-303">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-303">-or-</span>
          </span>
          <span data-ttu-id="9de15-304">Der Wert für <paramref name="name" /> würde zu ungültigem XML-Code führen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-304">the value for <paramref name="name" /> would result in invalid XML.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndAttribute">
      <MemberSignature Language="C#" Value="public override void WriteEndAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndAttribute() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndAttribute ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndAttribute();" />
      <MemberSignature Language="F#" Value="override this.WriteEndAttribute : unit -&gt; unit" Usage="xmlTextWriter.WriteEndAttribute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9de15-305">Schließt den vorherigen Aufruf von <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-305">Closes the previous <see cref="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" /> call.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-306">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-306">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-307">Wenn Sie aufrufen `WriteStartAttribute`, schließen Sie das Attribut mit dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="9de15-307">If you call `WriteStartAttribute`, you can close the attribute with this method.</span></span>  
  
 <span data-ttu-id="9de15-308">Sie können das Attribut auch schließen, durch den Aufruf `WriteStartAttribute` erneut aufrufen <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, oder das Aufrufen <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="9de15-308">You can also close the attribute by calling `WriteStartAttribute` again, calling <xref:System.Xml.XmlWriter.WriteAttributeString%2A>, or calling <xref:System.Xml.XmlTextWriter.WriteEndElement%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-309">Im folgende Beispiel wird ein Buch geschrieben.</span><span class="sxs-lookup"><span data-stu-id="9de15-309">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEndDocument">
      <MemberSignature Language="C#" Value="public override void WriteEndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteEndDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteEndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9de15-310">Schließt alle geöffneten Elemente oder Attribute und setzt den Writer in den Startzustand zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-310">Closes any open elements or attributes and puts the writer back in the Start state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-311">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-311">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-312">Im folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="9de15-312">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-313">Das XML-Dokument ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-313">The XML document is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteEndElement">
      <MemberSignature Language="C#" Value="public override void WriteEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9de15-314">Schließt ein Element und löst den entsprechenden Namespacebereich auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-314">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-315">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-315">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-316">Wenn das Element keinen Inhalt enthält eine kurze Endtag "/ >" geschrieben wird. Andernfalls wird ein vollständiges Endtag geschrieben.</span><span class="sxs-lookup"><span data-stu-id="9de15-316">If the element contains no content a short end tag "/>" is written; otherwise a full end tag is written.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-317">Im folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="9de15-317">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteEntityRef">
      <MemberSignature Language="C#" Value="public override void WriteEntityRef (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteEntityRef(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteEntityRef(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteEntityRef (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteEntityRef(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteEntityRef : string -&gt; unit" Usage="xmlTextWriter.WriteEntityRef name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9de15-318">Name des Entitätsverweises.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-318">Name of the entity reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-319">Schreibt einen Entitätsverweis als <see langword="&amp;name;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-319">Writes out an entity reference as <see langword="&amp;name;" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-320">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-320">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-321">Im folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="9de15-321">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-322">Der Text ergibt kein wohlgeformtes XML-Dokument, oder <paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-322">The text would result in a non-well formed XML document or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteFullEndElement">
      <MemberSignature Language="C#" Value="public override void WriteFullEndElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteFullEndElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteFullEndElement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteFullEndElement ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteFullEndElement();" />
      <MemberSignature Language="F#" Value="override this.WriteFullEndElement : unit -&gt; unit" Usage="xmlTextWriter.WriteFullEndElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9de15-323">Schließt ein Element und löst den entsprechenden Namespacebereich auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-323">Closes one element and pops the corresponding namespace scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-324">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-324">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-325">Diese Methode schreibt immer den vollständigen End-Tag.</span><span class="sxs-lookup"><span data-stu-id="9de15-325">This method always writes the full end tag.</span></span> <span data-ttu-id="9de15-326">Dies ist nützlich, bei Elementen, die eine vollständige End-Tag enthalten muss.</span><span class="sxs-lookup"><span data-stu-id="9de15-326">This is useful when dealing with elements that must include a full end tag.</span></span> <span data-ttu-id="9de15-327">Beispielsweise erwarten Browser HTML-Skriptblöcke geschlossen werden, mit " \< /script >".</span><span class="sxs-lookup"><span data-stu-id="9de15-327">For example, browsers expect HTML script blocks to be closed with "\</script>".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-328">Im folgende Beispiel schreibt ein Element ohne Inhalt.</span><span class="sxs-lookup"><span data-stu-id="9de15-328">The following example writes out an element with no content.</span></span> <span data-ttu-id="9de15-329">WriteFullEndElement verwendet, um die vollständige Endtag schreiben.</span><span class="sxs-lookup"><span data-stu-id="9de15-329">It uses WriteFullEndElement to write the full end element tag.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteFullEndElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteFullEndElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteName">
      <MemberSignature Language="C#" Value="public override void WriteName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteName : string -&gt; unit" Usage="xmlTextWriter.WriteName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9de15-330">Zu schreibender Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-330">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-331">Schreibt den angegebenen Namen und prüft dessen Gültigkeit entsprechend der W3C-Empfehlung für XML, Version 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-331">Writes out the specified name, ensuring it is a valid name according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-332">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-332">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-333">Wenn <xref:System.Xml.XmlTextWriter.Namespaces%2A> nastaven NA hodnotu `true`, `WriteName` überprüft auch, dass der Name entsprechend der W3C-Namespaces in XML-Empfehlung gültig ist.</span><span class="sxs-lookup"><span data-stu-id="9de15-333">If <xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`, `WriteName` also checks that the name is also valid according to the W3C Namespaces in XML recommendation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-334">
            <paramref name="name" /> ist kein gültiger XML-Name, oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-334">
              <paramref name="name" /> is not a valid XML name; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteNmToken">
      <MemberSignature Language="C#" Value="public override void WriteNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteNmToken (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="override this.WriteNmToken : string -&gt; unit" Usage="xmlTextWriter.WriteNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9de15-335">Zu schreibender Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-335">Name to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-336">Schreibt den angegebenen Namen und prüft, ob es ein gültiger <see langword="NmToken" /> ist, entsprechend der W3C-Empfehlung für XML, Version 1.0 (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-336">Writes out the specified name, ensuring it is a valid <see langword="NmToken" /> according to the W3C XML 1.0 recommendation (http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-337">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-337">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-338">
            <paramref name="name" /> ist kein gültiges <see langword="NmToken" />; oder <paramref name="name" /> ist <see langword="null" /> oder <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-338">
              <paramref name="name" /> is not a valid <see langword="NmToken" />; or <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteProcessingInstruction">
      <MemberSignature Language="C#" Value="public override void WriteProcessingInstruction (string name, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteProcessingInstruction(string name, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteProcessingInstruction (name As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteProcessingInstruction(System::String ^ name, System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteProcessingInstruction : string * string -&gt; unit" Usage="xmlTextWriter.WriteProcessingInstruction (name, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9de15-339">Name der Verarbeitungsanweisung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-339">Name of the processing instruction.</span>
          </span>
        </param>
        <param name="text">
          <span data-ttu-id="9de15-340">In die Verarbeitungsanweisung einzufügender Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-340">Text to include in the processing instruction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-341">Schreibt eine Verarbeitungsanweisung mit einem Leerzeichen zwischen dem Namen und dem Text wie folgt: &lt;?name text?&gt;.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-341">Writes out a processing instruction with a space between the name and text as follows: &lt;?name text?&gt;.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-342">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-342">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-343">Wenn `text` ist entweder `null` oder `String.Empty`, diese Methode schreibt einen `ProcessingInstruction` ohne Inhalt, z. B. Daten \<? Name? >.</span><span class="sxs-lookup"><span data-stu-id="9de15-343">If `text` is either `null` or `String.Empty`, this method writes a `ProcessingInstruction` with no data content, for example \<?name?>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-344">Im folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="9de15-344">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-345">Der Text ergibt kein wohlgeformtes XML-Dokument.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-345">The text would result in a non-well formed XML document.</span>
          </span>
          <span data-ttu-id="9de15-346">
            <paramref name="name" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-346">
              <paramref name="name" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="9de15-347">Diese Methode wird zum Erstellen einer XML-Deklaration nach einem Aufruf von <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-347">This method is being used to create an XML declaration after <see cref="M:System.Xml.XmlTextWriter.WriteStartDocument" /> has already been called.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteQualifiedName">
      <MemberSignature Language="C#" Value="public override void WriteQualifiedName (string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteQualifiedName(string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteQualifiedName (localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteQualifiedName(System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteQualifiedName : string * string -&gt; unit" Usage="xmlTextWriter.WriteQualifiedName (localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="localName">
          <span data-ttu-id="9de15-348">Der zu schreibende lokale Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-348">The local name to write.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="9de15-349">Der Namespace-URI, der dem Namen zugeordnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-349">The namespace URI to associate with the name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-350">Schreibt den durch den Namespace angegebenen Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-350">Writes out the namespace-qualified name.</span>
          </span>
          <span data-ttu-id="9de15-351">Diese Methode sucht das Präfix im Gültigkeitsbereich des Namespaces.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-351">This method looks up the prefix that is in scope for the given namespace.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-352">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-352">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-353">Um beispielsweise den folgenden Microsoft Visual C#-Code:</span><span class="sxs-lookup"><span data-stu-id="9de15-353">For example, the following Microsoft Visual C# code:</span></span>  
  
```csharp  
writer.Formatting = Formatting.Indented;  
writer.WriteStartElement("root");  
 writer.WriteAttributeString("xmlns","x",null,"urn:abc");  
 writer.WriteStartElement("item");  
 writer.WriteStartAttribute("href",null);  
 writer.WriteString("#");  
 writer.WriteQualifiedName("test","urn:abc");  
 writer.WriteEndAttribute();  
 writer.WriteEndElement();  
 writer.WriteEndElement();  
 writer.Close();  
```  
  
 <span data-ttu-id="9de15-354">Generiert die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="9de15-354">Generates the following output:</span></span>  
  
```xml  
<root xmlns:x="urn:abc">  
 <item href="#x:test"/>  
 </root>  
```  
  
 <span data-ttu-id="9de15-355">Wenn `ns` Zuordnungen, die dem aktuellen Standardnamespace ohne Präfix wird generiert.</span><span class="sxs-lookup"><span data-stu-id="9de15-355">If `ns` maps to the current default namespace, no prefix is generated.</span></span>  
  
 <span data-ttu-id="9de15-356">Beim Schreiben von Attributwerten generiert diese Methode ein Präfix an, wenn `ns` wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="9de15-356">When writing attribute values, this method generates a prefix if `ns` is not found.</span></span> <span data-ttu-id="9de15-357">Beim Schreiben von Elementinhalt, können sie eine Ausnahme auslöst, wenn `ns` wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="9de15-357">When writing element content, it throws an exception if `ns` is not found.</span></span>  
  
 <span data-ttu-id="9de15-358">Wenn dieser Writer Namespaces unterstützt (<xref:System.Xml.XmlTextWriter.Namespaces%2A> nastaven NA hodnotu `true`), diese Methode überprüft auch, dass der Name entsprechend der W3C-Namespaces in XML-Empfehlung gültig ist (http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="9de15-358">If this writer supports namespaces (<xref:System.Xml.XmlTextWriter.Namespaces%2A> is set to `true`), this method also checks that the name is valid according to the W3C Namespaces in XML recommendation (http://www.w3.org/TR/REC-xml-names).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-359">Im folgende Beispiel schreibt einen Teil eines XSD-Schemas.</span><span class="sxs-lookup"><span data-stu-id="9de15-359">The following example writes out a portion of a XSD schema.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteQualifiedName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteQualifiedName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-360">
            <paramref name="localName" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-360">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
          <span data-ttu-id="9de15-361">
            <paramref name="localName" /> ist kein entsprechend der W3C-Spezifikation für Namespaces gültiger Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-361">
              <paramref name="localName" /> is not a valid name according to the W3C Namespaces spec.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteRaw">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-362">Schreibt unformatiertes Markup manuell.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-362">Writes raw markup manually.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-363">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-363">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(System::String ^ data);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : string -&gt; unit" Usage="xmlTextWriter.WriteRaw data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">
          <span data-ttu-id="9de15-364">Zeichenfolge, die den zu schreibenden Text enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-364">String containing the text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-365">Schreibt unformatiertes Markup manuell aus einer Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-365">Writes raw markup manually from a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-366">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-366">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-367">Diese Methode nicht Sonderzeichen mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="9de15-367">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9de15-368">Die <xref:System.Xml.XmlTextWriter> überprüft nicht, dass alle Daten, die an die <xref:System.Xml.XmlTextWriter.WriteRaw%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9de15-368">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="9de15-369">Sie sollten keine willkürlichen Daten für diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="9de15-369">You should not pass arbitrary data to this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-370">Das folgende Beispiel schreibt eine Zeichenfolge mit der `WriteRaw` Methode.</span><span class="sxs-lookup"><span data-stu-id="9de15-370">The following example writes a string using the `WriteRaw` method.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteRaw1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteRaw1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRaw">
      <MemberSignature Language="C#" Value="public override void WriteRaw (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteRaw(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteRaw (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteRaw(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteRaw : char[] * int * int -&gt; unit" Usage="xmlTextWriter.WriteRaw (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="9de15-371">Zeichenarray, das den zu schreibenden Text enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-371">Character array containing the text to write.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9de15-372">Die Position innerhalb des Puffers, die den Anfang des zu schreibenden Texts kennzeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-372">The position within the buffer indicating the start of the text to write.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9de15-373">Die Anzahl der zu schreibenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-373">The number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-374">Schreibt unformatiertes Markup manuell aus einem Zeichenpuffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-374">Writes raw markup manually from a character buffer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-375">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-375">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-376">Diese Methode nicht Sonderzeichen mit Escapezeichen versehen.</span><span class="sxs-lookup"><span data-stu-id="9de15-376">This method does not escape special characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9de15-377">Die <xref:System.Xml.XmlTextWriter> überprüft nicht, dass alle Daten, die an die <xref:System.Xml.XmlTextWriter.WriteRaw%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9de15-377">The <xref:System.Xml.XmlTextWriter> does not validate any data that is passed to the <xref:System.Xml.XmlTextWriter.WriteRaw%2A> method.</span></span> <span data-ttu-id="9de15-378">Sie sollten keine willkürlichen Daten für diese Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="9de15-378">You should not pass arbitrary data to this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9de15-379">
            <paramref name="buffer" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-379">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9de15-380">
            <paramref name="index" /> oder <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-380">
              <paramref name="index" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9de15-381">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-381">-or-</span>
          </span>
          <span data-ttu-id="9de15-382">Die Länge des Puffers minus <paramref name="index" /> ist kleiner als <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-382">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartAttribute">
      <MemberSignature Language="C#" Value="public override void WriteStartAttribute (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartAttribute(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartAttribute (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartAttribute(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartAttribute : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartAttribute (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="9de15-383">
            <see langword="Namespace" />-Präfix des Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-383">
              <see langword="Namespace" /> prefix of the attribute.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="9de15-384">
            <see langword="LocalName" /> des Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-384">
              <see langword="LocalName" /> of the attribute.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="9de15-385">
            <see langword="NamespaceURI" /> des Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-385">
              <see langword="NamespaceURI" /> of the attribute</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-386">Schreibt den Anfang eines Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-386">Writes the start of an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-387">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-387">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-388">Dies ist eine erweiterte Version des <xref:System.Xml.XmlWriter.WriteAttributeString%2A> , mit der Sie zum Schreiben eines Attributwerts mithilfe mehrerer Write-Methoden, wie <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span><span class="sxs-lookup"><span data-stu-id="9de15-388">This is a more advanced version of <xref:System.Xml.XmlWriter.WriteAttributeString%2A> that allows you to write an attribute value using multiple write methods, such as <xref:System.Xml.XmlTextWriter.WriteString%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-389">Im folgende Beispiel wird ein Buch geschrieben.</span><span class="sxs-lookup"><span data-stu-id="9de15-389">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-390">
            <paramref name="localName" /> ist entweder <see langword="null" /> oder <see langword="String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-390">
              <paramref name="localName" /> is either <see langword="null" /> or <see langword="String.Empty" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlTextWriter.WriteEndAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStartDocument">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-391">Schreibt die XML-Deklaration mit der Version "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-391">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-392">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-392">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument();" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : unit -&gt; unit" Usage="xmlTextWriter.WriteStartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9de15-393">Schreibt die XML-Deklaration mit der Version "1.0".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-393">Writes the XML declaration with the version "1.0".</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-394">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-394">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-395">Die Codierungsebene des Dokuments wird durch die Implementierung des Writers bestimmt.</span><span class="sxs-lookup"><span data-stu-id="9de15-395">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="9de15-396">Z. B. wenn ein <xref:System.Text.Encoding> -Objekt wird angegeben, der `XmlTextWriter` -Konstruktor, dadurch wird den Wert des Codierungsattributs bestimmt.</span><span class="sxs-lookup"><span data-stu-id="9de15-396">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span> <span data-ttu-id="9de15-397">Diese Methode erstellt kein eigenständiges Attribut.</span><span class="sxs-lookup"><span data-stu-id="9de15-397">This method does not create a standalone attribute.</span></span>  
  
 <span data-ttu-id="9de15-398">Wenn `WriteStartDocument` heißt der Writer überprüft, ob Sie gerade ein wohlgeformtes XML-Dokument ist.</span><span class="sxs-lookup"><span data-stu-id="9de15-398">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="9de15-399">Beispielsweise wird überprüft, ob die XML-Deklaration den ersten Knoten, dass eine und nur ein Stamm-Level-Element vorhanden ist und so weiter.</span><span class="sxs-lookup"><span data-stu-id="9de15-399">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="9de15-400">Wenn diese Methode nicht aufgerufen wird, wird der Writer davon ausgegangen werden, ein XML-Fragment geschrieben wird, und nicht auf Stammebene gültige Regeln gilt.</span><span class="sxs-lookup"><span data-stu-id="9de15-400">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="9de15-401">Wenn `WriteStartDocument` aufgerufen wurde, und klicken Sie dann die <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> Methode wird verwendet, um eine andere XML-Deklaration zu erstellen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="9de15-401">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-402">Im folgende Beispiel schreibt eine XML-Datei, die ein Buch darstellt.</span><span class="sxs-lookup"><span data-stu-id="9de15-402">The following example writes an XML file representing a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartDocument Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartDocument Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-403">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-403">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartDocument">
      <MemberSignature Language="C#" Value="public override void WriteStartDocument (bool standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartDocument(bool standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartDocument(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartDocument (standalone As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartDocument(bool standalone);" />
      <MemberSignature Language="F#" Value="override this.WriteStartDocument : bool -&gt; unit" Usage="xmlTextWriter.WriteStartDocument standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="standalone">
          <span data-ttu-id="9de15-404">Wenn <see langword="true" />, wird "standalone=yes" geschrieben, wenn <see langword="false" />, wird "standalone=no" geschrieben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-404">If <see langword="true" />, it writes "standalone=yes"; if <see langword="false" />, it writes "standalone=no".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-405">Schreibt die XML-Deklaration mit der Version "1.0" und dem eigenständigen Attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-405">Writes the XML declaration with the version "1.0" and the standalone attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-406">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-406">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-407">Die Codierungsebene des Dokuments wird durch die Implementierung des Writers bestimmt.</span><span class="sxs-lookup"><span data-stu-id="9de15-407">The encoding level of the document is determined by how the writer is implemented.</span></span> <span data-ttu-id="9de15-408">Z. B. wenn ein <xref:System.Text.Encoding> -Objekt wird angegeben, der `XmlTextWriter` -Konstruktor, dadurch wird den Wert des Codierungsattributs bestimmt.</span><span class="sxs-lookup"><span data-stu-id="9de15-408">For example, if an <xref:System.Text.Encoding> object is specified in the `XmlTextWriter` constructor, this determines the value of the encoding attribute.</span></span>  
  
 <span data-ttu-id="9de15-409">Wenn `WriteStartDocument` heißt der Writer überprüft, ob Sie gerade ein wohlgeformtes XML-Dokument ist.</span><span class="sxs-lookup"><span data-stu-id="9de15-409">When `WriteStartDocument` is called the writer validates that what you are writing is a well-formed XML document.</span></span> <span data-ttu-id="9de15-410">Beispielsweise wird überprüft, ob die XML-Deklaration den ersten Knoten, dass eine und nur ein Stamm-Level-Element vorhanden ist und so weiter.</span><span class="sxs-lookup"><span data-stu-id="9de15-410">For example, it checks that the XML declaration is the first node, that one and only one root-level element exists and so on.</span></span> <span data-ttu-id="9de15-411">Wenn diese Methode nicht aufgerufen wird, wird der Writer davon ausgegangen werden, ein XML-Fragment geschrieben wird, und nicht auf Stammebene gültige Regeln gilt.</span><span class="sxs-lookup"><span data-stu-id="9de15-411">If this method is not called, the writer assumes an XML fragment is being written and applies no root level rules.</span></span>  
  
 <span data-ttu-id="9de15-412">Wenn `WriteStartDocument` aufgerufen wurde, und klicken Sie dann die <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> Methode wird verwendet, um eine andere XML-Deklaration zu erstellen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="9de15-412">If `WriteStartDocument` has been called and then the <xref:System.Xml.XmlTextWriter.WriteProcessingInstruction%2A> method is used to create another XML declaration, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-413">Dies ist nicht die erste nach dem Konstruktor aufgerufene Schreibmethode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-413">This is not the first write method called after the constructor.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteStartElement">
      <MemberSignature Language="C#" Value="public override void WriteStartElement (string prefix, string localName, string ns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteStartElement(string prefix, string localName, string ns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteStartElement(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteStartElement (prefix As String, localName As String, ns As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteStartElement(System::String ^ prefix, System::String ^ localName, System::String ^ ns);" />
      <MemberSignature Language="F#" Value="override this.WriteStartElement : string * string * string -&gt; unit" Usage="xmlTextWriter.WriteStartElement (prefix, localName, ns)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">
          <span data-ttu-id="9de15-414">Das Namespacepräfix des Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-414">The namespace prefix of the element.</span>
          </span>
        </param>
        <param name="localName">
          <span data-ttu-id="9de15-415">Der lokale Name des Elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-415">The local name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="9de15-416">Der Namespace-URI, der dem Element zugeordnet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-416">The namespace URI to associate with the element.</span>
          </span>
          <span data-ttu-id="9de15-417">Wenn sich dieser Namespace bereits im Gültigkeitsbereich befindet und dem Namespace ein Präfix zugeordnet ist, schreibt der Writer automatisch auch das Präfix.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-417">If this namespace is already in scope and has an associated prefix then the writer automatically writes that prefix also.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-418">Schreibt das angegebene Starttag und ordnet dieses dem angegebenen Namespace und Präfix zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-418">Writes the specified start tag and associates it with the given namespace and prefix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-419">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-419">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-420">Nach dem Aufrufen dieser Methode können Sie Attribute schreiben oder erstellen Sie Inhalt mit <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, oder <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> für untergeordnete Elemente.</span><span class="sxs-lookup"><span data-stu-id="9de15-420">After calling this method you can either write attributes or create content using <xref:System.Xml.XmlTextWriter.WriteComment%2A>, <xref:System.Xml.XmlTextWriter.WriteString%2A>, or <xref:System.Xml.XmlTextWriter.WriteStartElement%2A> for child elements.</span></span> <span data-ttu-id="9de15-421">Sie können das Element mit dem Schließen <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> zu diesem Zeitpunkt ein Endtag geschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="9de15-421">You can close the element with <xref:System.Xml.XmlTextWriter.WriteEndElement%2A> at which time an end tag is written out.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-422">Im folgende Beispiel wird ein Buch geschrieben.</span><span class="sxs-lookup"><span data-stu-id="9de15-422">The following example writes out a book.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.WriteStartElement Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.WriteStartElement Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9de15-423">Der Writer ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-423">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteState">
      <MemberSignature Language="C#" Value="public override System.Xml.WriteState WriteState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.WriteState WriteState" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.WriteState" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property WriteState As WriteState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::WriteState WriteState { System::Xml::WriteState get(); };" />
      <MemberSignature Language="F#" Value="member this.WriteState : System.Xml.WriteState" Usage="System.Xml.XmlTextWriter.WriteState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.WriteState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-424">Ruft den Zustand des Writers ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-424">Gets the state of the writer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9de15-425">Einer der <see cref="T:System.Xml.WriteState" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-425">One of the <see cref="T:System.Xml.WriteState" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-426">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-426">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteString">
      <MemberSignature Language="C#" Value="public override void WriteString (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteString(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteString (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteString(System::String ^ text);" />
      <MemberSignature Language="F#" Value="override this.WriteString : string -&gt; unit" Usage="xmlTextWriter.WriteString text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="9de15-427">Zu schreibender Text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-427">Text to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-428">Schreibt den angegebenen Textinhalt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-428">Writes the given text content.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-429">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-429">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-430">`WriteString` führt die folgenden</span><span class="sxs-lookup"><span data-stu-id="9de15-430">`WriteString` does the following</span></span>  
  
-   <span data-ttu-id="9de15-431">Die Zeichen `&`, `<`, und `>` werden durch ersetzt `&amp;`, `&lt;`, und `&gt;`bzw.</span><span class="sxs-lookup"><span data-stu-id="9de15-431">The characters `&`, `<`, and `>` are replaced with `&amp;`, `&lt;`, and `&gt;`, respectively.</span></span>  
  
-   <span data-ttu-id="9de15-432">Zeichenwerten enthalten, die in den Bereich von 0 x-0x1F (Leerzeichen Zeichen 0xD, 0xA und 0 x 9) werden durch numerische Zeichenentitäten ersetzt (`&#0;` über `&#0x1F`).</span><span class="sxs-lookup"><span data-stu-id="9de15-432">Character values in the range 0x-0x1F (excluding white space characters 0x9, 0xA, and 0xD) are replaced with numeric character entities (`&#0;` through `&#0x1F`).</span></span>  
  
-   <span data-ttu-id="9de15-433">Wenn `WriteString` heißt im Kontext eines Attributwerts durch doppelte und einfache Anführungszeichen ersetzt `&quot;` und `&apos;` bzw.</span><span class="sxs-lookup"><span data-stu-id="9de15-433">If `WriteString` is called in the context of an attribute value, double and single quotes are replaced with `&quot;` and `&apos;` respectively.</span></span>  
  
 <span data-ttu-id="9de15-434">Z. B. Eingabezeichenfolge `test<item>test` lautet</span><span class="sxs-lookup"><span data-stu-id="9de15-434">For example, this input string `test<item>test` is written as</span></span>  
  
```  
test&lt;item&gt;test  
```  
  
 <span data-ttu-id="9de15-435">Wenn `text` ist entweder `null` oder `String.Empty`, diese Methode schreibt einen Textknoten mit den Dateninhalt.</span><span class="sxs-lookup"><span data-stu-id="9de15-435">If `text` is either `null` or `String.Empty`, this method writes a text node with no data content.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-436">Im folgende Beispiel schreibt ein XML-Fragment.</span><span class="sxs-lookup"><span data-stu-id="9de15-436">The following example writes an XML fragment.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.Formatting Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.Formatting Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-437">Die Textzeichenfolge enthält ein ungültiges Ersatzzeichenpaar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-437">The text string contains an invalid surrogate pair.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteSurrogateCharEntity">
      <MemberSignature Language="C#" Value="public override void WriteSurrogateCharEntity (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteSurrogateCharEntity(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteSurrogateCharEntity(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteSurrogateCharEntity (lowChar As Char, highChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteSurrogateCharEntity(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="override this.WriteSurrogateCharEntity : char * char -&gt; unit" Usage="xmlTextWriter.WriteSurrogateCharEntity (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="9de15-438">Das niedrige Ersatzzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-438">The low surrogate.</span>
          </span>
          <span data-ttu-id="9de15-439">Dabei muss es sich um einen Wert zwischen <see langword="0xDC00" /> und <see langword="0xDFFF" /> handeln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-439">This must be a value between <see langword="0xDC00" /> and <see langword="0xDFFF" />.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="9de15-440">Das hohe Ersatzzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-440">The high surrogate.</span>
          </span>
          <span data-ttu-id="9de15-441">Dabei muss es sich um einen Wert zwischen <see langword="0xD800" /> und <see langword="0xDBFF" /> handeln.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-441">This must be a value between <see langword="0xD800" /> and <see langword="0xDBFF" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-442">Generiert und schreibt die Ersatzzeichenentität für das Ersatzzeichenpaar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-442">Generates and writes the surrogate character entity for the surrogate character pair.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-443">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-443">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-444">Diese Methode gilt nur für Systeme, die UTF-16-Codierung verwenden.</span><span class="sxs-lookup"><span data-stu-id="9de15-444">This method is only applicable on systems that use UTF-16 encoding.</span></span>  
  
 <span data-ttu-id="9de15-445">Die Ersatzzeichenentität wird im Hexadezimalformat geschrieben.</span><span class="sxs-lookup"><span data-stu-id="9de15-445">The surrogate character entity is written in hexadecimal format.</span></span> <span data-ttu-id="9de15-446">Der Bereich für Ersatzzeichen liegt `#x10000` zu `#x10FFFF`.</span><span class="sxs-lookup"><span data-stu-id="9de15-446">The range for surrogate characters is `#x10000` to `#x10FFFF`.</span></span> <span data-ttu-id="9de15-447">Die folgende Formel wird verwendet, um die Ersatzzeichenentität generieren: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span><span class="sxs-lookup"><span data-stu-id="9de15-447">The following formula is used to generate the surrogate character entity: (`highChar` - `0xD800`) \* `0x400` + (`lowChar` - `0xDC00`) + `0x10000`.</span></span>  
  
 <span data-ttu-id="9de15-448">Für HTML und XML basiert der Dokument-Zeichensatz (und daher die Schreibweise von numerischen Zeichenverweisen) auf UCS [ISO-10646].</span><span class="sxs-lookup"><span data-stu-id="9de15-448">For both HTML and XML, the document character set (and therefore the notation of numeric character references) is based on UCS [ISO-10646].</span></span> <span data-ttu-id="9de15-449">Einen einzelnen numerischen Zeichenverweis in einem Quelldokument kann auf zwei 16-Bit-Einheiten in einer Zeichenfolge (ein hohes Ersatzzeichen und ein niedriges Ersatzzeichen) daher in einigen Fällen entsprechen.</span><span class="sxs-lookup"><span data-stu-id="9de15-449">A single numeric character reference in a source document may therefore in some cases correspond to two 16-bit units in a string (a high surrogate and a low surrogate).</span></span> <span data-ttu-id="9de15-450">Diese 16-Bit-Einheiten werden als ein Ersatzzeichenpaar bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="9de15-450">These 16-bit units are referred to as a surrogate pair.</span></span>  
  
 <span data-ttu-id="9de15-451">Weitere Informationen in Bezug auf das Ersatzzeichen oder Zeichen finden Sie in Abschnitt 3.7 des Unicode-standard 3.0/Unicode-2.0 befindet sich am http://www.unicode.org, oder der W3C-Empfehlung für XML 1.0 Abschnitt 2.2 unter http://www.w3.org/TR/REC-xml#charsets.</span><span class="sxs-lookup"><span data-stu-id="9de15-451">For more information regarding surrogates or characters, refer to section 3.7 of the Unicode 3.0/Unicode 2.0 standard located at http://www.unicode.org, or section 2.2 of the W3C XML 1.0 Recommendation located at http://www.w3.org/TR/REC-xml#charsets.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="9de15-452">Es wurde ein ungültiges Ersatzzeichenpaar übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-452">An invalid surrogate character pair was passed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteWhitespace">
      <MemberSignature Language="C#" Value="public override void WriteWhitespace (string ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteWhitespace(string ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlTextWriter.WriteWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteWhitespace (ws As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteWhitespace(System::String ^ ws);" />
      <MemberSignature Language="F#" Value="override this.WriteWhitespace : string -&gt; unit" Usage="xmlTextWriter.WriteWhitespace ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ws">
          <span data-ttu-id="9de15-453">Die Zeichenfolge von Leerraumzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-453">The string of white space characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9de15-454">Schreibt den angegebenen Leerraum.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-454">Writes out the given white space.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-455">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-455">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-456">Diese Methode wird verwendet, um Ihr Dokument manuell zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="9de15-456">This method is used to manually format your document.</span></span> <span data-ttu-id="9de15-457">Verwenden der <xref:System.Xml.XmlTextWriter.Formatting%2A> Eigenschaft so, dass den Writer automatisch formatieren der Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="9de15-457">Use the <xref:System.Xml.XmlTextWriter.Formatting%2A> property to have the writer format the output automatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-458">Im folgenden Beispiel wird die `WriteWhitespace` Methode zum Steuern, wie die Datei formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="9de15-458">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9de15-459">Die Zeichenfolge enthält Zeichen, die keine Leerraumzeichen sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-459">The string contains non-white space characters.</span>
          </span>
        </exception>
        <altmember cref="P:System.Xml.XmlTextWriter.Formatting" />
      </Docs>
    </Member>
    <Member MemberName="XmlLang">
      <MemberSignature Language="C#" Value="public override string XmlLang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlLang" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlLang" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlLang As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XmlLang { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlLang : string" Usage="System.Xml.XmlTextWriter.XmlLang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-460">Ruft den aktuellen <see langword="xml:lang" />-Bereich ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-460">Gets the current <see langword="xml:lang" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9de15-461">Der aktuelle <see langword="xml:lang" /> oder <see langword="null" />, wenn im aktuellen Bereich kein <see langword="xml:lang" /> vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-461">The current <see langword="xml:lang" /> or <see langword="null" /> if there is no <see langword="xml:lang" /> in the current scope.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-462">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-462">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-463">Diese Eigenschaft kann es sich um eine Komponente, um herauszufinden, welcher Zustand einer anderen Komponente den Writer in verlassen hat.</span><span class="sxs-lookup"><span data-stu-id="9de15-463">This property allows one component to find out what state another component has left the writer in.</span></span> <span data-ttu-id="9de15-464">Beispielsweise soll möglicherweise eine Komponente um eine andere mitzuteilen, welche Sprache Hilfetext generiert.</span><span class="sxs-lookup"><span data-stu-id="9de15-464">For example, perhaps one component wants to tell another which language help text to generate.</span></span> <span data-ttu-id="9de15-465">Die Sprachinformationen durch Schreiben einer `xml:lang` Attribut.</span><span class="sxs-lookup"><span data-stu-id="9de15-465">The language information is communicated by writing an `xml:lang` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSpace">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlSpace XmlSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.XmlSpace XmlSpace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlTextWriter.XmlSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property XmlSpace As XmlSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlSpace XmlSpace { System::Xml::XmlSpace get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSpace : System.Xml.XmlSpace" Usage="System.Xml.XmlTextWriter.XmlSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9de15-466">Ruft einen <see cref="T:System.Xml.XmlSpace" /> ab, der den aktuellen <see langword="xml:space" />-Bereich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-466">Gets an <see cref="T:System.Xml.XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9de15-467">Ein <see langword="XmlSpace" />, der den aktuellen <see langword="xml:space" />-Bereich darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9de15-467">An <see langword="XmlSpace" /> representing the current <see langword="xml:space" /> scope.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="9de15-468">Wert</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9de15-468">Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9de15-469">Bedeutung</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9de15-469">Meaning</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="9de15-470">Keiner</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9de15-470">None</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9de15-471">Dies ist der Standardwert, wenn kein <see langword="xml:space" />-Bereich vorhanden ist.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9de15-471">This is the default if no <see langword="xml:space" /> scope exists.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="9de15-472">Standard</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9de15-472">Default</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9de15-473">Der aktuelle Bereich ist <see langword="xml:space" />="default".</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9de15-473">The current scope is <see langword="xml:space" />="default".</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="9de15-474">Preserve</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9de15-474">Preserve</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="9de15-475">Der aktuelle Bereich ist <see langword="xml:space" />="preserve".</span>
                <span class="sxs-lookup">
                  <span data-stu-id="9de15-475">The current scope is <see langword="xml:space" />="preserve".</span>
                </span>
              </description>
            </item>
          </list>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9de15-476">Ab .NET Framework 2.0, es wird empfohlen, Sie erstellen <xref:System.Xml.XmlWriter> Instanzen mithilfe der <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> Methode und die <xref:System.Xml.XmlWriterSettings> Klasse, um die neuen Funktionen nutzen.</span><span class="sxs-lookup"><span data-stu-id="9de15-476">Starting with the .NET Framework 2.0, we recommend that you create <xref:System.Xml.XmlWriter> instances by using the <xref:System.Xml.XmlWriter.Create%2A?displayProperty=nameWithType> method and the <xref:System.Xml.XmlWriterSettings> class to take advantage of new functionality.</span></span>  
  
 <span data-ttu-id="9de15-477">Diese Eigenschaft kann es sich um eine Komponente, um herauszufinden, in welchem Zustand sich, dass eine andere Komponente den Writer verlassen hat.</span><span class="sxs-lookup"><span data-stu-id="9de15-477">This property allows one component to find out in what state another component has left the writer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9de15-478">Im folgenden Beispiel wird die `WriteWhitespace` Methode zum Steuern, wie die Datei formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="9de15-478">The following example uses the `WriteWhitespace` method to control how the file is formatted.</span></span>  
  
 [!code-cpp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlTextWriter.XmlSpace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlTextWriter.XmlSpace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>