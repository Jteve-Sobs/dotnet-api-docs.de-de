<Type Name="XmlResolver" FullName="System.Xml.XmlResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="10bd3de2c449b5e930f7208e3f450427586180aa" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53226164" /></Metadata><TypeSignature Language="C#" Value="public abstract class XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit XmlResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlResolver abstract" />
  <TypeSignature Language="F#" Value="type XmlResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Löst externe XML-Ressourcen auf, die durch einen URI (Uniform Resource Identifier) benannt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.XmlResolver> Typ wird zum Auflösen von externer XML-Ressourcen, z. B. Entitäten, Dokumenttypdefinitionen (DTDs) oder Schemata verwendet. Es wird auch verwendet, um Prozess Include- und Importelementen, die in Extensible Stylesheet Language (XSL)-Stylesheets oder Schemas für XML Schema Definition Language (XSD) zu finden.  
  
 <xref:System.Xml.XmlResolver> behandelt alle Aspekte beim Aushandeln der Verbindungs mit die Ressourcen, einschließlich der Behandlung von Sicherheitseinstellungen, öffnen die Verbindung mit der Datenquelle und Zurückgeben der Ressource in Form von einem Stream oder anderen Objekttyp. Das Objekt, das Aufrufe <xref:System.Xml.XmlResolver> hat die Aufgabe der Interpretation des Streams.  
  
 Die <xref:System.Xml> -Namespace umfasst zwei konkrete Implementierungen der <xref:System.Xml.XmlResolver> Klasse:  
  
-   <xref:System.Xml.XmlUrlResolver> ist der Standardresolver für alle Klassen in der <xref:System.Xml> Namespace. Sie unterstützt das `file://`-Protokoll und das `http://`-Protokoll und Anforderungen von der <xref:System.Net.WebRequest?displayProperty=nameWithType>-Klasse. Beispiele für die Erweiterung der Klasse zur Verbesserung der Leistung, finden Sie unter den <xref:System.Xml.XmlUrlResolver> Referenzseite.  
  
-   <xref:System.Xml.XmlSecureResolver> unterstützt schützen einen anderen <xref:System.Xml.XmlResolver> -Objekt umschließen das Objekt, und beschränken der Ressourcen, die darauf zugreifen kann. Z. B. die <xref:System.Xml.XmlSecureResolver> können den Zugriff auf bestimmte Internetsites oder Internetzonen verhindert werden soll.  
  
 Sie können zu erstellen, und geben Ihr eigener Resolver. Wenn Sie einen Konfliktlöser nicht angeben, verwendet der Reader einen Standard- <xref:System.Xml.XmlUrlResolver> ohne Benutzeranmeldeinformationen.  
  
 Sie geben den zu verwendenden <xref:System.Xml.XmlResolver> an, indem Sie die <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=nameWithType>-Eigenschaft festlegen und das <xref:System.Xml.XmlReaderSettings>-Objekt an die <xref:System.Xml.XmlReader.Create%2A>-Methode übergeben.  
  
 Wenn die Ressource auf einem System, die eine Authentifizierung erforderlich ist gespeichert ist, verwenden Sie die <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=nameWithType> Eigenschaft, um die erforderlichen Anmeldeinformationen angeben.  
  
## <a name="supplying-authentication-credentials"></a>Angeben von Authentifizierungsinformationen  
 Die Datei, die zu lesenden XML-Daten enthält, möglicherweise zugriffsbeschränkungen. Wenn für den Zugriff auf eine Netzwerkressource eine Authentifizierung erforderlich ist, geben Sie die erforderlichen Anmeldeinformationen mithilfe der <xref:System.Xml.XmlResolver.Credentials%2A>-Eigenschaft an. Wenn die <xref:System.Xml.XmlResolver.Credentials%2A> Eigenschaft nicht festgelegt ist, Anmeldeinformationen werden festgelegt, um `null`.  
  
 Nehmen wir beispielsweise an, dass Anmeldeinformationen, beim Anfordern von Daten aus dem Internet zum Zweck der Authentifizierung erforderlich sind. Wenn das virtuelle Verzeichnis der Website anonymen Zugriff zulässt, müssen Sie festlegen, die <xref:System.Xml.XmlResolver.Credentials%2A> Eigenschaft, um Anmeldeinformationen bereitzustellen. Das folgende Beispiel erstellt eine <xref:System.Xml.XmlReader> Objekt, das verwendet eine <xref:System.Xml.XmlUrlResolver> mit Standardanmeldeinformationen für den Zugriff auf die http://localhost/bookstore/inventory.xml Standort.  
  
 [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]
 [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]
 [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  
  
 Sie können unterschiedliche Anmeldeinformationen für unterschiedliche URIs angeben und auf einen Cache hinzufügen. Anhand dieser Anmeldeinformationen wird die Authentifizierung für die unterschiedlichen URIs überprüft, ungeachtet der ursprünglichen Quelle des XML-Codes. Das folgende Beispiel zeigt, wie Sie die Anmeldeinformationen für einen Cache hinzufügen.  
  
 [!code-csharp[XslCompiledTransform.Load#11](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)]
 [!code-vb[XslCompiledTransform.Load#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)]  
  
## <a name="security-considerations"></a>Sicherheitsüberlegungen  
 Die folgenden Aspekte berücksichtigt werden, bei der Arbeit mit der <xref:System.Xml.XmlResolver> Klasse.  
  
-   <xref:System.Xml.XmlResolver>-Objekte können vertrauliche Informationen (z. B. Anmeldeinformationen des Benutzers) enthalten. Sollten Sie vorsichtig beim Zwischenspeichern von sein <xref:System.Xml.XmlResolver> Objekte aus, und übergeben Sie die <xref:System.Xml.XmlResolver> Objekt, das eine nicht vertrauenswürdige Komponente.  
  
-   Wenn Sie eine Klasseneigenschaft entwerfen, die die <xref:System.Xml.XmlResolver>-Klasse verwendet, sollte die Eigenschaft als eine Nur-Schreiben-Eigenschaft (d. h. als lesegeschützt) definiert sein. Mithilfe der Eigenschaft können Sie den zu verwendenden <xref:System.Xml.XmlResolver> angeben. Sie können die Eigenschaft jedoch nicht zur Rückgabe eines <xref:System.Xml.XmlResolver>-Objekts verwenden.  
  
-   Wenn die Anwendung akzeptiert <xref:System.Xml.XmlResolver> Objekten aus nicht vertrauenswürdigem Code, Sie nicht davon ausgehen, dass der URI übergebene der <xref:System.Xml.XmlResolver.GetEntity%2A> Methode identisch, die von zurückgegeben werden die <xref:System.Xml.XmlResolver.ResolveUri%2A> Methode. Von der <xref:System.Xml.XmlResolver>-Klasse abgeleitete Klassen können die <xref:System.Xml.XmlResolver.GetEntity%2A>-Methode überschreiben und Daten zurückgeben, die sich von den Daten unterscheiden, die im ursprünglichen URI enthalten waren.  
  
-   Anwendung kann die Gefahr von DOS-Service-Angriffen für Arbeitsspeicher die <xref:System.Xml.XmlResolver.GetEntity%2A> Methode durch die Implementierung einer <xref:System.Runtime.InteropServices.ComTypes.IStream> , die die Anzahl der gelesenen Bytes beschränkt. Dadurch wird Schutz für Situationen dar, in denen bösartiger Code versucht, einen unendlichen Stream von Bytes, übergeben, die <xref:System.Xml.XmlResolver.GetEntity%2A> Methode.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Xml.XmlUrlResolver> mit Standardanmeldeinformationen. Ein <xref:System.Xml.XmlReader> dient zum Lesen und anzeigen den resultierende Datenstrom.  
  
 [!code-csharp[XmlResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_ex/CS/XmlResolver_ex.cs#1)]
 [!code-vb[XmlResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_ex/VB/XmlResolver_ex.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und XML-Daten</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XmlResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XmlResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlResolver" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird von abgeleiteten Klassenkonstruktoren zum Initialisieren der Zustand in diesem Typ aufgerufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public virtual System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt beim Überschreiben in einer abgeleiteten Klasse die zum Authentifizieren von Webanforderungen verwendeten Anmeldeinformationen fest.</summary>
        <value>Die Anmeldeinformationen zum Authentifizieren von Webanforderungen. Wenn diese Eigenschaft nicht festgelegt ist, wird als Standardwert <see langword="null" /> verwendet, was bedeutet, dass <see langword="XmlResolver" /> über keine Benutzeranmeldeinformationen verfügt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das virtuelle Verzeichnis keine Authentifizierung erforderlich ist, muss diese Eigenschaft nicht festgelegt werden. Andernfalls müssen die Anmeldeinformationen des Benutzers angegeben werden.  
  
 Der folgende C#-Code legt die Anmeldeinformationen fest, auf die <xref:System.Xml.XmlResolver> Objekt.  
  
```csharp  
NetworkCredential nc = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = nc;  
```  
  
 Sie können unterschiedliche URIs unterschiedliche Anmeldeinformationen zuordnen und einen Cache hinzufügen. Klicken Sie dann können die Anmeldeinformationen um die Authentifizierung für unterschiedliche URIs unabhängig von der ursprünglichen Quelle der XML-Code zu überprüfen.  
  
```csharp  
NetworkCredential myCred = new NetworkCredential(UserName, SecurelyStoredPassword, Domain);   
CredentialCache myCache = new CredentialCache();   
myCache.Add(new Uri("http://www.contoso.com/"), "Basic", myCred);   
myCache.Add(new Uri("http://app.contoso.com/"), "Basic", myCred);  
XmlUrlResolver resolver = new XmlUrlResolver();  
resolver.Credentials = myCache;  
```  
  
   
  
## Examples  
 Finden Sie unter <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=nameWithType> für ein Beispiel, das diese Eigenschaft verwendet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="T:System.Net.NetworkCredential" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="abstract member GetEntity : Uri * string * Type -&gt; obj" Usage="xmlResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
        <param name="role">Derzeit nicht verwendet.</param>
        <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Version gibt nur System.IO.Stream-Objekte zurück.</param>
        <summary>Weist beim Überschreiben in einer abgeleiteten Klasse einen URI einem Objekt zu, das die eigentliche Ressource enthält.</summary>
        <returns>Ein Streamobjekt oder <see langword="null" />, wenn ein anderer Typ als Stream angegeben ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, wenn die vom Aufrufer zum Zuordnen von eines angegebenen URIS in das Objekt, das mit der tatsächlichen-Ressource, die den URI darstellt. Der Typ des zurückgegebenen Objekts ist verhandelbar. die Implementierung muss jedoch immer unterstützen <xref:System.IO.Stream?displayProperty=nameWithType>.  
  
 Die asynchrone Version dieser Methode finden Sie unter <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.  
  
> [!IMPORTANT]
>  Anwendung kann die Gefahr von DOS-Service-Angriffen für Arbeitsspeicher die <xref:System.Xml.XmlResolver.GetEntity%2A> Methode durch die Implementierung einer <xref:System.Runtime.InteropServices.ComTypes.IStream> , die die Anzahl der gelesenen Bytes beschränkt. Dadurch wird Schutz für Situationen dar, in denen bösartiger Code versucht, einen unendlichen Stream von Bytes, übergeben, die <xref:System.Xml.XmlResolver.GetEntity%2A> Methode.  
  
   
  
## Examples  
 Finden Sie unter <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> ein Beispiel, das mit dieser Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><paramref name="ofObjectToReturn" /> ist kein <see langword="Stream" />-Typ.</exception>
        <exception cref="T:System.UriFormatException">Der angegebene URI ist kein absoluter URI.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="absoluteUri" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Exception">Es ist ein Laufzeitfehler aufgetreten (z. B. eine unterbrochene Serververbindung).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="abstract member GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;&#xA;override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
        <param name="role">Derzeit nicht verwendet.</param>
        <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Version gibt nur <see cref="T:System.IO.Stream" />-Objekte zurück.</param>
        <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, asynchron einen URI zu.</summary>
        <returns>Ein Streamobjekt oder <see langword="null" />, wenn ein anderer Typ als Stream angegeben ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist die asynchrone Version von <xref:System.Xml.XmlResolver.GetEntity%2A>, mit der gleichen Funktionalität. Um diese Methode verwenden zu können, müssen Sie festlegen der <xref:System.Xml.XmlReaderSettings.Async%2A> flag `true`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/db854f91-ccef-4035-ae4d-0911fde808c7">Asynchrone Programmierung mit Async und Await (C# und Visual Basic)</related>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public virtual Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="abstract member ResolveUri : Uri * string -&gt; Uri&#xA;override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Der Basis-URI, der zum Auflösen des relativen URIs verwendet wird.</param>
        <param name="relativeUri">Der aufzulösende URI. Der URI kann absolut oder relativ sein. Wenn der URI absolut ist, ersetzt dieser Wert effektiv den <paramref name="baseUri" />-Wert. Wenn der URI relativ ist, ergibt der Wert in Verbindung mit dem <paramref name="baseUri" /> einen absoluten URI.</param>
        <summary>Löst beim Überschreiben in einer abgeleiteten Klasse den absoluten URI der Basis sowie relative URIs auf.</summary>
        <returns>Der absolute URI oder <see langword="null" />, wenn der relative URI nicht aufgelöst werden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der absolute URI kann als Basis-URI für alle nachfolgenden Anforderungen für Entitäten verwendet werden, die relativ zu diesen URI.  
  
   
  
## Examples  
 Finden Sie unter <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=nameWithType> ein Beispiel für die diese Methode verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="relativeUri" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsType">
      <MemberSignature Language="C#" Value="public virtual bool SupportsType (Uri absoluteUri, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsType(class System.Uri absoluteUri, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsType(Uri ^ absoluteUri, Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member SupportsType : Uri * Type -&gt; bool&#xA;override this.SupportsType : Uri * Type -&gt; bool" Usage="xmlResolver.SupportsType (absoluteUri, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Die URI.</param>
        <param name="type">Der Typ, der zurückgegeben wird.</param>
        <summary>Erlaubt dem Resolver, andere Typen als <see cref="T:System.IO.Stream" /> zurückzugeben.</summary>
        <returns><see langword="true" />, wenn der <paramref name="type" /> unterstützt wird, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>