<Type Name="XmlNamespaceManager" FullName="System.Xml.XmlNamespaceManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a282a031a864f246fd7b162e648bd36a11afc34" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75045559" /></Metadata><TypeSignature Language="C#" Value="public class XmlNamespaceManager : System.Collections.IEnumerable, System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlNamespaceManager extends System.Object implements class System.Collections.IEnumerable, class System.Xml.IXmlNamespaceResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlNamespaceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlNamespaceManager&#xA;Implements IEnumerable, IXmlNamespaceResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlNamespaceManager : System::Collections::IEnumerable, System::Xml::IXmlNamespaceResolver" />
  <TypeSignature Language="F#" Value="type XmlNamespaceManager = class&#xA;    interface IXmlNamespaceResolver&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Xml.IXmlNamespaceResolver</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Löst Namespaces auf, fügt sie einer Auflistung hinzu bzw. entfernt sie daraus und ermöglicht die Verwaltung der Gültigkeitsbereiche dieser Namespaces.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Allgemeine Informationen zum Deklarieren und Verwenden von Namespaces in XML-Dokumenten finden Sie unter [Verwalten von Namespaces in einem XML-Dokument](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md).  
  
 in <xref:System.Xml.XmlNamespaceManager> werden Präfixe und Namespaces als Zeichen folgen gespeichert. Im folgenden finden Sie eine Zusammenfassung der Verwaltungs-und Suchaufgaben, die Sie mit dieser Klasse ausführen können. Weitere Informationen und Beispiele finden Sie, indem Sie den Links zur Referenzseite der einzelnen Methoden oder Eigenschaften folgen.  
  
|Zweck|Verwendung|  
|--------|---------|  
|Hinzufügen eines Namespaces|<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> -Methode|  
|Entfernen eines Namespaces|<xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> -Methode|  
|Suchen des URIs für den Standardnamespace|<xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A>-Eigenschaft|  
|Suchen des URIs für ein Namespacepräfix|<xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> -Methode|  
|Suchen des Präfixes für einen Namespace-URI|<xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> -Methode|  
|Abrufen einer Namespaceliste im aktuellen Knoten|<xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> -Methode|  
|Festlegen des Gültigkeitsbereichs für einen Namespace|Die Methoden <xref:System.Xml.XmlNamespaceManager.PushScope%2A> und <xref:System.Xml.XmlNamespaceManager.PopScope%2A>|  
|Überprüfen, ob im aktuellen Gültigkeitsbereich ein Präfix definiert ist|<xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> -Methode|  
|Abrufen der Namenstabelle, die für die Suche nach Präfixen und URIs verwendet wird|<xref:System.Xml.XmlNamespaceManager.NameTable%2A>-Eigenschaft|  
  
 Wenn Sie Namespaces zum Namespace-Manager hinzufügen möchten, erstellen Sie ein <xref:System.Xml.XmlNamespaceManager> Objekt, und verwenden Sie dann die <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>-Methode. Dem Namespace-Manager werden beim Erstellen automatisch Standardpaare aus Präfix und Namespace hinzugefügt.  
  
 Wenn Sie den Namespace-Manager erstellen, können Sie eine namens Tabelle aus der <xref:System.Xml.XmlReader>-, <xref:System.Xml.Xsl.XsltContext>-oder <xref:System.Xml.XmlDocument>-Klasse angeben und dann die-<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>-Methode verwenden, um die Namespaces hinzuzufügen.  
  
 Sie können das <xref:System.Xml.XmlNamespaceManager>-Objekt als Parameter für die <xref:System.Xml.XmlNode.SelectNodes%2A>-oder <xref:System.Xml.XmlNode.SelectSingleNode%2A>-Methode der <xref:System.Xml.XmlDocument>-Klasse angeben, um XPath-Abfrage Ausdrücke auszuführen, die auf Namespace qualifizierte Element-und Attributnamen verweisen.  
  
 Der Namespace-Manager geht davon aus, dass Präfixe und Namespaces bereits überprüft wurden und der W3C-Spezifikation für [Namespaces](https://www.w3.org/TR/REC-xml-names/) entsprechen. Der Namespace-Manager führt keine Validierung aus.  
  
 Der Namespace-Manager atomisiert die Zeichen folgen, wenn diese hinzugefügt werden, indem die <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>-Methode verwendet wird, und wenn eine Suche mit der <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A>-oder <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A>-Methode durchgeführt wird.  
  
 Der Namespace-Manager unterstützt Enumerationen sowie das Hinzufügen und Abrufen von Namespaces. Sie können die im Namespace-Manager gespeicherten Informationen mit dem `foreach`-Konstrukt durchlaufen. Wenn Sie z. b. einen Namespace-Manager mit dem Namen `nsmanager`erstellen, können Sie die Tabelle durchlaufen, indem Sie `foreach (String prefix in nsmanager)`verwenden.  
  
 Da der Namespace-Manager einen Zeichenfolgenvergleich mit dem Präfix und den Namespaces als Objekte bereitstellt, kann durch Verwendung des Namespace-Managers anstelle des direkten Zeichenfolgenvergleichs eine Leistungssteigerung erzielt werden.  
  
 Im folgenden Codebeispiel wird gezeigt, wie das Präfix `xsd` an den Namespace-URI <http://www.w3.org/2001/XMLSchema> gebunden und dem Namespace-Manager hinzugefügt wird:  
  
```vb  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema")  
```  
  
```csharp  
nsmgr.AddNamespace("xsd", "http://www.w3.org/2001/XMLSchema");  
```  
  
 Sie können den Namespace dann mithilfe der <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A>-Methode ermitteln:  
  
```vb  
nsmgr.LookupNamespace("xsd")  
```  
  
```csharp  
nsmgr.LookupNamespace("xsd");  
```  
  
 Im folgenden Beispiel wird mithilfe der Name-Tabelle eines XML-Readers eine <xref:System.Xml.XmlNamespaceManager> erstellt:  
  
```vb  
Dim reader As New XmlTextReader("myfile.xml")  
Dim nsmanager As New XmlNamespaceManager(reader.NameTable)  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books")  
nsmanager.PushScope()  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store")  
While reader.Read()  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix)  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
     nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)))  
End While  
```  
  
```csharp  
XmlTextReader reader = new XmlTextReader("myfile.xml");  
XmlNamespaceManager nsmanager = new XmlNamespaceManager(reader.NameTable);  
nsmanager.AddNamespace("msbooks", "www.microsoft.com/books");  
nsmanager.PushScope();  
nsmanager.AddNamespace("msstore", "www.microsoft.com/store");  
while (reader.Read())  
{  
    Console.WriteLine("Reader Prefix:{0}", reader.Prefix);  
    Console.WriteLine("XmlNamespaceManager Prefix:{0}",  
    nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)));  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
    <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlNamespaceManager (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlNamespaceManager(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlNamespaceManager : System.Xml.XmlNameTable -&gt; System.Xml.XmlNamespaceManager" Usage="new System.Xml.XmlNamespaceManager nameTable" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable">Die zu verwendenden <see cref="T:System.Xml.XmlNameTable" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlNamespaceManager" />-Klasse mit dem angegebenen <see cref="T:System.Xml.XmlNameTable" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Name-Tabelle wird verwendet, um Präfixe und Namespaces zu suchen. Eine vorhandene namens Tabelle mit voratomisierten Zeichen folgen kann im Konstruktor angegeben werden. Dies hat mehrere Vorteile. Wenn z. b. die namens Tabelle eines <xref:System.Xml.XmlReader> Objekts verwendet wird, können nach jedem Lesevorgang alle Namespace-und Präfix Zeichenfolgen, die in die namens Tabelle übermittelt werden, von <xref:System.Xml.XmlNamespaceManager>wieder verwendet werden.  
  
 Weitere Informationen zu atomisierten Zeichenfolgen finden Sie unter <xref:System.Xml.XmlNameTable>.  
  
> [!NOTE]
>  Wenn Sie eine vorhandene namens Tabelle angeben, werden keine Namespaces in der Name-Tabelle <xref:System.Xml.XmlNamespaceManager>automatisch hinzugefügt. Sie müssen <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> und <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> verwenden, um Namespaces hinzuzufügen oder zu entfernen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Xml.XmlNamespaceManager> mithilfe der namens Tabelle des Readers erstellt.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NullReferenceException">An den Konstruktor wird <see langword="null" /> übergeben.</exception>
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="AddNamespace">
      <MemberSignature Language="C#" Value="public virtual void AddNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member AddNamespace : string * string -&gt; unit&#xA;override this.AddNamespace : string * string -&gt; unit" Usage="xmlNamespaceManager.AddNamespace (prefix, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Das Präfix, das dem hinzugefügten Namespace zugeordnet werden soll. Verwenden Sie String.Empty, um einen Standardnamespace hinzuzufügen.  
  
 **Hinweis** Wenn der <see cref="T:System.Xml.XmlNamespaceManager" /> jedoch für das Auflösen von Namespaces in einem XML Path Language-Ausdruck (XPath) verwendet wird, muss ein Präfix angegeben werden. Wenn ein XPath-Ausdruck kein Präfix enthält, wird davon ausgegangen, dass der Namespace-URI (Uniform Resource Identifier) der leere Namespace ist. Weitere Informationen über XPath-Ausdrücke und den <see cref="T:System.Xml.XmlNamespaceManager" /> finden Sie in der <see cref="M:System.Xml.XmlNode.SelectNodes(System.String)" />-Methode und der <see cref="M:System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)" />-Methode.</param>
        <param name="uri">Der hinzuzufügende Namespace.</param>
        <summary>Fügt der Auflistung den angegebenen Namespace hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xml.XmlNamespaceManager> überprüft `prefix` und `uri` nicht auf Konformität.  
  
 <xref:System.Xml.XmlReader> überprüft Namen, einschließlich Präfixe und Namespaces, um sicherzustellen, dass Sie gemäß der W3C-Spezifikation (World Wide Web Consortium (W3C) [Namespaces](https://www.w3.org/TR/REC-xml-names/)gültige XML-Namen sind. <xref:System.Xml.XmlNamespaceManager> wird intern von <xref:System.Xml.XmlReader>verwendet. um eine Duplizierung der Anstrengungen zu vermeiden, geht <xref:System.Xml.XmlNamespaceManager> davon aus, dass alle Präfixe und Namespaces gültig sind.  
  
 Wenn das Präfix und der Namespace bereits im aktuellen Gültigkeitsbereich vorhanden sind, ersetzen das neue Präfix-und Namespace paar die vorhandene Kombination aus Präfix und Namespace. Die gleiche Kombination aus Präfix und Namespace kann über verschiedene Bereiche hinweg vorhanden sein.  
  
 Die folgenden Präfix-/Namespace-Paare werden standardmäßig der <xref:System.Xml.XmlNamespaceManager>hinzugefügt. Sie können in jedem Bereich bestimmt werden.  
  
|Präfix|Namespace|  
|------------|---------------|  
|xmlns|<http://www.w3.org/2000/xmlns/> (der Namespace des xmlns-Präfixes)|  
|xml|<http://www.w3.org/XML/1998/namespace> (der XML-Namespace)|  
|String.Empty|String. Empty (der leere Namespace). Dieser Wert kann einem anderen Präfix zugewiesen werden. Definiert z. b. xmlns=""den Standard Namespace als leeren Namespace.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird <xref:System.Xml.XmlNamespaceManager> zum Auflösen von Namespaces in einem XML-Fragment verwendet.  
  
 [!code-csharp[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Wert für <paramref name="prefix" /> ist "xml" oder "xmlns".</exception>
        <exception cref="T:System.ArgumentNullException">Der Wert für <paramref name="prefix" /> oder <paramref name="uri" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultNamespace">
      <MemberSignature Language="C#" Value="public virtual string DefaultNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.DefaultNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefaultNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultNamespace { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultNamespace : string" Usage="System.Xml.XmlNamespaceManager.DefaultNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namespace-URI für den Standardnamespace ab.</summary>
        <value>Der Namespace-URI für den Standard Namespace oder eine leere Zeichenfolge, wenn kein Standard Namespace vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht dem Aufrufen von LookupNamespace (String. Empty).  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Standard Namespace, sofern vorhanden, angezeigt.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="xmlNamespaceManager.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einen Enumerator für das Durchlaufen der Namespaces im <see cref="T:System.Xml.XmlNamespaceManager" /> zurück.</summary>
        <returns>Ein <see cref="T:System.Collections.IEnumerator" />, der die vom <see cref="T:System.Xml.XmlNamespaceManager" /> gespeicherten Präfixe enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der folgende Code zeigt, wie die <xref:System.Collections.IEnumerator> verwendet wird, um alle im <xref:System.Xml.XmlNamespaceManager> Objekt gespeicherten Namespace-Paare anzuzeigen.  
  
```vb  
Dim nsEnum As IEnumerator = nsmgr.GetEnumerator()  
Do While nsEnum.MoveNext  
  If nsEnum.Current <> "" Then  
    MsgBox("xmlns:" + nsEnum.Current + "=" + nsmgr.LookupNamespace(nsEnum.Current))  
  End If  
Loop  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="GetNamespacesInScope">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,string&gt; GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GetNamespacesInScope(valuetype System.Xml.XmlNamespaceScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespacesInScope (scope As XmlNamespaceScope) As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GetNamespacesInScope(System::Xml::XmlNamespaceScope scope);" />
      <MemberSignature Language="F#" Value="abstract member GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;&#xA;override this.GetNamespacesInScope : System.Xml.XmlNamespaceScope -&gt; System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="xmlNamespaceManager.GetNamespacesInScope scope" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.GetNamespacesInScope(System.Xml.XmlNamespaceScope)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Xml.XmlNamespaceScope" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="scope">Ein Enumerationswert, der den Typ der Namespaceknoten angibt, die zurückgegeben werden sollen.</param>
        <summary>Ruft eine Auflistung von Namen sortiert nach Präfix ab, mit der die aktuell im Gültigkeitsbereich vorhanden Namespaces durchlaufen werden können.</summary>
        <returns>Eine Auflistung der derzeit im Gültigkeitsbereich vorhandenen Paare aus Namespace und Präfix.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Wörterbuch besteht aus einer Auflistung von Namespace Namen, die durch ein Präfix verschlüsselt sind. Sie kann verwendet werden, um die Namespaces im Gültigkeitsbereich aufzulisten. Das Wörterbuch ist eine getrennte Kopie der Namespace Liste. Sie bleibt unverändert, wenn sich die aktuelle Namespace Liste im Gültigkeitsbereich ändert.  
  
 In der folgenden Tabelle wird gezeigt, wie <xref:System.Xml.XmlNamespaceScope> Werte die von der <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A>-Methode zurückgegebenen Namespaces beeinflussen.  
  
|XmlNamespaceScope-Wert|xmlns:xml|xmlns:xmlns|xmlns=""|  
|-----------------------------|---------------|-----------------|---------------|  
|`All`|Ja|Nein|Nein|  
|`ExcludeXml`|Nein|Nein|Nein|  
|`Local`|Nein|Nein|Ja|  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="HasNamespace">
      <MemberSignature Language="C#" Value="public virtual bool HasNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasNamespace (prefix As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member HasNamespace : string -&gt; bool&#xA;override this.HasNamespace : string -&gt; bool" Usage="xmlNamespaceManager.HasNamespace prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Das Präfix des zu suchenden Namespaces.</param>
        <summary>Ruft einen Wert ab, der angibt, ob für das angegebene Präfix ein Namespace für den aktuellen abgelegten Gültigkeitsbereich definiert ist.</summary>
        <returns><see langword="true" />, wenn ein definierter Namespace vorhanden ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um zu ermitteln, ob ein leerer Standard Namespace definiert ist, legen Sie `prefix` auf String. Empty fest. Der Rückgabewert `true` gibt an, dass im aktuellen Gültigkeitsbereich ein Standard Namespace definiert ist. `false` gibt an, dass kein Standard Namespace definiert ist.  
  
> [!NOTE]
>  xmlns: x = "" ist gemäß der W3C-Empfehlung für [Namespaces](https://www.w3.org/TR/REC-xml-names/) unzulässig.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Standard Namespace, sofern vorhanden, angezeigt.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="LookupNamespace">
      <MemberSignature Language="C#" Value="public virtual string LookupNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupNamespace(System::String ^ prefix);" />
      <MemberSignature Language="F#" Value="abstract member LookupNamespace : string -&gt; string&#xA;override this.LookupNamespace : string -&gt; string" Usage="xmlNamespaceManager.LookupNamespace prefix" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupNamespace(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Das Präfix, dessen Namespace-URI aufgelöst werden soll. Um eine Übereinstimmung mit dem Standardnamespace zu suchen, übergeben Sie String.Empty.</param>
        <summary>Ruft den Namespace-URI für das angegebene Präfix ab.</summary>
        <returns>Der Namespace-URI für <paramref name="prefix" /> oder <see langword="null" />, wenn kein zugeordneter Namespace vorhanden ist. Die zurückgegebene Zeichenfolge ist atomisiert.  
  
Weitere Informationen zu atomisierten Zeichenfolgen finden Sie unter der <see cref="T:System.Xml.XmlNameTable" />-Klasse.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden dem <xref:System.Xml.XmlNamespaceManager>Präfix/Namespace-Paare hinzugefügt, und anschließend werden alle Paare in der Auflistung angezeigt.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="LookupPrefix">
      <MemberSignature Language="C#" Value="public virtual string LookupPrefix (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string LookupPrefix(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LookupPrefix (uri As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ LookupPrefix(System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member LookupPrefix : string -&gt; string&#xA;override this.LookupPrefix : string -&gt; string" Usage="xmlNamespaceManager.LookupPrefix uri" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Xml.IXmlNamespaceResolver.LookupPrefix(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Der für das Präfix aufzulösende Namespace.</param>
        <summary>Sucht das für den angegebenen Namespace-URI deklarierte Präfix.</summary>
        <returns>Das passende Präfix. Wenn es kein zugeordnetes Präfix gibt, gibt die Methode den Wert "String.Empty" zurück. Wenn ein Nullwert angegeben wird, dann wird <see langword="null" /> zurückgegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode sucht das zugeordnete Präfix durch das Durchlaufen des Stapels (d. h., es wird Global angezeigt). Die angegebene Zeichenfolge muss atomisiert werden, damit die Suche erfolgreich ist. Anders ausgedrückt: das angegebene Zeichen folgen Objekt muss in der namens Tabelle des Namespace-Managers (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>) vorhanden sein.  
  
 Die zurückgegebene Zeichenfolge wird ebenfalls atomisiert. Weitere Informationen zu atomisierten Zeichenfolgen finden Sie unter der <xref:System.Xml.XmlNameTable>-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A>-Methode beim Schreiben eines Attributs verwendet wird. Er verwendet die <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType>-Methode, um das-Attribut zu starten, sucht das Präfix für den `urn:samples` Namespace-URI und verwendet dieses Präfix dann beim Schreiben des `ISBN` Attributs in der <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=nameWithType>:  
  
```vb  
Dim prefix As String = nsMgr.LookupPrefix("urn:samples")  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples")  
  
```  
  
```csharp  
XmlNameTable nt = new XmlNameTable();  
XmlNamespaceManager nsMgr = new XmlNamespaceManager(nt);  
nsMgr.AddNamespace("bk","urn:samples");string prefix = writer nsMgr.LookupPrefix("urn:samples");  
writer.WriteStartAttribute(prefix, "ISBN", "urn:samples");  
```  
  
 Im folgenden Beispiel wird <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> verwendet, um das für ein Element definierte Präfix zu suchen.  
  
```vb  
writer.WriteStartElement("root", "book")  
writer.WriteStartElement("x", "node", "author")  
s = writer.LookupPrefix("author")  
CError.Compare(s, "x", "Error in nested element")  
writer.WriteEndElement()  
s = writer.LookupPrefix("book")  
CError.Compare(s, Nothing, "Error in root element")  
writer.WriteEndElement()  
  
```  
  
 **Ausgabe**  
  
```  
<root xmlns="book">  
  <x:node xmlns:x="author" />   
</root>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlNameTable NameTable { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlNamespaceManager.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NameTable As XmlNameTable" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.NameTable : System.Xml.XmlNameTable" Usage="System.Xml.XmlNamespaceManager.NameTable" />
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die diesem Objekt zugeordnete <see cref="T:System.Xml.XmlNameTable" /> ab.</summary>
        <value>Der von diesem Objekt verwendete <see cref="T:System.Xml.XmlNameTable" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Name-Tabelle wird verwendet, um Präfixe und Namespace-URIs zu suchen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlReader" />
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="PopScope">
      <MemberSignature Language="C#" Value="public virtual bool PopScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PopScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PopScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PopScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PopScope();" />
      <MemberSignature Language="F#" Value="abstract member PopScope : unit -&gt; bool&#xA;override this.PopScope : unit -&gt; bool" Usage="xmlNamespaceManager.PopScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Holt einen Namespacebereich vom Stapel.</summary>
        <returns><see langword="true" />, wenn noch Namespacebereiche im Stapel vorhanden sind, <see langword="false" />, wenn keine Namespaces mehr geholt werden können.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie diese Methode aufrufen, werden alle Namespaces, die <xref:System.Xml.XmlNamespaceManager> hinzugefügt wurden (durch Aufrufen von <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), seit dem letzten Aufruf von <xref:System.Xml.XmlNamespaceManager.PopScope%2A> entfernt.  
  
   
  
## Examples  
 Im folgenden Beispiel werden dem <xref:System.Xml.XmlNamespaceManager> Präfix/Namespace-Paare hinzugefügt und dann alle Paare in der Auflistung angezeigt.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PushScope" />
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="PushScope">
      <MemberSignature Language="C#" Value="public virtual void PushScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PushScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.PushScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PushScope ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PushScope();" />
      <MemberSignature Language="F#" Value="abstract member PushScope : unit -&gt; unit&#xA;override this.PushScope : unit -&gt; unit" Usage="xmlNamespaceManager.PushScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt einen Namespacebereich auf den Stapel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nach einem Aufruf dieser Methode gehören alle Namespaces, die <xref:System.Xml.XmlNamespaceManager> hinzugefügt werden (durch Aufrufen von <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), zum über drückten Namespace Bereich.  
  
   
  
## Examples  
 Im folgenden Beispiel werden dem <xref:System.Xml.XmlNamespaceManager> Präfix/Namespace-Paare hinzugefügt und dann alle Paare in der Auflistung angezeigt.  
  
 [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlNamespaceManager.PopScope" />
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveNamespace">
      <MemberSignature Language="C#" Value="public virtual void RemoveNamespace (string prefix, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNamespace(string prefix, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveNamespace (prefix As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveNamespace(System::String ^ prefix, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="abstract member RemoveNamespace : string * string -&gt; unit&#xA;override this.RemoveNamespace : string * string -&gt; unit" Usage="xmlNamespaceManager.RemoveNamespace (prefix, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">Das Präfix für den Namespace.</param>
        <param name="uri">Der für das angegebene Präfix zu entfernende Namespace. Der entfernte Namespace stammt aus dem aktuellen Namespacebereich. Namespaces außerhalb des aktuellen Gültigkeitsbereichs werden ignoriert.</param>
        <summary>Entfernt den angegebenen Namespace für das angegebene Präfix.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der Wert für <paramref name="prefix" /> oder <paramref name="uri" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
        <related type="Article" href="~/docs/standard/data/xml/index.md">XML-Dokumente und -Daten</related>
        <related type="Article" href="https://msdn.microsoft.com/library/682643fc-b848-4e42-8c0d-50deeaeb5f2a">Verwalten von Namespaces in einem XML-Dokument</related>
      </Docs>
    </Member>
  </Members>
</Type>
