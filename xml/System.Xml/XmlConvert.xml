<Type Name="XmlConvert" FullName="System.Xml.XmlConvert">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1ced9219e4e00182f8143b4929a78b29740ff31" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36436395" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlConvert" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlConvert extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlConvert" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlConvert" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlConvert" />
  <TypeSignature Language="F#" Value="type XmlConvert = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="603a6-101">Codiert und decodiert XML-Namen und stellt Methoden für das Konvertieren zwischen Typen der Common Language Runtime und XSD-Typen (XML Schema Definition) bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="603a6-101">Encodes and decodes XML names, and provides methods for converting between common language runtime types and XML Schema definition language (XSD) types.</span>
      </span>
      <span data-ttu-id="603a6-102">Bei der Konvertierung von Datentypen sind die zurückgegebenen Werte vom Gebietsschema unabhängig.</span>
      <span class="sxs-lookup">
        <span data-stu-id="603a6-102">When converting data types, the values returned are locale-independent.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-103">Die <xref:System.Xml.XmlConvert> Klasse ist funktionell gleichwertig mit der <xref:System.Convert> -Klasse, aber es unterstützt XML-Standards.</span><span class="sxs-lookup"><span data-stu-id="603a6-103">The <xref:System.Xml.XmlConvert> class is functionally equivalent to the <xref:System.Convert> class, but it supports XML standards.</span></span> <span data-ttu-id="603a6-104">Das Typsystem basiert auf dem XSD-Schematyp (XML Schema Definition Language), und die zurückgegebenen Werte sind stets vom Gebietsschema unabhängig.</span><span class="sxs-lookup"><span data-stu-id="603a6-104">The type system is based on the XML Schema definition language (XSD) schema type, and the values returned are always locale-independent.</span></span>  
  
## <a name="encoding-and-decoding"></a><span data-ttu-id="603a6-105">Codieren und Decodieren</span><span class="sxs-lookup"><span data-stu-id="603a6-105">Encoding and decoding</span></span>  
 <span data-ttu-id="603a6-106">Element-und Attributnamen oder ID-Werte sind auf einen Bereich von XML-Zeichen gemäß der W3C beschränkt [XML 1.0-Empfehlung](https://www.w3.org/TR/2006/REC-xml-20060816/).</span><span class="sxs-lookup"><span data-stu-id="603a6-106">Element and attribute names or ID values are limited to a range of XML characters according to the W3C [XML 1.0 recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/).</span></span> <span data-ttu-id="603a6-107">Wenn Namen ungültige Zeichen enthalten, können Sie die <xref:System.Xml.XmlConvert.EncodeName%2A> und <xref:System.Xml.XmlConvert.DecodeName%2A> Methoden in dieser Klasse, die sie in gültige XML-Namen übersetzt.</span><span class="sxs-lookup"><span data-stu-id="603a6-107">When names contain invalid characters, you can use the <xref:System.Xml.XmlConvert.EncodeName%2A> and <xref:System.Xml.XmlConvert.DecodeName%2A> methods in this class to translate them into valid XML names.</span></span>  
  
 <span data-ttu-id="603a6-108">Wenn Sie den Spaltenüberschrift "Order Detail" in einer Datenbank verwenden möchten, lässt die Datenbank z. B. den Abstand zwischen den beiden Wörtern an.</span><span class="sxs-lookup"><span data-stu-id="603a6-108">For example, if you want to use the column heading "Order Detail" in a database, the database allows the space between the two words.</span></span> <span data-ttu-id="603a6-109">Jedoch ist die Fläche zwischen "Order" und "Detail" in XML ein ungültiges XML-Zeichen interpretiert.</span><span class="sxs-lookup"><span data-stu-id="603a6-109">However, in XML, the space between "Order" and "Detail" is considered an invalid XML character.</span></span> <span data-ttu-id="603a6-110">Sie müssen ihn in ein Escapezeichen hexadezimale Codierung konvertieren und Decodieren es später erneut.</span><span class="sxs-lookup"><span data-stu-id="603a6-110">You have to convert it into an escaped hexadecimal encoding and decode it later.</span></span>  
  
 <span data-ttu-id="603a6-111">Sie können die <xref:System.Xml.XmlConvert.EncodeName%2A> Methode mit der <xref:System.Xml.XmlWriter> Klasse, um sicherzustellen, dass die Namen geschrieben wird, sind gültige XML-Namen.</span><span class="sxs-lookup"><span data-stu-id="603a6-111">You can use the <xref:System.Xml.XmlConvert.EncodeName%2A> method with the <xref:System.Xml.XmlWriter> class to ensure the names being written are valid XML names.</span></span> <span data-ttu-id="603a6-112">Der folgende C#-Code konvertiert den Namen "Order Detail" in einen gültigen XML-Namen und schreibt das Element `<Order_0x0020_Detail>My order</Order_0x0020_Detail>`.</span><span class="sxs-lookup"><span data-stu-id="603a6-112">The following C# code converts the name "Order Detail" into a valid XML name and writes the element `<Order_0x0020_Detail>My order</Order_0x0020_Detail>`.</span></span>  
  
```csharp  
writer.WriteElementString(XmlConvert.EncodeName("Order Detail"),"My order");  
  
```  
  
 <span data-ttu-id="603a6-113">Die folgenden <xref:System.Xml.XmlConvert> Methoden führen, codieren und decodieren.</span><span class="sxs-lookup"><span data-stu-id="603a6-113">The following <xref:System.Xml.XmlConvert> methods perform encoding and decoding.</span></span>  
  
|<span data-ttu-id="603a6-114">Methode</span><span class="sxs-lookup"><span data-stu-id="603a6-114">Method</span></span>|<span data-ttu-id="603a6-115">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="603a6-115">Description</span></span>|  
|------------|-----------------|  
|<xref:System.Xml.XmlConvert.EncodeName%2A>|<span data-ttu-id="603a6-116">Akzeptiert einen Namen und gibt den codierten Namen zusammen mit einem ungültigen Zeichen, das durch eine Escapezeichenfolge ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="603a6-116">Takes a name and returns the encoded name along with any invalid character that is replaced by an escape string.</span></span> <span data-ttu-id="603a6-117">Diese Methode ermöglicht das Doppelpunkte in einer beliebigen Position, d. h., die der Namen möglicherweise dennoch gemäß der W3C ungültige werden [Namespaces in XML 1.0-Empfehlung](http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="603a6-117">This method allows colons in any position, which means that the name may still be invalid according to the W3C [Namespaces in XML 1.0 recommendation](http://www.w3.org/TR/REC-xml-names).</span></span>|  
|<xref:System.Xml.XmlConvert.EncodeNmToken%2A>|<span data-ttu-id="603a6-118">Akzeptiert einen Namen ein, und gibt den codierten Namen zurück.</span><span class="sxs-lookup"><span data-stu-id="603a6-118">Takes a name and returns the encoded name.</span></span>|  
|<xref:System.Xml.XmlConvert.EncodeLocalName%2A>|<span data-ttu-id="603a6-119">Identisch mit <xref:System.Xml.XmlConvert.EncodeName%2A> mit dem Unterschied, dass es auch der Doppelpunkt codiert, um zu garantieren, dass der Name als verwendet werden kann die `LocalName` Teil von einem Namespace qualifizierten Namen.</span><span class="sxs-lookup"><span data-stu-id="603a6-119">Same as <xref:System.Xml.XmlConvert.EncodeName%2A> except that it also encodes the colon character, guaranteeing that the name can be used as the `LocalName` part of a namespace-qualified name.</span></span>|  
|<xref:System.Xml.XmlConvert.DecodeName%2A>|<span data-ttu-id="603a6-120">Kehrt die Transformation für alle Codierungsmethoden um.</span><span class="sxs-lookup"><span data-stu-id="603a6-120">Reverses the transformation for all the encoding methods.</span></span>|  
  
## <a name="name-validation"></a><span data-ttu-id="603a6-121">Überprüfung des Namens</span><span class="sxs-lookup"><span data-stu-id="603a6-121">Name validation</span></span>  
 <span data-ttu-id="603a6-122">Die <xref:System.Xml.XmlConvert> Klasse enthält zwei Methoden, die die Zeichen in einem Element oder Attribut Namen überprüfen, und stellen Sie sicher, dass der Name der Regeln festlegen, indem die W3C entspricht [XML 1.0-Empfehlung](https://www.w3.org/TR/2006/REC-xml-20060816/):</span><span class="sxs-lookup"><span data-stu-id="603a6-122">The <xref:System.Xml.XmlConvert> class contains two methods that check the characters in an element or attribute name and verify that the name conforms to the rules set by the W3C [XML 1.0 recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/):</span></span>  
  
-   <span data-ttu-id="603a6-123"><xref:System.Xml.XmlConvert.VerifyName%2A> überprüft die Zeichen, und stellt sicher, dass der Name gültig ist.</span><span class="sxs-lookup"><span data-stu-id="603a6-123"><xref:System.Xml.XmlConvert.VerifyName%2A> checks the characters and verifies that the name is valid.</span></span> <span data-ttu-id="603a6-124">Die Methode gibt den Namen an, ob es gültig ist, und löst eine Ausnahme aus, wenn dies nicht der Fall.</span><span class="sxs-lookup"><span data-stu-id="603a6-124">The method returns the name if it's valid, and throws an exception if it isn't.</span></span>  
  
-   <span data-ttu-id="603a6-125"><xref:System.Xml.XmlConvert.VerifyNCName%2A> führt die gleiche Überprüfung jedoch nicht qualifizierte Namen akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="603a6-125"><xref:System.Xml.XmlConvert.VerifyNCName%2A> performs the same validation, but accepts non-qualified names.</span></span>  
  
 <span data-ttu-id="603a6-126">Die <xref:System.Xml.XmlConvert> enthält zusätzliche Methoden, die Token, Leerzeichen, öffentliche-IDs und andere Zeichenfolgen zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="603a6-126">The <xref:System.Xml.XmlConvert> contains additional methods that validate tokens, white-space characters, public IDs, and other strings.</span></span>  
  
## <a name="data-type-conversion"></a><span data-ttu-id="603a6-127">Datentypkonvertierung</span><span class="sxs-lookup"><span data-stu-id="603a6-127">Data type conversion</span></span>  
 <span data-ttu-id="603a6-128"><xref:System.Xml.XmlConvert> Außerdem bietet Methoden, die Ihnen ermöglichen, Daten aus einer Zeichenfolge in einen stark typisierten Datentyp zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="603a6-128"><xref:System.Xml.XmlConvert> also provides methods that enable you to convert data from a string to a strongly typed data type.</span></span> <span data-ttu-id="603a6-129">Z. B. die <xref:System.Xml.XmlConvert.ToDateTime%2A> -Methode konvertiert eine Zeichenfolge in seine <xref:System.DateTime> entspricht.</span><span class="sxs-lookup"><span data-stu-id="603a6-129">For example, the <xref:System.Xml.XmlConvert.ToDateTime%2A> method converts a string to its <xref:System.DateTime> equivalent.</span></span> <span data-ttu-id="603a6-130">Dies ist hilfreich, da die meisten Methoden in der <xref:System.Xml.XmlReader> -Klasse Daten als Zeichenfolge zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="603a6-130">This is useful because most methods in the <xref:System.Xml.XmlReader> class return data as a string.</span></span> <span data-ttu-id="603a6-131">Nachdem die Daten gelesen werden, können sie den richtigen Datentyp konvertiert werden, bevor Sie verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="603a6-131">After the data is read, it can be converted to the proper data type before being used.</span></span> <span data-ttu-id="603a6-132">Die <xref:System.Xml.XmlConvert.ToString%2A> Überladungen ergänzenden Vorgang bereitstellen, indem stark typisierte Daten in Zeichenfolgen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="603a6-132">The <xref:System.Xml.XmlConvert.ToString%2A> overloads provide the complementary operation by converting strongly typed data to strings.</span></span> <span data-ttu-id="603a6-133">Dies ist beispielsweise nützlich, wenn Sie die Daten Textfelder auf einer Webseite hinzufügen möchten.</span><span class="sxs-lookup"><span data-stu-id="603a6-133">For example, this is useful when you want to add the data to text boxes on a webpage.</span></span> <span data-ttu-id="603a6-134">Gebietsschemaeinstellungen werden nicht während der Datenkonvertierung berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="603a6-134">Locale settings are not taken into account during data conversion.</span></span> <span data-ttu-id="603a6-135">Die Datentypen basieren auf den XML-Schema (XSD) Datentypen.</span><span class="sxs-lookup"><span data-stu-id="603a6-135">The data types are based on the XML Schema (XSD) data types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlConvert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlConvert();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="603a6-136">Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlConvert" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-136">Initializes a new instance of the <see cref="T:System.Xml.XmlConvert" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeName">
      <MemberSignature Language="C#" Value="public static string DecodeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DecodeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.DecodeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DecodeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member DecodeName : string -&gt; string" Usage="System.Xml.XmlConvert.DecodeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="603a6-137">Der zu transformierende Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-137">The name to be transformed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-138">Decodiert einen Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-138">Decodes a name.</span>
          </span>
          <span data-ttu-id="603a6-139">Diese Methode ist die Umkehrung der <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" />-Methode und der <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />-Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-139">This method does the reverse of the <see cref="M:System.Xml.XmlConvert.EncodeName(System.String)" /> and <see cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" /> methods.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-140">Der decodierte Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-140">The decoded name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-141">Die Namen decodiert werden, mithilfe der folgenden Regeln:</span><span class="sxs-lookup"><span data-stu-id="603a6-141">The names are decoded using the following rules:</span></span>  
  
-   <span data-ttu-id="603a6-142">Namen werden von links nach rechts decodiert.</span><span class="sxs-lookup"><span data-stu-id="603a6-142">Names are decoded from left to right.</span></span>  
  
-   <span data-ttu-id="603a6-143">Eine beliebige Sequenz _x `HHHH_` (wobei HHHH steht für eine gültige, vier Ziffern hexadezimalen UCS-2-Code) nicht decodierte wird transformiert in das entsprechende Unicode-2.1 (Unicode-3.0, wenn von der Anwendung unterstützt) Zeichen.</span><span class="sxs-lookup"><span data-stu-id="603a6-143">Any sequence _x `HHHH_` (where HHHH stands for a valid, four digit hexadecimal UCS-2 code) that has not been decoded is transformed into the corresponding Unicode 2.1 (Unicode 3.0 if supported by the application) character.</span></span>  
  
-   <span data-ttu-id="603a6-144">Kurzformen werden erkannt.</span><span class="sxs-lookup"><span data-stu-id="603a6-144">No shortforms are recognized.</span></span> <span data-ttu-id="603a6-145">Sie werden ohne Übersetzung übergeben.</span><span class="sxs-lookup"><span data-stu-id="603a6-145">They are passed on without translation.</span></span> <span data-ttu-id="603a6-146">Beispielsweise _x20\_ oder __ nicht decodiert werden.</span><span class="sxs-lookup"><span data-stu-id="603a6-146">For example, _x20\_ or __ are not decoded.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="603a6-147">Die eigentliche Codierung des Zeichens ist anwendungsspezifisch.</span><span class="sxs-lookup"><span data-stu-id="603a6-147">The actual encoding of the character is application-specific.</span></span> <span data-ttu-id="603a6-148">So wird z. B. Order_x0020_Details Order Details.</span><span class="sxs-lookup"><span data-stu-id="603a6-148">For example, Order_x0020_Details becomes Order Details.</span></span> <span data-ttu-id="603a6-149">Sogar Escapezeichen, die in XML-Namen ungültig sind, werden erkannt und decodiert werden.</span><span class="sxs-lookup"><span data-stu-id="603a6-149">Even escaped characters that are invalid in XML names will be recognized and decoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-150">Im folgenden Beispiel wird codiert und decodiert Namen.</span><span class="sxs-lookup"><span data-stu-id="603a6-150">The following example encodes and decodes names.</span></span>  
  
 [!code-cpp[XmlConvert.EncodeName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.EncodeName/CPP/convert.cpp#1)]
 [!code-csharp[XmlConvert.EncodeName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.EncodeName/CS/convert.cs#1)]
 [!code-vb[XmlConvert.EncodeName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.EncodeName/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodeLocalName">
      <MemberSignature Language="C#" Value="public static string EncodeLocalName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EncodeLocalName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeLocalName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EncodeLocalName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member EncodeLocalName : string -&gt; string" Usage="System.Xml.XmlConvert.EncodeLocalName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="603a6-151">Der zu codierende Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-151">The name to be encoded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-152">Konvertiert den Namen in einen gültigen lokalen XML-Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-152">Converts the name to a valid XML local name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-153">Der codierte Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-153">The encoded name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-154">Diese Methode ähnelt der <xref:System.Xml.XmlConvert.EncodeName%2A> Methode, außer dass sie codiert das Doppelpunktzeichen, dadurch wird sichergestellt, dass der Name als den lokalen namensanteil des einem Namespace qualifizierten Namen verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="603a6-154">This method is similar to the <xref:System.Xml.XmlConvert.EncodeName%2A> method except that it encodes the colon character, which guarantees that the name can be used as the local name part of a namespace qualified name.</span></span>  
  
 <span data-ttu-id="603a6-155">Angenommen, Sie haben einem ungültigen an diese Methode übergeben eine: b, es gibt a_x003a_b, die einen gültigen lokalen Namen.</span><span class="sxs-lookup"><span data-stu-id="603a6-155">For example, if you passed this method the invalid name a:b, it returns a_x003a_b, which is a valid local name.</span></span>  
  
 <span data-ttu-id="603a6-156">Wenn `name` ist `null` oder `String.Empty` erhalten Sie auf den gleichen Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="603a6-156">If `name` is `null` or `String.Empty` then you get the same value returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-157">Im folgenden Beispiel wird codiert und decodiert Namen.</span><span class="sxs-lookup"><span data-stu-id="603a6-157">The following example encodes and decodes names.</span></span>  
  
 [!code-cpp[XmlConvert.EncodeName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.EncodeName/CPP/convert.cpp#1)]
 [!code-csharp[XmlConvert.EncodeName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.EncodeName/CS/convert.cs#1)]
 [!code-vb[XmlConvert.EncodeName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.EncodeName/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlConvert.EncodeName(System.String)" />
        <altmember cref="M:System.Xml.XmlConvert.DecodeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EncodeName">
      <MemberSignature Language="C#" Value="public static string EncodeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EncodeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.EncodeName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EncodeName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member EncodeName : string -&gt; string" Usage="System.Xml.XmlConvert.EncodeName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="603a6-158">Ein zu übersetzender Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-158">A name to be translated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-159">Konvertiert den Namen in einen gültigen XML-Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-159">Converts the name to a valid XML name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-160">Gibt den Namen zurück, wobei ungültige Zeichen durch eine Escapezeichenfolge ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-160">Returns the name with any invalid characters replaced by an escape string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-161">Diese Methode übersetzt die ungültige Zeichen wie Leerzeichen oder Katakana halber Breite, die XML-Namen ohne die Unterstützung oder das Vorhandensein von Schemas zugeordnet werden müssen.</span><span class="sxs-lookup"><span data-stu-id="603a6-161">This method translates invalid characters, such as spaces or half-width Katakana, that need to be mapped to XML names without the support or presence of schemas.</span></span> <span data-ttu-id="603a6-162">Die ungültigen Zeichen werden in geschützte numerische Entitäten übersetzt.</span><span class="sxs-lookup"><span data-stu-id="603a6-162">The invalid characters are translated into escaped numeric entity encodings.</span></span>  
  
 <span data-ttu-id="603a6-163">Das Escapezeichen ist "_".</span><span class="sxs-lookup"><span data-stu-id="603a6-163">The escape character is "_".</span></span> <span data-ttu-id="603a6-164">Alle XML-Zeichen, die nicht entspricht der [XML 1.0-Spezifikation (vierte Ausgabe) Empfehlung](https://www.w3.org/TR/2006/REC-xml-20060816/) wird als _xHHHH mit Escapezeichen versehen\_.</span><span class="sxs-lookup"><span data-stu-id="603a6-164">Any XML name character that does not conform to the [XML 1.0 spec (fourth edition) recommendation](https://www.w3.org/TR/2006/REC-xml-20060816/) is escaped as _xHHHH\_.</span></span> <span data-ttu-id="603a6-165">Die Zeichenfolge HHHH steht für den vierstelligen hexadezimalen UCS-2-Code für das Zeichen im höchstwertigen Bit zuerst aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="603a6-165">The HHHH string stands for the four-digit hexadecimal UCS-2 code for the character in most significant bit first order.</span></span> <span data-ttu-id="603a6-166">Der Name Order Details wird beispielsweise als Order_x0020_Details codiert.</span><span class="sxs-lookup"><span data-stu-id="603a6-166">For example, the name Order Details is encoded as Order_x0020_Details.</span></span>  
  
 <span data-ttu-id="603a6-167">Der Unterstrich muss nicht geschützt werden, es sei denn, er wird von einer Zeichensequenz gefolgt, die beim Decodieren des Namens zusammen mit dem Unterstrich als Escapezeichenfolge fehlinterpretiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="603a6-167">The underscore character does not need to be escaped unless it is followed by a character sequence that together with the underscore can be misinterpreted as an escape sequence when decoding the name.</span></span> <span data-ttu-id="603a6-168">Order_Details ist beispielsweise nicht codiert, Order_x0020_ ist jedoch als Order_x005f_x0020_ codiert.</span><span class="sxs-lookup"><span data-stu-id="603a6-168">For example, Order_Details is not encoded, but Order_x0020_ is encoded as Order_x005f_x0020_.</span></span> <span data-ttu-id="603a6-169">Kurzformen sind zulässig.</span><span class="sxs-lookup"><span data-stu-id="603a6-169">No shortforms are allowed.</span></span> <span data-ttu-id="603a6-170">Z. B. die Formulare _x20\_ und __ nicht generiert werden.</span><span class="sxs-lookup"><span data-stu-id="603a6-170">For example, the forms _x20\_ and __ are not generated.</span></span>  
  
 <span data-ttu-id="603a6-171">Diese Methode wird sichergestellt, dass der Name entsprechend der XML-Spezifikation gültig ist.</span><span class="sxs-lookup"><span data-stu-id="603a6-171">This method guarantees the name is valid according to the XML specification.</span></span> <span data-ttu-id="603a6-172">Lässt Doppelpunkte in einer beliebigen Position, dies bedeutet, dass der Name kann dennoch ungültige gemäß werden der [Spezifikation für W3C-Namespace](http://www.w3.org/TR/REC-xml-names).</span><span class="sxs-lookup"><span data-stu-id="603a6-172">It allows colons in any position, which means the name may still be invalid according to the [W3C Namespace Specification](http://www.w3.org/TR/REC-xml-names).</span></span> <span data-ttu-id="603a6-173">Um sicherzustellen, dass ein gültiger Namespace qualifizierten Namen <xref:System.Xml.XmlConvert.EncodeLocalName%2A> für das Präfix und den lokalen Teilen Namen und verknüpfen das Ergebnis mit einem Doppelpunkt.</span><span class="sxs-lookup"><span data-stu-id="603a6-173">To guarantee it is a valid namespace qualified name use <xref:System.Xml.XmlConvert.EncodeLocalName%2A> for the prefix and local name parts and join the result with a colon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-174">Im folgenden Beispiel wird codiert und decodiert Namen.</span><span class="sxs-lookup"><span data-stu-id="603a6-174">The following example encodes and decodes names.</span></span>  
  
 [!code-cpp[XmlConvert.EncodeName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.EncodeName/CPP/convert.cpp#1)]
 [!code-csharp[XmlConvert.EncodeName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.EncodeName/CS/convert.cs#1)]
 [!code-vb[XmlConvert.EncodeName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.EncodeName/VB/convert.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlConvert.EncodeLocalName(System.String)" />
        <altmember cref="M:System.Xml.XmlConvert.DecodeName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EncodeNmToken">
      <MemberSignature Language="C#" Value="public static string EncodeNmToken (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EncodeNmToken(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.EncodeNmToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EncodeNmToken (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EncodeNmToken(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member EncodeNmToken : string -&gt; string" Usage="System.Xml.XmlConvert.EncodeNmToken name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="603a6-175">Der zu codierende Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-175">The name to be encoded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-176">Überprüft, ob der Name entsprechend der XML-Spezifikation gültig ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-176">Verifies the name is valid according to the XML specification.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-177">Der codierte Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-177">The encoded name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-178">Diese Methode wird sichergestellt, dass der Name entsprechend der XML-Spezifikation gültig ist.</span><span class="sxs-lookup"><span data-stu-id="603a6-178">This method guarantees that the name is valid according to the XML specification.</span></span> <span data-ttu-id="603a6-179">Wenn Sie diese Methode den ungültigen Namen 70 + übergeben, gibt es z. B. 70_x002b_ ein gültiger XML-Name ist.</span><span class="sxs-lookup"><span data-stu-id="603a6-179">For example, if you passed this method the invalid name 70+, it returns 70_x002b_ which is a valid XML name.</span></span>  
  
 <span data-ttu-id="603a6-180">Wenn `name` ist `null` oder "String.Empty" und Sie erhalten den gleichen Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="603a6-180">If `name` is `null` or String.Empty then you get the same value returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNCNameChar">
      <MemberSignature Language="C#" Value="public static bool IsNCNameChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNCNameChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsNCNameChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNCNameChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNCNameChar(char ch);" />
      <MemberSignature Language="F#" Value="static member IsNCNameChar : char -&gt; bool" Usage="System.Xml.XmlConvert.IsNCNameChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="603a6-181">Das Zeichen, das als Nicht-Doppelpunkt-Zeichen überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-181">The character to verify as a non-colon character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-182">Überprüft, ob das übergebene Zeichen ein gültiger Nicht-Doppelpunkt-Zeichentyp ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-182">Checks whether the passed-in character is a valid non-colon character type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-183">Gibt <see langword="true" /> zurück, wenn ein Zeichen ein gültiger Nicht-Doppelpunkt-Zeichentyp ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-183">Returns <see langword="true" /> if the character is a valid non-colon character type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublicIdChar">
      <MemberSignature Language="C#" Value="public static bool IsPublicIdChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsPublicIdChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsPublicIdChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPublicIdChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPublicIdChar(char ch);" />
      <MemberSignature Language="F#" Value="static member IsPublicIdChar : char -&gt; bool" Usage="System.Xml.XmlConvert.IsPublicIdChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="603a6-184">Das zu überprüfende <see cref="T:System.Char" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-184">
              <see cref="T:System.Char" /> object to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-185">Gibt die übergebene Zeicheninstanz zurück, wenn das Zeichen im Argument ein gültiges Zeichen für eine öffentliche ID ist, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-185">Returns the passed-in character instance if the character in the argument is a valid public id character, otherwise <see langword="null" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-186">Gibt das übergebene Zeichen zurück, wenn das Zeichen ein gültiges Zeichen für eine öffentliche ID ist, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-186">Returns the passed-in character if the character is a valid public id character, otherwise <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStartNCNameChar">
      <MemberSignature Language="C#" Value="public static bool IsStartNCNameChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsStartNCNameChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsStartNCNameChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsStartNCNameChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsStartNCNameChar(char ch);" />
      <MemberSignature Language="F#" Value="static member IsStartNCNameChar : char -&gt; bool" Usage="System.Xml.XmlConvert.IsStartNCNameChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="603a6-187">Das Zeichen, das validiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-187">The character to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-188">Überprüft, ob das übergebene Zeichen ein gültiger Startnamenszeichen-Typ ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-188">Checks if the passed-in character is a valid Start Name Character type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-189">
            <see langword="true" />, wenn das Zeichen ein gültiger Startnamenszeichen-Typ ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-189">
              <see langword="true" /> if the character is a valid Start Name Character type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-190">Ausführliche Informationen zu zulässigen Zeichen finden Sie unter der [XML 1.0-Spezifikation (vierte Ausgabe)](http://go.microsoft.com/fwlink/?LinkId=147985) Empfehlung.</span><span class="sxs-lookup"><span data-stu-id="603a6-190">For details about allowed characters, see the [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkId=147985) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceChar">
      <MemberSignature Language="C#" Value="public static bool IsWhitespaceChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWhitespaceChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsWhitespaceChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhitespaceChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhitespaceChar(char ch);" />
      <MemberSignature Language="F#" Value="static member IsWhitespaceChar : char -&gt; bool" Usage="System.Xml.XmlConvert.IsWhitespaceChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="603a6-191">Das Zeichen, das validiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-191">The character to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-192">Überprüft, ob das übergebene Zeichen ein gültiges XML-Leerraumzeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-192">Checks if the passed-in character is a valid XML whitespace character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-193">
            <see langword="true" />, wenn das übergebene Zeichen ein gültiges XML-Leerraumzeichen ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-193">
              <see langword="true" /> if the passed in character is a valid XML whitespace character; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-194">Ausführliche Informationen zu zulässigen Zeichen finden Sie unter der [XML 1.0-Spezifikation (vierte Ausgabe)](http://go.microsoft.com/fwlink/?LinkID=147985) Empfehlung.</span><span class="sxs-lookup"><span data-stu-id="603a6-194">For details about allowed characters, see the [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlChar">
      <MemberSignature Language="C#" Value="public static bool IsXmlChar (char ch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsXmlChar(char ch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsXmlChar(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlChar (ch As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlChar(char ch);" />
      <MemberSignature Language="F#" Value="static member IsXmlChar : char -&gt; bool" Usage="System.Xml.XmlConvert.IsXmlChar ch" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="ch">
          <span data-ttu-id="603a6-195">Das Zeichen, das validiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-195">The character to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-196">Überprüft, ob das übergebene Zeichen ein gültiges XML-Zeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-196">Checks if the passed-in character is a valid XML character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-197">
            <see langword="true" />, wenn das übergebene Zeichen ein gültiges XML-Zeichen ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-197">
              <see langword="true" /> if the passed in character is a valid XML character; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-198">Ausführliche Informationen zu zulässigen Zeichen finden Sie unter der [XML 1.0-Spezifikation (vierte Ausgabe)](http://go.microsoft.com/fwlink/?LinkId=147985) Empfehlung.</span><span class="sxs-lookup"><span data-stu-id="603a6-198">For details about allowed characters, see the [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkId=147985) recommendation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlSurrogatePair">
      <MemberSignature Language="C#" Value="public static bool IsXmlSurrogatePair (char lowChar, char highChar);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsXmlSurrogatePair(char lowChar, char highChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.IsXmlSurrogatePair(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlSurrogatePair (lowChar As Char, highChar As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlSurrogatePair(char lowChar, char highChar);" />
      <MemberSignature Language="F#" Value="static member IsXmlSurrogatePair : char * char -&gt; bool" Usage="System.Xml.XmlConvert.IsXmlSurrogatePair (lowChar, highChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lowChar" Type="System.Char" />
        <Parameter Name="highChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="lowChar">
          <span data-ttu-id="603a6-199">Das zu validierende Ersatzzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-199">The surrogate character to validate.</span>
          </span>
        </param>
        <param name="highChar">
          <span data-ttu-id="603a6-200">Das zu validierende Ersatzzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-200">The surrogate character to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-201">Überprüft, ob das übergebene Ersatzzeichenpaar ein gültiges XML-Zeichen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-201">Checks if the passed-in surrogate pair of characters is a valid XML character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-202">
            <see langword="true" />, wenn das übergebene Ersatzzeichenpaar ein gültiges XML-Zeichen ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-202">
              <see langword="true" /> if the passed in surrogate pair of characters is a valid XML character; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBoolean">
      <MemberSignature Language="C#" Value="public static bool ToBoolean (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ToBoolean(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToBoolean(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToBoolean (s As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ToBoolean(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToBoolean : string -&gt; bool" Usage="System.Xml.XmlConvert.ToBoolean s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-203">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-203">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-204">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Boolean" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-204">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Boolean" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-205">Ein <see langword="Boolean" />-Wert, d. h. <see langword="true" /> oder <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-205">A <see langword="Boolean" /> value, that is, <see langword="true" /> or <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-206">Gültige Zeichenketten sind "1" oder "true" für `true` und "0" oder "falsch" für `false`.</span><span class="sxs-lookup"><span data-stu-id="603a6-206">Valid strings are "1" or "true" for `true` and "0" or "false" for `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-207">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-207">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-208">
            <paramref name="s" /> stellt keinen <see langword="Boolean" />-Wert dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-208">
              <paramref name="s" /> does not represent a <see langword="Boolean" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToByte">
      <MemberSignature Language="C#" Value="public static byte ToByte (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8 ToByte(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToByte (s As String) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Byte ToByte(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToByte : string -&gt; byte" Usage="System.Xml.XmlConvert.ToByte s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-209">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-209">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-210">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Byte" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-210">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Byte" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-211">Ein <see langword="Byte" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-211">A <see langword="Byte" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-212">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-212">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-213">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-213">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-214">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Byte.MinValue" /> oder größer als <see cref="F:System.Byte.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-214">
              <paramref name="s" /> represents a number less than <see cref="F:System.Byte.MinValue" /> or greater than <see cref="F:System.Byte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToChar">
      <MemberSignature Language="C#" Value="public static char ToChar (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char ToChar(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToChar(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToChar (s As String) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static char ToChar(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToChar : string -&gt; char" Usage="System.Xml.XmlConvert.ToChar s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-215">Die Zeichenfolge, die ein einzelnes zu konvertierendes Zeichen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-215">The string containing a single character to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-216">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Char" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-216">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Char" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-217">Ein <see langword="Char" />, das für das einzelne Zeichen steht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-217">A <see langword="Char" /> representing the single character.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-218">Der Wert des <paramref name="s" />-Parameters ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-218">The value of the <paramref name="s" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-219">Der <paramref name="s" />-Parameter enthält mehr als ein Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-219">The <paramref name="s" /> parameter contains more than one character.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTime">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="603a6-220">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.DateTime" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-220">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string -&gt; DateTime" Usage="System.Xml.XmlConvert.ToDateTime s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use XmlConvert.ToDateTime() that takes in XmlDateTimeSerializationMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-221">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-221">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-222">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.DateTime" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-222">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-223">Ein <see langword="DateTime" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-223">A <see langword="DateTime" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="603a6-224">Die <xref:System.Xml.XmlConvert.ToDateTime%28System.String%29?displayProperty=nameWithType> Methode ist veraltet in .NET Framework, Version 2.0, und wurde ersetzt durch die <xref:System.Xml.XmlConvert.ToDateTime%28System.String%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="603a6-224">The <xref:System.Xml.XmlConvert.ToDateTime%28System.String%29?displayProperty=nameWithType> method is obsolete in the 2.0 version of the .NET Framework and has been replaced by the <xref:System.Xml.XmlConvert.ToDateTime%28System.String%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-225">Im folgenden Beispiel wird <xref:System.Xml.XmlConvert.ToDouble%2A> und `ToDateTime` , stark typisierte Daten zu lesen.</span><span class="sxs-lookup"><span data-stu-id="603a6-225">The following example uses <xref:System.Xml.XmlConvert.ToDouble%2A> and `ToDateTime` to read strongly typed data.</span></span>  
  
 [!code-cpp[XmlConvert.ToDouble#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.ToDouble/CPP/readData.cpp#1)]
 [!code-csharp[XmlConvert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.ToDouble/CS/readdata.cs#1)]
 [!code-vb[XmlConvert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.ToDouble/VB/readdata.vb#1)]  
  
 <span data-ttu-id="603a6-226">Im Beispiel wird die Datei `orderData.xml`als Eingabe.</span><span class="sxs-lookup"><span data-stu-id="603a6-226">The example uses the file, `orderData.xml`, as input.</span></span>  
  
 [!code-xml[XmlConvert.ToDouble#2](~/samples/snippets/xml/VS_Snippets_Data/XmlConvert.ToDouble/XML/orderdata.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-227">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-227">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-228">
            <paramref name="s" /> ist eine leere Zeichenfolge oder hat nicht das richtige Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-228">
              <paramref name="s" /> is an empty string or is not in the correct format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String, format As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string * string -&gt; DateTime" Usage="System.Xml.XmlConvert.ToDateTime (s, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-229">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-229">The string to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="603a6-230">Die auf das konvertierte <see langword="DateTime" /> anzuwendende Formatstruktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-230">The format structure to apply to the converted <see langword="DateTime" />.</span>
          </span>
          <span data-ttu-id="603a6-231">Zu den gültigen Format zählt „yyyy-MM-ddTHH:mm:sszzzzzz“ und dessen Teilmengen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-231">Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</span>
          </span>
          <span data-ttu-id="603a6-232">Es wird validiert, ob die Zeichenfolge dieses Format aufweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-232">The string is validated against this format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-233">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.DateTime" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-233">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-234">Ein <see langword="DateTime" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-234">A <see langword="DateTime" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-235">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-235">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-236">
            <paramref name="s" /> oder <paramref name="format" /> ist „String.Empty“.  Oder:  <paramref name="s" /> enthält kein Datum und keine Uhrzeit, die <paramref name="format" /> entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-236">
              <paramref name="s" /> or <paramref name="format" /> is String.Empty  -or-  <paramref name="s" /> does not contain a date and time that corresponds to <paramref name="format" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s, string[] formats);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s, string[] formats) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String, formats As String()) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string * string[] -&gt; DateTime" Usage="System.Xml.XmlConvert.ToDateTime (s, formats)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-237">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-237">The string to convert.</span>
          </span>
        </param>
        <param name="formats">
          <span data-ttu-id="603a6-238">Ein Array, das die Formatstrukturen enthält, die auf das konvertierte <see langword="DateTime" /> angewendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-238">An array containing the format structures to apply to the converted <see langword="DateTime" />.</span>
          </span>
          <span data-ttu-id="603a6-239">Zu den gültigen Format zählt „yyyy-MM-ddTHH:mm:sszzzzzz“ und dessen Teilmengen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-239">Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-240">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.DateTime" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-240">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-241">Ein <see langword="DateTime" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-241">A <see langword="DateTime" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-242">Diese Methode ermöglicht mehrere Formate für die Zeichenfolge, die überprüft werden.</span><span class="sxs-lookup"><span data-stu-id="603a6-242">This method allows multiple formats for the string to be validated against.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-243">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-243">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-244">
            <paramref name="s" /> oder ein Element von <paramref name="formats" /> sind „String.Empty“.  Oder:  <paramref name="s" /> enthält kein Datum und keine Uhrzeit, die einem der Elemente von <paramref name="formats" /> entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-244">
              <paramref name="s" /> or an element of <paramref name="formats" /> is String.Empty  -or-  <paramref name="s" /> does not contain a date and time that corresponds to any of the elements of <paramref name="formats" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTime">
      <MemberSignature Language="C#" Value="public static DateTime ToDateTime (string s, System.Xml.XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTime ToDateTime(string s, valuetype System.Xml.XmlDateTimeSerializationMode dateTimeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTime(System.String,System.Xml.XmlDateTimeSerializationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTime (s As String, dateTimeOption As XmlDateTimeSerializationMode) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTime ToDateTime(System::String ^ s, System::Xml::XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberSignature Language="F#" Value="static member ToDateTime : string * System.Xml.XmlDateTimeSerializationMode -&gt; DateTime" Usage="System.Xml.XmlConvert.ToDateTime (s, dateTimeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="dateTimeOption" Type="System.Xml.XmlDateTimeSerializationMode" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-245">Der zu konvertierende <see cref="T:System.String" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-245">The <see cref="T:System.String" /> value to convert.</span>
          </span>
        </param>
        <param name="dateTimeOption">
          <span data-ttu-id="603a6-246">Einer der <see cref="T:System.Xml.XmlDateTimeSerializationMode" />-Werte, die angeben, ob das Datum in die Ortszeit konvertiert oder als UTC-Zeit (Coordinated Universal Time) beibehalten werden soll, falls es sich um ein UTC-Datum handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-246">One of the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> values that specify whether the date should be converted to local time or preserved as Coordinated Universal Time (UTC), if it is a UTC date.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-247">Konvertiert den <see cref="T:System.String" /> mithilfe von <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> in eine <see cref="T:System.DateTime" />-Struktur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-247">Converts the <see cref="T:System.String" /> to a <see cref="T:System.DateTime" /> using the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> specified</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-248">Ein <see cref="T:System.DateTime" />-Äquivalent von <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-248">A <see cref="T:System.DateTime" /> equivalent of the <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="603a6-249">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-249">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-250">Der <paramref name="dateTimeOption" />-Wert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-250">The <paramref name="dateTimeOption" /> value is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-251">
            <paramref name="s" /> ist eine leere Zeichenfolge oder weist kein gültiges Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-251">
              <paramref name="s" /> is an empty string or is not in a valid format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToDateTimeOffset">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="603a6-252">Konvertiert den angegebenen <see cref="T:System.String" /> in ein <see cref="T:System.DateTimeOffset" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-252">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (s As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ToDateTimeOffset(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToDateTimeOffset : string -&gt; DateTimeOffset" Usage="System.Xml.XmlConvert.ToDateTimeOffset s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-253">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-253">The string to convert.</span>
          </span>
          <span data-ttu-id="603a6-254">**Hinweis** Die Zeichenfolge muss einer Teilmenge der W3C-Empfehlung für den XML-dateTime-Typ entsprechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-254">**Note** The string must conform to a subset of the W3C Recommendation for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="603a6-255">Weitere Informationen finden Sie unter http://www.w3.org/TR/xmlschema-2/#dateTime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-255">For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-256">Konvertiert den angegebenen <see cref="T:System.String" /> in ein <see cref="T:System.DateTimeOffset" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-256">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-257">Das <see cref="T:System.DateTimeOffset" />-Äquivalent der angegebenen Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-257">The <see cref="T:System.DateTimeOffset" /> equivalent of the supplied string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-258">Wenn mehr als sieben Ziffern für Sekundenbruchteile angegeben werden, wird der Wert gerundet.</span><span class="sxs-lookup"><span data-stu-id="603a6-258">When more than seven digits are specified for fractional seconds, the value is rounded.</span></span> <span data-ttu-id="603a6-259">Beispielsweise wird 00000004 0000000 und 00000005 zu 0000001.</span><span class="sxs-lookup"><span data-stu-id="603a6-259">For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-260">Im folgenden Beispiel wird veranschaulicht, wie eine Zeichenfolge aus einer XML-Datei gelesen und mit der <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> -Methode zum Konvertieren der Zeichenfolge zu einer <xref:System.DateTimeOffset> Typ.</span><span class="sxs-lookup"><span data-stu-id="603a6-260">The following example demonstrates how to read a string from an XML file and use the <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> method to convert the string to a <xref:System.DateTimeOffset> type.</span></span>  
  
 [!code-csharp[XmlConvert_ToDateTimeOffset_ex1#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex1/CS/XmlConvert_ToDateTimeOffset_ex1.cs#1)]
 [!code-vb[XmlConvert_ToDateTimeOffset_ex1#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex1/VB/XmlConvert_ToDateTimeOffset_ex1.vb#1)]  
  
 <span data-ttu-id="603a6-261">Im Beispiel wird die Datei Transactions.XML verwendet.</span><span class="sxs-lookup"><span data-stu-id="603a6-261">The example uses the transactions.xml file.</span></span>  
  
```xml  
<?xml version="1.0"?>  
<transactions>  
   <transaction>  
      <id>123456789</id>  
      <amount>1.00</amount>  
      <currency>USD</currency>  
      <time>2007-08-03T22:05:13-07:00</time>  
   </transaction>  
</transactions>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-262">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-262">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="603a6-263">Das an diese Methode übergebene Argument liegt außerhalb des Bereichs zulässiger Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-263">The argument passed to this method is outside the range of allowable values.</span>
          </span>
          <span data-ttu-id="603a6-264">Informationen über zulässige Werte finden Sie unter <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-264">For information about allowable values, see <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-265">Das an diese Methode übergebene Argument entspricht einer der Teilmengen der W3C-Empfehlung für den XML-DateTime-Typ nicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-265">The argument passed to this method does not conform to a subset of the W3C Recommendations for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="603a6-266">Weitere Informationen finden Sie unter [http://www.w3.org/TR/xmlschema-2/#dateTime](http://go.microsoft.com/fwlink/?LinkId=97914).</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-266">For more information see [http://www.w3.org/TR/xmlschema-2/#dateTime](http://go.microsoft.com/fwlink/?LinkId=97914).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (string s, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(string s, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (s As String, format As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ToDateTimeOffset(System::String ^ s, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ToDateTimeOffset : string * string -&gt; DateTimeOffset" Usage="System.Xml.XmlConvert.ToDateTimeOffset (s, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-267">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-267">The string to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="603a6-268">Das Format, aus dem <c>s</c> konvertiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-268">The format from which <c>s</c> is converted.</span>
          </span>
          <span data-ttu-id="603a6-269">Der Formatparameter kann eine beliebige Teilmenge der W3C-Empfehlung für den XML-DateTime-Typ sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-269">The format parameter can be any subset of the W3C Recommendation for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="603a6-270">(Weitere Informationen finden Sie unter http://www.w3.org/TR/xmlschema-2/#dateTime.). Die Gültigkeit der Zeichenfolge <c>s</c> wird anhand dieses Formats überprüft.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-270">(For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.) The string <c>s</c> is validated against this format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-271">Konvertiert den angegebenen <see cref="T:System.String" /> in ein <see cref="T:System.DateTimeOffset" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-271">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-272">Das <see cref="T:System.DateTimeOffset" />-Äquivalent der angegebenen Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-272">The <see cref="T:System.DateTimeOffset" /> equivalent of the supplied string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-273">Wenn in der Eingabezeichenfolge angegebene Offset in der deserialisierte Darstellung der "DateTimeOffset" zu einem Überlauf führen wird, wird eine FormatException ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="603a6-273">If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</span></span>  
  
 <span data-ttu-id="603a6-274">Wenn mehr als sieben Ziffern für Sekundenbruchteile angegeben werden, wird der Wert gerundet.</span><span class="sxs-lookup"><span data-stu-id="603a6-274">When more than seven digits are specified for fractional seconds, the value is rounded.</span></span> <span data-ttu-id="603a6-275">Beispielsweise wird 00000004 0000000 und 00000005 zu 0000001.</span><span class="sxs-lookup"><span data-stu-id="603a6-275">For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-276">Im folgenden Beispiel wird veranschaulicht, wie eine Zeichenfolge aus einer XML-Datei gelesen und mit der <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> -Methode zum Konvertieren der Zeichenfolge zu einer <xref:System.DateTimeOffset> Typ.</span><span class="sxs-lookup"><span data-stu-id="603a6-276">The following example demonstrates how to read a string from an XML file and use the <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> method to convert the string to a <xref:System.DateTimeOffset> type.</span></span> <span data-ttu-id="603a6-277">Die Eingabezeichenfolge wird anhand des angegebenen Formats überprüft, vor dem konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="603a6-277">The input string is validated against the specified format before being converted.</span></span>  
  
 [!code-csharp[XmlConvert_ToDateTimeOffset_ex2#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex2/CS/XmlConvert_ToDateTimeOffset_ex2.cs#1)]
 [!code-vb[XmlConvert_ToDateTimeOffset_ex2#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex2/VB/XmlConvert_ToDateTimeOffset_ex2.vb#1)]  
  
 <span data-ttu-id="603a6-278">Im Beispiel wird die Datei Transactions.XML verwendet.</span><span class="sxs-lookup"><span data-stu-id="603a6-278">The example uses the transactions.xml file.</span></span>  
  
```xml  
<?xml version="1.0"?>  
<transactions>  
   <transaction>  
      <id>123456789</id>  
      <amount>1.00</amount>  
      <currency>USD</currency>  
      <time>2007-08-03T22:05:13-07:00</time>  
   </transaction>  
</transactions>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-279">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-279">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-280">
            <paramref name="s" /> oder <paramref name="format" /> ist eine leere Zeichenfolge oder hat nicht das angegebene Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-280">
              <paramref name="s" /> or <paramref name="format" /> is an empty string or is not in the specified format.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDateTimeOffset">
      <MemberSignature Language="C#" Value="public static DateTimeOffset ToDateTimeOffset (string s, string[] formats);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.DateTimeOffset ToDateTimeOffset(string s, string[] formats) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDateTimeOffset(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDateTimeOffset (s As String, formats As String()) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static DateTimeOffset ToDateTimeOffset(System::String ^ s, cli::array &lt;System::String ^&gt; ^ formats);" />
      <MemberSignature Language="F#" Value="static member ToDateTimeOffset : string * string[] -&gt; DateTimeOffset" Usage="System.Xml.XmlConvert.ToDateTimeOffset (s, formats)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="formats" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-281">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-281">The string to convert.</span>
          </span>
        </param>
        <param name="formats">
          <span data-ttu-id="603a6-282">Ein Array von Formaten, aus denen <c>s</c> konvertiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-282">An array of formats from which <c>s</c> can be converted.</span>
          </span>
          <span data-ttu-id="603a6-283">Jedes Format in <c>formats</c> kann eine beliebige Teilmenge der W3C-Empfehlung für den XML-dateTime-Typ sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-283">Each format in <c>formats</c> can be any subset of the W3C Recommendation for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="603a6-284">(Weitere Informationen finden Sie unter http://www.w3.org/TR/xmlschema-2/#dateTime.). Die Gültigkeit der Zeichenfolge <c>s</c> wird anhand eines dieser Formate überprüft.)</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-284">(For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.) The string <c>s</c> is validated against one of these formats.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-285">Konvertiert den angegebenen <see cref="T:System.String" /> in ein <see cref="T:System.DateTimeOffset" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-285">Converts the supplied <see cref="T:System.String" /> to a <see cref="T:System.DateTimeOffset" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-286">Das <see cref="T:System.DateTimeOffset" />-Äquivalent der angegebenen Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-286">The <see cref="T:System.DateTimeOffset" /> equivalent of the supplied string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-287">Wenn in der Eingabezeichenfolge angegebene Offset in der deserialisierte Darstellung der "DateTimeOffset" zu einem Überlauf führen wird, wird eine FormatException ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="603a6-287">If the offset specified within the input string will cause an overflow in the deserialized representation of the DateTimeOffset, a FormatException is thrown.</span></span>  
  
 <span data-ttu-id="603a6-288">Wenn mehr als sieben Ziffern für Sekundenbruchteile angegeben werden, wird der Wert gerundet.</span><span class="sxs-lookup"><span data-stu-id="603a6-288">When more than seven digits are specified for fractional seconds, the value is rounded.</span></span> <span data-ttu-id="603a6-289">Beispielsweise wird 00000004 0000000 und 00000005 zu 0000001.</span><span class="sxs-lookup"><span data-stu-id="603a6-289">For example, 00000004 becomes 0000000 and 00000005 becomes 0000001.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-290">Im folgenden Beispiel wird veranschaulicht, wie eine Zeichenfolge aus einer XML-Datei gelesen und mit der <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> -Methode zum Konvertieren der Zeichenfolge zu einer <xref:System.DateTimeOffset> Typ.</span><span class="sxs-lookup"><span data-stu-id="603a6-290">The following example demonstrates how to read a string from an XML file and use the <xref:System.Xml.XmlConvert.ToDateTimeOffset%2A> method to convert the string to a <xref:System.DateTimeOffset> type.</span></span> <span data-ttu-id="603a6-291">Die Eingabezeichenfolge muss für eines der angegebenen Formate überprüfen, vor dem konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="603a6-291">The input string must validate against one of the specified formats before being converted.</span></span>  
  
 [!code-csharp[XmlConvert_ToDateTimeOffset_ex3#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex3/CS/XmlConvert_ToDateTimeOffset_ex3.cs#1)]
 [!code-vb[XmlConvert_ToDateTimeOffset_ex3#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToDateTimeOffset_ex3/VB/XmlConvert_ToDateTimeOffset_ex3.vb#1)]  
  
 <span data-ttu-id="603a6-292">Im Beispiel wird die Datei Transactions.XML verwendet.</span><span class="sxs-lookup"><span data-stu-id="603a6-292">The example uses the transactions.xml file.</span></span>  
  
```xml  
<?xml version="1.0"?>  
<transactions>  
   <transaction>  
      <id>123456789</id>  
      <amount>1.00</amount>  
      <currency>USD</currency>  
      <time>2007-08-03T22:05:13-07:00</time>  
   </transaction>  
</transactions>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDecimal">
      <MemberSignature Language="C#" Value="public static decimal ToDecimal (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Decimal ToDecimal(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDecimal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDecimal (s As String) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Decimal ToDecimal(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToDecimal : string -&gt; decimal" Usage="System.Xml.XmlConvert.ToDecimal s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-293">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-293">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-294">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Decimal" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-294">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Decimal" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-295">Ein <see langword="Decimal" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-295">A <see langword="Decimal" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-296">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-296">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-297">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-297">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-298">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-298">
              <paramref name="s" /> represents a number less than <see cref="F:System.Decimal.MinValue" /> or greater than <see cref="F:System.Decimal.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToDouble">
      <MemberSignature Language="C#" Value="public static double ToDouble (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 ToDouble(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToDouble(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToDouble (s As String) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double ToDouble(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToDouble : string -&gt; double" Usage="System.Xml.XmlConvert.ToDouble s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-299">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-299">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-300">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Double" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-300">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Double" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-301">Ein <see langword="Double" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-301">A <see langword="Double" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-302">Wenn `s` INF oder -INF, gibt diese Methode Double.PositiveInfinity bzw. Double.NegativeInfinity zurück.</span><span class="sxs-lookup"><span data-stu-id="603a6-302">If `s` is INF or -INF, this method returns Double.PositiveInfinity or Double.NegativeInfinity respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-303">Im folgenden Beispiel wird `ToDouble` und <xref:System.Xml.XmlConvert.ToDateTime%2A> , stark typisierte Daten zu lesen.</span><span class="sxs-lookup"><span data-stu-id="603a6-303">The following example uses `ToDouble` and <xref:System.Xml.XmlConvert.ToDateTime%2A> to read strongly typed data.</span></span>  
  
 [!code-cpp[XmlConvert.ToDouble#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.ToDouble/CPP/readData.cpp#1)]
 [!code-csharp[XmlConvert.ToDouble#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.ToDouble/CS/readdata.cs#1)]
 [!code-vb[XmlConvert.ToDouble#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.ToDouble/VB/readdata.vb#1)]  
  
 <span data-ttu-id="603a6-304">Im Beispiel wird die Datei `orderData.xml`als Eingabe.</span><span class="sxs-lookup"><span data-stu-id="603a6-304">The example uses the file, `orderData.xml`, as input.</span></span>  
  
 [!code-xml[XmlConvert.ToDouble#2](~/samples/snippets/xml/VS_Snippets_Data/XmlConvert.ToDouble/XML/orderdata.xml#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-305">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-305">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-306">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-306">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-307">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-307">
              <paramref name="s" /> represents a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="ToGuid">
      <MemberSignature Language="C#" Value="public static Guid ToGuid (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Guid ToGuid(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToGuid(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToGuid (s As String) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Guid ToGuid(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToGuid : string -&gt; Guid" Usage="System.Xml.XmlConvert.ToGuid s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-308">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-308">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-309">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Guid" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-309">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Guid" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-310">Ein <see langword="Guid" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-310">A <see langword="Guid" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToInt16">
      <MemberSignature Language="C#" Value="public static short ToInt16 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16 ToInt16(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt16 (s As String) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static short ToInt16(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToInt16 : string -&gt; int16" Usage="System.Xml.XmlConvert.ToInt16 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-311">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-311">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-312">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Int16" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-312">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int16" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-313">Ein <see langword="Int16" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-313">An <see langword="Int16" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-314">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-314">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-315">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-315">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-316">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int16.MinValue" /> oder größer als <see cref="F:System.Int16.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-316">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int16.MinValue" /> or greater than <see cref="F:System.Int16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt32">
      <MemberSignature Language="C#" Value="public static int ToInt32 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ToInt32(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt32 (s As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ToInt32(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToInt32 : string -&gt; int" Usage="System.Xml.XmlConvert.ToInt32 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-317">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-317">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-318">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Int32" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-318">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int32" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-319">Ein <see langword="Int32" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-319">An <see langword="Int32" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-320">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-320">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-321">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-321">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-322">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int32.MinValue" /> oder größer als <see cref="F:System.Int32.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-322">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToInt64">
      <MemberSignature Language="C#" Value="public static long ToInt64 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ToInt64(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToInt64 (s As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ToInt64(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToInt64 : string -&gt; int64" Usage="System.Xml.XmlConvert.ToInt64 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-323">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-323">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-324">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Int64" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-324">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Int64" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-325">Ein <see langword="Int64" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-325">An <see langword="Int64" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-326">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-326">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-327">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-327">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-328">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Int64.MinValue" /> oder größer als <see cref="F:System.Int64.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-328">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSByte">
      <MemberSignature Language="C#" Value="public static sbyte ToSByte (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int8 ToSByte(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToSByte(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSByte (s As String) As SByte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::SByte ToSByte(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToSByte : string -&gt; sbyte" Usage="System.Xml.XmlConvert.ToSByte s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-329">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-329">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-330">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.SByte" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-330">Converts the <see cref="T:System.String" /> to a <see cref="T:System.SByte" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-331">Ein <see langword="SByte" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-331">An <see langword="SByte" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-332">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-332">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-333">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-333">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-334">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.SByte.MinValue" /> oder größer als <see cref="F:System.SByte.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-334">
              <paramref name="s" /> represents a number less than <see cref="F:System.SByte.MinValue" /> or greater than <see cref="F:System.SByte.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToSingle">
      <MemberSignature Language="C#" Value="public static float ToSingle (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 ToSingle(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToSingle(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToSingle (s As String) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float ToSingle(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToSingle : string -&gt; single" Usage="System.Xml.XmlConvert.ToSingle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-335">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-335">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-336">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.Single" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-336">Converts the <see cref="T:System.String" /> to a <see cref="T:System.Single" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-337">Ein <see langword="Single" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-337">A <see langword="Single" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-338">Wenn `s` INF oder -INF, gibt diese Methode Single.PositiveInfinity bzw. Single.NegativeInfinity zurück.</span><span class="sxs-lookup"><span data-stu-id="603a6-338">If `s` is INF or -INF, this method returns Single.PositiveInfinity or Single.NegativeInfinity respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-339">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-339">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-340">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-340">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-341">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.Single.MinValue" /> oder größer als <see cref="F:System.Single.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-341">
              <paramref name="s" /> represents a number less than <see cref="F:System.Single.MinValue" /> or greater than <see cref="F:System.Single.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="603a6-342">Konvertiert stark typisierte Daten in eine gleichbedeutende <see cref="T:System.String" />-Darstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-342">Converts strongly typed data to an equivalent <see cref="T:System.String" /> representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(bool value);" />
      <MemberSignature Language="F#" Value="static member ToString : bool -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-343">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-343">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-344">Konvertiert das <see cref="T:System.Boolean" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-344">Converts the <see cref="T:System.Boolean" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-345">Eine Zeichenfolgendarstellung von <see langword="Boolean" />, d. h. „true“ oder „false“.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-345">A string representation of the <see langword="Boolean" />, that is, "true" or "false".</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Byte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToString : byte -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-346">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-346">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-347">Konvertiert das <see cref="T:System.Byte" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-347">Converts the <see cref="T:System.Byte" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-348">Eine Zeichenfolgendarstellung des <see langword="Byte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-348">A string representation of the <see langword="Byte" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(char value);" />
      <MemberSignature Language="F#" Value="static member ToString : char -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-349">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-349">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-350">Konvertiert das <see cref="T:System.Char" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-350">Converts the <see cref="T:System.Char" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-351">Eine Zeichenfolgendarstellung des <see langword="Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-351">A string representation of the <see langword="Char" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use XmlConvert.ToString() that takes in XmlDateTimeSerializationMode")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-352">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-352">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-353">Konvertiert das <see cref="T:System.DateTime" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-353">Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-354">Eine Zeichenfolgendarstellung von <see langword="DateTime" /> im Format „yyyy-MM-ddTHH:mm:ss , wobei „T“ ein konstantes Literal ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-354">A string representation of the <see langword="DateTime" /> in the format yyyy-MM-ddTHH:mm:ss where 'T' is a constant literal.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="603a6-355">Die <xref:System.Xml.XmlConvert.ToString%28System.DateTime%29?displayProperty=nameWithType> Methode ist in .NET Framework, Version 2.0, veraltet und wurde durch ersetzt die <xref:System.Xml.XmlConvert.ToString%28System.DateTime%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="603a6-355">The <xref:System.Xml.XmlConvert.ToString%28System.DateTime%29?displayProperty=nameWithType> method is obsolete in the 2.0 version of the .NET Framework and has been replaced with the <xref:System.Xml.XmlConvert.ToString%28System.DateTime%2CSystem.Xml.XmlDateTimeSerializationMode%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTimeOffset value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTimeOffset value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTimeOffset) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTimeOffset value);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTimeOffset -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-356">Der zu konvertierende <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-356">The <see cref="T:System.DateTimeOffset" /> to be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-357">Konvertiert den angegebenen <see cref="T:System.DateTimeOffset" /> in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-357">Converts the supplied <see cref="T:System.DateTimeOffset" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-358">Eine <see cref="T:System.String" />-Darstellung des angegebenen <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-358">A <see cref="T:System.String" /> representation of the supplied <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="603a6-359">Im folgenden Beispiel wird eine <xref:System.DateTimeOffset> Darstellung der aktuellen Uhrzeit um eine <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="603a6-359">The following example converts a <xref:System.DateTimeOffset> representation of the current time to a <xref:System.String>.</span></span>  
  
 [!code-csharp[XmlConvert_ToString_DTO#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToString_DTO/CS/XmlConvert_ToString_DTO.cs#1)]
 [!code-vb[XmlConvert_ToString_DTO#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToString_DTO/VB/XmlConvert_ToString_DTO.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Decimal value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Decimal)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Decimal) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::Decimal value);" />
      <MemberSignature Language="F#" Value="static member ToString : decimal -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-360">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-360">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-361">Konvertiert das <see cref="T:System.Decimal" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-361">Converts the <see cref="T:System.Decimal" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-362">Eine Zeichenfolgendarstellung des <see langword="Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-362">A string representation of the <see langword="Decimal" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Double) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(double value);" />
      <MemberSignature Language="F#" Value="static member ToString : double -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-363">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-363">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-364">Konvertiert das <see cref="T:System.Double" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-364">Converts the <see cref="T:System.Double" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-365">Eine Zeichenfolgendarstellung des <see langword="Double" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-365">A string representation of the <see langword="Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-366">Wenn `value` ist Double.PositiveInfinity oder Double.NegativeInfinity zurück, die diese Methode gibt die Zeichenfolge INF oder -INF.</span><span class="sxs-lookup"><span data-stu-id="603a6-366">If `value` is Double.PositiveInfinity or Double.NegativeInfinity, this method returns the string INF or -INF respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-367">Im folgenden Beispiel-Datentypen in eine Zeichenfolge konvertiert und die Informationen dann in die Konsole schreibt.</span><span class="sxs-lookup"><span data-stu-id="603a6-367">The following example, converts data types to string and then writes the information out to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Double.PositiveInfinity" />
        <altmember cref="F:System.Double.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (Guid value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.Guid value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Guid) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(Guid value);" />
      <MemberSignature Language="F#" Value="static member ToString : Guid -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-368">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-368">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-369">Konvertiert das <see cref="T:System.Guid" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-369">Converts the <see cref="T:System.Guid" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-370">Eine Zeichenfolgendarstellung des <see langword="Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-370">A string representation of the <see langword="Guid" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Short) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(short value);" />
      <MemberSignature Language="F#" Value="static member ToString : int16 -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-371">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-371">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-372">Konvertiert das <see cref="T:System.Int16" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-372">Converts the <see cref="T:System.Int16" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-373">Eine Zeichenfolgendarstellung des <see langword="Int16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-373">A string representation of the <see langword="Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="603a6-374">Im folgenden Beispiel-Datentypen in eine Zeichenfolge konvertiert und die Informationen dann in die Konsole schreibt.</span><span class="sxs-lookup"><span data-stu-id="603a6-374">The following example, converts data types to string and then writes the information out to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(int value);" />
      <MemberSignature Language="F#" Value="static member ToString : int -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-375">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-375">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-376">Konvertiert das <see cref="T:System.Int32" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-376">Converts the <see cref="T:System.Int32" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-377">Eine Zeichenfolgendarstellung des <see langword="Int32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-377">A string representation of the <see langword="Int32" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Long) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(long value);" />
      <MemberSignature Language="F#" Value="static member ToString : int64 -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-378">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-378">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-379">Konvertiert das <see cref="T:System.Int64" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-379">Converts the <see cref="T:System.Int64" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-380">Eine Zeichenfolgendarstellung des <see langword="Int64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-380">A string representation of the <see langword="Int64" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As SByte) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToString : sbyte -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-381">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-381">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-382">Konvertiert das <see cref="T:System.SByte" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-382">Converts the <see cref="T:System.SByte" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-383">Eine Zeichenfolgendarstellung des <see langword="SByte" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-383">A string representation of the <see langword="SByte" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As Single) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(float value);" />
      <MemberSignature Language="F#" Value="static member ToString : single -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-384">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-384">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-385">Konvertiert das <see cref="T:System.Single" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-385">Converts the <see cref="T:System.Single" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-386">Eine Zeichenfolgendarstellung des <see langword="Single" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-386">A string representation of the <see langword="Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-387">Wenn `value` Single.PositiveInfinity oder Single.NegativeInfinity ist, wird diese Methode gibt die Zeichenfolge INF oder -INF.</span><span class="sxs-lookup"><span data-stu-id="603a6-387">If `value` is Single.PositiveInfinity or Single.NegativeInfinity, this method returns the string INF or -INF respectively.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Single.PositiveInfinity" />
        <altmember cref="F:System.Single.NegativeInfinity" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (TimeSpan value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.TimeSpan value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As TimeSpan) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(TimeSpan value);" />
      <MemberSignature Language="F#" Value="static member ToString : TimeSpan -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-388">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-388">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-389">Konvertiert das <see cref="T:System.TimeSpan" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-389">Converts the <see cref="T:System.TimeSpan" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-390">Eine Zeichenfolgendarstellung des <see langword="TimeSpan" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-390">A string representation of the <see langword="TimeSpan" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UShort) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint16 -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-391">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-391">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-392">Konvertiert das <see cref="T:System.UInt16" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-392">Converts the <see cref="T:System.UInt16" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-393">Eine Zeichenfolgendarstellung des <see langword="UInt16" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-393">A string representation of the <see langword="UInt16" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As UInteger) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint32 -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-394">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-394">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-395">Konvertiert das <see cref="T:System.UInt32" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-395">Converts the <see cref="T:System.UInt32" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-396">Eine Zeichenfolgendarstellung des <see langword="UInt32" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-396">A string representation of the <see langword="UInt32" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As ULong) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToString : uint64 -&gt; string" Usage="System.Xml.XmlConvert.ToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-397">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-397">The value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-398">Konvertiert das <see cref="T:System.UInt64" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-398">Converts the <see cref="T:System.UInt64" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-399">Eine Zeichenfolgendarstellung des <see langword="UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-399">A string representation of the <see langword="UInt64" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTime,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime * string -&gt; string" Usage="System.Xml.XmlConvert.ToString (value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-400">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-400">The value to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="603a6-401">Die Formatstruktur, die die Anzeige der konvertierten Zeichenfolge definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-401">The format structure that defines how to display the converted string.</span>
          </span>
          <span data-ttu-id="603a6-402">Zu den gültigen Format zählt „yyyy-MM-ddTHH:mm:sszzzzzz“ und dessen Teilmengen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-402">Valid formats include "yyyy-MM-ddTHH:mm:sszzzzzz" and its subsets.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-403">Konvertiert das <see cref="T:System.DateTime" />-Element in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-403">Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-404">Eine Zeichenfolgendarstellung von <see langword="DateTime" /> im angegebenen Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-404">A string representation of the <see langword="DateTime" /> in the specified format.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="603a6-405">Im folgenden Beispiel-Datentypen in eine Zeichenfolge konvertiert und die Informationen dann in die Konsole schreibt.</span><span class="sxs-lookup"><span data-stu-id="603a6-405">The following example, converts data types to string and then writes the information out to the console.</span></span>  
  
 [!code-cpp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CPP/source.cpp#1)]
 [!code-csharp[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData XmlConvert.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlConvert.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTime value, System.Xml.XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTime value, valuetype System.Xml.XmlDateTimeSerializationMode dateTimeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTime,System.Xml.XmlDateTimeSerializationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTime, dateTimeOption As XmlDateTimeSerializationMode) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTime value, System::Xml::XmlDateTimeSerializationMode dateTimeOption);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTime * System.Xml.XmlDateTimeSerializationMode -&gt; string" Usage="System.Xml.XmlConvert.ToString (value, dateTimeOption)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTime" />
        <Parameter Name="dateTimeOption" Type="System.Xml.XmlDateTimeSerializationMode" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-406">Der zu konvertierende <see cref="T:System.DateTime" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-406">The <see cref="T:System.DateTime" /> value to convert.</span>
          </span>
        </param>
        <param name="dateTimeOption">
          <span data-ttu-id="603a6-407">Einer der <see cref="T:System.Xml.XmlDateTimeSerializationMode" />-Werte, die angeben, wie der <see cref="T:System.DateTime" />-Wert behandelt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-407">One of the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> values that specify how to treat the <see cref="T:System.DateTime" /> value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-408">Konvertiert die <see cref="T:System.DateTime" />-Struktur mithilfe von <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> in eine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-408">Converts the <see cref="T:System.DateTime" /> to a <see cref="T:System.String" /> using the <see cref="T:System.Xml.XmlDateTimeSerializationMode" /> specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-409">Ein <see cref="T:System.String" />-Äquivalent von <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-409">A <see cref="T:System.String" /> equivalent of the <see cref="T:System.DateTime" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="603a6-410">Der <paramref name="dateTimeOption" />-Wert ist nicht zulässig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-410">The <paramref name="dateTimeOption" /> value is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-411">Der <paramref name="value" />-Wert oder der <paramref name="dateTimeOption" />-Wert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-411">The <paramref name="value" /> or <paramref name="dateTimeOption" /> value is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public static string ToString (DateTimeOffset value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(valuetype System.DateTimeOffset value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToString(System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (value As DateTimeOffset, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(DateTimeOffset value, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member ToString : DateTimeOffset * string -&gt; string" Usage="System.Xml.XmlConvert.ToString (value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.DateTimeOffset" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="603a6-412">Der zu konvertierende <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-412">The <see cref="T:System.DateTimeOffset" /> to be converted.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="603a6-413">Das Format, in das <c>s</c> konvertiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-413">The format to which <c>s</c> is converted.</span>
          </span>
          <span data-ttu-id="603a6-414">Der Formatparameter kann eine beliebige Teilmenge der W3C-Empfehlung für den XML-DateTime-Typ sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-414">The format parameter can be any subset of the W3C Recommendation for the XML dateTime type.</span>
          </span>
          <span data-ttu-id="603a6-415">(Weitere Informationen finden Sie unter http://www.w3.org/TR/xmlschema-2/#dateTime.))</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-415">(For more information see http://www.w3.org/TR/xmlschema-2/#dateTime.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-416">Konvertiert den angegebenen <see cref="T:System.DateTimeOffset" /> in einen <see cref="T:System.String" /> im angegebenen Format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-416">Converts the supplied <see cref="T:System.DateTimeOffset" /> to a <see cref="T:System.String" /> in the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-417">Eine <see cref="T:System.String" />-Darstellung im angegebenen Format des bereitgestellten <see cref="T:System.DateTimeOffset" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-417">A <see cref="T:System.String" /> representation in the specified format of the supplied <see cref="T:System.DateTimeOffset" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="603a6-418">Im folgenden Beispiel wird eine <xref:System.DateTimeOffset> Darstellung der aktuellen Uhrzeit um eine <xref:System.String> im angegebenen Format.</span><span class="sxs-lookup"><span data-stu-id="603a6-418">The following example converts a <xref:System.DateTimeOffset> representation of the current time to a <xref:System.String> in the specified format.</span></span>  
  
 [!code-csharp[XmlConvert_ToString_DTO_Format#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert_ToString_DTO_Format/CS/XmlConvert_ToString_DTO_Format.cs#1)]
 [!code-vb[XmlConvert_ToString_DTO_Format#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert_ToString_DTO_Format/VB/XmlConvert_ToString_DTO_Format.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTimeSpan">
      <MemberSignature Language="C#" Value="public static TimeSpan ToTimeSpan (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TimeSpan ToTimeSpan(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToTimeSpan(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToTimeSpan (s As String) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeSpan ToTimeSpan(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToTimeSpan : string -&gt; TimeSpan" Usage="System.Xml.XmlConvert.ToTimeSpan s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-419">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-419">The string to convert.</span>
          </span>
          <span data-ttu-id="603a6-420">Das Zeichenfolgenformat muss dem W3C-XML-Schema Teil 2 entsprechen: Empfehlung für Datentypen für Dauer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-420">The string format must conform to the W3C XML Schema Part 2: Datatypes recommendation for duration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-421">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.TimeSpan" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-421">Converts the <see cref="T:System.String" /> to a <see cref="T:System.TimeSpan" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-422">Ein <see langword="TimeSpan" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-422">A <see langword="TimeSpan" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-423">
            <paramref name="s" /> hat nicht das richtige Format zum Darstellen eines <see langword="TimeSpan" />-Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-423">
              <paramref name="s" /> is not in correct format to represent a <see langword="TimeSpan" /> value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt16">
      <MemberSignature Language="C#" Value="public static ushort ToUInt16 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int16 ToUInt16(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToUInt16(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt16 (s As String) As UShort" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt16 ToUInt16(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToUInt16 : string -&gt; uint16" Usage="System.Xml.XmlConvert.ToUInt16 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-424">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-424">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-425">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.UInt16" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-425">Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt16" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-426">Ein <see langword="UInt16" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-426">A <see langword="UInt16" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-427">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-427">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-428">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-428">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-429">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt16.MinValue" /> oder größer als <see cref="F:System.UInt16.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-429">
              <paramref name="s" /> represents a number less than <see cref="F:System.UInt16.MinValue" /> or greater than <see cref="F:System.UInt16.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt32">
      <MemberSignature Language="C#" Value="public static uint ToUInt32 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 ToUInt32(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToUInt32(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt32 (s As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 ToUInt32(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToUInt32 : string -&gt; uint32" Usage="System.Xml.XmlConvert.ToUInt32 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-430">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-430">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-431">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.UInt32" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-431">Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt32" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-432">Ein <see langword="UInt32" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-432">A <see langword="UInt32" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-433">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-433">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-434">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-434">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-435">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt32.MinValue" /> oder größer als <see cref="F:System.UInt32.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-435">
              <paramref name="s" /> represents a number less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToUInt64">
      <MemberSignature Language="C#" Value="public static ulong ToUInt64 (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int64 ToUInt64(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.ToUInt64(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToUInt64 (s As String) As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt64 ToUInt64(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member ToUInt64 : string -&gt; uint64" Usage="System.Xml.XmlConvert.ToUInt64 s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="603a6-436">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-436">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-437">Konvertiert den <see cref="T:System.String" /> in ein <see cref="T:System.UInt64" />-Äquivalent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-437">Converts the <see cref="T:System.String" /> to a <see cref="T:System.UInt64" /> equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-438">Ein <see langword="UInt64" />-Äquivalent der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-438">A <see langword="UInt64" /> equivalent of the string.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-439">
            <paramref name="s" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-439">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="603a6-440">
            <paramref name="s" /> weist nicht das richtige Format auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-440">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="603a6-441">
            <paramref name="s" /> stellt eine Zahl dar, die kleiner als <see cref="F:System.UInt64.MinValue" /> oder größer als <see cref="F:System.UInt64.MaxValue" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-441">
              <paramref name="s" /> represents a number less than <see cref="F:System.UInt64.MinValue" /> or greater than <see cref="F:System.UInt64.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyName">
      <MemberSignature Language="C#" Value="public static string VerifyName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member VerifyName : string -&gt; string" Usage="System.Xml.XmlConvert.VerifyName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="603a6-442">Der zu überprüfende Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-442">The name to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-443">Überprüft, ob der Name ein gültiger Name gemäß der W3C-Empfehlung für XML (Extended Markup Language) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-443">Verifies that the name is a valid name according to the W3C Extended Markup Language recommendation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-444">Der Name, wenn dieser ein gültiger XML-Name ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-444">The name, if it is a valid XML name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-445">Diese Methode kann verwendet werden, mit der <xref:System.Xml.XmlWriter> Klasse wie folgt.</span><span class="sxs-lookup"><span data-stu-id="603a6-445">This method can be used with the <xref:System.Xml.XmlWriter> class in the following manner.</span></span>  
  
```csharp  
try{  
  writer.WriteStartElement(XmlConvert.VerifyName("item"),"bar");  
}  
catch(Exception e)  
{  
  Console.WriteLine("error");  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="603a6-446">Im folgenden Beispiel wird die `VerifyName` Methode, um einen Elementnamen zu schreiben.</span><span class="sxs-lookup"><span data-stu-id="603a6-446">The following example uses the `VerifyName` method to write an element name.</span></span>  
  
 [!code-cpp[XmlConvert.VerifyName#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlConvert.VerifyName/CPP/verifyname.cpp#1)]
 [!code-csharp[XmlConvert.VerifyName#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlConvert.VerifyName/CS/verifyname.cs#1)]
 [!code-vb[XmlConvert.VerifyName#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlConvert.VerifyName/VB/verifyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="603a6-447">
            <paramref name="name" /> ist kein gültiger XML-Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-447">
              <paramref name="name" /> is not a valid XML name.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-448">
            <paramref name="name" /> ist <see langword="null" /> oder String.Empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-448">
              <paramref name="name" /> is <see langword="null" /> or String.Empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Xml.XmlConvert.VerifyNCName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="VerifyNCName">
      <MemberSignature Language="C#" Value="public static string VerifyNCName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyNCName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyNCName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyNCName (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyNCName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member VerifyNCName : string -&gt; string" Usage="System.Xml.XmlConvert.VerifyNCName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="603a6-449">Der zu überprüfende Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-449">The name to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-450">Überprüft, ob der Name ein gültiger <see langword="NCName" /> gemäß der W3C-Empfehlung für XML (Extended Markup Language) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-450">Verifies that the name is a valid <see langword="NCName" /> according to the W3C Extended Markup Language recommendation.</span>
          </span>
          <span data-ttu-id="603a6-451">Ein <see langword="NCName" /> darf keinen Doppelpunkt enthalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-451">An <see langword="NCName" /> is a name that cannot contain a colon.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-452">Der Name, wenn dieser ein gültiger NCName ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-452">The name, if it is a valid NCName.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-453">
            <paramref name="name" /> ist <see langword="null" /> oder <c>String.Empty</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-453">
              <paramref name="name" /> is <see langword="null" /> or <c>String.Empty</c>.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="603a6-454">
            <paramref name="name" /> ist kein gültiger Nicht-Doppelpunkt-Name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-454">
              <paramref name="name" /> is not a valid non-colon name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyNMTOKEN">
      <MemberSignature Language="C#" Value="public static string VerifyNMTOKEN (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyNMTOKEN(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyNMTOKEN(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyNMTOKEN (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyNMTOKEN(System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member VerifyNMTOKEN : string -&gt; string" Usage="System.Xml.XmlConvert.VerifyNMTOKEN name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="603a6-455">Die Zeichenfolge, die überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-455">The string you wish to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-456">Überprüft, ob die Zeichenfolge ein gültiges NMTOKEN gemäß der Empfehlung in W3C XML Schema, Teil 2: „Datentypen“, ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-456">Verifies that the string is a valid NMTOKEN according to the W3C XML Schema Part2: Datatypes recommendation</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-457">Das Namenstoken, wenn es sich um ein gültiges NMTOKEN handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-457">The name token, if it is a valid NMTOKEN.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-458">Diese Methode wird sichergestellt, dass das Namenstoken die korrekte Syntax für ein gültiges NMTOKEN aufweist.</span><span class="sxs-lookup"><span data-stu-id="603a6-458">This method ensures that the name token follows the proper syntax for a valid NMTOKEN.</span></span> <span data-ttu-id="603a6-459">Sie können auf folgende Weise verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="603a6-459">It can be used in the following manner:</span></span>  
  
```csharp  
try {  
  writer.WriteStartElement(XmlConvert.VerifyNMTOKEN("abc"),"book");  
}  
catch(Exception e) {  
  Console.WriteLine("error");  
}  
```  
  
 <span data-ttu-id="603a6-460">Weitere Informationen über die NMTOKEN-Datentyp finden Sie unter http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN.</span><span class="sxs-lookup"><span data-stu-id="603a6-460">For more information on the NMTOKEN data type, see http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#NMTOKEN.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="603a6-461">Die Zeichenfolge ist kein gültiges Namenstoken.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-461">The string is not a valid name token.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="603a6-462">
            <paramref name="name" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-462">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyPublicId">
      <MemberSignature Language="C#" Value="public static string VerifyPublicId (string publicId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyPublicId(string publicId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyPublicId(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyPublicId (publicId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyPublicId(System::String ^ publicId);" />
      <MemberSignature Language="F#" Value="static member VerifyPublicId : string -&gt; string" Usage="System.Xml.XmlConvert.VerifyPublicId publicId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publicId">
          <span data-ttu-id="603a6-463">
            <see cref="T:System.String" />, der die zu überprüfende ID enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-463">
              <see cref="T:System.String" /> that contains the id to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-464">Gibt die übergebene Zeichenfolgeninstanz zurück, wenn alle Zeichen im Zeichenfolgenargument gültige Zeichen für eine öffentliche ID sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-464">Returns the passed in string instance if all the characters in the string argument are valid public id characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-465">Gibt die übergebene Zeichenfolge zurück, wenn alle Zeichen im Argument gültige Zeichen für eine öffentliche ID sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-465">Returns the passed-in string if all the characters in the argument are valid public id characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-466">Keine anderen Werte als das übergebene Argument sollte zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="603a6-466">No other values than the passed in argument should be returned.</span></span> <span data-ttu-id="603a6-467">Die Zeichen, die für die öffentliche Id ungültig variieren nicht zwischen XML-Editionen, daher ist keine `XmlVersion` Überladung ist erforderlich.</span><span class="sxs-lookup"><span data-stu-id="603a6-467">The characters valid for public id do not vary between XML editions, so no `XmlVersion` overload is required.</span></span>  
  
 <span data-ttu-id="603a6-468">Finden Sie unter [XML 1.0-Spezifikation (vierte Ausgabe)](http://go.microsoft.com/fwlink/?LinkID=147985) Produktion [13] `PublidChar` Weitere Informationen zu den zulässigen Zeichen</span><span class="sxs-lookup"><span data-stu-id="603a6-468">See [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) production [13] `PublidChar` for details on the allowed characters</span></span>  
  
 <span data-ttu-id="603a6-469">Wenn der Parameter null ist, ist ein `ArgumentNullException` ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="603a6-469">If the parameter is null, an `ArgumentNullException` will be thrown.</span></span> <span data-ttu-id="603a6-470">Wenn keines der Zeichen keine gültige öffentliche Id-Zeichen, sind ein `XmlException` mit Informationen zum ersten ungültigen Zeichen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="603a6-470">If any of the characters are not valid public id characters, an `XmlException` is thrown with information about the first invalid character encountered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyTOKEN">
      <MemberSignature Language="C#" Value="public static string VerifyTOKEN (string token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyTOKEN(string token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyTOKEN(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyTOKEN (token As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyTOKEN(System::String ^ token);" />
      <MemberSignature Language="F#" Value="static member VerifyTOKEN : string -&gt; string" Usage="System.Xml.XmlConvert.VerifyTOKEN token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="token">
          <span data-ttu-id="603a6-471">Der Zeichenfolgenwert, der überprüft werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-471">The string value you wish to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-472">Überprüft, ob die Zeichenfolge ein gültiges Token gemäß der Empfehlung in W3C XML Schema Teil 2: „Datentypen“ ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-472">Verifies that the string is a valid token according to the W3C XML Schema Part2: Datatypes recommendation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-473">Das Token, wenn es sich um ein gültiges Token handelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-473">The token, if it is a valid token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-474">Diese Methode wird sichergestellt, dass das Namenstoken die korrekte Syntax für ein gültiges Token folgt.</span><span class="sxs-lookup"><span data-stu-id="603a6-474">This method ensures that the name token follows the proper syntax for a valid token.</span></span> <span data-ttu-id="603a6-475">Sie können auf folgende Weise verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="603a6-475">It can be used in the following manner:</span></span>  
  
```csharp  
try {  
  writer.WriteStartElement(XmlConvert.VerifyTOKEN("abc"),"book");  
}  
catch(Exception e) {  
  Console.WriteLine("error");  
}  
```  
  
 <span data-ttu-id="603a6-476">Weitere Informationen zu Token finden Sie unter [ http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#token ](http://go.microsoft.com/fwlink/?LinkId=103183).</span><span class="sxs-lookup"><span data-stu-id="603a6-476">For more information on tokens, see [http://www.w3.org/TR/2001/REC-xmlschema-2-20010502/#token](http://go.microsoft.com/fwlink/?LinkId=103183).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="603a6-477">Der Zeichenfolgenwert ist kein gültiges Token.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-477">The string value is not a valid token.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifyWhitespace">
      <MemberSignature Language="C#" Value="public static string VerifyWhitespace (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyWhitespace(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyWhitespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyWhitespace (content As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyWhitespace(System::String ^ content);" />
      <MemberSignature Language="F#" Value="static member VerifyWhitespace : string -&gt; string" Usage="System.Xml.XmlConvert.VerifyWhitespace content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="603a6-478">Der zu überprüfende <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-478">
              <see cref="T:System.String" /> to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-479">Gibt die übergebene Zeichenfolgeninstanz zurück, wenn alle Zeichen im Zeichenfolgenargument gültige Leerraumzeichen sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-479">Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-480">Gibt die übergebene Zeichenfolgeninstanz zurück, wenn alle Zeichen im Zeichenfolgenargument gültige Leerraumzeichen sind, andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-480">Returns the passed-in string instance if all the characters in the string argument are valid whitespace characters, otherwise <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-481">Keine anderen Werte als das übergebene Argument sollte zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="603a6-481">No other values than the passed in argument should be returned.</span></span> <span data-ttu-id="603a6-482">Der gültige Zeichen für Leerzeichen variieren nicht zwischen XML-Editionen, sodass keine Überladung der XML-Version erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="603a6-482">The characters that are valid for whitespace do not vary between XML editions, so no xml version overload is required.</span></span>  
  
 <span data-ttu-id="603a6-483">Finden Sie unter [XML 1.0-Spezifikation (vierte Ausgabe)](http://go.microsoft.com/fwlink/?LinkID=147985) Produktion [3] S Weitere Informationen zu den zulässigen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="603a6-483">See [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) production [3] S for details on the allowed characters.</span></span>  
  
 <span data-ttu-id="603a6-484">Wenn der Parameter null ist, ist ein `ArgumentNullException` ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="603a6-484">If the parameter is null, an `ArgumentNullException` will be thrown.</span></span>  
  
 <span data-ttu-id="603a6-485">Wenn keines der Zeichen nicht gültige Leerraumzeichen sind ein `XmlException` mit Informationen zum ersten ungültigen Zeichen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="603a6-485">If any of the characters are not valid whitespace characters, an `XmlException` is thrown with information about the first invalid character encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-486">Im folgenden Beispiel wird die <xref:System.Xml.XmlConvert.VerifyWhitespace%2A> Methode, um ein ungültiges Zeichen in einem Startelement zugewiesenen Wert erkannt.</span><span class="sxs-lookup"><span data-stu-id="603a6-486">The following example uses the <xref:System.Xml.XmlConvert.VerifyWhitespace%2A> method to detect the presence of an invalid character in a value assigned to the start element.</span></span>  
  
 [!code-csharp[XmlConvert.NewVerify#5](~/samples/snippets/csharp/VS_Snippets_Data/xmlconvert.newverify/cs/xmlconvertnewverify.cs#5)]
 [!code-vb[XmlConvert.NewVerify#5](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlconvert.newverify/vb/xmlconvertnewverify.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyXmlChars">
      <MemberSignature Language="C#" Value="public static string VerifyXmlChars (string content);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string VerifyXmlChars(string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlConvert.VerifyXmlChars(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VerifyXmlChars (content As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ VerifyXmlChars(System::String ^ content);" />
      <MemberSignature Language="F#" Value="static member VerifyXmlChars : string -&gt; string" Usage="System.Xml.XmlConvert.VerifyXmlChars content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="603a6-487">Der <see cref="T:System.String" /> mit den zu überprüfenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-487">
              <see cref="T:System.String" /> that contains characters to verify.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="603a6-488">Gibt die übergebene Zeichenfolge zurück, wenn alle Zeichen und Ersatzzeichenpaare im Zeichenfolgenargument gültige XML-Zeichen sind, andernfalls wird eine <see langword="XmlException" /> mit Informationen zum ersten ungültigen Zeichen ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-488">Returns the passed-in string if all the characters and surrogate pair characters in the string argument are valid XML characters, otherwise an <see langword="XmlException" /> is thrown with information on the first invalid character encountered.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="603a6-489">Gibt die übergebene Zeichenfolge zurück, wenn alle Zeichen und Ersatzzeichenpaare im Zeichenfolgenargument gültige XML-Zeichen sind, andernfalls wird eine <see langword="XmlException" /> mit Informationen zum ersten ungültigen Zeichen ausgelöst.</span>
          <span class="sxs-lookup">
            <span data-stu-id="603a6-489">Returns the passed-in string if all the characters and surrogate-pair characters in the string argument are valid XML characters, otherwise an <see langword="XmlException" /> is thrown with information on the first invalid character encountered.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="603a6-490">Keine anderen Werte als das übergebene Argument sollte zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="603a6-490">No other values than the passed in argument should be returned.</span></span> <span data-ttu-id="603a6-491">Finden Sie unter [XML 1.0-Spezifikation (vierte Ausgabe)](http://go.microsoft.com/fwlink/?LinkID=147985) Produktion [2] `Char` Weitere Informationen zu den zulässigen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="603a6-491">See [XML 1.0 spec (fourth edition)](http://go.microsoft.com/fwlink/?LinkID=147985) production [2] `Char` for details on the allowed characters.</span></span>  
  
 <span data-ttu-id="603a6-492">Wenn der Parameter null ist, ist ein `ArgumentNullException` ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="603a6-492">If the parameter is null, an `ArgumentNullException` will be thrown.</span></span> <span data-ttu-id="603a6-493">Wenn keines der Zeichen nicht gültiges Xml-Zeichen sind eine `XmlException` mit Informationen zum ersten ungültigen Zeichen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="603a6-493">If any of the characters are not valid xml characters, an `XmlException` is thrown with information on the first invalid character encountered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="603a6-494">Im folgenden Beispiel wird die <xref:System.Xml.XmlConvert.VerifyXmlChars%2A> Methode, die ein unzulässiges Zeichen im Startelement erkennt.</span><span class="sxs-lookup"><span data-stu-id="603a6-494">The following example uses the <xref:System.Xml.XmlConvert.VerifyXmlChars%2A> method used to detect an illegal character in the start element.</span></span>  
  
 [!code-csharp[XmlConvert.NewVerify#3](~/samples/snippets/csharp/VS_Snippets_Data/xmlconvert.newverify/cs/xmlconvertnewverify.cs#3)]
 [!code-vb[XmlConvert.NewVerify#3](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlconvert.newverify/vb/xmlconvertnewverify.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>