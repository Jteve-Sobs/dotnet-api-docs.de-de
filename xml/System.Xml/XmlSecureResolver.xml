<Type Name="XmlSecureResolver" FullName="System.Xml.XmlSecureResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf494526e43d9a6ce08cc8f4eff7e5eab02dc339" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57941502" /></Metadata><TypeSignature Language="C#" Value="public class XmlSecureResolver : System.Xml.XmlResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSecureResolver extends System.Xml.XmlResolver" />
  <TypeSignature Language="DocId" Value="T:System.Xml.XmlSecureResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSecureResolver&#xA;Inherits XmlResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSecureResolver : System::Xml::XmlResolver" />
  <TypeSignature Language="F#" Value="type XmlSecureResolver = class&#xA;    inherit XmlResolver" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.XmlResolver</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Schützt eine andere Implementierung von <see cref="T:System.Xml.XmlResolver" />, indem das <see cref="T:System.Xml.XmlResolver" />-Objekt umschlossen wird und der Zugriff auf die Ressourcen beschränkt wird, auf die der zugrunde liegende <see cref="T:System.Xml.XmlResolver" /> Zugriff hat.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Xml.XmlUrlResolver>-Klasse wird als Standard zum Auflösen für alle Klassen im <xref:System.Xml>-Namespace verwendet. Es wird verwendet, zum Laden von XML-Dokumenten und zum Auflösen von externer Ressourcen wie Entitäten, DTDs oder Schemata und Direktiven importiert oder eingefügt werden soll.  
  
 Sie können diesen Standardwert überschreiben, indem Sie angeben der <xref:System.Xml.XmlResolver> Objekt, das verwendet. Z. B., wenn Sie die Ressourcen zu beschränken möchten, die die zugrunde liegende <xref:System.Xml.XmlResolver> zugreifen können, können Sie mithilfe einer <xref:System.Xml.XmlSecureResolver> Objekt.  
  
 <xref:System.Xml.XmlSecureResolver> Umschließt eine konkrete Implementierung der <xref:System.Xml.XmlResolver> und beschränkt die Ressourcen, die die zugrunde liegende <xref:System.Xml.XmlResolver> hat Zugriff auf. Z. B. <xref:System.Xml.XmlSecureResolver> hat die Möglichkeit, die domänenübergreifende Umleitung verhindern von einem eingebetteten Uniform Resource Identifier (URI)-Verweis erfolgt.  
  
 Beim Erstellen einer <xref:System.Xml.XmlSecureResolver> Objekt, Sie geben Sie einen gültigen <xref:System.Xml.XmlResolver> -Implementierung zusammen mit einer URL, eine Instanz ein Beweisobjekt oder einen Berechtigungssatz auf, die von verwendet wird die <xref:System.Xml.XmlSecureResolver> zum Bestimmen der Sicherheit. Entweder ein <xref:System.Security.PermissionSet?displayProperty=nameWithType> wird generiert, oder der vorhandenen Dateigruppe verwendet wird und <xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=nameWithType> aufgerufen wird, um den zugrunde liegenden schützen <xref:System.Xml.XmlResolver>.  
  
> [!IMPORTANT]
>  <xref:System.Xml.XmlSecureResolver>-Objekte können vertrauliche Informationen (z. B. Anmeldeinformationen des Benutzers) enthalten. Sollten Sie vorsichtig beim Zwischenspeichern von sein <xref:System.Xml.XmlSecureResolver> Objekte aus, und übergeben Sie die <xref:System.Xml.XmlSecureResolver> Objekt, das eine nicht vertrauenswürdige Komponente.  
  
> [!IMPORTANT]
>  Es gibt Unterschiede in der Sicherheitsinfrastruktur für Code, die auf .NET Framework common Language Runtime (CLR) ausgeführt wird und für Code, der ausgeführt wird, in der CLR, die in Microsoft SQL Server 2005 integriert ist. Dies kann auf zwei Fälle führen, in denen Code entwickelt wurden, für die .NET Framework-CLR anders ausgeführt wird, wenn auf dem SQL Server verwendet die CLR integriert. Einer dieser Unterschiede wirkt sich auf die <xref:System.Xml.XmlSecureResolver> Klasse, wenn Sie Beweise, die in einer URL basiert (d. h. bei Verwendung von der <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29> Methode oder die <xref:System.Xml.XmlSecureResolver.%23ctor%2A> Konstruktor). Die Richtlinie Mechanismus von SQL Server integrierten CLR Lösung verwendet keine der <xref:System.Security.Policy.Url> oder <xref:System.Security.Policy.Zone> Informationen. Stattdessen erteilt anhand der GUID, die der Server hinzufügt, wenn Assemblys geladen werden. Bei Verwendung der <xref:System.Xml.XmlSecureResolver> in der SQL Server integrierten CLR verwenden, geben Sie alle erforderlichen Beweise direkt mithilfe eines angegebenen <xref:System.Security.PermissionSet>.  
  
## <a name="to-use-a-secure-resolver"></a>Verwenden Sie einen sicheren Konfliktlöser  
  
1.  Erstellen Sie ein <xref:System.Xml.XmlSecureResolver>-Objekt mit dem richtigen Berechtigungssatz.  
  
2.  Erstellen Sie ein <xref:System.Xml.XmlReaderSettings>-Objekt, das das <xref:System.Xml.XmlSecureResolver>-Objekt verwendet.  
  
     [!code-csharp[XmlSecureResolver_Samples#5a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5a)]
     [!code-vb[XmlSecureResolver_Samples#5a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5a)]  
  
3.  Übergeben Sie die <xref:System.Xml.XmlReaderSettings> -Objekt an die <xref:System.Xml.XmlReader.Create%2A> Methode, die Sie beim Erstellen der <xref:System.Xml.XmlReader> Objekt.  
  
     [!code-csharp[XmlSecureResolver_Samples#5b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5b)]
     [!code-vb[XmlSecureResolver_Samples#5b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5b)]  
  
## <a name="to-restrict-access-by-using-a-url"></a>Zum Einschränken des Zugriffs mithilfe einer URL  
 Verwenden der <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> Konstruktor zur Erstellung einer <xref:System.Xml.XmlSecureResolver> -Objekt, das nur die lokale Intranetsite zugreifen darf.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
## <a name="to-restrict-access-by-using-a-permission-set"></a>Zum Einschränken des Zugriffs mithilfe eines Berechtigungssatzes  
  
1.  Erstellen eines <xref:System.Net.WebPermission>-Objekts  
  
     [!code-csharp[XmlSecureResolver_Samples#4a](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4a)]
     [!code-vb[XmlSecureResolver_Samples#4a](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4a)]  
  
2.  Geben Sie die URLs, die Sie Zugriff auf zulassen möchten.  
  
     [!code-csharp[XmlSecureResolver_Samples#4b](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4b)]
     [!code-vb[XmlSecureResolver_Samples#4b](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4b)]  
  
3.  Fügen Sie dem <xref:System.Security.PermissionSet>-Objekt die Webberechtigungen hinzu.  
  
     [!code-csharp[XmlSecureResolver_Samples#4c](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4c)]
     [!code-vb[XmlSecureResolver_Samples#4c](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4c)]  
  
4.  Verwenden der <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> Konstruktor zur Erstellung einer <xref:System.Xml.XmlSecureResolver> Objekt, indem Sie mithilfe des Berechtigungssatzes.  
  
     [!code-csharp[XmlSecureResolver_Samples#4d](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4d)]
     [!code-vb[XmlSecureResolver_Samples#4d](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4d)]  
  
     Finden Sie unter den <xref:System.Xml.XmlSecureResolver.%23ctor%2A> Referenzseite für ein weiteres Beispiel.  
  
## <a name="to-restrict-access-by-using-evidence"></a>Zum Einschränken des Zugriffs mithilfe der Beweise  
 Sie können den Zugriff mithilfe der <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Konstruktor und die Angabe <xref:System.Security.Policy.Evidence>. Die <xref:System.Security.Policy.Evidence>-Klasse wird zum Erstellen der <xref:System.Security.PermissionSet>-Klasse verwendet, die auf die zugrunde liegende <xref:System.Xml.XmlResolver>-Klasse angewendet wird. Die <xref:System.Xml.XmlSecureResolver>-Klasse ruft vor dem Öffnen von Ressourcen die <xref:System.Security.PermissionSet.PermitOnly%2A>-Methode der erstellten <xref:System.Security.PermissionSet>-Klasse auf.  
  
 Hier sind einige allgemeinen Szenarien und den Typ der Beweis, der für jede Eigenschaft angeben:  
  
-   Wenn Sie in einer vollständig vertrauenswürdigen Umgebung arbeiten, verwenden Sie die Assembly, um den Beweis zu erstellen:  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   Wenn Sie in einer teilweise vertrauenswürdigen Umgebung arbeiten, Sie verfügen über Code oder Daten aus einer externen Quelle, und Sie kennen den Ursprung der externen Quelle und einen überprüfbaren URI, den URI verwenden, um den Beweis zu erstellen:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   Wenn Sie in arbeiten einer teilweise vertrauenswürdigen Umgebung, und Sie verfügen über Code oder Daten aus einer externen Quelle, aber Sie wissen nicht, den Ursprung der externen Quelle, entweder:  
  
     Setzen Sie den `evidence`-Parameter auf `null`. Dadurch kann nicht mehr auf Ressourcen zugegriffen werden.  
  
     - oder -  
  
     Wenn die Anwendung den Zugriff auf einige Ressourcen verlangt, fordern Sie einen Beweis vom Aufrufer an.  
  
## <a name="to-use-the-secure-resolver-to-load-an-xslt-style-sheet"></a>Um den sicheren Resolver zu verwenden, um ein XSLT-Stylesheet laden  
  
1.  Erstellen Sie ein <xref:System.Xml.XmlSecureResolver>-Objekt mit dem richtigen Berechtigungssatz.  
  
2.  Übergeben Sie die <xref:System.Xml.XmlSecureResolver> an die <xref:System.Xml.Xsl.XslCompiledTransform.Load%2A>-Methode.  
  
     [!code-csharp[XmlSecureResolver_Samples#6](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#6)]
     [!code-vb[XmlSecureResolver_Samples#6](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#6)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Diese Klasse verfügt über eine vererbungsanforderung. Volle Vertrauenswürdigkeit ist erforderlich, um die von erben die <see cref="T:System.Xml.XmlSecureResolver" /> Klasse.</para></block>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlSecureResolver" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die drei Konstruktoren geben drei Arten von zugriffseinschränkungen:  
  
-   Die <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> Konstruktor schränkt den Zugriff mithilfe einer URL.  
  
-   Die <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29> Konstruktor schränkt den Zugriff mithilfe eines Berechtigungssatzes.  
  
-   Die <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29> Konstruktor schränkt den Zugriff mithilfe von Beweisen.  
  
 Finden Sie in den Konstruktor Referenzthemen für die Beispiele für diese Arten von Einschränkungen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::PermissionSet ^ permissionSet);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * System.Security.PermissionSet -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, permissionSet)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resolver">Der XML-Resolver, der von <see cref="T:System.Xml.XmlSecureResolver" /> umschlossen ist.</param>
        <param name="permissionSet">Die Berechtigung, die für die Anwendung auf den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> festgelegt ist. Der <see cref="T:System.Xml.XmlSecureResolver" /> ruft die <see cref="M:System.Security.PermissionSet.PermitOnly" />-Methode in der Berechtigung auf, die vor dem Aufruf der <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" />-Methode im zugrunde liegenden XML Resolver festgelegt wurde.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlSecureResolver" />-Klasse mit dem angegebenen <see cref="T:System.Xml.XmlResolver" /> und <see cref="T:System.Security.PermissionSet" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Xml.XmlSecureResolver> Objekt, indem Sie einen benutzerdefinierten Berechtigungssatz auf.  
  
 [!code-cpp[XmlSecureResolver.cctor#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.cctor/CPP/secresolver.cpp#1)]
 [!code-csharp[XmlSecureResolver.cctor#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.cctor/CS/secresolver.cs#1)]
 [!code-vb[XmlSecureResolver.cctor#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.cctor/VB/secresolver.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
        <altmember cref="T:System.Security.Policy.Evidence" />
        <altmember cref="T:System.Net.WebPermission" />
        <altmember cref="T:System.Security.SecurityManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * System.Security.Policy.Evidence -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, evidence)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="resolver">Der XML-Resolver, der von <see cref="T:System.Xml.XmlSecureResolver" /> umschlossen ist.</param>
        <param name="evidence">Der Beweis, der zum Erstellen von <see cref="T:System.Security.PermissionSet" /> verwendet wird, welcher auf den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> angewendet wird. Der <see cref="T:System.Xml.XmlSecureResolver" /> ruft die <see cref="M:System.Security.PermissionSet.PermitOnly" />-Methode für das erstellte <see cref="T:System.Security.PermissionSet" /> auf, bevor <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> aufgerufen wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlSecureResolver" />-Klasse mit dem angegebenen <see cref="T:System.Xml.XmlResolver" /> und <see cref="T:System.Security.Policy.Evidence" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Hier sind einige mögliche Szenarios sowie den Beweistyp für jedes Szenario bereit:  
  
-   Wenn Sie in einer vollständig vertrauenswürdigen Umgebung arbeiten, verwenden Sie die Assembly, um den Beweis zu erstellen:  
  
     [!code-csharp[XmlSecureResolver_Samples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)]
     [!code-vb[XmlSecureResolver_Samples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)]  
  
-   Wenn Sie in einer teilweise vertrauenswürdigen Umgebung arbeiten, Sie verfügen über Code oder Daten aus einer externen Quelle, und Sie kennen den Ursprung der externen Quelle und einen überprüfbaren URI, den URI verwenden, um den Beweis zu erstellen:  
  
     [!code-csharp[XmlSecureResolver_Samples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)]
     [!code-vb[XmlSecureResolver_Samples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)]  
  
-   Wenn Sie in arbeiten einer teilweise vertrauenswürdigen Umgebung, und Sie verfügen über Code oder Daten aus einer externen Quelle, aber Sie wissen nicht, den Ursprung der externen Quelle, entweder:  
  
     Setzen Sie den `evidence`-Parameter auf `null`. Dadurch kann nicht mehr auf Ressourcen zugegriffen werden.  
  
     - oder -  
  
     Wenn die Anwendung den Zugriff auf einige Ressourcen verlangt, fordern Sie einen Beweis vom Aufrufer an.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSecureResolver (System.Xml.XmlResolver resolver, string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlResolver resolver, string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.#ctor(System.Xml.XmlResolver,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resolver As XmlResolver, securityUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSecureResolver(System::Xml::XmlResolver ^ resolver, System::String ^ securityUrl);" />
      <MemberSignature Language="F#" Value="new System.Xml.XmlSecureResolver : System.Xml.XmlResolver * string -&gt; System.Xml.XmlSecureResolver" Usage="new System.Xml.XmlSecureResolver (resolver, securityUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resolver" Type="System.Xml.XmlResolver" />
        <Parameter Name="securityUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resolver">Der XML-Resolver, der von <see cref="T:System.Xml.XmlSecureResolver" /> umschlossen ist.</param>
        <param name="securityUrl">Die URL zum Erstellen des <see cref="T:System.Security.PermissionSet" />, das auf den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> angewendet wird. Der <see cref="T:System.Xml.XmlSecureResolver" /> ruft <see cref="M:System.Security.PermissionSet.PermitOnly" /> für das erstellte <see cref="T:System.Security.PermissionSet" /> auf, bevor <see cref="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" /> für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> aufgerufen wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Xml.XmlSecureResolver" />-Klasse mit dem angegebenen <see cref="T:System.Xml.XmlResolver" /> und URL.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Es gibt Unterschiede in der Sicherheitsinfrastruktur für Code, die auf .NET Framework common Language Runtime (CLR) ausgeführt wird und für Code, der ausgeführt wird, in der CLR, die in Microsoft SQL Server 2005 integriert ist. Dies kann auf zwei Fälle führen, in denen Code entwickelt wurden, für die .NET Framework-CLR anders ausgeführt wird, wenn auf dem SQL Server verwendet die CLR integriert. Einer dieser Unterschiede wirkt sich auf die <xref:System.Xml.XmlSecureResolver> Klasse, wenn Sie Beweise, die in einer URL basiert (d. h. bei Verwendung von der <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> Methode oder die <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> Konstruktor). Die Richtlinie Mechanismus von SQL Server integrierten CLR Lösung verwendet keine der <xref:System.Security.Policy.Url> oder <xref:System.Security.Policy.Zone> Informationen. Stattdessen erteilt anhand der GUID, die der Server hinzufügt, wenn Assemblys geladen werden. Bei Verwendung der <xref:System.Xml.XmlSecureResolver> in der SQL Server integrierten CLR verwenden, geben Sie alle erforderlichen Beweise direkt mithilfe eines angegebenen <xref:System.Security.PermissionSet>.  
  
   
  
## Examples  
 Dieses Beispiel verwendet die <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> Konstruktor zur Erstellung einer <xref:System.Xml.XmlSecureResolver> -Objekt, das nur die lokale Intranetsite zugreifen darf.  
  
 [!code-csharp[XmlSecureResolver_Samples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)]
 [!code-vb[XmlSecureResolver_Samples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEvidenceForUrl">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.Evidence CreateEvidenceForUrl (string securityUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.Evidence CreateEvidenceForUrl(string securityUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.CreateEvidenceForUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateEvidenceForUrl (securityUrl As String) As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::Evidence ^ CreateEvidenceForUrl(System::String ^ securityUrl);" />
      <MemberSignature Language="F#" Value="static member CreateEvidenceForUrl : string -&gt; System.Security.Policy.Evidence" Usage="System.Xml.XmlSecureResolver.CreateEvidenceForUrl securityUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityUrl" Type="System.String" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="securityUrl">Die URL, die verwendet wird, um den Beweis zu erstellen.</param>
        <summary>Erstellt einen Beweise mit der angegebenen URL.</summary>
        <returns>Der entsprechend den Standardrichtlinien durch die angegebene URL generierte Beweis.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Es gibt Unterschiede in der Sicherheitsinfrastruktur für Code, die auf .NET Framework common Language Runtime (CLR) ausgeführt wird und für Code, der ausgeführt wird, in der CLR, die in Microsoft SQL Server 2005 integriert ist. Dies kann auf zwei Fälle führen, in denen Code entwickelt wurden, für die .NET Framework-CLR anders ausgeführt wird, wenn auf dem SQL Server verwendet die CLR integriert. Einer dieser Unterschiede wirkt sich auf die <xref:System.Xml.XmlSecureResolver> Klasse, wenn Sie Beweise, die in einer URL basiert (d. h. bei Verwendung von der <xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A> Methode oder die <xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29> Konstruktor). Die Richtlinie Auflösung Mechanismus von SQL Server integrierten CLR verwendet nicht die <xref:System.Security.Policy.Url> oder <xref:System.Security.Policy.Zone> Informationen. Stattdessen erteilt anhand der GUID, die der Server hinzufügt, wenn Assemblys geladen werden. Bei Verwendung der <xref:System.Xml.XmlSecureResolver> in der SQL Server integrierten CLR verwenden, geben Sie alle erforderlichen Beweise direkt mithilfe eines angegebenen <xref:System.Security.PermissionSet>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public override System.Net.ICredentials Credentials { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Xml.XmlSecureResolver.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::ICredentials ^ Credentials {  void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials" Usage="System.Xml.XmlSecureResolver.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Legt Anmeldeinformationen zum Authentifizieren von Webanforderungen fest.</summary>
        <value>Die Anmeldeinformationen zum Authentifizieren von Webanforderungen. Der <see cref="T:System.Xml.XmlSecureResolver" /> legt die angegebenen Anmeldeinformationen für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> fest. Wenn diese Eigenschaft nicht festgelegt ist, wird als Standardwert <see langword="null" /> verwendet, was bedeutet, dass <see cref="T:System.Xml.XmlSecureResolver" /> über keine Benutzeranmeldeinformationen verfügt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Xml.XmlSecureResolver> mit Standardanmeldeinformationen zu beheben, und öffnen die erforderlichen Netzwerkressourcen der <xref:System.Xml.XmlTextReader>.  
  
 [!code-cpp[XmlSecureResolver.Credentials#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSecureResolver.Credentials/CPP/secresolver2.cpp#1)]
 [!code-csharp[XmlSecureResolver.Credentials#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver.Credentials/CS/secresolver2.cs#1)]
 [!code-vb[XmlSecureResolver.Credentials#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver.Credentials/VB/secresolver2.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.NetworkCredential" />
        <altmember cref="T:System.Net.CredentialCache" />
        <altmember cref="P:System.Net.CredentialCache.DefaultCredentials" />
      </Docs>
    </Member>
    <Member MemberName="GetEntity">
      <MemberSignature Language="C#" Value="public override object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetEntity(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntity (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetEntity(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntity : Uri * string * Type -&gt; obj" Usage="xmlSecureResolver.GetEntity (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" />
        <Parameter Name="role" Type="System.String" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
        <param name="role">Derzeit nicht verwendet.</param>
        <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Version gibt nur <see cref="T:System.IO.Stream" />-Objekte zurück.</param>
        <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, einen URI zu. Diese Methode legt temporär das im Konstruktor durch Aufruf von <see cref="T:System.Security.PermissionSet" /> erstellte <see cref="M:System.Security.PermissionSet.PermitOnly" /> fest, bevor <see langword="GetEntity" /> für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> zum Öffnen der Ressource aufgerufen wird.</summary>
        <returns>Der durch Aufruf von <see langword="GetEntity" /> für die zugrunde liegende <see cref="T:System.Xml.XmlResolver" />-Klasse zurückgegebene Datenstrom. Wenn ein anderer Typ als <see cref="T:System.IO.Stream" /> angegeben ist, gibt die Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Anwendung kann die Gefahr von DOS-Service-Angriffen für Arbeitsspeicher die <xref:System.Xml.XmlSecureResolver.GetEntity%2A> Methode durch die Implementierung einer <xref:System.Runtime.InteropServices.ComTypes.IStream> , die die Anzahl der gelesenen Bytes beschränkt. Dadurch wird Schutz für Situationen dar, in denen bösartiger Code versucht, einen unendlichen Stream von Bytes, übergeben, die <xref:System.Xml.XmlSecureResolver.GetEntity%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException"><paramref name="ofObjectToReturn" /> ist weder <see langword="null" /> noch vom Typ <see cref="T:System.IO.Stream" />.</exception>
        <exception cref="T:System.UriFormatException">Der angegebene URI ist kein absoluter URI.</exception>
        <exception cref="T:System.NullReferenceException"><paramref name="absoluteUri" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Exception">Es ist ein Laufzeitfehler aufgetreten (z. B. eine unterbrochene Serververbindung).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntityAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;object&gt; GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;object&gt; GetEntityAsync(class System.Uri absoluteUri, string role, class System.Type ofObjectToReturn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.GetEntityAsync(System.Uri,System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEntityAsync (absoluteUri As Uri, role As String, ofObjectToReturn As Type) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task&lt;System::Object ^&gt; ^ GetEntityAsync(Uri ^ absoluteUri, System::String ^ role, Type ^ ofObjectToReturn);" />
      <MemberSignature Language="F#" Value="override this.GetEntityAsync : Uri * string * Type -&gt; System.Threading.Tasks.Task&lt;obj&gt;" Usage="xmlSecureResolver.GetEntityAsync (absoluteUri, role, ofObjectToReturn)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="absoluteUri" Type="System.Uri" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="role" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ofObjectToReturn" Type="System.Type" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="absoluteUri">Der von <see cref="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" /> zurückgegebene URI.</param>
        <param name="role">Derzeit nicht verwendet.</param>
        <param name="ofObjectToReturn">Der Typ des zurückzugebenden Objekts. Die aktuelle Version gibt nur <see cref="T:System.IO.Stream" />-Objekte zurück.</param>
        <summary>Ordnet einem Objekt, das die eigentliche Ressource enthält, asynchron einen URI zu.</summary>
        <returns>Der durch Aufruf von <see langword="GetEntity" /> für die zugrunde liegende <see cref="T:System.Xml.XmlResolver" />-Klasse zurückgegebene Datenstrom. Wenn ein anderer Typ als <see cref="T:System.IO.Stream" /> angegeben ist, gibt die Methode <see langword="null" /> zurück.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveUri">
      <MemberSignature Language="C#" Value="public override Uri ResolveUri (Uri baseUri, string relativeUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Uri ResolveUri(class System.Uri baseUri, string relativeUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResolveUri (baseUri As Uri, relativeUri As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Uri ^ ResolveUri(Uri ^ baseUri, System::String ^ relativeUri);" />
      <MemberSignature Language="F#" Value="override this.ResolveUri : Uri * string -&gt; Uri" Usage="xmlSecureResolver.ResolveUri (baseUri, relativeUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="relativeUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUri">Der Basis-URI, der zum Auflösen des relativen URIs verwendet wird.</param>
        <param name="relativeUri">Der aufzulösende URI. Der URI kann absolut oder relativ sein. Wenn der URI absolut ist, ersetzt dieser Wert den <paramref name="baseUri" />-Wert. Wenn der URI relativ ist, ergibt der Wert in Verbindung mit dem <paramref name="baseUri" /> einen absoluten URI.</param>
        <summary>Löst durch Aufruf von <see langword="ResolveUri" /> für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" /> den absoluten URI der Basis sowie relative URIs auf.</summary>
        <returns>Der absolute URI oder <see langword="null" />, wenn der relative URI nicht aufgelöst werden kann (zurückgegeben durch Aufruf von <see langword="ResolveUri" /> für den zugrunde liegenden <see cref="T:System.Xml.XmlResolver" />).</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="relativeUri" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>