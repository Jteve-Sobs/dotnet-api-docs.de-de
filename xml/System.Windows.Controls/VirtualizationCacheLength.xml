<Type Name="VirtualizationCacheLength" FullName="System.Windows.Controls.VirtualizationCacheLength">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b32ce8cb7d14354ad6bfac5207ddc7f559442cd6" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52604440" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct VirtualizationCacheLength : IEquatable&lt;System.Windows.Controls.VirtualizationCacheLength&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit VirtualizationCacheLength extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Controls.VirtualizationCacheLength&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.VirtualizationCacheLength" />
  <TypeSignature Language="VB.NET" Value="Public Structure VirtualizationCacheLength&#xA;Implements IEquatable(Of VirtualizationCacheLength)" />
  <TypeSignature Language="C++ CLI" Value="public value class VirtualizationCacheLength : IEquatable&lt;System::Windows::Controls::VirtualizationCacheLength&gt;" />
  <TypeSignature Language="F#" Value="type VirtualizationCacheLength = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Controls.VirtualizationCacheLength&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Controls.VirtualizationCacheLengthConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0da22-101">Stellt die Maßeinheiten für die angefügte Eigenschaft von <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0da22-101">Represents the measurements for the <see cref="P:System.Windows.Controls.VirtualizingPanel.CacheLength" /> attached property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da22-102">Die <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=nameWithType> angefügte Eigenschaft gibt die Menge des Speicherplatzes an, in dem eine <xref:System.Windows.Controls.VirtualizingPanel> vor oder nach die Ansicht port (den Bereich, in dem Elemente angezeigt werden), die Elemente virtualisiert.</span><span class="sxs-lookup"><span data-stu-id="0da22-102">The <xref:System.Windows.Controls.VirtualizingPanel.CacheLength%2A?displayProperty=nameWithType> attached property specifies the amount of space in which a <xref:System.Windows.Controls.VirtualizingPanel> virtualizes the items before or after the view port (the area in which items are visible).</span></span>  <span data-ttu-id="0da22-103">Können Sie angeben, einheitlichen Länge des Cache erstellen eine <xref:System.Windows.Controls.VirtualizationCacheLength> mithilfe des Konstruktors, der einen einzelnen Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="0da22-103">You can specify uniform cache length my creating a <xref:System.Windows.Controls.VirtualizationCacheLength> by using the constructor that takes a single parameter.</span></span>  <span data-ttu-id="0da22-104">Sie können den Konstruktor verwenden, die akzeptiert zwei Parameter geben unterschiedliche Werte für die <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> und <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0da22-104">You can use the constructor that takes two parameters to specify different values for the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0da22-105">Erstellt eine neue Instanz der <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-105">Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizationCacheLength (double cacheBeforeAndAfterViewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 cacheBeforeAndAfterViewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheBeforeAndAfterViewport As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VirtualizationCacheLength(double cacheBeforeAndAfterViewport);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.VirtualizationCacheLength : double -&gt; System.Windows.Controls.VirtualizationCacheLength" Usage="new System.Windows.Controls.VirtualizationCacheLength cacheBeforeAndAfterViewport" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheBeforeAndAfterViewport" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="cacheBeforeAndAfterViewport">
          <span data-ttu-id="0da22-106">Die Größe des Cache vor und nach dem Viewport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-106">The size of the cache before and after the viewport.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0da22-107">Erstellt eine neue Instanz der <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />-Klasse mit einer einheitlichen Länge des Cache für jede Seite des Viewports.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-107">Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class with a uniform cache length for each side of the viewport.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VirtualizationCacheLength (double cacheBeforeViewport, double cacheAfterViewport);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 cacheBeforeViewport, float64 cacheAfterViewport) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cacheBeforeViewport As Double, cacheAfterViewport As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VirtualizationCacheLength(double cacheBeforeViewport, double cacheAfterViewport);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.VirtualizationCacheLength : double * double -&gt; System.Windows.Controls.VirtualizationCacheLength" Usage="new System.Windows.Controls.VirtualizationCacheLength (cacheBeforeViewport, cacheAfterViewport)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cacheBeforeViewport" Type="System.Double" />
        <Parameter Name="cacheAfterViewport" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="cacheBeforeViewport">
          <span data-ttu-id="0da22-108">Die Größe des Caches vor dem Viewport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-108">The size of the cache before the viewport.</span>
          </span>
        </param>
        <param name="cacheAfterViewport">
          <span data-ttu-id="0da22-109">Die Größe des Caches nach dem Viewport.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-109">The size of the cache after the viewport.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0da22-110">Erstellt eine neue Instanz der <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />-Klasse mit einer angegebenen Länge des Cache für jede Seite des Viewports.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-110">Creates a new instance of the <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> class with the specified cache lengths for each side of the viewport.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheAfterViewport">
      <MemberSignature Language="C#" Value="public double CacheAfterViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CacheAfterViewport" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheAfterViewport As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CacheAfterViewport { double get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheAfterViewport : double" Usage="System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0da22-111">Ruft die Größe des Caches vor dem Viewport ab, wenn <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-111">Gets the size of the cache before the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0da22-112">Die Größe des Caches nach dem Viewport, wenn <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-112">The size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da22-113">In diesem Kontext "virtualisieren" bezieht sich auf eine Technik, mit dem eine Teilmenge der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Elemente aus generiert wird, eine größere Anzahl von Datenelementen, die basierend auf welche Elemente auf dem Bildschirm sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="0da22-113">In this context, "virtualize" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen.</span></span> <span data-ttu-id="0da22-114">Verwenden Sie einen Cache zum Generieren von vermeiden [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Elemente, wie sie in die Ansicht gescrollt werden.</span><span class="sxs-lookup"><span data-stu-id="0da22-114">Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elements as they're scrolled into view.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheBeforeViewport">
      <MemberSignature Language="C#" Value="public double CacheBeforeViewport { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 CacheBeforeViewport" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheBeforeViewport As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double CacheBeforeViewport { double get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheBeforeViewport : double" Usage="System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0da22-115">Ruft die Größe des Caches nach dem Viewport ab, wenn <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-115">Gets the size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0da22-116">Die Größe des Caches nach dem Viewport, wenn <see cref="T:System.Windows.Controls.VirtualizingPanel" /> virtualisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-116">The size of the cache after the viewport when the <see cref="T:System.Windows.Controls.VirtualizingPanel" /> is virtualizing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da22-117">In diesem Kontext "virtualisieren" bezieht sich auf eine Technik, mit dem eine Teilmenge der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Elemente aus generiert wird, eine größere Anzahl von Datenelementen, die basierend auf welche Elemente auf dem Bildschirm sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="0da22-117">In this context, "virtualize" refers to a technique by which a subset of [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements are generated from a larger number of data items based on which items are visible on the screen.</span></span> <span data-ttu-id="0da22-118">Verwenden Sie einen Cache zum Generieren von vermeiden [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Elemente, wie sie in die Ansicht gescrollt werden.</span><span class="sxs-lookup"><span data-stu-id="0da22-118">Use a cache to avoid generating [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elements as they're scrolled into view.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0da22-119">Bestimmt, ob zwei Objekte gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-119">Determines whether two objects are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object oCompare);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object oCompare) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (oCompare As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ oCompare);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="virtualizationCacheLength.Equals oCompare" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oCompare" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oCompare">
          <span data-ttu-id="0da22-120">Das Objekt, das mit der aktuellen <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-120">The object to compare with the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0da22-121">Bestimmt, ob das angegebene Objekt dem aktuellen <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />-Objekt entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-121">Determines whether the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0da22-122">
            <see langword="true" />, wenn das angegebene Objekt und die aktuelle <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-122">
              <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da22-123">Die <xref:System.Windows.Controls.VirtualizationCacheLength> Wertgleichheit überprüft.</span><span class="sxs-lookup"><span data-stu-id="0da22-123">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="0da22-124">D. h. die beiden Objekte gleich sind Wenn ihre <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> Werte gleich sind und ihre <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> Werte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="0da22-124">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Controls.VirtualizationCacheLength cacheLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Controls.VirtualizationCacheLength cacheLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.Equals(System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (cacheLength As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Controls::VirtualizationCacheLength cacheLength);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Controls.VirtualizationCacheLength -&gt; bool" Usage="virtualizationCacheLength.Equals cacheLength" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cacheLength" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cacheLength">
          <span data-ttu-id="0da22-125">Das Objekt, das mit der aktuellen <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-125">The object to compare with the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0da22-126">Bestimmt, ob das angegebene <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> und das aktuelle <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-126">Determines whether the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0da22-127">
            <see langword="true" />, wenn das angegebene Objekt und die aktuelle <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-127">
              <see langword="true" /> if the specified object is equal to the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da22-128">Die <xref:System.Windows.Controls.VirtualizationCacheLength> Wertgleichheit überprüft.</span><span class="sxs-lookup"><span data-stu-id="0da22-128">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="0da22-129">D. h. die beiden Objekte gleich sind Wenn ihre <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> Werte gleich sind und ihre <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> Werte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="0da22-129">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="virtualizationCacheLength.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0da22-130">Ruft einen Hashcode für die aktuelle <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-130">Gets a hash code for the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0da22-131">Ein Hashcode für die aktuelle <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-131">A hash code for the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Controls.VirtualizationCacheLength cl1, valuetype System.Windows.Controls.VirtualizationCacheLength cl2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.op_Equality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cl1 As VirtualizationCacheLength, cl2 As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::VirtualizationCacheLength cl1, System::Windows::Controls::VirtualizationCacheLength cl2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Controls.VirtualizationCacheLength * System.Windows.Controls.VirtualizationCacheLength -&gt; bool" Usage="cl1 = cl2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl1" Type="System.Windows.Controls.VirtualizationCacheLength" />
        <Parameter Name="cl2" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cl1">
          <span data-ttu-id="0da22-132">Das erste zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-132">The first object to compare.</span>
          </span>
        </param>
        <param name="cl2">
          <span data-ttu-id="0da22-133">Das zweite zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-133">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0da22-134">Bestimmt, ob die beiden angegebenen <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />-Objekte gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-134">Determines whether the two specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0da22-135">
            <see langword="true" />, wenn die angegebenen <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-135">
              <see langword="true" /> if the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da22-136">Die <xref:System.Windows.Controls.VirtualizationCacheLength> Wertgleichheit überprüft.</span><span class="sxs-lookup"><span data-stu-id="0da22-136">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="0da22-137">D. h. die beiden Objekte gleich sind Wenn ihre <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> Werte gleich sind und ihre <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> Werte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="0da22-137">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.VirtualizationCacheLength cl1, System.Windows.Controls.VirtualizationCacheLength cl2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Controls.VirtualizationCacheLength cl1, valuetype System.Windows.Controls.VirtualizationCacheLength cl2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.op_Inequality(System.Windows.Controls.VirtualizationCacheLength,System.Windows.Controls.VirtualizationCacheLength)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cl1 As VirtualizationCacheLength, cl2 As VirtualizationCacheLength) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::VirtualizationCacheLength cl1, System::Windows::Controls::VirtualizationCacheLength cl2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Controls.VirtualizationCacheLength * System.Windows.Controls.VirtualizationCacheLength -&gt; bool" Usage="System.Windows.Controls.VirtualizationCacheLength.op_Inequality (cl1, cl2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cl1" Type="System.Windows.Controls.VirtualizationCacheLength" />
        <Parameter Name="cl2" Type="System.Windows.Controls.VirtualizationCacheLength" />
      </Parameters>
      <Docs>
        <param name="cl1">
          <span data-ttu-id="0da22-138">Das erste zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-138">The first object to compare.</span>
          </span>
        </param>
        <param name="cl2">
          <span data-ttu-id="0da22-139">Das zweite zu vergleichende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-139">The second object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0da22-140">Bestimmt, ob die beiden angegebenen <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />-Objekte gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-140">Determines whether the two specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0da22-141">
            <see langword="true" />, wenn die angegebenen <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-141">
              <see langword="true" /> if the specified <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da22-142">Die <xref:System.Windows.Controls.VirtualizationCacheLength> Wertgleichheit überprüft.</span><span class="sxs-lookup"><span data-stu-id="0da22-142">The <xref:System.Windows.Controls.VirtualizationCacheLength> checks for value equality.</span></span>  <span data-ttu-id="0da22-143">D. h. die beiden Objekte gleich sind Wenn ihre <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> Werte gleich sind und ihre <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> Werte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="0da22-143">That is, the two objects are equal if their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> property values are equal and their <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> property values are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.VirtualizationCacheLength.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="virtualizationCacheLength.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0da22-144">Gibt eine Zeichenfolge zurück, die das aktuelle <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />-Objekt darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-144">Returns a string that represents the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0da22-145">Eine Zeichenfolge, die das aktuelle <see cref="T:System.Windows.Controls.VirtualizationCacheLength" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0da22-145">A string that represents the current <see cref="T:System.Windows.Controls.VirtualizationCacheLength" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0da22-146">Die <xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A> Methode gibt eine Zeichenfolge, die den Werten der an die <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> und <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0da22-146">The <xref:System.Windows.Controls.VirtualizationCacheLength.ToString%2A> method returns a string that displays the values of the <xref:System.Windows.Controls.VirtualizationCacheLength.CacheBeforeViewport%2A> and <xref:System.Windows.Controls.VirtualizationCacheLength.CacheAfterViewport%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>