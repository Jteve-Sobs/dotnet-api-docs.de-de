<Type Name="ValidationError" FullName="System.Windows.Controls.ValidationError">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3983959f7cd65468956b3aa4cfe887129722865c" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86822816" /></Metadata><TypeSignature Language="C#" Value="public class ValidationError" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationError extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationError" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationError" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationError" />
  <TypeSignature Language="F#" Value="type ValidationError = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Validierungsfehler dar, der entweder von der Bindungs-Engine erstellt wird, wenn eine <see cref="T:System.Windows.Controls.ValidationRule" /> einen Validierungsfehler meldet, oder explizit über die <see cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />-Methode erstellt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Daten Bindungs Modell ermöglicht es Ihnen, Validierungsregeln dem <xref:System.Windows.Data.Binding> Objekt zuzuordnen. Die Validierung erfolgt bei der Übertragung von Ziel-zu-Quelle-Werten, bevor der Konverter aufgerufen wird. Im Folgenden wird der Prozess der Validierung beschrieben.  
  
1.  Wenn ein Wert von der Ziel Eigenschaft zur Quell Eigenschaft übertragen wird, entfernt die Daten Bindungs-Engine zuerst alle, die <xref:System.Windows.Controls.ValidationError> möglicherweise der <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> angefügten-Eigenschaft des gebundenen Elements hinzugefügt wurden. Anschließend wird überprüft, ob für diese benutzerdefinierte Validierungsregeln definiert sind <xref:System.Windows.Data.Binding> . in diesem Fall wird die-Methode für jedes-Argument <xref:System.Windows.Controls.ValidationRule.Validate%2A> aufgerufen, <xref:System.Windows.Controls.ValidationRule> bis eines von Ihnen einen Fehler verursacht oder alle erfolgreich verlaufen sind.  
  
2.  Wenn eine benutzerdefinierte Regel nicht übergeben wird, erstellt die Bindungs-Engine ein <xref:System.Windows.Controls.ValidationError> -Objekt und fügt es der-Auflistung <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> des gebundenen Elements hinzu. Wenn <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> nicht leer ist, wird die angefügte Eigenschaft <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> des Elements auf `true` festgelegt. Wenn außerdem die <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>-Eigenschaft der <xref:System.Windows.Data.Binding> auf `true` festgelegt ist, löst die Bindungs-Engine das angefügte Ereignis <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> des Elements aus.  
  
3.  Wenn alle Regeln bestanden werden, ruft die Bindungs-Engine dann den Konverter auf, sofern vorhanden.  
  
4.  Wenn der Konverter übergibt, ruft die Bindungs-Engine den Setter der Source-Eigenschaft auf.  
  
5.  Wenn der Bindung ein <xref:System.Windows.Controls.ExceptionValidationRule> zugeordnet ist und während Schritt 3 oder 4 eine Ausnahme ausgelöst wird, prüft die Bindungs-Engine, ob eine vorhanden ist <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> . Sie können den <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> Rückruf verwenden, um einen benutzerdefinierten Handler für die Behandlung von Ausnahmen bereitzustellen. Wenn kein <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> für die <xref:System.Windows.Data.Binding> angegeben ist, erstellt die Bindungs-Engine einen <xref:System.Windows.Controls.ValidationError> mit der Ausnahme und fügt ihn der <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType>-Auflistung des gebundenen Elements hinzu.  
  
 Die angefügte-Eigenschaft wird durch eine gültige Wertübertragung in beide Richtungen (Ziel zur Quelle oder Ziel Quelle) gelöscht <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> .  
  
   
  
## Examples  
 Das folgende Beispiel zeigt einen Stil--Fehler, der eine erstellt <xref:System.Windows.Controls.ToolTip> , die eine Validierungs Fehlermeldung meldet. Die <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> angefügte-Eigenschaft gibt eine Auflistung von- <xref:System.Windows.Controls.ValidationError> Objekten für das gebundene Element zurück.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ValidationRule" />
    <altmember cref="M:System.Windows.Controls.Validation.MarkInvalid(System.Windows.Data.BindingExpressionBase,System.Windows.Controls.ValidationError)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationError" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleInError As ValidationRule, bindingInError As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationError : System.Windows.Controls.ValidationRule * obj -&gt; System.Windows.Controls.ValidationError" Usage="new System.Windows.Controls.ValidationError (ruleInError, bindingInError)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Die Regel, die einen Validierungsfehler gemeldet hat.</param>
        <param name="bindingInError">Das <see cref="T:System.Windows.Data.BindingExpression" />-Objekt oder das <see cref="T:System.Windows.Data.MultiBindingExpression" />-Objekt mit dem Validierungsfehler.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationError" />-Klasse mit den angegebenen Parametern.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleInError As ValidationRule, bindingInError As Object, errorContent As Object, exception As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationError(System::Windows::Controls::ValidationRule ^ ruleInError, System::Object ^ bindingInError, System::Object ^ errorContent, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationError : System.Windows.Controls.ValidationRule * obj * obj * Exception -&gt; System.Windows.Controls.ValidationError" Usage="new System.Windows.Controls.ValidationError (ruleInError, bindingInError, errorContent, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleInError" Type="System.Windows.Controls.ValidationRule" />
        <Parameter Name="bindingInError" Type="System.Object" />
        <Parameter Name="errorContent" Type="System.Object" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="ruleInError">Die Regel, die einen Validierungsfehler gemeldet hat.</param>
        <param name="bindingInError">Das <see cref="T:System.Windows.Data.BindingExpression" />-Objekt oder das <see cref="T:System.Windows.Data.MultiBindingExpression" />-Objekt mit dem Validierungsfehler.</param>
        <param name="errorContent">Informationen zum Fehler.</param>
        <param name="exception">Die Ausnahme, die den Validierungsfehler verursacht hat. Dieser Parameter ist optional und kann auf <see langword="null" /> festgelegt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationError" />-Klasse mit den angegebenen Parametern.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingInError">
      <MemberSignature Language="C#" Value="public object BindingInError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BindingInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.BindingInError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingInError As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BindingInError { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BindingInError : obj" Usage="System.Windows.Controls.ValidationError.BindingInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Data.BindingExpression" />-Objekt oder das <see cref="T:System.Windows.Data.MultiBindingExpression" />-Objekt dieses <see cref="T:System.Windows.Controls.ValidationError" /> ab. Das Objekt wird entweder explizit als ungültig markiert oder es verfügt über eine fehlgeschlagene Validierungsregel.</summary>
        <value>Das <see cref="T:System.Windows.Data.BindingExpression" />-Objekt oder das <see cref="T:System.Windows.Data.MultiBindingExpression" />-Objekt dieses <see cref="T:System.Windows.Controls.ValidationError" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ErrorContent : obj with get, set" Usage="System.Windows.Controls.ValidationError.ErrorContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab oder legt dieses fest, das zusätzliche Kontextinformationen für diesen <see cref="T:System.Windows.Controls.ValidationError" /> bereitstellt, z. B. eine Zeichenfolge mit einer Beschreibung des Fehlers.</summary>
        <value>Ein Objekt, das für diesen <see cref="T:System.Windows.Controls.ValidationError" /> zusätzliche Kontextinformationen bereitstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlTextUsage_ErrorContent"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 Ein Beispiel finden Sie im Beispiel Abschnitt.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt einen Stil--Fehler, der eine erstellt <xref:System.Windows.Controls.ToolTip> , die eine Validierungs Fehlermeldung meldet. Die <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> angefügte-Eigenschaft gibt eine Auflistung von- <xref:System.Windows.Controls.ValidationError> Objekten für das gebundene Element zurück.  
  
 [!code-xaml[DataBindingLab#14](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Windows.Controls.ValidationError.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Exception" />-Objekt ab, das die Ursache für diesen <see cref="T:System.Windows.Controls.ValidationError" /> war, sofern der Fehler das Ergebnis einer Ausnahme ist, oder legt das Objekt fest.</summary>
        <value>Das <see cref="T:System.Exception" />-Objekt, wenn der Fehler das Ergebnis einer Ausnahme ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleInError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationRule RuleInError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ValidationRule RuleInError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationError.RuleInError" />
      <MemberSignature Language="VB.NET" Value="Public Property RuleInError As ValidationRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationRule ^ RuleInError { System::Windows::Controls::ValidationRule ^ get(); void set(System::Windows::Controls::ValidationRule ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RuleInError : System.Windows.Controls.ValidationRule with get, set" Usage="System.Windows.Controls.ValidationError.RuleInError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationRule</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.Controls.ValidationRule" />-Objekt ab, das die Ursache für diesen <see cref="T:System.Windows.Controls.ValidationError" /> war, sofern der Fehler das Ergebnis einer Validierungsregel ist, oder legt das Objekt fest.</summary>
        <value>Das <see cref="T:System.Windows.Controls.ValidationRule" />-Objekt, wenn der Fehler das Ergebnis einer Validierungsregel ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
