<Type Name="ContextMenu" FullName="System.Windows.Controls.ContextMenu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d178cedfd78ddbe11f96df5c9bd345af1dead3dd" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82307428" /></Metadata><TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenu extends System.Windows.Controls.Primitives.MenuBase" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type ContextMenu = class&#xA;    inherit MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContextMenu extends System.Windows.Controls.Primitives.MenuBase" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Opened")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0fc12-101">Stellt ein Popupmenü dar, mit dem ein Steuerelement Funktionen verfügbar machen kann, die spezifisch für den Kontext des Steuerelements sind.</span><span class="sxs-lookup"><span data-stu-id="0fc12-101">Represents a pop-up menu that enables a control to expose functionality that is specific to the context of the control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-102"><xref:System.Windows.Controls.ContextMenu> ist ein <xref:System.Windows.Controls.ItemsControl>, d. h., er kann eine Auflistung von Objekten eines beliebigen Typs (z. b. Zeichenfolge, Bild oder Panel) enthalten.</span><span class="sxs-lookup"><span data-stu-id="0fc12-102"><xref:System.Windows.Controls.ContextMenu> is an <xref:System.Windows.Controls.ItemsControl>, which means it can contain a collection of objects of any type (such as string, image, or panel).</span></span> <span data-ttu-id="0fc12-103">Weitere Informationen finden Sie im Thema zur Klasse <xref:System.Windows.Controls.ItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="0fc12-103">For more information, see the <xref:System.Windows.Controls.ItemsControl> class.</span></span>  
  
 <span data-ttu-id="0fc12-104">Die Eigenschaften der <xref:System.Windows.Controls.ContextMenu>-Klasse werden verwendet, um die Position und das Verhalten des <xref:System.Windows.Controls.ContextMenu>zu definieren.</span><span class="sxs-lookup"><span data-stu-id="0fc12-104">The properties of the <xref:System.Windows.Controls.ContextMenu> class are used to define the position and behavior of the <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 <span data-ttu-id="0fc12-105">Eine <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement> kann eine <xref:System.Windows.Controls.ContextMenu>haben.</span><span class="sxs-lookup"><span data-stu-id="0fc12-105">A <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> can have a <xref:System.Windows.Controls.ContextMenu>.</span></span>  <span data-ttu-id="0fc12-106">Wenn Sie der Eigenschaft <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> oder <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> eine <xref:System.Windows.Controls.ContextMenu> zuweisen, verarbeitet die <xref:System.Windows.Controls.ContextMenuService> Klasse Kontextmenü Vorgänge als Reaktion auf eine Benutzerinteraktion.</span><span class="sxs-lookup"><span data-stu-id="0fc12-106">If you assign a <xref:System.Windows.Controls.ContextMenu> to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> class handles context menu operations in response to user interaction.</span></span> <span data-ttu-id="0fc12-107">Ein Teil der Arbeit, den der <xref:System.Windows.Controls.ContextMenuService> öffnet, ist das Öffnen des <xref:System.Windows.Controls.ContextMenu>, wenn der Benutzer mit der rechten Maustaste auf das Steuerelement klickt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-107">Part of the work the <xref:System.Windows.Controls.ContextMenuService> does is opening the <xref:System.Windows.Controls.ContextMenu> when the user clicks the right mouse button over the control.</span></span>  
  
 <span data-ttu-id="0fc12-108">Die folgenden Eigenschaften werden durch die Klassen <xref:System.Windows.Controls.ContextMenu> und <xref:System.Windows.Controls.ContextMenuService> definiert.</span><span class="sxs-lookup"><span data-stu-id="0fc12-108">The following properties are defined by the <xref:System.Windows.Controls.ContextMenu> and <xref:System.Windows.Controls.ContextMenuService> classes.</span></span>  <span data-ttu-id="0fc12-109">Wenn eine dieser Eigenschaften sowohl für <xref:System.Windows.Controls.ContextMenu> als auch für den <xref:System.Windows.Controls.ContextMenuService>festgelegt ist, wird der Eigenschafts Wert aus der <xref:System.Windows.Controls.ContextMenuService> verwendet.</span><span class="sxs-lookup"><span data-stu-id="0fc12-109">If any of these properties are set on both <xref:System.Windows.Controls.ContextMenu> and the <xref:System.Windows.Controls.ContextMenuService>, the property value from the <xref:System.Windows.Controls.ContextMenuService> is used.</span></span>  
  
-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  
  
 <span data-ttu-id="0fc12-110">Ein <xref:System.Windows.Controls.ContextMenu> wird automatisch in einem <xref:System.Windows.Controls.Primitives.Popup> Steuerelement platziert.</span><span class="sxs-lookup"><span data-stu-id="0fc12-110">A <xref:System.Windows.Controls.ContextMenu> is automatically placed inside a <xref:System.Windows.Controls.Primitives.Popup> control.</span></span> <span data-ttu-id="0fc12-111">Dieses Verhalten kann nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="0fc12-111">This behavior cannot be changed.</span></span>  
  
## <a name="customizing-the-contextmenu-control"></a><span data-ttu-id="0fc12-112">Anpassen des ContextMenu-Steuer Elements</span><span class="sxs-lookup"><span data-stu-id="0fc12-112">Customizing the ContextMenu Control</span></span>  
 <span data-ttu-id="0fc12-113">Um dieselben Eigenschaften Einstellungen auf mehrere <xref:System.Windows.Controls.ContextMenu> Steuerelemente anzuwenden, verwenden Sie die <xref:System.Windows.FrameworkElement.Style%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-113">To apply the same property settings to multiple <xref:System.Windows.Controls.ContextMenu> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="0fc12-114">Sie können die Standard <xref:System.Windows.Controls.ControlTemplate> ändern, um dem Steuerelement eine eindeutige Darstellung zu verschaffen.</span><span class="sxs-lookup"><span data-stu-id="0fc12-114">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="0fc12-115">Weitere Informationen zum Erstellen eines <xref:System.Windows.Controls.ControlTemplate>finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="0fc12-115">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="0fc12-116">Informationen zu den für die <xref:System.Windows.Controls.ContextMenu>spezifischen Teilen und Zuständen finden Sie unter [ContextMenu-Stile und-Vorlagen](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="0fc12-116">To see the parts and states that are specific to the <xref:System.Windows.Controls.ContextMenu>, see [ContextMenu Styles and Templates](~/docs/framework/wpf/controls/contextmenu-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="0fc12-117">Abhängigkeits Eigenschaften für dieses Steuerelement können durch den Standardstil des Steuer Elements festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="0fc12-117">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="0fc12-118">Wenn eine Eigenschaft durch einen Standardstil festgelegt wird, kann sich die Eigenschaft von ihrem Standardwert ändern, wenn das Steuerelement in der Anwendung angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-118">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="0fc12-119">Der Standardstil wird bestimmt, welches Desktop Design verwendet wird, wenn die Anwendung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-119">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="0fc12-120">Weitere Informationen finden Sie unter [standardmäßige WPF](https://go.microsoft.com/fwlink/?LinkID=158252)-Designs.</span><span class="sxs-lookup"><span data-stu-id="0fc12-120">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="0fc12-121">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.ContextMenu> erstellt, die den Text einer <xref:System.Windows.Controls.TextBox>ändert.</span><span class="sxs-lookup"><span data-stu-id="0fc12-121">The following example creates a <xref:System.Windows.Controls.ContextMenu> that manipulates the text of a <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="0fc12-122">Im Beispiel wird veranschaulicht, wie die Ereignisse von <xref:System.Windows.Controls.MenuItem> Objekten in einem <xref:System.Windows.Controls.ContextMenu>abonniert und behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="0fc12-122">The example demonstrates how to subscribe to and handle the events of <xref:System.Windows.Controls.MenuItem> objects in a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-xaml[ContextMenu#Events](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#events)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ContextMenuService" />
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0fc12-123">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Windows.Controls.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-123">Initializes a new instance of the <see cref="T:System.Windows.Controls.ContextMenu" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : System.Windows.RoutedEventHandler " Usage="member this.Closed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-124">Tritt ein, wenn eine bestimmte Instanz eines <see cref="T:System.Windows.Controls.ContextMenu" /> geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-124">Occurs when a particular instance of a <see cref="T:System.Windows.Controls.ContextMenu" /> closes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Closed"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="0fc12-125">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="0fc12-125">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-126">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-126">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  
|<span data-ttu-id="0fc12-127">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="0fc12-127">Routing strategy</span></span>|<span data-ttu-id="0fc12-128">Blasen</span><span class="sxs-lookup"><span data-stu-id="0fc12-128">Bubbling</span></span>|  
|<span data-ttu-id="0fc12-129">Delegieren</span><span class="sxs-lookup"><span data-stu-id="0fc12-129">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-130">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ContextMenu> Ereignisse verwendet werden: <xref:System.Windows.Controls.ContextMenu.Opened> und <xref:System.Windows.Controls.ContextMenu.Closed>.</span><span class="sxs-lookup"><span data-stu-id="0fc12-130">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClosedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-131">Identifiziert das <see cref="E:System.Windows.Controls.ContextMenu.Closed" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="0fc12-131">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomPopupPlacementCallback : System.Windows.Controls.Primitives.CustomPopupPlacementCallback with get, set" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-132">Ruft einen Rückruf ab, der angibt, an welcher Position auf dem Bildschirm ein <see cref="T:System.Windows.Controls.ContextMenu" /> platziert werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-132">Gets or sets a callback that indicates where a <see cref="T:System.Windows.Controls.ContextMenu" /> should be placed on the screen.</span></span></summary>
        <value><span data-ttu-id="0fc12-133">Ein Rückruf, der die Position des <see cref="T:System.Windows.Controls.ContextMenu" /> angibt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-133">A callback that specifies the location of the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-134">Die <xref:System.Windows.Controls.ContextMenu.Placement%2A>-Eigenschaft muss auf <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> festgelegt werden, damit der Rückruf Delegat verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="0fc12-134">The <xref:System.Windows.Controls.ContextMenu.Placement%2A> property must be set to <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> for the callback delegate to be used.</span></span>  
  
 <span data-ttu-id="0fc12-135">Der <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback>-Delegat gibt ein Array möglicher Punkte zurück, die in Bezug auf die <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>definiert sind.</span><span class="sxs-lookup"><span data-stu-id="0fc12-135">The <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> delegate returns an array of possible points that are defined with respect to the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>.</span></span> <span data-ttu-id="0fc12-136">Wenn das Kontextmenü angezeigt wird, wird ein Punkt ausgewählt, der die Größe des sichtbaren <xref:System.Windows.Controls.ToolTip> Fensters maximiert.</span><span class="sxs-lookup"><span data-stu-id="0fc12-136">When the context menu is displayed, a point is chosen that maximizes the amount of the <xref:System.Windows.Controls.ToolTip> window that is visible.</span></span>  
  
 <span data-ttu-id="0fc12-137">Das Verhalten ist das gleiche wie für das Popup.</span><span class="sxs-lookup"><span data-stu-id="0fc12-137">The behavior is the same as it is for the popup.</span></span>  <span data-ttu-id="0fc12-138">Weitere Informationen finden Sie unter Gewusst [wie: Angeben einer benutzerdefinierten Popup Position und eines](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) Beispiels für eine [Popup Platzierung](https://go.microsoft.com/fwlink/?LinkID=160032).</span><span class="sxs-lookup"><span data-stu-id="0fc12-138">For more information, see [How to: Specify a Custom Popup Position](~/docs/framework/wpf/controls/how-to-specify-a-custom-popup-position.md) and [Popup Placement Sample](https://go.microsoft.com/fwlink/?LinkID=160032).</span></span>  
  
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0fc12-139">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="0fc12-139">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-140">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-140">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  
|<span data-ttu-id="0fc12-141">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="0fc12-141">Metadata properties set to `true`</span></span>|<span data-ttu-id="0fc12-142">Keine</span><span class="sxs-lookup"><span data-stu-id="0fc12-142">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPopupPlacementCallbackProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-143">Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-143">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-144">Ruft einen Wert ab, der angibt, ob das Steuerelement Bildlaufvorgänge unterstützt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-144">Gets a value that indicates whether the control supports scrolling.</span></span></summary>
        <value><span data-ttu-id="0fc12-145">Immer <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-145">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-146">Wenn das Steuerelement über einen <xref:System.Windows.Controls.ScrollViewer> im Stil verfügt und über ein benutzerdefiniertes Verhalten beim Scrollen verfügt, sollte <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> `true`zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="0fc12-146">If the control has a <xref:System.Windows.Controls.ScrollViewer> in its style and has a custom keyboard scrolling behavior, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> should return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasDropShadow : bool with get, set" Usage="System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-147">Ruft Wert ab, der angibt, ob das Kontextmenü mit einem Schlagschatten angezeigt wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-147">Gets or sets a value that indicates whether the context menu appears with a dropped shadow.</span></span></summary>
        <value><span data-ttu-id="0fc12-148"><see langword="true" />, wenn das Kontextmenü mit einem Schlagschatten angezeigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-148"><see langword="true" /> if the context menu appears with a dropped shadow; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0fc12-149">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-149">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-150">Wenn das <xref:System.Windows.Controls.ContextMenu> geöffnet wird, wird der Wert auf den Wert <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-150">When the <xref:System.Windows.Controls.ContextMenu> opens, the value is set to the value of <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="0fc12-151">Wenn diese Eigenschaft auf `true` festgelegt wird, hat dies keine Auswirkungen, wenn die <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType>-Eigenschaft `false`ist.</span><span class="sxs-lookup"><span data-stu-id="0fc12-151">Setting this property to `true` has no effect if the <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> property is `false`.</span></span>  
  
<a name="dependencyPropertyInfo_"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0fc12-152">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="0fc12-152">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-153">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-153">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  
|<span data-ttu-id="0fc12-154">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="0fc12-154">Metadata properties set to `true`</span></span>|<span data-ttu-id="0fc12-155">Keine</span><span class="sxs-lookup"><span data-stu-id="0fc12-155">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-156">Im folgenden Beispiel wird die Verwendung der <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="0fc12-156">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A> property.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasDropShadowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-157">Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-157">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-158">Ruft den horizontalen Abstand zwischen dem Zielursprung und dem Ausrichtungspunkt für das Popup ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-158">Get or sets the horizontal distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="0fc12-159">Der horizontale Abstand zwischen dem Zielursprung und dem Ausrichtungspunkt für das Popup.</span><span class="sxs-lookup"><span data-stu-id="0fc12-159">The horizontal distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="0fc12-160">Weitere Informationen zum Ziel Ursprung und zum Popup Ausrichtungs Punkt finden Sie unter [Popup-Platzierungs Verhalten](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="0fc12-160">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="0fc12-161">Die Standardeinstellung ist 0.</span><span class="sxs-lookup"><span data-stu-id="0fc12-161">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-162">Sie können eine <xref:System.Windows.Controls.ContextMenu> positionieren, indem Sie die Eigenschaften <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>und <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> festlegen.</span><span class="sxs-lookup"><span data-stu-id="0fc12-162">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="0fc12-163">Diese Eigenschaften verhalten sich wie bei einer <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="0fc12-163">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="0fc12-164">Weitere Informationen finden Sie unter [Verhalten beim Platzieren von Popups](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="0fc12-164">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0fc12-165">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="0fc12-165">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-166">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-166">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  
|<span data-ttu-id="0fc12-167">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="0fc12-167">Metadata properties set to `true`</span></span>|<span data-ttu-id="0fc12-168">Keine</span><span class="sxs-lookup"><span data-stu-id="0fc12-168">None</span></span>|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="0fc12-169">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="0fc12-169">XAML Attribute Usage</span></span>  
  
```  
<object HorizontalOffset="double"/>  
- or -  
<object HorizontalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="0fc12-170">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="0fc12-170">XAML Values</span></span>  
 <span data-ttu-id="0fc12-171">*double*</span><span class="sxs-lookup"><span data-stu-id="0fc12-171">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="0fc12-172">Zeichen folgen Darstellung eines <xref:System.Double> Werts.</span><span class="sxs-lookup"><span data-stu-id="0fc12-172">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="0fc12-173">Dies wird als [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] Messung interpretiert.</span><span class="sxs-lookup"><span data-stu-id="0fc12-173">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="0fc12-174">Zeichen folgen müssen nicht explizit Dezimalstellen enthalten.</span><span class="sxs-lookup"><span data-stu-id="0fc12-174">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="0fc12-175">Beispielsweise ist der Wert `1` akzeptabel.</span><span class="sxs-lookup"><span data-stu-id="0fc12-175">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="0fc12-176">Die gleichen <xref:System.Double> Bereichs Einschränkungen, wie im Abschnitt mit den Eigenschafts Werten erwähnt, gelten.</span><span class="sxs-lookup"><span data-stu-id="0fc12-176">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="0fc12-177">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="0fc12-177">*qualifiedDouble*</span></span>  
 <span data-ttu-id="0fc12-178">Ein *doppelter* Wert, wie oben beschrieben, gefolgt von einer der folgenden Einheiten Deklarations Zeichenfolgen: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="0fc12-178">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="0fc12-179">`px` (Standard) ist [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="0fc12-179">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="0fc12-180">`in` ist Zoll. 1In = = 96px</span><span class="sxs-lookup"><span data-stu-id="0fc12-180">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="0fc12-181">`cm` ist Zentimeter. 1cm = = (96/2,54) px</span><span class="sxs-lookup"><span data-stu-id="0fc12-181">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="0fc12-182">`pt` ist Punkte. 1pt = = (96/72) px</span><span class="sxs-lookup"><span data-stu-id="0fc12-182">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="0fc12-183">**Hinweis** In vielen Fällen kann ein Double auf "Auto" festgelegt werden, aber ein <xref:System.Windows.Controls.ContextMenu> wird nicht angezeigt, wenn die Offsets auf "Auto" festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="0fc12-183">**Note** In many cases a double may be set to Auto but a <xref:System.Windows.Controls.ContextMenu> will not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-184">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>-Eigenschaft verwendet wird, damit ein <xref:System.Windows.Controls.ContextMenu> an einem angegebenen Speicherort in Bezug auf das übergeordnete Element der Schaltfläche geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-184">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-185">Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-185">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-186">Ruft einen Wert ab, der angibt, ob die Bezeichnung für <see cref="T:System.Windows.Controls.ContextMenu" /> sichtbar ist, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-186">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible.</span></span></summary>
        <value><span data-ttu-id="0fc12-187"><see langword="true" />, wenn das <see cref="T:System.Windows.Controls.ContextMenu" />-Objekt sichtbar ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-187"><see langword="true" /> if the <see cref="T:System.Windows.Controls.ContextMenu" /> is visible; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0fc12-188">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-188">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-189">Wenn <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> auf `true`festgelegt ist, wird die Maus Aufzeichnung auf die <xref:System.Windows.Controls.ContextMenu> und deren Unterstruktur festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-189">When <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> is set to `true`, mouse capture is set to the <xref:System.Windows.Controls.ContextMenu> and its subtree.</span></span>  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0fc12-190">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="0fc12-190">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-191">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-191">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  
|<span data-ttu-id="0fc12-192">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="0fc12-192">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-193">Dieses Beispiel zeigt, wie Sie überprüfen können, ob die <xref:System.Windows.Controls.ContextMenu.IsOpen%2A>-Eigenschaft auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="0fc12-193">This example shows how to check to determine whether the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[ContextMenu#ContextMenuIsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenuisopen)]
 [!code-vb[ContextMenu#ContextMenuIsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenuisopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-194">Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-194">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0fc12-195">Die Ereignisdaten für das <see cref="E:System.Windows.Controls.ContextMenu.Closed" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0fc12-195">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event.</span></span></param>
        <summary><span data-ttu-id="0fc12-196">Wird aufgerufen, wenn das <see cref="E:System.Windows.Controls.ContextMenu.Closed" />-Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-196">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Closed" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contextMenu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0fc12-197">Erstellt ein <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />-Objekt für dieses <see cref="T:System.Windows.Controls.ContextMenu" /> und gibt es zurück.</span><span class="sxs-lookup"><span data-stu-id="0fc12-197">Creates and returns a <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <returns><span data-ttu-id="0fc12-198">Ein <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />-Objekt für diesen <see cref="T:System.Windows.Controls.ContextMenu" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-198">A <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" /> object for this <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contextMenu.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0fc12-199">Die Ereignisdaten für das <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0fc12-199">The event data for the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="0fc12-200">Meldet, dass die <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />-Eigenschaft geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="0fc12-200">Reports that the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> property changed.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0fc12-201">Die Ereignisdaten für das <see cref="E:System.Windows.UIElement.KeyDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0fc12-201">The event data for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span></span></param>
        <summary><span data-ttu-id="0fc12-202">Wird aufgerufen, wenn ein <see cref="E:System.Windows.ContentElement.KeyDown" />-Ereignis von einem Objekt im <see cref="T:System.Windows.Controls.ContextMenu" /> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-202">Called when a <see cref="E:System.Windows.ContentElement.KeyDown" /> event is raised by an object inside the <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0fc12-203">Die Ereignisdaten für das <see cref="E:System.Windows.UIElement.KeyUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0fc12-203">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span></span></param>
        <summary><span data-ttu-id="0fc12-204">Reagiert auf das <see cref="E:System.Windows.ContentElement.KeyUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0fc12-204">Responds to the <see cref="E:System.Windows.ContentElement.KeyUp" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="0fc12-205">Die Ereignisdaten für das <see cref="E:System.Windows.Controls.ContextMenu.Opened" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="0fc12-205">The event data for the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event.</span></span></param>
        <summary><span data-ttu-id="0fc12-206">Wird aufgerufen, wenn das <see cref="E:System.Windows.Controls.ContextMenu.Opened" />-Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-206">Called when the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> event occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="contextMenu.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="0fc12-207">Das Objekt, an das das Kontextmenü zuvor angefügt war.</span><span class="sxs-lookup"><span data-stu-id="0fc12-207">The object that the context menu was previously attached to.</span></span></param>
        <summary><span data-ttu-id="0fc12-208">Wird aufgerufen, wenn das übergeordnete visuelle Element eines Kontextmenüs geändert wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-208">Called when a context menu's visual parent changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : System.Windows.RoutedEventHandler " Usage="member this.Opened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-209">Tritt auf, wenn eine bestimmte Instanz eines Kontextmenüs geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-209">Occurs when a particular instance of a context menu opens.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Opened"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="0fc12-210">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="0fc12-210">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-211">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-211">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  
|<span data-ttu-id="0fc12-212">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="0fc12-212">Routing strategy</span></span>|<span data-ttu-id="0fc12-213">Blasen</span><span class="sxs-lookup"><span data-stu-id="0fc12-213">Bubbling</span></span>|  
|<span data-ttu-id="0fc12-214">Delegieren</span><span class="sxs-lookup"><span data-stu-id="0fc12-214">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-215">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ContextMenu> Ereignisse verwendet werden: <xref:System.Windows.Controls.ContextMenu.Opened> und <xref:System.Windows.Controls.ContextMenu.Closed>.</span><span class="sxs-lookup"><span data-stu-id="0fc12-215">The following example shows how use the <xref:System.Windows.Controls.ContextMenu> events: <xref:System.Windows.Controls.ContextMenu.Opened> and <xref:System.Windows.Controls.ContextMenu.Closed>.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="OpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent OpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent OpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ OpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-216">Identifiziert das <see cref="E:System.Windows.Controls.ContextMenu.Opened" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="0fc12-216">Identifies the <see cref="E:System.Windows.Controls.ContextMenu.Opened" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Controls.Primitives.PlacementMode with get, set" Usage="System.Windows.Controls.ContextMenu.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-217">Ruft die <see cref="P:System.Windows.Controls.ContextMenu.Placement" />-Eigenschaft eines <see cref="T:System.Windows.Controls.ContextMenu" /> ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-217">Gets or sets the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> property of a <see cref="T:System.Windows.Controls.ContextMenu" />.</span></span></summary>
        <value><span data-ttu-id="0fc12-218">Einer der <see cref="T:System.Windows.Controls.Primitives.PlacementMode" />-Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="0fc12-218">One of the <see cref="T:System.Windows.Controls.Primitives.PlacementMode" /> enumeration.</span></span> <span data-ttu-id="0fc12-219">Der Standardwert lautet <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-219">The default is <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-220">Wenn die <xref:System.Windows.Controls.ContextMenu> der <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>-oder <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType>-Eigenschaft zugewiesen ist, wird dieser Wert dieser Eigenschaft vom <xref:System.Windows.Controls.ContextMenuService> geändert, wenn die <xref:System.Windows.Controls.ContextMenu> geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-220">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="0fc12-221">Wenn der Benutzer die <xref:System.Windows.Controls.ContextMenu> mit der Maus öffnet, wird <xref:System.Windows.Controls.ContextMenu.Placement%2A> auf <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-221">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the mouse, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint>.</span></span>  <span data-ttu-id="0fc12-222">Wenn der Benutzer die <xref:System.Windows.Controls.ContextMenu> mithilfe der Tastatur öffnet, wird <xref:System.Windows.Controls.ContextMenu.Placement%2A> auf <xref:System.Windows.Controls.Primitives.PlacementMode.Center>festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-222">If the user opens the <xref:System.Windows.Controls.ContextMenu> by using the keyboard, <xref:System.Windows.Controls.ContextMenu.Placement%2A> is set to <xref:System.Windows.Controls.Primitives.PlacementMode.Center>.</span></span>  <span data-ttu-id="0fc12-223">Wenn Sie die Position des <xref:System.Windows.Controls.ContextMenu>ändern möchten, legen Sie die <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType>-Eigenschaft für die <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement>fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-223">If you want to change the position of the <xref:System.Windows.Controls.ContextMenu>, set the <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> property on the <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  
  
 <span data-ttu-id="0fc12-224">Sie können eine <xref:System.Windows.Controls.ContextMenu> positionieren, indem Sie die Eigenschaften <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>und <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> festlegen.</span><span class="sxs-lookup"><span data-stu-id="0fc12-224">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="0fc12-225">Diese Eigenschaften verhalten sich wie bei einer <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="0fc12-225">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="0fc12-226">Weitere Informationen finden Sie unter [Verhalten beim Platzieren von Popups](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="0fc12-226">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0fc12-227">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="0fc12-227">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-228">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-228">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  
|<span data-ttu-id="0fc12-229">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="0fc12-229">Metadata properties set to `true`</span></span>|<span data-ttu-id="0fc12-230">Keine</span><span class="sxs-lookup"><span data-stu-id="0fc12-230">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-231">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ContextMenu.Placement%2A>-Eigenschaft und ein Platzierungs Modus verwendet werden, um anzugeben, wo die <xref:System.Windows.Controls.ContextMenu> platziert wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-231">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.Placement%2A> property and a placement mode to specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-232">Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.Placement" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-232">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.Placement" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementRectangle : System.Windows.Rect with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-233">Ruft den Bereich ab, in Bezug auf den das Kontextmenü beim Öffnen positioniert wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-233">Gets or sets the area relative to which the context menu is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="0fc12-234">Die Bereich, der das Rechteck zum Positionieren des Kontextmenüs festlegt.</span><span class="sxs-lookup"><span data-stu-id="0fc12-234">The area that defines the rectangle that is used to position the context menu.</span></span> <span data-ttu-id="0fc12-235">Der Standardwert lautet <see cref="P:System.Windows.Rect.Empty" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-235">The default is <see cref="P:System.Windows.Rect.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-236">Sie können eine <xref:System.Windows.Controls.ContextMenu> positionieren, indem Sie die Eigenschaften <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>und <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> festlegen.</span><span class="sxs-lookup"><span data-stu-id="0fc12-236">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="0fc12-237">Diese Eigenschaften verhalten sich wie bei einer <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="0fc12-237">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="0fc12-238">Weitere Informationen finden Sie unter [Verhalten beim Platzieren von Popups](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="0fc12-238">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0fc12-239">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="0fc12-239">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-240">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-240">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  
|<span data-ttu-id="0fc12-241">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="0fc12-241">Metadata properties set to `true`</span></span>|<span data-ttu-id="0fc12-242">Keine</span><span class="sxs-lookup"><span data-stu-id="0fc12-242">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-243">Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>-Eigenschaft verwenden und angeben, wo die <xref:System.Windows.Controls.ContextMenu> platziert wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-243">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> property and specify where the <xref:System.Windows.Controls.ContextMenu> is placed.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementRectangleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-244">Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-244">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-245">Ruft das <see cref="T:System.Windows.UIElement" /> ab, in Bezug auf das der <see cref="T:System.Windows.Controls.ContextMenu" /> beim Öffnen positioniert wird, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-245">Gets or sets the <see cref="T:System.Windows.UIElement" /> relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span></summary>
        <value><span data-ttu-id="0fc12-246">Das Element, in Bezug auf das das <see cref="T:System.Windows.Controls.ContextMenu" /> beim Öffnen positioniert wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-246">The element relative to which the <see cref="T:System.Windows.Controls.ContextMenu" /> is positioned when it opens.</span></span> <span data-ttu-id="0fc12-247">Der Standardwert lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-247">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-248">Wenn die <xref:System.Windows.Controls.ContextMenu> der <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>-oder <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType>-Eigenschaft zugewiesen ist, ändert der <xref:System.Windows.Controls.ContextMenuService> diesen Wert dieser Eigenschaft in den besitzenden <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement>, wenn die <xref:System.Windows.Controls.ContextMenu> geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-248">When the <xref:System.Windows.Controls.ContextMenu> is assigned to the <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> property, the <xref:System.Windows.Controls.ContextMenuService> changes this value of this property to the owning <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> when the <xref:System.Windows.Controls.ContextMenu> opens.</span></span> <span data-ttu-id="0fc12-249">Legen Sie die <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType>-Eigenschaft fest, um eine andere <xref:System.Windows.UIElement>zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="0fc12-249">To use a different <xref:System.Windows.UIElement>, set the <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0fc12-250">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="0fc12-250">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-251">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-251">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  
|<span data-ttu-id="0fc12-252">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="0fc12-252">Metadata properties set to `true`</span></span>|<span data-ttu-id="0fc12-253">Keine</span><span class="sxs-lookup"><span data-stu-id="0fc12-253">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-254">Das Ziel einer <xref:System.Windows.Controls.ContextMenu> ist das übergeordnete Element.</span><span class="sxs-lookup"><span data-stu-id="0fc12-254">The target of a <xref:System.Windows.Controls.ContextMenu> is its parent.</span></span> <span data-ttu-id="0fc12-255">In den folgenden Beispielen wird gezeigt, wie Sie die <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>-Eigenschaft verwenden, um das übergeordnete Element einer <xref:System.Windows.Controls.ContextMenu>zu suchen.</span><span class="sxs-lookup"><span data-stu-id="0fc12-255">The following examples show how to use the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> property to find the parent of a <xref:System.Windows.Controls.ContextMenu>.</span></span>  
  
 [!code-csharp[TabControlwithContextMenu#3](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlwithContextMenu/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[TabControlwithContextMenu#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlwithContextMenu/visualbasic/pane1.xaml.vb#3)]  
  
 [!code-csharp[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlContextMenu_snip/CSharp/Pane1.xaml.cs#fromitemcontainer)]
 [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlContextMenu_snip/visualbasic/pane1.xaml.vb#fromitemcontainer)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-256">Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-256">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="contextMenu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="0fc12-257">Das zum Anzeigen des angegebenen Eintrags verwendete Element.</span><span class="sxs-lookup"><span data-stu-id="0fc12-257">Element used to display the specified item.</span></span></param>
        <param name="item"><span data-ttu-id="0fc12-258">Der angegebene Eintrag.</span><span class="sxs-lookup"><span data-stu-id="0fc12-258">Specified item.</span></span></param>
        <summary><span data-ttu-id="0fc12-259">Bereitet das angegebene Element auf die Anzeige des angegebenen Eintrags vor.</span><span class="sxs-lookup"><span data-stu-id="0fc12-259">Prepares the specified element to display the specified item.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-260">Das Vorbereiten des Elements kann das Anwenden von Stilen, das Festlegen von Bindungen usw. einschließen.</span><span class="sxs-lookup"><span data-stu-id="0fc12-260">Preparing the element may involve applying styles, setting bindings, and so on.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-261">Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Controls.ContextMenu" /> automatisch geschlossen werden soll, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-261">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Controls.ContextMenu" /> should close automatically.</span></span></summary>
        <value><span data-ttu-id="0fc12-262"><see langword="true" />, wenn das Menü geöffnet bleiben soll, bis die <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" />-Eigenschaft in <see langword="false" /> geändert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-262"><see langword="true" /> if the menu should stay open until the <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" /> property changes to <see langword="false" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0fc12-263">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="0fc12-263">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0fc12-264">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="0fc12-264">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-265">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-265">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  
|<span data-ttu-id="0fc12-266">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="0fc12-266">Metadata properties set to `true`</span></span>|<span data-ttu-id="0fc12-267">Keine</span><span class="sxs-lookup"><span data-stu-id="0fc12-267">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-268">Im folgenden Beispiel wird die <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A>-Eigenschaft verwendet, um ein Kontextmenü zu erstellen, das geöffnet bleibt, bis ein Ereignis auftritt, mit dem die <xref:System.Windows.Controls.ContextMenu.IsOpen%2A>-Eigenschaft in `false`geändert wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-268">The following example uses the <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> property to make a context menu that will stay open until an event occurs that changes the <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> property to `false`.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-269">Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-269">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-270">Ruft den vertikalen Abstand zwischen dem Zielursprung und dem Ausrichtungspunkt für das Popup ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="0fc12-270">Get or sets the vertical distance between the target origin and the popup alignment point.</span></span></summary>
        <value><span data-ttu-id="0fc12-271">Der vertikale Abstand zwischen dem Zielursprung und dem Ausrichtungspunkt für das Popup.</span><span class="sxs-lookup"><span data-stu-id="0fc12-271">The vertical distance between the target origin and the popup alignment point.</span></span> <span data-ttu-id="0fc12-272">Weitere Informationen zum Ziel Ursprung und zum Popup Ausrichtungs Punkt finden Sie unter [Popup-Platzierungs Verhalten](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="0fc12-272">For information about the target origin and popup alignment point, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span> <span data-ttu-id="0fc12-273">Die Standardeinstellung ist 0.</span><span class="sxs-lookup"><span data-stu-id="0fc12-273">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc12-274">Sie können eine <xref:System.Windows.Controls.ContextMenu> positionieren, indem Sie die Eigenschaften <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>und <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> festlegen.</span><span class="sxs-lookup"><span data-stu-id="0fc12-274">You can position a <xref:System.Windows.Controls.ContextMenu> by setting the <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A>, <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>, <xref:System.Windows.Controls.ContextMenu.Placement%2A>, <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>, and <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> properties.</span></span>  <span data-ttu-id="0fc12-275">Diese Eigenschaften verhalten sich wie bei einer <xref:System.Windows.Controls.Primitives.Popup>.</span><span class="sxs-lookup"><span data-stu-id="0fc12-275">These properties behave the same as they do for a <xref:System.Windows.Controls.Primitives.Popup>.</span></span> <span data-ttu-id="0fc12-276">Weitere Informationen finden Sie unter [Verhalten beim Platzieren von Popups](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span><span class="sxs-lookup"><span data-stu-id="0fc12-276">For more information, see [Popup Placement Behavior](~/docs/framework/wpf/controls/popup-placement-behavior.md).</span></span>  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0fc12-277">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="0fc12-277">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0fc12-278">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="0fc12-278">Identifier field</span></span>|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  
|<span data-ttu-id="0fc12-279">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="0fc12-279">Metadata properties set to `true`</span></span>|<span data-ttu-id="0fc12-280">Keine</span><span class="sxs-lookup"><span data-stu-id="0fc12-280">None</span></span>|  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="0fc12-281">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="0fc12-281">XAML Attribute Usage</span></span>  
  
```  
<object VerticalOffset="double"/>  
- or -  
<object VerticalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a><span data-ttu-id="0fc12-282">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="0fc12-282">XAML Values</span></span>  
 <span data-ttu-id="0fc12-283">*double*</span><span class="sxs-lookup"><span data-stu-id="0fc12-283">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="0fc12-284">Zeichen folgen Darstellung eines <xref:System.Double> Werts.</span><span class="sxs-lookup"><span data-stu-id="0fc12-284">String representation of a <xref:System.Double> value.</span></span> <span data-ttu-id="0fc12-285">Dies wird als [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] Messung interpretiert.</span><span class="sxs-lookup"><span data-stu-id="0fc12-285">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="0fc12-286">Zeichen folgen müssen nicht explizit Dezimalstellen enthalten.</span><span class="sxs-lookup"><span data-stu-id="0fc12-286">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="0fc12-287">Beispielsweise ist der Wert `1` akzeptabel.</span><span class="sxs-lookup"><span data-stu-id="0fc12-287">For instance, a value of `1` is acceptable.</span></span> <span data-ttu-id="0fc12-288">Die gleichen <xref:System.Double> Bereichs Einschränkungen, wie im Abschnitt mit den Eigenschafts Werten erwähnt, gelten.</span><span class="sxs-lookup"><span data-stu-id="0fc12-288">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="0fc12-289">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="0fc12-289">*qualifiedDouble*</span></span>  
 <span data-ttu-id="0fc12-290">Ein *doppelter* Wert, wie oben beschrieben, gefolgt von einer der folgenden Einheiten Deklarations Zeichenfolgen: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="0fc12-290">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="0fc12-291">`px` (Standard) ist [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="0fc12-291">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="0fc12-292">`in` ist Zoll. 1In = = 96px</span><span class="sxs-lookup"><span data-stu-id="0fc12-292">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="0fc12-293">`cm` ist Zentimeter. 1cm = = (96/2,54) px</span><span class="sxs-lookup"><span data-stu-id="0fc12-293">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="0fc12-294">`pt` ist Punkte. 1pt = = (96/72) px</span><span class="sxs-lookup"><span data-stu-id="0fc12-294">`pt` is points; 1pt==(96/72) px</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0fc12-295">In vielen Fällen kann ein Double-Wert auf "Auto" festgelegt werden, aber ein <xref:System.Windows.Controls.ContextMenu> wird nicht angezeigt, wenn die Offsets auf "Auto" festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="0fc12-295">In many cases a double may be set to Auto, but a <xref:System.Windows.Controls.ContextMenu> does not appear if the offsets are set to Auto.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fc12-296">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A>-Eigenschaft verwendet wird, damit ein <xref:System.Windows.Controls.ContextMenu> an einem angegebenen Speicherort in Bezug auf das übergeordnete Element der Schaltfläche geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="0fc12-296">The following example shows how to use the <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> property to cause a <xref:System.Windows.Controls.ContextMenu> to open at a specified location in relation to its button parent.</span></span>  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0fc12-297">Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0fc12-297">Identifies the <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
