<Type Name="ContextMenu" FullName="System.Windows.Controls.ContextMenu">
  <Metadata><Meta Name="ms.openlocfilehash" Value="aaa4d78d119f236ba52613fc88b5d7ce2a4401c7" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86824090" /></Metadata><TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Controls.Primitives.MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenu extends System.Windows.Controls.Primitives.MenuBase" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits MenuBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Controls::Primitives::MenuBase" />
  <TypeSignature Language="F#" Value="type ContextMenu = class&#xA;    inherit MenuBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContextMenu extends System.Windows.Controls.Primitives.MenuBase" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.MenuBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("Opened")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("Opened")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Popupmenü dar, mit dem ein Steuerelement Funktionen verfügbar machen kann, die spezifisch für den Kontext des Steuerelements sind.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ContextMenu> ist eine <xref:System.Windows.Controls.ItemsControl> . Dies bedeutet, dass Sie eine Auflistung von Objekten eines beliebigen Typs (z. b. Zeichenfolge, Bild oder Panel) enthalten kann. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Controls.ItemsControl>-Klasse.  
  
 Die Eigenschaften der- <xref:System.Windows.Controls.ContextMenu> Klasse werden verwendet, um die Position und das Verhalten von zu definieren <xref:System.Windows.Controls.ContextMenu> .  
  
 Ein <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement> kann über einen verfügen <xref:System.Windows.Controls.ContextMenu> .  Wenn Sie der- <xref:System.Windows.Controls.ContextMenu> Eigenschaft oder der-Eigenschaft eine zuweisen <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> , verarbeitet die- <xref:System.Windows.Controls.ContextMenuService> Klasse Kontextmenü Vorgänge als Reaktion auf eine Benutzerinteraktion. Teil der Arbeit, die das <xref:System.Windows.Controls.ContextMenuService> öffnet, <xref:System.Windows.Controls.ContextMenu> Wenn der Benutzer mit der rechten Maustaste auf das Steuerelement klickt.  
  
 Die folgenden Eigenschaften werden von der <xref:System.Windows.Controls.ContextMenu> -Klasse und der- <xref:System.Windows.Controls.ContextMenuService> Klasse definiert.  Wenn eine dieser Eigenschaften sowohl für als auch für festgelegt ist <xref:System.Windows.Controls.ContextMenu> <xref:System.Windows.Controls.ContextMenuService> , wird der-Eigenschafts Wert aus der <xref:System.Windows.Controls.ContextMenuService> verwendet.  
  
-   <xref:System.Windows.Controls.ContextMenu.Placement%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A>  
  
-   <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>  
  
-   <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>  
  
 Eine <xref:System.Windows.Controls.ContextMenu> wird automatisch in einem- <xref:System.Windows.Controls.Primitives.Popup> Steuerelement platziert. Dieses Verhalten kann nicht geändert werden.  
  
## <a name="customizing-the-contextmenu-control"></a>Anpassen des ContextMenu-Steuer Elements  
 Verwenden Sie die-Eigenschaft, um die gleichen Eigenschaften Einstellungen auf mehrere Steuer <xref:System.Windows.Controls.ContextMenu> Elemente anzuwenden <xref:System.Windows.FrameworkElement.Style%2A> . Sie können die Standardeinstellung ändern <xref:System.Windows.Controls.ControlTemplate> , um dem Steuerelement eine eindeutige Darstellung zu verschaffen. Weitere Informationen zum Erstellen einer <xref:System.Windows.Controls.ControlTemplate> finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](/dotnet/framework/wpf/controls/customizing-the-appearance-of-an-existing-control).  Informationen zu den Teilen und Zuständen, die für spezifisch sind <xref:System.Windows.Controls.ContextMenu> , finden Sie unter [ContextMenu-Stile und-Vorlagen](/dotnet/framework/wpf/controls/contextmenu-styles-and-templates).  
  
 Abhängigkeits Eigenschaften für dieses Steuerelement können durch den Standardstil des Steuer Elements festgelegt werden.  Wenn eine Eigenschaft durch einen Standardstil festgelegt wird, kann sich die Eigenschaft von ihrem Standardwert ändern, wenn das Steuerelement in der Anwendung angezeigt wird. Der Standardstil wird bestimmt, welches Desktop Design verwendet wird, wenn die Anwendung ausgeführt wird.  Weitere Informationen finden Sie unter [standardmäßige WPF](https://go.microsoft.com/fwlink/?LinkID=158252)-Designs.  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 Im folgenden Beispiel wird ein erstellt <xref:System.Windows.Controls.ContextMenu> , der den Text eines-Werts bearbeitet <xref:System.Windows.Controls.TextBox> .  Im Beispiel wird veranschaulicht, wie die Ereignisse von-Objekten in einem abonniert und behandelt werden <xref:System.Windows.Controls.MenuItem> <xref:System.Windows.Controls.ContextMenu> .  
  
 [!code-xaml[ContextMenu#Events](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#events)]  
  
 [!code-csharp[MenuItemCommandsAndEvents#2](~/samples/snippets/csharp/VS_Snippets_Wpf/MenuItemCommandsAndEvents/CSharp/Window1.xaml.cs#2)]
 [!code-vb[MenuItemCommandsAndEvents#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MenuItemCommandsAndEvents/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ContextMenuService" />
    <altmember cref="T:System.Windows.Controls.MenuItem" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ContextMenu" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : System.Windows.RoutedEventHandler " Usage="member this.Closed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine bestimmte Instanz eines <see cref="T:System.Windows.Controls.ContextMenu" /> geschlossen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Closed"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.ClosedEvent>|  
|Routing Strategie|Blasen|  
|Delegat|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ContextMenu> -Ereignisse verwendet werden: <xref:System.Windows.Controls.ContextMenu.Opened> und <xref:System.Windows.Controls.ContextMenu.Closed> .  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="ClosedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClosedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClosedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClosedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClosedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClosedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.ClosedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.Controls.ContextMenu.Closed" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallback">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Primitives.CustomPopupPlacementCallback CustomPopupPlacementCallback" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomPopupPlacementCallback As CustomPopupPlacementCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ CustomPopupPlacementCallback { System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ get(); void set(System::Windows::Controls::Primitives::CustomPopupPlacementCallback ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomPopupPlacementCallback : System.Windows.Controls.Primitives.CustomPopupPlacementCallback with get, set" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Layout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Layout")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.CustomPopupPlacementCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Rückruf ab, der angibt, an welcher Position auf dem Bildschirm ein <see cref="T:System.Windows.Controls.ContextMenu" /> platziert werden soll, oder legt diesen fest.</summary>
        <value>Ein Rückruf, der die Position des <see cref="T:System.Windows.Controls.ContextMenu" /> angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Windows.Controls.ContextMenu.Placement%2A> Eigenschaft muss auf festgelegt werden, <xref:System.Windows.Controls.Primitives.PlacementMode.Custom> damit der Rückruf Delegat verwendet werden soll.  
  
 Der-Delegat <xref:System.Windows.Controls.Primitives.CustomPopupPlacementCallback> gibt ein Array möglicher Punkte zurück, die in Bezug auf definiert werden <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> . Wenn das Kontextmenü angezeigt wird, wird ein Punkt ausgewählt, der die sichtbare Fenstergröße maximiert <xref:System.Windows.Controls.ToolTip> .  
  
 Das Verhalten ist das gleiche wie für das Popup. Weitere Informationen finden Sie unter Gewusst [wie: Angeben einer benutzerdefinierten Popup Position und eines](/dotnet/framework/wpf/controls/how-to-specify-a-custom-popup-position) Beispiels für eine [Popup Platzierung](https://github.com/dotnet/dotnet-api-docs/tree/master/samples/snippets/csharp/VS_Snippets_Wpf/PopupPositionSnippet/CS).
 
<a name="dependencyPropertyInfo_CustomPopupPlacementCallback"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty>|  
|Metadateneigenschaften auf `true` festgelegt|Keine|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomPopupPlacementCallbackProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomPopupPlacementCallbackProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomPopupPlacementCallbackProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomPopupPlacementCallbackProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.CustomPopupPlacementCallbackProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.CustomPopupPlacementCallback" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlesScrolling">
      <MemberSignature Language="C#" Value="protected internal override bool HandlesScrolling { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandlesScrolling" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HandlesScrolling As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HandlesScrolling { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlesScrolling : bool" Usage="System.Windows.Controls.ContextMenu.HandlesScrolling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement Bildlaufvorgänge unterstützt.</summary>
        <value>Immer <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Steuerelement einen <xref:System.Windows.Controls.ScrollViewer> im Stil hat und über ein benutzerdefiniertes Verhalten beim Scrollen verfügt, <xref:System.Windows.Controls.ListBox.HandlesScrolling%2A> sollte zurückgeben `true` .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDropShadow">
      <MemberSignature Language="C#" Value="public bool HasDropShadow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDropShadow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberSignature Language="VB.NET" Value="Public Property HasDropShadow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasDropShadow { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HasDropShadow : bool with get, set" Usage="System.Windows.Controls.ContextMenu.HasDropShadow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Wert ab, der angibt, ob das Kontextmenü mit einem Schlagschatten angezeigt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Kontextmenü mit einem Schlagschatten angezeigt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Controls.ContextMenu> geöffnet wird, wird der Wert auf den Wert von festgelegt <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> . Das Festlegen dieser Eigenschaft auf `true` hat keine Auswirkung, wenn die- <xref:System.Windows.SystemParameters.DropShadow%2A?displayProperty=nameWithType> Eigenschaft ist `false` .  
  
<a name="dependencyPropertyInfo_"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.HasDropShadowProperty>|  
|Metadateneigenschaften auf `true` festgelegt|Keine|  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.Windows.Controls.ContextMenu.HasDropShadow%2A>-Eigenschaft veranschaulicht.  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HasDropShadowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HasDropShadowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HasDropShadowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HasDropShadowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HasDropShadowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HasDropShadowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HasDropShadowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.HasDropShadow" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Layout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Layout")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den horizontalen Abstand zwischen dem Zielursprung und dem Ausrichtungspunkt für das Popup ab oder legt diesen fest.</summary>
        <value>Der horizontale Abstand zwischen dem Zielursprung und dem Ausrichtungspunkt für das Popup. Weitere Informationen zum Ziel Ursprung und zum Popup Ausrichtungs Punkt finden Sie unter [Popup-Platzierungs Verhalten](/dotnet/framework/wpf/controls/popup-placement-behavior). Die Standardeinstellung ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen positionieren, <xref:System.Windows.Controls.ContextMenu> indem Sie <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> die <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> Eigenschaften,, <xref:System.Windows.Controls.ContextMenu.Placement%2A> , <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> und festlegen <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> .  Diese Eigenschaften verhalten sich wie bei einer <xref:System.Windows.Controls.Primitives.Popup> . Weitere Informationen finden Sie unter [Verhalten beim Platzieren von Popups](/dotnet/framework/wpf/controls/popup-placement-behavior).  
  
<a name="dependencyPropertyInfo_HorizontalOffset"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty>|  
|Metadateneigenschaften auf `true` festgelegt|Keine|  
  
<a name="xamlAttributeUsage_HorizontalOffset"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object HorizontalOffset="double"/>  
- or -  
<object HorizontalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_HorizontalOffset"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *double*  
 <xref:System.Double>  
  
 Zeichen folgen Darstellung eines <xref:System.Double> Werts. Dies wird als [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] Maßeinheit interpretiert. Zeichen folgen müssen nicht explizit Dezimalstellen enthalten. Beispielsweise ist der Wert `1` akzeptabel.  
  
 Die gleichen <xref:System.Double> Bereichs Einschränkungen wie im Abschnitt mit den Eigenschafts Werten werden angewendet.  
  
 *qualifiedDouble*  
 Ein *doppelter* Wert, wie oben beschrieben, gefolgt von einer der folgenden Einheiten Deklarations Zeichenfolgen: `px` , `in` , `cm` , `pt` .  
  
 `px` (Standard) ist [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` ist Zoll; 1In = = 96px  
  
 `cm` ist Zentimeter; 1cm = = (96/2,54) px  
  
 `pt` ist Punkte 1pt = = (96/72) px  
  
 **Hinweis** In vielen Fällen kann ein Double-Wert auf "Auto" festgelegt werden, <xref:System.Windows.Controls.ContextMenu> wird jedoch nicht angezeigt, wenn die Offsets auf "Auto" festgelegt sind.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die-Eigenschaft verwendet wird <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> , um zu bewirken, dass ein an <xref:System.Windows.Controls.ContextMenu> einer bestimmten Position in Bezug auf das übergeordnete Schaltflächen Element geöffnet wird  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.HorizontalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.HorizontalOffset" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public bool IsOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Browsable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Browsable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Appearance")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Appearance")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Bezeichnung für <see cref="T:System.Windows.Controls.ContextMenu" /> sichtbar ist, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn das <see cref="T:System.Windows.Controls.ContextMenu" />-Objekt sichtbar ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> auf festgelegt ist `true` , wird die Erfassung von Maus Eingaben auf <xref:System.Windows.Controls.ContextMenu> und deren Unterstruktur festgelegt.  
  
<a name="dependencyPropertyInfo_IsOpen"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.IsOpenProperty>|  
|Metadateneigenschaften auf `true` festgelegt|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
   
  
## Examples  
 Dieses Beispiel zeigt, wie Sie überprüfen können, ob die- <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> Eigenschaft auf festgelegt ist `true` .  
  
 [!code-csharp[ContextMenu#ContextMenuIsOpen](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenuisopen)]
 [!code-vb[ContextMenu#ContextMenuIsOpen](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenuisopen)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="IsOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.IsOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnClosed(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnClosed : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten für das <see cref="E:System.Windows.Controls.ContextMenu.Closed" />-Ereignis.</param>
        <summary>Wird aufgerufen, wenn das <see cref="E:System.Windows.Controls.ContextMenu.Closed" />-Ereignis eintritt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contextMenu.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />-Objekt für dieses <see cref="T:System.Windows.Controls.ContextMenu" /> und gibt es zurück.</summary>
        <returns>Ein <see cref="T:System.Windows.Automation.Peers.ContextMenuAutomationPeer" />-Objekt für diesen <see cref="T:System.Windows.Controls.ContextMenu" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected override void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contextMenu.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten für das <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />-Ereignis.</param>
        <summary>Meldet, dass die <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />-Eigenschaft geändert wurde.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten für das <see cref="E:System.Windows.UIElement.KeyDown" />-Ereignis.</param>
        <summary>Wird aufgerufen, wenn ein <see cref="E:System.Windows.ContentElement.KeyDown" />-Ereignis von einem Objekt im <see cref="T:System.Windows.Controls.ContextMenu" /> ausgelöst wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contextMenu.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten für das <see cref="E:System.Windows.UIElement.KeyUp" />-Ereignis.</param>
        <summary>Reagiert auf das <see cref="E:System.Windows.ContentElement.KeyUp" />-Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected virtual void OnOpened (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOpened(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnOpened(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOpened (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOpened(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnOpened : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnOpened : System.Windows.RoutedEventArgs -&gt; unit" Usage="contextMenu.OnOpened e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten für das <see cref="E:System.Windows.Controls.ContextMenu.Opened" />-Ereignis.</param>
        <summary>Wird aufgerufen, wenn das <see cref="E:System.Windows.Controls.ContextMenu.Opened" />-Ereignis eintritt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="contextMenu.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">Das Objekt, an das das Kontextmenü zuvor angefügt war.</param>
        <summary>Wird aufgerufen, wenn das übergeordnete visuelle Element eines Kontextmenüs geändert wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.ContextMenu.Opened" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Opened As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : System.Windows.RoutedEventHandler " Usage="member this.Opened : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine bestimmte Instanz eines Kontextmenüs geöffnet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_Opened"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.OpenedEvent>|  
|Routing Strategie|Blasen|  
|Delegat|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ContextMenu> -Ereignisse verwendet werden: <xref:System.Windows.Controls.ContextMenu.Opened> und <xref:System.Windows.Controls.ContextMenu.Closed> .  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 [!code-csharp[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml.cs#contextmenueventhandlers)]
 [!code-vb[ContextMenu#ContextMenuEventHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContextMenu/VisualBasic/Pane1.xaml.vb#contextmenueventhandlers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="OpenedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent OpenedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent OpenedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpenedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ OpenedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable OpenedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.ContextMenu.OpenedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.Controls.ContextMenu.Opened" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Placement">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Primitives.PlacementMode Placement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Primitives.PlacementMode Placement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.Placement" />
      <MemberSignature Language="VB.NET" Value="Public Property Placement As PlacementMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Primitives::PlacementMode Placement { System::Windows::Controls::Primitives::PlacementMode get(); void set(System::Windows::Controls::Primitives::PlacementMode value); };" />
      <MemberSignature Language="F#" Value="member this.Placement : System.Windows.Controls.Primitives.PlacementMode with get, set" Usage="System.Windows.Controls.ContextMenu.Placement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Layout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Layout")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Primitives.PlacementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="P:System.Windows.Controls.ContextMenu.Placement" />-Eigenschaft eines <see cref="T:System.Windows.Controls.ContextMenu" /> ab oder legt diese fest.</summary>
        <value>Einer der <see cref="T:System.Windows.Controls.Primitives.PlacementMode" />-Enumerationswerte. Der Standardwert ist <see cref="F:System.Windows.Controls.Primitives.PlacementMode.MousePoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die der- <xref:System.Windows.Controls.ContextMenu> Eigenschaft oder der-Eigenschaft zugewiesen wird <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> , <xref:System.Windows.Controls.ContextMenuService> ändert den Wert dieser Eigenschaft, wenn <xref:System.Windows.Controls.ContextMenu> geöffnet wird. Wenn der Benutzer mit <xref:System.Windows.Controls.ContextMenu> der Maus öffnet, <xref:System.Windows.Controls.ContextMenu.Placement%2A> wird auf festgelegt <xref:System.Windows.Controls.Primitives.PlacementMode.MousePoint> .  Wenn der Benutzer das <xref:System.Windows.Controls.ContextMenu> mithilfe der Tastatur öffnet, <xref:System.Windows.Controls.ContextMenu.Placement%2A> wird auf festgelegt <xref:System.Windows.Controls.Primitives.PlacementMode.Center> .  Wenn Sie die Position von ändern möchten <xref:System.Windows.Controls.ContextMenu> , legen Sie die- <xref:System.Windows.Controls.ContextMenuService.Placement%2A?displayProperty=nameWithType> Eigenschaft für die-Eigenschaft oder die-Eigenschaft fest <xref:System.Windows.FrameworkElement> <xref:System.Windows.FrameworkContentElement> .  
  
 Sie können einen positionieren, <xref:System.Windows.Controls.ContextMenu> indem Sie <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> die <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> Eigenschaften,, <xref:System.Windows.Controls.ContextMenu.Placement%2A> , <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> und festlegen <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> .  Diese Eigenschaften verhalten sich wie bei einer <xref:System.Windows.Controls.Primitives.Popup> . Weitere Informationen finden Sie unter [Verhalten beim Platzieren von Popups](/dotnet/framework/wpf/controls/popup-placement-behavior).  
  
<a name="dependencyPropertyInfo_Placement"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.PlacementProperty>|  
|Metadateneigenschaften auf `true` festgelegt|Keine|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ContextMenu.Placement%2A> -Eigenschaft und ein Platzierungs Modus verwendet werden, um anzugeben, wo der <xref:System.Windows.Controls.ContextMenu> platziert wird.  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.Placement" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect PlacementRectangle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect PlacementRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect PlacementRectangle { System::Windows::Rect get(); void set(System::Windows::Rect value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementRectangle : System.Windows.Rect with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Layout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Layout")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Bereich ab, in Bezug auf den das Kontextmenü beim Öffnen positioniert wird, oder legt diesen fest.</summary>
        <value>Die Bereich, der das Rechteck zum Positionieren des Kontextmenüs festlegt. Der Standardwert ist <see cref="P:System.Windows.Rect.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen positionieren, <xref:System.Windows.Controls.ContextMenu> indem Sie <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> die <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> Eigenschaften,, <xref:System.Windows.Controls.ContextMenu.Placement%2A> , <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> und festlegen <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> .  Diese Eigenschaften verhalten sich wie bei einer <xref:System.Windows.Controls.Primitives.Popup> . Weitere Informationen finden Sie unter [Verhalten beim Platzieren von Popups](/dotnet/framework/wpf/controls/popup-placement-behavior).  
  
<a name="dependencyPropertyInfo_PlacementRectangle"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.PlacementRectangleProperty>|  
|Metadateneigenschaften auf `true` festgelegt|Keine|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> -Eigenschaft verwendet und angegeben wird, wo der <xref:System.Windows.Controls.ContextMenu> platziert wird.  
  
 [!code-xaml[ContextMenu#ContextMenuPlacement](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuplacement)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementRectangleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementRectangleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementRectangleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementRectangleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementRectangleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementRectangleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementRectangleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.PlacementRectangle" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlacementTarget">
      <MemberSignature Language="C#" Value="public System.Windows.UIElement PlacementTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.UIElement PlacementTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property PlacementTarget As UIElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::UIElement ^ PlacementTarget { System::Windows::UIElement ^ get(); void set(System::Windows::UIElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PlacementTarget : System.Windows.UIElement with get, set" Usage="System.Windows.Controls.ContextMenu.PlacementTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Layout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Layout")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.UIElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.UIElement" /> ab, in Bezug auf das der <see cref="T:System.Windows.Controls.ContextMenu" /> beim Öffnen positioniert wird, oder legt dieses fest.</summary>
        <value>Das Element, in Bezug auf das das <see cref="T:System.Windows.Controls.ContextMenu" /> beim Öffnen positioniert wird. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die der- <xref:System.Windows.Controls.ContextMenu> Eigenschaft oder der-Eigenschaft zugewiesen ist <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType> <xref:System.Windows.FrameworkContentElement.ContextMenu%2A?displayProperty=nameWithType> , <xref:System.Windows.Controls.ContextMenuService> ändert den Wert dieser Eigenschaft in den besitzenden <xref:System.Windows.FrameworkElement> oder, <xref:System.Windows.FrameworkContentElement> Wenn geöffnet wird <xref:System.Windows.Controls.ContextMenu> . Wenn Sie einen anderen verwenden möchten <xref:System.Windows.UIElement> , legen Sie die- <xref:System.Windows.Controls.ContextMenuService.PlacementTarget%2A?displayProperty=nameWithType> Eigenschaft fest.  
  
<a name="dependencyPropertyInfo_PlacementTarget"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.PlacementTargetProperty>|  
|Metadateneigenschaften auf `true` festgelegt|Keine|  
  
   
  
## Examples  
 Das Ziel eines ist das über <xref:System.Windows.Controls.ContextMenu> geordnete Element. In den folgenden Beispielen wird gezeigt, wie die-Eigenschaft verwendet wird <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> , um das übergeordnete Element eines zu suchen <xref:System.Windows.Controls.ContextMenu> .  
  
 [!code-csharp[TabControlwithContextMenu#3](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlwithContextMenu/CSharp/Pane1.xaml.cs#3)]
 [!code-vb[TabControlwithContextMenu#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlwithContextMenu/visualbasic/pane1.xaml.vb#3)]  
  
 [!code-csharp[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/csharp/VS_Snippets_Wpf/TabControlContextMenu_snip/CSharp/Pane1.xaml.cs#fromitemcontainer)]
 [!code-vb[TabControlContextMenu_snip#FromItemContainer](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TabControlContextMenu_snip/visualbasic/pane1.xaml.vb#fromitemcontainer)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="PlacementTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PlacementTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PlacementTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PlacementTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PlacementTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PlacementTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.PlacementTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.PlacementTarget" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ContextMenu.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="contextMenu.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Das zum Anzeigen des angegebenen Eintrags verwendete Element.</param>
        <param name="item">Der angegebene Eintrag.</param>
        <summary>Bereitet das angegebene Element auf die Anzeige des angegebenen Eintrags vor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Vorbereiten des Elements kann das Anwenden von Stilen, das Festlegen von Bindungen usw. einschließen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StaysOpen">
      <MemberSignature Language="C#" Value="public bool StaysOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StaysOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property StaysOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StaysOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StaysOpen : bool with get, set" Usage="System.Windows.Controls.ContextMenu.StaysOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Behavior")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Behavior")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das <see cref="T:System.Windows.Controls.ContextMenu" /> automatisch geschlossen werden soll, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn das Menü geöffnet bleiben soll, bis die <see cref="P:System.Windows.Controls.ContextMenu.IsOpen" />-Eigenschaft in <see langword="false" /> geändert wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_StaysOpen"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.StaysOpenProperty>|  
|Metadateneigenschaften auf `true` festgelegt|Keine|  
  
   
  
## Examples  
 Im folgenden Beispiel wird die- <xref:System.Windows.Controls.ContextMenu.StaysOpen%2A> Eigenschaft verwendet, um ein Kontextmenü zu erstellen, das geöffnet bleibt, bis ein Ereignis auftritt, das die- <xref:System.Windows.Controls.ContextMenu.IsOpen%2A> Eigenschaft in ändert `false` .  
  
 [!code-xaml[ContextMenu#ContextMenuEvents](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuevents)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="StaysOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StaysOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StaysOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StaysOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StaysOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StaysOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.StaysOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.StaysOpen" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double with get, set" Usage="System.Windows.Controls.ContextMenu.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Category("Layout")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Category("Layout")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den vertikalen Abstand zwischen dem Zielursprung und dem Ausrichtungspunkt für das Popup ab oder legt diesen fest.</summary>
        <value>Der vertikale Abstand zwischen dem Zielursprung und dem Ausrichtungspunkt für das Popup. Weitere Informationen zum Ziel Ursprung und zum Popup Ausrichtungs Punkt finden Sie unter [Popup-Platzierungs Verhalten](/dotnet/framework/wpf/controls/popup-placement-behavior). Die Standardeinstellung ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen positionieren, <xref:System.Windows.Controls.ContextMenu> indem Sie <xref:System.Windows.Controls.ContextMenu.PlacementTarget%2A> die <xref:System.Windows.Controls.ContextMenu.PlacementRectangle%2A> Eigenschaften,, <xref:System.Windows.Controls.ContextMenu.Placement%2A> , <xref:System.Windows.Controls.ContextMenu.HorizontalOffset%2A> und festlegen <xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty> .  Diese Eigenschaften verhalten sich wie bei einer <xref:System.Windows.Controls.Primitives.Popup> . Weitere Informationen finden Sie unter [Verhalten beim Platzieren von Popups](/dotnet/framework/wpf/controls/popup-placement-behavior).  
  
<a name="dependencyPropertyInfo_VerticalOffset"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ContextMenu.VerticalOffsetProperty>|  
|Metadateneigenschaften auf `true` festgelegt|Keine|  
  
<a name="xamlAttributeUsage_VerticalOffset"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object VerticalOffset="double"/>  
- or -  
<object VerticalOffset ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_VerticalOffset"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *double*  
 <xref:System.Double>  
  
 Zeichen folgen Darstellung eines <xref:System.Double> Werts. Dies wird als [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] Maßeinheit interpretiert. Zeichen folgen müssen nicht explizit Dezimalstellen enthalten. Beispielsweise ist der Wert `1` akzeptabel. Die gleichen <xref:System.Double> Bereichs Einschränkungen wie im Abschnitt mit den Eigenschafts Werten werden angewendet.  
  
 *qualifiedDouble*  
 Ein *doppelter* Wert, wie oben beschrieben, gefolgt von einer der folgenden Einheiten Deklarations Zeichenfolgen: `px` , `in` , `cm` , `pt` .  
  
 `px` (Standard) ist [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` ist Zoll; 1In = = 96px  
  
 `cm` ist Zentimeter; 1cm = = (96/2,54) px  
  
 `pt` ist Punkte 1pt = = (96/72) px  
  
> [!NOTE]
>  In vielen Fällen kann ein Double-Wert auf "Auto" festgelegt werden, aber eine wird <xref:System.Windows.Controls.ContextMenu> nicht angezeigt, wenn die Offsets auf "Auto" festgelegt sind.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die-Eigenschaft verwendet wird <xref:System.Windows.Controls.ContextMenu.VerticalOffset%2A> , um zu bewirken, dass ein an <xref:System.Windows.Controls.ContextMenu> einer bestimmten Position in Bezug auf das übergeordnete Schaltflächen Element geöffnet wird  
  
 [!code-xaml[ContextMenu#ContextMenuProps](~/samples/snippets/csharp/VS_Snippets_Wpf/ContextMenu/CSharp/Pane1.xaml#contextmenuprops)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenuService" />
      </Docs>
    </Member>
    <Member MemberName="VerticalOffsetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalOffsetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalOffsetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalOffsetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalOffsetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalOffsetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.ContextMenu.VerticalOffsetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ContextMenu.VerticalOffset" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
