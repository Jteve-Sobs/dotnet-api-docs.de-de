<Type Name="TextBox" FullName="System.Windows.Controls.TextBox">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8d6a7aef575f914fbc92aef94f979992d215436f" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83450320" /></Metadata><TypeSignature Language="C#" Value="public class TextBox : System.Windows.Controls.Primitives.TextBoxBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.TextBox" />
  <TypeSignature Language="VB.NET" Value="Public Class TextBox&#xA;Inherits TextBoxBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBox : System::Windows::Controls::Primitives::TextBoxBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type TextBox = class&#xA;    inherit TextBoxBase&#xA;    interface IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi TextBox extends System.Windows.Controls.Primitives.TextBoxBase implements class System.Windows.Markup.IAddChild" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.TextBoxBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Text")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="99e13-101">Stellt ein Steuerelement dar, das zum Anzeigen oder Bearbeiten von nicht formatiertem Text verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="99e13-101">Represents a control that can be used to display or edit unformatted text.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-102">Ein <xref:System.Windows.Controls.TextBox>-Steuerelement kann in seiner <xref:System.Windows.Controls.TextBox.Text%2A>-Eigenschaft nur unformatierten Text enthalten.</span><span class="sxs-lookup"><span data-stu-id="99e13-102">A <xref:System.Windows.Controls.TextBox> control can contain only unformatted text in its <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span> <span data-ttu-id="99e13-103">Die folgende Abbildung zeigt ein Beispiel für eine <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="99e13-103">The following graphic shows an example of a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="99e13-104">![TextBox-Bildschirmfoto](~/add/media/ss-ctl-textbox.gif "TextBox-Bildschirmabbildung")</span><span class="sxs-lookup"><span data-stu-id="99e13-104">![TextBox screen shot](~/add/media/ss-ctl-textbox.gif "TextBox screen shot")</span></span>  
<span data-ttu-id="99e13-105">Beispiel für ein Textfeld</span><span class="sxs-lookup"><span data-stu-id="99e13-105">Example of a TextBox</span></span>  
  
 <span data-ttu-id="99e13-106"><xref:System.Windows.Controls.TextBox> ist ein zusammengesetztes Steuerelement, das aus mehreren gekapselten Komponenten besteht.</span><span class="sxs-lookup"><span data-stu-id="99e13-106"><xref:System.Windows.Controls.TextBox> is a composite control that is composed of several encapsulated components.</span></span> <span data-ttu-id="99e13-107">Folglich werden einige Ereignisse nicht in das enthaltende Steuerelement hochskalieren, da Sie von gekapselten untergeordneten Elementen behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="99e13-107">Consequently, some events do not bubble up to the containing control because they are handled by encapsulated child elements.</span></span> <span data-ttu-id="99e13-108">Aus diesem Grund sollten Anwendungsentwickler auf die tunnelingversion eines Ereignisses (gekennzeichnet durch das Präfix "Preview") lauschen.</span><span class="sxs-lookup"><span data-stu-id="99e13-108">Because of this, application developers should listen for the tunneling version of an event (denoted by the prefix "Preview").</span></span>  
  
 <span data-ttu-id="99e13-109"><xref:System.Windows.Controls.TextBox> unterstützt nur unformatierten Text.</span><span class="sxs-lookup"><span data-stu-id="99e13-109"><xref:System.Windows.Controls.TextBox> supports unformatted text only.</span></span> <span data-ttu-id="99e13-110">Informationen zu Anwendungen, für die umfangreichere Inhalte erforderlich sind, finden Sie unter <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="99e13-110">For applications that require support for richer content, see <xref:System.Windows.Controls.RichTextBox>.</span></span> <span data-ttu-id="99e13-111">Anwendungen, die Kenn Wörter oder andere sensible Eingaben akzeptieren müssen, finden Sie unter <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="99e13-111">For applications that need to accept passwords or other sensitive input, see <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
 <span data-ttu-id="99e13-112">Die horizontale und vertikale Ausrichtung von Text in einem <xref:System.Windows.Controls.TextBox> erfolgt mit den Eigenschaften <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> und <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A>.</span><span class="sxs-lookup"><span data-stu-id="99e13-112">Horizontally and vertically aligning text within a <xref:System.Windows.Controls.TextBox> is done with the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> and <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> properties.</span></span> <span data-ttu-id="99e13-113">Die Ausrichtung der <xref:System.Windows.Controls.TextBox> im Layout der Seite erfolgt mit den Eigenschaften <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> und <xref:System.Windows.FrameworkElement.VerticalAlignment%2A>.</span><span class="sxs-lookup"><span data-stu-id="99e13-113">Aligning the <xref:System.Windows.Controls.TextBox> within the layout of the page is done with the <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> properties.</span></span>  
  
 <span data-ttu-id="99e13-114">Die beste Möglichkeit, den Rahmen um eine <xref:System.Windows.Controls.TextBox> auszublenden, besteht darin, die <xref:System.Windows.Controls.Control.BorderThickness%2A>-Eigenschaft des <xref:System.Windows.Controls.TextBox> auf `0`festzulegen.</span><span class="sxs-lookup"><span data-stu-id="99e13-114">The best way to hide the border around a <xref:System.Windows.Controls.TextBox> is to set the <xref:System.Windows.Controls.Control.BorderThickness%2A> property of the <xref:System.Windows.Controls.TextBox> to `0`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="99e13-115"><xref:System.Windows.Controls.TextBox> verfügt über eine integrierte Behandlung der Blasen <xref:System.Windows.UIElement.MouseUp> und <xref:System.Windows.UIElement.MouseDown>-Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="99e13-115"><xref:System.Windows.Controls.TextBox> has built-in handling for the bubbling  <xref:System.Windows.UIElement.MouseUp> and <xref:System.Windows.UIElement.MouseDown> events.</span></span> <span data-ttu-id="99e13-116">Folglich werden benutzerdefinierte Ereignishandler, die auf <xref:System.Windows.UIElement.MouseUp> oder <xref:System.Windows.UIElement.MouseDown> Ereignisse eines <xref:System.Windows.Controls.TextBox> lauschen, nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="99e13-116">Consequently, custom event handlers that listen for <xref:System.Windows.UIElement.MouseUp> or <xref:System.Windows.UIElement.MouseDown> events from a <xref:System.Windows.Controls.TextBox> will not be called.</span></span> <span data-ttu-id="99e13-117">Wenn Sie auf diese Ereignisse reagieren müssen, lauschen Sie stattdessen auf das Tunneling<xref:System.Windows.UIElement.PreviewMouseUp> und <xref:System.Windows.UIElement.PreviewMouseDown> Ereignisse, oder registrieren Sie die Handler mit dem <xref:System.Windows.EventSetter.HandledEventsToo%2A>-Argument (diese zweite Option ist nur über Code verfügbar).</span><span class="sxs-lookup"><span data-stu-id="99e13-117">If you need to respond to these events, listen for the tunneling <xref:System.Windows.UIElement.PreviewMouseUp> and <xref:System.Windows.UIElement.PreviewMouseDown> events instead, or register the handlers with the <xref:System.Windows.EventSetter.HandledEventsToo%2A> argument (this latter option is only available through code).</span></span> <span data-ttu-id="99e13-118">Markieren Sie das Ereignis nicht als behandelt, es sei denn, Sie möchten die <xref:System.Windows.Controls.TextBox> systemeigene Behandlung dieser Ereignisse absichtlich deaktivieren und beachten, dass dies relevante Auswirkungen auf die [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]des Steuer Elements hat.</span><span class="sxs-lookup"><span data-stu-id="99e13-118">Do not mark the event handled unless you deliberately want to disable <xref:System.Windows.Controls.TextBox> native handling of these events, and be aware that this has notable effects on the control's [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 <span data-ttu-id="99e13-119">Scrollleisten werden in einem <xref:System.Windows.Controls.TextBox> standardmäßig nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="99e13-119">Scrollbars are not visible on a <xref:System.Windows.Controls.TextBox> by default.</span></span> <span data-ttu-id="99e13-120">Legen Sie die Eigenschaften <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> und <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> auf <xref:System.Windows.Controls.ScrollBarVisibility.Visible> oder <xref:System.Windows.Controls.ScrollBarVisibility.Auto>fest, um Scrollleisten sichtbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="99e13-120">To make scrollbars visible, set the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> properties to <xref:System.Windows.Controls.ScrollBarVisibility.Visible> or <xref:System.Windows.Controls.ScrollBarVisibility.Auto>.</span></span>  
  
 <span data-ttu-id="99e13-121">In der Regel sollte das <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> Ereignis verwendet werden, um immer dann zu erkennen, wenn sich der Text in einem <xref:System.Windows.Controls.TextBox> oder <xref:System.Windows.Controls.RichTextBox> ändert, anstatt <xref:System.Windows.UIElement.KeyDown> zu erwarten.</span><span class="sxs-lookup"><span data-stu-id="99e13-121">Usually the <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event should be used to detect whenever the text in a <xref:System.Windows.Controls.TextBox> or <xref:System.Windows.Controls.RichTextBox> changes rather then <xref:System.Windows.UIElement.KeyDown> as you might expect.</span></span> <span data-ttu-id="99e13-122">Weitere Informationen finden [Sie unter Gewusst wie: erkennen, wenn Text in einem Textfeld geändert wurde](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) .</span><span class="sxs-lookup"><span data-stu-id="99e13-122">See [How to: Detect When Text in a TextBox Has Changed](~/docs/framework/wpf/controls/how-to-detect-when-text-in-a-textbox-has-changed.md) for an example.</span></span>  
  
## <a name="customizing-the-textbox-control"></a><span data-ttu-id="99e13-123">Anpassen des TextBox-Steuer Elements</span><span class="sxs-lookup"><span data-stu-id="99e13-123">Customizing the TextBox Control</span></span>  
 <span data-ttu-id="99e13-124">Um dieselben Eigenschaften Einstellungen auf mehrere <xref:System.Windows.Controls.TextBox> Steuerelemente anzuwenden, verwenden Sie die <xref:System.Windows.FrameworkElement.Style%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-124">To apply the same property settings to multiple <xref:System.Windows.Controls.TextBox> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="99e13-125">Sie können die Standard <xref:System.Windows.Controls.ControlTemplate> ändern, um dem Steuerelement eine eindeutige Darstellung zu verschaffen.</span><span class="sxs-lookup"><span data-stu-id="99e13-125">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="99e13-126">Weitere Informationen zum Erstellen eines <xref:System.Windows.Controls.ControlTemplate>finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="99e13-126">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="99e13-127">Informationen zu den für die <xref:System.Windows.Controls.TextBox>spezifischen Teilen und Zuständen finden Sie unter [TextBox-Stile und-Vorlagen](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="99e13-127">To see the parts and states that are specific to the <xref:System.Windows.Controls.TextBox>, see [TextBox Styles and Templates](~/docs/framework/wpf/controls/textbox-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="99e13-128">Abhängigkeits Eigenschaften für dieses Steuerelement können durch den Standardstil des Steuer Elements festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="99e13-128">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="99e13-129">Wenn eine Eigenschaft durch einen Standardstil festgelegt wird, kann sich die Eigenschaft von ihrem Standardwert ändern, wenn das Steuerelement in der Anwendung angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-129">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="99e13-130">Der Standardstil wird bestimmt, welches Desktop Design verwendet wird, wenn die Anwendung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-130">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="99e13-131">Weitere Informationen finden Sie unter [standardmäßige WPF](https://go.microsoft.com/fwlink/?LinkID=158252)-Designs.</span><span class="sxs-lookup"><span data-stu-id="99e13-131">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
[!INCLUDE[setting-a-visual-property](~/includes/visual-property-note.md)]  
  
## Examples  
 <span data-ttu-id="99e13-132">In diesem Beispiel wird gezeigt, wie die Text-Eigenschaft verwendet wird, um den ursprünglichen Text Inhalt eines TextBox-Steuer Elements festzulegen.</span><span class="sxs-lookup"><span data-stu-id="99e13-132">This example shows how to use the Text property to set the initial text contents of a TextBox control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="99e13-133">Obwohl die Extensible Application Markup Language (XAML)-Version des Beispiels die \<TextBox. Text > Tags um den Text des TextBox-Inhalts jeder Schaltfläche verwenden könnte, ist dies nicht notwendig, da das Textfeld das ContentPropertyAttribute-Attribut auf die Text-Eigenschaft anwendet.</span><span class="sxs-lookup"><span data-stu-id="99e13-133">Although the Extensible Application Markup Language (XAML) version of the example could use the \<TextBox.Text> tags around the text of each button's TextBox content, it is not necessary because the TextBox applies the ContentPropertyAttribute attribute to the Text property.</span></span>  
  
```xaml  
<TextBox Name="tbSettingText">  
  Initial text contents of the TextBox.  
</TextBox>  
```  
  
```csharp  
tbSettingText.Text = "Initial text contents of the TextBox.";  
```  
  
```vb  
tbSettingText.Text = "Initial text contents of the TextBox."  
```  
  
 <span data-ttu-id="99e13-134">Weitere Beispiele finden Sie in der Version 4,0 dieses Dokuments: [TextBox-Klasse](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span><span class="sxs-lookup"><span data-stu-id="99e13-134">For additional examples, see the 4.0 version of this document: [TextBox Class](https://msdn.microsoft.com/library/ms617604\(v=vs.100\).aspx).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.PasswordBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
    <related type="ExternalDocumentation" href="https://msdn.microsoft.com/library/aa969815(v=vs.100).aspx"><span data-ttu-id="99e13-135">Übersicht über TextBox</span><span class="sxs-lookup"><span data-stu-id="99e13-135">TextBox Overview</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053"><span data-ttu-id="99e13-136">Beispiel für WPF-Steuerelemente Gallery</span><span class="sxs-lookup"><span data-stu-id="99e13-136">WPF Controls Gallery Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TextBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99e13-137">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Windows.Controls.TextBox" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-137">Initializes a new instance of the <see cref="T:System.Windows.Controls.TextBox" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretIndex">
      <MemberSignature Language="C#" Value="public int CaretIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaretIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CaretIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CaretIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CaretIndex : int with get, set" Usage="System.Windows.Controls.TextBox.CaretIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-138">Ruft den Index der Einfügeposition für das Caretzeichen ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-138">Gets or sets the insertion position index of the caret.</span></span></summary>
        <value><span data-ttu-id="99e13-139">Der nullbasierte Index für die Einfügeposition des Caretzeichens.</span><span class="sxs-lookup"><span data-stu-id="99e13-139">The zero-based insertion position index of the caret.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-140">Beim erhalten dieser Eigenschaft wird der aktuelle einfügepositions-Index der Einfügemarke zurückgegeben (Weitere Informationen zur Terminologie wie "Einfügeposition" finden Sie unter <xref:System.Windows.Documents.TextPointer></span><span class="sxs-lookup"><span data-stu-id="99e13-140">Getting this property returns the current insertion position index of the caret (see <xref:System.Windows.Documents.TextPointer> for information on terminology like "insertion position").</span></span> <span data-ttu-id="99e13-141">Durch Festlegen dieser Eigenschaft wird die Einfügemarke an die angegebene Einfügeposition verschoben.</span><span class="sxs-lookup"><span data-stu-id="99e13-141">Setting this property moves the caret to the specified insertion position.</span></span>  
  
 <span data-ttu-id="99e13-142">Eine Einfügeposition liegt zwischen Zeichen oder Element Tags.</span><span class="sxs-lookup"><span data-stu-id="99e13-142">An insertion position is between either characters or element tags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Documents.TextPointer" />
      </Docs>
    </Member>
    <Member MemberName="CharacterCasing">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.CharacterCasing CharacterCasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.CharacterCasing CharacterCasing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberSignature Language="VB.NET" Value="Public Property CharacterCasing As CharacterCasing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::CharacterCasing CharacterCasing { System::Windows::Controls::CharacterCasing get(); void set(System::Windows::Controls::CharacterCasing value); };" />
      <MemberSignature Language="F#" Value="member this.CharacterCasing : System.Windows.Controls.CharacterCasing with get, set" Usage="System.Windows.Controls.TextBox.CharacterCasing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.CharacterCasing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-143">Ruft die Groß- oder Kleinschreibung von Zeichen ab, die manuell in das Textfeld eingegeben werden, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-143">Gets or sets how characters are cased when they are manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="99e13-144">Einer der <see cref="T:System.Windows.Controls.CharacterCasing" />-Werte, der die Groß- oder Kleinschreibung manuell eingegebener Zeichen angibt.</span><span class="sxs-lookup"><span data-stu-id="99e13-144">One of the <see cref="T:System.Windows.Controls.CharacterCasing" /> values that specifies how manually entered characters are cased.</span></span> <span data-ttu-id="99e13-145">Der Standardwert lautet <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-145">The default is <see cref="F:System.Windows.Controls.CharacterCasing.Normal" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-146">Diese Eigenschaft wirkt sich nicht auf Zeichen aus, die Programm gesteuert hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="99e13-146">This property does not affect characters that are added programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_CharacterCasing"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="99e13-147">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="99e13-147">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="99e13-148">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="99e13-148">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.CharacterCasingProperty>|  
|<span data-ttu-id="99e13-149">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="99e13-149">Metadata properties set to `true`</span></span>|<span data-ttu-id="99e13-150">Keine</span><span class="sxs-lookup"><span data-stu-id="99e13-150">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="99e13-151">Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Windows.Controls.TextBox.CharacterCasing%2A>-Eigenschaft verwenden, um alle manuell eingegebenen Zeichen in Großbuchstaben in einem Textfeld zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="99e13-151">The following example shows how to use the <xref:System.Windows.Controls.TextBox.CharacterCasing%2A> property to convert all manually entered characters to uppercase in a text box.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#CharacterCasingExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/charactercasingexample.xaml#charactercasingexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/CharacterCasingExample.cs#charactercasingcodeexamplewholepage)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#CharacterCasingCodeExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/charactercasingexample.vb#charactercasingcodeexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharacterCasingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CharacterCasingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CharacterCasingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CharacterCasingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CharacterCasingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CharacterCasingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.CharacterCasingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-152">Bezeichnet die <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-152">Identifies the <see cref="P:System.Windows.Controls.TextBox.CharacterCasing" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="textBox.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99e13-153">Löscht den gesamten Inhalt aus dem Textfeld.</span><span class="sxs-lookup"><span data-stu-id="99e13-153">Clears all the content from the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromLineIndex">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromLineIndex (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromLineIndex(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromLineIndex (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromLineIndex(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromLineIndex : int -&gt; int" Usage="textBox.GetCharacterIndexFromLineIndex lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="99e13-154">Der nullbasierte Index der Zeile, aus der der Anfangszeichenindex abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-154">The zero-based index of the line to retrieve the initial character index for.</span></span></param>
        <summary><span data-ttu-id="99e13-155">Gibt den nullbasierten Zeichenindex für das erste Zeichen in der angegebenen Zeile zurück.</span><span class="sxs-lookup"><span data-stu-id="99e13-155">Returns the zero-based character index for the first character in the specified line.</span></span></summary>
        <returns><span data-ttu-id="99e13-156">Der nullbasierte Zeichenindex für das erste Zeichen in der angegebenen Zeile.</span><span class="sxs-lookup"><span data-stu-id="99e13-156">The zero-based index for the first character in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterIndexFromPoint">
      <MemberSignature Language="C#" Value="public int GetCharacterIndexFromPoint (System.Windows.Point point, bool snapToText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCharacterIndexFromPoint(valuetype System.Windows.Point point, bool snapToText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterIndexFromPoint (point As Point, snapToText As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCharacterIndexFromPoint(System::Windows::Point point, bool snapToText);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterIndexFromPoint : System.Windows.Point * bool -&gt; int" Usage="textBox.GetCharacterIndexFromPoint (point, snapToText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="snapToText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="99e13-157">Ein Punkt im Koordinatenbereich des <see cref="T:System.Windows.Controls.TextBox" />-Objekts, für das ein Index zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-157">A point in <see cref="T:System.Windows.Controls.TextBox" /> coordinate-space for which to return an index.</span></span></param>
        <param name="snapToText"><span data-ttu-id="99e13-158"><see langword="true" />, um den nächstliegenden Index zurückzugeben, wenn am angegebenen Punkt kein Zeichen vorhanden ist, <see langword="false" />, um –1 zurückzugeben, wenn am angegebenen Punkt kein Zeichen vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="99e13-158"><see langword="true" /> to return the nearest index if there is no character at the specified point; <see langword="false" /> to return -1 if there is no character at the specified point.</span></span></param>
        <summary><span data-ttu-id="99e13-159">Gibt den nullbasierten Index des Zeichens zurück, das dem angegebenen Punkt am nächsten ist.</span><span class="sxs-lookup"><span data-stu-id="99e13-159">Returns the zero-based index of the character that is closest to the specified point.</span></span></summary>
        <returns><span data-ttu-id="99e13-160">Der Index des Zeichens, das dem angegebenen Punkt am nächsten ist, oder –1, wenn kein gültiger Index gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-160">The index of the character that is closest to the specified point, or -1 if no valid index can be found.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetFirstVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetFirstVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetFirstVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFirstVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetFirstVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetFirstVisibleLineIndex : unit -&gt; int" Usage="textBox.GetFirstVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99e13-161">Gibt den Zeilenindex der ersten Zeile zurück, die derzeit im Textfeld angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-161">Returns the line index for the first line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="99e13-162">Der nullbasierte Index der ersten sichtbaren Zeile im Textfeld.</span><span class="sxs-lookup"><span data-stu-id="99e13-162">The zero-based index for the first visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLastVisibleLineIndex">
      <MemberSignature Language="C#" Value="public int GetLastVisibleLineIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLastVisibleLineIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastVisibleLineIndex () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLastVisibleLineIndex();" />
      <MemberSignature Language="F#" Value="member this.GetLastVisibleLineIndex : unit -&gt; int" Usage="textBox.GetLastVisibleLineIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99e13-163">Gibt den Zeilenindex der letzten Zeile zurück, die derzeit im Textfeld angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-163">Returns the line index for the last line that is currently visible in the text box.</span></span></summary>
        <returns><span data-ttu-id="99e13-164">Der nullbasierte Index der letzten sichtbaren Zeile im Textfeld.</span><span class="sxs-lookup"><span data-stu-id="99e13-164">The zero-based index for the last visible line in the text box.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineIndexFromCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetLineIndexFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineIndexFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineIndexFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineIndexFromCharacterIndex (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineIndexFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineIndexFromCharacterIndex : int -&gt; int" Usage="textBox.GetLineIndexFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="99e13-165">Der nullbasierte Zeichenindex, für den der zugeordnete Zeilenindex abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-165">The zero-based character index for which to retrieve the associated line index.</span></span></param>
        <summary><span data-ttu-id="99e13-166">Gibt den nullbasierten Zeilenindex für die Zeile zurück, die den angegebenen Zeichenindex enthält.</span><span class="sxs-lookup"><span data-stu-id="99e13-166">Returns the zero-based line index for the line that contains the specified character index.</span></span></summary>
        <returns><span data-ttu-id="99e13-167">Der nullbasierte Index für die Zeile, die den angegebenen Zeichenindex enthält.</span><span class="sxs-lookup"><span data-stu-id="99e13-167">The zero-based index for the line that contains the specified character index.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromPoint(System.Windows.Point,System.Boolean)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="Overload:System.Windows.Controls.TextBox.GetRectFromCharacterIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLength">
      <MemberSignature Language="C#" Value="public int GetLineLength (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineLength(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineLength (lineIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineLength(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineLength : int -&gt; int" Usage="textBox.GetLineLength lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="99e13-168">Der nullbasierte Zeilenindex, für den die Zeichenanzahl zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-168">The zero-based line index for which to return a character count.</span></span></param>
        <summary><span data-ttu-id="99e13-169">Gibt die Anzahl von Zeichen in der angegebenen Zeile zurück.</span><span class="sxs-lookup"><span data-stu-id="99e13-169">Returns the number of characters in the specified line.</span></span></summary>
        <returns><span data-ttu-id="99e13-170">Die Anzahl von Zeichen in der angegebenen Zeile.</span><span class="sxs-lookup"><span data-stu-id="99e13-170">The number of characters in the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetLineText">
      <MemberSignature Language="C#" Value="public string GetLineText (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLineText(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineText (lineIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLineText(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.GetLineText : int -&gt; string" Usage="textBox.GetLineText lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="99e13-171">Der nullbasierte Zeilenindex, für den der aktuell angezeigte Text abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-171">The zero-based line index for which to retrieve the currently displayed text.</span></span></param>
        <summary><span data-ttu-id="99e13-172">Gibt den Text zurück, der derzeit in der angegebenen Zeile angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-172">Returns the text that is currently displayed on the specified line.</span></span></summary>
        <returns><span data-ttu-id="99e13-173">Eine Zeichenfolge, die eine Kopie des Texts enthält, der aktuell in der angegebenen Zeile angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-173">A string containing a copy of the text currently visible on the specified line.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
      </Docs>
    </Member>
    <Member MemberName="GetNextSpellingErrorCharacterIndex">
      <MemberSignature Language="C#" Value="public int GetNextSpellingErrorCharacterIndex (int charIndex, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetNextSpellingErrorCharacterIndex(int32 charIndex, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextSpellingErrorCharacterIndex (charIndex As Integer, direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNextSpellingErrorCharacterIndex(int charIndex, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextSpellingErrorCharacterIndex : int * System.Windows.Documents.LogicalDirection -&gt; int" Usage="textBox.GetNextSpellingErrorCharacterIndex (charIndex, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="99e13-174">Der nullbasierte Zeichenindex, der eine Position angibt, ab der nach dem nächsten Rechtschreibfehler gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-174">The zero-based character index indicating a position from which to search for the next spelling error.</span></span></param>
        <param name="direction"><span data-ttu-id="99e13-175">Einer der <see cref="T:System.Windows.Documents.LogicalDirection" />-Werte, der die Richtung angibt, in der nach dem nächsten Rechtschreibfehler gesucht werden soll, beginnend am angegebenen <paramref name="charIndex" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-175">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the direction in which to search for the next spelling error, starting at the specified <paramref name="charIndex" />.</span></span></param>
        <summary><span data-ttu-id="99e13-176">Gibt den Anfangszeichenindex für den nächsten Rechtschreibfehler im Inhalt des Textfelds zurück.</span><span class="sxs-lookup"><span data-stu-id="99e13-176">Returns the beginning character index for the next spelling error in the contents of the text box.</span></span></summary>
        <returns><span data-ttu-id="99e13-177">Der Anfangszeichenindex für den Anfang des nächsten Rechtschreibfehlers im Inhalt des Textfelds, oder –1, wenn kein weiterer Rechtschreibfehler vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="99e13-177">The character index for the beginning of the next spelling error in the contents of the text box, or -1 if no next spelling error exists.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetRectFromCharacterIndex">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="99e13-178">Gibt das Rechteck für einen Rand des Zeichens am angegebenen Index zurück.</span><span class="sxs-lookup"><span data-stu-id="99e13-178">Returns the rectangle for an edge of the character at the specified index.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="99e13-179">Der nullbasierte Zeichenindex des Zeichens, für das das Rechteck abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-179">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <summary><span data-ttu-id="99e13-180">Gibt das Rechteck für den führenden Rand des Zeichens am angegebenen Index zurück.</span><span class="sxs-lookup"><span data-stu-id="99e13-180">Returns the rectangle for the leading edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="99e13-181">Ein Rechteck für den führenden Rand des Zeichens am angegebenen Zeichenindex oder <see cref="P:System.Windows.Rect.Empty" />, wenn kein umschließendes Rechteck bestimmt werden kann.</span><span class="sxs-lookup"><span data-stu-id="99e13-181">A rectangle for the leading edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-182">Da diese Methode ein Rechteck zurückgibt, das einen Rand des Zeichens darstellt, ist die Breite des Rechtecks 0.</span><span class="sxs-lookup"><span data-stu-id="99e13-182">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRectFromCharacterIndex">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetRectFromCharacterIndex (int charIndex, bool trailingEdge);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetRectFromCharacterIndex(int32 charIndex, bool trailingEdge) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetRectFromCharacterIndex(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectFromCharacterIndex (charIndex As Integer, trailingEdge As Boolean) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetRectFromCharacterIndex(int charIndex, bool trailingEdge);" />
      <MemberSignature Language="F#" Value="member this.GetRectFromCharacterIndex : int * bool -&gt; System.Windows.Rect" Usage="textBox.GetRectFromCharacterIndex (charIndex, trailingEdge)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
        <Parameter Name="trailingEdge" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="99e13-183">Der nullbasierte Zeichenindex des Zeichens, für das das Rechteck abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-183">The zero-based character index of the character for which to retrieve the rectangle.</span></span></param>
        <param name="trailingEdge"><span data-ttu-id="99e13-184"><see langword="true" />, um den nachgestellten Rand des Zeichens abzurufen, <see langword="false" />, um den führenden Rand des Zeichens abzurufen.</span><span class="sxs-lookup"><span data-stu-id="99e13-184"><see langword="true" /> to get the trailing edge of the character; <see langword="false" /> to get the leading edge of the character.</span></span></param>
        <summary><span data-ttu-id="99e13-185">Gibt das Rechteck für den führenden oder nachgestellten Rand des Zeichens am angegebenen Index zurück.</span><span class="sxs-lookup"><span data-stu-id="99e13-185">Returns the rectangle for the leading or trailing edge of the character at the specified index.</span></span></summary>
        <returns><span data-ttu-id="99e13-186">Ein Rechteck für einen Rand des Zeichens am angegebenen Zeichenindex oder <see cref="P:System.Windows.Rect.Empty" />, wenn kein umschließendes Rechteck bestimmt werden kann.</span><span class="sxs-lookup"><span data-stu-id="99e13-186">A rectangle for an edge of the character at the specified character index, or <see cref="P:System.Windows.Rect.Empty" /> if a bounding rectangle cannot be determined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-187">Da diese Methode ein Rechteck zurückgibt, das einen Rand des Zeichens darstellt, ist die Breite des Rechtecks 0.</span><span class="sxs-lookup"><span data-stu-id="99e13-187">Because this method returns a rectangle that represents an edge of the character, the width of the rectangle is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="99e13-188"><paramref name="charIndex" /> ist negativ oder größer als die Länge des Inhalts.</span><span class="sxs-lookup"><span data-stu-id="99e13-188"><paramref name="charIndex" /> is negative or is greater than the length of the content.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingError">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellingError GetSpellingError (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Controls.SpellingError GetSpellingError(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingError (charIndex As Integer) As SpellingError" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Controls::SpellingError ^ GetSpellingError(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingError : int -&gt; System.Windows.Controls.SpellingError" Usage="textBox.GetSpellingError charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellingError</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="99e13-189">Der nullbasierte Zeichenindex einer Position im Inhalt, der auf Rechtschreibfehler untersucht wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-189">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="99e13-190">Gibt ein <see cref="T:System.Windows.Controls.SpellingError" />-Objekt zurück, das einem Rechtschreibfehler am angegebenen Zeichenindex zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="99e13-190">Returns a <see cref="T:System.Windows.Controls.SpellingError" /> object associated with any spelling error at the specified character index.</span></span></summary>
        <returns><span data-ttu-id="99e13-191">Ein <see cref="T:System.Windows.Controls.SpellingError" />-Objekt mit Details zum Rechtschreibfehler, der bei dem durch <paramref name="charIndex" /> angegebenen Zeichen gefunden wurde, oder <see langword="null" />, wenn beim angegebenen Zeichen kein Rechtschreibfehler gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="99e13-191">A <see cref="T:System.Windows.Controls.SpellingError" /> object containing the details of the spelling error found at the character indicated by <paramref name="charIndex" />, or <see langword="null" /> if no spelling error exists at the specified character.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetNextSpellingErrorCharacterIndex(System.Int32,System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorLength">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorLength (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorLength(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorLength (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorLength(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorLength : int -&gt; int" Usage="textBox.GetSpellingErrorLength charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="99e13-192">Der nullbasierte Zeichenindex einer Position im Inhalt, der auf Rechtschreibfehler untersucht wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-192">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="99e13-193">Gibt die Länge eines Rechtschreibfehlers zurück, der das angegebene Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="99e13-193">Returns the length of any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="99e13-194">Die Länge eines Rechtschreibfehlers, der das durch charIndex angegebene Zeichen enthält, oder 0, wenn das angegebene Zeichen in keinem Rechtschreibfehler enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="99e13-194">The length of any spelling error that includes the character specified by charIndex, or 0 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpellingErrorStart">
      <MemberSignature Language="C#" Value="public int GetSpellingErrorStart (int charIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetSpellingErrorStart(int32 charIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.GetSpellingErrorStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSpellingErrorStart (charIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetSpellingErrorStart(int charIndex);" />
      <MemberSignature Language="F#" Value="member this.GetSpellingErrorStart : int -&gt; int" Usage="textBox.GetSpellingErrorStart charIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="charIndex"><span data-ttu-id="99e13-195">Der nullbasierte Zeichenindex einer Position im Inhalt, der auf Rechtschreibfehler untersucht wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-195">The zero-based character index of a position in content to examine for a spelling error.</span></span></param>
        <summary><span data-ttu-id="99e13-196">Gibt den Anfangszeichenindex für jeden Rechtschreibfehler zurück, der das angegebene Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="99e13-196">Returns the beginning character index for any spelling error that includes the specified character.</span></span></summary>
        <returns><span data-ttu-id="99e13-197">Der Anfangszeichenindex eines Rechtschreibfehlers, der das durch <paramref name="charIndex" /> angegebene Zeichen enthält, oder –1, wenn das angegebene Zeichen in keinem Rechtschreibfehler enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="99e13-197">The beginning character index for any spelling error that includes the character specified by <paramref name="charIndex" />, or -1 if the specified character is not part of a spelling error.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="System.Windows.Controls.TextBox.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-198">Ruft die Gesamtzahl der Zeilen im Textfeld ab.</span><span class="sxs-lookup"><span data-stu-id="99e13-198">Gets the total number of lines in the text box.</span></span></summary>
        <value><span data-ttu-id="99e13-199">Die Gesamtanzahl der Zeilen im Textfeld oder-1, wenn keine Layoutinformationen verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="99e13-199">The total number of lines in the text box, or -1 if layout information is not available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-200">Wenn das Umbenennen von Text aktiviert ist, kann dieser Wert durch Ändern der Breite des Textfelds geändert werden.</span><span class="sxs-lookup"><span data-stu-id="99e13-200">If text wrapping is enabled, changing the width of the text box may change this value.</span></span>  
  
 <span data-ttu-id="99e13-201">Der zurückgegebene Wert entspricht der Gesamtzahl der Zeilen im Textfeld, unabhängig davon, wie viele Zeilen momentan sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="99e13-201">The value returned is the total number of lines in the text box, regardless of how many are currently visible.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetCharacterIndexFromLineIndex(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineLength(System.Int32)" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLineText(System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.TextBox.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-202">Ruft einen Enumerator für die logischen untergeordneten Elemente des <see cref="T:System.Windows.Controls.TextBox" />-Objekts ab.</span><span class="sxs-lookup"><span data-stu-id="99e13-202">Gets an enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></summary>
        <value><span data-ttu-id="99e13-203">Ein Enumerator für die logischen untergeordneten Elemente des <see cref="T:System.Windows.Controls.TextBox" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="99e13-203">An enumerator for the logical child elements of the <see cref="T:System.Windows.Controls.TextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-204">Die <xref:System.Windows.Controls.TextBox.LogicalChildren%2A>-Eigenschaft gibt einen Enumerator für eine Auflistung zurück, die eine <xref:System.String> enthält, die gleich der <xref:System.Windows.Controls.TextBox.Text%2A>-Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="99e13-204">The <xref:System.Windows.Controls.TextBox.LogicalChildren%2A> property returns an enumerator for a collection that contains a <xref:System.String> that is equal to the <xref:System.Windows.Controls.TextBox.Text%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLength : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Modifiability=System.Windows.Modifiability.Unmodifiable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-205">Ruft die maximale Anzahl der Zeichen ab, die manuell in das Textfeld eingegeben werden können, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-205">Gets or sets the maximum number of characters that can be manually entered into the text box.</span></span></summary>
        <value><span data-ttu-id="99e13-206">Die maximale Anzahl der Zeichen, die manuell in das Textfeld eingegeben werden können.</span><span class="sxs-lookup"><span data-stu-id="99e13-206">The maximum number of characters that can be manually entered into the text box.</span></span> <span data-ttu-id="99e13-207">Der Standardwert ist 0, d. h. unbegrenzt.</span><span class="sxs-lookup"><span data-stu-id="99e13-207">The default is 0, which indicates no limit.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-208">Sie können diese Eigenschaft verwenden, um die im Steuerelement eingegebene Textlänge für Werte wie Postleitzahlen und Telefonnummern einzuschränken.</span><span class="sxs-lookup"><span data-stu-id="99e13-208">You can use this property to restrict the length of text entered in the control for values such as postal codes and telephone numbers.</span></span> <span data-ttu-id="99e13-209">Sie können diese Eigenschaft auch verwenden, um die Länge des Texts einzuschränken, der eingegeben wird, wenn die Daten in einer Datenbank gespeichert werden, sodass der Text, der in das Steuerelement eingegeben wird, nicht die maximale Länge des entsprechenden Felds in der Datenbank überschreitet.</span><span class="sxs-lookup"><span data-stu-id="99e13-209">You can also use this property to restrict the length of text entered when the data is to be stored in a database so that the text entered into the control does not exceed the maximum length of the corresponding field in the database.</span></span>  
  
 <span data-ttu-id="99e13-210">Diese Eigenschaft wirkt sich nicht auf Zeichen aus, die Programm gesteuert hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="99e13-210">This property does not affect characters that are added programmatically.</span></span>  
  
 <span data-ttu-id="99e13-211">Wenn diese Eigenschaft auf 0 festgelegt ist, wird die maximale Länge des Texts, der im Steuerelement eingegeben werden kann, nur durch den verfügbaren Arbeitsspeicher beschränkt.</span><span class="sxs-lookup"><span data-stu-id="99e13-211">When this property is set to 0, the maximum length of the text that can be entered in the control is limited only by available memory.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLength"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="99e13-212">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="99e13-212">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="99e13-213">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="99e13-213">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLengthProperty>|  
|<span data-ttu-id="99e13-214">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="99e13-214">Metadata properties set to `true`</span></span>|<span data-ttu-id="99e13-215">Keine</span><span class="sxs-lookup"><span data-stu-id="99e13-215">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="99e13-216">Im folgenden Beispiel wird gezeigt, wie eine <xref:System.Windows.Controls.TextBox> mit einer <xref:System.Windows.Controls.TextBox.MaxLength%2A> von 500 Zeichen erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-216">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLength%2A> of 500 characters.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
      </Docs>
    </Member>
    <Member MemberName="MaxLengthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLengthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLengthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLengthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLengthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLengthProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLengthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-217">Bezeichnet die <see cref="P:System.Windows.Controls.TextBox.MaxLength" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-217">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLength" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxLines">
      <MemberSignature Language="C#" Value="public int MaxLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MaxLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxLines : int with get, set" Usage="System.Windows.Controls.TextBox.MaxLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(2147483647)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-218">Ruft die maximale Anzahl sichtbarer Zeilen ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-218">Gets or sets the maximum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="99e13-219">Die maximale Anzahl sichtbarer Zeilen.</span><span class="sxs-lookup"><span data-stu-id="99e13-219">The maximum number of visible lines.</span></span> <span data-ttu-id="99e13-220">Der Standardwert lautet <see cref="F:System.Int32.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-220">The default is <see cref="F:System.Int32.MaxValue" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-221">Beim erhalten dieser Eigenschaft wird der aktuelle Wert <xref:System.Windows.Controls.TextBox.MaxLines%2A>zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="99e13-221">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span> <span data-ttu-id="99e13-222">Das Festlegen dieser Eigenschaft bewirkt, dass die Größe des Textfelds geändert wird, wenn die Anzahl der sichtbaren Zeilen den von <xref:System.Windows.Controls.TextBox.MaxLines%2A>angegebenen Grenzwert überschreitet.</span><span class="sxs-lookup"><span data-stu-id="99e13-222">Setting this property causes the text box to resize if the number of visible lines exceeds the limit specified by <xref:System.Windows.Controls.TextBox.MaxLines%2A>.</span></span>  
  
 <span data-ttu-id="99e13-223">Diese Eigenschaft gilt nur für sichtbare Zeilen und schränkt nicht die tatsächliche Zeilen Anzahl ein.</span><span class="sxs-lookup"><span data-stu-id="99e13-223">This property applies only to visible lines, and does not constrain the actual number of lines.</span></span> <span data-ttu-id="99e13-224">Abhängig von der Konfiguration kann ein Textfeld zusätzliche nicht sichtbare Zeilen enthalten, auf die durch Scrollen zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="99e13-224">Depending on its configuration, a text box may contain additional non-visible lines that are accessible by scrolling.</span></span>  
  
 <span data-ttu-id="99e13-225">Wenn die <xref:System.Windows.FrameworkElement.Height%2A>-Eigenschaft für einen <xref:System.Windows.Controls.TextBox>explizit festgelegt wird, werden die Eigenschaften Werte <xref:System.Windows.Controls.TextBox.MaxLines%2A> und <xref:System.Windows.Controls.TextBox.MinLines%2A> ignoriert.</span><span class="sxs-lookup"><span data-stu-id="99e13-225">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MaxLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="99e13-226">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="99e13-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="99e13-227">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="99e13-227">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MaxLinesProperty>|  
|<span data-ttu-id="99e13-228">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="99e13-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="99e13-229">Im folgenden Beispiel wird gezeigt, wie eine <xref:System.Windows.Controls.TextBox> mit dem <xref:System.Windows.Controls.TextBox.MaxLines%2A> Wert 5 erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-229">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MaxLines%2A> value of 5.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="99e13-230"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> ist kleiner als <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-230"><see cref="P:System.Windows.Controls.TextBox.MaxLines" /> is less than <see cref="P:System.Windows.Controls.TextBox.MinLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MinLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MaxLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MaxLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-231">Bezeichnet die <see cref="P:System.Windows.Controls.TextBox.MaxLines" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-231">Identifies the <see cref="P:System.Windows.Controls.TextBox.MaxLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="textBox.MeasureOverride constraint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="99e13-232">Eine <see cref="T:System.Windows.Size" />-Struktur, die die Einschränkungen für die Größe des Textfelds angibt.</span><span class="sxs-lookup"><span data-stu-id="99e13-232">A <see cref="T:System.Windows.Size" /> structure that specifies the constraints on the size of the text box.</span></span></param>
        <summary><span data-ttu-id="99e13-233">Passt die Größe des Textfelds an dessen Inhalt an.</span><span class="sxs-lookup"><span data-stu-id="99e13-233">Sizes the text box to its content.</span></span></summary>
        <returns><span data-ttu-id="99e13-234">Eine <see cref="T:System.Windows.Size" />-Struktur, die die neue Größe des Textfelds angibt.</span><span class="sxs-lookup"><span data-stu-id="99e13-234">A <see cref="T:System.Windows.Size" /> structure indicating the new size of the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-235">Überschreiben Sie diese Methode, um ein benutzerdefiniertes Größen Anpassungs Verhalten</span><span class="sxs-lookup"><span data-stu-id="99e13-235">Override this method to implement custom sizing behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinLines">
      <MemberSignature Language="C#" Value="public int MinLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.MinLines" />
      <MemberSignature Language="VB.NET" Value="Public Property MinLines As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinLines { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MinLines : int with get, set" Usage="System.Windows.Controls.TextBox.MinLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-236">Ruft die Mindestanzahl sichtbarer Zeilen ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-236">Gets or sets the minimum number of visible lines.</span></span></summary>
        <value><span data-ttu-id="99e13-237">Die Mindestanzahl sichtbarer Zeilen.</span><span class="sxs-lookup"><span data-stu-id="99e13-237">The minimum number of visible lines.</span></span> <span data-ttu-id="99e13-238">Der Standardwert ist 1.</span><span class="sxs-lookup"><span data-stu-id="99e13-238">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-239">Beim erhalten dieser Eigenschaft wird der aktuelle Wert <xref:System.Windows.Controls.TextBox.MinLines%2A>zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="99e13-239">Getting this property returns the current value of <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span> <span data-ttu-id="99e13-240">Das Festlegen dieser Eigenschaft bewirkt, dass die Größe des Textfelds geändert wird, wenn die Anzahl der sichtbaren Zeilen kleiner ist als der von <xref:System.Windows.Controls.TextBox.MinLines%2A>angegebene Wert.</span><span class="sxs-lookup"><span data-stu-id="99e13-240">Setting this property causes the text box to resize if the number of visible lines is less than value specified by <xref:System.Windows.Controls.TextBox.MinLines%2A>.</span></span>  
  
 <span data-ttu-id="99e13-241">Wenn die <xref:System.Windows.FrameworkElement.Height%2A>-Eigenschaft für einen <xref:System.Windows.Controls.TextBox>explizit festgelegt wird, werden die Eigenschaften Werte <xref:System.Windows.Controls.TextBox.MaxLines%2A> und <xref:System.Windows.Controls.TextBox.MinLines%2A> ignoriert.</span><span class="sxs-lookup"><span data-stu-id="99e13-241">If the <xref:System.Windows.FrameworkElement.Height%2A> property is explicitly set on a <xref:System.Windows.Controls.TextBox>, the <xref:System.Windows.Controls.TextBox.MaxLines%2A> and <xref:System.Windows.Controls.TextBox.MinLines%2A> property values are ignored.</span></span>  
  
<a name="dependencyPropertyInfo_MinLines"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="99e13-242">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="99e13-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="99e13-243">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="99e13-243">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.MinLinesProperty>|  
|<span data-ttu-id="99e13-244">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="99e13-244">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="99e13-245">Im folgenden Beispiel wird gezeigt, wie eine <xref:System.Windows.Controls.TextBox> mit dem <xref:System.Windows.Controls.TextBox.MinLines%2A> Wert 1 erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-245">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.MinLines%2A> value of 1.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="99e13-246"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> ist größer als <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-246"><see cref="P:System.Windows.Controls.TextBox.MinLines" /> is greater than <see cref="P:System.Windows.Controls.TextBox.MaxLines" />.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLines" />
        <altmember cref="P:System.Windows.Controls.TextBox.MaxLength" />
      </Docs>
    </Member>
    <Member MemberName="MinLinesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinLinesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinLinesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinLinesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinLinesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinLinesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.MinLinesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-247">Bezeichnet die <see cref="P:System.Windows.Controls.TextBox.MinLines" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-247">Identifies the <see cref="P:System.Windows.Controls.TextBox.MinLines" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="textBox.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="99e13-248">Erstellt ein <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Objekt für das Textfeld und gibt dieses zurück.</span><span class="sxs-lookup"><span data-stu-id="99e13-248">Creates and returns an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></summary>
        <returns><span data-ttu-id="99e13-249">Ein <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Objekt für das Textfeld.</span><span class="sxs-lookup"><span data-stu-id="99e13-249">An <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> object for the text box.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-250">Diese Methode überschreibt <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="99e13-250">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="textBox.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="99e13-251">Argumente für das zugeordnete Ereignis.</span><span class="sxs-lookup"><span data-stu-id="99e13-251">Arguments for the associated event.</span></span></param>
        <summary><span data-ttu-id="99e13-252">Wird aufgerufen, wenn die effektiven Werte mindestens einer für das Element vorhandenen Abhängigkeitseigenschaft geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="99e13-252">Called when one or more of the dependency properties that exist on the element have had their effective values changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-253">Diese Methode überschreibt <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="99e13-253">This method overrides <xref:System.Windows.FrameworkElement.OnPropertyChanged%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToLine">
      <MemberSignature Language="C#" Value="public void ScrollToLine (int lineIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToLine(int32 lineIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ScrollToLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToLine (lineIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToLine(int lineIndex);" />
      <MemberSignature Language="F#" Value="member this.ScrollToLine : int -&gt; unit" Usage="textBox.ScrollToLine lineIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineIndex"><span data-ttu-id="99e13-254">Der nullbasierte Zeilenindex der Zeile, die durch einen Bildlauf sichtbar gemacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-254">The zero-based line index of the line to scroll into view.</span></span></param>
        <summary><span data-ttu-id="99e13-255">Führt einen Bildlauf aus, um die Zeile am angegebenen Zeilenindex sichtbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="99e13-255">Scrolls the line at the specified line index into view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-256">Diese Methode bewirkt, dass das Textfeld durch den minimalen Betrag Scrollen muss, um die angegebene Zeile in die vollständige Ansicht zu bringen.</span><span class="sxs-lookup"><span data-stu-id="99e13-256">This method causes the text box to scroll by the minimum amount necessary to bring the specified line into full view.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.GetFirstVisibleLineIndex" />
        <altmember cref="M:System.Windows.Controls.TextBox.GetLastVisibleLineIndex" />
        <altmember cref="P:System.Windows.Controls.TextBox.LineCount" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select(int start, int length);" />
      <MemberSignature Language="F#" Value="member this.Select : int * int -&gt; unit" Usage="textBox.Select (start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start"><span data-ttu-id="99e13-257">Der nullbasierte Zeichenindex des ersten Zeichens in der Auswahl.</span><span class="sxs-lookup"><span data-stu-id="99e13-257">The zero-based character index of the first character in the selection.</span></span></param>
        <param name="length"><span data-ttu-id="99e13-258">Die Länge der Auswahl in Zeichen.</span><span class="sxs-lookup"><span data-stu-id="99e13-258">The length of the selection, in characters.</span></span></param>
        <summary><span data-ttu-id="99e13-259">Wählt einen Textbereich im Textfeld aus.</span><span class="sxs-lookup"><span data-stu-id="99e13-259">Selects a range of text in the text box.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="99e13-260"><paramref name="start" /> oder <paramref name="length" /> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="99e13-260"><paramref name="start" /> or <paramref name="length" /> is negative.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectedText">
      <MemberSignature Language="C#" Value="public string SelectedText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedText" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectedText" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedText : string with get, set" Usage="System.Windows.Controls.TextBox.SelectedText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-261">Ruft den Inhalt der aktuellen Auswahl im Textfeld ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-261">Gets or sets the content of the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="99e13-262">Zeigt den aktuell ausgewählten Text im Textfeld an.</span><span class="sxs-lookup"><span data-stu-id="99e13-262">The currently selected text in the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-263">Wenn Sie diese Eigenschaft erhalten, wird eine Zeichen folgen Kopie des aktuell ausgewählten Texts zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="99e13-263">Getting this property returns a string copy of the currently selected text.</span></span> <span data-ttu-id="99e13-264">Durch Festlegen dieser Eigenschaft wird die aktuelle Auswahl durch die angegebene Zeichenfolge ersetzt.</span><span class="sxs-lookup"><span data-stu-id="99e13-264">Setting this property replaces the current selection with the specified string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionLength">
      <MemberSignature Language="C#" Value="public int SelectionLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionLength" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionLength" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionLength : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-265">Ruft einen Wert ab, der die Anzahl von Zeichen in der aktuellen Auswahl im Textfeld angibt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-265">Gets or sets a value indicating the number of characters in the current selection in the text box.</span></span></summary>
        <value><span data-ttu-id="99e13-266">Die Anzahl von Zeichen in der aktuellen Auswahl im Textfeld.</span><span class="sxs-lookup"><span data-stu-id="99e13-266">The number of characters in the current selection in the text box.</span></span> <span data-ttu-id="99e13-267">Die Standardeinstellung ist 0.</span><span class="sxs-lookup"><span data-stu-id="99e13-267">The default is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-268">Beim erhalten dieser Eigenschaft wird die Anzahl der Zeichen in der aktuellen Auswahl zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="99e13-268">Getting this property returns the number of characters in the current selection.</span></span> <span data-ttu-id="99e13-269">Wenn diese Eigenschaft festgelegt wird, wird die Länge der aktuellen Auswahl auf den angegebenen Wert festgelegt, sodass der Anfang der Auswahl fest bleibt.</span><span class="sxs-lookup"><span data-stu-id="99e13-269">Setting this property adjusts the length of the current selection to the specified value, keeping the beginning of the selection fixed.</span></span>  
  
 <span data-ttu-id="99e13-270">Wenn die angegebene Auswahl Länge bewirkt, dass die Auswahl an einer ungültigen Position endet (z. b. zwischen einem Wagen Rücklauf Zeichen und einem Zeilenumbruch Zeichen oder innerhalb eines Tags), wird die Auswahl Länge automatisch angepasst, sodass die resultierende Auswahl an gültigen Positionen beginnt und endet.</span><span class="sxs-lookup"><span data-stu-id="99e13-270">In general, when the specified selection length causes the selection to end in an invalid position (for example, between a carriage return and a new-line character, or inside a tag), the selection length automatically adjusts so that the resulting selection starts and ends in valid positions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="99e13-271"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> ist auf einen negativen Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="99e13-271"><see cref="P:System.Windows.Controls.TextBox.SelectionLength" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectionStart">
      <MemberSignature Language="C#" Value="public int SelectionStart { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectionStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.SelectionStart" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SelectionStart { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionStart : int with get, set" Usage="System.Windows.Controls.TextBox.SelectionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-272">Ruft einen Zeichenindex für den Anfang der aktuellen Auswahl ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-272">Gets or sets a character index for the beginning of the current selection.</span></span></summary>
        <value><span data-ttu-id="99e13-273">Der Zeichenindex für den Anfang der aktuellen Auswahl.</span><span class="sxs-lookup"><span data-stu-id="99e13-273">The character index for the beginning of the current selection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-274">In Fällen, in denen die angegebene Auswahl Länge bewirkt, dass die Auswahl zwischen einem Wagen Rücklauf und einem Zeilenumbruch Zeichen endet, wird die Auswahl Länge automatisch um 1 angehoben, sodass die resultierende Auswahl den gesamten markerendemarker umfasst.</span><span class="sxs-lookup"><span data-stu-id="99e13-274">In cases where the specified selection length would cause the selection to end between a carriage return and a new-line character, the selection length is automatically increased by 1 so that the resulting selection spans the entire end-of-line marker.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="99e13-275"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> ist auf einen negativen Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="99e13-275"><see cref="P:System.Windows.Controls.TextBox.SelectionStart" /> is set to a negative value.</span></span></exception>
        <altmember cref="M:System.Windows.Controls.TextBox.Select(System.Int32,System.Int32)" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectedText" />
        <altmember cref="P:System.Windows.Controls.TextBox.SelectionLength" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeText">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeText (System.Windows.Markup.XamlDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeText(class System.Windows.Markup.XamlDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.ShouldSerializeText(System.Windows.Markup.XamlDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeText (manager As XamlDesignerSerializationManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeText(System::Windows::Markup::XamlDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeText : System.Windows.Markup.XamlDesignerSerializationManager -&gt; bool" Usage="textBox.ShouldSerializeText manager" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="manager" Type="System.Windows.Markup.XamlDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="99e13-276">Ein Serialisierungsdienst-Manager-Objekt für dieses Objekt.</span><span class="sxs-lookup"><span data-stu-id="99e13-276">A serialization service manager object for this object.</span></span></param>
        <summary><span data-ttu-id="99e13-277">Gibt einen Wert zurück, mit dem angegeben wird, ob der tatsächliche Wert der <see cref="P:System.Windows.Controls.TextBox.Text" />-Eigenschaft bei der Serialisierung des <see cref="T:System.Windows.Controls.TextBox" />-Objekts serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-277">Returns a value that indicates whether the effective value of the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized during serialization of the <see cref="T:System.Windows.Controls.TextBox" /> object.</span></span></summary>
        <returns><span data-ttu-id="99e13-278"><see langword="true" />, wenn die <see cref="P:System.Windows.Controls.TextBox.Text" />-Eigenschaft serialisiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-278"><see langword="true" /> if the <see cref="P:System.Windows.Controls.TextBox.Text" /> property should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="99e13-279"><paramref name="manager" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="99e13-279"><paramref name="manager" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="textBox.System.Windows.Markup.IAddChild.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="99e13-280">Ein Objekt, das als untergeordnetes Element hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-280">An object to add as a child.</span></span></param>
        <summary><span data-ttu-id="99e13-281">Löst in allen Fällen eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="99e13-281">Throws an exception in all cases.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-282"><xref:System.Windows.Controls.TextBox> akzeptiert nur Text über die <xref:System.Windows.Markup.IAddChild>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="99e13-282"><xref:System.Windows.Controls.TextBox> accepts only text through the <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="99e13-283"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="99e13-283"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="99e13-284">In allen anderen Fällen.</span><span class="sxs-lookup"><span data-stu-id="99e13-284">In all other cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.TextBox.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="textBox.System.Windows.Markup.IAddChild.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="99e13-285">Eine Zeichenfolge, die dem Objekt hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-285">A string to add to the object.</span></span></param>
        <summary><span data-ttu-id="99e13-286">Fügt dem Objekt den Textinhalt eines Knotens hinzu.</span><span class="sxs-lookup"><span data-stu-id="99e13-286">Adds the text content of a node to the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-287">Dieser Member ist eine explizite Schnittstellen-Memberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="99e13-287">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="99e13-288">Er kann nur verwendet werden, wenn die <xref:System.Windows.Controls.TextBox>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-288">It can be used only when the <xref:System.Windows.Controls.TextBox> instance is cast to an <xref:System.Windows.Markup.IAddChild> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Controls.TextBox.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-289">Ruft den Textinhalt des Textfelds ab bzw. legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-289">Gets or sets the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="99e13-290">Eine Zeichenfolge mit dem Textinhalt des Textfelds.</span><span class="sxs-lookup"><span data-stu-id="99e13-290">A string containing the text contents of the text box.</span></span> <span data-ttu-id="99e13-291">Der Standardwert ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="99e13-291">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-292">Wenn Sie diese Eigenschaft erhalten, wird eine Zeichen folgen Kopie der Inhalte des Textfelds zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="99e13-292">Getting this property returns a string copy of the contents of the text box.</span></span> <span data-ttu-id="99e13-293">Durch Festlegen dieser Eigenschaft wird der Inhalt des Textfelds durch die angegebene Zeichenfolge ersetzt.</span><span class="sxs-lookup"><span data-stu-id="99e13-293">Setting this property replaces the contents of the text box with the specified string.</span></span>  
  
 <span data-ttu-id="99e13-294">Diese Eigenschaft unterstützt keine Animation.</span><span class="sxs-lookup"><span data-stu-id="99e13-294">This property does not support animation.</span></span>  
  
 <span data-ttu-id="99e13-295">Bei der Verwendung in Daten Bindungs Szenarios verwendet diese Eigenschaft das standardmäßige Update Verhalten von <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="99e13-295">When used in data-binding scenarios, this property uses the default update behavior of <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlPropertyElementUsage_Text"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="99e13-296">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="99e13-296">XAML Property Element Usage</span></span>  
  
```  
<object>  
  String  
</object>  
```  
  
<a name="dependencyPropertyInfo_Text"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="99e13-297">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="99e13-297">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="99e13-298">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="99e13-298">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextProperty>|  
|<span data-ttu-id="99e13-299">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="99e13-299">Metadata properties set to `true`</span></span>|<span data-ttu-id="99e13-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span><span class="sxs-lookup"><span data-stu-id="99e13-300"><xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Journal%2A></span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextAlignment" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : System.Windows.TextAlignment with get, set" Usage="System.Windows.Controls.TextBox.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-301">Ruft die horizontale Ausrichtung des Texts im Textfeld ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="99e13-301">Gets or sets the horizontal alignment of the contents of the text box.</span></span></summary>
        <value><span data-ttu-id="99e13-302">Einer der <see cref="T:System.Windows.TextAlignment" />-Werte, der die horizontale Ausrichtung des Inhalts des Textfelds angibt.</span><span class="sxs-lookup"><span data-stu-id="99e13-302">One of the <see cref="T:System.Windows.TextAlignment" /> values that specifies the horizontal alignment of the contents of the text box.</span></span> <span data-ttu-id="99e13-303">Der Standardwert lautet <see cref="F:System.Windows.TextAlignment.Left" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-303">The default is <see cref="F:System.Windows.TextAlignment.Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-304">Beim erhalten dieser Eigenschaft wird die aktuelle Ausrichtung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="99e13-304">Getting this property returns the current alignment.</span></span> <span data-ttu-id="99e13-305">Durch Festlegen dieser Eigenschaft wird der Inhalt des Textfelds angepasst, um die angegebene Ausrichtung widerzuspiegeln.</span><span class="sxs-lookup"><span data-stu-id="99e13-305">Setting this property adjusts the contents of the text box to reflect the specified alignment.</span></span>  
  
 <span data-ttu-id="99e13-306">Diese Eigenschaft hat eine höhere Rangfolge als die <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-306">This property has a higher precedence than the <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="99e13-307">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="99e13-307">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="99e13-308">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="99e13-308">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextAlignmentProperty>|  
|<span data-ttu-id="99e13-309">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="99e13-309">Metadata properties set to `true`</span></span>|<span data-ttu-id="99e13-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="99e13-310"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="99e13-311">Im folgenden Beispiel wird gezeigt, wie eine <xref:System.Windows.Controls.TextBox> mit einer <xref:System.Windows.Controls.TextBox.TextAlignment%2A> von <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-311">The following example shows how to create a <xref:System.Windows.Controls.TextBox> with a <xref:System.Windows.Controls.TextBox.TextAlignment%2A> of <xref:System.Windows.TextAlignment.Center?displayProperty=nameWithType>.</span></span>  
  
 [!code-xaml[TextBoxMiscSnippets_snip#TextBoxExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_snip/csharp/textboxexample.xaml#textboxexamplewholepage)]  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/TextBoxExample.cs#textboxcodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#TextBoxCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/textboxexample.vb#textboxcodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.TextBox.Text" />
        <altmember cref="P:System.Windows.Controls.TextBox.CharacterCasing" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-312">Bezeichnet die <see cref="P:System.Windows.Controls.TextBox.TextAlignment" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-312">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorations">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecorationCollection TextDecorations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecorationCollection TextDecorations" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextDecorations" />
      <MemberSignature Language="VB.NET" Value="Public Property TextDecorations As TextDecorationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecorationCollection ^ TextDecorations { System::Windows::TextDecorationCollection ^ get(); void set(System::Windows::TextDecorationCollection ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TextDecorations : System.Windows.TextDecorationCollection with get, set" Usage="System.Windows.Controls.TextBox.TextDecorations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecorationCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-313">Ruft die Textdekorationen ab, die auf das Textfeld angewendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="99e13-313">Gets the text decorations to apply to the text box.</span></span></summary>
        <value><span data-ttu-id="99e13-314">Eine <see cref="T:System.Windows.TextDecorationCollection" />-Auflistung, die auf dieses Textfeld anzuwendende Textdekorationen enthält.</span><span class="sxs-lookup"><span data-stu-id="99e13-314">A <see cref="T:System.Windows.TextDecorationCollection" /> collection that contains text decorations to apply to the text box.</span></span> <span data-ttu-id="99e13-315">Der Standardwert ist <see langword="null" /> (es werden keine Textdekorationen angewendet).</span><span class="sxs-lookup"><span data-stu-id="99e13-315">The default is <see langword="null" /> (no text decorations applied).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-316">Ein <xref:System.Windows.TextDecoration>-Objekt ist eine visuelle Verzierung, die Sie Text hinzufügen können.</span><span class="sxs-lookup"><span data-stu-id="99e13-316">A <xref:System.Windows.TextDecoration> object is a visual ornamentation you can add to text.</span></span> <span data-ttu-id="99e13-317">Es gibt vier Arten von Text Dekorationen: Unterstreichung, Baseline, durchgestrichen und über Linien.</span><span class="sxs-lookup"><span data-stu-id="99e13-317">There are four types of text decorations: underline, baseline, strikethrough, and overline.</span></span> <span data-ttu-id="99e13-318">Weitere Informationen zu Text Dekorationen finden Sie unter Gewusst [wie: Erstellen einer Text Dekoration](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span><span class="sxs-lookup"><span data-stu-id="99e13-318">For more information about text decorations, see [How to: Create a Text Decoration](~/docs/framework/wpf/advanced/how-to-create-a-text-decoration.md).</span></span>  
  
<a name="dependencyPropertyInfo_TextDecorations"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="99e13-319">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="99e13-319">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="99e13-320">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="99e13-320">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextDecorationsProperty>|  
|<span data-ttu-id="99e13-321">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="99e13-321">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="99e13-322">Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Documents.Inline.TextDecorations%2A>-Attribut mithilfe <xref:System.Windows.Documents.Run> als Beispiel Element festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-322">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> attribute, using <xref:System.Windows.Documents.Run> as the example element.</span></span>  
  
 [!code-xaml[InlineSnippets#_Inline_TextDecXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml#_inline_textdecxaml)]  
  
 <span data-ttu-id="99e13-323">Die folgende Abbildung zeigt, wie dieses Beispiel gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-323">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="99e13-324">![Bildschirm Abbildung: Text mit Standardeffekt durch Strichen](~/add/media/inline-textdec-strike.png "Bildschirmabbildung: Text mit standardmäßigem Durchstreicheffekt")</span><span class="sxs-lookup"><span data-stu-id="99e13-324">![Screenshot: Text with default strikethrough effect](~/add/media/inline-textdec-strike.png "Screenshot: Text with default strikethrough effect")</span></span>  
  
 <span data-ttu-id="99e13-325">Der folgenden Abbildung wird wie die <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, und <xref:System.Windows.TextDecorations.Underline%2A> Ergänzungen zu rendern, bzw.</span><span class="sxs-lookup"><span data-stu-id="99e13-325">The following figures show how the <xref:System.Windows.TextDecorations.OverLine%2A>, <xref:System.Windows.TextDecorations.Baseline%2A>, and <xref:System.Windows.TextDecorations.Underline%2A> decorations render, respectively.</span></span>  
  
 <span data-ttu-id="99e13-326">![Bildschirm Abbildung: Overline-TextDecorator](~/add/media/inline-textdec-over.png "Bildschirmabbildung: Überstrich-TextDecorator")</span><span class="sxs-lookup"><span data-stu-id="99e13-326">![Screenshot: Overline TextDecorator](~/add/media/inline-textdec-over.png "Screenshot: Overline TextDecorator")</span></span>  
  
 <span data-ttu-id="99e13-327">![Bildschirm Abbildung: Standard-Baseline-Effekt für Text](~/add/media/inline-textdec-base.png "Bildschirmabbildung: Standardmäßiger Baseline-Effekt auf Text")</span><span class="sxs-lookup"><span data-stu-id="99e13-327">![Screenshot: Default baseline effect on text](~/add/media/inline-textdec-base.png "Screenshot: Default baseline effect on text")</span></span>  
  
 <span data-ttu-id="99e13-328">![Bildschirm Abbildung: Text mit standardmäßiger Unterstreichung](~/add/media/inline-textdec-under.png "Bildschirmabbildung: Text mit standardmäßigem Unterstreichungseffekt")</span><span class="sxs-lookup"><span data-stu-id="99e13-328">![Screenshot: Text with default underline effect](~/add/media/inline-textdec-under.png "Screenshot: Text with default underline effect")</span></span>  
  
 <span data-ttu-id="99e13-329">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Documents.Inline.TextDecorations%2A>-Eigenschaft Programm gesteuert festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-329">The following example shows how to set the <xref:System.Windows.Documents.Inline.TextDecorations%2A> property programmatically.</span></span>  
  
 [!code-csharp[InlineSnippets#_Inline_TextDec](~/samples/snippets/csharp/VS_Snippets_Wpf/InlineSnippets/CSharp/Window1.xaml.cs#_inline_textdec)]
 [!code-vb[InlineSnippets#_Inline_TextDec](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InlineSnippets/visualbasic/window1.xaml.vb#_inline_textdec)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDecorationsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextDecorationsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextDecorationsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextDecorationsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextDecorationsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextDecorationsProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextDecorationsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-330">Bezeichnet die <see cref="P:System.Windows.Controls.TextBox.TextDecorations" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-330">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextDecorations" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-331">Der Bezeichner für die <xref:System.Windows.Controls.TextBox.TextDecorations%2A>-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-331">The identifier for the <xref:System.Windows.Controls.TextBox.TextDecorations%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-332">Bezeichnet die <see cref="P:System.Windows.Controls.TextBox.Text" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-332">Identifies the <see cref="P:System.Windows.Controls.TextBox.Text" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapping">
      <MemberSignature Language="C#" Value="public System.Windows.TextWrapping TextWrapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextWrapping TextWrapping" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.TextWrapping" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapping As TextWrapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextWrapping TextWrapping { System::Windows::TextWrapping get(); void set(System::Windows::TextWrapping value); };" />
      <MemberSignature Language="F#" Value="member this.TextWrapping : System.Windows.TextWrapping with get, set" Usage="System.Windows.Controls.TextBox.TextWrapping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextWrapping</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-333">Ruft ab oder legt fest, wie Text im Textfeld umbrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="99e13-333">Gets or sets how the text box should wrap text.</span></span></summary>
        <value><span data-ttu-id="99e13-334">Einer der <see cref="T:System.Windows.TextWrapping" />-Werte, der den Textumbruch im Textfeld angibt.</span><span class="sxs-lookup"><span data-stu-id="99e13-334">One of the <see cref="T:System.Windows.TextWrapping" /> values that indicates how the text box should wrap text.</span></span> <span data-ttu-id="99e13-335">Der Standardwert lautet <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-335">The default is <see cref="F:System.Windows.TextWrapping.NoWrap" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-336">Wenn das <xref:System.Windows.Controls.TextBox.TextWrapping%2A>-Attribut auf <xref:System.Windows.TextWrapping.Wrap> festgelegt wird, wird der eingegebene Text zum Umbruch in eine neue Zeile, wenn der Rand des <xref:System.Windows.Controls.TextBox>-Steuer Elements erreicht wird. die Höhe des <xref:System.Windows.Controls.TextBox> Steuer Elements wird bei Bedarf automatisch um Platz für eine neue Zeile erweitert.</span><span class="sxs-lookup"><span data-stu-id="99e13-336">Setting the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> attribute to <xref:System.Windows.TextWrapping.Wrap> causes entered text to wrap to a new line when the edge of the <xref:System.Windows.Controls.TextBox> control is reached, automatically expanding the height of the <xref:System.Windows.Controls.TextBox> control to include room for a new line, if necessary.</span></span>  
  
<a name="dependencyPropertyInfo_TextWrapping"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="99e13-337">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="99e13-337">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="99e13-338">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="99e13-338">Identifier field</span></span>|<xref:System.Windows.Controls.TextBox.TextWrappingProperty>|  
|<span data-ttu-id="99e13-339">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="99e13-339">Metadata properties set to `true`</span></span>|<span data-ttu-id="99e13-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span><span class="sxs-lookup"><span data-stu-id="99e13-340"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A></span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="99e13-341">Im folgenden Beispiel wird veranschaulicht, wie der Wert dieser Eigenschaft festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-341">The following example demonstrates how to set the value of this property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase12)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrappingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextWrappingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextWrappingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextWrappingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextWrappingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextWrappingProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.TextBox.TextWrappingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-342">Bezeichnet die <see cref="P:System.Windows.Controls.TextBox.TextWrapping" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-342">Identifies the <see cref="P:System.Windows.Controls.TextBox.TextWrapping" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-343">Der Bezeichner für die <xref:System.Windows.Controls.TextBox.TextWrapping%2A>-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e13-343">The identifier for the <xref:System.Windows.Controls.TextBox.TextWrapping%2A> dependency property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typography">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Typography Typography { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Typography Typography" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.TextBox.Typography" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Typography As Typography" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Typography ^ Typography { System::Windows::Documents::Typography ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Typography : System.Windows.Documents.Typography" Usage="System.Windows.Controls.TextBox.Typography" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Typography</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="99e13-344">Ruft die aktuell verwendbaren Typografievarianten für den Textinhalt des Textfelds ab.</span><span class="sxs-lookup"><span data-stu-id="99e13-344">Gets the currently effective typography variations for the text contents of the text box.</span></span></summary>
        <value><span data-ttu-id="99e13-345">Ein <see cref="T:System.Windows.Documents.Typography" />-Objekt, mit dem die aktuell verwendbaren Typografievarianten angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="99e13-345">A <see cref="T:System.Windows.Documents.Typography" /> object that specifies the currently effective typography variations.</span></span> <span data-ttu-id="99e13-346">Eine Liste der Standardwerte für die Typografie finden Sie unter <see cref="T:System.Windows.Documents.Typography" />.</span><span class="sxs-lookup"><span data-stu-id="99e13-346">For a list of default typography values, see <see cref="T:System.Windows.Documents.Typography" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e13-347">Die <xref:System.Windows.Documents.FlowDocument.Typography%2A>-Eigenschaft gilt nur für [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] Schriftarten.</span><span class="sxs-lookup"><span data-stu-id="99e13-347">The <xref:System.Windows.Documents.FlowDocument.Typography%2A> property is applicable only to [!INCLUDE[TLA#tla_opentype](~/includes/tlasharptla-opentype-md.md)] fonts.</span></span> <span data-ttu-id="99e13-348">Eine Typografievariante wirkt sich nicht auf Schriftarten aus, die die Variante nicht unterstützen.</span><span class="sxs-lookup"><span data-stu-id="99e13-348">A typography variant has no effect on fonts that do not support the variant.</span></span> <span data-ttu-id="99e13-349">Weitere Informationen zu diesem Thema finden Sie unter [Typografie in WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="99e13-349">For more information about this topic, see [Typography in WPF](~/docs/framework/wpf/advanced/typography-in-wpf.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99e13-350">Im folgenden Beispiel wird gezeigt, wie das <xref:System.Windows.Documents.TextElement.Typography%2A>-Attribut mithilfe <xref:System.Windows.Documents.Paragraph> als Beispiel Element festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-350">The following example shows how to set the <xref:System.Windows.Documents.TextElement.Typography%2A> attribute, using <xref:System.Windows.Documents.Paragraph> as the example element.</span></span>  
  
 [!code-xaml[TextElementSnippets#_TextElement_TypogXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml#_textelement_typogxaml)]  
  
 <span data-ttu-id="99e13-351">Die folgende Abbildung zeigt, wie dieses Beispiel gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-351">The following figure shows how this example renders.</span></span>  
  
 <span data-ttu-id="99e13-352">![Bildschirm Abbildung: Text mit geänderter Typografie](~/add/media/textelement-typog.png "Bildschirmabbildung: Text mit geänderter Typografie")</span><span class="sxs-lookup"><span data-stu-id="99e13-352">![Screenshot: Text with altered typography](~/add/media/textelement-typog.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="99e13-353">Im Gegensatz dazu zeigt die folgende Abbildung, wie ein ähnliches Beispiel mit typografischen Standardeigenschaften gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-353">In contrast, the following figure shows how a similar example with default typographic properties renders.</span></span>  
  
 <span data-ttu-id="99e13-354">![Bildschirm Abbildung: Text mit geänderter Typografie](~/add/media/textelement-typog-default.png "Bildschirmabbildung: Text mit geänderter Typografie")</span><span class="sxs-lookup"><span data-stu-id="99e13-354">![Screenshot: Text with altered typography](~/add/media/textelement-typog-default.png "Screenshot: Text with altered typography")</span></span>  
  
 <span data-ttu-id="99e13-355">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.TextBox.Typography%2A>-Eigenschaft Programm gesteuert festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="99e13-355">The following example shows how to set the <xref:System.Windows.Controls.TextBox.Typography%2A> property programmatically.</span></span>  
  
 [!code-csharp[TextElementSnippets#_TextElement_Typog](~/samples/snippets/csharp/VS_Snippets_Wpf/TextElementSnippets/CSharp/Window1.xaml.cs#_textelement_typog)]
 [!code-vb[TextElementSnippets#_TextElement_Typog](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextElementSnippets/visualbasic/window1.xaml.vb#_textelement_typog)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
