<Type Name="ValidationResult" FullName="System.Windows.Controls.ValidationResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5b0d99fceac9e281ee2959f2ed2c42f4764faf0f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69211752" /></Metadata><TypeSignature Language="C#" Value="public class ValidationResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationResult" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationResult" />
  <TypeSignature Language="F#" Value="type ValidationResult = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt das von <see cref="T:System.Windows.Controls.ValidationRule" /><see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /> zurückgegebene Ergebnis dar. Methode, die angibt, ob der überprüfte Wert die <see cref="T:System.Windows.Controls.ValidationRule" /> bestanden hat.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Daten Bindungs Modell ermöglicht es Ihnen, <xref:System.Windows.Data.Binding.ValidationRules%2A> dem- <xref:System.Windows.Data.Binding> Objekt <xref:System.Windows.Data.MultiBinding> oder dem-Objekt zuzuordnen. Sie können benutzerdefinierte Regeln erstellen, indem Sie die <xref:System.Windows.Controls.ValidationRule> -Klasse Unterklassen <xref:System.Windows.Controls.ValidationRule.Validate%2A> und die-Methode implementieren. Die <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode gibt ein <xref:System.Windows.Controls.ValidationResult> -Objekt zurück, um zu melden, ob der überprüfte Wert gültig ist.  
  
 Eine ausführliche Erläuterung des Überprüfungsprozesses finden Sie unter "Datenvalidierung" in der [Übersicht über die Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Implementierung einer Validierungs Regel, die den Eingabe Wert als ungültig markiert, wenn er nicht numerische Zeichen oder außerhalb der unteren und oberen Begrenzungen enthält. Wenn der Wert ungültig ist, ist die <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> Eigenschaft und die <xref:System.Windows.Controls.ValidationResult.IsValid%2A> -Eigenschaft des zurückgegebenen <xref:System.Windows.Controls.ValidationResult> werden in die entsprechende Fehlermeldung festgelegt und `false` bzw.  
  
 Das vollständige Beispiel finden Sie unter [Vorgehensweise: Implementieren der Bindungs](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)Validierung.  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationResult (bool isValid, object errorContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isValid, object errorContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isValid As Boolean, errorContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationResult(bool isValid, System::Object ^ errorContent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationResult : bool * obj -&gt; System.Windows.Controls.ValidationResult" Usage="new System.Windows.Controls.ValidationResult (isValid, errorContent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isValid" Type="System.Boolean" />
        <Parameter Name="errorContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="isValid">Angabe, ob der anhand der <see cref="T:System.Windows.Controls.ValidationRule" /> überprüfte Wert gültig ist.</param>
        <param name="errorContent">Informationen zur Ungültigkeit.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationResult" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Daten Bindungs Modell ermöglicht es Ihnen, <xref:System.Windows.Data.Binding.ValidationRules%2A> dem- <xref:System.Windows.Data.Binding> Objekt <xref:System.Windows.Data.MultiBinding> oder dem-Objekt zuzuordnen. Sie können benutzerdefinierte Regeln erstellen, indem Sie die <xref:System.Windows.Controls.ValidationRule> -Klasse Unterklassen <xref:System.Windows.Controls.ValidationRule.Validate%2A> und die-Methode implementieren. Die <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode gibt ein <xref:System.Windows.Controls.ValidationResult> -Objekt zurück, um zu melden, ob der überprüfte Wert gültig ist.  
  
 Eine ausführliche Erläuterung des Überprüfungsprozesses finden Sie unter "Datenvalidierung" in der [Übersicht über die Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Implementierung einer Validierungs Regel, die den Eingabe Wert als ungültig markiert, wenn er nicht numerische Zeichen oder außerhalb der unteren und oberen Begrenzungen enthält. Wenn der Wert ungültig ist, ist die <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> Eigenschaft und die <xref:System.Windows.Controls.ValidationResult.IsValid%2A> -Eigenschaft des zurückgegebenen <xref:System.Windows.Controls.ValidationResult> werden in die entsprechende Fehlermeldung festgelegt und `false` bzw.  
  
 Das vollständige Beispiel finden Sie unter [Vorgehensweise: Implementieren der Bindungs](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)Validierung.  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="validationResult.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Die zu vergleichende <see cref="T:System.Windows.Controls.ValidationResult" />-Instanz.</param>
        <summary>Vergleicht die angegebene Instanz und die aktuelle Instanz von <see cref="T:System.Windows.Controls.ValidationResult" />-auf Wertgleichheit.</summary>
        <returns><see langword="true" />, wenn <paramref name="obj" /> und diese Instanz von <see cref="T:System.Windows.Controls.ValidationResult" /> dieselben Werte aufweisen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird von den Operator Überschreibungen aufgerufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorContent : obj" Usage="System.Windows.Controls.ValidationResult.ErrorContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das zusätzliche Informationen zur Ungültigkeit bereitstellt.</summary>
        <value>Ein Objekt, das zusätzliche Informationen zur Ungültigkeit bereitstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Daten Bindungs Modell ermöglicht es Ihnen, <xref:System.Windows.Data.Binding.ValidationRules%2A> dem- <xref:System.Windows.Data.Binding> Objekt <xref:System.Windows.Data.MultiBinding> oder dem-Objekt zuzuordnen. Sie können benutzerdefinierte Regeln erstellen, indem Sie die <xref:System.Windows.Controls.ValidationRule> -Klasse Unterklassen <xref:System.Windows.Controls.ValidationRule.Validate%2A> und die-Methode implementieren. Die <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode gibt ein <xref:System.Windows.Controls.ValidationResult> -Objekt zurück, um zu melden, ob der überprüfte Wert gültig ist.  
  
 Eine ausführliche Erläuterung des Überprüfungsprozesses finden Sie unter "Datenvalidierung" in der [Übersicht über die Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Implementierung einer Validierungs Regel, die den Eingabe Wert als ungültig markiert, wenn er nicht numerische Zeichen oder außerhalb der unteren und oberen Begrenzungen enthält. Wenn der Wert ungültig ist, ist die <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> Eigenschaft und die <xref:System.Windows.Controls.ValidationResult.IsValid%2A> -Eigenschaft des zurückgegebenen <xref:System.Windows.Controls.ValidationResult> werden in die entsprechende Fehlermeldung festgelegt und `false` bzw.  
  
 Das vollständige Beispiel finden Sie unter [Vorgehensweise: Implementieren der Bindungs](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)Validierung.  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="validationResult.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diese <see cref="T:System.Windows.Controls.ValidationResult" /> zurück.</summary>
        <returns>Der Hashcode für diese <see cref="T:System.Windows.Controls.ValidationResult" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Windows.Controls.ValidationResult.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der anhand der <see cref="T:System.Windows.Controls.ValidationRule" /> überprüfte Wert gültig ist.</summary>
        <value><see langword="true" />, wenn der Wert gültig ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Daten Bindungs Modell ermöglicht es Ihnen, <xref:System.Windows.Data.Binding.ValidationRules%2A> dem- <xref:System.Windows.Data.Binding> Objekt <xref:System.Windows.Data.MultiBinding> oder dem-Objekt zuzuordnen. Sie können benutzerdefinierte Regeln erstellen, indem Sie die <xref:System.Windows.Controls.ValidationRule> -Klasse Unterklassen <xref:System.Windows.Controls.ValidationRule.Validate%2A> und die-Methode implementieren. Die <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode gibt ein <xref:System.Windows.Controls.ValidationResult> -Objekt zurück, um zu melden, ob der überprüfte Wert gültig ist.  
  
 Eine ausführliche Erläuterung des Überprüfungsprozesses finden Sie unter "Datenvalidierung" in der [Übersicht über die Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Implementierung einer Validierungs Regel, die den Eingabe Wert als ungültig markiert, wenn er nicht numerische Zeichen oder außerhalb der unteren und oberen Begrenzungen enthält. Wenn der Wert ungültig ist, ist die <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> Eigenschaft und die <xref:System.Windows.Controls.ValidationResult.IsValid%2A> -Eigenschaft des zurückgegebenen <xref:System.Windows.Controls.ValidationResult> werden in die entsprechende Fehlermeldung festgelegt und `false` bzw.  
  
 Das vollständige Beispiel finden Sie unter [Vorgehensweise: Implementieren der Bindungs](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)Validierung.  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Controls.ValidationResult left, class System.Windows.Controls.ValidationResult right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValidationResult, right As ValidationResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::ValidationResult ^ left, System::Windows::Controls::ValidationResult ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Controls.ValidationResult * System.Windows.Controls.ValidationResult -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Controls.ValidationResult" />
        <Parameter Name="right" Type="System.Windows.Controls.ValidationResult" />
      </Parameters>
      <Docs>
        <param name="left">Die erste zu vergleichende Instanz.</param>
        <param name="right">Die zweite zu vergleichende Instanz.</param>
        <summary>Überprüft zwei <see cref="T:System.Windows.Controls.ValidationResult" />-Objekte auf Wertgleichheit.</summary>
        <returns><see langword="true" />, wenn die beiden Objekte gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Controls.ValidationResult left, class System.Windows.Controls.ValidationResult right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValidationResult, right As ValidationResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::ValidationResult ^ left, System::Windows::Controls::ValidationResult ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Controls.ValidationResult * System.Windows.Controls.ValidationResult -&gt; bool" Usage="System.Windows.Controls.ValidationResult.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Controls.ValidationResult" />
        <Parameter Name="right" Type="System.Windows.Controls.ValidationResult" />
      </Parameters>
      <Docs>
        <param name="left">Die erste zu vergleichende Instanz.</param>
        <param name="right">Die zweite zu vergleichende Instanz.</param>
        <summary>Überprüft zwei <see cref="T:System.Windows.Controls.ValidationResult" />-Objekte auf Ungleichheit der Werte.</summary>
        <returns><see langword="true" />, wenn die Werte nicht gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidResult">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ValidationResult ValidResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Controls.ValidationResult ValidResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.ValidResult" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ValidResult As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Controls::ValidationResult ^ ValidResult { System::Windows::Controls::ValidationResult ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidResult : System.Windows.Controls.ValidationResult" Usage="System.Windows.Controls.ValidationResult.ValidResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine gültige Instanz von <see cref="T:System.Windows.Controls.ValidationResult" /> ab.</summary>
        <value>Eine gültige Instanz von <see cref="T:System.Windows.Controls.ValidationResult" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
