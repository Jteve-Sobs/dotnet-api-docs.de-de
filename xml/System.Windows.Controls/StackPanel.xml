<Type Name="StackPanel" FullName="System.Windows.Controls.StackPanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4afcec06d3a9fcfb8f6dab9719f742dbc380de25" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StackPanel : System.Windows.Controls.Panel, System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi StackPanel extends System.Windows.Controls.Panel implements class System.Windows.Controls.Primitives.IScrollInfo" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StackPanel" />
  <TypeSignature Language="VB.NET" Value="Public Class StackPanel&#xA;Inherits Panel&#xA;Implements IScrollInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackPanel : System::Windows::Controls::Panel, System::Windows::Controls::Primitives::IScrollInfo" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Panel</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Controls.Primitives.IScrollInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="4ac6a-101">Ordnet untergeordnete Elemente in einer einzelnen Zeile an, die horizontal oder vertikal ausgerichtet werden kann.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ac6a-101">Arranges child elements into a single line that can be oriented horizontally or vertically.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-102">Ein <xref:System.Windows.Controls.StackPanel> enthält eine Auflistung von <xref:System.Windows.UIElement> Objekte, die in der <xref:System.Windows.Controls.Panel.Children%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-102">A <xref:System.Windows.Controls.StackPanel> contains a collection of <xref:System.Windows.UIElement> objects, which are in the <xref:System.Windows.Controls.Panel.Children%2A> property.</span></span>  
  
 <span data-ttu-id="4ac6a-103">Der Standardwert ist Stretch für beide <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> und <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> des Inhalts in einen <xref:System.Windows.Controls.StackPanel>.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-103">The default value is stretch for both <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> and <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> of content that is contained in a <xref:System.Windows.Controls.StackPanel>.</span></span>  
  
 <span data-ttu-id="4ac6a-104">Panel-Elementen erhalten standardmäßig nicht den Fokus.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-104">Panel elements do not receive focus by default.</span></span> <span data-ttu-id="4ac6a-105">Um benutzerbestätigung durch ein Bereichselement den Fokus erhalten, legen Sie die <xref:System.Windows.UIElement.Focusable%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-105">To compel a panel element to receive focus, set the <xref:System.Windows.UIElement.Focusable%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="4ac6a-106"><xref:System.Windows.Controls.StackPanel> implementiert die <xref:System.Windows.Controls.Primitives.IScrollInfo> -Schnittstelle zur Unterstützung von logischen Durchführen eines Bildlaufs.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-106"><xref:System.Windows.Controls.StackPanel> implements the <xref:System.Windows.Controls.Primitives.IScrollInfo> interface to support logical scrolling.</span></span> <span data-ttu-id="4ac6a-107">Logischer Bildlauf wird verwendet, einen Bildlauf bis zum nächsten Element in der logischen Struktur.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-107">Logical scrolling is used to scroll to the next element in the logical tree.</span></span> <span data-ttu-id="4ac6a-108">Dies ist im Gegensatz zur physischen Bildlauf ein Bildlauf durch einen definierten physischen Wert in einer angegebenen Richtung Inhalt ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-108">This is in contrast to physical scrolling, which scrolls content by a defined physical increment in a given direction.</span></span> <span data-ttu-id="4ac6a-109">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen Sie den Host <xref:System.Windows.Controls.StackPanel> Element in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-109">If you require physical scrolling instead of logical scrolling, wrap the host <xref:System.Windows.Controls.StackPanel> element in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StackPanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StackPanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-110">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.StackPanel" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-110">Initializes a new instance of the <see cref="T:System.Windows.Controls.StackPanel" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeSize">
          <span data-ttu-id="4ac6a-111">Die Größe, die dieses <see cref="T:System.Windows.Size" />-Element für das Anordnen seiner untergeordneten Elemente verwenden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-111">The <see cref="T:System.Windows.Size" /> that this element should use to arrange its child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ac6a-112">Ordnet den Inhalt eines <see cref="T:System.Windows.Controls.StackPanel" />-Elements an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-112">Arranges the content of a <see cref="T:System.Windows.Controls.StackPanel" /> element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ac6a-113">Die <see cref="T:System.Windows.Size" />, die die angeordnete Größe dieses <see cref="T:System.Windows.Controls.StackPanel" />-Elements und seiner untergeordneten Elemente darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-113">The <see cref="T:System.Windows.Size" /> that represents the arranged size of this <see cref="T:System.Windows.Controls.StackPanel" /> element and its child elements.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="CanHorizontallyScroll">
      <MemberSignature Language="C#" Value="public bool CanHorizontallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanHorizontallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.CanHorizontallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanHorizontallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanHorizontallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanHorizontallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-114">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Windows.Controls.StackPanel" /> einen Bildlauf in horizontaler Richtung durchführen kann, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-114">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.StackPanel" /> can scroll in the horizontal dimension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-115">
            <see langword="true" />, wenn im Inhalt ein Bildlauf in horizontaler Richtung ausgeführt werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-115">
              <see langword="true" /> if content can scroll in the horizontal dimension; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-116">Diese Eigenschaft ist nicht für die Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-116">This property is not intended to be used in your code.</span></span> <span data-ttu-id="4ac6a-117">Es wird öffentlich verfügbar gemacht für die Erfüllung von eines Schnittstellenvertrags (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span><span class="sxs-lookup"><span data-stu-id="4ac6a-117">It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span></span> <span data-ttu-id="4ac6a-118">Durch Festlegen dieser Eigenschaft hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-118">Setting this property has no effect.</span></span>  
  
 <span data-ttu-id="4ac6a-119">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-119">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.IScrollInfo" />
      </Docs>
    </Member>
    <Member MemberName="CanVerticallyScroll">
      <MemberSignature Language="C#" Value="public bool CanVerticallyScroll { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanVerticallyScroll" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.CanVerticallyScroll" />
      <MemberSignature Language="VB.NET" Value="Public Property CanVerticallyScroll As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanVerticallyScroll { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.CanVerticallyScroll</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-120">Ruft einen Wert ab, der angibt, ob im Inhalt ein Bildlauf in vertikaler Richtung ausgeführt werden kann, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-120">Gets or sets a value that indicates whether content can scroll in the vertical dimension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-121">
            <see langword="true" />, wenn im Inhalt ein Bildlauf in vertikaler Richtung ausgeführt werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-121">
              <see langword="true" /> if content can scroll in the vertical dimension; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="4ac6a-122">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-122">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-123">Diese Eigenschaft ist nicht für die Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-123">This property is not intended for use in your code.</span></span> <span data-ttu-id="4ac6a-124">Es wird öffentlich verfügbar gemacht für die Erfüllung von eines Schnittstellenvertrags (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span><span class="sxs-lookup"><span data-stu-id="4ac6a-124">It is exposed publicly to fulfill an interface contract (<xref:System.Windows.Controls.Primitives.IScrollInfo>).</span></span> <span data-ttu-id="4ac6a-125">Durch Festlegen dieser Eigenschaft hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-125">Setting this property has no effect.</span></span>  
  
 <span data-ttu-id="4ac6a-126">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-126">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.IScrollInfo" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-127">Ruft einen Wert ab, der die vertikale Größe des Wertebereichs enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-127">Gets a value that contains the vertical size of the extent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-128">Der <see cref="T:System.Double" />-Wert, der die vertikale Größe des Wertebereichs enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-128">The <see cref="T:System.Double" /> that represents the vertical size of the extent.</span>
          </span>
          <span data-ttu-id="4ac6a-129">Der Standardwert ist 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-129">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-130">Der zurückgegebene Wert wird in geräteunabhängigen Pixeln beschrieben.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-130">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ExtentWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-131">Ruft einen Wert ab, der die horizontale Größe des Wertebereichs enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-131">Gets a value that contains the horizontal size of the extent.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-132">Ein <see cref="T:System.Double" />-Wert, der die horizontale Größe des Wertebereichs darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-132">
              <see cref="T:System.Double" /> that represents the horizontal size of the extent.</span>
          </span>
          <span data-ttu-id="4ac6a-133">Der Standardwert ist 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-133">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-134">Der zurückgegebene Wert wird in geräteunabhängigen Pixeln beschrieben.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-134">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override bool HasLogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.HasLogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property HasLogicalOrientation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasLogicalOrientation { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-135">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Windows.Controls.StackPanel" /> vertikal oder horizontal ausgerichtet ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-135">Gets a value that indicates if this <see cref="T:System.Windows.Controls.StackPanel" /> has vertical or horizontal orientation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-136">Diese Eigenschaft gibt immer <see langword="true" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-136">This property always returns <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-137">Gibt diese Eigenschaft immer `true` da eine <xref:System.Windows.Controls.StackPanel> muss entweder vertikal oder horizontal ausgerichtet sein.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-137">This property always returns `true` because a <xref:System.Windows.Controls.StackPanel> must have either vertical or horizontal orientation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.HorizontalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-138">Ruft einen Wert ab, der den horizontalen Offset des gescrollten Inhalts enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-138">Gets a value that contains the horizontal offset of the scrolled content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-139">Die <see cref="T:System.Double" /> , der den horizontalen Offset des gescrollten Inhalts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-139">The <see cref="T:System.Double" /> that represents the horizontal offset of the scrolled content.</span>
          </span>
          <span data-ttu-id="4ac6a-140">Der Standardwert ist 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-140">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-141">Der zurückgegebene Wert wird in geräteunabhängigen Pixeln beschrieben.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-141">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-142">Führt im Inhalt einen Bildlauf nach unten um eine logische Einheit aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-142">Scrolls content downward by one logical unit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-143">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-143">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-144">Führt im Inhalt einen Bildlauf nach links um eine logische Einheit aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-144">Scrolls content by one logical unit to the left.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-145">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-145">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-146">Führt im Inhalt einen Bildlauf nach rechts um eine logische Einheit aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-146">Scrolls content by one logical unit to the right.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-147">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-147">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LineUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.LineUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-148">Führt im Inhalt einen Bildlauf nach oben um eine logische Einheit aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-148">Scrolls content by one logical unit upward.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-149">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-149">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalOrientation">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.Controls.Orientation LogicalOrientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation LogicalOrientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.LogicalOrientation" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalOrientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Windows::Controls::Orientation LogicalOrientation { System::Windows::Controls::Orientation get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-150">Ruft einen Wert ab, der die <see cref="T:System.Windows.Controls.Orientation" /> des <see cref="T:System.Windows.Controls.StackPanel" /> darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-150">Gets a value that represents the <see cref="T:System.Windows.Controls.Orientation" /> of the <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-151">Ein <see cref="T:System.Windows.Controls.Orientation" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-151">An <see cref="T:System.Windows.Controls.Orientation" /> value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="MakeVisible">
      <MemberSignature Language="C#" Value="public System.Windows.Rect MakeVisible (System.Windows.Media.Visual visual, System.Windows.Rect rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Windows.Rect MakeVisible(class System.Windows.Media.Visual visual, valuetype System.Windows.Rect rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Rect MakeVisible(System::Windows::Media::Visual ^ visual, System::Windows::Rect rectangle);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MakeVisible(System.Windows.Media.Visual,System.Windows.Rect)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="rectangle" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="4ac6a-152">Das <see cref="T:System.Windows.Media.Visual" />, das sichtbar gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-152">The <see cref="T:System.Windows.Media.Visual" /> that becomes visible.</span>
          </span>
        </param>
        <param name="rectangle">
          <span data-ttu-id="4ac6a-153">Das <see cref="T:System.Windows.Rect" />, das einen Koordinatenbereich in einem visuellen Element darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-153">The <see cref="T:System.Windows.Rect" /> that represents coordinate space within a visual.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ac6a-154">Führt einen Bildlauf zu den angegebenen Koordinaten aus und macht diesen Teil eines <see cref="T:System.Windows.Media.Visual" />-Elements sichtbar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-154">Scrolls to the specified coordinates and makes that part of a <see cref="T:System.Windows.Media.Visual" /> visible.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ac6a-155">Ein <see cref="T:System.Windows.Rect" /> im Koordinatenbereich, das sichtbar gemacht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-155">A <see cref="T:System.Windows.Rect" /> in the coordinate space that is made visible.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint">
          <span data-ttu-id="4ac6a-156">Eine Obergrenze für die <see cref="T:System.Windows.Size" />, die nicht überstiegen werden darf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-156">An upper limit <see cref="T:System.Windows.Size" /> that should not be exceeded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ac6a-157">Misst die untergeordneten Elemente von <see cref="T:System.Windows.Controls.StackPanel" /> für das Anordnen während der Ausführung von <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-157">Measures the child elements of a <see cref="T:System.Windows.Controls.StackPanel" /> in anticipation of arranging them during the <see cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" /> pass.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ac6a-158">Die <see cref="T:System.Windows.Size" />, die die gewünschte Größe des Elements darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-158">The <see cref="T:System.Windows.Size" /> that represents the desired size of the element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.StackPanel.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDown">
      <MemberSignature Language="C#" Value="public void MouseWheelDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-159">Führt als Reaktion auf einen Klick mit dem Mausrad im Inhalt einen logischen Bildlauf nach unten aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-159">Scrolls content logically downward in response to a click of the mouse wheel button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-160">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-160">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelLeft">
      <MemberSignature Language="C#" Value="public void MouseWheelLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-161">Führt als Reaktion auf einen Klick mit dem Mausrad im Inhalt einen logischen Bildlauf nach links aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-161">Scrolls content logically to the left in response to a click of the mouse wheel button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-162">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-162">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelRight">
      <MemberSignature Language="C#" Value="public void MouseWheelRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-163">Führt als Reaktion auf einen Klick mit dem Mausrad im Inhalt einen logischen Bildlauf nach rechts aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-163">Scrolls content logically to the right in response to a click of the mouse wheel button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-164">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-164">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelUp">
      <MemberSignature Language="C#" Value="public void MouseWheelUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MouseWheelUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.MouseWheelUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub MouseWheelUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MouseWheelUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.MouseWheelUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-165">Führt als Reaktion auf einen Klick mit dem Mausrad im Inhalt einen logischen Bildlauf nach oben aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-165">Scrolls content logically upward in response to a click of the mouse wheel button.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-166">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-166">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Orientation Orientation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Orientation Orientation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.Orientation" />
      <MemberSignature Language="VB.NET" Value="Public Property Orientation As Orientation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Orientation Orientation { System::Windows::Controls::Orientation get(); void set(System::Windows::Controls::Orientation value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Orientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-167">Dient zum Abrufen oder Festlegen eines Werts, der die Dimension angibt, in der untergeordnete Elemente gestapelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-167">Gets or sets a value that indicates the dimension by which child elements are stacked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-168">Die <see cref="T:System.Windows.Controls.Orientation" /> des untergeordneten Inhalts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-168">The <see cref="T:System.Windows.Controls.Orientation" /> of child content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Orientation"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4ac6a-169">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="4ac6a-169">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4ac6a-170">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="4ac6a-170">Identifier field</span></span>|<xref:System.Windows.Controls.StackPanel.OrientationProperty>|  
|<span data-ttu-id="4ac6a-171">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="4ac6a-171">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="4ac6a-172">Das folgende Beispiel zeigt, wie Sie die <xref:System.Windows.Controls.StackPanel.Orientation%2A> Eigenschaft, um anzugeben wie Elemente innerhalb einer <xref:System.Windows.Controls.StackPanel> gestapelt werden (zusätzlich zu oder nebeneinander angezeigt werden).</span><span class="sxs-lookup"><span data-stu-id="4ac6a-172">The following example shows how to use the <xref:System.Windows.Controls.StackPanel.Orientation%2A> property to specify how elements within a <xref:System.Windows.Controls.StackPanel> are stacked (one on top of the other or side by side).</span></span>  
  
 [!code-xaml[StackPanel_snip#StackPanelOrientationExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StackPanel_snip/CS/OrientationExample.xaml#stackpanelorientationexamplewholepage)]   
  
 <span data-ttu-id="4ac6a-173">Der folgende Screenshot zeigt, wie in diesem Beispiel gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-173">The screenshot below shows how this example renders.</span></span>  
  
 <span data-ttu-id="4ac6a-174">![StackPanel-Ausrichtung](~/add/media/layout-stackpanelorientationexample.gif "StackPanel-Ausrichtung")</span><span class="sxs-lookup"><span data-stu-id="4ac6a-174">![StackPanel orientation](~/add/media/layout-stackpanelorientationexample.gif "StackPanel orientation")</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrientationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OrientationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OrientationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.StackPanel.OrientationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OrientationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OrientationProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-175">Bezeichnet die <see cref="P:System.Windows.Controls.StackPanel.Orientation" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-175">Identifies the <see cref="P:System.Windows.Controls.StackPanel.Orientation" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Controls.StackPanel.Orientation" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageDown();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-176">Führt im Inhalt einen logischen Bildlauf um eine Seite nach unten aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-176">Scrolls content logically downward by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-177">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-177">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageLeft();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageLeft</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-178">Führt im Inhalt einen Bildlauf um eine Seite nach links aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-178">Scrolls content logically to the left by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-179">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-179">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageRight();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageRight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-180">Führt im Inhalt einen Bildlauf um eine Seite nach rechts aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-180">Scrolls content logically to the right by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-181">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-181">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PageUp();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.PageUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-182">Führt im Inhalt einen logischen Bildlauf um eine Seite nach oben aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-182">Scrolls content logically upward by one page.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-183">Wenn Sie statt logischer Bildläufe physische Bildläufe benötigen, umschließen die <xref:System.Windows.Controls.StackPanel> in einer <xref:System.Windows.Controls.ScrollViewer> und legen Sie seine <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> Eigenschaft, um `false`.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-183">If you require physical scrolling instead of logical scrolling, wrap the <xref:System.Windows.Controls.StackPanel> in a <xref:System.Windows.Controls.ScrollViewer> and set its <xref:System.Windows.Controls.ScrollViewer.CanContentScroll%2A> property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollOwner">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollViewer ScrollOwner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ScrollViewer ScrollOwner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ScrollOwner" />
      <MemberSignature Language="VB.NET" Value="Public Property ScrollOwner As ScrollViewer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollViewer ^ ScrollOwner { System::Windows::Controls::ScrollViewer ^ get(); void set(System::Windows::Controls::ScrollViewer ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ScrollOwner</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollViewer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-184">Ruft einen Wert ab, der den Container bezeichnet, der das Bildlaufverhalten in diesem <see cref="T:System.Windows.Controls.StackPanel" /> steuert, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-184">Gets or sets a value that identifies the container that controls scrolling behavior in this <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-185">Der <see cref="T:System.Windows.Controls.ScrollViewer" />, der den Bildlauf für dieses <see cref="T:System.Windows.Controls.StackPanel" /> besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-185">The <see cref="T:System.Windows.Controls.ScrollViewer" /> that owns scrolling for this <see cref="T:System.Windows.Controls.StackPanel" />.</span>
          </span>
          <span data-ttu-id="4ac6a-186">Diese Eigenschaft hat keinen Standardwert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-186">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-187">Wenn eine <xref:System.Windows.Controls.ScrollViewer> -Steuerelement ist die <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, physische Bildlauf aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-187">If a <xref:System.Windows.Controls.ScrollViewer> control is the <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, physical scrolling is enabled.</span></span> <span data-ttu-id="4ac6a-188">Wenn eine <xref:System.Windows.Controls.StackPanel> ist die <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, scrollen logischen untergeordneten Element ist.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-188">If a <xref:System.Windows.Controls.StackPanel> is the <xref:System.Windows.Controls.StackPanel.ScrollOwner%2A>, scrolling is logical by child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHorizontalOffset">
      <MemberSignature Language="C#" Value="public void SetHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.SetHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHorizontalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetHorizontalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="4ac6a-189">Der Wert der <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" />-Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-189">The value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ac6a-190">Legt den Wert der <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" />-Eigenschaft fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-190">Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.HorizontalOffset" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVerticalOffset">
      <MemberSignature Language="C#" Value="public void SetVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StackPanel.SetVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetVerticalOffset(double offset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Controls.Primitives.IScrollInfo.SetVerticalOffset(System.Double)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="4ac6a-191">Der Wert der <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" />-Eigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-191">The value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ac6a-192">Legt den Wert der <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" />-Eigenschaft fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-192">Sets the value of the <see cref="P:System.Windows.Controls.StackPanel.VerticalOffset" /> property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.VerticalOffset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-193">Ruft einen Wert ab, der den vertikalen Offset des Inhalts nach dem Bildlauf enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-193">Gets a value that contains the vertical offset of the scrolled content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-194">Die <see cref="T:System.Double" /> , der den vertikalen Offset des gescrollten Inhalts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-194">The <see cref="T:System.Double" /> that represents the vertical offset of the scrolled content.</span>
          </span>
          <span data-ttu-id="4ac6a-195">Der Standardwert ist 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-195">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-196">Der zurückgegebene Wert wird in geräteunabhängigen Pixeln beschrieben.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-196">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportHeight</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-197">Ruft einen Wert ab, der die vertikale Größe des Viewports des Inhalts enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-197">Gets a value that contains the vertical size of the content's viewport.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-198">Die <see cref="T:System.Double" /> , der die vertikale Größe des Viewports des Inhalts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-198">The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport.</span>
          </span>
          <span data-ttu-id="4ac6a-199">Der Standardwert ist 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-199">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-200">Der zurückgegebene Wert wird in geräteunabhängigen Pixeln beschrieben.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-200">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.StackPanel.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Controls.Primitives.IScrollInfo.ViewportWidth</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ac6a-201">Ruft einen Wert ab, der die horizontale Größe des Viewports des Inhalts enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-201">Gets a value that contains the horizontal size of the content's viewport.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ac6a-202">Die <see cref="T:System.Double" /> , der die vertikale Größe des Viewports des Inhalts darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-202">The <see cref="T:System.Double" /> that represents the vertical size of the content's viewport.</span>
          </span>
          <span data-ttu-id="4ac6a-203">Der Standardwert ist 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ac6a-203">The default value is 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ac6a-204">Der zurückgegebene Wert wird in geräteunabhängigen Pixeln beschrieben.</span><span class="sxs-lookup"><span data-stu-id="4ac6a-204">The returned value is described in Device Independent Pixels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>