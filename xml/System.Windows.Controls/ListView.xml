<Type Name="ListView" FullName="System.Windows.Controls.ListView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22c577f7512d4ede8caa2d296205e9c4c85031ed" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33681809" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListView : System.Windows.Controls.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ListView extends System.Windows.Controls.ListBox" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ListView" />
  <TypeSignature Language="VB.NET" Value="Public Class ListView&#xA;Inherits ListBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListView : System::Windows::Controls::ListBox" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.ListViewItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Steuerelement dar, das eine Liste mit Datenelementen anzeigt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ListView> ist ein <xref:System.Windows.Controls.ItemsControl>, was bedeutet, dass eine Auflistung von Objekten eines beliebigen Typs (z. B. die Zeichenfolge "," Image "oder" Bereich ") enthalten kann. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Controls.ItemsControl>-Klasse.  
  
 Die Darstellung der Datenelemente in eine <xref:System.Windows.Controls.ListView> wird definiert, indem dessen Anzeigemodus, der durch angegeben ist die <xref:System.Windows.Controls.ListView.View%2A> Eigenschaft. [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Stellt eine <xref:System.Windows.Controls.GridView> sichtmodus befinden, die Partitionen der <xref:System.Windows.Controls.ListView> Daten Elementinhalt in Spalten. Die Eigenschaften und Methoden auf <xref:System.Windows.Controls.GridView> und seinen verwandten Klassen Stil, und geben Sie den Inhalt der Spalten.  
  
 Die folgende Abbildung zeigt eine <xref:System.Windows.Controls.ListView> mit einem <xref:System.Windows.Controls.GridView> anzeigen.  
  
 ![ListView mit GridView-Ausgabe](~/add/media/listviewgridview.JPG "ListView mit GridView-Ausgabe")  
  
 Sie können auch benutzerdefinierte Ansichten definieren, durch Erstellen einer Klasse, die abgeleitet <xref:System.Windows.Controls.ViewBase>. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen Sie einen benutzerdefinierten Ansichtsmodus für eine ListView](~/docs/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview.md).  
  
 Wenn Sie ein benutzerdefiniertes <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> für eine <xref:System.Windows.Controls.ListView> steuern und definieren Sie auch eine <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A>, müssen Sie auch eine <xref:System.Windows.Controls.ContentPresenter> in der <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A>. Die <xref:System.Windows.Controls.ContentPresenter> ist erforderlich, damit die <xref:System.Windows.Controls.ItemsControl.ItemTemplate%2A> ordnungsgemäß funktioniert.  
  
 Zur Vermeidung von Ausrichtungsprobleme in eine <xref:System.Windows.Controls.GridView> Modus anzeigen, keine Inhalte hinzufügen oder Eigenschaften festlegen, die Auswirkung auf die Breite eines Elements in der <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> von einer <xref:System.Windows.Controls.ListView>. Um Ausrichtungsprobleme zu verhindern, verwenden Sie Eigenschaften und Vorlagen, die für definiert sind die <xref:System.Windows.Controls.GridView> sichtmodus befinden. Dies umfasst Eigenschaften und Vorlagen, die für Klassen definiert werden, die in verwendet werden eine <xref:System.Windows.Controls.GridView> Modus, z. B. anzeigen <xref:System.Windows.Controls.GridViewColumn> und <xref:System.Windows.Controls.GridViewColumnHeader>.  
  
 Zwei <xref:System.Windows.Controls.ListView> Steuerelemente können nicht derselben Ansicht freigeben. Um eine Sicht anzugeben, die mehr als einmal verwendet werden kann, verwenden Sie Vorlagen oder Stile. Ein Beispiel für eine <xref:System.Windows.Controls.GridView> und andere benutzerdefinierten Ansichten, die als wieder verwendbare Ressourcen definiert werden finden Sie unter [ListView mit mehreren Ansichten Beispiel](http://go.microsoft.com/fwlink/?LinkID=160013).  
  
 Verwenden Sie nicht die <xref:System.Windows.Controls.Control.HorizontalContentAlignment%2A> und <xref:System.Windows.Controls.Control.VerticalContentAlignment%2A> Eigenschaften für <xref:System.Windows.Controls.ListView> mit angezeigten Inhalt eine <xref:System.Windows.Controls.GridView>. An die Ausrichtung von Inhalt in einer Spalte mit einem <xref:System.Windows.Controls.GridView>, definieren eine <xref:System.Windows.Controls.GridViewColumn.CellTemplate%2A>.  
  
 Anzeigen einer großen Anzahl von Elementen möglicherweise Leistungsprobleme verursachen.  Finden Sie unter [Optimieren der Leistung: Steuerelemente](~/docs/framework/wpf/advanced/optimizing-performance-controls.md) für Weitere Informationen.  
  
## <a name="customizing-the-listview-control"></a>Anpassen von ListView-Steuerelement  
 Zum Anwenden der gleichen eigenschafteneinstellungen mit mehreren <xref:System.Windows.Controls.ListView> -Steuerelemente verwenden die <xref:System.Windows.FrameworkElement.Style%2A> Eigenschaft. Sie können den Standardwert ändern <xref:System.Windows.Controls.ControlTemplate> auf dem Steuerelement ein einzigartiges aussehen zu verleihen. Weitere Informationen zum Erstellen einer <xref:System.Windows.Controls.ControlTemplate>, finden Sie unter [Anpassen der Darstellung von einem vorhandenen Steuerelement durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  Um anzuzeigen, die Teile und Zustände, die spezifisch für die <xref:System.Windows.Controls.ListView>, finden Sie unter [ListView-Stile und Vorlagen](~/docs/framework/wpf/controls/listview-styles-and-templates.md).  
  
 Abhängigkeitseigenschaften für dieses Steuerelement können vom Standardformat für das Steuerelement festgelegt werden.  Wenn eine Eigenschaft von einem Standardformat festgelegt ist, kann die Eigenschaft von seinem Standardwert ändern, wenn das Steuerelement in der Anwendung angezeigt wird. Das Standardformat wird bestimmt, welche desktop Design verwendet wird, wenn die Anwendung ausgeführt wird.  Weitere Informationen finden Sie unter [Standard-WPF-Designs](http://go.microsoft.com/fwlink/?LinkID=158252).  
  
> [!NOTE]
>  Festlegen einer visuellen Eigenschaft haben nur Auswirkungen, wenn diese Eigenschaft sowohl in vorhanden ist <xref:System.Windows.Controls.ListView> Steuerelement die Standardvorlage und festgelegt ist, mit ein. Sie finden eine Liste der Eigenschaften visueller Elemente im Abschnitt "Ändern der visuellen Struktur eines Steuerelements" [Anpassen der Darstellung von einem vorhandenen Steuerelement durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie zum Erstellen einer <xref:System.Windows.Controls.ListView> -Steuerelement, implementiert eine <xref:System.Windows.Controls.GridView> als seine <xref:System.Windows.Controls.ListView.View%2A>. In diesem Beispiel wird die Abbildung im Abschnitt "Hinweise" entnommen.  
  
 [!code-xaml[ListViewCode#ListViewEmployee](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewemployee)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ListViewItem" />
    <altmember cref="T:System.Windows.Controls.GridView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ListView" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void ClearContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Der zu löschende <see cref="T:System.Windows.Controls.ListViewItem" />-Container.</param>
        <param name="item">Das Objekt, das im <see cref="T:System.Windows.Controls.ListViewItem" /> enthalten ist.</param>
        <summary>Entfernt alle Vorlagen, Stile und Bindungen für das Objekt, das als <see cref="T:System.Windows.Controls.ListViewItem" /> angezeigt wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt einen neuen <see cref="T:System.Windows.Controls.ListViewItem" />-Container und gibt diesen zurück.</summary>
        <returns>Ein neues <see cref="T:System.Windows.Controls.ListViewItem" />-Steuerelement.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Das auszuwertende Objekt.</param>
        <summary>Bestimmt, ob ein Objekt ein <see cref="T:System.Windows.Controls.ListViewItem" /> ist.</summary>
        <returns>
          <see langword="true" />, wenn das <paramref name="item" /> ein <see cref="T:System.Windows.Controls.ListViewItem" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Definiert einen <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> für das <see cref="T:System.Windows.Controls.ListView" />-Steuerelement.</summary>
        <returns>Gibt ein <see cref="T:System.Windows.Automation.Peers.ListViewAutomationPeer" />-Objekt für das <see cref="T:System.Windows.Controls.ListView" />-Steuerelement zurück.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisargumente.</param>
        <summary>Reagiert auf einen <see cref="M:System.Windows.Controls.ItemsControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird aufgerufen, wenn eine in der Items-Auflistung, der Änderung eine <xref:System.Windows.Controls.ListView> Steuerelement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ListView.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">Ein Objekt, das ein <see cref="T:System.Windows.Controls.ListViewItem" /> ist oder in ein solches konvertiert werden kann.</param>
        <param name="item">Das Objekt, mit dem das <see cref="T:System.Windows.Controls.ListViewItem" /> erstellt wird.</param>
        <summary>Legt die Stile, Vorlagen und Bindungen für ein <see cref="T:System.Windows.Controls.ListViewItem" /> fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bereitet eine <xref:System.Windows.Controls.ListViewItem> Steuerelement für die Anzeige entsprechend den Angaben <xref:System.Windows.Controls.ListView.View%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ViewBase View { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ViewBase View" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ListView.View" />
      <MemberSignature Language="VB.NET" Value="Public Property View As ViewBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ViewBase ^ View { System::Windows::Controls::ViewBase ^ get(); void set(System::Windows::Controls::ViewBase ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ViewBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Objekt ab, das die Stile und die Organisation der Daten in einem <see cref="T:System.Windows.Controls.ListView" />-Steuerelement festlegt, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.Windows.Controls.ViewBase" />-Objekt, das angibt, wie Informationen im <see cref="T:System.Windows.Controls.ListView" /> angezeigt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die .NET Framework-Umgebung enthält die konfigurierbaren Anzeigemodus <xref:System.Windows.Controls.GridView>. Sie können auch eine benutzerdefinierte Ansicht, die von erben erstellen <xref:System.Windows.Controls.ViewBase>. Weitere Informationen finden Sie unter [Vorgehensweise: Erstellen Sie einen benutzerdefinierten Ansichtsmodus für eine ListView](~/docs/framework/wpf/controls/how-to-create-a-custom-view-mode-for-a-listview.md).  
  
<a name="dependencyPropertyInfo_View"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Bezeichnerfeld|<xref:System.Windows.Controls.ListView.ViewProperty>|  
|Metadaten-Eigenschaften festgelegt auf. `true`|Keiner|  
  
> [!NOTE]
>  Der Typ der Metadaten für diese Eigenschaft ist <xref:System.Windows.PropertyMetadata>, nicht <xref:System.Windows.FrameworkPropertyMetadata>.  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie an eine <xref:System.Windows.Controls.GridView> -Objekts entsprechend der <xref:System.Windows.Controls.ListView.View%2A> für eine <xref:System.Windows.Controls.ListView> Steuerelement.  
  
 [!code-csharp[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml.cs#listviewview)]
 [!code-vb[ListViewCode#ListViewView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewCode/visualbasic/window1.xaml.vb#listviewview)]
 [!code-xaml[ListViewCode#ListViewView](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewCode/CSharp/Window1.xaml#listviewview)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ViewBase" />
        <altmember cref="T:System.Windows.Controls.GridView" />
      </Docs>
    </Member>
    <Member MemberName="ViewProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ViewProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ViewProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.ListView.ViewProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ViewProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ViewProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Controls.ListView.View" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>