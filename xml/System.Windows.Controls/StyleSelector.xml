<Type Name="StyleSelector" FullName="System.Windows.Controls.StyleSelector">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6ab45c843692203617df4d0b2c12870d3d84a123" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82472294" /></Metadata><TypeSignature Language="C#" Value="public class StyleSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StyleSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.StyleSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class StyleSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class StyleSelector" />
  <TypeSignature Language="F#" Value="type StyleSelector = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Bietet die Option, Formate auf der Grundlage von benutzerdefinierter Logik anzuwenden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um eine <xref:System.Windows.Controls.StyleSelector> zu erstellen, die auf der Grundlage benutzerdefinierter Logik einen Stil anwendet, erstellen Sie eine Unterklasse der <xref:System.Windows.Controls.StyleSelector>-Klasse, und implementieren Sie die <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie eine <xref:System.Windows.Controls.StyleSelector> definieren, die eine <xref:System.Windows.Style> für eine Zeile definiert. In diesem Beispiel wird die <xref:System.Windows.Controls.Control.Background%2A> Farbe gemäß dem Zeilen Index definiert.  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 Im folgenden Beispiel wird gezeigt, wie Sie eine <xref:System.Windows.ResourceKey> für die <xref:System.Windows.Controls.StyleSelector>definieren. Das `namespc`-Präfix wird einem [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]-Namespace und der entsprechenden Assembly zugeordnet, in der die <xref:System.Windows.Controls.StyleSelector> definiert ist. Weitere Informationen finden Sie unter [XAML-Namespaces und Namespace Zuordnung für WPF-XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A>-Eigenschaft eines <xref:System.Windows.Controls.ListView> auf diese <xref:System.Windows.Controls.StyleSelector> Ressource festgelegt wird.  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 Ein Beispiel zum Erstellen eines Selektor, um eine definierte Stil Ressource auszuwählen, finden Sie in der Implementierung von <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>, mit der Sie benutzerdefinierte Logik zum Auswählen einer <xref:System.Windows.DataTemplate>auf der Grundlage eines ähnlichen Konzepts verwenden können.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
    <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StyleSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StyleSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz von <see cref="T:System.Windows.Controls.StyleSelector" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectStyle">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Style SelectStyle (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Style SelectStyle(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectStyle (item As Object, container As DependencyObject) As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Style ^ SelectStyle(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberSignature Language="F#" Value="abstract member SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style&#xA;override this.SelectStyle : obj * System.Windows.DependencyObject -&gt; System.Windows.Style" Usage="styleSelector.SelectStyle (item, container)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item">Der Inhalt.</param>
        <param name="container">Das Element, auf das das Format angewendet wird.</param>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse eine auf benutzerdefinierter Logik basierende <see cref="T:System.Windows.Style" /> zurück.</summary>
        <returns>Gibt ein anwendungsspezifisches Format zurück, das angewendet werden soll, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um eine <xref:System.Windows.Controls.StyleSelector> zu erstellen, die auf der Grundlage benutzerdefinierter Logik einen Stil anwendet, erstellen Sie eine Unterklasse der <xref:System.Windows.Controls.StyleSelector>-Klasse, und implementieren Sie die <xref:System.Windows.Controls.StyleSelector.SelectStyle%2A>-Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie eine <xref:System.Windows.Controls.StyleSelector> definieren, die eine <xref:System.Windows.Style> für eine Zeile definiert. In diesem Beispiel wird die <xref:System.Windows.Controls.Control.Background%2A> Farbe gemäß dem Zeilen Index definiert.  
  
 [!code-csharp[ListViewSnips#ItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml.cs#itemstyleselector)]
 [!code-vb[ListViewSnips#ItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ListViewSnips/visualbasic/window1.xaml.vb#itemstyleselector)]  
  
 Im folgenden Beispiel wird gezeigt, wie Sie eine <xref:System.Windows.ResourceKey> für die <xref:System.Windows.Controls.StyleSelector>definieren. Das `namespc`-Präfix wird einem [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]-Namespace und der entsprechenden Assembly zugeordnet, in der die <xref:System.Windows.Controls.StyleSelector> definiert ist. Weitere Informationen finden Sie unter [XAML-Namespaces und Namespace Zuordnung für WPF-XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 [!code-xaml[ListViewSnips#myStyleSelectorKey](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#mystyleselectorkey)]  
  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector%2A>-Eigenschaft eines <xref:System.Windows.Controls.ListView> auf diese <xref:System.Windows.Controls.StyleSelector> Ressource festgelegt wird.  
  
 [!code-xaml[ListViewSnips#StyleSelectorXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewSnips/CSharp/Window1.xaml#styleselectorxaml)]  
  
 Ein Beispiel zum Erstellen eines Selektor, um eine definierte Stil Ressource auszuwählen, finden Sie in der Implementierung von <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A?displayProperty=nameWithType>, mit der Sie benutzerdefinierte Logik zum Auswählen einer <xref:System.Windows.DataTemplate>auf der Grundlage eines ähnlichen Konzepts verwenden können.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" />
        <altmember cref="P:System.Windows.Controls.GroupStyle.ContainerStyleSelector" />
        <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
      </Docs>
    </Member>
  </Members>
</Type>
