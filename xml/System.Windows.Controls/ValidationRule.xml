<Type Name="ValidationRule" FullName="System.Windows.Controls.ValidationRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d943c0a429f59df3b60e426ffe15421bae969a62" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69211809" /></Metadata><TypeSignature Language="C#" Value="public abstract class ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidationRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValidationRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationRule abstract" />
  <TypeSignature Language="F#" Value="type ValidationRule = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Bietet eine Möglichkeit, eine benutzerdefinierte Regel zu erstellen, um die Gültigkeit von Benutzereingaben zu überprüfen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie das Daten [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Bindungs Modell verwenden, können Sie dem <xref:System.Windows.Data.Binding.ValidationRules%2A> Bindungs Objekt zuordnen. Erstellen Sie eine Unterklasse dieser Klasse, und implementieren Sie die <xref:System.Windows.Controls.ValidationRule.Validate%2A> -Methode, um benutzerdefinierte Regeln zu erstellen. Verwenden Sie optional das integrierte <xref:System.Windows.Controls.ExceptionValidationRule>, das Ausnahmen abfängt, die während der Quell Aktualisierungen ausgelöst werden, oder das <xref:System.Windows.Controls.DataErrorValidationRule>, das auf Fehler überprüft, die <xref:System.ComponentModel.IDataErrorInfo> von der-Implementierung des Quell Objekts ausgelöst werden.  
  
 Die Bindungs-Engine überprüft <xref:System.Windows.Controls.ValidationRule> jede, die einer Bindung zugeordnet ist, jedes Mal, wenn Sie einen Eingabe Wert überträgt, der der Bindungs Ziel-Eigenschafts Wert ist, an die Bindungs Quell Eigenschaft.  
  
 Ausführliche Informationen zur Datenvalidierung finden Sie unter [Übersicht über die Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Informationen zum Überprüfen der vom Benutzer bereitgestellten Daten in einem Dialogfeld finden Sie unter [Übersicht über Dialogfelder](~/docs/framework/wpf/app-development/dialog-boxes-overview.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie eine Validierungs Regel implementiert wird. Der Eingabe Wert ist ungültig, wenn er nicht numerische Zeichen enthält oder sich außerhalb der unteren und oberen Begrenzungen befindet. Wenn der Wert des zurückgegebenen <xref:System.Windows.Controls.ValidationResult> ungültig ist, wird <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> die-Eigenschaft auf die entsprechende Fehlermeldung festgelegt <xref:System.Windows.Controls.ValidationResult.IsValid%2A> , und die- `false`Eigenschaft wird auf festgelegt.  
  
 Das vollständige Beispiel finden Sie unter [Vorgehensweise: Implementieren der Bindungs](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)Validierung.  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationRule" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationRule" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule(System::Windows::Controls::ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationRule : System.Windows.Controls.ValidationStep * bool -&gt; System.Windows.Controls.ValidationRule" Usage="new System.Windows.Controls.ValidationRule (validationStep, validatesOnTargetUpdated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="validationStep" Type="System.Windows.Controls.ValidationStep" />
        <Parameter Name="validatesOnTargetUpdated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validationStep">Ein Enumerationswert, der angibt, dass die Validierungsregel ausgeführt wird.</param>
        <param name="validatesOnTargetUpdated"><see langword="true" />, wenn die Validierungsregel beim Aktualisieren des Ziels der <see cref="T:System.Windows.Data.Binding" /> ausgeführt werden soll, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationRule" />-Klasse mit dem angegebenen Validierungsschritt und einem Wert, der angibt, ob die Validierungsregel beim Aktualisieren des Ziels ausgeführt wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Führt Validierungsprüfungen für einen Wert aus.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert aus dem Bindungsziel, der überprüft werden soll.</param>
        <param name="cultureInfo">Die in dieser Regel zu verwendende Kultur.</param>
        <summary>Führt beim Überschreiben in einer abgeleiteten Klasse Validierungsprüfungen für einen Wert durch.</summary>
        <returns>Ein <see cref="T:System.Windows.Controls.ValidationResult" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen diese Methode implementieren, wenn Sie eine Unterklasse der <xref:System.Windows.Controls.ValidationRule> -Klasse erstellen, um eine benutzerdefinierte Validierungs Regel zu erstellen.  
  
 Jedes Mal, wenn die Daten Bindungs-Engine einen Wert von der Bindungs Ziel-Eigenschaft (von Benutzereingaben) an die Bindungs Quell Eigenschaft (die zugrunde liegenden Daten) überträgt <xref:System.Windows.Data.Binding.ValidationRules%2A> , wird überprüft, ob für diese Bindung definiert ist. Wenn <xref:System.Windows.Data.Binding.ValidationRules%2A> für die Bindung definiert ist, ruft die-Engine <xref:System.Windows.Controls.ValidationRule.Validate%2A> die-Methode <xref:System.Windows.Controls.ValidationRule> auf jeder-Methode auf, bis einer von Ihnen einen Fehler findet oder alle davon bestanden haben.  
  
 Ausführliche Informationen zur Datenvalidierung finden Sie unter [Übersicht über die Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie eine Validierungs Regel implementiert wird. Im folgenden Beispiel ist der Eingabe Wert ungültig, wenn er nicht numerische Zeichen enthält oder außerhalb der unteren und oberen Begrenzungen liegt. Wenn der Eingabe Wert ungültig ist, wird <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> die-Eigenschaft auf die entsprechende Fehlermeldung festgelegt <xref:System.Windows.Controls.ValidationResult.IsValid%2A> , und die- `false`Eigenschaft ist auf festgelegt.  
  
 Das vollständige Beispiel finden Sie unter [Vorgehensweise: Implementieren der Bindungs](~/docs/framework/wpf/data/how-to-implement-binding-validation.md)Validierung.  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
        <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159972">Beispiel zur Bindungs Validierung</related>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingExpressionBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingExpressionBase ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingExpressionBase" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert aus dem Bindungsziel, der überprüft werden soll.</param>
        <param name="cultureInfo">Die in dieser Regel zu verwendende Kultur.</param>
        <param name="owner">Der Bindungsausdruck, der die Validierungsregel benutzt.</param>
        <summary>Führt Validierungsprüfungen für einen Wert aus.</summary>
        <returns>Ein <see cref="T:System.Windows.Controls.ValidationResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingGroup owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingGroup ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingGroup" Index="2" FrameworkAlternate="netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert aus dem Bindungsziel, der überprüft werden soll.</param>
        <param name="cultureInfo">Die in dieser Regel zu verwendende Kultur.</param>
        <param name="owner">Die Bindungsgruppe, die die Validierungsregel benutzt.</param>
        <summary>Führt Validierungsprüfungen für einen Wert aus.</summary>
        <returns>Ein <see cref="T:System.Windows.Controls.ValidationResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool ValidatesOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnTargetUpdated : bool with get, set" Usage="System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Validierungsregel ausgeführt wird, wenn das Ziel der <see cref="T:System.Windows.Data.Binding" /> aktualisiert wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn die Validierungsregel beim Aktualisieren des Ziels der <see cref="T:System.Windows.Data.Binding" /> ausgeführt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel <xref:System.Windows.Controls.TextBox> wird überprüft, ob leer ist. <xref:System.Windows.Controls.ValidationRule> <xref:System.Windows.Controls.ValidationRule> <xref:System.Windows.Controls.TextBox> Das-,- <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> ist auf`true`festgelegt, sodass beim Starten der Anwendung eine Meldung angezeigt wird, wenn die leer ist. `ValueIsNotNull`  
  
 [!code-xaml[BindingGroupSnippets#ValidatesOnTargetUpdated](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validatesontargetupdated)]  
  
 Das folgende Beispiel zeigt den <xref:System.Windows.Controls.ValidationRule> , der im vorherigen Beispiel verwendet wird, und den-Ereignishandler <xref:System.Windows.Controls.Validation.Error> für das-Ereignis.  
  
 [!code-csharp[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#valueisnotnull)]
 [!code-vb[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#valueisnotnull)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationStep">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationStep ValidationStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationStep ValidationStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationStep As ValidationStep" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationStep ValidationStep { System::Windows::Controls::ValidationStep get(); void set(System::Windows::Controls::ValidationStep value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationStep : System.Windows.Controls.ValidationStep with get, set" Usage="System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, wann die Validierungsregel ausgeführt wird.</summary>
        <value>Einer der Enumerationswerte.  Die Standardeinstellung ist <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird auf <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> für <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> das <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice` -Objekt festgelegt, sodass die <xref:System.Windows.Controls.ValidationRule.Validate%2A> -Methode beim Ausführen von auf Werte des Quell Eigenschafts Typs zugreifen kann. Wenn die Regeln `PriceIsAPositiveNumber` und `FutureDateRule` ausgeführt werden, sind die Werte <xref:System.Windows.Controls.ValidationRule.Validate%2A> in jeder Methode Zeichen folgen, da die Regeln ausgeführt werden, bevor die Werte in ihre jeweiligen Typen konvertiert werden.  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 Das folgende Beispiel zeigt den <xref:System.Windows.Controls.ValidationRule>. `ValidateDateAndPrice` In der `Validate` Überschreibung der Methode `Price` ist die-Eigenschaft <xref:System.Double> vom Typ `OfferExpires` , und die- <xref:System.DateTime> Eigenschaft ist vom Typ, <xref:System.Windows.Controls.ValidationRule> da die Zeichen folgen zu dem Zeitpunkt, zu dem ausgeführt wird, in ihre jeweiligen Typen konvertiert wurden.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
