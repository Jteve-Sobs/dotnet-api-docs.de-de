<Type Name="ValidationRule" FullName="System.Windows.Controls.ValidationRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d29673d406cfb8b1c7ebbf012f6492d7e42555a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36364976" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ValidationRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ValidationRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationRule" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ValidationRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationRule abstract" />
  <TypeSignature Language="F#" Value="type ValidationRule = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Bietet eine Möglichkeit, eine benutzerdefinierte Regel zu erstellen, um die Gültigkeit von Benutzereingaben zu überprüfen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Verwendung der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Modell Binden von Daten, die Sie zuordnen <xref:System.Windows.Data.Binding.ValidationRules%2A> mit Binding-Objekts. Um benutzerdefinierte Regeln zu erstellen, stellen Sie eine Unterklasse von dieser Klasse und Implementieren der <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode. Verwenden Sie optional die integrierte <xref:System.Windows.Controls.ExceptionValidationRule>, die während einer quellenaktualisierungen, ausgelöste Ausnahmen abfängt oder <xref:System.Windows.Controls.DataErrorValidationRule>, der überprüft werden vom verursachten Fehlern der <xref:System.ComponentModel.IDataErrorInfo> Implementierung des Quellobjekts.  
  
 Das Bindungsmodul prüft jede <xref:System.Windows.Controls.ValidationRule> , die jedes Mal, wenn sie einen Eingabewert überträgt die Bindung der Wert der Zieleigenschaft, an die Bindungsquelleigenschaft ist keine Bindung zugeordnet ist.  
  
 Ausführliche Informationen zum Überprüfen von Daten finden Sie unter [Übersicht über Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Informationen zum Überprüfen der vom Benutzer bereitgestellte Daten in einem Dialogfeld finden Sie unter [Dialog Boxes Overview](~/docs/framework/wpf/app-development/dialog-boxes-overview.md).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie eine Validierungsregel implementiert wird. Der Eingabewert ist ungültig, wenn er nicht numerische Zeichen enthält oder außerhalb der unteren und oberen Grenzen liegt. Wenn der Wert des zurückgegebenen <xref:System.Windows.Controls.ValidationResult> ist ungültig, die <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> in die entsprechende Fehlermeldung die Eigenschaft festgelegt ist und die <xref:System.Windows.Controls.ValidationResult.IsValid%2A> -Eigenschaftensatz auf `false`.  
  
 Das vollständige Beispiel finden Sie unter [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
    <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationRule" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationRule" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ValidationRule (System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Controls.ValidationStep validationStep, bool validatesOnTargetUpdated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.#ctor(System.Windows.Controls.ValidationStep,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ValidationRule(System::Windows::Controls::ValidationStep validationStep, bool validatesOnTargetUpdated);" />
      <MemberSignature Language="F#" Value="new System.Windows.Controls.ValidationRule : System.Windows.Controls.ValidationStep * bool -&gt; System.Windows.Controls.ValidationRule" Usage="new System.Windows.Controls.ValidationRule (validationStep, validatesOnTargetUpdated)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validationStep" Type="System.Windows.Controls.ValidationStep" />
        <Parameter Name="validatesOnTargetUpdated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validationStep">Ein Enumerationswert, der angibt, dass die Validierungsregel ausgeführt wird.</param>
        <param name="validatesOnTargetUpdated">
          <see langword="true" />, wenn die Validierungsregel beim Aktualisieren des Ziels der <see cref="T:System.Windows.Data.Binding" /> ausgeführt werden soll, andernfalls <see langword="false" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.ValidationRule" />-Klasse mit dem angegebenen Validierungsschritt und einem Wert, der angibt, ob die Validierungsregel beim Aktualisieren des Ziels ausgeführt wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Validate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Führt Validierungsprüfungen für einen Wert aus.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert aus dem zu überprüfenden Bindungsziel.</param>
        <param name="cultureInfo">Die in dieser Regel zu verwendende Kultur.</param>
        <summary>Führt beim Überschreiben in einer abgeleiteten Klasse Validierungsüberprüfungen für einen Wert aus.</summary>
        <returns>Ein <see cref="T:System.Windows.Controls.ValidationResult" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie müssen diese Methode implementieren, wenn Sie eine Unterklasse von erstellen die <xref:System.Windows.Controls.ValidationRule> Klasse, um eine benutzerdefinierte Validierungsregel zu erstellen.  
  
 Jedes Mal das Datenbindungsmodul überträgt einen Wert vom Bindungsziel-Eigenschaft (aus Benutzereingaben) an die Bindungsquelleigenschaft (die zugrunde liegenden Daten), überprüft er, ob bei einem <xref:System.Windows.Data.Binding.ValidationRules%2A> für diese Bindung definiert sind. Wenn <xref:System.Windows.Data.Binding.ValidationRules%2A> werden für die Bindung, die das Modul ruft definiert die <xref:System.Windows.Controls.ValidationRule.Validate%2A> -Methode für jedes <xref:System.Windows.Controls.ValidationRule> bis eine von ihnen ein Fehler gefunden wird oder alle übergeben.  
  
 Ausführliche Informationen zum Überprüfen von Daten finden Sie unter [Übersicht über Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
   
  
## Examples  
 Im folgende Beispiel wird gezeigt, wie eine Validierungsregel implementiert wird. Im folgenden Beispiel ist der Eingabewert ungültig, wenn er nicht numerische Zeichen enthält oder außerhalb der unteren und oberen Grenzen liegt. Wenn der Eingabewert ungültig ist, wird der <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> Eigenschaftensatz in die entsprechende Fehlermeldung und die <xref:System.Windows.Controls.ValidationResult.IsValid%2A> -Eigenschaftensatz auf `false`.  
  
 Das vollständige Beispiel finden Sie unter [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.DataErrorValidationRule" />
        <altmember cref="T:System.Windows.Controls.ExceptionValidationRule" />
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingExpressionBase owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingExpressionBase owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingExpressionBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingExpressionBase ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingExpressionBase -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingExpressionBase" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert aus dem zu überprüfenden Bindungsziel.</param>
        <param name="cultureInfo">Die in dieser Regel zu verwendende Kultur.</param>
        <param name="owner">Der Bindungsausdruck, der die Validierungsregel benutzt.</param>
        <summary>Führt Validierungsprüfungen für einen Wert aus.</summary>
        <returns>Ein <see cref="T:System.Windows.Controls.ValidationResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Controls.ValidationResult Validate (object value, System.Globalization.CultureInfo cultureInfo, System.Windows.Data.BindingGroup owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Controls.ValidationResult Validate(object value, class System.Globalization.CultureInfo cultureInfo, class System.Windows.Data.BindingGroup owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo,System.Windows.Data.BindingGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Controls::ValidationResult ^ Validate(System::Object ^ value, System::Globalization::CultureInfo ^ cultureInfo, System::Windows::Data::BindingGroup ^ owner);" />
      <MemberSignature Language="F#" Value="abstract member Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult&#xA;override this.Validate : obj * System.Globalization.CultureInfo * System.Windows.Data.BindingGroup -&gt; System.Windows.Controls.ValidationResult" Usage="validationRule.Validate (value, cultureInfo, owner)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cultureInfo" Type="System.Globalization.CultureInfo" />
        <Parameter Name="owner" Type="System.Windows.Data.BindingGroup" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert aus dem zu überprüfenden Bindungsziel.</param>
        <param name="cultureInfo">Die in dieser Regel zu verwendende Kultur.</param>
        <param name="owner">Die Bindungsgruppe, die die Validierungsregel benutzt.</param>
        <summary>Führt Validierungsprüfungen für einen Wert aus.</summary>
        <returns>Ein <see cref="T:System.Windows.Controls.ValidationResult" />-Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool ValidatesOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidatesOnTargetUpdated : bool with get, set" Usage="System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Validierungsregel ausgeführt wird, wenn das Ziel der <see cref="T:System.Windows.Data.Binding" /> aktualisiert wird, oder legt diesen Wert fest.</summary>
        <value>
          <see langword="true" />, wenn die Validierungsregel beim Aktualisieren des Ziels der <see cref="T:System.Windows.Data.Binding" /> ausgeführt wird, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird überprüft, ob die <xref:System.Windows.Controls.TextBox> ist leer. Die <xref:System.Windows.Controls.ValidationRule>, `ValueIsNotNull`, hat <xref:System.Windows.Controls.ValidationRule.ValidatesOnTargetUpdated%2A> festgelegt `true`, sodass beim Starten der Anwendung die <xref:System.Windows.Controls.ValidationRule> ausgeführt wird und eine Meldung angezeigt, wenn die <xref:System.Windows.Controls.TextBox> ist leer.  
  
 [!code-xaml[BindingGroupSnippets#ValidatesOnTargetUpdated](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#validatesontargetupdated)]  
  
 Das folgende Beispiel zeigt die <xref:System.Windows.Controls.ValidationRule> wird, in dem vorherigen Beispiel und den Ereignishandler für das <xref:System.Windows.Controls.Validation.Error> Ereignis.  
  
 [!code-csharp[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#valueisnotnull)]
 [!code-vb[BindingGroupSnippets#ValueIsNotNull](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#valueisnotnull)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationStep">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ValidationStep ValidationStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ValidationStep ValidationStep" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationStep As ValidationStep" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ValidationStep ValidationStep { System::Windows::Controls::ValidationStep get(); void set(System::Windows::Controls::ValidationStep value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationStep : System.Windows.Controls.ValidationStep with get, set" Usage="System.Windows.Controls.ValidationRule.ValidationStep" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationStep</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab oder legt fest, wann die Validierungsregel ausgeführt wird.</summary>
        <value>Einer der Enumerationswerte.  Der Standardwert ist <see cref="F:System.Windows.Controls.ValidationStep.RawProposedValue" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.Controls.ValidationRule.ValidationStep%2A> auf <xref:System.Windows.Controls.ValidationStep.ConvertedProposedValue> auf die <xref:System.Windows.Controls.ValidationRule> aufgerufen `ValidateDateAndPrice` , damit bei der Ausführung, die <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode hat Zugriff auf die Werte des Typs für die Source-Eigenschaft. Wenn die Regeln `PriceIsAPositiveNumber` und `FutureDateRule` ausführen, die Werte in den einzelnen <xref:System.Windows.Controls.ValidationRule.Validate%2A> Methode sind Zeichenfolgen, da die Regeln ausgeführt, bevor die Werte in ihren entsprechenden Typen konvertiert werden.  
  
 [!code-xaml[BindingGroupSnippets#WindowLayout](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window1.xaml#windowlayout)]  
  
 Das folgende Beispiel zeigt die <xref:System.Windows.Controls.ValidationRule> `ValidateDateAndPrice`. In der `Validate` Überschreibung, die `Price` -Eigenschaft ist vom Typ <xref:System.Double> und `OfferExpires` -Eigenschaft ist vom Typ <xref:System.DateTime> , da die Zeichenfolgen vom Typ der in ihren entsprechenden Typen konvertiert wurden die <xref:System.Windows.Controls.ValidationRule> ausgeführt wird.  
  
 [!code-csharp[BindingGroupSnippets#ValidateObject](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Data.cs#validateobject)]
 [!code-vb[BindingGroupSnippets#ValidateObject](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/data.vb#validateobject)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>