<Type Name="IPropertyValueUIService" FullName="System.Drawing.Design.IPropertyValueUIService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2ec57ce9f116552c535cbe9e74de1a7e158edf39" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37658830" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPropertyValueUIService" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPropertyValueUIService" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.IPropertyValueUIService" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertyValueUIService" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPropertyValueUIService" />
  <TypeSignature Language="F#" Value="type IPropertyValueUIService = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Schnittstelle zum Verwalten der Bilder, QuickInfos und Ereignishandler für die Eigenschaften einer in einem Eigenschaftenbrowser angezeigten Komponente bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Komponente kann mithilfe der <xref:System.Drawing.Design.IPropertyValueUIService> -Schnittstelle zur Bereitstellung <xref:System.Drawing.Design.PropertyValueUIItem> Objekte für alle Eigenschaften der Komponente. Ein <xref:System.Drawing.Design.PropertyValueUIItem> zugeordnete Eigenschaft bieten ein Bild, eine QuickInfo und einen Ereignishandler für das Ereignis, das ausgelöst wird, wenn das Bild, das mit der Eigenschaft verknüpften geklickt wird.  
  
 Die <xref:System.Drawing.Design.IPropertyValueUIService> Schnittstelle stellt Methoden zum Hinzufügen, entfernen und Abrufen von <xref:System.Drawing.Design.PropertyValueUIHandler> Delegaten zu oder von einer internen Liste. Wenn die Eigenschaften einer Komponente in einem Eigenschaftenbrowser angezeigt werden jede <xref:System.Drawing.Design.PropertyValueUIHandler> in der Liste ist Gelegenheit zum Bereitstellen einer <xref:System.Drawing.Design.PropertyValueUIItem> für jede Eigenschaft der Komponente.  
  
 Wenn Sie ein Eigenschaftenbrowser zum Anzeigen der Eigenschaften eines Objekts festgelegt ist, ruft er die <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> -Methode dieser Schnittstelle für jede Eigenschaft der Komponente auf und übergibt eine <xref:System.ComponentModel.PropertyDescriptor> , die die Eigenschaft darstellt. Die <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> Methode ruft jede <xref:System.Drawing.Design.PropertyValueUIHandler> an den Dienst hinzugefügt wurde. Jede <xref:System.Drawing.Design.PropertyValueUIHandler> hinzufügen können eine <xref:System.Drawing.Design.PropertyValueUIItem> auf die <xref:System.Collections.ArrayList> übergebene Parameter die `valueUIItemList` Parameter zum Angeben der Benutzeroberfläche für die Eigenschaft, die durch dargestellt Elemente der <xref:System.ComponentModel.PropertyDescriptor> übergeben die `propDesc` Parameter.  
  
 Ein <xref:System.Drawing.Design.PropertyValueUIItem> darf die einem Bild zur Anzeige neben den Namen der Eigenschaft, eine QuickInfo-Zeichenfolge und ein Ereignishandler aufgerufen wird, wenn ein Bild mit der Eigenschaft verknüpften doppelgeklickt wird.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Komponente, die eine Instanz von erhält die <xref:System.Drawing.Design.IPropertyValueUIService> Schnittstelle und fügt eine <xref:System.Drawing.Design.PropertyValueUIHandler> an den Dienst. Der Handler stellt einen <xref:System.Drawing.Design.PropertyValueUIItem> Objekt für alle Eigenschaften der Komponente mit dem Namen `HorizontalMargin` oder `VerticalMargin`. Die <xref:System.Drawing.Design.PropertyValueUIItem> für diese Eigenschaften bereitstellt, ein Bild, eine QuickInfo und einen Ereignishandler, die ein Meldungsfeld angezeigt, wenn das Bild für die Eigenschaft geklickt wird. Das Bild und der QuickInfo angezeigt, eine <xref:System.Windows.Forms.PropertyGrid> Wenn diese Eigenschaften der Komponente im Raster angezeigt.  
  
 [!code-cpp[IPropertyValueUIServiceExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#1)]
 [!code-csharp[IPropertyValueUIServiceExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#1)]
 [!code-vb[IPropertyValueUIServiceExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
  </Docs>
  <Members>
    <Member MemberName="AddPropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void AddPropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.AddPropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberSignature Language="F#" Value="abstract member AddPropertyValueUIHandler : System.Drawing.Design.PropertyValueUIHandler -&gt; unit" Usage="iPropertyValueUIService.AddPropertyValueUIHandler newHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">Der Benutzeroberflächenhandler für Eigenschaftswerte, der hinzugefügt werden soll.</param>
        <summary>Fügt diesem Dienst den angegebenen <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn <xref:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems%2A> wird aufgerufen, mit diesem Dienst hinzugefügten Handler wird aufgerufen und die Gelegenheit, ein Symbol für die Eigenschaft hinzuzufügen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyUIValueItems">
      <MemberSignature Language="C#" Value="public System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems (System.ComponentModel.ITypeDescriptorContext context, System.ComponentModel.PropertyDescriptor propDesc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Drawing.Design.PropertyValueUIItem[] GetPropertyUIValueItems(class System.ComponentModel.ITypeDescriptorContext context, class System.ComponentModel.PropertyDescriptor propDesc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.GetPropertyUIValueItems(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyUIValueItems (context As ITypeDescriptorContext, propDesc As PropertyDescriptor) As PropertyValueUIItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::Design::PropertyValueUIItem ^&gt; ^ GetPropertyUIValueItems(System::ComponentModel::ITypeDescriptorContext ^ context, System::ComponentModel::PropertyDescriptor ^ propDesc);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyUIValueItems : System.ComponentModel.ITypeDescriptorContext * System.ComponentModel.PropertyDescriptor -&gt; System.Drawing.Design.PropertyValueUIItem[]" Usage="iPropertyValueUIService.GetPropertyUIValueItems (context, propDesc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Design.PropertyValueUIItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="propDesc" Type="System.ComponentModel.PropertyDescriptor" />
      </Parameters>
      <Docs>
        <param name="context">Eine <see cref="T:System.ComponentModel.ITypeDescriptorContext" />-Schnittstelle, über die zusätzliche Kontextinformationen abgerufen werden können.</param>
        <param name="propDesc">Ein <see cref="T:System.ComponentModel.PropertyDescriptor" />, der die Eigenschaft angibt, die mit den zurückzugebenden Eigenschaften verglichen werden soll.</param>
        <summary>Ruft die <see cref="T:System.Drawing.Design.PropertyValueUIItem" />-Objekte ab, die mit den angegebenen Merkmalen von Kontext und Eigenschaftenbezeichner übereinstimmen.</summary>
        <returns>Eine Array von <see cref="T:System.Drawing.Design.PropertyValueUIItem" />-Objekten, die den angegebenen Parametern entsprechen.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyPropertyValueUIItemsChanged">
      <MemberSignature Language="C#" Value="public void NotifyPropertyValueUIItemsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyPropertyValueUIItemsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyPropertyValueUIItemsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyPropertyValueUIItemsChanged();" />
      <MemberSignature Language="F#" Value="abstract member NotifyPropertyValueUIItemsChanged : unit -&gt; unit" Usage="iPropertyValueUIService.NotifyPropertyValueUIItemsChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Benachrichtigt die <see cref="T:System.Drawing.Design.IPropertyValueUIService" />-Implementierung von einer Änderung der globalen Liste von <see cref="T:System.Drawing.Design.PropertyValueUIItem" />-Objekten.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      </Docs>
    </Member>
    <Member MemberName="PropertyUIValueItemsChanged">
      <MemberSignature Language="C#" Value="event EventHandler PropertyUIValueItemsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PropertyUIValueItemsChanged" />
      <MemberSignature Language="DocId" Value="E:System.Drawing.Design.IPropertyValueUIService.PropertyUIValueItemsChanged" />
      <MemberSignature Language="VB.NET" Value="Event PropertyUIValueItemsChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PropertyUIValueItemsChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyUIValueItemsChanged : EventHandler " Usage="member this.PropertyUIValueItemsChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn die Liste der <see cref="T:System.Drawing.Design.PropertyValueUIItem" />-Objekte geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Komponenten, die <xref:System.Drawing.Design.PropertyValueUIItem> Objekte können Aufrufen <xref:System.Drawing.Design.IPropertyValueUIService.NotifyPropertyValueUIItemsChanged%2A> Wenn sie sich die Liste der Elemente ändern.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyValueUIHandler">
      <MemberSignature Language="C#" Value="public void RemovePropertyValueUIHandler (System.Drawing.Design.PropertyValueUIHandler newHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePropertyValueUIHandler(class System.Drawing.Design.PropertyValueUIHandler newHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Design.IPropertyValueUIService.RemovePropertyValueUIHandler(System.Drawing.Design.PropertyValueUIHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyValueUIHandler (newHandler As PropertyValueUIHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyValueUIHandler(System::Drawing::Design::PropertyValueUIHandler ^ newHandler);" />
      <MemberSignature Language="F#" Value="abstract member RemovePropertyValueUIHandler : System.Drawing.Design.PropertyValueUIHandler -&gt; unit" Usage="iPropertyValueUIService.RemovePropertyValueUIHandler newHandler" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newHandler" Type="System.Drawing.Design.PropertyValueUIHandler" />
      </Parameters>
      <Docs>
        <param name="newHandler">Der zu entfernende Handler.</param>
        <summary>Entfernt den angegebenen <see cref="T:System.Drawing.Design.PropertyValueUIHandler" /> aus dem Benutzeroberflächendienst für Eigenschaftswerte.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Drawing.Design.PropertyValueUIHandler" />
      </Docs>
    </Member>
  </Members>
</Type>