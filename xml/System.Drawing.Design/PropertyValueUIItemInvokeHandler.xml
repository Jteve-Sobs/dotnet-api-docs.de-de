<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7f746c974a98e7b04eb1f1e8e823c301c69089b" /><Meta Name="ms.sourcegitcommit" Value="9506e50ec7beb4fa30206b9840dc546b035a6600" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2020" /><Meta Name="ms.locfileid" Value="83961671" /></Metadata><TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <TypeSignature Language="F#" Value="type PropertyValueUIItemInvokeHandler = delegate of ITypeDescriptorContext * PropertyDescriptor * PropertyValueUIItem -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context"><span data-ttu-id="1cd7b-101">Der <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> für die Eigenschaft, die dem Symbol zugeordnet ist, auf das doppelgeklickt wurde.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-101">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the property associated with the icon that was double-clicked.</span></span></param>
    <param name="descriptor"><span data-ttu-id="1cd7b-102">Die Eigenschaft, die dem Symbol zugeordnet ist, auf das doppelgeklickt wurde.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-102">The property associated with the icon that was double-clicked.</span></span></param>
    <param name="invokedItem"><span data-ttu-id="1cd7b-103">Das <see cref="T:System.Drawing.Design.PropertyValueUIItem" />, das dem Symbol zugeordnet ist, auf das doppelgeklickt wurde.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-103">The <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> associated with the icon that was double-clicked.</span></span></param>
    <summary><span data-ttu-id="1cd7b-104">Stellt die Methode zur Behandlung des <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" />-Ereignisses eines <see cref="T:System.Drawing.Design.PropertyValueUIItem" />-Objekts dar.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-104">Represents the method that will handle the <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> event of a <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1cd7b-105">Durch Doppelklicken auf ein Symbol im Eigenschaftenfenster wird das- <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> Ereignis des-Ereignisses <xref:System.Drawing.Design.PropertyValueUIItem> , dem das Symbol zugeordnet ist, angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-105">Double-clicking an icon in the Properties window will raise the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event of the <xref:System.Drawing.Design.PropertyValueUIItem> that the icon is associated with.</span></span> <span data-ttu-id="1cd7b-106">Das Ereignis öffnet in der <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> Regel eine Benutzeroberfläche (User Interface, UI), um den Wert der Eigenschaft zu bearbeiten.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-106">The <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event typically launches a user interface (UI) to edit the property's value.</span></span> <span data-ttu-id="1cd7b-107">Fügen Sie <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> der- <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> Eigenschaft eines hinzu <xref:System.Drawing.Design.PropertyValueUIItem> , um einen Ereignishandler für das entsprechende Verhalten zuzuweisen, wenn auf das neben dem Eigenschaftsnamen angezeigte Symbol Doppel geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-107">Add a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> to the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> property of a <xref:System.Drawing.Design.PropertyValueUIItem> to assign an event handler to perform the appropriate behavior when the icon displayed next to the property name is double-clicked.</span></span>  
  
 <span data-ttu-id="1cd7b-108">Beim Erstellen eines <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler>-Delegaten bestimmen Sie die Methode für die Ereignisbehandlung.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-108">When you create a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="1cd7b-109">Um dem Ereignishandler das Ereignis zuzuordnen, fügen Sie dem Ereignis eine Instanz des Delegaten hinzu.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-109">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="1cd7b-110">Der Ereignishandler wird bei jedem Eintreten des Ereignisses aufgerufen, sofern der Delegat nicht entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-110">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="1cd7b-111">Weitere Informationen zu Ereignishandlerdelegaten finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).</span><span class="sxs-lookup"><span data-stu-id="1cd7b-111">For more information about event-handler delegates, see [Handling and Raising Events](/dotnet/standard/events/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1cd7b-112">Im folgenden Codebeispiel wird ein- <xref:System.Drawing.Design.PropertyValueUIItem> Objekt für alle Eigenschaften der-Komponente mit dem Namen oder bereitstellt `HorizontalMargin` `VerticalMargin` .</span><span class="sxs-lookup"><span data-stu-id="1cd7b-112">The following code example provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`.</span></span> <span data-ttu-id="1cd7b-113">Die <xref:System.Drawing.Design.PropertyValueUIItem> für diese Eigenschaften bietet ein Bild, eine QuickInfo und einen Ereignishandler, der ein Meldungs Feld anzeigt, wenn auf das Bild für die Eigenschaft geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="1cd7b-113">The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked.</span></span> <span data-ttu-id="1cd7b-114">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die-Schnittstelle bereitgestellt wird <xref:System.Drawing.Design.IPropertyValueUIService> .</span><span class="sxs-lookup"><span data-stu-id="1cd7b-114">This code example is part of a larger example provided for the <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span></span>  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>
