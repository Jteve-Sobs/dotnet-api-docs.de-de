<Type Name="ITextRangeProvider" FullName="System.Windows.Automation.Provider.ITextRangeProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="86b3fa97aa346591419b18aa93b7764b7859fb28" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65012479" /></Metadata><TypeSignature Language="C#" Value="public interface ITextRangeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextRangeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITextRangeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextRangeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextRangeProvider" />
  <TypeSignature Language="F#" Value="type ITextRangeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("5347ad7b-c355-46f8-aff5-909033582f63")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4d66e-101">Macht Methoden und Eigenschaften verfügbar, um den Zugriff eines Benutzeroberflächenautomatisierungs-Clients auf einen fortlaufenden Textbereich in einem Textcontainer zu unterstützen, der <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> implementiert.</span><span class="sxs-lookup"><span data-stu-id="4d66e-101">Exposes methods and properties to support UI Automation client access to a span of continuous text in a text container that implements <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-102">Implementiert ein Benutzeroberflächenautomatisierungs-Anbieter, die unterstützen, muss die <xref:System.Windows.Automation.TextPattern> Steuerelementmuster.</span><span class="sxs-lookup"><span data-stu-id="4d66e-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TextPattern> control pattern.</span></span>  
  
 <span data-ttu-id="4d66e-103">Ein <xref:System.Windows.Automation.Text.TextPatternRange> darstellen kann, eine Einfügemarke, eine Teilmenge oder aller der Text in einem <xref:System.Windows.Automation.TextPattern> Container.</span><span class="sxs-lookup"><span data-stu-id="4d66e-103">A <xref:System.Windows.Automation.Text.TextPatternRange> can represent an insertion point, a subset, or all of the text in a <xref:System.Windows.Automation.TextPattern> container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Text.TextPatternRange" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="4d66e-104">Übersicht über Steuerelementmuster für Benutzeroberflächenautomatisierung</span><span class="sxs-lookup"><span data-stu-id="4d66e-104">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="4d66e-105">Implementierung eines serverseitigen Benutzeroberflächenautomatisierungs-Anbieter</span><span class="sxs-lookup"><span data-stu-id="4d66e-105">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6"><span data-ttu-id="4d66e-106">Implementierung eines clientseitigen Benutzeroberflächenautomatisierungs-Anbieter</span><span class="sxs-lookup"><span data-stu-id="4d66e-106">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776"><span data-ttu-id="4d66e-107">Unterstützung von Steuerelementmustern in einem Benutzeroberflächenautomatisierungs-Anbieter</span><span class="sxs-lookup"><span data-stu-id="4d66e-107">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/41787927-df1f-4f4a-aba3-641662854fc4"><span data-ttu-id="4d66e-108">Übersicht über TextPattern für die Benutzeroberflächenautomatisierung</span><span class="sxs-lookup"><span data-stu-id="4d66e-108">UI Automation TextPattern Overview</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="AddToSelection">
      <MemberSignature Language="C#" Value="public void AddToSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToSelection();" />
      <MemberSignature Language="F#" Value="abstract member AddToSelection : unit -&gt; unit" Usage="iTextRangeProvider.AddToSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d66e-109">Fügt Elemente zur Auflistung markierter Textbereiche in einem Textcontainer hinzu, der mehrere, nicht zusammenhängende Auswahlbereiche unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-109">Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-110">Die Einfügemarke bewegt sich in den Bereich der neuen Auswahl.</span><span class="sxs-lookup"><span data-stu-id="4d66e-110">The text insertion point moves to the area of the new selection.</span></span>  
  
 <span data-ttu-id="4d66e-111">Einen degenerierten Textbereich bereitstellen Verschiebt die Einfügemarke.</span><span class="sxs-lookup"><span data-stu-id="4d66e-111">Providing a degenerate text range moves the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4d66e-112">Wenn der Textanbieter mehrere, nicht unterstützt nicht zusammenhängende Auswahlbereiche (d. h. <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> müssen einen Wert von <see langword="Multiple" />).</span><span class="sxs-lookup"><span data-stu-id="4d66e-112">If text provider does not support multiple, disjoint selections (that is, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d66e-113">Gibt einen neuen <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> zurück, der mit dem ursprünglichen <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identisch ist und dessen sämtliche Eigenschaften erbt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-113">Returns a new <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identical to the original <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> and inheriting all properties of the original.</span></span></summary>
        <returns><span data-ttu-id="4d66e-114">Der neue Textbereich.</span><span class="sxs-lookup"><span data-stu-id="4d66e-114">The new text range.</span></span> <span data-ttu-id="4d66e-115">Ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) wird nie zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4d66e-115">A null reference (<see langword="Nothing" /> in Visual Basic) is never returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-116">Der neue Bereich kann aus der ursprünglichen unabhängig voneinander bearbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="4d66e-116">The new range can be manipulated independently from the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public bool Compare (System.Windows.Automation.Provider.ITextRangeProvider range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compare(class System.Windows.Automation.Provider.ITextRangeProvider range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (range As ITextRangeProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compare(System::Windows::Automation::Provider::ITextRangeProvider ^ range);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Windows.Automation.Provider.ITextRangeProvider -&gt; bool" Usage="iTextRangeProvider.Compare range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
      </Parameters>
      <Docs>
        <param name="range"><span data-ttu-id="4d66e-117">Ein Textbereich für den Vergleich</span><span class="sxs-lookup"><span data-stu-id="4d66e-117">A text range to compare</span></span></param>
        <summary><span data-ttu-id="4d66e-118">Gibt einen Wert zurück, der angibt, ob ein Textabschnitt (<see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" />-Endpunkt bis <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />-Endpunkt) mit einem anderen Textabschnitt identisch ist.</span><span class="sxs-lookup"><span data-stu-id="4d66e-118">Returns a value that indicates whether the span (the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> endpoint to the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint) of a text range is the same as another text range.</span></span></summary>
        <returns><span data-ttu-id="4d66e-119"><see langword="true" />, wenn beide Textabschnitte identisch sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d66e-119"><see langword="true" /> if the span of both text ranges is identical; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4d66e-120">Wenn der zu vergleichende Bereich nicht vom gleichen Textanbieter stammt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-120">If the range being compared does not come from the same text provider.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompareEndpoints">
      <MemberSignature Language="C#" Value="public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareEndpoints(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareEndpoints (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareEndpoints(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member CompareEndpoints : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; int" Usage="iTextRangeProvider.CompareEndpoints (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="4d66e-121">Der <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" />-Endpunkt oder der <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />-Endpunkt des Aufrufers.</span><span class="sxs-lookup"><span data-stu-id="4d66e-121">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the caller.</span></span></param>
        <param name="targetRange"><span data-ttu-id="4d66e-122">Der Zielbereich für den Vergleich.</span><span class="sxs-lookup"><span data-stu-id="4d66e-122">The target range for comparison.</span></span></param>
        <param name="targetEndpoint"><span data-ttu-id="4d66e-123">Der <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" />-Endpunkt oder der <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />-Endpunkt des Ziels.</span><span class="sxs-lookup"><span data-stu-id="4d66e-123">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the target.</span></span></param>
        <summary><span data-ttu-id="4d66e-124">Gibt einen Wert zurück, der angibt, ob zwei Textbereiche identische Endpunkte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="4d66e-124">Returns a value that specifies whether two text ranges have identical endpoints.</span></span></summary>
        <returns><span data-ttu-id="4d66e-125">Gibt einen negativen Wert zurück, wenn der Endpunkt des Aufrufers im Text vor dem Zielendpunkt liegt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-125">Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</span></span>  
  
<span data-ttu-id="4d66e-126">Gibt 0 (null) zurück, wenn der Endpunkt des Aufrufers an derselben Position wie der Zielendpunkt liegt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-126">Returns zero if the caller's endpoint is at the same location as the target endpoint.</span></span>  
  
<span data-ttu-id="4d66e-127">Gibt einen positiven Wert zurück, wenn der Endpunkt des Aufrufers im Text nach dem Zielendpunkt liegt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-127">Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4d66e-128">Wenn <paramref name="targetRange" /> stammt von einem anderen Textanbieter stammt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-128">If <paramref name="targetRange" /> is from a different text provider.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExpandToEnclosingUnit">
      <MemberSignature Language="C#" Value="public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExpandToEnclosingUnit(valuetype System.Windows.Automation.Text.TextUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandToEnclosingUnit (unit As TextUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandToEnclosingUnit(System::Windows::Automation::Text::TextUnit unit);" />
      <MemberSignature Language="F#" Value="abstract member ExpandToEnclosingUnit : System.Windows.Automation.Text.TextUnit -&gt; unit" Usage="iTextRangeProvider.ExpandToEnclosingUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
      </Parameters>
      <Docs>
        <param name="unit"><span data-ttu-id="4d66e-129">Die Texteinheit.</span><span class="sxs-lookup"><span data-stu-id="4d66e-129">The textual unit.</span></span></param>
        <summary><span data-ttu-id="4d66e-130">Erweitert den Textbereich auf die angegebene Texteinheit.</span><span class="sxs-lookup"><span data-stu-id="4d66e-130">Expands the text range to the specified text unit.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-131">Es bleibt unverändert, wenn der Bereich bereits eine genaue Anzahl der angegebenen Einheiten.</span><span class="sxs-lookup"><span data-stu-id="4d66e-131">If the range is already an exact quantity of the specified units then it remains unchanged.</span></span>  
  
 <span data-ttu-id="4d66e-132">Es gibt eine Reihe von Schritten treten im Hintergrund in der Reihenfolge für die <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> Methode erfolgreich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-132">There is a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="4d66e-133">Der Textbereich ist normalisiert. Dies bedeutet, dass dieser auf einen degenerierten Bereich am <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> -Endpunkt reduziert ist, wodurch der <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> -Endpunkt überflüssig wird.</span><span class="sxs-lookup"><span data-stu-id="4d66e-133">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="4d66e-134">Dieser Schritt ist erforderlich, um Mehrdeutigkeit in Situationen, in denen ein Textbereich umfasst `unit` Grenzen, z. B. "{die U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) ist in den Text eingebettet", "{" und "}" werden der Text Endpunkte des Textbereichs.</span><span class="sxs-lookup"><span data-stu-id="4d66e-134">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="4d66e-135">Der resultierende Bereich wird im <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> zurück an den Anfang der angeforderten `unit` -Grenze verschoben.</span><span class="sxs-lookup"><span data-stu-id="4d66e-135">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="4d66e-136">Der Bereich wird um die angeforderte Anzahl von <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> -Grenzen nach vorne oder nach hinten im `unit` verschoben.</span><span class="sxs-lookup"><span data-stu-id="4d66e-136">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="4d66e-137">Anschließend wird der Bereich von einem degenerierten Bereichszustand erweitert, indem der <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> -Endpunkt um eine angeforderte `unit` -Grenze verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="4d66e-137">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="4d66e-138">![Bereichsberichtigung durch Move und ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Bereichsberichtigung durch Move und ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="4d66e-138">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="4d66e-139">Beispiele für die Anpassung eines Textbereichs für Move() und ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="4d66e-139">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4d66e-140">Diese Schritte sind erforderlich, da es üblich, dass eine Sprachausgabe eine vollständigen Worts, den Satz oder die gesamte Absatz an der Einfügemarke oder virtuellen Cursorposition zu lesen ist.</span><span class="sxs-lookup"><span data-stu-id="4d66e-140">These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</span></span>  
  
 <span data-ttu-id="4d66e-141"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> berücksichtigt ausgeblendeten und sichtbaren Text.</span><span class="sxs-lookup"><span data-stu-id="4d66e-141"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="4d66e-142"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> verzögert die nächste größten <xref:System.Windows.Automation.Text.TextUnit> unterstützten If der angegebenen <xref:System.Windows.Automation.Text.TextUnit> wird vom Steuerelement nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-142"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="4d66e-143">Die Reihenfolge, von der kleinsten Einheit aufsteigend, sind unten aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-143">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAttribute">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindAttribute (int attribute, object value, bool backward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindAttribute(int32 attribute, object value, bool backward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAttribute (attribute As Integer, value As Object, backward As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindAttribute(int attribute, System::Object ^ value, bool backward);" />
      <MemberSignature Language="F#" Value="abstract member FindAttribute : int * obj * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindAttribute (attribute, value, backward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="backward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="4d66e-144">Das zu suchende Attribut.</span><span class="sxs-lookup"><span data-stu-id="4d66e-144">The attribute to search for.</span></span></param>
        <param name="value"><span data-ttu-id="4d66e-145">Der zu suchende Attributwert.</span><span class="sxs-lookup"><span data-stu-id="4d66e-145">The attribute value to search for.</span></span> <span data-ttu-id="4d66e-146">Dieser Wert mit dem für das Attribut angegebenen Typ übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="4d66e-146">This value must match the type specified for the attribute.</span></span></param>
        <param name="backward"><span data-ttu-id="4d66e-147"><see langword="true" />, wenn statt dem ersten der letzte vorhandene Textbereich zurückgegeben werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d66e-147"><see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4d66e-148">Gibt den Teil des Textbereichs zurück, der den angegebenen Attributwert aufweist.</span><span class="sxs-lookup"><span data-stu-id="4d66e-148">Returns a text range subset that has the specified attribute value.</span></span></summary>
        <returns><span data-ttu-id="4d66e-149">Ein Textbereich mit einem entsprechenden Attribut und Attributwert, andernfalls NULL (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4d66e-149">A text range having a matching attribute and attribute value; otherwise null (<see langword="Nothing" /> in Visual Basic).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-150">Es wird keine Differenzierung zwischen verborgenen und sichtbaren Text.</span><span class="sxs-lookup"><span data-stu-id="4d66e-150">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindText">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindText (string text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindText(string text, bool backward, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindText (text As String, backward As Boolean, ignoreCase As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindText(System::String ^ text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member FindText : string * bool * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindText (text, backward, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="backward" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="4d66e-151">Die zu suchende Textzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="4d66e-151">The text string to search for.</span></span></param>
        <param name="backward"><span data-ttu-id="4d66e-152"><see langword="true" />, wenn statt dem ersten der letzte vorhandene Textbereich zurückgegeben werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d66e-152"><see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="4d66e-153"><see langword="true" />, wenn die Groß-/Kleinschreibung ignoriert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4d66e-153"><see langword="true" /> if case should be ignored; otherwise <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4d66e-154">Gibt den Teil des Textbereichs zurück, der den angegebenen Text enthält.</span><span class="sxs-lookup"><span data-stu-id="4d66e-154">Returns a text range subset that contains the specified text.</span></span></summary>
        <returns><span data-ttu-id="4d66e-155">Ein Textbereich, der mit dem angegebenen Text übereinstimmt, andernfalls NULL (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="4d66e-155">A text range matching the specified text; otherwise null (<see langword="Nothing" /> in Visual Basic).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-156">Es wird keine Differenzierung zwischen verborgenen und sichtbaren Text.</span><span class="sxs-lookup"><span data-stu-id="4d66e-156">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="C#" Value="public object GetAttributeValue (int attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAttributeValue(int32 attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeValue (attribute As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAttributeValue(int attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeValue : int -&gt; obj" Usage="iTextRangeProvider.GetAttributeValue attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attribute"><span data-ttu-id="4d66e-157">Das Textattribut.</span><span class="sxs-lookup"><span data-stu-id="4d66e-157">The text attribute.</span></span></param>
        <summary><span data-ttu-id="4d66e-158">Ruft den Wert des angegebenen Attributs textbereichübergreifend ab.</span><span class="sxs-lookup"><span data-stu-id="4d66e-158">Retrieves the value of the specified attribute across the text range.</span></span></summary>
        <returns><span data-ttu-id="4d66e-159">Ruft ein Objekt ab, das den Wert des angegebenen Attributs darstellt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-159">Retrieves an object representing the value of the specified attribute.</span></span> <span data-ttu-id="4d66e-160">Zum Beispiel gibt <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> eine Zeichenfolge zurück, die den Schriftartnamen für den Textbereich darstellt, sofern dieser eindeutig ist, während <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c>“ einen Wert des Typs <see cref="T:System.Boolean" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-160">For example, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> would return a string that represents the font name of the text range while <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> would return a value of type <see cref="T:System.Boolean" />.</span></span>  
  
<span data-ttu-id="4d66e-161">Gibt <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> zurück, wenn sich der Wert des angegebenen Attributs im Verlauf des Textbereichs ändert.</span><span class="sxs-lookup"><span data-stu-id="4d66e-161">Returns <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> if the value of the specified attribute varies over the text range.</span></span>  
  
<span data-ttu-id="4d66e-162">Gibt <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> zurück, wenn das angegebene Attribut vom Anbieter oder Steuerelement nicht unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="4d66e-162">Returns <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> if the specified attribute is not supported by the provider or the control.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-163">Es wird keine Differenzierung zwischen verborgenen und sichtbaren Text.</span><span class="sxs-lookup"><span data-stu-id="4d66e-163">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4d66e-164">Wenn das angegebene Attribut nicht gültig ist.</span><span class="sxs-lookup"><span data-stu-id="4d66e-164">If the specified attribute is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangles">
      <MemberSignature Language="C#" Value="public double[] GetBoundingRectangles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] GetBoundingRectangles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoundingRectangles () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetBoundingRectangles();" />
      <MemberSignature Language="F#" Value="abstract member GetBoundingRectangles : unit -&gt; double[]" Usage="iTextRangeProvider.GetBoundingRectangles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d66e-165">Ruft für jede vollständig oder teilweise sichtbare Textzeile in einem Textbereich eine Auflistung von umgebenden Rechtecken ab.</span><span class="sxs-lookup"><span data-stu-id="4d66e-165">Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</span></span></summary>
        <returns><span data-ttu-id="4d66e-166">Ein Array von umgebenden Rechtecken für jede vollständige oder unvollständige Textzeile in einem Textbereich.</span><span class="sxs-lookup"><span data-stu-id="4d66e-166">An array of bounding rectangles for each full or partial line of text in a text range.</span></span>  
  
<span data-ttu-id="4d66e-167">Ein leeres Array für einen degenerierten Bereich.</span><span class="sxs-lookup"><span data-stu-id="4d66e-167">An empty array for a degenerate range.</span></span>  
  
<span data-ttu-id="4d66e-168">Ein leeres Array für einen Textbereich mit Bildschirmkoordinaten, die vollständig außerhalb des Bildschirms liegen, sich durch einen Bildlauf außerhalb des sichtbaren Bereichs befinden oder von einem überlappenden Fenster verdeckt werden.</span><span class="sxs-lookup"><span data-stu-id="4d66e-168">An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iTextRangeProvider.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d66e-169">Ruft eine Auflistung aller eingebetteten Objekte ab, die innerhalb des Textbereichs liegen.</span><span class="sxs-lookup"><span data-stu-id="4d66e-169">Retrieves a collection of all embedded objects that fall within the text range.</span></span></summary>
        <returns><span data-ttu-id="4d66e-170">Eine Auflistung von untergeordneten Objekten, die innerhalb des Bereichs liegen.</span><span class="sxs-lookup"><span data-stu-id="4d66e-170">A collection of child objects that fall within the range.</span></span> <span data-ttu-id="4d66e-171">Untergeordnete Elemente, die sich mit dem Textbereich überlappen, von diesem jedoch nicht vollständig umschlossen sind, werden in der Auflistung ebenfalls aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-171">Children that overlap with the text range but are not entirely enclosed by it will also be included in the collection.</span></span>  
  
<span data-ttu-id="4d66e-172">Gibt eine leere Auflistung zurück, wenn keine untergeordneten Objekte vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="4d66e-172">Returns an empty collection if there are no child objects.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclosingElement">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnclosingElement () As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetEnclosingElement();" />
      <MemberSignature Language="F#" Value="abstract member GetEnclosingElement : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="iTextRangeProvider.GetEnclosingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d66e-173">Gibt das innerste Steuerelement zurück, das den Textbereich umschließt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-173">Returns the innermost control that encloses the text range.</span></span></summary>
        <returns><span data-ttu-id="4d66e-174">Das umschließende Steuerelement, i. d. R. der Textanbieter, der den Textbereich bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-174">The enclosing control, typically the text provider that supplies the text range.</span></span> <span data-ttu-id="4d66e-175">Wenn der Textanbieter jedoch untergeordnete Elemente unterstützt, z. B. Tabellen oder Links, kann das umschließende Element ein Nachfolgerelement des Textanbieters darstellen.</span><span class="sxs-lookup"><span data-stu-id="4d66e-175">However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (maxLength As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(int maxLength);" />
      <MemberSignature Language="F#" Value="abstract member GetText : int -&gt; string" Usage="iTextRangeProvider.GetText maxLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxLength"><span data-ttu-id="4d66e-176">Die maximale Länge der zurückzugebenden Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="4d66e-176">The maximum length of the string to return.</span></span> <span data-ttu-id="4d66e-177">Verwenden Sie <c>–1</c>, wenn keine Grenze erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="4d66e-177">Use <c>-1</c> if no limit is required.</span></span></param>
        <summary><span data-ttu-id="4d66e-178">Ruft den reinen Text des Bereichs ab.</span><span class="sxs-lookup"><span data-stu-id="4d66e-178">Retrieves the plain text of the range.</span></span></summary>
        <returns><span data-ttu-id="4d66e-179">Der reine Text des Textbereichs, möglicherweise an der angegebenen <paramref name="maxLength" /> abgeschnitten.</span><span class="sxs-lookup"><span data-stu-id="4d66e-179">The plain text of the text range, possibly truncated at the specified <paramref name="maxLength" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-180"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> berücksichtigt ausgeblendeten und sichtbaren Text.</span><span class="sxs-lookup"><span data-stu-id="4d66e-180"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="4d66e-181">Wenn `maxLength` ist größer als die Länge des Textabschnitts des Aufrufers, werden die zurückgegebene Zeichenfolge den nur-Text des Textbereichs.</span><span class="sxs-lookup"><span data-stu-id="4d66e-181">If `maxLength` is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</span></span>  
  
 <span data-ttu-id="4d66e-182"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> wird nicht durch die Reihenfolge der Endpunkte in den Textfluss beeinflusst. den Text wird zwischen die Start- und Endpunkte des Textbereichs in der Reihenfolge der logischen Text Fluss immer zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4d66e-182"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4d66e-183">Wenn <paramref name="maxLength" /> kleiner als -1 ist.</span><span class="sxs-lookup"><span data-stu-id="4d66e-183">If <paramref name="maxLength" /> is less than -1.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move(valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Move(System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member Move : System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.Move (unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unit"><span data-ttu-id="4d66e-184">Die Grenze der Texteinheit.</span><span class="sxs-lookup"><span data-stu-id="4d66e-184">The text unit boundary.</span></span></param>
        <param name="count"><span data-ttu-id="4d66e-185">Die Anzahl von Texteinheiten, um die der Textbereich verschoben werden soll.</span><span class="sxs-lookup"><span data-stu-id="4d66e-185">The number of text units to move.</span></span>  
  
<span data-ttu-id="4d66e-186">Bei einem positiven Wert wird der Textbereich vorwärts verschoben, bei einem negativen Wert wird der Textbereich rückwärts verschoben. Der Wert 0 (null) hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="4d66e-186">A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</span></span></param>
        <summary><span data-ttu-id="4d66e-187">Verschiebt den Textbereich um die festgelegte Anzahl von Texteinheiten.</span><span class="sxs-lookup"><span data-stu-id="4d66e-187">Moves the text range the specified number of text units.</span></span></summary>
        <returns><span data-ttu-id="4d66e-188">Die Anzahl von Einheiten, um die der Textbereich tatsächlich verschoben wurde.</span><span class="sxs-lookup"><span data-stu-id="4d66e-188">The number of units actually moved.</span></span> <span data-ttu-id="4d66e-189">Diese kann unterhalb der angeforderten Anzahl liegen, wenn einer der neuen Textbereichsendpunkte größer oder kleiner als der jeweilige <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" />-Endpunkt ist.</span><span class="sxs-lookup"><span data-stu-id="4d66e-189">This can be less than the number requested if either of the new text range endpoints is greater than or less than the <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> endpoints.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-190">Wenn der Inhalt eines Textbereichs durchlaufen werden muss, ist eine Reihe von Hintergrundschritten erforderlich, um die <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> -Methode erfolgreich auszuführen.</span><span class="sxs-lookup"><span data-stu-id="4d66e-190">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="4d66e-191">Der Textbereich ist normalisiert. Dies bedeutet, dass dieser auf einen degenerierten Bereich am <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> -Endpunkt reduziert ist, wodurch der <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> -Endpunkt überflüssig wird.</span><span class="sxs-lookup"><span data-stu-id="4d66e-191">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="4d66e-192">Dieser Schritt ist erforderlich, um Mehrdeutigkeit in Situationen, in denen ein Textbereich umfasst `unit` Grenzen, z. B. "{die U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) ist in den Text eingebettet", "{" und "}" werden der Text Endpunkte des Textbereichs.</span><span class="sxs-lookup"><span data-stu-id="4d66e-192">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="4d66e-193">Der resultierende Bereich wird im <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> zurück an den Anfang der angeforderten `unit` -Grenze verschoben.</span><span class="sxs-lookup"><span data-stu-id="4d66e-193">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="4d66e-194">Der Bereich wird um die angeforderte Anzahl von <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> -Grenzen nach vorne oder nach hinten im `unit` verschoben.</span><span class="sxs-lookup"><span data-stu-id="4d66e-194">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="4d66e-195">Anschließend wird der Bereich von einem degenerierten Bereichszustand erweitert, indem der <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> -Endpunkt um eine angeforderte `unit` -Grenze verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="4d66e-195">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="4d66e-196">![Bereichsberichtigung durch Move und ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Bereichsberichtigung durch Move und ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="4d66e-196">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="4d66e-197">Beispiele für die Anpassung eines Textbereichs für Move() und ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="4d66e-197">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="4d66e-198">Der Textinhalt (oder innere Text) eines Textcontainers und ein eingebettetes Objekt, z. B. ein Link oder eine Tabellenzelle, werden in der Steuerelementansicht und der Inhaltsansicht der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] -Struktur als einzelner, kontinuierlicher Textstream verfügbar gemacht, Objektgrenzen werden dabei ignoriert.</span><span class="sxs-lookup"><span data-stu-id="4d66e-198">The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree; object boundaries are ignored.</span></span>  
  
 <span data-ttu-id="4d66e-199">![Textbereiche von eingebetteten Objekten. ] (~/add/media/uia-textpattern-embeddedobjecttextranges.png "Von eingebetteten Objekten umfasste Textbereiche.")</span><span class="sxs-lookup"><span data-stu-id="4d66e-199">![Text ranges spanned by embedded objects.](~/add/media/uia-textpattern-embeddedobjecttextranges.png "Text ranges spanned by embedded objects.")</span></span>  
<span data-ttu-id="4d66e-200">Beispiel für einen Textstream mit eingebetteten Objekten und deren Bereichsabschnitten</span><span class="sxs-lookup"><span data-stu-id="4d66e-200">Example of a text stream with embedded objects and their range spans</span></span>  
  
 <span data-ttu-id="4d66e-201"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> berücksichtigt ausgeblendeten und sichtbaren Text.</span><span class="sxs-lookup"><span data-stu-id="4d66e-201"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="4d66e-202"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> verzögert die nächste größten <xref:System.Windows.Automation.Text.TextUnit> unterstützten If der angegebenen <xref:System.Windows.Automation.Text.TextUnit> wird vom Steuerelement nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-202"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="4d66e-203">Die Reihenfolge, von der kleinsten Einheit aufsteigend, sind unten aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-203">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 <span data-ttu-id="4d66e-204">Der Text nicht in keiner Weise geändert wird, die der Textbereich umfasst einfach einen anderen Teil des Texts.</span><span class="sxs-lookup"><span data-stu-id="4d66e-204">The text is not altered in any way, the text range just spans a different part of the text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByRange">
      <MemberSignature Language="C#" Value="public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveEndpointByRange(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveEndpointByRange (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveEndpointByRange(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByRange : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; unit" Usage="iTextRangeProvider.MoveEndpointByRange (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="4d66e-205">Der zu verschiebende Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-205">The endpoint to move.</span></span></param>
        <param name="targetRange"><span data-ttu-id="4d66e-206">Ein anderer Bereich vom gleichen Textanbieter.</span><span class="sxs-lookup"><span data-stu-id="4d66e-206">Another range from the same text provider.</span></span></param>
        <param name="targetEndpoint"><span data-ttu-id="4d66e-207">Ein Endpunkt des anderen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="4d66e-207">An endpoint on the other range.</span></span></param>
        <summary><span data-ttu-id="4d66e-208">Verschiebt einen Endpunkt eines Textbereichs an den angegebenen Endpunkt eines zweiten Textbereichs.</span><span class="sxs-lookup"><span data-stu-id="4d66e-208">Moves one endpoint of a text range to the specified endpoint of a second text range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-209">Wenn dieser Endpunkt wird ebenfalls verschoben, sodass ein degenerierter Bereich, und stellen Sie sicher, die richtige Reihenfolge der Endpunkte der verschobene Endpunkt überschreitet den anderen Endpunkt für den gleichen Textbereich (d. h. <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> ist immer kleiner als oder gleich <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span><span class="sxs-lookup"><span data-stu-id="4d66e-209">If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> is always less than or equal to <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByUnit">
      <MemberSignature Language="C#" Value="public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndpointByUnit(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndpointByUnit (endpoint As TextPatternRangeEndpoint, unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int MoveEndpointByUnit(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByUnit : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.MoveEndpointByUnit (endpoint, unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint"><span data-ttu-id="4d66e-210">Der zu verschiebende Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-210">The endpoint to move.</span></span></param>
        <param name="unit"><span data-ttu-id="4d66e-211">Die zu verschiebende Texteinheit.</span><span class="sxs-lookup"><span data-stu-id="4d66e-211">The textual unit for moving.</span></span></param>
        <param name="count"><span data-ttu-id="4d66e-212">Die Anzahl der zu verschiebenden Einheiten.</span><span class="sxs-lookup"><span data-stu-id="4d66e-212">The number of units to move.</span></span> <span data-ttu-id="4d66e-213">Bei einem positiven Wert wird der Endpunkt vorwärts verschoben.</span><span class="sxs-lookup"><span data-stu-id="4d66e-213">A positive value moves the endpoint forward.</span></span> <span data-ttu-id="4d66e-214">Bei einem negativen Wert wird der Endpunkt rückwärts verschoben.</span><span class="sxs-lookup"><span data-stu-id="4d66e-214">A negative value moves backward.</span></span> <span data-ttu-id="4d66e-215">Der Wert 0 (null) hat keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="4d66e-215">A value of 0 has no effect.</span></span></param>
        <summary><span data-ttu-id="4d66e-216">Verschiebt einen Endpunkt des Textbereichs um die festgelegte Anzahl von Texteinheiten innerhalb des Dokumentbereichs.</span><span class="sxs-lookup"><span data-stu-id="4d66e-216">Moves one endpoint of the text range the specified number of text units within the document range.</span></span></summary>
        <returns><span data-ttu-id="4d66e-217">Die Anzahl von Einheiten, um die der Endpunkt tatsächlich verschoben wurde. Diese kann kleiner als die angeforderte Anzahl sein, wenn beim Verschieben des Endpunkts der Anfang bzw. das Ende des Dokuments erreicht wird.</span><span class="sxs-lookup"><span data-stu-id="4d66e-217">The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-218">Wenn der Inhalt eines Textbereichs durchlaufen werden muss, ist eine Reihe von Hintergrundschritten erforderlich, um die <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> -Methode erfolgreich auszuführen.</span><span class="sxs-lookup"><span data-stu-id="4d66e-218">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="4d66e-219">Der Textbereich ist normalisiert. Dies bedeutet, dass dieser auf einen degenerierten Bereich am <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> -Endpunkt reduziert ist, wodurch der <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> -Endpunkt überflüssig wird.</span><span class="sxs-lookup"><span data-stu-id="4d66e-219">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="4d66e-220">Dieser Schritt ist erforderlich, um Mehrdeutigkeit in Situationen, in denen ein Textbereich umfasst `unit` Grenzen, z. B. "{die U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/) ist in den Text eingebettet", "{" und "}" werden der Text Endpunkte des Textbereichs.</span><span class="sxs-lookup"><span data-stu-id="4d66e-220">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="4d66e-221">Der resultierende Bereich wird im <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> zurück an den Anfang der angeforderten `unit` -Grenze verschoben.</span><span class="sxs-lookup"><span data-stu-id="4d66e-221">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="4d66e-222">Anschließend wird der Bereich von einem degenerierten Bereichszustand erweitert, indem der <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> -Endpunkt um eine angeforderte `unit` -Grenze verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="4d66e-222">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="4d66e-223">![Bereichsberichtigung durch Move und ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Bereichsberichtigung durch Move und ExpandToEnclosingUnit")</span><span class="sxs-lookup"><span data-stu-id="4d66e-223">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="4d66e-224">Beispiele für die Anpassung eines Textbereichs für Move() und ExpandToEnclosingUnit()</span><span class="sxs-lookup"><span data-stu-id="4d66e-224">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="4d66e-225"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> verzögert die nächste größten <xref:System.Windows.Automation.Text.TextUnit> unterstützten If der angegebenen <xref:System.Windows.Automation.Text.TextUnit> wird vom Steuerelement nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-225"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="4d66e-226">Die Reihenfolge, von der kleinsten Einheit aufsteigend, sind unten aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-226">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromSelection">
      <MemberSignature Language="C#" Value="public void RemoveFromSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFromSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFromSelection();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromSelection : unit -&gt; unit" Usage="iTextRangeProvider.RemoveFromSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d66e-227">Entfernt einen markierten Textabschnitt, der dem <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" />-Endpunkt und dem <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />-Endpunkt des Aufrufers entspricht, aus der Auflistung markierter Textbereiche in einem Textcontainer, der mehrere, nicht zusammenhängende Auswahlbereiche unterstützt.</span><span class="sxs-lookup"><span data-stu-id="4d66e-227">Removes a highlighted section of text, corresponding to the caller's <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints, from the collection of highlighted text in a text container that supports multiple, disjoint selections.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-228">Die Texteinfügemarke wechselt in den Bereich der entfernten Markierung.</span><span class="sxs-lookup"><span data-stu-id="4d66e-228">The text insertion point will move to the area of the removed highlight.</span></span>  
  
 <span data-ttu-id="4d66e-229">Einen degenerierten Textbereich bereitstellt, wird die Einfügemarke verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="4d66e-229">Providing a degenerate text range will move the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4d66e-230">Wenn der Textanbieter mehrere, nicht unterstützt nicht zusammenhängende Auswahlbereiche (z. B. <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> müssen einen Wert von <see langword="Multiple" />).</span><span class="sxs-lookup"><span data-stu-id="4d66e-230">If text provider does not support multiple, disjoint selections (for example, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (bool alignToTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView(bool alignToTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (alignToTop As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(bool alignToTop);" />
      <MemberSignature Language="F#" Value="abstract member ScrollIntoView : bool -&gt; unit" Usage="iTextRangeProvider.ScrollIntoView alignToTop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignToTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alignToTop"><span data-ttu-id="4d66e-231"><see langword="true" />, wenn im Textsteuerelement ein Bildlauf so durchgeführt werden soll, dass der Textbereich am oberen Rand des Anzeigebereichs ausgerichtet ist, <see langword="false" />, wenn der Bereich am unteren Rand des Anzeigebereichs ausgerichtet werden soll.</span><span class="sxs-lookup"><span data-stu-id="4d66e-231"><see langword="true" /> if the text control should be scrolled so the text range is flush with the top of the viewport; <see langword="false" /> if it should be flush with the bottom of the viewport.</span></span></param>
        <summary><span data-ttu-id="4d66e-232">Bewirkt, dass im Textsteuerelement ein vertikaler Bildlauf durchgeführt wird, bis der Textbereich im Anzeigebereich sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="4d66e-232">Causes the text control to scroll vertically until the text range is visible in the viewport.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-233"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> berücksichtigt ausgeblendeten und sichtbaren Text.</span><span class="sxs-lookup"><span data-stu-id="4d66e-233"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="4d66e-234">Wenn der Textbereich ausgeblendet ist, wird im Textsteuerelement Bildläufe durchgeführt werden, nur, wenn die ausgeblendete Text einen Anker im Sichtbereich.</span><span class="sxs-lookup"><span data-stu-id="4d66e-234">If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; unit" Usage="iTextRangeProvider.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4d66e-235">Markiert Text im Textsteuerelement entsprechend dem <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" />-Endpunkt und dem <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" />-Endpunkt des Textbereichs.</span><span class="sxs-lookup"><span data-stu-id="4d66e-235">Highlights text in the text control corresponding to the text range <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4d66e-236">Wenn Sie ein degenerierten Textbereich angegeben wird, wechselt die Einfügemarke in die <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> Endpunkt des Textbereichs.</span><span class="sxs-lookup"><span data-stu-id="4d66e-236">If a degenerate text range is provided, the text insertion point will move to the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint of the text range.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4d66e-237">Tritt auf, wenn die Textauswahl nicht vom Textsteuerelement unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="4d66e-237">Occurs when text selection is not supported by the text control.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>