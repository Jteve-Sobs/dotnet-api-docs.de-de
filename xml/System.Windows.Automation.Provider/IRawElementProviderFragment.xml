<Type Name="IRawElementProviderFragment" FullName="System.Windows.Automation.Provider.IRawElementProviderFragment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a22e23f312d4edf6035ed93097e4295c3c84e5b" /><Meta Name="ms.sourcegitcommit" Value="83d757eaee63e682417f41094d711281691d9aba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/10/2020" /><Meta Name="ms.locfileid" Value="78957972" /></Metadata><TypeSignature Language="C#" Value="public interface IRawElementProviderFragment : System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRawElementProviderFragment implements class System.Windows.Automation.Provider.IRawElementProviderSimple" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IRawElementProviderFragment" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRawElementProviderFragment&#xA;Implements IRawElementProviderSimple" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRawElementProviderFragment : System::Windows::Automation::Provider::IRawElementProviderSimple" />
  <TypeSignature Language="F#" Value="type IRawElementProviderFragment = interface&#xA;    interface IRawElementProviderSimple" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Automation.Provider.IRawElementProviderSimple</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("f7063da8-8359-439c-9297-bbc5299a7d87")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Macht Methoden und Eigenschaften für Benutzeroberflächenelemente verfügbar, die Teil einer mehrere Ebenen tiefen Struktur sind, etwa ein Listenfeld oder Listenelement. Wird durch Benutzeroberflächenautomatisierungs-Anbieter implementiert.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Stamm Knoten des Fragments muss die <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot>-Schnittstelle unterstützen, die von <xref:System.Windows.Automation.Provider.IRawElementProviderFragment>erbt.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-providers-overview.md">Übersicht über die Benutzeroberflächenautomatisierungs-Anbieter</related>
    <related type="Article" href="~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md">Implementierung des Server seitigen Benutzeroberflächenautomatisierungs-Anbieters</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms771502(v=vs.90)">Beispiel für Fragment-Anbieter</related>
  </Docs>
  <Members>
    <Member MemberName="BoundingRectangle">
      <MemberSignature Language="C#" Value="public System.Windows.Rect BoundingRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect BoundingRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BoundingRectangle As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect BoundingRectangle { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.BoundingRectangle : System.Windows.Rect" Usage="System.Windows.Automation.Provider.IRawElementProviderFragment.BoundingRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das umgebende Rechteck dieses Elements ab.</summary>
        <value>Das umgebende Rechteck in Bildschirmkoordinaten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Clipping ist nicht erforderlich, wenn das Element teilweise verdeckt oder teilweise aus dem Bildschirm besteht. Die <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsOffscreen%2A>-Eigenschaft sollte festgelegt werden, um anzugeben, ob das Rechteck tatsächlich sichtbar ist.  
  
 Nicht alle Punkte innerhalb des umgebenden Rechtecks sind notwendigerweise klickbar.  
  
   
  
## Examples  
 Im folgenden Beispielcode wird der interne Zustand des umschließenden Rechtecks in einer <xref:System.Drawing.Rectangle?displayProperty=nameWithType>gespeichert, die vor der Rückgabe in eine <xref:System.Windows.Rect?displayProperty=nameWithType> konvertiert wird.  
  
 [!code-csharp[UIAFragmentProvider_snip#104](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#104)]
 [!code-vb[UIAFragmentProvider_snip#104](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#104)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md">Implementierung des Server seitigen Benutzeroberflächenautomatisierungs-Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="FragmentRoot">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Automation.Provider.IRawElementProviderFragmentRoot FragmentRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FragmentRoot As IRawElementProviderFragmentRoot" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ FragmentRoot { System::Windows::Automation::Provider::IRawElementProviderFragmentRoot ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FragmentRoot : System.Windows.Automation.Provider.IRawElementProviderFragmentRoot" Usage="System.Windows.Automation.Provider.IRawElementProviderFragment.FragmentRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragmentRoot</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Stammknoten des Fragments ab.</summary>
        <value>Der Stammknoten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Anbieter, der <xref:System.Windows.Automation.Provider.IRawElementProviderFragmentRoot> implementiert, sollte sich selbst zurückgeben.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine Implementierung für ein Element in einem Fragment, z. b. ein Listenelement in einem Listenfeld.  
  
 [!code-csharp[UIAFragmentProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#105)]
 [!code-vb[UIAFragmentProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#105)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md">Implementierung des Server seitigen Benutzeroberflächenautomatisierungs-Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="GetEmbeddedFragmentRoots">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetEmbeddedFragmentRoots() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetEmbeddedFragmentRoots" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEmbeddedFragmentRoots () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetEmbeddedFragmentRoots();" />
      <MemberSignature Language="F#" Value="abstract member GetEmbeddedFragmentRoots : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iRawElementProviderFragment.GetEmbeddedFragmentRoots " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft ein Array von Fragmentstämmen ab, die in der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Elementstruktur am aktuellen Element eingebettet sind.</summary>
        <returns>Ein Array von Stammfragmenten oder <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt ein Array von Fragmenten nur dann zurück, wenn das aktuelle Element ein anderes [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Framework gehostet. Die meisten Anbieter geben `null`zurück.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md">Implementierung des Server seitigen Benutzeroberflächenautomatisierungs-Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeId">
      <MemberSignature Language="C#" Value="public int[] GetRuntimeId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetRuntimeId() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.GetRuntimeId" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRuntimeId () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetRuntimeId();" />
      <MemberSignature Language="F#" Value="abstract member GetRuntimeId : unit -&gt; int[]" Usage="iRawElementProviderFragment.GetRuntimeId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Laufzeitbezeichner eines Elements ab.</summary>
        <returns>Ruft den Laufzeitbezeichner eines Elements ab.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementierungen sollten `null` für ein Element zurückgeben, das einem Fenster Handle entspricht. Andere-Elemente sollten ein Array zurückgeben, das <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId>enthält, gefolgt von einem Wert, der innerhalb des Fragments eindeutig ist.  
  
 Es ist für den Anbieter zuständig, die Eindeutigkeit innerhalb des Fragments sicherzustellen. Beispielsweise muss jedes Element in einer Liste einzeln nummeriert werden. Die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Engine stellt sicher, dass der Bezeichner für alle Instanzen eindeutig ist, indem der <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> Wert übersetzt wird.  
  
   
  
## Examples  
 Der folgende Beispielcode zeigt eine Implementierung dieser Methode durch ein Element in einem Fragment, z. b. ein Element in einem Listenfeld. Das Element verfügt über einen eigenen eindeutigen Bezeichner innerhalb dieser Instanz des Fragments, und der <xref:System.Windows.Automation.Provider.AutomationInteropProvider.AppendRuntimeId> Wert stellt sicher, dass der von der-Methode zurückgegebene Bezeichner in der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Struktur eindeutig ist.  
  
 [!code-csharp[UIAFragmentProvider_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#101)]
 [!code-vb[UIAFragmentProvider_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#101)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md">Implementierung des Server seitigen Benutzeroberflächenautomatisierungs-Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderFragment Navigate (System.Windows.Automation.Provider.NavigateDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderFragment Navigate(valuetype System.Windows.Automation.Provider.NavigateDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate(System.Windows.Automation.Provider.NavigateDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (direction As NavigateDirection) As IRawElementProviderFragment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderFragment ^ Navigate(System::Windows::Automation::Provider::NavigateDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member Navigate : System.Windows.Automation.Provider.NavigateDirection -&gt; System.Windows.Automation.Provider.IRawElementProviderFragment" Usage="iRawElementProviderFragment.Navigate direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderFragment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Automation.Provider.NavigateDirection" />
      </Parameters>
      <Docs>
        <param name="direction">Die Richtung für die Navigation.</param>
        <summary>Ruft das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]-Element in einer angegebenen Richtung innerhalb der Struktur ab.</summary>
        <returns>Das Element in der angegebenen Richtung oder <see langword="null" />, wenn kein Element in dieser Richtung vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Server-Implementierungen dieser Methode definieren die Struktur der [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Elementstruktur.  
  
 Die Navigation muss nach oben für das übergeordnete Element unterstützt werden, und zwar nach unten zum ersten und letzten untergeordneten Element und seitell zum nächsten und vorherigen gleich geordneten Element, sofern zutreffend.  
  
 Jeder untergeordnete Knoten verfügt nur über ein übergeordnetes Element und muss in der Kette der gleich geordneten Knoten platziert werden, die von <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> und <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild>erreicht werden.  
  
 Beziehungen zwischen gleich geordneten Elementen müssen in beide Richtungen identisch sein: Wenn a <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>ist, dann ist b ein <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>. Ein <xref:System.Windows.Automation.Provider.NavigateDirection.FirstChild> hat keine <xref:System.Windows.Automation.Provider.NavigateDirection.PreviousSibling>, und ein <xref:System.Windows.Automation.Provider.NavigateDirection.LastChild> hat keine <xref:System.Windows.Automation.Provider.NavigateDirection.NextSibling>.  
  
 Fragmente von Fragmenten ermöglichen keine Navigation zu einem übergeordneten Element oder gleich geordneten Elementen. die Navigation zwischen den fragmentstämmen wird von den standardmäßigen Fenster Anbietern behandelt. Elemente in Fragmenten müssen nur zu anderen Elementen in diesem Fragment navigiert werden.  
  
   
  
## Examples  
 Der folgende Beispielcode zeigt die Implementierung von <xref:System.Windows.Automation.Provider.IRawElementProviderFragment.Navigate%2A> durch einen Fragmentstamm, der über ein einzelnes untergeordnetes Element verfügt. Da das implementierende Element ein Fragmentstamm ist, ermöglicht es keine Navigation zu einem übergeordneten Element oder gleich geordneten Elementen.  
  
 [!code-csharp[UIAProvider_snip#105](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/FragmentRoot.cs#105)]
 [!code-vb[UIAProvider_snip#105](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAProvider_snip/VisualBasic/FragmentRoot.vb#105)]  
  
 Das folgende Beispiel zeigt eine Implementierung durch ein Fragment, das ein einzelnes Element in einem Listenfeld darstellt. In diesem Fall ermöglicht das-Element die Navigation zu seinen übergeordneten und gleich geordneten Elementen, jedoch nicht zu untergeordneten Elementen.  
  
 [!code-csharp[UIAFragmentProvider_snip#103](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAFragmentProvider_snip/CSharp/ListItemFragment.cs#103)]
 [!code-vb[UIAFragmentProvider_snip#103](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAFragmentProvider_snip/VisualBasic/ListItemFragment.vb#103)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md">Implementierung des Server seitigen Benutzeroberflächenautomatisierungs-Anbieters</related>
      </Docs>
    </Member>
    <Member MemberName="SetFocus">
      <MemberSignature Language="C#" Value="public void SetFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IRawElementProviderFragment.SetFocus" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFocus();" />
      <MemberSignature Language="F#" Value="abstract member SetFocus : unit -&gt; unit" Usage="iRawElementProviderFragment.SetFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Legt den Fokus auf dieses Element fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] Framework stellt sicher, dass der Teil der Schnittstelle, die dieses Fragment hostet, bereits vor dem Aufruf dieser Methode fokussiert ist. Ihre Implementierung sollte nur den internen Fokus Zustand aktualisieren; beispielsweise durch Neuzeichnen eines Listen Elements, um anzuzeigen, dass es den Fokus besitzt. Wenn Sie möchten, dass das übergeordnete Fenster [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] nicht fokussiert wird, legen Sie die <xref:System.Windows.Automation.Provider.ProviderOptions.ProviderOwnsSetFocus>-Option in <xref:System.Windows.Automation.Provider.ProviderOptions> für den Fragmentstamm fest.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/ui-automation/server-side-ui-automation-provider-implementation.md">Implementierung des Server seitigen Benutzeroberflächenautomatisierungs-Anbieters</related>
      </Docs>
    </Member>
  </Members>
</Type>
