<Type Name="ISynchronizedInputProvider" FullName="System.Windows.Automation.Provider.ISynchronizedInputProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0e02570fcacf092a87a96f949a21e41901e15454" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70664522" /></Metadata><TypeSignature Language="C#" Value="public interface ISynchronizedInputProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizedInputProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ISynchronizedInputProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizedInputProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizedInputProvider" />
  <TypeSignature Language="F#" Value="type ISynchronizedInputProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("29db1a06-02ce-4cf7-9b42-565d4fab20ee")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Macht Methoden verfügbar, um den Benutzeroberflächenautomatisierungs-Clientzugriff auf Steuerelemente zu erleichtern, die synchronisierte Eingabe unterstützen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implementieren Sie diese Schnittstelle in einem Benutzeroberflächenautomatisierungs- <xref:System.Windows.Automation.SynchronizedInputPattern> Anbieter, der das Steuerelement Muster unterstützen muss  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit" Usage="iSynchronizedInputProvider.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Beendet die Überwachung der Eingabe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Anbieter derzeit Eingaben abhört, wird der normale Betrieb wieder hergestellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (System.Windows.Automation.SynchronizedInputType inputType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(valuetype System.Windows.Automation.SynchronizedInputType inputType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (inputType As SynchronizedInputType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartListening(System::Windows::Automation::SynchronizedInputType inputType);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : System.Windows.Automation.SynchronizedInputType -&gt; unit" Usage="iSynchronizedInputProvider.StartListening inputType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputType" Type="System.Windows.Automation.SynchronizedInputType" />
      </Parameters>
      <Docs>
        <param name="inputType">Der Typ der Eingabe, die überwacht werden soll.</param>
        <summary>Legt fest, dass der Anbieter die Eingabe des angegebenen Typs überwacht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn WPF übereinstimmende Eingaben findet, wird die Route des eingehenden Ereignisses überprüft. Wenn sich das Automatisierungs Element, das die Eingabe überwacht, nicht in der Route befindet, wird die Eingabe verworfen, <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> und das-Ereignis wird ausgelöst. Wenn die Eingabe von dem Automation-Element empfangen wird, das diesen Typ überwacht <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> , wird das-Ereignis ausgelöst; <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> andernfalls wird das-Ereignis ausgelöst.  
  
 Nachdem die Eingabe empfangen wurde, hält der Anbieter das lauschen an und fährt normal fort.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
