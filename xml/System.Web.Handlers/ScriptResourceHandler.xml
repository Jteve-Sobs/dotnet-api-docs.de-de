<Type Name="ScriptResourceHandler" FullName="System.Web.Handlers.ScriptResourceHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b7af6660dd41fbb159db5fcd2274acb518b58d7" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48716701" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ScriptResourceHandler : System.Web.IHttpHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptResourceHandler extends System.Object implements class System.Web.IHttpHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Handlers.ScriptResourceHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptResourceHandler&#xA;Implements IHttpHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptResourceHandler : System::Web::IHttpHandler" />
  <TypeSignature Language="F#" Value="type ScriptResourceHandler = class&#xA;    interface IHttpHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt einen HTTP-Handler für die Verarbeitung von Anforderungen für Skriptdateien bereit, die als Ressourcen in einer Assembly eingebettet sind. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Handlers.ScriptResourceHandler> Klasse verarbeitet alle Anforderungen für eingebettete Skriptdateien, die über referenziert werden die <xref:System.Web.UI.ScriptManager> Klasse. Die <xref:System.Web.Handlers.ScriptResourceHandler> -Objekt ruft die eingebetteten Skripts-Bibliothek sowie lokalisierten Ressourcen für die Skriptbibliothek ab. Wenn die <xref:System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded%2A> -Eigenschaftensatz auf `true`, <xref:System.Web.Handlers.ScriptResourceHandler> Objekt einen Aufruf an die Methode des Objekts am Ende der Skriptdatei hinzugefügt.  
  
 In der Standardeinstellung die <xref:System.Web.Handlers.ScriptResourceHandler> Klasse komprimiert und speichert Sie eingebettete Skriptdateien für Internet Explorer 7. Sie können die Komprimierung und Zwischenspeicherung deaktiviert, durch Aktivieren der <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression%2A> und <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching%2A> Eigenschaften der <xref:System.Web.Configuration.ScriptingScriptResourceHandlerSection> Klasse. Sie können diese Eigenschaften festlegen, in der Datei "Web.config".  
  
> [!NOTE]
>  Sie können Komprimierung für frühere Versionen von Internet Explorer aktivieren durch Erstellen eines Alias für Internet Explorer 7 im Abschnitt der Web.config-Datei. Sie programmgesteuert legen Sie den Wert von der <xref:System.Web.UI.Page.ClientTarget%2A> Eigenschaft auf den Alias. Allerdings empfehlen wir nicht diesen Ansatz, da er, dass eine Verringerung der Leistung bewirkt und hohem Risiko von Fehlern führt.  
  
 Fügt die Standarddatei für die Datei "Web.config" für AJAX-aktivierten ASP.NET-Webanwendungen die <xref:System.Web.Handlers.ScriptResourceHandler> als Handler. Sie können manuell den Handler für Ihre Anwendung dazu das folgende Element in der Datei "Web.config" hinzufügen:  
  
```  
<httpHandlers>  
  <add verb="GET,HEAD" path="ScriptResource.axd"   
    type="System.Web.Handlers.ScriptResourceHandler,   
    System.Web.Extensions, Version=1.0.61025.0, Culture=neutral,   
    PublicKeyToken=31bf3856ad364e35" validate="false" />  
</httpHandlers>  
```  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">für den Betrieb in einer Hostumgebung. Anforderungswert: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />. Berechtigungswert: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /></permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptResourceHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Handlers.ScriptResourceHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptResourceHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Handlers.ScriptResourceHandler" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReusable">
      <MemberSignature Language="C#" Value="protected virtual bool IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Handlers.ScriptResourceHandler.IsReusable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsReusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReusable : bool" Usage="System.Web.Handlers.ScriptResourceHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Beim Überschreiben in einer abgeleiteten Klasse wird ein Wert abgerufen, der angibt, ob diese Instanz der Klasse von einer anderen Anforderung verwendet werden kann.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessRequest">
      <MemberSignature Language="C#" Value="protected virtual void ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ProcessRequest (context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ProcessRequest(System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ProcessRequest : System.Web.HttpContext -&gt; unit&#xA;override this.ProcessRequest : System.Web.HttpContext -&gt; unit" Usage="scriptResourceHandler.ProcessRequest context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Web.HttpContext" />-Objekt, das Verweise auf die systeminternen Serverobjekte (z. B. <see langword="Request" />, <see langword="Response" />, <see langword="Session" /> und <see langword="Server" />) zur Bearbeitung von HTTP-Anforderungen bereitstellt.</param>
        <summary>Beim Überschreiben in einer abgeleiteten Klasse werden HTTP-Webanforderungen für eine Skriptdatei verarbeitet, die als Ressource in einer Assembly enthalten ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.IsReusable">
      <MemberSignature Language="C#" Value="bool System.Web.IHttpHandler.IsReusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.IHttpHandler.IsReusable" />
      <MemberSignature Language="DocId" Value="P:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReusable As Boolean Implements IHttpHandler.IsReusable" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::IHttpHandler::IsReusable { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.IHttpHandler.IsReusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die <see cref="T:System.Web.IHttpHandler" />-Instanz von einer weiteren Anforderung verwendet werden kann.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.Handlers.ScriptResourceHandler>-Instanz in eine <xref:System.Web.IHttpHandler>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.IHttpHandler.ProcessRequest">
      <MemberSignature Language="C#" Value="void IHttpHandler.ProcessRequest (System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.IHttpHandler.ProcessRequest(class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Sub ProcessRequest (context As HttpContext) Implements IHttpHandler.ProcessRequest" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.IHttpHandler.ProcessRequest(System::Web::HttpContext ^ context) = System::Web::IHttpHandler::ProcessRequest;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="context">Ein <see cref="T:System.Web.HttpContext" />-Objekt, das Verweise auf die systeminternen Serverobjekte (z. B. <see langword="Request" />, <see langword="Response" />, <see langword="Session" /> und <see langword="Server" />) zur Bearbeitung von HTTP-Anforderungen bereitstellt.</param>
        <summary>Verarbeitet HTTP-Webanforderungen für eine Skriptdatei, die als Ressource in einer Assembly enthalten ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.Handlers.ScriptResourceHandler>-Instanz in eine <xref:System.Web.IHttpHandler>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Die Typnamen für die Debug- und Releaseversionen des eingebetteten Skripts stimmen nicht überein.</exception>
      </Docs>
    </Member>
  </Members>
</Type>