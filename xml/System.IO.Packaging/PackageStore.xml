<Type Name="PackageStore" FullName="System.IO.Packaging.PackageStore">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e093b385eb17baa6eb6652f3108ad1f59721551a" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82301448" /></Metadata><TypeSignature Language="C#" Value="public static class PackageStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PackageStore extends System.Object" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackageStore" />
  <TypeSignature Language="VB.NET" Value="Public Class PackageStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackageStore abstract sealed" />
  <TypeSignature Language="F#" Value="type PackageStore = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackageStore extends System.Object" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Auflistung von anwendungsspezifischen <see cref="T:System.IO.Packaging.Package" />-Instanzen dar, die gemeinsam mit <see cref="T:System.IO.Packaging.PackWebRequest" /> verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.IO.Packaging.PackageStore> definiert eine Verweis Auflistung von Paketen, die in der Anwendung geöffnet und aktiv sind.  Die dem <xref:System.IO.Packaging.PackageStore> hinzugefügten Pakete werden über Ihren Schlüssel-URI-Wert aufgerufen.  Der <xref:System.IO.Packaging.PackageStore> unterstützt drei gängige Verwendungsmöglichkeiten:  
  
1.  Zugreifen auf <xref:System.IO.Packaging.PackagePart> Daten über <xref:System.IO.Packaging.PackWebRequest>.  
  
2.  Die Anwendung, die eine Instanz einer-<xref:System.IO.Packaging.Package> erhält, wenn der URI des Pakets angegeben wird.  
  
3.  Zugreifen auf Pakete, die in einem <xref:System.IO.MemoryStream>erstellt und gespeichert werden.  
  
 Um die Leistung zu verbessern und den Aufwand von wiederholten Datei Öffnungs-und Schließ Vorgängen zu minimieren, wird der <xref:System.IO.Packaging.PackageStore> zum Verwalten von Instanzen von Paketen verwendet, auf die von <xref:System.IO.Packaging.PackWebRequest> und direkt von der Anwendung zugegriffen  Beim Zugriff auf Daten in einem Paket wird zuerst die <xref:System.IO.Packaging.Package> Adresse eines angeforderten <xref:System.IO.Packaging.PackagePart> <xref:System.IO.Packaging.PackagePart.Uri%2A> geprüft, um festzustellen, ob das Paket bereits definiert und in der <xref:System.IO.Packaging.PackageStore>geöffnet ist.  Wenn das Paket im <xref:System.IO.Packaging.PackageStore>als geöffnet definiert ist, können Sie direkt auf angeforderte Teile zugreifen, ohne das Paket für jede Anforderung wiederholt öffnen und schließen zu müssen.  
  
 Wenn Ihre Anwendung ein Paket mit <xref:System.IO.Packaging.Package.Open%2A?displayProperty=nameWithType>öffnet, kann <xref:System.IO.Packaging.PackageStore.AddPackage%2A> aufgerufen werden, um das Paket dem <xref:System.IO.Packaging.PackageStore>hinzuzufügen.  <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> sollte später aufgerufen werden, um das Paket aus dem <xref:System.IO.Packaging.PackageStore> vor dem Aufrufen von <xref:System.IO.Packaging.Package.Close%2A?displayProperty=nameWithType>zu entfernen.  
  
 XPS-Pakete, die mit einem <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A>-Konstruktor geöffnet werden, werden automatisch hinzugefügt und aus dem <xref:System.IO.Packaging.PackageStore> entfernt, wenn das Dokument erstellt und verworfen wird.  (Für XPS-Pakete, die mit <xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A> Konstruktoren geöffnet werden, ist es nicht erforderlich, <xref:System.IO.Packaging.PackageStore.AddPackage%2A> oder <xref:System.IO.Packaging.PackageStore.RemovePackage%2A> separat aufzurufen.)  
  
 Die Datei-e/a-Berechtigungen eines Pakets, auf das über die <xref:System.IO.Packaging.PackageStore> zugegriffen wird, bleiben identisch mit den e/a-Berechtigungen, die für das Paket beim Öffnen festgelegt wurden.  Der <xref:System.IO.Packaging.PackageStore> stellt nur Verweise auf die Pakete bereit, die dem Speicher hinzugefügt wurden.  Es liegt an der Anwendung, jedes Paket ordnungsgemäß zu öffnen, zu aktualisieren und zu schließen.  
  
 Auf die dem <xref:System.IO.Packaging.PackageStore> hinzugefügten Pakete kann in Multithread-Umgebungen zugegriffen werden, wenn Sie in Kombination mit einem [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Parser wie <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>verwendet werden.  Wenn Sie in einer Multithread-Umgebung arbeiten, muss die Anwendung das Paket vor dem Zugriff sperren.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Packaging.PackWebRequest" />
    <altmember cref="T:System.IO.Packaging.PackWebResponse" />
  </Docs>
  <Members>
    <Member MemberName="AddPackage">
      <MemberSignature Language="C#" Value="public static void AddPackage (Uri uri, System.IO.Packaging.Package package);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPackage(class System.Uri uri, class System.IO.Packaging.Package package) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPackage (uri As Uri, package As Package)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPackage(Uri ^ uri, System::IO::Packaging::Package ^ package);" />
      <MemberSignature Language="F#" Value="static member AddPackage : Uri * System.IO.Packaging.Package -&gt; unit" Usage="System.IO.Packaging.PackageStore.AddPackage (uri, package)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
      </Parameters>
      <Docs>
        <param name="uri">Der Schlüssel-URI des <paramref name="package" />, der in einer <see cref="T:System.IO.Packaging.PackWebRequest" /> verglichen werden soll.</param>
        <param name="package">Das Paket, das dem Speicher hinzugefügt werden soll.</param>
        <summary>Fügt dem Speicher ein <see cref="T:System.IO.Packaging.Package" /> hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` definiert den Schlüssel-URI des Pakets, der verglichen wird, wenn Sie <xref:System.IO.Packaging.PackWebRequest>aufruft.  
  
 Wenn die `packageUri` mit dem <xref:System.IO.Packaging.PackagePart.Uri%2A> für eine <xref:System.IO.Packaging.PackagePart> in einem <xref:System.IO.Packaging.PackWebRequest>-Befehl übereinstimmt, wird das im <xref:System.IO.Packaging.PackageStore> definierte Paket verwendet, um auf den angeforderten Teil zuzugreifen.  
  
 Wenn die `packageUri` nicht mit der <xref:System.IO.Packaging.PackagePart.Uri%2A> für eine <xref:System.IO.Packaging.PackagePart> in einem <xref:System.IO.Packaging.PackWebRequest>-Befehl identisch ist, wird das Paket mit dem angegebenen URI geöffnet, um auf den angeforderten Teil zuzugreifen.  
  
 **Sicherheitshinweis** Diese Methode erfordert <xref:System.Security.Permissions.EnvironmentPermission> für alle benutzerdefinierten <xref:System.IO.Packaging.Package> Typen (nicht<xref:System.IO.Packaging.ZipPackage>).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.IO.Packaging.PackageStore.AddPackage%2A>-Methode gezeigt.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewdecrypt)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewDecrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewdecrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="package" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> ist ein ungültiger Paket-URI.</exception>
        <exception cref="T:System.InvalidOperationException">Ein Paket mit dem angegebenen <paramref name="packageUri" /> ist bereits im Speicher vorhanden.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.Package GetPackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.Package GetPackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackage (uri As Uri) As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::Package ^ GetPackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member GetPackage : Uri -&gt; System.IO.Packaging.Package" Usage="System.IO.Packaging.PackageStore.GetPackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Der URI (Uniform Resource Identifier) des zurückzugebenden Pakets.</param>
        <summary>Gibt das <see cref="T:System.IO.Packaging.Package" /> mit einem angegebenen URI aus dem Speicher zurück.</summary>
        <returns>Das Paket mit einem angegebenen <paramref name="packageUri" /> oder <see langword="null" />, wenn kein Paket mit dem angegebenen <paramref name="packageUri" /> im Speicher vorhanden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` wird mit den im <xref:System.IO.Packaging.PackageStore.AddPackage%2A>-Methoden aufrufenen URIs abgeglichen.  
  
 **Sicherheitshinweis** Diese Methode erfordert <xref:System.Security.Permissions.EnvironmentPermission> für alle benutzerdefinierten <xref:System.IO.Packaging.Package> Typen (nicht<xref:System.IO.Packaging.ZipPackage>).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.IO.Packaging.PackageStore.GetPackage%2A>-Methode gezeigt.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewopendoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewOpenDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewopendoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> ist ein ungültiger Paket-URI.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackage">
      <MemberSignature Language="C#" Value="public static void RemovePackage (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePackage(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePackage (uri As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePackage(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member RemovePackage : Uri -&gt; unit" Usage="System.IO.Packaging.PackageStore.RemovePackage uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">Der URI (Uniform Resource Identifier) des zu entfernenden Pakets.</param>
        <summary>Entfernt das <see cref="T:System.IO.Packaging.Package" /> mit einem angegebenen URI aus dem Speicher.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` wird mit den im <xref:System.IO.Packaging.PackageStore.AddPackage%2A>-Methoden aufrufenen URIs abgeglichen.  
  
 **Sicherheitshinweis** Diese Methode erfordert <xref:System.Security.Permissions.EnvironmentPermission> für alle benutzerdefinierten <xref:System.IO.Packaging.Package> Typen (nicht<xref:System.IO.Packaging.ZipPackage>).  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.IO.Packaging.PackageStore.RemovePackage%2A>-Methode gezeigt.  
  
 [!code-csharp[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackageViewer/CSharp/Window1.xaml.cs#rmpkgviewclosedoc)]
 [!code-vb[RightsManagedPackageViewer#RmPkgViewCloseDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackageViewer/visualbasic/window1.xaml.vb#rmpkgviewclosedoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> ist ein ungültiger Paket-URI.</exception>
        <altmember cref="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,System.IO.Packaging.Package)" />
        <altmember cref="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>
