<Type Name="PackUriHelper" FullName="System.IO.Packaging.PackUriHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="619fbaea6d0ffe2f326bbcdc60defad4f48888a9" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83979516" /></Metadata><TypeSignature Language="C#" Value="public static class PackUriHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PackUriHelper extends System.Object" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1;dotnet-plat-ext-5.0;net-5.0;netcore-1.0;netcore-1.1;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackUriHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class PackUriHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackUriHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type PackUriHelper = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed PackUriHelper extends System.Object" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
    <AssemblyVersion>4.0.5.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.IO.Packaging" ToVersion="4.0.4.0" FrameworkAlternate="dotnet-plat-ext-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="5.0.0.0" To="System.IO.Packaging" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.IO.Packaging" ToVersion="4.0.4.0" FrameworkAlternate="netcore-3.0" />
    <TypeForwarding From="WindowsBase" FromVersion="4.0.0.0" To="System.IO.Packaging" ToVersion="4.0.5.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Hilfsmethoden zum Erstellen und Analysieren von Paket-URI-Objekten bereit.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ComparePackUri">
      <MemberSignature Language="C#" Value="public static int ComparePackUri (Uri firstPackUri, Uri secondPackUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePackUri(class System.Uri firstPackUri, class System.Uri secondPackUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePackUri (firstPackUri As Uri, secondPackUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePackUri(Uri ^ firstPackUri, Uri ^ secondPackUri);" />
      <MemberSignature Language="F#" Value="static member ComparePackUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePackUri (firstPackUri, secondPackUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPackUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="secondPackUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="firstPackUri">Der erste Paket-URI.</param>
        <param name="secondPackUri">Der zweite Paket-URI.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob zwei Paket-URIs gleichwertig sind.</summary>
        <returns>Eine ganze Zahl mit Vorzeichen, die die Beziehung zwischen <paramref name="firstPackUri" /> und <paramref name="secondPackUri" /> angibt.  
  
 <list type="table"><listheader><term> Wert 
 </term><description> Bedeutung 
 </description></listheader><item><term> Kleiner als 0 
 </term><description><paramref name="firstPackUri" /> ist kleiner als <paramref name="secondPackUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPackUri" /> entspricht <paramref name="secondPackUri" />.  
  
 </description></item><item><term> Größer als 0 
 </term><description><paramref name="firstPackUri" /> ist größer als <paramref name="secondPackUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn sowohl `firstPackUri` als auch `secondPackUri` `null`sind, gibt <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> 0 zurück. Beim Vergleichen von Paket-URIs ist ein NULL-URI immer kleiner als ein URI, der nicht NULL ist.    In Fällen, in denen `firstPackUri` und `secondPackUri` beide absolute Pack-URIs sind, führt <xref:System.IO.Packaging.PackUriHelper.ComparePackUri%2A> den Vergleich durch.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPackUri" /> oder <paramref name="secondPackUri" /> ist kein absoluter URI.  
  
- oder - 
Entweder <paramref name="firstPackUri" /> oder <paramref name="secondPackUri" /> beginnt nicht mit einem „pack://“-Schema.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="ComparePartUri">
      <MemberSignature Language="C#" Value="public static int ComparePartUri (Uri firstPartUri, Uri secondPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ComparePartUri(class System.Uri firstPartUri, class System.Uri secondPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ComparePartUri (firstPartUri As Uri, secondPartUri As Uri) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ComparePartUri(Uri ^ firstPartUri, Uri ^ secondPartUri);" />
      <MemberSignature Language="F#" Value="static member ComparePartUri : Uri * Uri -&gt; int" Usage="System.IO.Packaging.PackUriHelper.ComparePartUri (firstPartUri, secondPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstPartUri" Type="System.Uri" />
        <Parameter Name="secondPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="firstPartUri">Der URI des ersten <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <param name="secondPartUri">Der URI des zweiten <see cref="T:System.IO.Packaging.PackagePart" />.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob zwei Paketteil-URIs äquivalent sind.</summary>
        <returns>Ein Wert, der die Beziehung zwischen <paramref name="firstPartUri" /> und <paramref name="secondPartUri" /> angibt.  
  
 <list type="table"><listheader><term> Wert 
 </term><description> Bedeutung 
 </description></listheader><item><term> Kleiner als 0 
 </term><description><paramref name="firstPartUri" /> ist kleiner als <paramref name="secondPartUri" />.  
  
 </description></item><item><term> 0 
 </term><description><paramref name="firstPartUri" /> entspricht <paramref name="secondPartUri" />.  
  
 </description></item><item><term> Größer als 0 
 </term><description><paramref name="firstPartUri" /> ist größer als <paramref name="secondPartUri" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn sowohl `firstPartUri` als auch `secondPartUri` `null`sind, gibt <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> 0 zurück. Beim Vergleich von <xref:System.IO.Packaging.PackagePart> URIs ist ein NULL-URI immer kleiner als ein URI, der nicht NULL ist. In Fällen, in denen `firstPartUri` und `secondPartUri` beide relative <xref:System.IO.Packaging.PackagePart> URIs sind, führt <xref:System.IO.Packaging.PackUriHelper.ComparePartUri%2A> den Vergleich durch.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="firstPartUri" /> oder <paramref name="secondPartUri" /> ist keine gültige Syntax eines Teil-URIs.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePackUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt einen neuen Paket-URI.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden Beispiel Fälle für die <xref:System.IO.Packaging.PackUriHelper.Create%2A>-Methode veranschaulicht.  
  
|`packageUri`|`partUri`|`fragment`|Zurückgegebener Paket-URI|  
|------------------|---------------|----------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|**null**|Pack://http:,, www. proseware. com, myPackage. pkg/a/a. XML|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page5.xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|`http://www.proseware.com/packages.aspx?pkg04`|/page1.xaml|#intro|Pack://http:,, www. proseware. com, Packages. aspx %3 f pkg04/"Page1. XAML#Intro|  
|`http://www.proseware.com/mypackage.pkg`|**null**|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|`ftp://ftp.proseware.com/packages/mypackage1.abc`|/a/mydoc.xaml|**null**|Pack://FTP:,, FTP. proseware. com, Packages, mypackage1. ABC/a/MyDoc. XAML|  
|`file:///d:/packages/mypackage2.pkg`|/a/bar.xaml|#xref|Pack://file:,,, d:, Packages, mypackage2. pkg/a/Bar. XAML # XREF|  
  
 Das Verfassen eines Paket-URIs ist ein mehrstufiger Prozess.  Beispielsweise besteht ein Schritt beim bilden eines Paket-URIs darin, den Schrägstrich (/) der `packageUri` durch Kommas (,) zu ersetzen.  
  
 Weitere Informationen zur Zeichen folgen Konvertierung und zum Formatieren von Paket-URIs finden Sie in Anhang A. 4 "Beispiele für Zeichen folgen Konvertierung" und Anhang B. 3 "Verfassen eines Paket-URIs" in der Spezifikation "Open Packaging Conventions", die unter [Spezifikationen und Lizenz Downloads](https://go.microsoft.com/fwlink/?LinkID=71255)zum Download zur Verfügung steht.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create packageUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">Der URI des <see cref="T:System.IO.Packaging.Package" />, auf das verwiesen wird.</param>
        <summary>Erstellt einen neuen Paket-URI, der auf ein Paket verweist.</summary>
        <returns>Der Paket-URI für das <see cref="T:System.IO.Packaging.Package" />, auf das durch den angegebenen <paramref name="packageUri" /> verwiesen wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` darf nicht als `null` oder leer angegeben werden.  
  
 In der folgenden Tabelle werden Beispiel Fälle für <xref:System.IO.Packaging.PackUriHelper.Create%2A>veranschaulicht.  
  
|`packageUri`|Zurückgegebener Paket-URI|  
|------------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|pack://ftp:,,ftp.proseware.com,packages,mypackage1.abc|  
|file:///d:/packages/mypackage2.pkg|Pack://file:,,, d:, Packages, mypackage2. pkg|  
  
 Das Verfassen eines Paket-URIs ist ein mehrstufiger Prozess.  Beispielsweise besteht ein Schritt beim bilden eines Paket-URIs darin, den Schrägstrich (/) der `packageUri` durch Kommas (,) zu ersetzen.  
  
 Weitere Informationen zur Zeichen folgen Konvertierung und zum Formatieren von Paket-URIs finden Sie in Anhang A. 4 "Beispiele für Zeichen folgen Konvertierung" und Anhang B. 3 "Verfassen eines Paket-URIs" in der Spezifikation "Open Packaging Conventions", die unter [Spezifikationen und Lizenz Downloads](https://go.microsoft.com/fwlink/?LinkID=71255)zum Download zur Verfügung steht.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.IO.Packaging.PackUriHelper.Create%2A>-Methode verwendet wird, um einen Paket-URI zu definieren, der auf ein Paket verweist.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> ist kein absoluter URI.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">Der URI des <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">Der URI des <see cref="T:System.IO.Packaging.PackagePart" /> im Paket.</param>
        <summary>Erstellt anhand eines <see cref="T:System.IO.Packaging.Package" />-URIs und des URIs eines Paketteils einen Paket-URI.</summary>
        <returns>Der Paket-URI des angegebenen <see cref="T:System.IO.Packaging.PackagePart" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` darf nicht als NULL oder leer angegeben werden.  
  
 Wenn `partUri` `null`ist, verweist der zurückgegebene Paket-URI auf das Paket.  
  
 In der folgenden Tabelle werden Beispiel Fälle für die <xref:System.IO.Packaging.PackUriHelper.Create%2A>-Methode veranschaulicht.  
  
|`packageUri`|`partUri`|Zurückgegebener Paket-URI|  
|------------------|---------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|Pack://http:,, www. proseware. com, myPackage. pkg/a/a. XML|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  
|`http://www.proseware.com/mypackage.pkg`|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|ftp://ftp.proseware.com/packages/mypackage1.abc|/a/mydoc.xaml|Pack://FTP:,, FTP. proseware. com, Packages, mypackage1. ABC/a/MyDoc. XAML|  
|file:///d:/packages/mypackage2.pkg|/a/bar.xaml|Pack://file:,,, d:, Packages, mypackage2. pkg/a/Bar. XAML|  
  
 Das Verfassen eines Paket-URIs ist ein mehrstufiger Prozess.  Beispielsweise besteht ein Schritt beim bilden eines Paket-URIs darin, den Schrägstrich (/) der `packageUri` durch Kommas (,) zu ersetzen.  
  
 Weitere Informationen zur Zeichen folgen Konvertierung und zum Formatieren von Paket-URIs finden Sie in Anhang A. 4 "Beispiele für Zeichen folgen Konvertierung" und Anhang B. 3 "Verfassen eines Paket-URIs" in der Spezifikation "Open Packaging Conventions", die unter [Spezifikationen und Lizenz Downloads](https://go.microsoft.com/fwlink/?LinkID=71255)zum Download zur Verfügung steht.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29>-Methode verwendet wird, um einen Paket-URI zu definieren, der auf ein Paket verweist.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> ist kein absoluter URI.  
  
- oder - 
 <paramref name="partUri" /> ist keine gültige Syntax eines Teil-URI.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Uri Create (Uri packageUri, Uri partUri, string fragment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri Create(class System.Uri packageUri, class System.Uri partUri, string fragment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (packageUri As Uri, partUri As Uri, fragment As String) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ Create(Uri ^ packageUri, Uri ^ partUri, System::String ^ fragment);" />
      <MemberSignature Language="F#" Value="static member Create : Uri * Uri * string -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.Create (packageUri, partUri, fragment)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="partUri" Type="System.Uri" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
        <Parameter Name="fragment" Type="System.String" Index="2" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packageUri">Der URI des <see cref="T:System.IO.Packaging.Package" />.</param>
        <param name="partUri">Der URI des <see cref="T:System.IO.Packaging.PackagePart" /> im Paket.</param>
        <param name="fragment">Ein "#"-Verweis, der ein Element innerhalb des Paketteils identifiziert.</param>
        <summary>Erstellt anhand eines <see cref="T:System.IO.Packaging.Package" />-URIs, des URIs eines Paketteils und eines anzuhängenden „#“-Fragments einen Paket-URI.</summary>
        <returns>Der Paket-URI, der das angegebene Paket, Paketteil und Fragment angibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `packageUri` darf nicht als `null` oder leer angegeben werden.  
  
 Wenn `partUri` `null`ist, verweist der zurückgegebene Paket-URI auf das Paket.  
  
 `fragment` darf keine leere Zeichenfolge sein, kann jedoch als `null`angegeben werden.  Wenn Sie nicht als `null`angegeben wird, muss die `fragment` Zeichenfolge mit dem Zeichen ' # ' beginnen.  Weitere Informationen zur Syntax von `fragment` verweisen finden Sie im Abschnitt 3,5 "Fragment" von [RFC 3986](https://www.ietf.org/rfc/rfc3986.txt).  
  
 In der folgenden Tabelle werden Beispiel Fälle für die <xref:System.IO.Packaging.PackUriHelper.Create%2A>-Methode veranschaulicht.  
  
|`packageUri`|`partUri`|`fragment`|Zurückgegebener Paket-URI|  
|------------------|---------------|----------------|-----------------------|  
|`http://www.proseware.com/mypackage.pkg`|/page1.xaml|#intro|pack://http:,,www.proseware.com,mypackage.pkg/page1.xaml#intro|  
|`http://www.proseware.com/mypackage.pkg`|/page2.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/page2.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page4.xaml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/a/page4.xaml|  
|`http://www.proseware.com/mypackage.pkg`|/%41/%61.xml|**null**|Pack://http:,, www. proseware. com, myPackage. pkg/a/a. XML|  
|`http://www.proseware.com/mypackage.pkg`|/%25XY.xml|**null**|pack://http:,,www.proseware.com,mypackage.pkg/%25XY.xml|  
|`http://www.proseware.com/mypackage.pkg`|/a/page5.xaml|#summary|pack://http:,,www.proseware.com,mypackage.pkg/a/page5.xaml#summary|  
|`http://www.proseware.com/packages.aspx?pkg04`|/page1.xaml|#intro|Pack://http:,, www. proseware. com, Packages. aspx %3 f pkg04/"Page1. XAML#Intro|  
|`http://www.proseware.com/mypackage.pkg`|**null**|**null**|pack://http:,,www.proseware.com,mypackage.pkg|  
|`ftp://ftp.proseware.com/packages/mypackage1.abc`|/a/mydoc.xaml|**null**|Pack://FTP:,, FTP. proseware. com, Packages, mypackage1. ABC/a/MyDoc. XAML|  
|`file:///d:/packages/mypackage2.pkg`|/a/bar.xaml|#xref|Pack://file:,,, d:, Packages, mypackage2. pkg/a/Bar. XAML # XREF|  
  
 Das Verfassen eines Paket-URIs ist ein mehrstufiger Prozess.  Beispielsweise besteht ein Schritt beim bilden eines Paket-URIs darin, den Schrägstrich (/) der `packageUri` durch Kommas (,) zu ersetzen.  
  
 Weitere Informationen zur Zeichen folgen Konvertierung und zum Formatieren von Paket-URIs finden Sie in Anhang A. 4 "Beispiele für Zeichen folgen Konvertierung" und Anhang B. 3 "Verfassen eines Paket-URIs" in der Spezifikation "Open Packaging Conventions", die unter [Spezifikationen und Lizenz Downloads](https://go.microsoft.com/fwlink/?LinkID=71255)zum Download zur Verfügung steht.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.IO.Packaging.PackUriHelper.Create%28System.Uri%29>-Methode verwendet wird, um einen Paket-URI zu definieren, der auf ein Paket verweist.  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubgetfixdoc)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubGetFixDoc](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubgetfixdoc)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="packageUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="packageUri" /> ist kein absoluter URI.  
  
- oder - 
 <paramref name="partUri" /> ist keine gültige Syntax eines Teil-URI.  
  
- oder - 
 <paramref name="fragment" /> ist leer oder beginnt mit "#".</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
      </Docs>
    </Member>
    <Member MemberName="CreatePartUri">
      <MemberSignature Language="C#" Value="public static Uri CreatePartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri CreatePartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreatePartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ CreatePartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member CreatePartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.CreatePartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">Der URI des <see cref="T:System.IO.Packaging.PackagePart" /> im Paket.</param>
        <summary>Erstellt einen formatierten <see cref="T:System.IO.Packaging.PackagePart" />-URI.</summary>
        <returns>Ein formatierter <see cref="T:System.IO.Packaging.PackagePart" />-URI.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Auf den URI eines <xref:System.IO.Packaging.PackagePart> wird immer vom <xref:System.IO.Packaging.Package> Stamm verwiesen.  
  
 Der zurückgegebene <xref:System.IO.Packaging.PackagePart>-URI ist ein absoluter Pfad, der immer mit "/" beginnt und der Syntax entspricht, die in der [Open Packaging Conventions-Spezifikation](https://go.microsoft.com/fwlink/?LinkID=71255)definiert ist.  
  
 In der folgenden Tabelle werden Beispiel Fälle für <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>veranschaulicht.  
  
|`partUri`|Rückgabe Teil-URI|  
|---------------|-----------------------|  
|picture1. jpg|/picture1.jpg|  
|/picture2.jpg|/picture2.jpg|  
|a/MyDoc. XAML|/a/mydoc.xaml|  
|/b/bar.xaml|/b/bar.xaml|  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.IO.Packaging.PackUriHelper.CreatePartUri%2A>-Methode verwendet wird, um relative URIs für <xref:System.IO.Packaging.PackagePart> Elemente zu definieren.  
  
 [!code-csharp[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageWrite/CSharp/PackageWrite.cs#packagewritecreateparturi)]
 [!code-vb[PackageWrite#PackageWriteCreatePartUri](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageWrite/visualbasic/packagewrite.vb#packagewritecreateparturi)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160055">Beispiel für das Schreiben eines Pakets</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> ist kein absoluter <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNormalizedPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetNormalizedPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetNormalizedPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNormalizedPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetNormalizedPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetNormalizedPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetNormalizedPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">Der zu normalisierende <see cref="T:System.IO.Packaging.PackagePart" />-URI.</param>
        <summary>Gibt die normalisierte Form eines angegebenen <see cref="T:System.IO.Packaging.PackagePart" />-URI zurück.</summary>
        <returns>Die normalisierte Form des angegebenen <paramref name="partUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri%2A> normalisiert `partUri`, indem die Groß-/Kleinschreibung in Großbuchstaben (<xref:System.String.ToUpperInvariant%2A?displayProperty=nameWithType>) und das Ergebnis zurückgegeben wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> ist <see langword="null" /></exception>
        <altmember cref="M:System.String.Normalize" />
        <altmember cref="T:System.Text.NormalizationForm" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> besitzt keine gültige <see cref="T:System.Uri" />-Syntax.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPackageUri">
      <MemberSignature Language="C#" Value="public static Uri GetPackageUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPackageUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPackageUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPackageUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPackageUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPackageUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packUri">Der Paket-URI, von dem der <see cref="T:System.IO.Packaging.Package" />-URI zurückgegeben werden soll.</param>
        <summary>Gibt den inneren URI zurück, der auf das gesamte Paket eines angegebenen Paket-URIs verweist.</summary>
        <returns>Der <see cref="T:System.IO.Packaging.Package" />-URI vom angegebenen <paramref name="packUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden Beispiel Fälle für <xref:System.IO.Packaging.PackUriHelper.GetPackageUri%2A>veranschaulicht.  
  
|`packUri`|Zurückgegebener Paket-URI|  
|---------------|--------------------------|  
|Pack://http:,, www. proseware. com, myPackage. XYZ/a/MyDoc. XAML|`http://www.proseware.com/mypackage.xyz`|  
|Pack://http:,, www. proseware. com, Packages. aspx %3 f myPackage/a/Bar. XAML|`http://www.proseware.com/packages.aspx?mypackage`|  
|pack://http:,,www.proseware.com,mypackage.pkg|`http://www.proseware.com/mypackage.pkg`|  
|Pack://FTP:,, FTP. proseware. com, Packages, mypackage1. ABC/a/picture. jpg|`ftp://ftp.proseware.com/packages/mypackage1.abc`|  
|Pack://file:,,, d:, Packages, mypackage2. pkg/a/Bar. XAML|`file:///d:/packages/mypackage2.pkg`|  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.PackUriHelper.Create" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
        <exception cref="T:System.ArgumentNullException"><paramref name="packUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="packUri" /> ist kein absoluter <see cref="T:System.Uri" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetPartUri (Uri packUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetPartUri(class System.Uri packUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPartUri (packUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetPartUri(Uri ^ packUri);" />
      <MemberSignature Language="F#" Value="static member GetPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetPartUri packUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packUri" Type="System.Uri" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-3.0;netcore-3.0;dotnet-plat-ext-3.1;netcore-3.1;dotnet-plat-ext-5.0;net-5.0" />
      </Parameters>
      <Docs>
        <param name="packUri">Der Paket-URI, aus dem der <see cref="T:System.IO.Packaging.PackagePart" />-URI zurückgegeben werden soll.</param>
        <summary>Gibt den URI eines <see cref="T:System.IO.Packaging.PackagePart" /> in einem angegebenen Paket-URI zurück.</summary>
        <returns>Der URI von <see cref="T:System.IO.Packaging.PackagePart" /> im angegebenen <paramref name="packUri" />, oder <see langword="null" />, wenn <paramref name="packUri" /> nicht auf einen <see cref="T:System.IO.Packaging.PackagePart" />, sondern auf ein Paket verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der zurückgegebene <xref:System.IO.Packaging.PackagePart>-URI ist relativ zum Paket Stamm und stellt einen absoluten Pfad dar, der immer mit "/" beginnt und der in der [Open Packaging Conventions-Spezifikation](https://go.microsoft.com/fwlink/?LinkID=71255)definierten Syntax entspricht.  
  
 In der folgenden Tabelle werden Beispiel Fälle für <xref:System.IO.Packaging.PackUriHelper.GetPartUri%2A>veranschaulicht.  
  
|`packUri`|Rückgabe Teil-URI|  
|---------------|-----------------------|  
|Pack://http:,, www. proseware. com, myPackage. XYZ/a/MyDoc. XAML|/a/mydoc.xaml|  
|Pack://http:,, www. proseware. com, Packages. aspx %3 f myPackage/a/Bar. XAML|/a/bar.xaml|  
|pack://http:,,www.proseware.com,mypackage.pkg|null|  
|Pack://FTP:,, FTP. proseware. com, Packages, mypackage1. ABC/a/picture. jpg|/a/picture.jpg|  
|Pack://file:,,, d:, Packages, mypackage2. pkg/a/Bar. XAML|/a/bar.xaml|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
        <exception cref="T:System.ArgumentNullException">Wenn auf <paramref name="packUri" /> auf <see langword="null" /> festgelegt ist.</exception>
        <exception cref="T:System.ArgumentException">Wenn der <paramref name="packUri" /> kein absoluter <see cref="T:System.Uri" /> ist.

- oder -

<paramref name="packUri" /> weist nicht das Schema „pack://“ auf.
          
- oder - 
Der aus <paramref name="packUri" /> extrahierte partUri entspricht nicht der gültigen partUri-Syntax.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelationshipPartUri (partUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member GetRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">Der <see cref="P:System.IO.Packaging.PackagePart.Uri" /> des <see cref="T:System.IO.Packaging.PackagePart" />, um den URI für die zugeordnete <see cref="T:System.IO.Packaging.PackageRelationship" /> zurückzugeben.</param>
        <summary>Gibt den URI des Beziehungsteils zurück, das einem angegebenen <see cref="T:System.IO.Packaging.PackagePart" /> zugeordnet ist.</summary>
        <returns>Der URI des <see cref="T:System.IO.Packaging.PackageRelationship" />-Parts, das dem durch <paramref name="partUri" /> angegebenen <see cref="T:System.IO.Packaging.PackagePart" />, zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` müssen entweder den <xref:System.IO.Packaging.Package> ("/") oder einen <xref:System.IO.Packaging.PackagePart> identifizieren, der kein <xref:System.IO.Packaging.PackageRelationship> Teil ist.  
  
 Weitere Informationen zu <xref:System.IO.Packaging.PackageRelationship> Teilen finden Sie im Abschnitt 9,3 "Beziehungen" in der Spezifikation "Open Packaging Conventions", die Sie unter [Spezifikationen und Lizenz Downloads](https://go.microsoft.com/fwlink/?LinkID=71255)herunterladen können.  
  
   
  
## Examples  
 [Paket-URI in WPF](/dotnet/framework/wpf/app-development/pack-uris-in-wpf)  
  
 [Spezifikation für die Open Packaging-Konventionen](https://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException">Die <paramref name="partUri" />-Syntax ist für einen Paketpart-URI nicht gültig.  
  
- oder - 
 <paramref name="partUri" /> ist ein absoluter URI.  
  
- oder - 
 <paramref name="partUri" /> verweist auf ein Beziehungspart.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelativeUri">
      <MemberSignature Language="C#" Value="public static Uri GetRelativeUri (Uri sourcePartUri, Uri targetPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetRelativeUri(class System.Uri sourcePartUri, class System.Uri targetPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRelativeUri (sourcePartUri As Uri, targetPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetRelativeUri(Uri ^ sourcePartUri, Uri ^ targetPartUri);" />
      <MemberSignature Language="F#" Value="static member GetRelativeUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetRelativeUri (sourcePartUri, targetPartUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">Der URI des Quellparts.</param>
        <param name="targetPartUri">Der URI des Zielsegments.</param>
        <summary>Gibt den relativen URI zwischen zwei angegebenen <see cref="T:System.IO.Packaging.PackagePart" />-URIs zurück.</summary>
        <returns>Die relative URI von <paramref name="sourcePartUri" /> bis <paramref name="targetPartUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden Beispiel Fälle für <xref:System.IO.Packaging.PackUriHelper.GetRelativeUri%2A>veranschaulicht.  
  
|`sourcePartUri`|`targetPartUri`|Zurückgegebener relativer URI|  
|---------------------|---------------------|---------------------------|  
|/mydoc/markup/page.xml|/mydoc/markup/picture.jpg|Bild. jpg|  
|/mydoc/markup/page.xml|/mydoc/picture.jpg|.. /picture.jpg|  
|/mydoc/markup/page.xml|/mydoc/images/picture.jpg|.. /images/picture.jpg|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> oder <paramref name="targetPartUri" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
        <exception cref="T:System.ArgumentException">Entweder der <paramref name="sourcePartUri" /> oder der <paramref name="targetPartUri" /> besitzt keine gültige <see cref="T:System.Uri" />-Syntax.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSourcePartUriFromRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static Uri GetSourcePartUriFromRelationshipPartUri (Uri relationshipPartUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri GetSourcePartUriFromRelationshipPartUri(class System.Uri relationshipPartUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSourcePartUriFromRelationshipPartUri (relationshipPartUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ GetSourcePartUriFromRelationshipPartUri(Uri ^ relationshipPartUri);" />
      <MemberSignature Language="F#" Value="static member GetSourcePartUriFromRelationshipPartUri : Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri relationshipPartUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipPartUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="relationshipPartUri">Der URI des Beziehungsparts, aus dem der <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> zurückgegeben werden soll.</param>
        <summary>Gibt den <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> aus der <see cref="T:System.IO.Packaging.PackageRelationship" /> mit einem angegebenen URI zurück.</summary>
        <returns>Der <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> des <see cref="T:System.IO.Packaging.PackagePart" /> aus der Beziehung mit dem angegebenen <paramref name="relationshipPartUri" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A>-Eigenschaft eines Beziehungs Teils muss entweder die <xref:System.IO.Packaging.PackagePart.Package%2A> ("/") oder eine <xref:System.IO.Packaging.PackagePart> identifizieren, die keine <xref:System.IO.Packaging.PackageRelationship>ist.  
  
 Wenn der Paket Teil "/files/Document.XAML" z. b. der Quell Besitzer des Beziehungs Teils "/files/_rels/Document.XAML.rels" ist, wird beim Aufrufen von <xref:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri%2A> mit dem `relationshipPartUri`-Parameter von "/files/_rels/Document.XAML.rels" der <xref:System.IO.Packaging.PackageRelationship.SourceUri%2A> von "/files/Document.XAML" zurückgegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipPartUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="relationshipPartUri" /> ist ein absoluter URI.  
  
- oder - 
 Die <paramref name="relationshipPartUri" />-Syntax ist für ein <see cref="T:System.IO.Packaging.PackagePart" /> nicht gültig.  
  
- oder - 
 <paramref name="relationshipPartUri" /> verweist auf kein Beziehungspart.  
  
- oder - 
Der <see cref="P:System.IO.Packaging.PackageRelationship.SourceUri" /> der Beziehung verweist auf ein anderes Beziehungsteil (ungültig).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
      </Docs>
    </Member>
    <Member MemberName="IsRelationshipPartUri">
      <MemberSignature Language="C#" Value="public static bool IsRelationshipPartUri (Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsRelationshipPartUri(class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationshipPartUri (partUri As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationshipPartUri(Uri ^ partUri);" />
      <MemberSignature Language="F#" Value="static member IsRelationshipPartUri : Uri -&gt; bool" Usage="System.IO.Packaging.PackUriHelper.IsRelationshipPartUri partUri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="partUri">Der URI, der auf ein <see cref="T:System.IO.Packaging.PackageRelationship" />-Part überprüft werden soll.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob ein angegebener URI der URI eines <see cref="T:System.IO.Packaging.PackageRelationship" />-Teils ist.</summary>
        <returns><see langword="true" />, wenn <paramref name="partUri" /> ein <see cref="T:System.IO.Packaging.PackageRelationship" />-Part angibt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
          
Diese Methode untersucht den Teil Inhalt nicht. Sie basiert ausschließlich auf dem Namen.

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="partUri" /> ist <see langword="null" /></exception>
        <exception cref="T:System.ArgumentException"><paramref name="partUri" /> ist ein absoluter URI.  
  
- oder - 
 <paramref name="partUri" /> weist eine ungültige <see cref="T:System.IO.Packaging.PackagePart" />-Syntax auf.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
      </Docs>
    </Member>
    <Member MemberName="ResolvePartUri">
      <MemberSignature Language="C#" Value="public static Uri ResolvePartUri (Uri sourcePartUri, Uri targetUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Uri ResolvePartUri(class System.Uri sourcePartUri, class System.Uri targetUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolvePartUri (sourcePartUri As Uri, targetUri As Uri) As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Uri ^ ResolvePartUri(Uri ^ sourcePartUri, Uri ^ targetUri);" />
      <MemberSignature Language="F#" Value="static member ResolvePartUri : Uri * Uri -&gt; Uri" Usage="System.IO.Packaging.PackUriHelper.ResolvePartUri (sourcePartUri, targetUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourcePartUri" Type="System.Uri" />
        <Parameter Name="targetUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="sourcePartUri">Der URI des Quellparts, oder "/", um den <see cref="T:System.IO.Packaging.Package" />-Stamm zu kennzeichnen.</param>
        <param name="targetUri">Der relative URI zum Zielpart.</param>
        <summary>Gibt einen Part-URI zurück, wenn ein Quellpart-URI und ein URI mit einem relativen Pfad zu einem Zielpart angegeben wurden.</summary>
        <returns>Der URI des Zielparts, der zwischen dem angegebenen <paramref name="SourcePartUri" />-Parameter und dem angegebenen <paramref name="targetUri" />-Parameter aufgelöst wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle werden Beispiel Fälle für <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>veranschaulicht.  
  
|`sourcePartUri`|`targetUri`|Zurückgegebener URI|  
|---------------------|-----------------|------------------|  
|/mydoc/markup/page.xml|Bild. jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|images/picture.jpg|/mydoc/markup/images/picture.jpg|  
|/mydoc/markup/page.xml|./picture.jpg|/mydoc/markup/picture.jpg|  
|/mydoc/markup/page.xml|.. /picture.jpg|/mydoc/picture.jpg|  
|/mydoc/markup/page.xml|.. /images/picture.jpg|/mydoc/images/picture.jpg|  
|/|images/picture.jpg|/images/picture.jpg|  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Verwendung der <xref:System.IO.Packaging.PackUriHelper.ResolvePartUri%2A>-Methode gezeigt.  Das komplette Beispiel finden Sie unter [Lesen eines Paket](https://go.microsoft.com/fwlink/?LinkID=160034)Beispiels.  
  
 [!code-csharp[PackageRead#PackageReadUsing](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageRead/CSharp/PackageRead.cs#packagereadusing)]
 [!code-vb[PackageRead#PackageReadUsing](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageRead/visualbasic/packageread.vb#packagereadusing)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourcePartUri" /> oder <paramref name="targetUri" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="sourcePartUri" /> ist kein gültiger Part-URI.  
  
- oder - 
 <paramref name="targetUri" /> ist kein gültiger relativer URI.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=71255">Spezifikation für die Open Packaging-Konventionen</related>
      </Docs>
    </Member>
    <Member MemberName="UriSchemePack">
      <MemberSignature Language="C#" Value="public static readonly string UriSchemePack;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string UriSchemePack" />
      <MemberSignature Language="DocId" Value="F:System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriSchemePack As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ UriSchemePack;" />
      <MemberSignature Language="F#" Value=" staticval mutable UriSchemePack : string" Usage="System.IO.Packaging.PackUriHelper.UriSchemePack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
        <AssemblyVersion>4.0.5.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Definiert den URI-Packschemanamen „pack“.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
