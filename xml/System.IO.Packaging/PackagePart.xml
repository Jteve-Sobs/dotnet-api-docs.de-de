<Type Name="PackagePart" FullName="System.IO.Packaging.PackagePart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="154c70fa5276cdccac41f7e7f56b00b2e5fd1bb9" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33682758" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PackagePart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PackagePart extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.PackagePart" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PackagePart" />
  <TypeSignature Language="C++ CLI" Value="public ref class PackagePart abstract" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Packaging</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Basisklasse für Parts bereit, die in einem <see cref="T:System.IO.Packaging.Package" /> gespeichert werden.  Diese Klasse ist abstrakt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.IO.Packaging.PackagePart> besteht aus drei grundlegenden Elementen:  
  
|Zugriff|Beschreibung |  
|------------|-----------------|  
|<xref:System.IO.Packaging.PackagePart.Uri%2A>|Die [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] des Teils.|  
|<xref:System.IO.Packaging.PackagePart.ContentType%2A>|Die [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] Typ des inhaltsdatenstroms.|  
|<xref:System.IO.Packaging.PackagePart.GetStream%2A>|Der Inhaltsdatenstream des Parts.|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [Paket-URI in WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)  
  
 [Open Packaging Conventions-Spezifikation](http://go.microsoft.com/fwlink/?LinkID=71255)  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="package">Das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts.</param>
        <param name="partUri">Der [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] des Teils, der in Beziehung zum Stamm des übergeordneten <see cref="T:System.IO.Packaging.Package" /> steht.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse mit einem angegebenen übergeordneten <see cref="P:System.IO.Packaging.PackagePart.Package" /> und einem angegebenen Part-[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` muss gültig sein <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] gebildet in Abhängigkeit von der [RFC 3986](http://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) generische Syntax* Spezifikation und die [Open Packaging Konventionen](http://go.microsoft.com/fwlink/?LinkID=71255) Spezifikation.  
  
 Verwenden Sie diesen Konstruktor, wenn der <xref:System.IO.Packaging.PackagePart.ContentType%2A> des Teils nicht sofort bekannt und wird festgelegt werden, wenn <xref:System.IO.Packaging.Package.CreatePart%2A> aufgerufen wird.  
  
 Wird standardmäßig die <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> -Eigenschaft des Teils wird initialisiert, um <xref:System.IO.Packaging.CompressionOption.NotCompressed>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> oder <paramref name="partUri" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="package">Das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts.</param>
        <param name="partUri">Der [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] des Teils, der in Beziehung zum Stamm des übergeordneten <see cref="T:System.IO.Packaging.Package" /> steht.</param>
        <param name="contentType">Der [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)]-Inhaltstyp des Partdatenstreams.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse mit einem angegebenen übergeordneten <see cref="P:System.IO.Packaging.PackagePart.Package" />, einem angegebenen Part-[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] und einem angegebenen [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)]-Inhaltstyp.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` muss gültig sein <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] gebildet in Abhängigkeit von der [RFC 3986](http://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) generische Syntax* Spezifikation und die [Open Packaging Konventionen](http://go.microsoft.com/fwlink/?LinkID=71255) Spezifikation.  
  
 Wird standardmäßig die <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> -Eigenschaft des Teils wird initialisiert, um <xref:System.IO.Packaging.CompressionOption.NotCompressed>.  
  
 `contentType` muss ein [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] Typ, der in Übereinstimmung mit den [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol - HTTP*, Abschnitt 3.7.  Die folgende Tabelle zeigt ein Beispiel für den Inhalt [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] verwendeten Typen [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Dokumente.  
  
|Beschreibung |Inhaltstyp|  
|-----------------|------------------|  
|Schriftart|Application/vnd.ms-opentype|  
|ICC-Profil|application/vnd.ms-Color.iccprofile|  
|JPEG-Bild|Image/jpeg|  
|Verborgene Schriftart|application/vnd.ms-package.obfuscated-opentype|  
|PNG-Bild|Image/png|  
|PrintTicket|application/vnd.ms-Printing.PrintTicket+XML|  
|TIFF-Bild|Image/tiff|  
|Windows Media-Bild|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> oder <paramref name="partUri" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PackagePart (System.IO.Packaging.Package package, Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IO.Packaging.Package package, class System.Uri partUri, string contentType, valuetype System.IO.Packaging.CompressionOption compressionOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PackagePart(System::IO::Packaging::Package ^ package, Uri ^ partUri, System::String ^ contentType, System::IO::Packaging::CompressionOption compressionOption);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="package" Type="System.IO.Packaging.Package" />
        <Parameter Name="partUri" Type="System.Uri" />
        <Parameter Name="contentType" Type="System.String" />
        <Parameter Name="compressionOption" Type="System.IO.Packaging.CompressionOption" />
      </Parameters>
      <Docs>
        <param name="package">Das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts.</param>
        <param name="partUri">Der [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] des Teils, der in Beziehung zum Stamm des übergeordneten <see cref="T:System.IO.Packaging.Package" /> steht.</param>
        <param name="contentType">Der [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)]-Inhaltstyp für den Datenstream des Parts.</param>
        <param name="compressionOption">Die Komprimierungsoption für den Datenstream des Parts.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IO.Packaging.PackagePart" />-Klasse mit einem angegebenen übergeordneten <see cref="P:System.IO.Packaging.PackagePart.Package" />, einem angegebenen Part-[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)], einem angegebenen [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)]-Inhaltstyp und einer angegebenen <see cref="T:System.IO.Packaging.CompressionOption" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `partUri` muss gültig sein <xref:System.IO.Packaging.PackagePart> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] gebildet in Abhängigkeit von der [RFC 3986](http://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) generische Syntax* Spezifikation und die [Open Packaging Konventionen](http://go.microsoft.com/fwlink/?LinkID=71255) Spezifikation.  
  
 `contentType` muss ein [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] Typ, der in Übereinstimmung mit den [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol - HTTP*, Abschnitt 3.7.  Die folgende Tabelle zeigt ein Beispiel für den Inhalt [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] verwendeten Typen [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Dokumente.  
  
|Beschreibung |Inhaltstyp|  
|-----------------|------------------|  
|Schriftart|Application/vnd.ms-opentype|  
|ICC-Profil|application/vnd.ms-Color.iccprofile|  
|JPEG-Bild|Image/jpeg|  
|Verborgene Schriftart|application/vnd.ms-package.obfuscated-opentype|  
|PNG-Bild|Image/png|  
|PrintTicket|application/vnd.ms-Printing.PrintTicket+XML|  
|TIFF-Bild|Image/tiff|  
|Windows Media-Bild|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="package" /> oder <paramref name="partUri" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="partUri" /> ist kein gültiger <see cref="T:System.IO.Packaging.PackagePart" /> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="compressionOption" />-Wert ist nicht zulässig.</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="CompressionOption">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.CompressionOption CompressionOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Packaging.CompressionOption CompressionOption" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.CompressionOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompressionOption As CompressionOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::CompressionOption CompressionOption { System::IO::Packaging::CompressionOption get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.CompressionOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Komprimierungsoption des Partinhaltsstreams ab.</summary>
        <value>Die Komprimierungsoption des Partinhaltsstreams.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> ist eine schreibgeschützte Eigenschaft, auf die zugegriffen werden kann nur, wenn das übergeordnete Element <xref:System.IO.Packaging.Package> geöffnet ist.  
  
 Die <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> Eigenschaft wird automatisch festgelegt, indem die <xref:System.IO.Packaging.PackagePart.%23ctor%2A> Konstruktor.  Nachdem sie vom Konstruktor festgelegt wurde die <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> kann nicht geändert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)]-Typ des Inhaltsstreams ab.</summary>
        <value>Der [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)]-Typ des Inhaltsdatenstreams für das Part.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.ContentType%2A> ist eine schreibgeschützte Eigenschaft, auf die zugegriffen werden kann nur, wenn das übergeordnete Element <xref:System.IO.Packaging.Package> geöffnet ist.  
  
 Die <xref:System.IO.Packaging.PackagePart.ContentType%2A> Eigenschaft wird automatisch festgelegt, indem die <xref:System.IO.Packaging.PackagePart.%23ctor%2A> Konstruktor.  Nachdem sie vom Konstruktor festgelegt wurde die <xref:System.IO.Packaging.PackagePart.ContentType%2A> kann nicht geändert werden.  
  
 Die <xref:System.IO.Packaging.PackagePart.ContentType%2A> Eigenschaft ist ein [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] Typ, der in Übereinstimmung mit den [RFC 2616](https://www.w3.org/Protocols/rfc2616/rfc2616.html) *Hypertext Transfer Protocol - HTTP*, Abschnitt 3.7.  Die folgende Tabelle zeigt ein Beispiel für den Inhalt [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] verwendeten Typen [!INCLUDE[TLA#tla_xps](~/includes/tlasharptla-xps-md.md)] Dokumente.  
  
|Beschreibung |Inhaltstyp|  
|-----------------|------------------|  
|Schriftart|Application/vnd.ms-opentype|  
|ICC-Profil|application/vnd.ms-Color.iccprofile|  
|JPEG-Bild|Image/jpeg|  
|Verborgene Schriftart|application/vnd.ms-package.obfuscated-opentype|  
|PNG-Bild|Image/png|  
|PrintTicket|application/vnd.ms-Printing.PrintTicket+XML|  
|TIFF-Bild|Image/tiff|  
|Windows Media-Bild|image/vnd.ms-photo|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).  
  
 - oder -   
  
 Die von der <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />-Methode der abgeleiteten Klasse zurückgegebene Zeichenfolge ist leer.</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRelationship">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und einem angegebenen Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder einer angegebenen externen Zielressource.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Beziehung Teil-Ebene definiert eine Zuordnung zwischen diesen Teil und einen Teil des Ziels oder eine Ressource.  Eine Beziehung auf möglich zwei Arten.  
  
-   Zwischen einer Quelle <xref:System.IO.Packaging.PackagePart> an ein Ziel <xref:System.IO.Packaging.PackagePart> innerhalb der <xref:System.IO.Packaging.Package>.  
  
-   Zwischen einer Quelle <xref:System.IO.Packaging.PackagePart> mit einer Zielressource außerhalb des Pakets.  
  
 In einem Teil-Beziehung gilt den Teil mit der Datenquelle der "Besitzer" der Beziehung.  Wenn der Teil mit der Datenquelle gelöscht wird, werden alle Beziehungen, die der Bereich ebenfalls gelöscht.  Der Prozess zum Erstellen oder Löschen der Beziehung wird nicht physisch der Zielteil bzw. die Ressource in irgendeiner Weise verändert.  
  
 Die <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> Methode ändert nicht physisch, der Teil mit der Datenquelle, oder das Zielteil oder Ressource in keiner Weise.  
  
 Das Ziel einer Beziehung kann nicht auf eine andere Beziehung sein.  
  
 Weitere Informationen zu paketbeziehungen finden Sie in Abschnitt 1.3 der *(Open Packaging Conventions, OPC)* Spezifikation zum Download verfügbar unter [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Weitere Informationen zum XPS-Dokumente finden Sie unter der *Open XML Paper Specification (XPS)* zum Download verfügbar unter [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">Der [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] des Zielteils.</param>
        <param name="targetMode">Einer der Enumerationswerte. Beispielsweise <see cref="F:System.IO.Packaging.TargetMode.Internal" />, wenn sich das Zielpart innerhalb des <see cref="T:System.IO.Packaging.Package" /> befindet, oder <see cref="F:System.IO.Packaging.TargetMode.External" />, wenn das Ziel eine Ressource außerhalb des <see cref="T:System.IO.Packaging.Package" /> ist.</param>
        <param name="relationshipType">Die Rolle der Beziehung.</param>
        <summary>Erstellt eine Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und einem angegebenen Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder einer angegebenen externen Zielressource.</summary>
        <returns>Die Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und dem Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder der externen Zielressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Beziehung Teil-Ebene definiert eine Zuordnung zwischen diesen Teil und einen Teil des Ziels oder eine Ressource.  Eine Beziehung auf möglich zwei Arten.  
  
-   Zwischen einer Quelle <xref:System.IO.Packaging.PackagePart> an ein Ziel <xref:System.IO.Packaging.PackagePart> innerhalb der <xref:System.IO.Packaging.Package>.  
  
-   Zwischen einer Quelle <xref:System.IO.Packaging.PackagePart> mit einer Zielressource außerhalb des Pakets.  
  
 In einem Teil-Beziehung gilt den Teil mit der Datenquelle der "Besitzer" der Beziehung.  Wenn der Teil mit der Datenquelle gelöscht wird, werden alle Beziehungen, die der Bereich ebenfalls gelöscht.  Der Prozess zum Erstellen oder Löschen der Beziehung wird nicht physisch der Zielteil bzw. die Ressource in irgendeiner Weise verändert.  
  
 Die <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> Methode ändert nicht physisch, der Teil mit der Datenquelle, oder das Zielteil oder Ressource in keiner Weise.  
  
 Das Ziel einer Beziehung kann nicht auf eine andere Beziehung sein.  
  
 Wenn `targetMode` angegeben ist, als <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` muss ein relativer URI, die im Einklang gebildet wird die [RFC 3986](http://tools.ietf.org/html/rfc3986) *generische Syntax Uniform Resource Identifier (URI)* Spezifikation.  Der interne relative URI kann entweder ein absoluter Pfad, der mit einem Schrägstrich ("/"), z. B. beginnt "/ page1.xaml" oder "/ /images/picture4.jpg", oder ein relativer Pfad wie ".. / imagespicture1.jpg ", die für das Stammverzeichnis des Pakets ("/ ") als Basis-URI auflöst.  
  
 Wenn `targetMode` angegeben ist, als <xref:System.IO.Packaging.TargetMode.External>, `targetUri` kann entweder ein absoluter oder relativer URI angegeben wird, in Abhängigkeit von der [RFC 3986](http://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) generische Syntax*Spezifikation.  "http://www.microsoft.com/page2.xml" ist ein Beispiel für ein absoluter URI, der auf eine externe Zielressource "page2.xml" verweist.  "images/picture1.jpg" ist ein Beispiel für einen relativen URI, der auch eine externe Ressource "1.jpg" jedoch aufgelöst wird anhand des URI für das Paket selbst verweist.  
  
 `relationshipType` muss eine [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] , wird gebildet, gemäß der [RFC 3986](http://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) generische Syntax* Spezifikation.  Verschiedene Pakettypen können andere Beziehungstypen Teil-Ebene definieren.  Die folgende Tabelle zeigt die Webpart-Ebene `relationshipType` URIs für Dokumente, die entsprechen definiert die *Open XML Paper Specification (XPS)*.  
  
|XPS-Dokument Teil Anwendungsebene Beziehung|Beziehungstyp URI|  
|-------------------------------------------|---------------------------|  
|Digitale Signaturdefinitionen|[http://schemas.microsoft.com/xps/2005/06/signature-definitions](http://schemas.microsoft.com/xps/2005/06/signature-definitions)|  
|DiscardControl|http://schemas.microsoft.com/xps/2005/06/discard-control|  
|DocumentStructure|http://schemas.microsoft.com/xps/2005/06/documentstructure|  
|PrintTicket|http://schemas.microsoft.com/xps/2005/06/printticket|  
|Erforderliche Ressource|http://schemas.microsoft.com/xps/2005/06/required-resource|  
|Eingeschränkte Schriftart|http://schemas.microsoft.com/xps/2005/06/restricted-font|  
|StartPart|http://schemas.microsoft.com/xps/2005/06/fixedrepresentation|  
|StoryFragments|http://schemas.microsoft.com/xps/2005/06/storyfragments|  
  
 Weitere Informationen zu paketbeziehungen finden Sie in Abschnitt 1.3 der *(Open Packaging Conventions, OPC)* Spezifikation zum Download verfügbar unter [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Weitere Informationen zum XPS-Dokumente finden Sie unter der *Open XML Paper Specification (XPS)* zum Download verfügbar unter [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="targetMode" />-Parameter ist kein gültiger <see cref="T:System.IO.Packaging.TargetMode" />-Enumerationswert.</exception>
        <exception cref="T:System.ArgumentException">Das mit dem <paramref name="targetUri" /> angegebene Part ist eine Beziehung (das Ziel einer Beziehung darf keine andere Beziehung sein).  
  
 - oder -   
  
 <paramref name="targetMode" /> wird als <see cref="F:System.IO.Packaging.TargetMode.Internal" /> angegeben, <paramref name="targetUri" /> ist jedoch ein absoluter externer [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann keine neue Beziehung hinzugefügt werden).</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship CreateRelationship(class System.Uri targetUri, valuetype System.IO.Packaging.TargetMode targetMode, string relationshipType, string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ CreateRelationship(Uri ^ targetUri, System::IO::Packaging::TargetMode targetMode, System::String ^ relationshipType, System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetUri" Type="System.Uri" />
        <Parameter Name="targetMode" Type="System.IO.Packaging.TargetMode" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetUri">Der [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] des Zielteils.</param>
        <param name="targetMode">Einer der Enumerationswerte. Beispielsweise <see cref="F:System.IO.Packaging.TargetMode.Internal" />, wenn sich das Zielpart innerhalb des <see cref="T:System.IO.Packaging.Package" /> befindet, oder <see cref="F:System.IO.Packaging.TargetMode.External" />, wenn das Ziel eine Ressource außerhalb des <see cref="T:System.IO.Packaging.Package" /> ist.</param>
        <param name="relationshipType">Die Rolle der Beziehung.</param>
        <param name="id">Eine eindeutige ID für die Beziehung.</param>
        <summary>Erstellt eine Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und einem angegebenen Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder einer angegebenen externen Zielressource.</summary>
        <returns>Die Beziehung auf Partebene zwischen dem <see cref="T:System.IO.Packaging.PackagePart" /> und dem Ziel-<see cref="T:System.IO.Packaging.PackagePart" /> oder der externen Zielressource.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Beziehung Teil-Ebene definiert eine Zuordnung zwischen diesen Teil und einen Teil des Ziels oder eine Ressource.  Eine Beziehung auf möglich zwei Arten.  
  
-   Zwischen einer Quelle <xref:System.IO.Packaging.PackagePart> an ein Ziel <xref:System.IO.Packaging.PackagePart> innerhalb der <xref:System.IO.Packaging.Package>.  
  
-   Zwischen einer Quelle <xref:System.IO.Packaging.PackagePart> mit einer Zielressource außerhalb des Pakets.  
  
 In einem Teil-Beziehung gilt den Teil mit der Datenquelle der "Besitzer" der Beziehung.  Wenn der Teil mit der Datenquelle gelöscht wird, werden alle Beziehungen, die der Bereich ebenfalls gelöscht.  Der Prozess zum Erstellen oder Löschen der Beziehung wird nicht physisch der Zielteil bzw. die Ressource in irgendeiner Weise verändert.  
  
 `id` Ein gültiger XML-Bezeichner muss sein.  Die `id` Typ lautet xsd: ID und muss den der *XML Schema Part 2: Datatypes* Spezifikation (finden Sie unter [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 Die <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A> Methode ändert nicht physisch, der Teil mit der Datenquelle, oder das Zielteil oder Ressource in keiner Weise.  
  
 Das Ziel einer Beziehung kann nicht auf eine andere Beziehung sein.  
  
 Wenn `targetMode` angegeben ist, als <xref:System.IO.Packaging.TargetMode.Internal>, `targetUri` muss ein relativer URI, die im Einklang gebildet wird die [RFC 3986](http://tools.ietf.org/html/rfc3986) *generische Syntax Uniform Resource Identifier (URI)* Spezifikation.  Der interne relative URI kann entweder ein absoluter Pfad, der mit einem Schrägstrich ("/"), z. B. beginnt "/ page1.xaml" oder "/ /images/picture4.jpg", oder ein relativer Pfad wie ".. / imagespicture1.jpg ", die für das Stammverzeichnis des Pakets ("/ ") als Basis-URI auflöst.  
  
 Wenn `targetMode` angegeben ist, als <xref:System.IO.Packaging.TargetMode.External>, `targetUri` kann entweder ein absoluter oder relativer URI angegeben wird, in Abhängigkeit von der [RFC 3986](http://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) generische Syntax*Spezifikation.  "http://www.microsoft.com/page2.xml" ist ein Beispiel für ein absoluter URI, der auf eine externe Zielressource "page2.xml" verweist.  "images/picture1.jpg" ist ein Beispiel für einen relativen URI, der auch eine externe Ressource "1.jpg" jedoch aufgelöst wird anhand des URI für das Paket selbst verweist.  
  
 `relationshipType` muss eine [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] , wird gebildet, gemäß der [RFC 3986](http://tools.ietf.org/html/rfc3986) *Uniform Resource Identifier (URI) generische Syntax* Spezifikation.  Verschiedene Pakettypen können andere Beziehungstypen Teil-Ebene definieren.  Die folgende Tabelle zeigt die Webpart-Ebene `relationshipType` URIs für Dokumente, die entsprechen definiert die *Open XML Paper Specification (XPS)*.  
  
|XPS-Dokument Teil Anwendungsebene Beziehung|Beziehungstyp URI|  
|-------------------------------------------|---------------------------|  
|Digitale Signaturdefinitionen|http://schemas.microsoft.com/xps/2005/06/signature-definitions|  
|DiscardControl|http://schemas.microsoft.com/xps/2005/06/discard-control|  
|DocumentStructure|http://schemas.microsoft.com/xps/2005/06/documentstructure|  
|PrintTicket|http://schemas.microsoft.com/xps/2005/06/printticket|  
|Erforderliche Ressource|http://schemas.microsoft.com/xps/2005/06/required-resource|  
|Eingeschränkte Schriftart|http://schemas.microsoft.com/xps/2005/06/restricted-font|  
|StartPart|http://schemas.microsoft.com/xps/2005/06/fixedrepresentation|  
|StoryFragments|http://schemas.microsoft.com/xps/2005/06/storyfragments|  
  
 Weitere Informationen zu paketbeziehungen finden Sie in Abschnitt 1.3 der *(Open Packaging Conventions, OPC)* Spezifikation zum Download verfügbar unter [ http://go.microsoft.com/fwlink/?LinkID=71255 ](http://go.microsoft.com/fwlink/?LinkID=71255).  
  
 Weitere Informationen zum XPS-Dokumente finden Sie unter der *Open XML Paper Specification (XPS)* zum Download verfügbar unter [ http://go.microsoft.com/fwlink/?LinkID=67000 ](http://go.microsoft.com/fwlink/?LinkID=67000).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="targetUri" /> oder <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="targetMode" />-Parameter ist kein gültiger <see cref="T:System.IO.Packaging.TargetMode" />-Enumerationswert.</exception>
        <exception cref="T:System.ArgumentException">Das mit dem <paramref name="targetUri" /> angegebene Part ist eine Beziehung (das Ziel einer Beziehung darf keine andere Beziehung sein).  
  
 - oder -   
  
 <paramref name="targetMode" /> wird als <see cref="F:System.IO.Packaging.TargetMode.Internal" /> angegeben, <paramref name="targetUri" /> ist jedoch ein absoluter externer [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)].</exception>
        <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (es kann keine neue Beziehung hinzugefügt werden).</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> ist kein gültiger XML-Bezeichner.  
  
 - oder -   
  
 Ein Part mit der angegebenen <paramref name="id" /> ist bereits vorhanden.</exception>
        <altmember cref="Overload:System.IO.Packaging.Package.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteRelationship">
      <MemberSignature Language="C#" Value="public void DeleteRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteRelationship (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteRelationship(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Die <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der zu löschenden Beziehung.</param>
        <summary>Löscht eine angegebene <see cref="T:System.IO.Packaging.PackageRelationship" /> auf Partebene.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` Ein gültiger XML-Bezeichner muss sein.  Die `id` Typ lautet xsd: ID und muss den der *XML Schema Part 2: Datatypes* Spezifikation (finden Sie unter [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 Wenn das angegebene `id` entspricht nicht der <xref:System.IO.Packaging.PackageRelationship.Id%2A> für alle Beziehungen, die in diesem Teil gehören, wird keine Beziehung gelöscht und keine Ausnahme ausgelöst wird.  
  
 Ausnahme beim Löschen der angegebenen Beziehung, die <xref:System.IO.Packaging.PackagePart.DeleteRelationship%2A> Methode ändert dieses Parts oder die nicht physisch.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">Das Paket ist schreibgeschützt (Beziehungen können nicht gelöscht werden).</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetContentTypeCore">
      <MemberSignature Language="C#" Value="protected virtual string GetContentTypeCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetContentTypeCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetContentTypeCore () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetContentTypeCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse den [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)]-Typ des Partinhalts zurück.</summary>
        <returns>Der [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)]-Typ des Partinhalts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> ist eine virtuelle Methode von der <xref:System.IO.Packaging.PackagePart> abstrakte Basisklasse. Implementieren Sie diese Methode nur in abgeleiteten Typen, in dem der Wert für den Inhaltstyp zum Zeitpunkt der Erstellung bereitgestellt werden kann, oder geben Sie die Berechnung des Inhalts Wert ist ein nicht trivialer oder aufwändiger Vorgang. Der Rückgabewert muss ein gültiger [!INCLUDE[TLA2#tla_mime](~/includes/tla2sharptla-mime-md.md)] Inhaltstyp.  
  
 Abgeleitete Klassen können Aufrufen <xref:System.IO.Packaging.PackagePart.GetContentTypeCore%2A> zum Initialisieren der <xref:System.IO.Packaging.PackagePart.ContentType%2A> Eigenschaft der abgeleiteten Klasse auf einen Standardwert.  Nach der <xref:System.IO.Packaging.PackagePart.ContentType%2A> Eigenschaft festgelegt wurde, kann nicht geändert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die abgeleitete Klasse stellt keine für die <see cref="M:System.IO.Packaging.PackagePart.GetContentTypeCore" />-Methode erforderliche Überschreibungsimplementierung bereit.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationship">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationship GetRelationship (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationship GetRelationship(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationship (id As String) As PackageRelationship" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationship ^ GetRelationship(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationship</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Die <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der zurückzugebenden Beziehung.</param>
        <summary>Gibt die Beziehung zurück, für die eine <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> angegeben wurde.</summary>
        <returns>Die Beziehung, die mit der angegebenen <paramref name="id" /> übereinstimmt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` Ein gültiger XML-Bezeichner muss sein.  Die `id` Typ lautet xsd: ID und muss den der *XML Schema Part 2: Datatypes* Spezifikation (finden Sie unter [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 Sie können die <xref:System.IO.Packaging.PackagePart.RelationshipExists%2A> Methode, um zu bestimmen, wenn eine Beziehung mit einer angegebenen <xref:System.IO.Packaging.PackageRelationship.Id%2A> ist im Besitz dieses Teils.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipType" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).  
  
 - oder -   
  
 Eine Beziehung mit der angegebenen <paramref name="id" /> ist nicht im Paket vorhanden.</exception>
        <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationships">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationships() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationships" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationships () As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationships();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung aller Beziehungen zurück, deren Besitzer dieses Part ist.</summary>
        <returns>Eine Auflistung aller Beziehungen, deren Besitzer das Part ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebene Auflistung ist nie `null`, aber die Auflistung kann 0 (null) Elemente enthalten, wenn das Webpart keine Beziehungen definiert.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipsByType">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType(string relationshipType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipsByType (relationshipType As String) As PackageRelationshipCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::PackageRelationshipCollection ^ GetRelationshipsByType(System::String ^ relationshipType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageRelationshipCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipType">Der <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> der Beziehungen, die gesucht und in der Auflistung zurückgegeben werden sollen.</param>
        <summary>Gibt eine Auflistung der Beziehungen zurück, die mit einem angegebenen <see cref="P:System.IO.Packaging.PackageRelationship.RelationshipType" /> übereinstimmen.</summary>
        <returns>Eine Auflistung der Beziehungen, die mit dem angegebenen <paramref name="relationshipType" /> übereinstimmen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebene Auflistung ist nie `null`, aber die Auflistung kann 0 (null) Elemente enthalten, wenn keine Beziehung mit der angegebenen Zeichenfolge `relationshipType` für den Teil definiert ist.  
  
 Alle führende oder nachfolgende Leerzeichen in der `relationshipType` Zeichenfolge werden automatisch abgeschnitten.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relationshipType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="relationshipType" /> ist eine leere Zeichenfolge.</exception>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStream">
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt den Inhaltsdatenstream des Parts zurück.</summary>
        <block subset="none" type="usage">
          <para>
            <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> Intern ruft die abgeleitete <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> Methode tatsächlich öffnen und den Datenstrom Teil zurückgeben basierend auf das physische Format in der abgeleiteten Klasse implementiert.  
  
 Wird standardmäßig die <see cref="T:System.IO.Packaging.ZipPackagePart" /> Unterklasse Implementierung der abstrakten <see cref="T:System.IO.Packaging.PackagePart" /> Klasse bereitgestellt und verwendet wird.  In der Standardvorgang <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> intern ruft <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> von der <see cref="T:System.IO.Packaging.ZipPackagePart" /> Klasse zu öffnen und den Datenstrom Teil aus einem ZIP-Datei zurückzugeben.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Inhaltsdatenstream des Parts zurück.</summary>
        <returns>Der Inhaltsdatenstream für das Part.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode öffnet des inhaltsdatenstroms mit <xref:System.IO.FileMode> von <xref:System.IO.FileMode.OpenOrCreate> und <xref:System.IO.FileAccess> Berechtigungen, die das übergeordnete Element identisch sind <xref:System.IO.Packaging.Package>.  
  
 Die Überladung <xref:System.IO.Packaging.PackagePart.GetStream%2A> Methode können Sie einen bestimmten Satz <xref:System.IO.FileMode>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <exception cref="T:System.IO.IOException">Das von der <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />-Methode der abgeleiteten Unterklasse zurückgegebene Streamobjekt ist <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream" /> Intern ruft die abgeleitete <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> Methode tatsächlich öffnen und den Datenstrom Teil zurückgeben basierend auf das physische Format in der abgeleiteten Klasse implementiert.  
  
 Wird standardmäßig die <see cref="T:System.IO.Packaging.ZipPackagePart" /> Unterklasse Implementierung der abstrakten <see cref="T:System.IO.Packaging.PackagePart" /> Klasse bereitgestellt und verwendet wird.  In der Standardvorgang <see cref="M:System.IO.Packaging.PackagePart.GetStream" /> intern ruft <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> von der <see cref="T:System.IO.Packaging.ZipPackagePart" /> Klasse zu öffnen und den Datenstrom Teil aus einem ZIP-Datei zurückzugeben.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="mode">Der E/A-Modus, in dem der Inhaltsstream geöffnet werden soll.</param>
        <summary>Gibt den in einem angegebenen E/A-<see cref="T:System.IO.FileMode" /> geöffneten Inhaltsstream zurück.</summary>
        <returns>Der Inhaltsstream des Parts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IO.FileAccess> Berechtigungen der zurückgegebenen Inhaltsstreams sind identisch mit den Berechtigungen des übergeordneten Elements <xref:System.IO.Packaging.Package>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="mode" />-Parameter ist kein gültiger <see cref="T:System.IO.FileMode" />-Enumerationswert.</exception>
        <exception cref="T:System.IO.IOException">Der <paramref name="mode" />-Parameter ist nicht mit dem Paket- und Partstream kompatibel.  
  
 - oder -   
  
 Das von der <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />-Methode der abgeleiteten Unterklasse zurückgegebene Streamobjekt ist <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> Intern ruft die abgeleitete <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> Methode tatsächlich öffnen und den Datenstrom Teil zurückgeben basierend auf das physische Format in der abgeleiteten Klasse implementiert.  
  
 Wird standardmäßig die <see cref="T:System.IO.Packaging.ZipPackagePart" /> Unterklasse Implementierung der abstrakten <see cref="T:System.IO.Packaging.PackagePart" /> Klasse bereitgestellt und verwendet wird.  In der Standardvorgang <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)" /> intern ruft <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> von der <see cref="T:System.IO.Packaging.ZipPackagePart" /> Klasse zu öffnen und den Datenstrom Teil aus einem ZIP-Datei zurückzugeben.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetStream (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetStream(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetStream(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">Der E/A-Modus, in dem der Inhaltsstream geöffnet werden soll.</param>
        <param name="access">Die Zugriffsberechtigungen zum Öffnen des Inhaltsstreams.</param>
        <summary>Gibt den mit einem angegebenen <see cref="T:System.IO.FileMode" /> und <see cref="T:System.IO.FileAccess" /> geöffneten Partinhaltsstream zurück.</summary>
        <returns>Der Inhaltsstream für das Part.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Der <paramref name="mode" />-Parameter ist kein gültiger <see cref="T:System.IO.FileMode" />-Enumerationswert.  
  
 - oder -   
  
 Der <paramref name="access" />-Parameter ist kein gültiger <see cref="T:System.IO.FileAccess" />-Enumerationswert.</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="mode" /> oder <paramref name="access" /> ist nicht mit dem Paket- und Partstream kompatibel.  
  
 - oder -   
  
 Der <paramref name="access" />-Parameter wird als <see cref="F:System.IO.FileAccess.Read" /> angegeben, der <paramref name="mode" />-Parameter erfordert jedoch Schreibzugriff.  (Für die <see cref="T:System.IO.FileMode" />-Werte <see cref="F:System.IO.FileMode.Create" />, <see cref="F:System.IO.FileMode.CreateNew" />, <see cref="F:System.IO.FileMode.Truncate" /> und <see cref="F:System.IO.FileMode.Append" /> ist <see cref="F:System.IO.FileAccess.Write" />-Zugriff oder <see cref="F:System.IO.FileAccess.ReadWrite" />-Zugriff erforderlich.)  
  
 - oder -   
  
 Das von der <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />-Methode der abgeleiteten Unterklasse zurückgegebene Streamobjekt ist <see langword="null" />.</exception>
        <block subset="none" type="usage">
          <para>
            <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> Intern ruft die abgeleitete <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> Methode tatsächlich öffnen und den Datenstrom Teil zurückgeben basierend auf das physische Format in der abgeleiteten Klasse implementiert.  
  
 Wird standardmäßig die <see cref="T:System.IO.Packaging.ZipPackagePart" /> Unterklasse Implementierung der abstrakten <see cref="T:System.IO.Packaging.PackagePart" /> Klasse bereitgestellt und verwendet wird.  In der Standardvorgang <see cref="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)" /> intern ruft <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> von der <see cref="T:System.IO.Packaging.ZipPackagePart" /> Klasse zu öffnen und den Datenstrom Teil aus einem ZIP-Datei zurückzugeben.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetStreamCore">
      <MemberSignature Language="C#" Value="protected abstract System.IO.Stream GetStreamCore (System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IO.Stream GetStreamCore(valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetStreamCore (mode As FileMode, access As FileAccess) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IO::Stream ^ GetStreamCore(System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="mode">Der E/A-Modus, in dem der Inhaltsstream geöffnet werden soll.</param>
        <param name="access">Die Zugriffsberechtigungen zum Öffnen des Inhaltsstreams.</param>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse den mit einem angegebenen <see cref="T:System.IO.FileMode" /> und <see cref="T:System.IO.FileAccess" /> geöffneten Partinhaltsstream zurück.</summary>
        <returns>Der Inhaltsdatenstream des Parts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anwendungen sollten nicht aufrufen, <xref:System.IO.Packaging.PackagePart.GetStreamCore%2A> direkt, aber stattdessen aufrufen sollte <xref:System.IO.Packaging.PackagePart.GetStream%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die abgeleitete <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> Implementierung sollten keine Annahmen über die Reihenfolge oder Operationen der <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> Methode, die ihn aufruft.</para>
        </block>
        <block subset="none" type="usage">
          <para>Die abgeleitete <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> Methode wird aufgerufen, indem die <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> Methoden zu öffnen und den Datenstrom Teil zurückzugeben basierend auf das physische Format in der abgeleiteten Klasse implementiert.  
  
 Wird standardmäßig die <see cref="T:System.IO.Packaging.ZipPackagePart" /> Unterklasse Implementierung der abstrakten <see cref="T:System.IO.Packaging.PackagePart" /> Klasse bereitgestellt und verwendet wird.  In der Standardvorgang <see cref="Overload:System.IO.Packaging.PackagePart.GetStream" /> intern ruft <see cref="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)" /> von der <see cref="T:System.IO.Packaging.ZipPackagePart" /> Klasse zu öffnen und den Datenstrom Teil aus einem ZIP-Datei zurückzugeben.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Package">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package Package { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.Package Package" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Package" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Package As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::Package ^ Package { System::IO::Packaging::Package ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das übergeordnete <see cref="T:System.IO.Packaging.Package" /> des Parts ab.</summary>
        <value>Das übergeordnete Paket des Parts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Package%2A> ist eine schreibgeschützte Eigenschaft, auf die zugegriffen werden kann nur, wenn das übergeordnete Element <xref:System.IO.Packaging.Package> geöffnet ist.  
  
 Die <xref:System.IO.Packaging.PackagePart.Package%2A> Eigenschaft wird automatisch festgelegt, indem die <xref:System.IO.Packaging.PackagePart.%23ctor%2A> Konstruktor.  Nachdem dies erfolgt durch den Konstruktor, der das übergeordnete Element ist <xref:System.IO.Packaging.PackagePart.Package%2A> für das Webpart kann nicht geändert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
      </Docs>
    </Member>
    <Member MemberName="RelationshipExists">
      <MemberSignature Language="C#" Value="public bool RelationshipExists (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RelationshipExists(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RelationshipExists (id As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RelationshipExists(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Die zu überprüfende <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> der Beziehung.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob dieses Part Besitzer einer Beziehung mit einer angegebenen <see cref="P:System.IO.Packaging.PackageRelationship.Id" /> ist.</summary>
        <returns>
          <see langword="true" />, wenn dieses Part Besitzer einer Beziehung mit der angegebenen <paramref name="id" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `id` Ein gültiger XML-Bezeichner muss sein.  Die `id` Typ lautet xsd: ID und muss den der *XML Schema Part 2: Datatypes* Spezifikation (finden Sie unter [ https://www.w3.org/TR/xmlschema-2/#ID ](https://www.w3.org/TR/xmlschema-2/#ID)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Xml.XmlException">
          <paramref name="id" /> ist kein gültiger XML-Bezeichner.</exception>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <exception cref="T:System.IO.IOException">Das Paket ist lesegeschützt (Beziehungsinformationen können nicht gelesen werden).</exception>
        <altmember cref="Overload:System.IO.Packaging.PackagePart.CreateRelationship" />
        <altmember cref="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationships" />
        <altmember cref="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.PackagePart.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Packaging</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] des Parts ab.</summary>
        <value>Die [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] des Teils relativ zum Paketstamm.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Packaging.PackagePart.Uri%2A> ist eine schreibgeschützte Eigenschaft, auf die zugegriffen werden kann nur, wenn das übergeordnete Element <xref:System.IO.Packaging.Package> geöffnet ist.  
  
 Die <xref:System.IO.Packaging.PackagePart.Uri%2A> Eigenschaft wird automatisch festgelegt, indem die <xref:System.IO.Packaging.PackagePart.%23ctor%2A> Konstruktor.  Nachdem dies erfolgt durch den Konstruktor wird der <xref:System.IO.Packaging.PackagePart.Uri%2A> des Teils kann nicht geändert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das Part wurde gelöscht.  
  
 - oder -   
  
 Das <see cref="P:System.IO.Packaging.PackagePart.Package" /> ist nicht geöffnet (<see cref="M:System.IO.Packaging.Package.Dispose(System.Boolean)" /> oder <see cref="M:System.IO.Packaging.Package.Close" /> wurde aufgerufen).</exception>
        <altmember cref="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)" />
        <altmember cref="M:System.IO.Packaging.PackUriHelper.ComparePartUri(System.Uri,System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>