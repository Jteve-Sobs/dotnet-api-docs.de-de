<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EncryptedPackageEnvelope.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d13de0354f15e43fe6e836cca6df2e57f369e866.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d13de0354f15e43fe6e836cca6df2e57f369e866</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Represents an OLE compound file that contains an encrypted package.</source>
          <target state="translated">Stellt eine OLE-Verbunddatei dar, die ein verschlüsseltes Paket enthält.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> has no public constructors.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> verfügt über keine öffentlichen Konstruktoren.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>An <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> is created by use of the static <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph> methods.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> wird erstellt, indem die Verwendung der statischen <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph>, oder <ph id="ph4">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>Closes the encrypted package and the OLE compound file that holds it.</source>
          <target state="translated">Schließt das verschlüsselte Paket und die OLE-Verbunddatei, in der es enthalten ist.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Close">
          <source>The following example shows how to use this method to close an <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie diese Methode verwendet wird, schließen ein <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen neuen <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> und gibt diesen zurück.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">Der Stream, in dem die Datei erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> on the specified stream.</source>
          <target state="translated">Erstellt im angegebenen Stream einen <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> und gibt diesen zurück.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Der neu erstellte <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">Der aktuelle Benutzer hat Lese-/Schreibzugriff auf die neue Datei.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> stellt keinen Lese-/Schreibzugriff bereit.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">Der Name der OLE-Verbunddatei.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and gives it the specified file name.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>, gibt diesen zurück und weist ihm den angegebenen Dateinamen zu.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Der neu erstellte <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">Wenn eine Datei mit dem angegebenen Namen bereits vorhanden ist, wird sie überschrieben.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">Der aktuelle Benutzer hat Lese-/Schreibzugriff auf die Datei an.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses an existing unencrypted package as the source of its content.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>, der ein vorhandenes unverschlüsseltes Paket als Quelle für seinen Inhalt verwendet, und gibt ihn zurück.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie die <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> Methode zum Instanziieren einer <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream on which to create the file.</source>
          <target state="translated">Der Stream, in dem die Datei erstellt werden soll.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">Der Stream, der das vorhandene unverschlüsselte Paket darstellt.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> (on the specified stream) that uses the specified unencrypted package as its content.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> (im angegeben Stream), der das angegebene unverschlüsseltes Paket als Inhalt verwendet, und gibt ihn zurück.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Der neu erstellte <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the new file.</source>
          <target state="translated">Der aktuelle Benutzer hat Lese-/Schreibzugriff auf die neue Datei.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie die <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> Methode zum Instanziieren einer <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> does not provide read/write access.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeStream" /&gt;</ph> stellt keinen Lese-/Schreibzugriff bereit.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The name of the OLE compound file.</source>
          <target state="translated">Der Name der OLE-Verbunddatei.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The stream representing the existing unencrypted package.</source>
          <target state="translated">Der Stream, der das vorhandene unverschlüsselte Paket darstellt.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The publish license that is embedded in the compound file.</source>
          <target state="translated">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>An object that determines what operations the current user is allowed to perform on the encrypted content.</source>
          <target state="translated">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>Creates and returns an <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that uses the specified unencrypted package as its content, and gives it the specified file name.</source>
          <target state="translated">Erstellt einen <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>, der das angegebene unverschlüsselte Paket als Inhalt verwendet, und weist ihm den angegebenen Dateinamen zu.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The newly created <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Der neu erstellte <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>If a file with the specified name already exists, it is overwritten.</source>
          <target state="translated">Wenn eine Datei mit dem angegebenen Namen bereits vorhanden ist, wird sie überschrieben.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The current user has read/write access to the file.</source>
          <target state="translated">Der aktuelle Benutzer hat Lese-/Schreibzugriff auf die Datei an.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> method to instantiate an <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie die <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A&gt;</ph> Methode zum Instanziieren einer <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
          <source><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> or <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="envelopeFileName" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="packageStream" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Gibt die von der <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Gibt alle vom <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> verwendeten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> when finished with a <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">Rufen Sie <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> Abschluss eine <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> in an unusable state.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>-Methode bewirkt, dass <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> nicht mehr verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> was occupying.</source>
          <target state="translated">Nach dem Aufruf <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph>, müssen Sie alle Verweise auf Freigeben der <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, die die <ph id="ph3">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> belegt wurde.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Implementieren einer Dispose-Methode<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>.</source>
          <target state="translated">Rufen Sie immer <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A&gt;</ph> auf, bevor Sie den letzten Verweis auf das <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> freigeben.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <ph id="ph1">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph>-Methode des <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>-Objekts aufruft.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Gibt die von <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode wird aufgerufen, der öffentlich <ph id="ph1">`Dispose()`</ph> Methode und die <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> Ruft die geschützte <ph id="ph2">`Dispose(Boolean)`</ph> Methode mit dem <ph id="ph3">`disposing`</ph> Parametersatz auf <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Ruft <ph id="ph2">`Dispose`</ph> mit <ph id="ph3">`disposing`</ph> festgelegt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> references.</source>
          <target state="translated">Wenn die <ph id="ph1">`disposing`</ph> Parameter ist "true", gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte, die von diesem <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope&gt;</ph> Verweise.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">`Dispose()`</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Zum Überschreiben <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> Achten Sie darauf, dass Sie nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Implementieren <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Implementieren einer Dispose-Methode<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Überschreiben der Finalize-Methode<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>Gets a value that specifies whether the file was opened with access to read, write, or both.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die Datei mit Lesezugriff, Schreibzugriff oder mit Lese- und Schreibzugriff geöffnet wurde.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph> value that was used to open the file.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.FileAccess" /&gt;</ph>-Wert, der zum Öffnen der Datei verwendet wurde.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush">
          <source>Flush the stream for both the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> and its package content.</source>
          <target state="translated">Leeren Sie den Stream sowohl für den <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> als auch für seinen Paketinhalt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>Gets the encrypted package inside the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>.</source>
          <target state="translated">Ruft das verschlüsselte Paket im <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> in the envelope.</source>
          <target state="translated">Das <ph id="ph1">&lt;see cref="T:System.IO.Packaging.Package" /&gt;</ph> im Envelope.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>The stream that is tested.</source>
          <target state="translated">Der Stream, der überprüft wird.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source>Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der angegebene Stream eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der angegebene Stream eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
          <source><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="stream" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The file that is tested.</source>
          <target state="translated">Die Datei, die überprüft wird.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die angegebene Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die angegebene Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source>The following example shows how to use this method to test for encryption.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie diese Methode verwendet, um für die Verschlüsselung zu testen.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
          <source><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="fileName" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.IO.Packaging.EncryptedPackageEnvelope">
          <source>Opens the encrypted package in an OLE compound file.</source>
          <target state="translated">Öffnet das verschlüsselte Paket in einer OLE-Verbunddatei.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream containing the encrypted package.</source>
          <target state="translated">Der Stream, der das verschlüsselte Paket enthält.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>Open the encrypted package in the specified stream.</source>
          <target state="translated">Öffnet das verschlüsselte Paket im angegebenen Stream.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>, der geöffnet wird.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
          <source>The stream must have an encrypted package.</source>
          <target state="translated">Der Datenstrom muss ein verschlüsseltes Paket verfügen.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">Die Datei, die das verschlüsselte Paket enthält.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>Open the encrypted package in the specified file as read only and unshared.</source>
          <target state="translated">Öffnet das verschlüsselte Paket in der angegebenen Datei als schreibgeschütztes und nicht freigegebenes Paket.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>, der geöffnet wird.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">Die Datei muss es sich um ein verschlüsseltes Paket verfügen.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
          <source>The opened file is read only and unshared.</source>
          <target state="translated">Die geöffnete Datei wird aufgehoben, und nur gelesen werden.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">Die Datei, die das verschlüsselte Paket enthält.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The type of access.</source>
          <target state="translated">Der Zugriffstyp.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>Open the encrypted package in the specified file as unshared and with the specified access.</source>
          <target state="translated">Öffnet das verschlüsselte Paket in der angegebenen Datei als nicht freigegebenes Paket mit dem angegebenen Zugriff.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>, der geöffnet wird.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">Die Datei muss es sich um ein verschlüsseltes Paket verfügen.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
          <source>The opened file is unshared.</source>
          <target state="translated">Die geöffnete Datei wird aufgehoben.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file containing the encrypted package.</source>
          <target state="translated">Die Datei, die das verschlüsselte Paket enthält.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of access.</source>
          <target state="translated">Der Zugriffstyp.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The type of sharing.</source>
          <target state="translated">Der Typ der Freigabe.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>Open the encrypted package in the specified file and gives it the specified access and sharing.</source>
          <target state="translated">Öffnet das verschlüsselte Paket in der angegebenen Datei und weist ihm den angegebenen Zugriff und die angegebene Freigabeoption zu.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> that is opened.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>, der geöffnet wird.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
          <source>The file must have an encrypted package.</source>
          <target state="translated">Die Datei muss es sich um ein verschlüsseltes Paket verfügen.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>Gets the core package properties (such as Title and Subject) of the rights managed document.</source>
          <target state="translated">Ruft die Hauptpaketeigenschaften (z. B. Titel und Betreff) des durch Rechteverwaltung geschützten Dokuments ab.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph> for the package.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.IO.Packaging.PackageProperties" /&gt;</ph> für das Paket.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</source>
          <target state="translated">Diese Kerneigenschaften werden in der standard OLE-Eigenschaftenstreams (\005SummaryInformation und \005DocumentSummaryInformation) gespeichert.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>The core properties are also stored in the package itself.</source>
          <target state="translated">Die Kerneigenschaften werden ebenfalls in das Paket selbst gespeichert.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
          <source>It is the responsibility of the application to keep the two sets of properties synchronized.</source>
          <target state="translated">Es ist die Verantwortung der Anwendung, die zwei Sätze von Eigenschaften, die synchronisiert zu halten.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>Gets the rights management information stored in the <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph>; specifically, the <ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> and the <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph>s stored in the OLE compound file that embodies the rights-management protected package</source>
          <target state="translated">Ruft die im <ph id="ph1">&lt;see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /&gt;</ph> gespeicherten Rechteverwaltungsinformationen und insbesondere die <ph id="ph2">&lt;see cref="T:System.Security.RightsManagement.PublishLicense" /&gt;</ph> und die <ph id="ph3">&lt;see cref="T:System.Security.RightsManagement.UseLicense" /&gt;</ph>s ab, die in der OLE-Verbunddatei gespeichert werden, die das durch Rechteverwaltung geschützte Paket darstellt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph> for the package.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.IO.Packaging.RightsManagementInformation" /&gt;</ph> für das Paket.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation">
          <source>The following example shows how to obtain <ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph> for an encrypted package by use the <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie erhalten <ph id="ph1">&lt;xref:System.IO.Packaging.RightsManagementInformation&gt;</ph> für ein verschlüsseltes Paket mithilfe der <ph id="ph2">&lt;xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>Gets an object that provides access to the compound file streams outside the encrypted package.</source>
          <target state="translated">Ruft ein Objekt ab, das den Zugriff auf die Verbunddateistreams außerhalb des verschlüsselten Pakets ermöglicht.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph> representing streams in the OLE compound file that are outside the encrypted package.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.IO.Packaging.StorageInfo" /&gt;</ph>, die die Streams in der OLE-Verbunddatei darstellt, die sich außerhalb des verschlüsselten Pakets befinden.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>