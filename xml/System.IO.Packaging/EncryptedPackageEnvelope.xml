<Type Name="EncryptedPackageEnvelope" FullName="System.IO.Packaging.EncryptedPackageEnvelope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f117aee1e6d286b829d34db39cf69dc5cc5e4c9d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70607752" /></Metadata><TypeSignature Language="C#" Value="public class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EncryptedPackageEnvelope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Packaging.EncryptedPackageEnvelope" />
  <TypeSignature Language="VB.NET" Value="Public Class EncryptedPackageEnvelope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedPackageEnvelope : IDisposable" />
  <TypeSignature Language="F#" Value="type EncryptedPackageEnvelope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="28b51-101">Stellt eine OLE-Verbunddatei dar, die ein verschlüsseltes Paket enthält.</span><span class="sxs-lookup"><span data-stu-id="28b51-101">Represents an OLE compound file that contains an encrypted package.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope>hat keine öffentlichen Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="28b51-102"><xref:System.IO.Packaging.EncryptedPackageEnvelope> has no public constructors.</span></span>  <span data-ttu-id="28b51-103">Eine <xref:System.IO.Packaging.EncryptedPackageEnvelope> wird mithilfe der statischen <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>Methoden, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>oder <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> erstellt.</span><span class="sxs-lookup"><span data-stu-id="28b51-103">An <xref:System.IO.Packaging.EncryptedPackageEnvelope> is created by use of the static <xref:System.IO.Packaging.EncryptedPackageEnvelope.Create%2A>, <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A>, or <xref:System.IO.Packaging.EncryptedPackageEnvelope.Open%2A> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="encryptedPackageEnvelope.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28b51-104">Schließt das verschlüsselte Paket und die OLE-Verbunddatei, in der es enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="28b51-104">Closes the encrypted package and the OLE compound file that holds it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="28b51-105">Im folgenden Beispiel wird gezeigt, wie Sie mit dieser Methode eine <xref:System.IO.Packaging.EncryptedPackageEnvelope>schließen können.</span><span class="sxs-lookup"><span data-stu-id="28b51-105">The following example shows how to use this method to close an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Open" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28b51-106">Erstellt einen neuen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> und gibt diesen zurück.</span><span class="sxs-lookup"><span data-stu-id="28b51-106">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (System.IO.Stream envelopeStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(class System.IO.Stream envelopeStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::IO::Stream ^ envelopeStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="28b51-107">Der Stream, in dem die Datei erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="28b51-107">The stream on which to create the file.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="28b51-108">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-108">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="28b51-109">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</span><span class="sxs-lookup"><span data-stu-id="28b51-109">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="28b51-110">Erstellt im angegebenen Stream einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> und gibt diesen zurück.</span><span class="sxs-lookup"><span data-stu-id="28b51-110">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> on the specified stream.</span></span></summary>
        <returns><span data-ttu-id="28b51-111">Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-111">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-112">Der aktuelle Benutzer verfügt über Lese-/Schreibzugriff auf die neue Datei.</span><span class="sxs-lookup"><span data-stu-id="28b51-112">The current user has read/write access to the new file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28b51-113"><paramref name="envelopeStream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-113"><paramref name="envelopeStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28b51-114"><paramref name="envelopeStream" /> stellt keinen Lese-/Schreibzugriff bereit.</span><span class="sxs-lookup"><span data-stu-id="28b51-114"><paramref name="envelopeStream" /> does not provide read/write access.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Create (string envelopeFileName, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Create(string envelopeFileName, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Create(System::String ^ envelopeFileName, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member Create : string * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Create (envelopeFileName, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="28b51-115">Der Name der OLE-Verbunddatei.</span><span class="sxs-lookup"><span data-stu-id="28b51-115">The name of the OLE compound file.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="28b51-116">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-116">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="28b51-117">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</span><span class="sxs-lookup"><span data-stu-id="28b51-117">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="28b51-118">Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, gibt diesen zurück und weist ihm den angegebenen Dateinamen zu.</span><span class="sxs-lookup"><span data-stu-id="28b51-118">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and gives it the specified file name.</span></span></summary>
        <returns><span data-ttu-id="28b51-119">Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-119">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-120">Wenn eine Datei mit dem angegebenen Namen bereits vorhanden ist, wird sie überschrieben.</span><span class="sxs-lookup"><span data-stu-id="28b51-120">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="28b51-121">Der aktuelle Benutzer verfügt über Lese-/Schreibzugriff auf die Datei.</span><span class="sxs-lookup"><span data-stu-id="28b51-121">The current user has read/write access to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28b51-122"><paramref name="envelopeFileName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-122"><paramref name="envelopeFileName" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateFromPackage">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28b51-123">Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der ein vorhandenes unverschlüsseltes Paket als Quelle für seinen Inhalt verwendet, und gibt ihn zurück.</span><span class="sxs-lookup"><span data-stu-id="28b51-123">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses an existing unencrypted package as the source of its content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="28b51-124">Im folgenden Beispiel wird gezeigt, wie die <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> -Methode verwendet wird, um <xref:System.IO.Packaging.EncryptedPackageEnvelope>eine zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="28b51-124">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (System.IO.Stream envelopeStream, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(class System.IO.Stream envelopeStream, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::IO::Stream ^ envelopeStream, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : System.IO.Stream * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeStream, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="28b51-125">Der Stream, in dem die Datei erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="28b51-125">The stream on which to create the file.</span></span></param>
        <param name="packageStream"><span data-ttu-id="28b51-126">Der Stream, der das vorhandene unverschlüsselte Paket darstellt.</span><span class="sxs-lookup"><span data-stu-id="28b51-126">The stream representing the existing unencrypted package.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="28b51-127">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-127">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="28b51-128">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</span><span class="sxs-lookup"><span data-stu-id="28b51-128">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="28b51-129">Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (im angegeben Stream), der das angegebene unverschlüsseltes Paket als Inhalt verwendet, und gibt ihn zurück.</span><span class="sxs-lookup"><span data-stu-id="28b51-129">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> (on the specified stream) that uses the specified unencrypted package as its content.</span></span></summary>
        <returns><span data-ttu-id="28b51-130">Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-130">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-131">Der aktuelle Benutzer verfügt über Lese-/Schreibzugriff auf die neue Datei.</span><span class="sxs-lookup"><span data-stu-id="28b51-131">The current user has read/write access to the new file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28b51-132">Im folgenden Beispiel wird gezeigt, wie die <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> -Methode verwendet wird, um <xref:System.IO.Packaging.EncryptedPackageEnvelope>eine zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="28b51-132">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28b51-133"><paramref name="envelopeStream" /> oder <paramref name="packageStream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-133"><paramref name="envelopeStream" /> or <paramref name="packageStream" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="28b51-134"><paramref name="envelopeStream" /> stellt keinen Lese-/Schreibzugriff bereit.</span><span class="sxs-lookup"><span data-stu-id="28b51-134"><paramref name="envelopeStream" /> does not provide read/write access.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromPackage">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage (string envelopeFileName, System.IO.Stream packageStream, System.Security.RightsManagement.PublishLicense publishLicense, System.Security.RightsManagement.CryptoProvider cryptoProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope CreateFromPackage(string envelopeFileName, class System.IO.Stream packageStream, class System.Security.RightsManagement.PublishLicense publishLicense, class System.Security.RightsManagement.CryptoProvider cryptoProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ CreateFromPackage(System::String ^ envelopeFileName, System::IO::Stream ^ packageStream, System::Security::RightsManagement::PublishLicense ^ publishLicense, System::Security::RightsManagement::CryptoProvider ^ cryptoProvider);" />
      <MemberSignature Language="F#" Value="static member CreateFromPackage : string * System.IO.Stream * System.Security.RightsManagement.PublishLicense * System.Security.RightsManagement.CryptoProvider -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage (envelopeFileName, packageStream, publishLicense, cryptoProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="packageStream" Type="System.IO.Stream" />
        <Parameter Name="publishLicense" Type="System.Security.RightsManagement.PublishLicense" />
        <Parameter Name="cryptoProvider" Type="System.Security.RightsManagement.CryptoProvider" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="28b51-135">Der Name der OLE-Verbunddatei.</span><span class="sxs-lookup"><span data-stu-id="28b51-135">The name of the OLE compound file.</span></span></param>
        <param name="packageStream"><span data-ttu-id="28b51-136">Der Stream, der das vorhandene unverschlüsselte Paket darstellt.</span><span class="sxs-lookup"><span data-stu-id="28b51-136">The stream representing the existing unencrypted package.</span></span></param>
        <param name="publishLicense"><span data-ttu-id="28b51-137">Die Veröffentlichungslizenz, die in die Verbunddatei eingebettet wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-137">The publish license that is embedded in the compound file.</span></span></param>
        <param name="cryptoProvider"><span data-ttu-id="28b51-138">Ein Objekt, das bestimmt, welche Operationen der aktuelle Benutzer für den verschlüsselten Inhalt ausführen darf.</span><span class="sxs-lookup"><span data-stu-id="28b51-138">An object that determines what operations the current user is allowed to perform on the encrypted content.</span></span></param>
        <summary><span data-ttu-id="28b51-139">Erstellt einen <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der das angegebene unverschlüsselte Paket als Inhalt verwendet, und weist ihm den angegebenen Dateinamen zu.</span><span class="sxs-lookup"><span data-stu-id="28b51-139">Creates and returns an <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that uses the specified unencrypted package as its content, and gives it the specified file name.</span></span></summary>
        <returns><span data-ttu-id="28b51-140">Der neu erstellte <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-140">The newly created <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-141">Wenn eine Datei mit dem angegebenen Namen bereits vorhanden ist, wird sie überschrieben.</span><span class="sxs-lookup"><span data-stu-id="28b51-141">If a file with the specified name already exists, it is overwritten.</span></span>  
  
 <span data-ttu-id="28b51-142">Der aktuelle Benutzer verfügt über Lese-/Schreibzugriff auf die Datei.</span><span class="sxs-lookup"><span data-stu-id="28b51-142">The current user has read/write access to the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28b51-143">Im folgenden Beispiel wird gezeigt, wie die <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> -Methode verwendet wird, um <xref:System.IO.Packaging.EncryptedPackageEnvelope>eine zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="28b51-143">The following example shows how to use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage%2A> method to instantiate an <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28b51-144"><paramref name="envelopeFileName" /> oder <paramref name="packageStream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-144"><paramref name="envelopeFileName" /> or <paramref name="packageStream" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="Overload:System.IO.Packaging.EncryptedPackageEnvelope.Create" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28b51-145">Gibt die von der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="28b51-145">Releases the resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="encryptedPackageEnvelope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28b51-146">Gibt alle vom <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="28b51-146">Releases all resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-147">Wird <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> aufgerufen, wenn mit <xref:System.IO.Packaging.EncryptedPackageEnvelope>einem fertiggestellt wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-147">Call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> when finished with a <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="28b51-148">Die <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>-Methode bewirkt, dass <xref:System.IO.Packaging.EncryptedPackageEnvelope> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="28b51-148">The <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> method leaves the <xref:System.IO.Packaging.EncryptedPackageEnvelope> in an unusable state.</span></span> <span data-ttu-id="28b51-149">Nach dem <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>Aufrufen von müssen Sie alle Verweise auf den <xref:System.IO.Packaging.EncryptedPackageEnvelope> freigeben, damit der Garbage Collector den Speicher freigeben kann <xref:System.IO.Packaging.EncryptedPackageEnvelope> , den der belegt hat.</span><span class="sxs-lookup"><span data-stu-id="28b51-149">After calling <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A>, you must release all references to the <xref:System.IO.Packaging.EncryptedPackageEnvelope> so the garbage collector can reclaim the memory that the <xref:System.IO.Packaging.EncryptedPackageEnvelope> was occupying.</span></span> <span data-ttu-id="28b51-150">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="28b51-150">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="28b51-151">Rufen Sie immer <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.IO.Packaging.EncryptedPackageEnvelope> freigeben.</span><span class="sxs-lookup"><span data-stu-id="28b51-151">Always call <xref:System.IO.Packaging.EncryptedPackageEnvelope.Dispose%2A> before you release your last reference to the <xref:System.IO.Packaging.EncryptedPackageEnvelope>.</span></span> <span data-ttu-id="28b51-152">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.IO.Packaging.EncryptedPackageEnvelope>-Methode des <xref:System.Object.Finalize%2A>-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="28b51-152">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.Packaging.EncryptedPackageEnvelope> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="encryptedPackageEnvelope.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="28b51-153"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="28b51-153"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="28b51-154">Gibt die von <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="28b51-154">Releases the unmanaged resources used by the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-155">Diese Methode wird von der öffentlichen `Dispose()` -Methode und der <xref:System.Object.Finalize%2A> -Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="28b51-155">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="28b51-156">`Dispose()`Ruft die geschützte `Dispose(Boolean)` Methode auf, `disposing` wobei der- `true`Parameter auf festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="28b51-156">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="28b51-157"><xref:System.Object.Finalize%2A>Ruft `Dispose` auf `disposing` , wobei `false`auf gesetzt ist.</span><span class="sxs-lookup"><span data-stu-id="28b51-157"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="28b51-158">Wenn der `disposing` -Parameter auf true festgelegt ist, gibt diese Methode alle Ressourcen frei, die <xref:System.IO.Packaging.EncryptedPackageEnvelope> von den verwalteten Objekten, auf die dieser verweist,</span><span class="sxs-lookup"><span data-stu-id="28b51-158">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.IO.Packaging.EncryptedPackageEnvelope> references.</span></span> <span data-ttu-id="28b51-159">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-159">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="28b51-160">
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="28b51-160">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="28b51-161">Wenn Sie überschreiben, sollten Sie darauf achten, nicht auf Objekte zu verweisen, die zuvor in <see langword="Dispose" />einem früheren-Aufrufpunkt verworfen wurden. <see langword="Dispose(Boolean)" /></span><span class="sxs-lookup"><span data-stu-id="28b51-161">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="28b51-162">Weitere Informationen zum Implementieren <see langword="Dispose(Boolean)" />von finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="28b51-162">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="28b51-163">Weitere Informationen zu und <see langword="Dispose" /> <see cref="M:System.Object.Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="28b51-163">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="FileOpenAccess">
      <MemberSignature Language="C#" Value="public System.IO.FileAccess FileOpenAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.FileAccess FileOpenAccess" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileOpenAccess As FileAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::FileAccess FileOpenAccess { System::IO::FileAccess get(); };" />
      <MemberSignature Language="F#" Value="member this.FileOpenAccess : System.IO.FileAccess" Usage="System.IO.Packaging.EncryptedPackageEnvelope.FileOpenAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileAccess</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28b51-164">Ruft einen Wert ab, der angibt, ob die Datei mit Lesezugriff, Schreibzugriff oder mit Lese- und Schreibzugriff geöffnet wurde.</span><span class="sxs-lookup"><span data-stu-id="28b51-164">Gets a value that specifies whether the file was opened with access to read, write, or both.</span></span></summary>
        <value><span data-ttu-id="28b51-165">Der <see cref="T:System.IO.FileAccess" />-Wert, der zum Öffnen der Datei verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="28b51-165">The <see cref="T:System.IO.FileAccess" /> value that was used to open the file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flush();" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="encryptedPackageEnvelope.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28b51-166">Leeren Sie den Stream sowohl für den <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> als auch für seinen Paketinhalt.</span><span class="sxs-lookup"><span data-stu-id="28b51-166">Flush the stream for both the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> and its package content.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackage">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.Package GetPackage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Packaging.Package GetPackage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPackage () As Package" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Packaging::Package ^ GetPackage();" />
      <MemberSignature Language="F#" Value="member this.GetPackage : unit -&gt; System.IO.Packaging.Package" Usage="encryptedPackageEnvelope.GetPackage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.Package</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28b51-167">Ruft das verschlüsselte Paket im <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> ab.</span><span class="sxs-lookup"><span data-stu-id="28b51-167">Gets the encrypted package inside the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />.</span></span></summary>
        <returns><span data-ttu-id="28b51-168">Das <see cref="T:System.IO.Packaging.Package" /> im Envelope.</span><span class="sxs-lookup"><span data-stu-id="28b51-168">The <see cref="T:System.IO.Packaging.Package" /> in the envelope.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsEncryptedPackageEnvelope">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28b51-169">Ruft einen Wert ab, der angibt, ob die Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</span><span class="sxs-lookup"><span data-stu-id="28b51-169">Gets a value specifying whether the file is an OLE compound file with an encrypted package stream</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : System.IO.Stream -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="28b51-170">Der Stream, der überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-170">The stream that is tested.</span></span></param>
        <summary><span data-ttu-id="28b51-171">Ruft einen Wert ab, der angibt, ob der angegebene Stream eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</span><span class="sxs-lookup"><span data-stu-id="28b51-171">Gets a value specifying whether the specified stream is an OLE compound file with an encrypted package stream.</span></span></summary>
        <returns><span data-ttu-id="28b51-172"><see langword="true" />, wenn der angegebene Stream eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-172"><see langword="true" /> if the specified stream is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28b51-173"><paramref name="stream" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-173"><paramref name="stream" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsEncryptedPackageEnvelope">
      <MemberSignature Language="C#" Value="public static bool IsEncryptedPackageEnvelope (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsEncryptedPackageEnvelope(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEncryptedPackageEnvelope (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEncryptedPackageEnvelope(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="static member IsEncryptedPackageEnvelope : string -&gt; bool" Usage="System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="28b51-174">Die Datei, die überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-174">The file that is tested.</span></span></param>
        <summary><span data-ttu-id="28b51-175">Ruft einen Wert ab, der angibt, ob die angegebene Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist.</span><span class="sxs-lookup"><span data-stu-id="28b51-175">Gets a value specifying whether the specified file is an OLE compound file with an encrypted package stream.</span></span></summary>
        <returns><span data-ttu-id="28b51-176"><see langword="true" />, wenn die angegebene Datei eine OLE-Verbunddatei mit einem verschlüsselten Paketstream ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-176"><see langword="true" /> if the specified file is an OLE compound file with an encrypted package stream; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="28b51-177">Im folgenden Beispiel wird gezeigt, wie diese Methode verwendet wird, um die Verschlüsselung zu testen.</span><span class="sxs-lookup"><span data-stu-id="28b51-177">The following example shows how to use this method to test for encryption.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28b51-178"><paramref name="fileName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28b51-178"><paramref name="fileName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28b51-179">Öffnet das verschlüsselte Paket in einer OLE-Verbunddatei.</span><span class="sxs-lookup"><span data-stu-id="28b51-179">Opens the encrypted package in an OLE compound file.</span></span></summary>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (System.IO.Stream envelopeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(class System.IO.Stream envelopeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeStream As Stream) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::IO::Stream ^ envelopeStream);" />
      <MemberSignature Language="F#" Value="static member Open : System.IO.Stream -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="envelopeStream"><span data-ttu-id="28b51-180">Der Stream, der das verschlüsselte Paket enthält.</span><span class="sxs-lookup"><span data-stu-id="28b51-180">The stream containing the encrypted package.</span></span></param>
        <summary><span data-ttu-id="28b51-181">Öffnet das verschlüsselte Paket im angegebenen Stream.</span><span class="sxs-lookup"><span data-stu-id="28b51-181">Open the encrypted package in the specified stream.</span></span></summary>
        <returns><span data-ttu-id="28b51-182">Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-182">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-183">Der Stream muss über ein verschlüsseltes Paket verfügen.</span><span class="sxs-lookup"><span data-stu-id="28b51-183">The stream must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName);" />
      <MemberSignature Language="F#" Value="static member Open : string -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open envelopeFileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="28b51-184">Die Datei, die das verschlüsselte Paket enthält.</span><span class="sxs-lookup"><span data-stu-id="28b51-184">The file containing the encrypted package.</span></span></param>
        <summary><span data-ttu-id="28b51-185">Öffnet das verschlüsselte Paket in der angegebenen Datei als schreibgeschütztes und nicht freigegebenes Paket.</span><span class="sxs-lookup"><span data-stu-id="28b51-185">Open the encrypted package in the specified file as read only and unshared.</span></span></summary>
        <returns><span data-ttu-id="28b51-186">Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-186">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-187">Die Datei muss über ein verschlüsseltes Paket verfügen.</span><span class="sxs-lookup"><span data-stu-id="28b51-187">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="28b51-188">Die geöffnete Datei ist schreibgeschützt und kann nicht freigegeben werden.</span><span class="sxs-lookup"><span data-stu-id="28b51-188">The opened file is read only and unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="28b51-189">Die Datei, die das verschlüsselte Paket enthält.</span><span class="sxs-lookup"><span data-stu-id="28b51-189">The file containing the encrypted package.</span></span></param>
        <param name="access"><span data-ttu-id="28b51-190">Der Zugriffstyp.</span><span class="sxs-lookup"><span data-stu-id="28b51-190">The type of access.</span></span></param>
        <summary><span data-ttu-id="28b51-191">Öffnet das verschlüsselte Paket in der angegebenen Datei als nicht freigegebenes Paket mit dem angegebenen Zugriff.</span><span class="sxs-lookup"><span data-stu-id="28b51-191">Open the encrypted package in the specified file as unshared and with the specified access.</span></span></summary>
        <returns><span data-ttu-id="28b51-192">Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-192">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-193">Die Datei muss über ein verschlüsseltes Paket verfügen.</span><span class="sxs-lookup"><span data-stu-id="28b51-193">The file must have an encrypted package.</span></span>  
  
 <span data-ttu-id="28b51-194">Die Freigabe der geöffneten Datei wird aufgehoben.</span><span class="sxs-lookup"><span data-stu-id="28b51-194">The opened file is unshared.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.IO.Packaging.EncryptedPackageEnvelope Open (string envelopeFileName, System.IO.FileAccess access, System.IO.FileShare sharing);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Packaging.EncryptedPackageEnvelope Open(string envelopeFileName, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare sharing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (envelopeFileName As String, access As FileAccess, sharing As FileShare) As EncryptedPackageEnvelope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::Packaging::EncryptedPackageEnvelope ^ Open(System::String ^ envelopeFileName, System::IO::FileAccess access, System::IO::FileShare sharing);" />
      <MemberSignature Language="F#" Value="static member Open : string * System.IO.FileAccess * System.IO.FileShare -&gt; System.IO.Packaging.EncryptedPackageEnvelope" Usage="System.IO.Packaging.EncryptedPackageEnvelope.Open (envelopeFileName, access, sharing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.EncryptedPackageEnvelope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="envelopeFileName" Type="System.String" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="sharing" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="envelopeFileName"><span data-ttu-id="28b51-195">Die Datei, die das verschlüsselte Paket enthält.</span><span class="sxs-lookup"><span data-stu-id="28b51-195">The file containing the encrypted package.</span></span></param>
        <param name="access"><span data-ttu-id="28b51-196">Der Zugriffstyp.</span><span class="sxs-lookup"><span data-stu-id="28b51-196">The type of access.</span></span></param>
        <param name="sharing"><span data-ttu-id="28b51-197">Der Typ der Freigabe.</span><span class="sxs-lookup"><span data-stu-id="28b51-197">The type of sharing.</span></span></param>
        <summary><span data-ttu-id="28b51-198">Öffnet das verschlüsselte Paket in der angegebenen Datei und weist ihm den angegebenen Zugriff und die angegebene Freigabeoption zu.</span><span class="sxs-lookup"><span data-stu-id="28b51-198">Open the encrypted package in the specified file and gives it the specified access and sharing.</span></span></summary>
        <returns><span data-ttu-id="28b51-199">Der <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />, der geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="28b51-199">The <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> that is opened.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-200">Die Datei muss über ein verschlüsseltes Paket verfügen.</span><span class="sxs-lookup"><span data-stu-id="28b51-200">The file must have an encrypted package.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.Packaging.EncryptedPackageEnvelope.Close" />
      </Docs>
    </Member>
    <Member MemberName="PackageProperties">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.PackageProperties PackageProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.PackageProperties PackageProperties" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PackageProperties As PackageProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::PackageProperties ^ PackageProperties { System::IO::Packaging::PackageProperties ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PackageProperties : System.IO.Packaging.PackageProperties" Usage="System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.PackageProperties</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28b51-201">Ruft die Hauptpaketeigenschaften (z. B. Titel und Betreff) des durch Rechteverwaltung geschützten Dokuments ab.</span><span class="sxs-lookup"><span data-stu-id="28b51-201">Gets the core package properties (such as Title and Subject) of the rights managed document.</span></span></summary>
        <value><span data-ttu-id="28b51-202">Die <see cref="T:System.IO.Packaging.PackageProperties" /> für das Paket.</span><span class="sxs-lookup"><span data-stu-id="28b51-202">The <see cref="T:System.IO.Packaging.PackageProperties" /> for the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28b51-203">Diese Kerneigenschaften werden in den standardmäßigen OLE-Eigenschaftenstreams (\005summaryinformation und \005documentsummaryinformation) gespeichert.</span><span class="sxs-lookup"><span data-stu-id="28b51-203">These core properties are stored in the standard OLE property streams (\005SummaryInformation and \005DocumentSummaryInformation).</span></span> <span data-ttu-id="28b51-204">Die Kerneigenschaften werden auch im Paket selbst gespeichert.</span><span class="sxs-lookup"><span data-stu-id="28b51-204">The core properties are also stored in the package itself.</span></span> <span data-ttu-id="28b51-205">Die Anwendung ist dafür verantwortlich, die beiden Gruppen von Eigenschaften zu synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="28b51-205">It is the responsibility of the application to keep the two sets of properties synchronized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightsManagementInformation">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.RightsManagementInformation RightsManagementInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.RightsManagementInformation RightsManagementInformation" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightsManagementInformation As RightsManagementInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::RightsManagementInformation ^ RightsManagementInformation { System::IO::Packaging::RightsManagementInformation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RightsManagementInformation : System.IO.Packaging.RightsManagementInformation" Usage="System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.RightsManagementInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28b51-206">Ruft die im <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" /> gespeicherten Rechteverwaltungsinformationen und insbesondere die <see cref="T:System.Security.RightsManagement.PublishLicense" /> und die <see cref="T:System.Security.RightsManagement.UseLicense" />s ab, die in der OLE-Verbunddatei gespeichert werden, die das durch Rechteverwaltung geschützte Paket darstellt.</span><span class="sxs-lookup"><span data-stu-id="28b51-206">Gets the rights management information stored in the <see cref="T:System.IO.Packaging.EncryptedPackageEnvelope" />; specifically, the <see cref="T:System.Security.RightsManagement.PublishLicense" /> and the <see cref="T:System.Security.RightsManagement.UseLicense" />s stored in the OLE compound file that embodies the rights-management protected package</span></span></summary>
        <value><span data-ttu-id="28b51-207">Die <see cref="T:System.IO.Packaging.RightsManagementInformation" /> für das Paket.</span><span class="sxs-lookup"><span data-stu-id="28b51-207">The <see cref="T:System.IO.Packaging.RightsManagementInformation" /> for the package.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="28b51-208">Im folgenden Beispiel wird gezeigt, wie <xref:System.IO.Packaging.RightsManagementInformation> Sie für ein verschlüsseltes Paket abrufen <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> , indem Sie die-Eigenschaft verwenden.</span><span class="sxs-lookup"><span data-stu-id="28b51-208">The following example shows how to obtain <xref:System.IO.Packaging.RightsManagementInformation> for an encrypted package by use the <xref:System.IO.Packaging.EncryptedPackageEnvelope.RightsManagementInformation%2A> property.</span></span>  
  
 [!code-csharp[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/csharp/VS_Snippets_Wpf/RightsManagedPackagePublish/CSharp/Window1.xaml.cs#rmpkgpubencrypt)]
 [!code-vb[RightsManagedPackagePublish#RmPkgPubEncrypt](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RightsManagedPackagePublish/visualbasic/window1.xaml.vb#rmpkgpubencrypt)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageInfo">
      <MemberSignature Language="C#" Value="public System.IO.Packaging.StorageInfo StorageInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Packaging.StorageInfo StorageInfo" />
      <MemberSignature Language="DocId" Value="P:System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StorageInfo As StorageInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Packaging::StorageInfo ^ StorageInfo { System::IO::Packaging::StorageInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StorageInfo : System.IO.Packaging.StorageInfo" Usage="System.IO.Packaging.EncryptedPackageEnvelope.StorageInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Packaging.StorageInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="28b51-209">Ruft ein Objekt ab, das den Zugriff auf die Verbunddateistreams außerhalb des verschlüsselten Pakets ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="28b51-209">Gets an object that provides access to the compound file streams outside the encrypted package.</span></span></summary>
        <value><span data-ttu-id="28b51-210">Eine <see cref="T:System.IO.Packaging.StorageInfo" />, die die Streams in der OLE-Verbunddatei darstellt, die sich außerhalb des verschlüsselten Pakets befinden.</span><span class="sxs-lookup"><span data-stu-id="28b51-210">A <see cref="T:System.IO.Packaging.StorageInfo" /> representing streams in the OLE compound file that are outside the encrypted package.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
