<Type Name="SqlProfileProvider" FullName="System.Web.Profile.SqlProfileProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="931375cebd0a9cc3d514a437f63bf4a14b12f265" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36598059" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlProfileProvider : System.Web.Profile.ProfileProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlProfileProvider extends System.Web.Profile.ProfileProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.SqlProfileProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlProfileProvider&#xA;Inherits ProfileProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlProfileProvider : System::Web::Profile::ProfileProvider" />
  <TypeSignature Language="F#" Value="type SqlProfileProvider = class&#xA;    inherit ProfileProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Profile.ProfileProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of profile information for an ASP.NET application in a SQL Server database.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das ASP.NET-Profil wird zum Speichern und Abrufen von benutzereinstellungen in einer Datenquelle, z. B. eine Datenbank verwendet. Das Benutzerprofil erfolgt mithilfe der <xref:System.Web.HttpContext.Profile%2A> Eigenschaft des aktuellen <xref:System.Web.HttpContext>. Profil und die Eigenschaftswerte werden mit einem Profilanbieter verwaltet.  
  
 Die <xref:System.Web.Profile.SqlProfileProvider> Klasse wird von ASP.NET verwendet, zum Speichern und Abrufen von Einstellungen für Profil für eine ASP.NET-Anwendung, die SQL Server-Datenbank verwendet wird. Verwenden einer <xref:System.Web.Profile.SqlProfileProvider>, Sie müssen zuerst SQL Server-Datenbank verwendet werden, indem Sie erstellen die <xref:System.Web.Profile.SqlProfileProvider>. Zum Erstellen der Datenbank verwendet werden, indem Sie die <xref:System.Web.Profile.SqlProfileProvider>, führen Sie das Tool aspnet_regsql.exe, die im ist die [*Laufwerk*:] \WINDOWS\Microsoft.NET\Framework\\ `2.0versionNumber` Ordner, und geben Sie die **-p ** Option. Der folgende Befehl wird veranschaulicht, wie Sie die ausführbare Datei aspnet_regsql.exe verwenden können:  
  
```  
aspnet_regsql.exe -A p  
```  
  
 Im obigen Beispiel gibt keinen Namen für die Datenbank, die erstellt wird, damit der Standardname verwendet wird. Der Standarddatenbankname ist Aspnetdb.  
  
 Die Konfiguration des Computers enthält eine standardmäßige <xref:System.Web.Profile.SqlProfileProvider> -Instanz AspNetSqlProvider, die mit dem SQL Server auf dem lokalen Computer verbindet. Sie können dieser Instanz des Anbieters verwenden oder geben Sie eine eigene in der Datei "Web.config" für Ihre ASP.NET-Anwendung.  
  
> [!NOTE]
>  Wenn der Anbieter mit einer Verbindungszeichenfolge, die die integrierte Sicherheit verwendet konfiguriert ist, muss das Prozesskonto der ASP.NET-Anwendung Rechte zum Verbinden mit SQL Server-Datenbank besitzen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, die Datei "Web.config" für eine ASP.NET-Anwendung für die Verwendung konfiguriert eine <xref:System.Web.Profile.SqlProfileProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear/>  
        <add name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="SampleApplication"  
          enablePasswordRetrieval="true"  
          enablePasswordReset="true"  
          passwordFormat="Encrypted"  
          requiresQuestionAndAnswer="true" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="SampleApplication"  
          description="SqlProfileProvider for SampleApplication" />  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <add name="CityAndState" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlProfileProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlProfileProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates an instance of the <see cref="T:System.Web.Profile.SqlProfileProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET ruft die <xref:System.Web.Profile.SqlProfileProvider.%23ctor%2A> Konstruktor zum Erstellen einer Instanz von der <xref:System.Web.Profile.SqlProfileProvider> -Klasse unter Verwendung der Werte in der Konfigurationsdatei für die Anwendung angegeben. Dieser Konstruktor ist nicht für die Verwendung aus dem Code vorgesehen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.SqlProfileProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Profile.SqlProfileProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application for which to store and retrieve profile information.</summary>
        <value>Der Name der Anwendung, für die zum Speichern und Abrufen von Profilinformationen. Die Standardeinstellung ist die <see cref="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath" /> Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> Eigenschaft wird verwendet, durch die <xref:System.Web.Profile.SqlProfileProvider> , verschiedene Anwendungen Profilinformationen zugeordnet werden soll. Hierdurch können mehrere Anwendungen auf die gleiche Datenbank verwendet, um Benutzerinformationen zu speichern, ohne dass Konflikte zwischen doppelten Benutzer. Mehrere ASP.NET-Anwendungen können dieselbe Benutzerdatenbank durch Angabe des gleichen Werts in der <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> Eigenschaft. Die <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> Eigenschaft programmgesteuert festgelegt werden kann oder deklarativ in der Konfigurationsdatei für die Web-Anwendung mit festgelegt werden die `applicationName` Attribut.  
  
 Wenn kein Wert für angegeben wird die `applicationName` Attribut in der Konfigurationsdatei für die Webanwendung die <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> Wert für ASP.NET-Anwendungen verwendet wird. Für nicht-ASP.NET-Anwendungen, der Standardwert ist die <xref:System.Diagnostics.ProcessModule.ModuleName%2A> Wert ohne Dateierweiterung.  
  
> [!CAUTION]
>  Da eine einzelne Standardinstanz Profil Anbieter für alle vom übermittelten Anforderungen verwendet wird ein <xref:System.Web.HttpApplication> -Objekt können mehrere Anforderungen gleichzeitig ausgeführt und versucht, legen Sie die <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> Eigenschaftswert. Die <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> Eigenschaft ist nicht für mehrere Schreibvorgänge threadsicher sind, und ändern die <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> Eigenschaftswert kann zu unerwartetem Verhalten für mehrere Benutzer einer Anwendung führen. Es wird empfohlen, dass Sie keinen Code schreiben, der Benutzern ermöglicht, legen Sie die <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> Eigenschaft es sei denn, Sie müssen. Ein Beispiel für eine Anwendung in dem das Festlegen der <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> Eigenschaft kann erforderlich sein, sollte eine verwaltende Anwendung, die Profildaten für mehrere Anwendungen verwaltet wird. Eine solche Anwendung sollte einen Einzelbenutzer-Anwendung und nicht um eine Webanwendung.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Element in der `system.web` Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Es gibt an, der Anwendungsverzeichnis <xref:System.Web.Profile.SqlProfileProvider> Instanz und legt die <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A> Eigenschaftswert an `MyApplication`.  
  
```  
<profile defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
   </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">An attempt was made to set the <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName" /> property by a caller that does not have <see cref="F:System.Web.AspNetHostingPermissionLevel.High" /> ASP.NET hosting permission.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Profile.SqlProfileProvider.ApplicationName" /> property to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public override int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="override this.DeleteInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="sqlProfileProvider.DeleteInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are deleted.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Deletes user profile data for profiles in which the last activity date occurred before the specified date and time.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles%2A> Methode wird verwendet, um nicht verwendete Profildaten aus der Datenquelle für die Anwendung durch Entfernen der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile soll nur authentifizierte Profile oder alle Profile gesucht werden soll. Von den durchsuchten Profilen wird jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> Dies tritt am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert wird gelöscht.  
  
 Die Datenbankupdates, die während des Aufrufs ausgeführt werden die <xref:System.Web.Profile.SqlProfileProvider.DeleteInactiveProfiles%2A> Methode innerhalb einer Transaktion erfolgen. Wenn ein Fehler aufgetreten ist, wird ein Rollback für die Transaktion, und keine Updates ausgeführt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine ASP.NET-Seite auf, die inaktiven Profile verwaltet. Eine Schaltfläche wird bereitgestellt, um alle Profile löschen, die seit dem angegebenen Datum für ein Profil als inaktiv betrachtet nicht zugegriffen wurde.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Deletes profile properties and information from the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public override int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberSignature Language="F#" Value="override this.DeleteProfiles : string[] -&gt; int" Usage="sqlProfileProvider.DeleteProfiles usernames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">A string array of user names for profiles to be deleted.</param>
        <summary>Deletes profile properties and information from the data source for the supplied list of user names.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> -Methode löscht alle Profilinformationen und Eigenschaften für die angegebenen Profile aus der Datenquelle für die Anwendung gemäß der `applicationName` Attribut in der Konfigurationsdatei. Die Liste der zu löschenden Profile wird als ein Zeichenfolgenarray mit Benutzernamen angegeben. Wenn Profileigenschaften und Informationen, in der Datenquelle für einen Benutzernamen in vorhanden der `usernames` -Parameter werden gelöscht.  
  
 Der zurückgegebene Wert unterscheidet sich von der Länge des angegebenen Arrays von `usernames`. Dies bedeutet, dass einige der Profile im angegebenen Array von `usernames` wurden bereits aus dem Datenspeicher gelöscht.  
  
 Die Datenbankupdates, die während des Aufrufs ausgeführt werden die <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> Methode innerhalb einer Transaktion erfolgen. Wenn ein Fehler aufgetreten ist, wird ein Rollback für die Transaktion, und keine Updates ausgeführt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine ASP.NET-Seite auf, die inaktiven Profile verwaltet. Ein <xref:System.Web.UI.WebControls.GridView> -Steuerelement zeigt die inaktiven Profile zurückgegeben. Jede Zeile der <xref:System.Web.UI.WebControls.GridView> Steuerelement enthält eine Schaltfläche, die das Profil für diese Zeile aus der Datenquelle mit einem Aufruf von löscht die <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> Methode.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The length of <paramref name="usernames" /> is zero.  \- or -  One of the items in <paramref name="usernames" /> is an empty string (""), exceeds a length of 256 characters, or contains a comma.  \- or -  Two or more items in <paramref name="usernames" /> have the same value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernames" /> is <see langword="null" />.  \- or -  One of the items in <paramref name="usernames" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public override int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberSignature Language="F#" Value="override this.DeleteProfiles : System.Web.Profile.ProfileInfoCollection -&gt; int" Usage="sqlProfileProvider.DeleteProfiles profiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> that contains profile information for profiles to be deleted.</param>
        <summary>Deletes profile properties and information for the supplied list of profiles from the data source.</summary>
        <returns>The number of profiles deleted from the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> -Methode löscht alle Profilinformationen und Eigenschaften für die angegebenen Profile aus der Datenquelle für die Anwendung gemäß der `applicationName` Attribut in der Konfigurationsdatei. Die Liste der zu löschenden Profile wird angegeben, mit einer <xref:System.Web.Profile.ProfileInfoCollection> als übergeben der `profiles` Parameter. Ein <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben werden kann, aus der <xref:System.Web.Profile.SqlProfileProvider.GetAllProfiles%2A>, <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A>, und <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> Methoden.  
  
 Der Rückgabewert kann unterscheiden sich von der <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> Wert für die angegebene <xref:System.Web.Profile.ProfileInfoCollection>. Dies bedeutet, dass einige der Profile im angegebenen <xref:System.Web.Profile.ProfileInfoCollection> nicht mehr im Datenspeicher gefunden wurden.  
  
 Die Datenbankupdates, die während des Aufrufs ausgeführt werden die <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> Methode innerhalb einer Transaktion erfolgen. Wenn ein Fehler aufgetreten ist, wird ein Rollback für die Transaktion, und keine Updates ausgeführt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ermöglicht einem Benutzer zu suchende Profile mithilfe der <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> und <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> Methoden. Der Benutzer kann dann die zurückgegebenen Profile mit einem Aufruf von Löschen der <xref:System.Web.Profile.SqlProfileProvider.DeleteProfiles%2A> Methode.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" /> value of zero.  \- or -  One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is an empty string (""), exceeds a length of 256 characters, or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="profiles" /> is <see langword="null" />.  \- or -  One of the <see cref="T:System.Web.Profile.ProfileInfo" /> objects in <paramref name="profiles" /> has a <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> that is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="sqlProfileProvider.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves profile information for profiles in which the last activity date occurred on or before the specified date and time and the user name for the profile matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for inactive profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> Methode dient zum Abrufen von Profilinformationen für nicht verwendete Benutzerprofile für die angegebene Anwendung der `applicationName` Attribut in der Konfigurationsdatei. Diese Methode werden nur abgerufen, der Benutzername für das Profil für die angegebenen entspricht, Profile `usernameToMatch` Parameterwert. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile soll nur authentifizierte Profile oder alle Profile gesucht werden soll. Von den durchsuchten Profilen wird jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> in diesem Fall vor dem angegebenen `userInactiveSinceDate` Parameterwert wird zurückgegeben.  
  
 Die <xref:System.Web.Profile.SqlProfileProvider> sucht eine Übereinstimmung mit der `usernameToMatch` Parameter den Wert unter Verwendung der `LIKE` -Schlüsselwort und die Unterstützung von Platzhalterzeichen, wie z. B. das Prozentzeichen (%). Beispielsweise, wenn die `usernameToMatch` Parameter auf "Benutzer1" festgelegt ist, und klicken Sie dann Profilinformationen für das Profil mit dem Benutzernamen "Benutzer1" zurückgegeben, falls vorhanden. Wenn die `usernameToMatch` Parameter auf "Benutzer%" festgelegt ist, dann werden Informationen zum Eigenschaftsprofil für Profile mit dem Benutzernamen "Benutzer1", "Benutzer2", "benutzer_admin" usw. zurückgegeben. Benutzer werden in der Reihenfolge zurückgegeben, deren Profile mit dem Datenspeicher hinzugefügt wurden.  
  
 Von der zurückgegebenen Ergebnisse <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> werden eingeschränkt, indem Sie die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> Objekte zurückzugebenden in der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der zurückzugebenden Ergebnisseite; 0 die erste Seite identifiziert. Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der inaktiven Profile für die konfigurierte festgelegt ist `applicationName`auf der Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` ist der Wert 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben wird das sechste bis die zehnte inaktiven Profile enthalten. Die `totalRecords` -Parameter wird auf 13 festgelegt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann Benutzer zur bereitstellen, eine `usernameToMatch` Wert und eine <xref:System.Web.Profile.ProfileAuthenticationOption> und Ruft Profilinformationen für alle übereinstimmenden Profile. Im Beispiel kann auch der Benutzer anzugeben, ob ausschließlich inaktive Profile zurückgegeben. Wenn der Benutzer nur inaktive Profile angibt der <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> Methode wird aufgerufen, und andernfalls die <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> -Methode aufgerufen wird.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("") or exceeds 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="sqlProfileProvider.FindProfilesByUserName (authenticationOption, usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="usernameToMatch">The user name for which to search.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves profile information for profiles in which the user name matches the specified name.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for profiles where the user name matches the supplied <paramref name="usernameToMatch" /> parameter.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> Methode gibt eine Liste von Profilinformationen für die der Benutzername für das Profil dem angegebenen entspricht `usernameToMatch` Parameterwert für die konfigurierte <xref:System.Web.Profile.SqlProfileProvider.ApplicationName%2A>. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile soll nur authentifizierte Profile oder alle Profile gesucht werden soll.  
  
 Die <xref:System.Web.Profile.SqlProfileProvider> sucht eine Übereinstimmung mit der `usernameToMatch` Parameter den Wert unter Verwendung der `LIKE` -Schlüsselwort und die Unterstützung von Platzhalterzeichen, wie z. B. das Prozentzeichen (%). Beispielsweise, wenn die `usernameToMatch` Parameter auf "Benutzer1" festgelegt ist, und klicken Sie dann Profilinformationen für das Profil mit dem Benutzernamen "Benutzer1" zurückgegeben, falls vorhanden. Wenn die `usernameToMatch` Parameter auf "Benutzer%" festgelegt ist, dann werden Informationen zum Eigenschaftsprofil für Profile mit dem Benutzernamen "Benutzer1", "Benutzer2", "benutzer_admin" usw. zurückgegeben. Benutzer werden in der Reihenfolge zurückgegeben, deren Profile mit dem Datenspeicher hinzugefügt wurden.  
  
 Von der zurückgegebenen Ergebnisse <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> werden eingeschränkt, indem Sie die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> Objekte zurückzugebenden in der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der zurückzugebenden Ergebnisseite; 0 die erste Seite identifiziert. Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der inaktiven Profile für die angegebene Anwendung festgelegt ist die `applicationName` Attribut in der Konfigurationsdatei auf Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` ist der Wert 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben wird das sechste bis zehnte Profile enthalten. Die `totalRecords` -Parameter wird auf 13 festgelegt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann Benutzer zur bereitstellen, eine `usernameToMatch` Wert und eine <xref:System.Web.Profile.ProfileAuthenticationOption> und Ruft Profilinformationen für alle übereinstimmenden Profile. Im Beispiel kann auch der Benutzer anzugeben, ob ausschließlich inaktive Profile zurückgegeben. Wenn der Benutzer nur inaktive Profile angibt der <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> Methode wird aufgerufen, und andernfalls die <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> -Methode aufgerufen wird.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("") or exceeds 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="sqlProfileProvider.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves user profile data for profiles in which the last activity date occurred on or before the specified date and time.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information about the inactive profiles.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> Methode dient zum Abrufen von Profilinformationen aus der Datenquelle für nicht verwendete Benutzerprofile für die angegebene Anwendung der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile soll nur authentifizierte Profile oder alle Profile gesucht werden soll. Von den durchsuchten Profilen wird jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> in diesem Fall vor dem angegebenen `userInactiveSinceDate` Parameterwert wird zurückgegeben.  
  
 Von der zurückgegebenen Ergebnisse <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> werden eingeschränkt, indem Sie die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> Objekte zurückzugebenden in der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der zurückzugebenden Ergebnisseite; 0 die erste Seite identifiziert. Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der inaktiven Profile für die konfigurierte festgelegt ist `applicationName`auf der Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` ist der Wert 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben wird das sechste bis die zehnte inaktiven Profile enthalten. Die `totalRecords` -Parameter wird auf 13 festgelegt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine ASP.NET-Seite auf, die inaktiven Profile verwaltet. So löschen Sie alle inaktiven Profile wird eine Schaltfläche bereitgestellt. Gibt an, ob ein Profil als inaktiv betrachtet wird basiert auf dem Datum für die `userInactiveSinceDate` Parameter.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public override System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="sqlProfileProvider.GetAllProfiles (authenticationOption, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains an integer that identifies the total number of profiles. This parameter is passed uninitialized.</param>
        <summary>Retrieves user profile data for profiles in the data source.</summary>
        <returns>A <see cref="T:System.Web.Profile.ProfileInfoCollection" /> containing user profile information for all of the profiles in the data source.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.GetAllProfiles%2A> Methode dient zum Abrufen von Profilinformationen für Profile aus der Datenquelle für die angegebene Anwendung der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile soll nur authentifizierte Profile oder alle Profile gesucht werden soll.  
  
 Von der zurückgegebenen Ergebnisse <xref:System.Web.Profile.SqlProfileProvider.GetAllInactiveProfiles%2A> werden eingeschränkt, indem Sie die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter gibt die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> Objekte zurückzugebenden in der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert, welche Seite der zurückzugebenden Ergebnisseite; 0 die erste Seite identifiziert. Die `totalRecords` Parameter ist ein `out` Parameter, der die Gesamtzahl der inaktiven Profile für die konfigurierte festgelegt ist `applicationName`auf der Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` ist der Wert 1 mit einem `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben wird das sechste bis zehnte Profile enthalten. Die `totalRecords` -Parameter wird auf 13 festgelegt werden.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Profilinformationen für alle Profile für die konfigurierte `applicationName` in Datenseiten.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> is larger than <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public override int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="sqlProfileProvider.GetNumberOfInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">One of the <see cref="T:System.Web.Profile.ProfileAuthenticationOption" /> values, specifying whether anonymous, authenticated, or both types of profiles are returned.</param>
        <param name="userInactiveSinceDate">A <see cref="T:System.DateTime" /> that identifies which user profiles are considered inactive. If the <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> of a user profile occurs on or before this date and time, the profile is considered inactive.</param>
        <summary>Gets the number of profiles in the data source where the last activity date occurred on or before the specified <paramref name="userInactiveSinceDate" />.</summary>
        <returns>The number of profiles in the data source for which the last activity date occurred before the specified date and time.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles%2A> Methode wird verwendet, um alle nicht verwendeten Benutzerprofile aus der Datenquelle für die angegebene Anwendung Abrufen der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile soll nur authentifizierte Profile oder alle Profile gesucht werden soll. Gesuchte Profil, alle Profile mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> Dies tritt am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert gezählt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann Benutzer anzeigen und aktive und inaktive Profilinformationen basierend auf Suchkriterien gelöscht. Anzahl der inaktiven Profile wird angezeigt, mit den Ergebnissen der <xref:System.Web.Profile.SqlProfileProvider.GetNumberOfInactiveProfiles%2A> Methode.  
  
 [!code-aspx-csharp[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.SqlProfileProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValues">
      <MemberSignature Language="C#" Value="public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Configuration.SettingsPropertyValueCollection GetPropertyValues(class System.Configuration.SettingsContext sc, class System.Configuration.SettingsPropertyCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertyValues (sc As SettingsContext, properties As SettingsPropertyCollection) As SettingsPropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Configuration::SettingsPropertyValueCollection ^ GetPropertyValues(System::Configuration::SettingsContext ^ sc, System::Configuration::SettingsPropertyCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection&#xA;override this.GetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyCollection -&gt; System.Configuration.SettingsPropertyValueCollection" Usage="sqlProfileProvider.GetPropertyValues (sc, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyValueCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyCollection" />
      </Parameters>
      <Docs>
        <param name="sc">The <see cref="T:System.Configuration.SettingsContext" /> that contains user profile information.</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyCollection" /> containing profile information for the properties to be retrieved.</param>
        <summary>Retrieves profile property information and values from a SQL Server profile database.</summary>
        <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing profile property information and values.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.GetPropertyValues%2A> Methode wird verwendet, durch die <xref:System.Web.Profile.ProfileBase> Klasse zum Abrufen von Eigenschaften des Profils für die aktuelle Anforderung, die von verwaltet werden die <xref:System.Web.Profile.SqlProfileProvider>. Eigenschaftswerte werden zurückgegeben, aus der Datenquelle für die Anwendung gemäß der `applicationName` Attribut in der Konfigurationsdatei. Eigenschaftswerte und zusätzliche Informationen werden zurückgegeben, als eine Auflistung von <xref:System.Configuration.SettingsPropertyValue> Objekte.  
  
   
  
## Examples  
 Das folgende Codebeispiel listet die Profileigenschaften und Werte, die in das aktuelle Profil identifiziert.  
  
 [!code-csharp[System.Web.Profile.SqlProfileProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/getpropertyvaluescs.aspx#1)]
 [!code-vb[System.Web.Profile.SqlProfileProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/getpropertyvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit&#xA;override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlProfileProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Profile.SqlProfileProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the profile provider.</param>
        <summary>Initializes the SQL Server profile provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET verwendet diese Methode zum Initialisieren der <xref:System.Web.Profile.SqlProfileProvider> mit den Eigenschaftswerten, die in der Anwendungskonfigurationsdatei (Web.config) für das ASP.NET angegeben. Diese Methode ist nicht für die direkte Verwendung im Code vorgesehen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="connectionStringName" /> attribute is an empty string ("") or is not specified in the application configuration file for this <see cref="T:System.Web.Profile.SqlProfileProvider" /> instance.  \- or -  The value of the connection string specified in the <see langword="connectionStringName" /> attribute value is empty or the specified <see langword="connectionStringName" /> value does not exist in the application configuration file for this <see cref="T:System.Web.Profile.SqlProfileProvider" /> instance.  \- or -  The <see langword="applicationName" /> attribute value exceeds 256 characters.  \- or -  The application configuration file for this <see cref="T:System.Web.Profile.SqlProfileProvider" /> instance contains an unrecognized attribute.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">The current trust level is less than <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValues">
      <MemberSignature Language="C#" Value="public override void SetPropertyValues (System.Configuration.SettingsContext sc, System.Configuration.SettingsPropertyValueCollection properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetPropertyValues(class System.Configuration.SettingsContext sc, class System.Configuration.SettingsPropertyValueCollection properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.SqlProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub SetPropertyValues (sc As SettingsContext, properties As SettingsPropertyValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void SetPropertyValues(System::Configuration::SettingsContext ^ sc, System::Configuration::SettingsPropertyValueCollection ^ properties);" />
      <MemberSignature Language="F#" Value="abstract member SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit&#xA;override this.SetPropertyValues : System.Configuration.SettingsContext * System.Configuration.SettingsPropertyValueCollection -&gt; unit" Usage="sqlProfileProvider.SetPropertyValues (sc, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sc" Type="System.Configuration.SettingsContext" />
        <Parameter Name="properties" Type="System.Configuration.SettingsPropertyValueCollection" />
      </Parameters>
      <Docs>
        <param name="sc">The <see cref="T:System.Configuration.SettingsContext" /> that contains user profile information.</param>
        <param name="properties">A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing profile information and values for the properties to be updated.</param>
        <summary>Updates the SQL Server profile database with the specified property values.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.SqlProfileProvider.SetPropertyValues%2A> Methode wird von ASP.NET Profildienste verwendet, die SQL Server-Profil-Datenbank zu aktualisieren, wenn Eigenschaftswerte für die aktuelle Anforderung festgelegt werden. Eigenschaftswerte werden in der Datenquelle für die angegebene Anwendung Festlegen der `applicationName` Attribut in der Konfigurationsdatei. Profil Eigenschaftsinformationen und Werten aktualisiert werden die <xref:System.Web.Profile.SqlProfileProvider> angegeben sind, als eine Auflistung von <xref:System.Configuration.SettingsPropertyValue> Objekte.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.Web.Profile.SqlProfileProvider.SetPropertyValues%2A> Methode, um Profileigenschaftswerte zu ändern.  
  
 [!code-csharp[System.Web.Profile.SqlProfileProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/CS/setpropertyvaluescs.aspx#2)]
 [!code-vb[System.Web.Profile.SqlProfileProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.SqlProfileProvider/VB/setpropertyvaluesvb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>