<Type Name="ProfileBase" FullName="System.Web.Profile.ProfileBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a314f75fc2275c9495d5a25ae6f1731ca5b617a9" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53475255" /></Metadata><TypeSignature Language="C#" Value="public class ProfileBase : System.Configuration.SettingsBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileBase extends System.Configuration.SettingsBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileBase&#xA;Inherits SettingsBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileBase : System::Configuration::SettingsBase" />
  <TypeSignature Language="F#" Value="type ProfileBase = class&#xA;    inherit SettingsBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht nicht typisierten Zugriff auf Profileigenschaftswerte und Informationen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET verwendet die <xref:System.Web.Profile.ProfileBase> Klasse, um die Klasse für das Benutzerprofil zu erstellen. Wenn eine Anwendung mit aktiviertem Benutzerprofil gestartet wird, erstellt ASP.NET eine neue Klasse des Typs `ProfileCommon`, erbt von der <xref:System.Web.Profile.ProfileBase> Klasse. Stark typisierte Accessor werden hinzugefügt, um die `ProfileCommon` -Klasse für jede Eigenschaft im Konfigurationsabschnitt definiert. Stark typisierte Accessor die `ProfileCommon` -Klasse rufen die <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> und <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> Methoden die <xref:System.Web.Profile.ProfileBase> Basisklasse zum Abrufen und festlegen Profil Eigenschaftswerte bzw. Eine Instanz von der `ProfileCommon` -Klasse festgelegt ist, als Wert für die <xref:System.Web.HttpContext.Profile%2A> -Eigenschaft für die ASP.NET-Anwendung.  
  
 Um eine Instanz eines Benutzerprofils in einer ASP.NET-Anwendung zu erstellen, wird empfohlen, dass Sie verwenden die <xref:System.Web.Profile.ProfileBase.Create%2A> Methode.  
  
## <a name="notes-to-inheritors"></a>Hinweise zur Vererbung   

Sie können angeben, erstellen eine benutzerdefinierten profilimplementierung, die von erbt die <xref:System.Web.Profile.ProfileBase> abstrakte Klasse, und definiert die Eigenschaften für das Benutzerprofil, die nicht in das Konfigurationselement angegeben werden. Sie können einen benutzerdefinierten Benutzerprofil-Typ angeben, in der Datei "Web.config" mit der `inherits` Attribut des Konfigurationselements, wie im folgenden Beispiel gezeigt. Der Code für die `EmployeeProfile` Klasse befindet sich im Abschnitt "Beispiel" dieses Themas. 

[!code-xml[System.Web.Profile.ProfileBase-Config](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/config.xml)]  

## Examples  
 Das folgende Codebeispiel zeigt eine Web.config-Datei, die ein Benutzerprofil angibt, enthält eine `ZipCode` Eigenschaft vom Typ `string` und `RecentSearchList` Eigenschaft vom Typ <xref:System.Collections.Specialized.StringCollection>. Die generierte <xref:System.Web.HttpContext.Profile%2A> Eigenschaft des aktuellen <xref:System.Web.HttpContext> verfügt über stark typisierte Accessoren für jede der angegebenen Eigenschaften.  
  
```xml  
<configuration>  
  <system.web>  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="SqlProvider" >  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="RecentSearchList"  
          type="System.Collections.Specialized.StringCollection"  
          serializeAs="Xml"  
          allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Das folgende Beispiel zeigt eine ASP.NET-Seite, die liest und setzt die `ZipCode` das Benutzerprofil für die angegebene Eigenschaft. Bevor Sie versuchen, den Code auszuführen, die den Anbieter auf den Standardwert festgelegt `AspNetSqlProvider` in die ASP.NET-Konfigurationseinstellungen für die Website.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 Das folgende Codebeispiel definiert eine Klasse, die von erbt die <xref:System.Web.Profile.ProfileBase> Klasse, um ein benutzerdefiniertes Profil erstellen. Der Typ des benutzerdefinierten Profils wird angegeben, der `inherits` Attribut des Konfigurationselements in der Datei "Web.config" für eine Anwendung.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Instanz der <see cref="T:System.Web.Profile.ProfileBase" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET verwendet die <xref:System.Web.Profile.ProfileBase> Klasse, um die Klasse für das Benutzerprofil zu erstellen. Wenn eine Anwendung mit aktiviertem Benutzerprofil gestartet wird, erstellt ASP.NET eine neue Klasse des Typs `ProfileCommon`, erbt von der <xref:System.Web.Profile.ProfileBase> Klasse. Stark typisierte Accessor werden hinzugefügt, um die `ProfileCommon` -Klasse für jede Eigenschaft im Konfigurationsabschnitt definiert. Stark typisierte Accessor die `ProfileCommon` -Klasse rufen die <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> und <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> Methoden die <xref:System.Web.Profile.ProfileBase> Basisklasse zum Abrufen und festlegen Profil Eigenschaftswerte bzw. Eine Instanz von der `ProfileCommon` -Klasse festgelegt ist, als Wert für die <xref:System.Web.HttpContext.Profile%2A> -Eigenschaft für die ASP.NET-Anwendung.  
  
> [!NOTE]
>  Die Basisklasse, die zum Generieren der Klasse, die in gespeicherten verwendet die <xref:System.Web.HttpContext.Profile%2A> -Eigenschaft kann überschrieben werden, mit der `inherits` -Attribut des Abschnitts der Konfigurationsdatei. In diesem Fall würden Sie angeben, eine benutzerdefinierte Klasse, die von erbt die <xref:System.Web.Profile.ProfileBase> Basisklasse.  
  
 Dieser Konstruktor ist nicht dazu gedacht, die vom Anwendungscode verwendet werden. Verwenden Sie zum Erstellen einer Instanz eines Benutzerprofils der <xref:System.Web.Profile.ProfileBase.Create%2A> Methode.  
  
   
  
## Examples  
 Die folgende Datei "Web.config" gibt an, ein Benutzerprofil, das enthält eine `ZipCode` Eigenschaft vom Typ `string` und `RecentSearchList` Eigenschaft vom Typ <xref:System.Collections.Specialized.StringCollection>. Die generierte <xref:System.Web.HttpContext.Profile%2A> Eigenschaft des aktuellen <xref:System.Web.HttpContext> verfügt über stark typisierte Accessoren für jede der angegebenen Eigenschaften.  
  
```xml  
<configuration>  
   <connectionStrings>  
       <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
   </connectionStrings>  
  
  <system.web>  
   <anonymousIdentification enabled="true" />  
  
   <profile defaultProvider="SqlProvider" >  
     <providers>  
       <add  
         name="SqlProvider"  
         connectionStringName="SqlServices"  
         applicationName="ProfileBaseApplication"  
         type="System.Web.Profile.SqlProfileProvider" />  
     </providers>  
  
     <properties>  
       <add name="ZipCode" allowAnonymous="true" />  
       <add name="RecentSearchList"  
            type="System.Collections.Specialized.StringCollection"  
            serializeAs="Xml"  
            allowAnonymous="true" />  
      </properties>  
    </profile>  
   </system.web>  
</configuration>  
```  
  
 Die folgende ASP.NET-Seite liest und setzt die `ZipCode` das Benutzerprofil für die angegebene Eigenschaft.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Das <see langword="enabled" />-Attribut des Abschnitts der Web.config-Datei ist <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Ein im Abschnitt Web.config-Datei angegebener Eigenschaftentyp konnte nicht erstellt werden.  
  
- oder -  
Das <see langword="allowAnonymous" />-Attribut für eine Eigenschaft im Abschnitt der Web.config-Datei ist auf <see langword="true" /> festgelegt, und das <see langword="enabled" />-Attribut des Elements ist auf <see langword="false" /> festgelegt.  
  
- oder -  
Das <see langword="serializeAs" />-Attribut für eine Eigenschaft im Abschnitt der Web.config-Datei ist auf <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> festgelegt, und die <see cref="P:System.Type.IsSerializable" />-Eigenschaft vom angegebenen <see langword="type" /> gibt <see langword="false" /> zurück.  
  
- oder -  
Der mithilfe des <see langword="provider" />-Attributs einer Profileigenschaft angegebene Name eines Anbieters konnte nicht in der <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Auflistung gefunden werden.  
  
- oder -  
Der für eine Profileigenschaft angegebene <see langword="type" /> konnte nicht gefunden werden.  
  
- oder -  
Es wurde eine Profileigenschaft mit einem Namen angegeben, der einem Eigenschaftennamen der Basisklasse entspricht, die im <see langword="inherits" />-Attribut des Abschnitts angegeben ist.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine Instanz eines Benutzerprofils.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Benutzers, für den ein Profil erstellt werden soll.</param>
        <summary>Wird von ASP.NET verwendet, um eine Instanz eines Profils für den angegebenen Benutzernamen zu erstellen.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileBase" />, die das Profil für den angegebenen Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileBase.Create%2A> Methode erstellt und initialisiert eine neue Profilinstanz und eignet sich für Anwendungen, die ein benutzerdefiniertes Profil Objekt oder Verwalten von Benutzerprofilen in einer Umgebung nicht zu ASP.NET.  
  
 Diese Überladung von der <xref:System.Web.Profile.ProfileBase.Create%2A> Methode wird davon ausgegangen, dass der angegebene Benutzername einen authentifizierten Benutzer ist.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Instanz eines benutzerdefinierten Profils-Objekts, legt eine Eigenschaft fest und speichert das Profil mit der Datenquelle.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Das <see langword="enabled" />-Attribut des Abschnitts der Web.config-Datei ist <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">Die aktuelle Berechtigungsebene für Hosting ist niedriger als <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Ein im Abschnitt Web.config-Datei angegebener Eigenschaftentyp konnte nicht erstellt werden.  
  
- oder -  
Das <see langword="allowAnonymous" />-Attribut für eine Eigenschaft im Abschnitt der Web.config-Datei ist auf <see langword="true" /> festgelegt, und das <see langword="enabled" />-Attribut des Elements ist auf <see langword="false" /> festgelegt.  
  
- oder -  
Das <see langword="serializeAs" />-Attribut für eine Eigenschaft im Abschnitt der Web.config-Datei ist auf <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> festgelegt, und die <see cref="P:System.Type.IsSerializable" />-Eigenschaft vom angegebenen <see langword="type" /> gibt <see langword="false" /> zurück.  
  
- oder -  
Der mithilfe des <see langword="provider" />-Attributs einer Profileigenschaft angegebene Name eines Anbieters konnte nicht in der <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Auflistung gefunden werden.  
  
- oder -  
Der für eine Profileigenschaft angegebene <see langword="type" /> konnte nicht gefunden werden.  
  
- oder -  
Es wurde eine Profileigenschaft mit einem Namen angegeben, der einem Eigenschaftennamen der Basisklasse entspricht, die im <see langword="inherits" />-Attribut des Abschnitts angegeben ist.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String, isAuthenticated As Boolean) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="static member Create : string * bool -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Benutzers, für den ein Profil erstellt werden soll.</param>
        <param name="isAuthenticated"><see langword="true" />, um anzugeben, dass der Benutzer authentifiziert ist. <see langword="false" />, um anzugeben, dass der Benutzer anonym ist.</param>
        <summary>Wird von ASP.NET verwendet, um eine Instanz eines Profils für den angegebenen Benutzernamen zu erstellen. Akzeptiert einen Parameter, der angibt, ob der Benutzer authentifiziert oder anonym ist.</summary>
        <returns>Ein <see cref="T:System.Web.Profile.ProfileBase" />-Objekt, das das Profil für den angegebenen Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileBase.Create%2A> Methode erstellt und initialisiert eine neue Profilinstanz und eignet sich für Anwendungen, die ein benutzerdefiniertes Profil Objekt oder Verwalten von Benutzerprofilen in einer Umgebung nicht zu ASP.NET.  
  
 Diese Überladung von der <xref:System.Web.Profile.ProfileBase.Create%2A> Methode kann verwendet werden, um ein Profil für einen authentifizierten Benutzer oder ein anonymer Benutzer zu erstellen.  
  
   
  
## Examples  
 Das folgende Codebeispiel erstellt eine Instanz eines benutzerdefinierten Profils-Objekts, legt eine Eigenschaft fest und speichert das Profil mit der Datenquelle.  
  
 [!code-csharp[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#2)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Das <see langword="enabled" />-Attribut des Abschnitts der Web.config-Datei ist <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">Die aktuelle Berechtigungsebene für Hosting ist niedriger als <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Ein im Abschnitt Web.config-Datei angegebener Eigenschaftentyp konnte nicht erstellt werden.  
  
- oder -  
Das <see langword="allowAnonymous" />-Attribut für eine Eigenschaft im Abschnitt der Web.config-Datei ist auf <see langword="true" /> festgelegt, und das <see langword="enabled" />-Attribut des Elements ist auf <see langword="false" /> festgelegt.  
  
- oder -  
Das <see langword="serializeAs" />-Attribut für eine Eigenschaft im Abschnitt der Web.config-Datei ist auf <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> festgelegt, und die <see cref="P:System.Type.IsSerializable" />-Eigenschaft vom angegebenen <see langword="type" /> gibt <see langword="false" /> zurück.  
  
- oder -  
Der mithilfe des <see langword="provider" />-Attributs einer Profileigenschaft angegebene Name eines Anbieters konnte nicht in der <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Auflistung gefunden werden.  
  
- oder -  
Der für eine Profileigenschaft angegebene <see langword="type" /> konnte nicht gefunden werden.  
  
- oder -  
Es wurde eine Profileigenschaft mit einem Namen angegeben, der einem Eigenschaftennamen der Basisklasse entspricht, die im <see langword="inherits" />-Attribut des Abschnitts angegeben ist.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetProfileGroup">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetProfileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProfileGroup (groupName As String) As ProfileGroupBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Profile::ProfileGroupBase ^ GetProfileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.GetProfileGroup : string -&gt; System.Web.Profile.ProfileGroupBase" Usage="profileBase.GetProfileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileGroupBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Der Name der Gruppe von Eigenschaften.</param>
        <summary>Ruft eine Gruppe von Eigenschaften ab, die durch einen Gruppennamen bezeichnet werden.</summary>
        <returns>Ein <see cref="T:System.Web.Profile.ProfileGroupBase" />-Objekt für eine mit dem angegebenen Gruppennamen konfigurierte Gruppe von Eigenschaften.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eigenschaften können für eine bessere Organisation in Gruppen getrennt werden. Die <xref:System.Web.Profile.ProfileBase.GetProfileGroup%2A> -Eigenschaft kann nach dem Namen der abzurufenden eine Gruppe von Eigenschaften verwendet werden. Sie können auch eine Profileigenschaft in einer Gruppe zugreifen, durch Angabe der Gruppenname als Mitglied der `Profile` Eigenschaft, die auf jeder Seite verfügbar. Z. B. die `ZipCode` -Eigenschaft, ein Mitglied ist, ein Profil der `Address` Profilgruppe konnte zugegriffen werden, mithilfe von `Profile.Address.ZipCode`.  
  
   
  
## Examples  
 Die folgende Datei "Web.config" gibt an, ein Benutzerprofil, die Gruppe von Eigenschaften mit dem Gruppennamen enthält `Address`. Die gruppierten Eigenschaften generiert der <xref:System.Web.HttpContext.Profile%2A> Eigenschaft des aktuellen <xref:System.Web.HttpContext> wird der Name der vorangestellt werden. Beispielsweise `Profile.Address.Street`.  
  
```xml  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <authorization>  
      <deny users="?" />  
    </authorization>  
  
    <membership defaultProvider="SqlProvider"   
      userIsOnlineTimeWindow="15">  
      <providers>  
        <clear />  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"   
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          applicationName="MyApplication" />  
      </providers>  
    </membership>  
  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <add  
          name="SqlProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          type="System.Web.Profile.SqlProfileProvider" />  
  
      </providers>  
  
      <properties>  
        <add name="ZipCode" />  
        <group name="Address">  
          <add name="Street" />  
          <add name="City" />  
          <add name="State" />  
          <add name="CountryOrRegion" />  
        </group>  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Die folgende ASP.NET-Seite liest und legt die gruppierten Eigenschaften, die für das Benutzerprofil angegeben.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der angegebene Gruppenname für Profileigenschaften wurde nicht im Konfigurationsabschnitt gefunden.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; obj" Usage="profileBase.GetPropertyValue propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Profileigenschaft.</param>
        <summary>Ruft den Wert einer Profileigenschaft ab.</summary>
        <returns>Der Wert der angegebenen Profileigenschaft, als <see langword="object" /> typisiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET verwendet die <xref:System.Web.Profile.ProfileBase> Klasse, um die Klasse für das Benutzerprofil zu erstellen. Wenn eine Anwendung mit aktiviertem Benutzerprofil gestartet wird, erstellt ASP.NET eine neue Klasse des Typs `ProfileCommon`, erbt von der <xref:System.Web.Profile.ProfileBase> Klasse. Stark typisierte Accessor werden hinzugefügt, um die `ProfileCommon` -Klasse für jede Eigenschaft im Konfigurationsabschnitt definiert. Die stark typisierten Accessoren der der `ProfileCommon` -Klasse rufen die <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> Methode zum Abrufen von nicht typisierter Werten aus der <xref:System.Web.Profile.ProfileProvider> , die der generierte Accessor dann wandelt den angegebenen Typ und gibt als Wert der Eigenschaft zurück.  
  
 Sie können die <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> Methode zum Abrufen von Eigenschaftswerten des Benutzerprofils für Ihre Anwendung anhand des Namens. Zurückgegebene Werte nicht typisiert sind und beim Abrufen der bestimmten Objekttyp umgewandelt werden müssen. Für den stark typisierten Zugriff auf Profileigenschaftswerte Sie erreichen die Eigenschaft anhand des Namens als Mitglied der Profile-Eigenschaft, die auf jeder Seite z. B. `Profile.CustomerAddress`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine ASP.NET-Seite, die liest und legt sie fest der `ZipCode` das Benutzerprofil für die angegebene Eigenschaft. Ein Beispiel für eine Web.config-Datei, die Eigenschaften für das Benutzerprofil angibt, finden Sie im Beispiel für die <xref:System.Web.Profile.ProfileBase> Klasse.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Es wurde versucht, einen Eigenschaftswert für ein anonymes Profil einer Eigenschaft festzulegen, bei der das <see langword="allowAnonymous" />-Attribut <see langword="false" /> ist.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Für das aktuelle Profil sind keine Eigenschaften definiert.  
  
- oder -  
Der angegebene Profileigenschaftenname ist im aktuellen Profil nicht vorhanden.  
  
- oder -  
Der Anbieter für die angegebene Profileigenschaft hat die angegebene Eigenschaft nicht erkannt.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (username As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * bool -&gt; unit" Usage="profileBase.Initialize (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Benutzers, für den das Profil initialisiert werden soll.</param>
        <param name="isAuthenticated"><see langword="true" />, um anzugeben, dass der Benutzer authentifiziert ist. <see langword="false" />, um anzugeben, dass der Benutzer anonym ist.</param>
        <summary>Initialisiert die Profileigenschaftswerte und die Informationen für den aktuellen Benutzer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist nicht für die Verwendung im Code vorgesehen. Verwenden Sie eines der <xref:System.Web.Profile.ProfileBase.Create%2A> Überladungen zum Erstellen einer Instanz des Benutzerprofils.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Benutzerprofil für einen anonymen Benutzer ist.</summary>
        <value><see langword="true" />, wenn das Benutzerprofil für einen anonymen Benutzer vorgesehen ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anonymer Zugriff auf das Benutzerprofil aktiviert ist, mithilfe des Konfigurationsabschnitts und `allowAnonymous` Attribut des Konfigurationselements verwendet, um Eigenschaften anzugeben.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.Profile.ProfileBase.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Profileigenschaften geändert worden sind.</summary>
        <value><see langword="true" />, wenn Profileigenschaften geändert worden sind, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileBase.IsDirty%2A> Eigenschaft kann verwendet werden, indem ein Profilprovider während der <xref:System.Configuration.SettingsBase.Save%2A> Methode, um zu bestimmen, ob Eigenschaften, setzt sich aus primitiven Typen, Zeichenfolgen oder <xref:System.DateTime> Objekte geändert wurden. Geänderte Eigenschaften werden dann durch den Profilanbieter in aktualisiert die <xref:System.Configuration.SettingsBase.Save%2A> Methode. Die <xref:System.Configuration.SettingsBase.Save%2A> -Methode automatisch am Ende der seitenausführung aufgerufen, wenn die <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> -Eigenschaft ist `true`  
  
 Ein Profilprovider Namens in der <xref:System.Configuration.SettingsBase.Save%2A> Methode kann nicht explizit bestimmen, ob eine Profileigenschaft mit einem benutzerdefinierten Klassentyp oder einen komplexen Typ, z. B. eine Sammlung geändert wurde. Sie können die <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis, um zu bestimmen, ob ein benutzerdefiniertes Objekt geändert wurde und weiterhin mit dem automatischen Speichern für geänderte Objekte oder die automatische Speicheraktion Abbrechen, wenn keine Objekte geändert wurden. Das Standardverhalten der <xref:System.Web.Profile.ProfileBase> Klasse besteht darin, die <xref:System.Web.Profile.ProfileBase.IsDirty%2A> Eigenschaft, um `true` für Eigenschaften, die einen benutzerdefinierten oder einen komplexen Typ der ersten Eigenschaft Mal zugegriffen wird.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Profile.ProfileBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Profileigenschaft.</param>
        <summary>Ruft einen vom Eigenschaftennamen indizierten Profileigenschaftswert ab oder legt diesen fest.</summary>
        <value>Der Wert der angegebenen Profileigenschaft, als <see langword="object" /> typisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft abzurufen, oder legen Sie die Eigenschaftswerte des Benutzerprofils für Ihre Anwendung anhand des Namens. Zurückgegebenen Werte werden als typisierte `object` und müssen beim Abrufen der bestimmten Objekttyp umgewandelt werden. Für den stark typisierten Zugriff auf Profileigenschaftswerte, können Sie die Eigenschaft anhand des Namens zugreifen, als Mitglied der `Profile` auf jeder Seite, z. B. verfügbare Eigenschaft `Profile.CustomerAddress`.  
  
   
  
## Examples  
 Das folgende Codebeispiel listet die Namen der Eigenschaften im Benutzerprofil durch die Bindung der <xref:System.Configuration.SettingsProperty.Name%2A> Eigenschaft aus der statischen <xref:System.Web.Profile.ProfileBase.Properties%2A> Auflistung von <xref:System.Configuration.SettingsProperty> Objekte eine <xref:System.Web.UI.WebControls.GridView> Steuerelement. Der Wert für die ausgewählte Eigenschaft wird abgerufen, anhand des Namens mit der <xref:System.Web.Profile.ProfileBase.Item%2A> Auflistung. Ein Beispiel für eine Web.config-Datei, die Eigenschaften für das Benutzerprofil angibt, finden Sie im Beispiel für die <xref:System.Web.Profile.ProfileBase> Klasse.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Es wurde versucht, einen Eigenschaftswert für ein anonymes Profil einer Eigenschaft festzulegen, bei der das <see langword="allowAnonymous" />-Attribut <see langword="false" /> ist.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Für das aktuelle Profil sind keine Eigenschaften definiert.  
  
- oder -  
Der angegebene Profileigenschaftenname ist im aktuellen Profil nicht vorhanden.  
  
- oder -  
Der Anbieter für die angegebene Profileigenschaft hat die angegebene Eigenschaft nicht erkannt.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Es wurde versucht, einen Eigenschaftswert festzulegen, der als schreibgeschützt markiert wurde.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Es wurde versucht, einer Eigenschaft mit einem nicht kompatiblen Typ einen Wert zuzuweisen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="LastActivityDate">
      <MemberSignature Language="C#" Value="public DateTime LastActivityDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastActivityDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastActivityDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastActivityDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastActivityDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das letzte Datum und die Zeit ab, als das Profil gelesen oder geändert wurde.</summary>
        <value>Das letzte Datum und die Zeit, als das Profil vom Standardanbieter gelesen oder geändert wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Eigenschaftswert wird nur von den Standardprofilanbieter geändert. Änderungen, die von einem Anbieter als den Standardprofilanbieter auf Profileigenschaften wirken sich nicht auf den Wert des der <xref:System.Web.Profile.ProfileBase.LastActivityDate%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedDate">
      <MemberSignature Language="C#" Value="public DateTime LastUpdatedDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastUpdatedDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastUpdatedDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastUpdatedDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastUpdatedDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das letzte Datum und die Zeit ab, als das Profil geändert wurde.</summary>
        <value>Das letzte Datum und die Zeit, als das Profil vom Standardanbieter geändert wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Eigenschaftswert wird nur von den Standardprofilanbieter geändert. Änderungen, die von einem Anbieter als den Standardprofilanbieter auf Profileigenschaften wirken sich nicht auf den Wert des der <xref:System.Web.Profile.ProfileBase.LastUpdatedDate%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Web.Profile.ProfileBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Configuration.SettingsProperty" />-Objekten für jede Eigenschaft im Profil ab.</summary>
        <value>Eine <see cref="T:System.Configuration.SettingsPropertyCollection" /> von <see cref="T:System.Configuration.SettingsProperty" />-Objekten für jede Eigenschaft im Profil für die Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft verwenden, zum Abrufen von Informationen zu den Profileigenschaften für eine Anwendung, einschließlich der Eigenschaftennamen und-Typen konfiguriert. Sie können auch verweisen die <xref:System.Web.Profile.ProfileProvider> für jede Eigenschaft. Ein <xref:System.Web.Profile.ProfileProvider> verwaltet werden, speichern und Abrufen von Eigenschaftswerten in und aus der Datenquelle.  
  
   
  
## Examples  
 Das folgende Codebeispiel listet die Namen der Eigenschaften im Benutzerprofil durch die Bindung der <xref:System.Configuration.SettingsProperty.Name%2A> Eigenschaft aus der statischen <xref:System.Web.Profile.ProfileBase.Properties%2A> Auflistung von <xref:System.Configuration.SettingsProperty> Objekte eine <xref:System.Web.UI.WebControls.GridView> Steuerelement. Der Wert für die ausgewählte Eigenschaft wird abgerufen, anhand des Namens mit der <xref:System.Web.Profile.ProfileBase.Item%2A> Auflistung. Ein Beispiel für eine Web.config-Datei, die Eigenschaften für das Benutzerprofil angibt, finden Sie im Beispiel für die <xref:System.Web.Profile.ProfileBase> Klasse.  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Ein im Abschnitt Web.config-Datei angegebener Eigenschaftentyp konnte nicht erstellt werden.  
  
- oder -  
Das <see langword="allowAnonymous" />-Attribut für eine Eigenschaft im Abschnitt der Web.config-Datei ist auf <see langword="true" /> festgelegt, und das <see langword="enabled" />-Attribut des Elements ist auf <see langword="false" /> festgelegt.  
  
- oder -  
Das <see langword="serializeAs" />-Attribut für eine Eigenschaft im Abschnitt der Web.config-Datei ist auf <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> festgelegt, und die <see cref="P:System.Type.IsSerializable" />-Eigenschaft vom angegebenen <see langword="type" /> gibt <see langword="false" /> zurück.  
  
- oder -  
Der mithilfe des <see langword="provider" />-Attributs einer Profileigenschaft angegebene Name eines Anbieters konnte nicht in der <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Auflistung gefunden werden.  
  
- oder -  
Der für eine Profileigenschaft angegebene <see langword="type" /> konnte nicht gefunden werden.  
  
- oder -  
Es wurde eine Profileigenschaft mit einem Namen angegeben, der einem Eigenschaftennamen der Basisklasse entspricht, die im <see langword="inherits" />-Attribut des Abschnitts angegeben ist.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="profileBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die Profildatenquelle mit geänderten Profileigenschaftswerten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileBase.Save%2A> Methode schreibt geänderte Profil in der Datenquelle. Der Profilanbieter kann die Menge der Aktivität in der Datenquelle reduzieren, indem Sie Ausführung der Updates nur, wenn die <xref:System.Web.Profile.ProfileBase.IsDirty%2A> -Eigenschaftensatz auf `true`. Dies ist der Fall für den standardmäßigen <xref:System.Web.Profile.SqlProfileProvider>. Nach der <xref:System.Web.Profile.ProfileBase.Save%2A> Methode wurde die Eigenschaftswerte mit der Datenquelle gespeichert <xref:System.Web.Profile.ProfileBase.IsDirty%2A> nastaven NA hodnotu `false`.  
  
 Sie können die <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis implementieren benutzerdefinierte Logik, die bestimmt, ob eine Profileigenschaft mit einem benutzerdefinierten Typ oder einen komplexen Typ geändert wurde und weiterhin mit dem automatischen Speichern für geänderte Objekte oder die automatische Speicheraktion Abbrechen, wenn keine Objekte verfügen. wurde geändert.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyValue (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValue : string * obj -&gt; unit" Usage="profileBase.SetPropertyValue (propertyName, propertyValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der festzulegenden Eigenschaft.</param>
        <param name="propertyValue">Der Wert, der der Eigenschaft zugewiesen werden soll.</param>
        <summary>Legt den Wert einer Profileigenschaft fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET verwendet die <xref:System.Web.Profile.ProfileBase> Klasse, um die Klasse für das Benutzerprofil zu erstellen. Wenn eine Anwendung mit aktiviertem Benutzerprofil gestartet wird, erstellt ASP.NET eine neue Klasse des Typs `ProfileCommon`, erbt von der <xref:System.Web.Profile.ProfileBase> Klasse. Stark typisierte Accessor werden hinzugefügt, um die `ProfileCommon` -Klasse für jede Eigenschaft im Konfigurationsabschnitt definiert. Die stark typisierten Accessoren der der `ProfileCommon` -Klasse rufen die <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> Methode, Eigenschaft übergeben, Werte in der <xref:System.Web.Profile.ProfileProvider> in der Datenquelle gespeichert werden.  
  
 Sie können die <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> Methode zum Zuweisen von Eigenschaftswerten in das Benutzerprofil für Ihre Anwendung anhand des Namens. Werte nicht typisiert sind, und die typüberprüfung erfolgt zur Laufzeit nicht Zeitpunkt der Kompilierung. Für den stark typisierten Zugriff auf Profileigenschaftswerte, können Sie die Eigenschaft anhand des Namens zugreifen, als Mitglied der `Profile` -Eigenschaft, die auf jeder Seite verfügbar ist, z. B. `Profile.CustomerAddress`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine ASP.NET-Seite, die liest und legt sie fest der `ZipCode` das Benutzerprofil für die angegebene Eigenschaft. Ein Beispiel für eine Web.config-Datei, die Eigenschaften für das Benutzerprofil angibt, finden Sie im Beispiel für die <xref:System.Web.Profile.ProfileBase> Klasse.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Es wurde versucht, einen Eigenschaftswert für ein anonymes Profil einer Eigenschaft festzulegen, bei der das <see langword="allowAnonymous" />-Attribut <see langword="false" /> ist.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Für das aktuelle Profil sind keine Eigenschaften definiert.  
  
- oder -  
Der angegebene Profileigenschaftenname ist im aktuellen Profil nicht vorhanden.  
  
- oder -  
Der Anbieter für die angegebene Profileigenschaft hat die angegebene Eigenschaft nicht erkannt.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Es wurde versucht, einen Wert für eine Eigenschaft festzulegen, der als schreibgeschützt markiert wurde.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Es wurde versucht, einer Eigenschaft mit einem nicht kompatiblen Typ einen Wert zuzuweisen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Web.Profile.ProfileBase.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Benutzernamen für das Profil ab.</summary>
        <value>Der Benutzername für das Profil oder der dem Profil zugewiesene Bezeichner für anonyme Benutzer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileBase.UserName%2A> Eigenschaft zurückgegeben wird, entweder der Name des authentifizierten Benutzers, der das Profil zugeordnet ist oder die anonyme Benutzer-ID, die dem Profil zugewiesen werden, wenn die <xref:System.Web.Profile.ProfileBase.IsAnonymous%2A> Eigenschaft `true`.  
  
 Anonymer Zugriff auf das Benutzerprofil aktiviert ist, mithilfe des Konfigurationsabschnitts und `allowAnonymous` Attribut des Konfigurationselements verwendet, um Eigenschaften anzugeben.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
  </Members>
</Type>