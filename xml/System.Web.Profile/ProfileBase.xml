<Type Name="ProfileBase" FullName="System.Web.Profile.ProfileBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b6de2931ff245cf1d00caa6e78740fd58f99054" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86615825" /></Metadata><TypeSignature Language="C#" Value="public class ProfileBase : System.Configuration.SettingsBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileBase extends System.Configuration.SettingsBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileBase" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileBase&#xA;Inherits SettingsBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileBase : System::Configuration::SettingsBase" />
  <TypeSignature Language="F#" Value="type ProfileBase = class&#xA;    inherit SettingsBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.SettingsBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Ermöglicht nicht typisierten Zugriff auf Profileigenschaftswerte und Informationen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET verwendet die- <xref:System.Web.Profile.ProfileBase> Klasse, um die Klasse zu erstellen, die für das Benutzerprofil verwendet wird. Wenn eine Anwendung, für die das Benutzerprofil aktiviert ist, gestartet wird, erstellt ASP.net eine neue Klasse des Typs `ProfileCommon` , die von der-Klasse erbt <xref:System.Web.Profile.ProfileBase> . Stark typisierte Accessoren werden der- `ProfileCommon` Klasse für jede im [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Abschnitt definierte Eigenschaft hinzugefügt. Stark typisierte Accessor die `ProfileCommon` -Klasse rufen die <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> und <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> Methoden die <xref:System.Web.Profile.ProfileBase> Basisklasse zum Abrufen und festlegen Profil Eigenschaftswerte bzw. Eine Instanz der- `ProfileCommon` Klasse wird als Wert der-Eigenschaft der <xref:System.Web.HttpContext.Profile%2A> ASP.NET-Anwendung festgelegt.

 Um eine Instanz eines Benutzerprofils in einer ASP.NET-Anwendung zu erstellen, empfiehlt es sich, die- <xref:System.Web.Profile.ProfileBase.Create%2A> Methode zu verwenden.

## <a name="notes-to-inheritors"></a>Hinweise für Vererber

Sie können eine benutzerdefinierte Profil Implementierung erstellen, die von der <xref:System.Web.Profile.ProfileBase> abstrakten-Klasse erbt und Eigenschaften für das Benutzerprofil definiert, die nicht im [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement angegeben sind. Sie können einen benutzerdefinierten Benutzer Profiltyp in der web.config-Datei mit dem- `inherits` Attribut des [profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angeben, wie im folgenden Beispiel gezeigt. Der Code für die- `EmployeeProfile` Klasse ist im Beispiel Abschnitt dieses Themas enthalten.

[!code-xml[System.Web.Profile.ProfileBase-Config](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/config.xml)]

## Examples
 Das folgende Codebeispiel zeigt eine Web.config Datei, die ein Benutzerprofil angibt, das eine `ZipCode` Eigenschaft vom Typ `string` und eine `RecentSearchList` Eigenschaft vom Typ enthält <xref:System.Collections.Specialized.StringCollection> . Die generierte- <xref:System.Web.HttpContext.Profile%2A> Eigenschaft des aktuellen <xref:System.Web.HttpContext> verfügt über stark typisierte Accessoren für jede der angegebenen Eigenschaften.

```xml
<configuration>
  <system.web>
    <anonymousIdentification enabled="true" />

    <profile enabled="true" defaultProvider="SqlProvider" >
      <properties>
        <add name="ZipCode" allowAnonymous="true" />
        <add name="RecentSearchList"
          type="System.Collections.Specialized.StringCollection"
          serializeAs="Xml"
          allowAnonymous="true" />
      </properties>
    </profile>
  </system.web>
</configuration>
```

 Das folgende Beispiel zeigt eine ASP.NET-Seite, die die `ZipCode` für das Benutzerprofil angegebene Eigenschaft liest und festlegt. Bevor Sie versuchen, diesen Code auszuführen, legen Sie den Anbieter `AspNetSqlProvider` in den ASP.NET-Konfigurationseinstellungen für die Website auf den Standardwert fest.

 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]

 Im folgenden Codebeispiel wird eine Klasse definiert, die von der-Klasse erbt <xref:System.Web.Profile.ProfileBase> , um ein benutzerdefiniertes Profil zu erstellen. Der Typ des benutzerdefinierten Profils wird im- `inherits` Attribut des [profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements in der Web.config-Datei für eine Anwendung angegeben.

> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-csharp[System.Web.Profile.ProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/CS/employeeprofile.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase/VB/employeeprofile.vb#1)]

 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Instanz der <see cref="T:System.Web.Profile.ProfileBase" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET verwendet die- <xref:System.Web.Profile.ProfileBase> Klasse, um die Klasse zu erstellen, die für das Benutzerprofil verwendet wird. Wenn eine Anwendung, für die das Benutzerprofil aktiviert ist, gestartet wird, erstellt ASP.net eine neue Klasse des Typs `ProfileCommon` , die von der-Klasse erbt <xref:System.Web.Profile.ProfileBase> . Stark typisierte Accessoren werden der- `ProfileCommon` Klasse für jede im [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Abschnitt definierte Eigenschaft hinzugefügt. Stark typisierte Accessor die `ProfileCommon` -Klasse rufen die <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> und <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> Methoden die <xref:System.Web.Profile.ProfileBase> Basisklasse zum Abrufen und festlegen Profil Eigenschaftswerte bzw. Eine Instanz der- `ProfileCommon` Klasse wird als Wert der-Eigenschaft der <xref:System.Web.HttpContext.Profile%2A> ASP.NET-Anwendung festgelegt.

> [!NOTE]
>  Die-Basisklasse, die zum Generieren der in der-Eigenschaft gespeicherten-Klasse verwendet wird, <xref:System.Web.HttpContext.Profile%2A> kann mithilfe des- `inherits` Attributs des [profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) -Abschnitts der Konfigurationsdatei überschrieben werden. In diesem Fall geben Sie eine benutzerdefinierte Klasse an, die von der <xref:System.Web.Profile.ProfileBase> Basisklasse erbt.

 Dieser Konstruktor ist nicht für die Verwendung im Anwendungscode vorgesehen. Um eine Instanz eines Benutzerprofils zu erstellen, verwenden Sie die- <xref:System.Web.Profile.ProfileBase.Create%2A> Methode.



## Examples
 Die folgende Web.config Datei gibt ein Benutzerprofil an, das eine `ZipCode` Eigenschaft vom Typ `string` und eine `RecentSearchList` Eigenschaft vom Typ enthält <xref:System.Collections.Specialized.StringCollection> . Die generierte- <xref:System.Web.HttpContext.Profile%2A> Eigenschaft des aktuellen <xref:System.Web.HttpContext> verfügt über stark typisierte Accessoren für jede der angegebenen Eigenschaften.

```xml
<configuration>
   <connectionStrings>
       <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />
   </connectionStrings>

  <system.web>
   <anonymousIdentification enabled="true" />

   <profile defaultProvider="SqlProvider" >
     <providers>
       <add
         name="SqlProvider"
         connectionStringName="SqlServices"
         applicationName="ProfileBaseApplication"
         type="System.Web.Profile.SqlProfileProvider" />
     </providers>

     <properties>
       <add name="ZipCode" allowAnonymous="true" />
       <add name="RecentSearchList"
            type="System.Collections.Specialized.StringCollection"
            serializeAs="Xml"
            allowAnonymous="true" />
      </properties>
    </profile>
   </system.web>
</configuration>
```

 Die folgende ASP.NET-Seite liest und legt die `ZipCode` für das Benutzerprofil angegebene Eigenschaft fest.

> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Das <see langword="enabled" />-Attribut des <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see>-Abschnitts der Datei „Web.config“ ist <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Ein im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ angegebener Eigenschaftentyp konnte nicht erstellt werden.

- oder -

Das <see langword="allowAnonymous" />-Attribut für eine Eigenschaft im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ ist auf <see langword="true" /> festgelegt, und das <see langword="enabled" />-Attribut des <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v%3dvs.100)">&lt;anonymousIdentification&gt;</see>-Elements ist auf <see langword="false" /> festgelegt.

- oder -

Das <see langword="serializeAs" />-Attribut für eine Eigenschaft im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ ist auf <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> festgelegt, und die <see cref="P:System.Type.IsSerializable" />-Eigenschaft vom angegebenen <see langword="type" /> gibt <see langword="false" /> zurück.

- oder -

Der mithilfe des <see langword="provider" />-Attributs einer Profileigenschaft angegebene Name eines Anbieters konnte nicht in der <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Auflistung gefunden werden.

- oder -

Der für eine Profileigenschaft angegebene <see langword="type" /> konnte nicht gefunden werden.

- oder -

Es wurde eine Profileigenschaft mit einem Namen angegeben, der einem Eigenschaftennamen für die im <see langword="inherits" />-Attribut des Abschnitts <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> angegebene Basisklasse entspricht.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt eine Instanz eines Benutzerprofils.</summary>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Benutzers, für den ein Profil erstellt werden soll.</param>
        <summary>Wird von ASP.NET verwendet, um eine Instanz eines Profils für den angegebenen Benutzernamen zu erstellen.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileBase" />, die das Profil für den angegebenen Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.Profile.ProfileBase.Create%2A> Methode erstellt und Initialisiert eine neue Profil Instanz und ist nützlich für Anwendungen, die ein benutzerdefiniertes Profil Objekt verwenden oder Benutzerprofile in einer Non-ASP.NET-Umgebung verwalten.

 Bei dieser Überladung der- <xref:System.Web.Profile.ProfileBase.Create%2A> Methode wird davon ausgegangen, dass der angegebene Benutzername ein authentifizierter Benutzer ist.



## Examples
 Im folgenden Codebeispiel wird eine Instanz eines benutzerdefinierten Profil Objekts erstellt, eine Eigenschaft festgelegt und das Profil in der Datenquelle gespeichert.

 [!code-csharp[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#1)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Das <see langword="enabled" />-Attribut des <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see>-Abschnitts der Datei „Web.config“ ist <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">Die aktuelle Berechtigungsebene für Hosting ist niedriger als <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Ein im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ angegebener Eigenschaftentyp konnte nicht erstellt werden.

- oder -

Das <see langword="allowAnonymous" />-Attribut für eine Eigenschaft im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ ist auf <see langword="true" /> festgelegt, und das <see langword="enabled" />-Attribut des <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v%3dvs.100)">&lt;anonymousIdentification&gt;</see>-Elements ist auf <see langword="false" /> festgelegt.

- oder -

Das <see langword="serializeAs" />-Attribut für eine Eigenschaft im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ ist auf <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> festgelegt, und die <see cref="P:System.Type.IsSerializable" />-Eigenschaft vom angegebenen <see langword="type" /> gibt <see langword="false" /> zurück.

- oder -

Der mithilfe des <see langword="provider" />-Attributs einer Profileigenschaft angegebene Name eines Anbieters konnte nicht in der <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Auflistung gefunden werden.

- oder -

Der für eine Profileigenschaft angegebene <see langword="type" /> konnte nicht gefunden werden.

- oder -

Es wurde eine Profileigenschaft mit einem Namen angegeben, der einem Eigenschaftennamen für die im <see langword="inherits" />-Attribut des Abschnitts <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> angegebene Basisklasse entspricht.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileBase Create (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileBase Create(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Create(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (username As String, isAuthenticated As Boolean) As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileBase ^ Create(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="static member Create : string * bool -&gt; System.Web.Profile.ProfileBase" Usage="System.Web.Profile.ProfileBase.Create (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Benutzers, für den ein Profil erstellt werden soll.</param>
        <param name="isAuthenticated"><see langword="true" />, um anzugeben, dass der Benutzer authentifiziert ist. <see langword="false" />, um anzugeben, dass der Benutzer anonym ist.</param>
        <summary>Wird von ASP.NET verwendet, um eine Instanz eines Profils für den angegebenen Benutzernamen zu erstellen. Akzeptiert einen Parameter, der angibt, ob der Benutzer authentifiziert oder anonym ist.</summary>
        <returns>Ein <see cref="T:System.Web.Profile.ProfileBase" />-Objekt, das das Profil für den angegebenen Benutzer darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.Profile.ProfileBase.Create%2A> Methode erstellt und Initialisiert eine neue Profil Instanz und ist nützlich für Anwendungen, die ein benutzerdefiniertes Profil Objekt verwenden oder Benutzerprofile in einer Non-ASP.NET-Umgebung verwalten.

 Diese Überladung der- <xref:System.Web.Profile.ProfileBase.Create%2A> Methode kann verwendet werden, um ein Profil für einen authentifizierten Benutzer oder einen anonymen Benutzer zu erstellen.



## Examples
 Im folgenden Codebeispiel wird eine Instanz eines benutzerdefinierten Profil Objekts erstellt, eine Eigenschaft festgelegt und das Profil in der Datenquelle gespeichert.

 [!code-csharp[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/CS/profileBaseCreatecs.aspx.cs#2)]
 [!code-vb[System.Web.Profile.ProfileBase.Create#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileBase.Create/VB/profileBaseCreatevb.aspx.vb#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Das <see langword="enabled" />-Attribut des <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see>-Abschnitts der Datei „Web.config“ ist <see langword="false" />.</exception>
        <exception cref="T:System.Web.HttpException">Die aktuelle Berechtigungsebene für Hosting ist niedriger als <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" />.</exception>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Ein im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ angegebener Eigenschaftentyp konnte nicht erstellt werden.

- oder -

Das <see langword="allowAnonymous" />-Attribut für eine Eigenschaft im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ ist auf <see langword="true" /> festgelegt, und das <see langword="enabled" />-Attribut des <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v%3dvs.100)">&lt;anonymousIdentification&gt;</see>-Elements ist auf <see langword="false" /> festgelegt.

- oder -

Das <see langword="serializeAs" />-Attribut für eine Eigenschaft im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ ist auf <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> festgelegt, und die <see cref="P:System.Type.IsSerializable" />-Eigenschaft vom angegebenen <see langword="type" /> gibt <see langword="false" /> zurück.

- oder -

Der mithilfe des <see langword="provider" />-Attributs einer Profileigenschaft angegebene Name eines Anbieters konnte nicht in der <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Auflistung gefunden werden.

- oder -

Der für eine Profileigenschaft angegebene <see langword="type" /> konnte nicht gefunden werden.

- oder -

Es wurde eine Profileigenschaft mit einem Namen angegeben, der einem Eigenschaftennamen für die im <see langword="inherits" />-Attribut des Abschnitts <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> angegebene Basisklasse entspricht.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetProfileGroup">
      <MemberSignature Language="C#" Value="public System.Web.Profile.ProfileGroupBase GetProfileGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Profile.ProfileGroupBase GetProfileGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetProfileGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProfileGroup (groupName As String) As ProfileGroupBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Profile::ProfileGroupBase ^ GetProfileGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="member this.GetProfileGroup : string -&gt; System.Web.Profile.ProfileGroupBase" Usage="profileBase.GetProfileGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileGroupBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Der Name der Gruppe von Eigenschaften.</param>
        <summary>Ruft eine Gruppe von Eigenschaften ab, die durch einen Gruppennamen bezeichnet werden.</summary>
        <returns>Ein <see cref="T:System.Web.Profile.ProfileGroupBase" />-Objekt für eine mit dem angegebenen Gruppennamen konfigurierte Gruppe von Eigenschaften.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Profil Eigenschaften können zur besseren Organisation in Gruppen aufgeteilt werden. Die- <xref:System.Web.Profile.ProfileBase.GetProfileGroup%2A> Eigenschaft kann verwendet werden, um eine Gruppe von Eigenschaften anhand des Gruppennamens abzurufen. Sie können auch auf eine Profil Eigenschaft in einer Gruppe zugreifen, indem Sie den Gruppennamen als Mitglied der Eigenschaft angeben, die `Profile` auf jeder Seite verfügbar ist. Beispielsweise kann auf die `ZipCode` Profil Eigenschaft, die ein Mitglied der `Address` Profil Gruppe ist, mithilfe von zugegriffen werden `Profile.Address.ZipCode` .



## Examples
 In der folgenden Web.config Datei wird ein Benutzerprofil angegeben, das eine Gruppe von Eigenschaften mit dem Gruppennamen enthält `Address` . Die gruppierten Eigenschaften, die für die- <xref:System.Web.HttpContext.Profile%2A> Eigenschaft der aktuellen generiert werden, <xref:System.Web.HttpContext> werden mit dem Gruppennamen vorangestellt. Beispiel: `Profile.Address.Street`.

```xml
<configuration>
  <connectionStrings>
    <add name="SqlServices" connectionString=
      "Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />
  </connectionStrings>

  <system.web>
    <authentication mode="Forms" >
      <forms loginUrl="login.aspx"
        name=".ASPXFORMSAUTH" />
    </authentication>

    <authorization>
      <deny users="?" />
    </authorization>

    <membership defaultProvider="SqlProvider"
      userIsOnlineTimeWindow="15">
      <providers>
        <clear />
        <add
          name="SqlProvider"
          type="System.Web.Security.SqlMembershipProvider"
          connectionStringName="SqlServices"
          enablePasswordRetrieval="false"
          enablePasswordReset="true"
          requiresQuestionAndAnswer="true"
          requiresUniqueEmail="false"
          passwordFormat="Hashed"
          applicationName="MyApplication" />
      </providers>
    </membership>

    <profile defaultProvider="SqlProvider">
      <providers>
        <add
          name="SqlProvider"
          connectionStringName="SqlServices"
          applicationName="MyApplication"
          type="System.Web.Profile.SqlProfileProvider" />

      </providers>

      <properties>
        <add name="ZipCode" />
        <group name="Address">
          <add name="Street" />
          <add name="City" />
          <add name="State" />
          <add name="CountryOrRegion" />
        </group>
      </properties>
    </profile>
  </system.web>
</configuration>
```

 Mit der folgenden ASP.NET-Seite werden die für das Benutzerprofil angegebenen gruppierten Eigenschaften gelesen und festgelegt.

> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileGroupBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileGroupBase/VB/defaultvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Der angegebene Name für die Eigenschaftengruppe wurde nicht im Konfigurationsabschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">properties</see> gefunden.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public object GetPropertyValue (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyValue(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyValue(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; obj" Usage="profileBase.GetPropertyValue propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Profileigenschaft.</param>
        <summary>Ruft den Wert einer Profileigenschaft ab.</summary>
        <returns>Der Wert der angegebenen Profileigenschaft, als <see langword="object" /> typisiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET verwendet die- <xref:System.Web.Profile.ProfileBase> Klasse, um die Klasse zu erstellen, die für das Benutzerprofil verwendet wird. Wenn eine Anwendung, für die das Benutzerprofil aktiviert ist, gestartet wird, erstellt ASP.net eine neue Klasse des Typs `ProfileCommon` , die von der-Klasse erbt <xref:System.Web.Profile.ProfileBase> . Stark typisierte Accessoren werden der- `ProfileCommon` Klasse für jede im [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Abschnitt definierte Eigenschaft hinzugefügt. Die stark typisierten Accessoren der- `ProfileCommon` Klasse rufen die- <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> Methode auf, um nicht typisierte Werte aus dem abzurufen <xref:System.Web.Profile.ProfileProvider> , den der generierte Accessor dann als den angegebenen Typ Umwandlungen und als Eigenschafts Wert zurückgibt.

 Sie können die- <xref:System.Web.Profile.ProfileBase.GetPropertyValue%2A> Methode verwenden, um Eigenschaftswerte für das Benutzerprofil für Ihre Anwendung anhand des Namens abzurufen. Zurückgegebene Werte sind nicht typisiert und müssen beim Abrufen als bestimmter Objekttyp umgewandelt werden. Für den stark typisierten Zugriff auf Profil Eigenschaftswerte können Sie auf die-Eigenschaft nach Namen als Mitglied der Profil Eigenschaft zugreifen, die auf jeder Seite verfügbar ist, z `Profile.CustomerAddress` . b..



## Examples
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die die `ZipCode` für das Benutzerprofil angegebene Eigenschaft liest und festlegt. Ein Beispiel für eine Web.config-Datei, die Eigenschaften für das Benutzerprofil angibt, finden Sie im Beispiel für die- <xref:System.Web.Profile.ProfileBase> Klasse.

> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Es wurde versucht, einen Eigenschaftswert für ein anonymes Profil einer Eigenschaft festzulegen, bei der das <see langword="allowAnonymous" />-Attribut <see langword="false" /> ist.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Für das aktuelle Profil sind keine Eigenschaften definiert.

 - oder -

 Der angegebene Profileigenschaftenname ist im aktuellen Profil nicht vorhanden.

 - oder -

 Der Anbieter für die angegebene Profileigenschaft hat die angegebene Eigenschaft nicht erkannt.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (string username, bool isAuthenticated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize(string username, bool isAuthenticated) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Initialize(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (username As String, isAuthenticated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize(System::String ^ username, bool isAuthenticated);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * bool -&gt; unit" Usage="profileBase.Initialize (username, isAuthenticated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der Name des Benutzers, für den das Profil initialisiert werden soll.</param>
        <param name="isAuthenticated"><see langword="true" />, um anzugeben, dass der Benutzer authentifiziert ist. <see langword="false" />, um anzugeben, dass der Benutzer anonym ist.</param>
        <summary>Initialisiert die Profileigenschaftswerte und die Informationen für den aktuellen Benutzer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode ist nicht für die Verwendung im Code vorgesehen. Verwenden Sie eine der- <xref:System.Web.Profile.ProfileBase.Create%2A> über Ladungen, um eine Instanz des Benutzerprofils zu erstellen.

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="IsAnonymous">
      <MemberSignature Language="C#" Value="public bool IsAnonymous { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnonymous" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnonymous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnonymous { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAnonymous : bool" Usage="System.Web.Profile.ProfileBase.IsAnonymous" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Benutzerprofil für einen anonymen Benutzer ist.</summary>
        <value><see langword="true" />, wenn das Benutzerprofil für einen anonymen Benutzer vorgesehen ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Der anonyme Zugriff auf das Benutzerprofil wird mit dem Konfigurations Abschnitt " [anonymousidentifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifi-](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v%3dvs.100)) " und dem Attribut " [zufüge](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164646(v%3dvs.100))

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.Profile.ProfileBase.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Profileigenschaften geändert worden sind.</summary>
        <value><see langword="true" />, wenn Profileigenschaften geändert worden sind, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.Profile.ProfileBase.IsDirty%2A> Eigenschaft kann von einem Profil Anbieter während der- <xref:System.Configuration.SettingsBase.Save%2A> Methode verwendet werden, um zu bestimmen, ob Eigenschaften, die aus primitiven Typen, Zeichen folgen oder Objekten bestehen, <xref:System.DateTime> geändert wurden. Geänderte Eigenschaften werden dann vom Profil Anbieter in der- <xref:System.Configuration.SettingsBase.Save%2A> Methode aktualisiert. Die- <xref:System.Configuration.SettingsBase.Save%2A> Methode wird automatisch am Ende der Seiten Ausführung aufgerufen, wenn die-Eigenschaft den Wert hat. <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>`true`

 Ein in der-Methode aufgerufener Profil Anbieter <xref:System.Configuration.SettingsBase.Save%2A> kann nicht explizit ermitteln, ob eine Profil Eigenschaft mit einem benutzerdefinierten Klassentyp oder einem komplexen Typ (z. b. einer Auflistung) geändert wurde. Sie können das <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> -Ereignis verwenden, um zu bestimmen, ob ein benutzerdefiniertes Objekt geändert wurde, und um die automatische Speicherung für geänderte Objekte fortzusetzen oder das automatische Speichern abzubrechen, wenn keine Objekte geändert wurden. Das Standardverhalten der- <xref:System.Web.Profile.ProfileBase> Klasse ist die Festlegung der- <xref:System.Web.Profile.ProfileBase.IsDirty%2A> Eigenschaft `true` für Eigenschaften, die einen benutzerdefinierten oder komplexen Typ aufweisen, wenn die Eigenschaft zum ersten Mal aufgerufen wird.

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(propertyName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Web.Profile.ProfileBase.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der Profileigenschaft.</param>
        <summary>Ruft einen vom Eigenschaftennamen indizierten Profileigenschaftswert ab oder legt diesen fest.</summary>
        <value>Der Wert der angegebenen Profileigenschaft, als <see langword="object" /> typisiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Sie können diese Eigenschaft verwenden, um die Eigenschaftswerte für das Benutzerprofil für die Anwendung anhand des Namens abzurufen oder festzulegen. Zurückgegebene Werte werden als typisiert `object` und müssen beim Abrufen als bestimmter Objekttyp umgewandelt werden. Für den stark typisierten Zugriff auf Profil Eigenschaftswerte können Sie auf die-Eigenschaft nach Namen als Member der- `Profile` Eigenschaft zugreifen, die auf jeder Seite verfügbar ist, z `Profile.CustomerAddress` . b..



## Examples
 Im folgenden Codebeispiel werden die Namen der Eigenschaften im Benutzerprofil aufgelistet, indem die- <xref:System.Configuration.SettingsProperty.Name%2A> Eigenschaft aus der statischen Auflistung <xref:System.Web.Profile.ProfileBase.Properties%2A> von- <xref:System.Configuration.SettingsProperty> Objekten an ein- <xref:System.Web.UI.WebControls.GridView> Steuerelement gebunden wird. Der ausgewählte Eigenschafts Wert wird mithilfe der-Auflistung anhand des Namens abgerufen <xref:System.Web.Profile.ProfileBase.Item%2A> . Ein Beispiel für eine Web.config-Datei, die Eigenschaften für das Benutzerprofil angibt, finden Sie im Beispiel für die- <xref:System.Web.Profile.ProfileBase> Klasse.

 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Es wurde versucht, einen Eigenschaftswert für ein anonymes Profil einer Eigenschaft festzulegen, bei der das <see langword="allowAnonymous" />-Attribut <see langword="false" /> ist.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Für das aktuelle Profil sind keine Eigenschaften definiert.

 - oder -

 Der angegebene Profileigenschaftenname ist im aktuellen Profil nicht vorhanden.

 - oder -

 Der Anbieter für die angegebene Profileigenschaft hat die angegebene Eigenschaft nicht erkannt.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Es wurde versucht, einen Eigenschaftswert festzulegen, der als schreibgeschützt markiert wurde.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Es wurde versucht, einer Eigenschaft mit einem nicht kompatiblen Typ einen Wert zuzuweisen.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="LastActivityDate">
      <MemberSignature Language="C#" Value="public DateTime LastActivityDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastActivityDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastActivityDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastActivityDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastActivityDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastActivityDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das letzte Datum und die Zeit ab, als das Profil gelesen oder geändert wurde.</summary>
        <value>Das letzte Datum und die Zeit, als das Profil vom Standardanbieter gelesen oder geändert wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Eigenschafts Wert wird nur vom Standardprofil Anbieter geändert. Änderungen, die von einem anderen Anbieter als dem Standardprofil Anbieter an Profil Eigenschaften vorgenommen werden, wirken sich nicht auf den Wert der- <xref:System.Web.Profile.ProfileBase.LastActivityDate%2A> Eigenschaft aus.

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="LastUpdatedDate">
      <MemberSignature Language="C#" Value="public DateTime LastUpdatedDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime LastUpdatedDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LastUpdatedDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime LastUpdatedDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.LastUpdatedDate : DateTime" Usage="System.Web.Profile.ProfileBase.LastUpdatedDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das letzte Datum und die Zeit ab, als das Profil geändert wurde.</summary>
        <value>Das letzte Datum und die Zeit, als das Profil vom Standardanbieter geändert wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Eigenschafts Wert wird nur vom Standardprofil Anbieter geändert. Änderungen, die von einem anderen Anbieter als dem Standardprofil Anbieter an Profil Eigenschaften vorgenommen werden, wirken sich nicht auf den Wert der- <xref:System.Web.Profile.ProfileBase.LastUpdatedDate%2A> Eigenschaft aus.

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public static System.Configuration.SettingsPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Configuration.SettingsPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Properties As SettingsPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Configuration::SettingsPropertyCollection ^ Properties { System::Configuration::SettingsPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Configuration.SettingsPropertyCollection" Usage="System.Web.Profile.ProfileBase.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.SettingsPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Configuration.SettingsProperty" />-Objekten für jede Eigenschaft im Profil ab.</summary>
        <value>Eine <see cref="T:System.Configuration.SettingsPropertyCollection" /> von <see cref="T:System.Configuration.SettingsProperty" />-Objekten für jede Eigenschaft im Profil für die Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Mit dieser Eigenschaft können Sie Informationen zu den Profil Eigenschaften, die für eine Anwendung konfiguriert sind, einschließlich Eigenschaftsnamen und-Typen, erhalten. Sie können auch auf die <xref:System.Web.Profile.ProfileProvider> der einzelnen Eigenschaften verweisen. Ein <xref:System.Web.Profile.ProfileProvider> verwaltet den Speicher und den Abruf von Eigenschafts Werten in und aus der Datenquelle.



## Examples
 Im folgenden Codebeispiel werden die Namen der Eigenschaften im Benutzerprofil aufgelistet, indem die- <xref:System.Configuration.SettingsProperty.Name%2A> Eigenschaft aus der statischen Auflistung <xref:System.Web.Profile.ProfileBase.Properties%2A> von- <xref:System.Configuration.SettingsProperty> Objekten an ein- <xref:System.Web.UI.WebControls.GridView> Steuerelement gebunden wird. Der ausgewählte Eigenschafts Wert wird mithilfe der-Auflistung anhand des Namens abgerufen <xref:System.Web.Profile.ProfileBase.Item%2A> . Ein Beispiel für eine Web.config-Datei, die Eigenschaften für das Benutzerprofil angibt, finden Sie im Beispiel für die- <xref:System.Web.Profile.ProfileBase> Klasse.

 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/ViewProfilecs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/ViewProfilevb.aspx#2)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">Ein im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ angegebener Eigenschaftentyp konnte nicht erstellt werden.

- oder -

Das <see langword="allowAnonymous" />-Attribut für eine Eigenschaft im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ ist auf <see langword="true" /> festgelegt, und das <see langword="enabled" />-Attribut des <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v%3dvs.100)">&lt;anonymousIdentification&gt;</see>-Elements ist auf <see langword="false" /> festgelegt.

- oder -

Das <see langword="serializeAs" />-Attribut für eine Eigenschaft im Abschnitt <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> der Datei „Web.config“ ist auf <see cref="F:System.Configuration.SettingsSerializeAs.Binary" /> festgelegt, und die <see cref="P:System.Type.IsSerializable" />-Eigenschaft vom angegebenen <see langword="type" /> gibt <see langword="false" /> zurück.

- oder -

Der mithilfe des <see langword="provider" />-Attributs einer Profileigenschaft angegebene Name eines Anbieters konnte nicht in der <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Auflistung gefunden werden.

- oder -

Der für eine Profileigenschaft angegebene <see langword="type" /> konnte nicht gefunden werden.

- oder -

Es wurde eine Profileigenschaft mit einem Namen angegeben, der einem Eigenschaftennamen für die im <see langword="inherits" />-Attribut des Abschnitts <see href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)">profile</see> angegebene Basisklasse entspricht.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public override void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.Save" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Save();" />
      <MemberSignature Language="F#" Value="override this.Save : unit -&gt; unit" Usage="profileBase.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Aktualisiert die Profildatenquelle mit geänderten Profileigenschaftswerten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.Profile.ProfileBase.Save%2A> Methode schreibt geänderte Profil Eigenschaftswerte in die Datenquelle. Der Profil Anbieter kann die Menge der Aktivitäten in der Datenquelle verringern, indem er nur Updates ausführt, wenn die- <xref:System.Web.Profile.ProfileBase.IsDirty%2A> Eigenschaft auf festgelegt ist `true` . Dies ist der Standardwert für die Standardeinstellung <xref:System.Web.Profile.SqlProfileProvider> . Nachdem die- <xref:System.Web.Profile.ProfileBase.Save%2A> Methode die Eigenschaftswerte in der Datenquelle gespeichert hat, <xref:System.Web.Profile.ProfileBase.IsDirty%2A> wird auf festgelegt `false` .

 Sie können das- <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis verwenden, um eine benutzerdefinierte Logik zu implementieren, die bestimmt, ob eine Profil Eigenschaft mit einem benutzerdefinierten Typ oder einem komplexen Typ geändert wurde, mit dem automatischen Speichern für geänderte Objekte fortgefahren wird oder die automatische Speicherung abgebrochen wird, wenn keine Objekte geändert wurden.

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValue">
      <MemberSignature Language="C#" Value="public void SetPropertyValue (string propertyName, object propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyValue(string propertyName, object propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileBase.SetPropertyValue(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPropertyValue (propertyName As String, propertyValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPropertyValue(System::String ^ propertyName, System::Object ^ propertyValue);" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValue : string * obj -&gt; unit" Usage="profileBase.SetPropertyValue (propertyName, propertyValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyName">Der Name der festzulegenden Eigenschaft.</param>
        <param name="propertyValue">Der Wert, der der Eigenschaft zugewiesen werden soll.</param>
        <summary>Legt den Wert einer Profileigenschaft fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 ASP.NET verwendet die- <xref:System.Web.Profile.ProfileBase> Klasse, um die Klasse zu erstellen, die für das Benutzerprofil verwendet wird. Wenn eine Anwendung, für die das Benutzerprofil aktiviert ist, gestartet wird, erstellt ASP.net eine neue Klasse des Typs `ProfileCommon` , die von der-Klasse erbt <xref:System.Web.Profile.ProfileBase> . Stark typisierte Accessoren werden der- `ProfileCommon` Klasse für jede im [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Abschnitt definierte Eigenschaft hinzugefügt. Die stark typisierten Accessoren der- `ProfileCommon` Klasse werden die- <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> Methode aufgerufen, um Eigenschaftswerte an die zu übergeben, die <xref:System.Web.Profile.ProfileProvider> in der Datenquelle gespeichert werden sollen.

 Sie können die- <xref:System.Web.Profile.ProfileBase.SetPropertyValue%2A> Methode verwenden, um Eigenschaftswerte im Benutzerprofil für Ihre Anwendung nach Namen zuzuweisen. Werte sind nicht typisiert, und die Typüberprüfung erfolgt zur Laufzeit, nicht zur Kompilierzeit. Für den stark typisierten Zugriff auf Profil Eigenschaftswerte können Sie auf die-Eigenschaft nach Namen als Member der-Eigenschaft zugreifen, `Profile` die auf jeder Seite verfügbar ist, z `Profile.CustomerAddress` . b..



## Examples
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die die `ZipCode` für das Benutzerprofil angegebene Eigenschaft liest und festlegt. Ein Beispiel für eine Web.config-Datei, die Eigenschaften für das Benutzerprofil angibt, finden Sie im Beispiel für die- <xref:System.Web.Profile.ProfileBase> Klasse.

> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[System.Web.Profile.HttpProfileBase#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.HttpProfileBase/VB/defaultvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Es wurde versucht, einen Eigenschaftswert für ein anonymes Profil einer Eigenschaft festzulegen, bei der das <see langword="allowAnonymous" />-Attribut <see langword="false" /> ist.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyNotFoundException">Für das aktuelle Profil sind keine Eigenschaften definiert.

 - oder -

 Der angegebene Profileigenschaftenname ist im aktuellen Profil nicht vorhanden.

 - oder -

 Der Anbieter für die angegebene Profileigenschaft hat die angegebene Eigenschaft nicht erkannt.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyIsReadOnlyException">Es wurde versucht, einen Wert für eine Eigenschaft festzulegen, die als schreibgeschützt gekennzeichnet war.</exception>
        <exception cref="T:System.Configuration.SettingsPropertyWrongTypeException">Es wurde versucht, einer Eigenschaft mit einem nicht kompatiblen Typ einen Wert zuzuweisen.</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileBase.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.Web.Profile.ProfileBase.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Benutzernamen für das Profil ab.</summary>
        <value>Der Benutzername für das Profil oder der dem Profil zugewiesene Bezeichner für anonyme Benutzer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.Profile.ProfileBase.UserName%2A> Eigenschaft gibt entweder den Namen des authentifizierten Benutzers zurück, dem das Profil zugeordnet ist, oder den anonymen Benutzer Bezeichner, der dem Profil zugewiesen ist, wenn die- <xref:System.Web.Profile.ProfileBase.IsAnonymous%2A> Eigenschaft ist `true` .

 Der anonyme Zugriff auf das Benutzerprofil wird mit dem Konfigurations Abschnitt " [anonymousidentifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifitifi-](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/91ka2e6a(v%3dvs.100)) " und dem Attribut " [zufüge](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164646(v%3dvs.100))

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/2y3fs9xs(v=vs.100)">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
  </Members>
</Type>
