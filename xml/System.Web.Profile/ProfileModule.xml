<Type Name="ProfileModule" FullName="System.Web.Profile.ProfileModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ec1c2259b1472edf29b8e1c9176eb64b118bc79a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36398633" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProfileModule : System.Web.IHttpModule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProfileModule extends System.Object implements class System.Web.IHttpModule" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileModule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProfileModule&#xA;Implements IHttpModule" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileModule sealed : System::Web::IHttpModule" />
  <TypeSignature Language="F#" Value="type ProfileModule = class&#xA;    interface IHttpModule" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.IHttpModule</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Verwaltet die Erstellung des Benutzerprofils und von Profilereignissen. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET wird verwendet, wenn das Benutzerprofil aktiviert ist, die <xref:System.Web.Profile.ProfileModule> das Benutzerprofil erstellen und speichern ihn in die <xref:System.Web.HttpContext.Profile%2A> Eigenschaft des aktuellen <xref:System.Web.HttpContext>.  
  
 Die <xref:System.Web.Profile.ProfileModule> macht die folgenden Ereignisse können Sie behandeln, um die Authentifizierung in Ihrer Anwendung zu konfigurieren:  
  
-   Die <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> Ereignis, um die profileinstellungen aus einem anonymen Profil in einem Profil für einen authentifizierten migrieren, wenn ein anonymer Benutzer anmeldet.  
  
-   Die <xref:System.Web.Profile.ProfileModule.Personalize> Ereignis, um anzupassen, wie das Benutzerprofil erstellt wird.  
  
-   Die <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis, um zu steuern, wie das Benutzerprofil gespeichert wird die <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> -Eigenschaftensatz auf `true`.  
  
 Informationen zum Aktivieren des Benutzerprofils finden Sie unter [Element ((ASP.NET Settings Schema) ein Profil erstellen](http://msdn.microsoft.com/library/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Datei "Web.config", mit der anonyme Identifikation und Profileigenschaften, die anonyme Benutzer unterstützen.  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Das folgende Codebeispiel zeigt die <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> Ereignis in der Datei "Global.asax" für eine ASP.NET-Anwendung enthalten. Die <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> Ereignis kopiert Profileigenschaftswerte aus das anonyme Profil, um das Profil für den aktuellen Benutzer.  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Profile.ProfileModule" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird nicht von Anwendungscode aufgerufen werden soll.  
  
 Ein <xref:System.Web.HttpApplication> wird erstellt, wenn eine ASP.NET-Anwendung gestartet wird. Die <xref:System.Web.HttpApplication> Aufrufe der <xref:System.Web.Profile.ProfileModule> Konstruktor zur Erstellung der <xref:System.Web.Profile.ProfileModule> für die Anwendung. Die <xref:System.Web.Profile.ProfileModule> in der Konfiguration für eine Anwendung angegeben ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="profileModule.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.Web.Profile.ProfileModule" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird nicht von Anwendungscode aufgerufen werden soll.  
  
 Ein <xref:System.Web.HttpApplication> wird erstellt, wenn eine ASP.NET-Anwendung gestartet wird. Die <xref:System.Web.HttpApplication> erstellt und initialisiert die <xref:System.Web.Profile.ProfileModule> für die Anwendung und ruft die <xref:System.Web.Profile.ProfileModule.Dispose%2A> Methode, wenn das Objekt freigegeben wird. Die <xref:System.Web.Profile.ProfileModule> in der Konfiguration für eine Anwendung angegeben ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Init">
      <MemberSignature Language="C#" Value="public void Init (System.Web.HttpApplication app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Init(class System.Web.HttpApplication app) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Init (app As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Init(System::Web::HttpApplication ^ app);" />
      <MemberSignature Language="F#" Value="abstract member Init : System.Web.HttpApplication -&gt; unit&#xA;override this.Init : System.Web.HttpApplication -&gt; unit" Usage="profileModule.Init app" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.IHttpModule.Init(System.Web.HttpApplication)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="app">Die aktuelle Anwendung.</param>
        <summary>Ruft den Initialisierungscode auf, wenn ein <see cref="T:System.Web.Profile.ProfileModule" />-Objekt erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird nicht von Anwendungscode aufgerufen werden soll.  
  
 Ein <xref:System.Web.HttpApplication> wird erstellt, wenn eine ASP.NET-Anwendung gestartet wird. Die <xref:System.Web.HttpApplication> Aufrufe der <xref:System.Web.Profile.ProfileModule.Init%2A> Methode, wenn er erstellt die <xref:System.Web.Profile.ProfileModule> für die Anwendung. Die <xref:System.Web.Profile.ProfileModule> in der Konfiguration für eine Anwendung angegeben ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MigrateAnonymous">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.MigrateAnonymous" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MigrateAnonymous As ProfileMigrateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileMigrateEventHandler ^ MigrateAnonymous;" />
      <MemberSignature Language="F#" Value="member this.MigrateAnonymous : System.Web.Profile.ProfileMigrateEventHandler " Usage="member this.MigrateAnonymous : System.Web.Profile.ProfileMigrateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileMigrateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der anonyme Benutzer für ein Profil anmeldet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie erreichen die <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> -Ereignis für die <xref:System.Web.Profile.ProfileModule> Klasse in der Datei "Global.asax", damit Ihre ASP.NET-Anwendung mithilfe der `Profile_MigrateAnonymous` globale Ereignis, wie im Beispiel in diesem Thema gezeigt.  
  
 Sie können die <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> Ereignis Profileigenschaft kopieren aus einem anonymen Profil in ein authentifiziertes Profil Werte, wenn eines Benutzers die Anwendung anonym verwendet hat.  
  
 Wenn eine Anwendung mit aktiviertem Benutzerprofil gestartet wird, erstellt ASP.NET eine neue Klasse des Typs `ProfileCommon`, erbt von der <xref:System.Web.Profile.ProfileBase> Klasse. Stark typisierte Accessoren werden hinzugefügt, um die `ProfileCommon` Klasse für jede Eigenschaft in den Konfigurationsabschnitt definiert. Ein `GetProfile` Methode können Sie zum Abrufen einer `ProfileCommon` Objekt basierend auf einem Benutzernamen. Sie können die `GetProfile` Methode des aktuellen authentifizierten Profils die Eigenschaftswerte für das anonyme Profil abrufen. Die anonyme Eigenschaftswerte können dann auf das aktuelle Profil für den authentifizierten Benutzer kopiert werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine Datei "Web.config", mit der anonyme Identifikation und Profileigenschaften, die anonyme Benutzer unterstützen.  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx" name=".ASPXFORMSAUTH" />  
    </authentication>  
  
    <anonymousIdentification enabled="true" />  
  
    <profile enabled="true" defaultProvider="AspNetSqlProvider">  
      <properties>  
        <add name="ZipCode" allowAnonymous="true" />  
        <add name="CityAndState" allowAnonymous="true" />  
        <add name="StockSymbols" type="System.Collections.ArrayList" allowAnonymous="true" />  
      </properties>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Das folgende Codebeispiel zeigt die <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> Ereignis in der Datei "Global.asax" für eine ASP.NET-Anwendung enthalten. Die <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> Ereignis kopiert Profileigenschaftswerte aus das anonyme Profil, um das Profil für den aktuellen Benutzer.  
  
 [!code-csharp[System.Web.Profile.ProfileManager#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/global.asax#1)]
 [!code-vb[System.Web.Profile.ProfileManager#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Personalize">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileEventHandler Personalize;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileEventHandler Personalize" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.Personalize" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Personalize As ProfileEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileEventHandler ^ Personalize;" />
      <MemberSignature Language="F#" Value="member this.Personalize : System.Web.Profile.ProfileEventHandler " Usage="member this.Personalize : System.Web.Profile.ProfileEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, bevor das Benutzerprofil erstellt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileModule.Personalize> Ereignis wird ausgelöst, während die <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=nameWithType> Ereignis. Sie erreichen die <xref:System.Web.Profile.ProfileModule.Personalize> -Ereignis für die <xref:System.Web.Profile.ProfileModule> Klasse in der Datei "Global.asax" für Ihre ASP.NET-Anwendung mit der `Profile_Personalize` globale Ereignis wie im Beispiel in diesem Thema gezeigt.  
  
 Sie können die <xref:System.Web.Profile.ProfileModule.Personalize> Ereignis, um ein benutzerdefiniertes Profil angegeben. Wenn die <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType> für die angegebene Eigenschaftswert der <xref:System.Web.Profile.ProfileEventHandler> -Ereignishandler für die <xref:System.Web.Profile.ProfileModule.Personalize> Ereignis auf einen Wert, der nicht festgelegt ist `null` bei der <xref:System.Web.Profile.ProfileModule.Personalize> Ereignis endet, wird das <xref:System.Web.Profile.ProfileModule> verwendet den angegebenen Wert von der <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=nameWithType> Eigenschaft als Wert für die <xref:System.Web.HttpContext.Profile%2A> Eigenschaft des aktuellen <xref:System.Web.HttpContext>.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die <xref:System.Web.Profile.ProfileModule.Personalize> Ereignis deklariert wird, in der Datei "Global.asax" einer Anwendung. Der Ereigniscode lädt ein Benutzerprofil für einen Benutzer basierend auf der Rollenmitgliedschaft.  
  
 [!code-csharp[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/CS/global.asax#12)]
 [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.Personalize/VB/global.asax#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileAutoSaving">
      <MemberSignature Language="C#" Value="public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving" />
      <MemberSignature Language="DocId" Value="E:System.Web.Profile.ProfileModule.ProfileAutoSaving" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ProfileAutoSaving As ProfileAutoSaveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Profile::ProfileAutoSaveEventHandler ^ ProfileAutoSaving;" />
      <MemberSignature Language="F#" Value="member this.ProfileAutoSaving : System.Web.Profile.ProfileAutoSaveEventHandler " Usage="member this.ProfileAutoSaving : System.Web.Profile.ProfileAutoSaveEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileAutoSaveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt am Schluss der Seitenausführung auf, wenn das automatische Speichern von Profilen aktiviert ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis wird am Ende der seitenausführung ausgelöst, wenn die <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=nameWithType> Eigenschaft ist `true`. Sie erreichen die <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> -Ereignis für die <xref:System.Web.Profile.ProfileModule> Klasse in der Datei "Global.asax" für Ihre ASP.NET-Anwendung mit der `Profile_ProfileAutoSaving` globale Ereignis, wie im Beispiel in diesem Thema gezeigt.  
  
 Die <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=nameWithType> -Methode überprüft die <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> Eigenschaftswert für die einzelnen <xref:System.Configuration.SettingsPropertyValue> im Benutzerprofil, um zu bestimmen, ob Eigenschaften, primitive Typen, Zeichenfolgen, bestehend aus oder <xref:System.DateTime> Objekte geändert wurden. Die <xref:System.Configuration.SettingsBase.Save%2A> Methode kann nicht explizit zu ermitteln, ob eine benutzerdefinierte Klasse geändert hat. Sie können die <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis, um zu bestimmen, ob ein benutzerdefiniertes Objekt geändert wurde, und klicken Sie dann entweder den automatischen fortsetzen für geänderte Objekte speichern oder um den automatischen Speichervorgang abzubrechen, wenn keine Objekte geändert wurden.  
  
 Legen Sie zum Abbrechen des automatischen Profile Speichervorgang der <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> Eigenschaft, um `false` in der <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis; andernfalls festgelegt die <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> Eigenschaft `true`.  
  
 Möglicherweise gibt es mehrere Abonnenten für die <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis. Die <xref:System.Web.Profile.ProfileModule> wird verwendet den letzten Wert, der die <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> Eigenschaft auf festgelegt ist. Es wird daher empfohlen, dass Sie explizit festlegen, die <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> Eigenschaft in der <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis an, ob Sie Abbrechen oder Fortsetzen der automatische Speichern, wie Sie möglicherweise den von einem früheren Abonnenten festgelegten Wert überschreiben müssen.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Ereignis in der Datei "Global.asax" für eine ASP.NET-Anwendung enthalten.  
  
 [!code-csharp[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/CS/global.asax#11)]
 [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager.ProfileAutoSaving/VB/global.asax#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>