<Type Name="ProfileManager" FullName="System.Web.Profile.ProfileManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8daea582602ffc27d9592b3c1bfff0b33f9f6de2" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70619022" /></Metadata><TypeSignature Language="C#" Value="public static class ProfileManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet Benutzerprofildaten und Einstellungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das ASP.NET-Profil wird verwendet, um Benutzereinstellungen in einer Datenquelle, z. b. einer-Datenbank, zu speichern und abzurufen. Der Zugriff auf das Benutzerprofil erfolgt <xref:System.Web.HttpContext.Profile%2A> mithilfe der-Eigenschaft <xref:System.Web.HttpContext>der aktuellen. Profilinformationen und Eigenschaftswerte werden mit einem Profil Anbieter verwaltet.  
  
 Die <xref:System.Web.Profile.ProfileManager> -Klasse wird verwendet, um Profileinstellungen zu verwalten, nach Benutzerprofilen zu suchen und Benutzerprofile zu löschen, die nicht mehr verwendet werden. Die <xref:System.Web.Profile.ProfileManager> -Klasse stellt statische Methoden und Eigenschaften bereit, auf die Sie zugreifen können <xref:System.Web.Profile.ProfileManager> , indem Sie im Anwendungscode auf die-Klasse verweisen. Ein Beispiel finden Sie im Beispiel Abschnitt in diesem Thema und in den Themen für Member der <xref:System.Web.Profile.ProfileManager> -Klasse.  
  
 Standardmäßig ist das Benutzerprofil für alle ASP.NET-Anwendungen deaktiviert. Um das Benutzerprofil zu aktivieren, legen `enabled` Sie das-Attribut des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements auf true fest, wie im folgenden Beispiel gezeigt.  
  
```  
<configuration>  
  <system.web>  
    <profile enabled="true" />  
  </system.web>  
</configuration>  
```  
  
 Weitere Informationen zum Benutzerprofil finden Sie unter [ASP.NET Profile Properties Overview](https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d).  
  
 Ein Profil Anbieter wird verwendet, um Eigenschaften im Benutzerprofil zu speichern und abzurufen. Die .NET Framework enthält eine <xref:System.Web.Profile.SqlProfileProvider> -Klasse, die Benutzerprofil Eigenschaften in einer SQL Server-Datenbank speichert. Eine <xref:System.Web.Profile.SqlProfileProvider> -Instanz `AspNetSqlProvider` mit dem Namen wird in der Computerkonfiguration als Standardprofil Anbieter angegeben. Die `AspNetSqlProvider` -Instanz stellt eine Verbindung mit der SQL Server-Datenbank auf dem lokalen Webserver her. Sie können einen angeben <xref:System.Web.Profile.SqlProfileProvider> , der eine Verbindung mit einem anderen SQL Server als Standardprofil Anbieter herstellt, indem Sie das [Provider](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164654(v%3dvs.100)) -Konfigurationselement und das `defaultProvider` -Attribut des [profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Configuration-Elements verwenden, wie im folgenden dargestellt: Beispiel.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die <xref:System.Web.Profile.ProfileManager> die-Klasse zum Verwalten inaktiver Profile verwendet.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
  </Docs>
  <Members>
    <Member MemberName="AddDynamicProfileProperty">
      <MemberSignature Language="C#" Value="public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDynamicProfileProperty(class System.Web.Configuration.ProfilePropertySettings property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDynamicProfileProperty (property As ProfilePropertySettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDynamicProfileProperty(System::Web::Configuration::ProfilePropertySettings ^ property);" />
      <MemberSignature Language="F#" Value="static member AddDynamicProfileProperty : System.Web.Configuration.ProfilePropertySettings -&gt; unit" Usage="System.Web.Profile.ProfileManager.AddDynamicProfileProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Web.Configuration.ProfilePropertySettings" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="property">Die Eigenschafteneinstellungen, die hinzugefügt werden sollen.</param>
        <summary>Fügt eine Profileigenschaft programmgesteuert hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist funktional äquivalent zum Hinzufügen der-Eigenschaft `profile` zum-Abschnitt der Konfigurationsdatei. Um diese Methode zum Hinzufügen der Profil Eigenschaft aufzurufen, müssen Sie den-Befehl in einer Methode durchführen, <xref:System.Web.PreApplicationStartMethodAttribute> die mit dem-Attribut markiert ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Anwendung ab, für die Profilinformationen gespeichert und abgerufen werden sollen, oder legt diesen fest.</summary>
        <value>Der Name der Anwendung, für die Profilinformationen gespeichert und abgerufen werden sollen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Profile.ProfileManager> verwendet die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> -Eigenschaft, um Profilinformationen verschiedenen Anwendungen zuzuordnen. Dadurch können mehrere Anwendungen die gleiche Datenbank verwenden, um Benutzerinformationen zu speichern, ohne dass Konflikte zwischen doppelten Benutzern auftreten. Mehrere ASP.NET-Anwendungen können dieselbe Benutzerdatenbank verwenden, indem Sie denselben Wert in der <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> -Eigenschaft angeben. Die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> -Eigenschaft kann Programm gesteuert festgelegt werden, oder Sie kann mithilfe des `applicationName` -Attributs deklarativ in der Konfigurationsdatei für die-Webanwendung festgelegt werden.  
  
 Wenn in der Konfigurationsdatei für die Webanwendung kein Wert für das `applicationName` -Attribut angegeben ist, verwenden die im .NET Framework enthaltenen Profil Anbieter den <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> -Eigenschafts Wert für ASP.NET-Anwendungen. Bei Non-ASP.NET-Anwendungen ist der Standardwert der <xref:System.Diagnostics.ProcessModule.ModuleName%2A> Eigenschafts Wert, ohne die Dateierweiterung.  
  
 Die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> -Eigenschaft macht <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=nameWithType> die-Eigenschaft des Standardprofil Anbieters verfügbar. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, können Sie mit einem anderen Anwendungsnamen konfiguriert werden. Wenn Sie auf den Anwendungsnamen eines anderen Profil Anbieters als dem Standardanbieter zugreifen möchten, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und greifen Sie direkt auf die <xref:System.Configuration.SettingsProvider.ApplicationName%2A> -Eigenschaft des Anbieters zu.  
  
> [!CAUTION]
>  Da eine einzelne Standardprofil Anbieter-Instanz für alle Anforderungen verwendet wird, die von einem <xref:System.Web.HttpApplication> Objekt bereitgestellt werden, können mehrere Anforderungen gleichzeitig ausgeführt werden, und <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> es wird versucht, den Eigenschafts Wert festzulegen. Die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> -Eigenschaft ist für mehrere Schreibvorgänge nicht Thread sicher, und <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> eine Änderung des Eigenschafts Werts kann zu unerwartetem Verhalten bei mehreren Benutzern einer Anwendung führen. Es wird empfohlen, dass Sie das Schreiben von Code vermeiden, mit dem <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Benutzer die Eigenschaft festlegen können, sofern Sie Sie nicht benötigen. Ein Beispiel für eine Anwendung, in der <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> die-Eigenschaft festgelegt werden kann, ist eine administrative Anwendung, die Profildaten für mehrere Anwendungen verwaltet. Eine solche Anwendung sollte eine Einzelbenutzer Anwendung und keine Webanwendung sein.  
  
   
  
## Examples  
 Der folgende Konfigurationsdatei Auszug zeigt das [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Element im Abschnitt " [System. Web](~/docs/framework/configure-apps/file-schema/web/system-web-element-web-settings.md) " der Datei "Web. config" für eine ASP.NET-Anwendung. Der Standardprofil Anbieter der Anwendung wird auf eine <xref:System.Web.Profile.SqlProfileProvider> -Instanz festgelegt, und der <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> wird auf `MyApplication`festgelegt.  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
  <add name="SqlProvider"  
    type="System.Web.Profile.SqlProfileProvider"  
    connectionStringName="SqlServices"  
    applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSaveEnabled">
      <MemberSignature Language="C#" Value="public static bool AutomaticSaveEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutomaticSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AutomaticSaveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutomaticSaveEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticSaveEnabled : bool" Usage="System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Benutzerprofil automatisch am Ende der Ausführung einer ASP.NET-Seite gespeichert wird.</summary>
        <value><see langword="true" />, wenn das Benutzerprofil am Ende der Ausführung einer ASP.NET-Seite automatisch gespeichert wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> -Eigenschaft gibt an, ob das automatische Speichern des Benutzerprofils für die Anwendung aktiviert ist. Wenn das automatische Speichern aktiviert ist, <xref:System.Web.Profile.ProfileModule> löst das- <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> Objekt das-Ereignis <xref:System.Web.Profile.ProfileBase.Save%2A> aus und ruft <xref:System.Web.HttpApplication.EndRequest> die-Methode während des-Ereignisses am Ende der Ausführung einer ASP.NET-Seite auf.  
  
 Die <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> -Eigenschaft wird mithilfe des `automaticSaveEnabled` -Attributs des [profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) -Elements in der Datei Web. config für eine ASP.NET-Anwendung festgelegt.  
  
   
  
## Examples  
 Der folgende Konfigurationsdatei Auszug zeigt das [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Element im Abschnitt " [System. Web](~/docs/framework/configure-apps/file-schema/web/system-web-element-web-settings.md) " der Datei "Web. config" für eine ASP.NET-Anwendung. Er gibt den Standardprofil Anbieter der Anwendung für eine <xref:System.Web.Profile.SqlProfileProvider> -Instanz an und `automaticSaveEnabled` legt das `true`-Attribut auf fest.  
  
```  
<profile enabled="true"  
  automaticSaveEnabled="true"  
  defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Es wurde versucht, den <see cref="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />-Eigenschaftswert ohne mindestens die Berechtigung <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> abzurufen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member DeleteInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme Profile, authentifizierte Profile oder beide Profilarten gelöscht werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <summary>Löscht Benutzerprofildaten, bei denen das Datum der letzten Aktivität vor dem angegebenen Datum und der angegeben Uhrzeit liegt.</summary>
        <returns>Die Anzahl der aus der Datenquelle gelöschten Profile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> -Methode wird verwendet, um nicht verwendete Profildaten aus der Datenquelle für die Anwendung zu `applicationName` entfernen, die durch das-Attribut in der Konfigurationsdatei angegeben wird. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen. Von den gesuchten Profilen wird jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> , das am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert vorkommt, gelöscht.  
  
 Die <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, werden die Profilinformationen in der anderen Datenquelle nicht gelöscht. Um inaktive Profile zu löschen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die inaktive Profile verwaltet. Es wird eine Schaltfläche bereitgestellt, um alle Profile zu löschen, die für die angegebene Anzahl von Tagen nicht verwendet wurden und daher als inaktiv angesehen werden.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfile">
      <MemberSignature Language="C#" Value="public static bool DeleteProfile (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteProfile(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfile (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteProfile(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteProfile : string -&gt; bool" Usage="System.Web.Profile.ProfileManager.DeleteProfile username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für das Profil, das gelöscht werden soll.</param>
        <summary>Löscht das Profil für den angegebenen Benutzernamen aus der Datenquelle.</summary>
        <returns><see langword="true" />, wenn das Benutzerprofil gefunden und gelöscht wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> -Methode löscht alle Profilinformationen und-Eigenschaften für das Benutzerprofil für `username` den angegebenen aus der Datenquelle für <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>den angegebenen.  
  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> -Methode <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> Ruft die-Methode des Standardprofil Anbieters auf, um den Löschvorgang auszuführen. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, werden Sie nicht gelöscht. Um Profil Eigenschaften zu löschen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die inaktive Profile verwaltet. Die <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> -Methode wird aufgerufen, wenn ein einzelnes Profil zum Löschen ausgewählt wird. Ob ein Profil als inaktiv betrachtet wird, basiert auf dem Datum, `userInactiveSinceDate` das für den an die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> Methode übergebenen Parameterwert angegeben wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteProfilecs.aspx#10)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteProfilevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist eine leere Zeichenfolge ("") oder enthält ein Komma.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht Profileigenschaften und Informationen aus der Datenquelle für eine angegebene Liste von Profilen.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : string[] -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles usernames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Ein Zeichenfolgenarray der Benutzernamen für Profile, die gelöscht werden sollen.</param>
        <summary>Löscht Profileigenschaften und Informationen für die angegebene Liste von Benutzernamen.</summary>
        <returns>Die Anzahl der aus der Datenquelle gelöschten Profile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> -Methode löscht alle Profilinformationen und-Eigenschaften für die angegebenen Profile aus der Datenquelle für die Anwendung, <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> die durch die-Eigenschaft angegeben wird. Die Liste der zu löschenden Profile wird als Zeichen folgen Array mit Benutzernamen angegeben. Wenn Profil Eigenschaften und-Informationen in der Datenquelle für einen Benutzernamen im `usernames` -Parameter vorhanden sind, werden Sie gelöscht.  
  
 Der Rückgabewert kann sich von der Länge des angegebenen Arrays von `usernames`unterscheiden. Dies weist darauf hin, dass einige Profile im angegebenen Array von `usernames` bereits aus dem Datenspeicher gelöscht wurden.  
  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, werden Sie nicht gelöscht. Um Profil Eigenschaften zu löschen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die inaktive Profile verwaltet. Ein <xref:System.Web.UI.WebControls.GridView> Steuerelement zeigt die zurückgegebenen inaktiven Profile an. Jede Zeile des <xref:System.Web.UI.WebControls.GridView> -Steuer Elements enthält eine Schaltfläche, mit der das Profil für diese Zeile aus der Datenquelle mit einem <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> aufzurufenden-Methode gelöscht wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Länge von <paramref name="usernames" /> ist 0 (null).  
  
- oder - 
Eines der Elemente in <paramref name="usernames" /> ist eine leere Zeichenfolge ("") oder enthält ein Komma.  
  
- oder - 
Zwei oder mehr Elemente in <paramref name="usernames" /> verfügen über den gleichen Wert.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernames" /> ist <see langword="null" />.  
  
- oder - 
Eines der Elemente in <paramref name="usernames" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : System.Web.Profile.ProfileInfoCollection -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles profiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Profilinformationen für Profile enthält, die gelöscht werden sollen.</param>
        <summary>Löscht Profileigenschaften und Informationen aus der Datenquelle für die angegebene Liste von Profilen.</summary>
        <returns>Die Anzahl der aus der Datenquelle gelöschten Profile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> -Methode löscht alle Profilinformationen und-Eigenschaften für die angegebenen Profile aus der Datenquelle für die Anwendung, <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> die durch die-Eigenschaft angegeben wird. Die Liste der zu löschenden Profile wird mit einem <xref:System.Web.Profile.ProfileInfoCollection> angegeben, der `profiles` als-Parameter übergeben wird. Eine <xref:System.Web.Profile.ProfileInfoCollection> kann von den <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>Methoden, <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>und <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> zurückgegeben werden.  
  
 Beachten Sie, dass der Rückgabewert möglicherweise <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> vom Wert für den <xref:System.Web.Profile.ProfileInfoCollection>angegebenen abweicht. Dies weist darauf hin, dass einige der Profile im <xref:System.Web.Profile.ProfileInfoCollection> angegebenen bereits aus dem Datenspeicher gelöscht wurden.  
  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=nameWithType> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, werden Sie nicht gelöscht. Um Profil Eigenschaften zu löschen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann ein Benutzer mithilfe der-Methode und der <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> - <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methode nach Profilen suchen. Der Benutzer kann dann die zurückgegebenen Profile mithilfe eines Aufrufens <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> der-Methode löschen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="profiles" /> verfügt über einen <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" />-Wert von 0 (null).  
  
- oder - 
Eines der <see cref="T:System.Web.Profile.ProfileInfo" />-Objekte in <paramref name="profiles" /> weist einen <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> auf, der eine leere Zeichenfolge ("") ist oder ein Komma enthält.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="profiles" /> ist <see langword="null" />.  
  
- oder - 
Eines der <see cref="T:System.Web.Profile.ProfileInfo" />-Objekte in <paramref name="profiles" /> hat einen <see cref="P:System.Web.Profile.ProfileInfo.UserName" />, der <see langword="null" /> ist.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool" Usage="System.Web.Profile.ProfileManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Benutzerprofil für die Anwendung aktiviert ist.</summary>
        <value><see langword="true" />, wenn das Benutzerprofil aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Benutzerprofil ist für eine Anwendung aktiviert, indem `enabled` das-Attribut des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements verwendet wird.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird das [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Element im Abschnitt " [System. Web](~/docs/framework/configure-apps/file-schema/web/system-web-element-web-settings.md) " der Datei "Web. config" für eine ASP.NET-Anwendung gezeigt, in der das Benutzerprofil aktiviert ist.  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInactiveProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Profilinformationen für Profile ab, bei denen das Datum der letzten Aktivität am oder vor einem angegebenen Datum und einer angegebenen Uhrzeit liegt und bei denen der Benutzername des Profils einem angegebenen Namen entspricht.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <summary>Ruft Profilinformationen für alle Profile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum und der angegebenen Uhrzeit liegt und bei denen der Benutzername des Profils dem angegebenen Namen entspricht.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für inaktive Profile enthält, in denen der Benutzername dem angegebenen <paramref name="usernameToMatch" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> -Methode wird verwendet, um Profilinformationen für alle nicht verwendeten Benutzerprofile für die Anwendung abzurufen `applicationName` , die durch das-Attribut in der Konfigurationsdatei angegeben wird. Diese Methode ruft nur Profile ab, für die der Benutzername des Profils mit `usernameToMatch` dem angegebenen Parameterwert übereinstimmt. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen. Von den gesuchten Profilen wird jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> -Wert zurückgegeben, der am `userInactiveSinceDate` oder vor dem angegebenen Parameterwert auftritt.  
  
 Sie können diese Informationen in Datenseiten abrufen, indem Sie die-über <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> Ladung für die- `pageIndex` Methode `pageSize` verwenden, die zusätzliche-und-Parameter annimmt.  
  
> [!NOTE]
>  Der `usernameToMatch` Profil Anbieter unterstützt möglicherweise Platzhalter Zeichen im Parameter. Die <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> -Methode <xref:System.Web.Profile.SqlProfileProvider> der-Klasse `usernameToMatch` unterstützt z. b. Platzhalter Zeichen im-Parameter.  
  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=nameWithType> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, wird die Datenquelle für den anderen Profil Anbieter nicht durchsucht. Um inaktive Profile zu suchen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann ein Benutzer einen `usernameToMatch` Wert und einen <xref:System.Web.Profile.ProfileAuthenticationOption> -Enumerationswert angeben und Profilinformationen für alle übereinstimmenden profile abrufen. Im Beispiel kann der Benutzer angeben, ob nur inaktive Profile zurückgegeben werden sollen. Wenn der Benutzer nur inaktive Profile angibt, <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> wird die-Methode aufgerufen; andernfalls <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> wird die-Methode aufgerufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge ("").</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Werte, der angibt, ob anonyme Profile, authentifizierte Profile oder beide Profilarten zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <param name="pageIndex">Der Index der zurückgegebenen Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Diese Methode enthält bei der Rückgabe eine ganze Zahl, die die Gesamtanzahl von Profilen bezeichnet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft Profilinformationen in Datenseiten für Profile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum und der angegebenen Uhrzeit liegt und bei denen der Benutzername des Profils dem angegebenen Namen entspricht.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für inaktive Profile enthält, in denen der Benutzername dem angegebenen <paramref name="usernameToMatch" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> -Methode wird verwendet, um Profilinformationen für nicht verwendete Benutzerprofile für die Anwendung abzurufen `applicationName` , die durch das-Attribut in der Konfigurationsdatei angegeben wird. Diese Methode ruft nur Profile ab, für die der Benutzername mit dem `usernameToMatch` angegebenen Parameterwert übereinstimmt. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen. Von den gesuchten Profilen wird jedes Profil zurückgegeben, das ein <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> -Wert aufweist, der am oder `userInactiveSinceDate` vor dem angegebenen Parameterwert liegt.  
  
 Die von <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> zurückgegebenen Ergebnisse werden durch den- `pageSize` Parameter und den `pageIndex` -Parameter eingeschränkt. Der `pageSize` -Parameter identifiziert die maximale Anzahl <xref:System.Web.Profile.ProfileInfo> von-Objekten, die <xref:System.Web.Profile.ProfileInfoCollection> in der Auflistung zurückgegeben werden sollen. Der `pageIndex` -Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll. 0 identifiziert die erste Seite. Der `totalRecords` -Parameter ist `out` ein Parameter, der auf die Gesamtzahl der inaktiven Benutzerprofile für die `applicationName`konfigurierte festgelegt `authenticationOption` wird `userInactiveSinceDate` , basierend auf den Parametern und. Wenn z. b. 13 Benutzer für den konfigurierten `applicationName`vorhanden sind und `pageIndex` der Wert 1 mit einem `pageSize` von 5 ist, <xref:System.Web.Profile.ProfileInfoCollection> enthält die zurückgegebene die sechste bis zehnte inaktive Profile. Der `totalRecords` -Parameter wird auf 13 festgelegt.  
  
 Beachten Sie, dass Ihr Profil Anbieter Platzhalter Zeichen im `usernameToMatch` -Parameter unterstützen kann. Die <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> -Methode <xref:System.Web.Profile.SqlProfileProvider> der-Klasse `usernameToMatch` unterstützt z. b. Platzhalter Zeichen im-Parameter.  
  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, wird die Datenquelle für den anderen Profil Anbieter nicht durchsucht. Um inaktive Profile zu suchen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann ein Benutzer einen `usernameToMatch` Wert und einen <xref:System.Web.Profile.ProfileAuthenticationOption> Wert angeben und Profilinformationen für alle übereinstimmenden profile abrufen. Im Beispiel kann der Benutzer angeben, ob inaktive Profile exklusiv zurückgegeben werden sollen. Wenn der Benutzer nur inaktive Profile angibt, <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> wird die-Methode aufgerufen; andernfalls <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> wird die-Methode aufgerufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.  
  
- oder - 
 <paramref name="pageIndex" /> multipliziert mit <paramref name="pageSize" /> ist größer als<see cref="F:System.Int32.MaxValue" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Profilinformationen für Profile ab, bei denen der Benutzername mit einem angegebenen Namen übereinstimmt.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <summary>Ruft alle Profilinformationen für Profile ab, bei denen der Benutzername mit dem angegebenen Namen übereinstimmt.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für Profile enthält, in denen der Benutzername dem angegebenen <paramref name="usernameToMatch" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> -Methode gibt eine Liste aller Profilinformationen zurück, für die der Benutzername mit `usernameToMatch` dem angegebenen Parameterwert für <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> den konfigurierten Eigenschafts Wert übereinstimmt. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen.  
  
 Sie können Profilinformationen für Benutzerprofile in Datenseiten abrufen, indem Sie die-über <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> Ladung für die- `pageIndex` Methode `pageSize` verwenden, die zusätzliche-und-Parameter annimmt.  
  
 Beachten Sie, dass Ihr Profil Anbieter Platzhalter Zeichen im `usernameToMatch` -Parameter unterstützen kann. Die <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> -Methode <xref:System.Web.Profile.SqlProfileProvider> der-Klasse `usernameToMatch` unterstützt z. b. Platzhalter Zeichen im-Parameter.  
  
 Die <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, wird die Datenquelle für den anderen Profil Anbieter nicht durchsucht. Um Profile zu suchen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann ein Benutzer einen `usernameToMatch` Wert und einen <xref:System.Web.Profile.ProfileAuthenticationOption> -Enumerationswert angeben und Profilinformationen für alle übereinstimmenden profile abrufen. Im Beispiel kann der Benutzer angeben, ob inaktive Profile exklusiv zurückgegeben werden sollen. Wenn der Benutzer nur inaktive Profile angibt, <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> wird die-Methode aufgerufen; andernfalls <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> wird die-Methode aufgerufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge ("").</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="pageIndex">Der Index der zurückgegebenen Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Diese Methode enthält bei der Rückgabe eine ganze Zahl, die die Gesamtanzahl von Profilen bezeichnet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft Profilinformationen in Datenseiten für Profile ab, bei denen der Benutzername mit dem angegebenen Namen übereinstimmt.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für Profile enthält, in denen der Benutzername dem angegebenen <paramref name="usernameToMatch" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> -Methode gibt eine Liste mit Profilinformationen zurück, für die der Benutzername des `usernameToMatch` Profils mit dem angegebenen Parameter <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>Wert der konfigurierten übereinstimmt. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen.  
  
 Beachten Sie, dass Ihr Profil Anbieter Platzhalter Zeichen im `usernameToMatch` -Parameter unterstützen kann. Die <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> -Methode <xref:System.Web.Profile.SqlProfileProvider> der-Klasse `usernameToMatch` unterstützt z. b. Platzhalter Zeichen im-Parameter.  
  
 Die von <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> zurückgegebenen Ergebnisse werden durch den- `pageSize` Parameter und den `pageIndex` -Parameter eingeschränkt. Der `pageSize` -Parameter gibt die maximale Anzahl <xref:System.Web.Profile.ProfileInfo> von-Objekten an, <xref:System.Web.Profile.ProfileInfoCollection>die in der zurückgegeben werden. Der `pageIndex` -Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll; NULL identifiziert die erste Seite. Der `totalRecords` -Parameter ist `out` ein Parameter, der auf die Gesamtzahl inaktiver Benutzerprofile für die Anwendung festgelegt wird `applicationName` , die durch das-Attribut in `authenticationOption`der Konfigurationsdatei auf Grundlage des angegebenen angegeben wird. Wenn z. b. 13 Benutzer für den konfigurierten `applicationName`vorhanden sind und `pageIndex` der Wert 1 mit einem `pageSize` von 5 ist, <xref:System.Web.Profile.ProfileInfoCollection> enthält die zurückgegebene das sechste bis zehnte Profil. Der `totalRecords` -Parameter wird auf 13 festgelegt.  
  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, wird die Datenquelle für den anderen Profil Anbieter nicht durchsucht. Um Profile zu suchen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann ein Benutzer einen `usernameToMatch` Wert und einen <xref:System.Web.Profile.ProfileAuthenticationOption> angeben und Profilinformationen für alle übereinstimmenden profile abrufen. Im Beispiel kann der Benutzer angeben, ob inaktive Profile exklusiv zurückgegeben werden sollen. Wenn der Benutzer nur inaktive Profile angibt, <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> wird die-Methode aufgerufen; andernfalls <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> wird die-Methode aufgerufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.  
  
- oder - 
 <paramref name="pageIndex" /> multipliziert mit <paramref name="pageSize" /> ist größer als<see cref="F:System.Int32.MaxValue" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllInactiveProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Benutzerprofildaten für Profile ab, bei denen das Datum der letzten Aktivität am oder vor einem angegebenen Datum und der angegeben Uhrzeit liegt.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <summary>Ruft alle Benutzerprofildaten für Profile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum und der angegeben Uhrzeit liegt.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen zu den inaktiven Profilen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> -Methode wird verwendet, um Profilinformationen aus der Datenquelle für alle nicht verwendeten Benutzerprofile für die Anwendung abzurufen `applicationName` , die durch das-Attribut in der Konfigurationsdatei angegeben wird. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen. Von den gesuchten Profilen wird jedes Profil zurückgegeben, das ein <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> -Wert aufweist, der am oder `userInactiveSinceDate` vor dem angegebenen Parameterwert liegt.  
  
 Sie können Profilinformationen für inaktive Benutzerprofile in Datenseiten abrufen, indem Sie die- <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> Überladung für die `pageIndex` - `pageSize` Methode verwenden, die zusätzliche-und-Parameter annimmt.  
  
 Die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, wird die Datenquelle für den anderen Profil Anbieter nicht durchsucht. Um nicht verwendete Profile zu suchen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die inaktive Profile verwaltet. Zum Löschen aller inaktiven Profile wird eine Schaltfläche bereitgestellt. Ob ein Profil als inaktiv betrachtet wird, basiert auf dem für den `userInactiveSinceDate` Parameter angegebenen Datum.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfiles2cs.aspx#7)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfiles2vb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <param name="pageIndex">Der Index der zurückgegebenen Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Diese Methode enthält bei der Rückgabe eine ganze Zahl, die die Gesamtanzahl von Profilen bezeichnet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft eine Seite von <see cref="T:System.Web.Profile.ProfileInfo" />-Objekten für Benutzerprofile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum und der angegeben Uhrzeit liegt.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen zu den inaktiven Profilen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> -Methode wird verwendet, um Profilinformationen aus der Datenquelle für nicht verwendete Benutzerprofile für die Anwendung abzurufen `applicationName` , die durch das-Attribut in der Konfigurationsdatei angegeben wird. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen. Von den gesuchten Profilen wird jedes Profil zurückgegeben, das ein <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> -Wert aufweist, der `userInactiveSinceDate` vor dem angegebenen Parameterwert liegt.  
  
 Die von <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> zurückgegebenen Ergebnisse werden durch den- `pageSize` Parameter und den `pageIndex` -Parameter eingeschränkt. Der `pageSize` -Parameter gibt die maximale Anzahl <xref:System.Web.Profile.ProfileInfo> von-Objekten an, <xref:System.Web.Profile.ProfileInfoCollection>die in der zurückgegeben werden. Der `pageIndex` -Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll; NULL identifiziert die erste Seite. Der `totalRecords` -Parameter ist `out` ein Parameter, der auf die Gesamtzahl der inaktiven Benutzerprofile für die `applicationName`konfigurierte festgelegt `authenticationOption` wird `userInactiveSinceDate` , basierend auf den Parametern und. Wenn z. b. 13 Benutzer für den konfigurierten `applicationName`vorhanden sind und `pageIndex` der Wert eins mit einem `pageSize` von 5 ist, <xref:System.Web.Profile.ProfileInfoCollection> enthält die zurückgegebene die sechste bis zehnte inaktive Profile. Der `totalRecords` -Parameter wird auf 13 festgelegt.  
  
 Die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, wird die Datenquelle für den anderen Profil Anbieter nicht durchsucht. Um Profile zu suchen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Webseite, die inaktive Profile verwaltet. Zum Löschen aller inaktiven Profile wird eine Schaltfläche bereitgestellt. Ob ein Profil als inaktiv betrachtet wird, basiert auf dem für den `userInactiveSinceDate` Parameter angegebenen Datum.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Benutzerprofildaten für Profile in der Datenquelle ab.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <summary>Ruft Benutzerprofildaten für Profile in der Datenquelle ab.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für alle Profile in der Datenquelle enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> -Methode wird verwendet, um Profilinformationen aus der Datenquelle für die Anwendung abzurufen, `applicationName` die durch das-Attribut in der Konfigurationsdatei angegeben wird. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen.  
  
 Sie können Seiten von <xref:System.Web.Profile.ProfileInfo> Objekten für Benutzerprofile abrufen, indem Sie die-Überladung für die `pageIndex` <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> Methode `pageSize` verwenden, die zusätzliche-und-Parameter annimmt.  
  
 Die <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, wird die Datenquelle für den anderen Profil Anbieter nicht durchsucht. Um Profile zu suchen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden Profilinformationen für alle Profile für den konfigurierten `applicationName`angezeigt.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles (authenticationOption, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="pageIndex">Der Index der zurückgegebenen Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Diese Methode enthält bei der Rückgabe eine ganze Zahl, die die Gesamtanzahl von Profilen bezeichnet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft Seiten von Benutzerprofildaten ab.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für alle Profile in der Datenquelle enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> -Methode wird verwendet, um Profilinformationen aus der Datenquelle für die Anwendung abzurufen, `applicationName` die durch das-Attribut in der Konfigurationsdatei angegeben wird. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen.  
  
 Die von <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> zurückgegebenen Ergebnisse werden durch den- `pageSize` Parameter und den `pageIndex` -Parameter eingeschränkt. Der `pageSize` -Parameter gibt die maximale Anzahl <xref:System.Web.Profile.ProfileInfo> von-Objekten an, <xref:System.Web.Profile.ProfileInfoCollection>die in der zurückgegeben werden. Der `pageIndex` -Parameter identifiziert, welche Ergebnisseite zurückgegeben werden soll; NULL identifiziert die erste Seite. Der `totalRecords` -Parameter ist `out` ein Parameter, der auf der Grundlage des angegebenen `authenticationOption`auf die Gesamtzahl der inaktiven Benutzerprofile für die konfigurierte `applicationName`festgelegt wird. Wenn z. b. 13 Benutzer für den konfigurierten `applicationName`vorhanden sind und `pageIndex` der Wert eins mit einem `pageSize` von 5 ist, <xref:System.Web.Profile.ProfileInfoCollection> enthält die zurückgegebene das sechste bis zehnte Profil. Der `totalRecords` -Parameter wird auf 13 festgelegt.  
  
 Die <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> -Methode ruft <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> die-Methode des Standardprofil Anbieters auf. Der Standardprofil Anbieter wird mithilfe des `defaultProvider` -Attributs des [Profil](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurations Elements angegeben. Wenn das Benutzerprofil Eigenschaften enthält, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, wird die Datenquelle für den anderen Profil Anbieter nicht durchsucht. Um Profile zu suchen, die von einem anderen Profil Anbieter als dem Standardanbieter verwaltet werden, rufen Sie mithilfe der <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft einen Verweis auf den Profil Anbieter ab, und rufen Sie die <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> -Methode des Anbieters direkt auf.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden Profilinformationen für alle Profile für den in Datenseiten `applicationName` konfigurierten angezeigt.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />-Objekt, das festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <summary>Ruft die Anzahl der Profile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum liegt.</summary>
        <returns>Die Anzahl der Profile in der Datenquelle, bei denen das Datum der letzten Aktivität vor dem angegebenen Datum und der angegeben Uhrzeit liegt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> -Methode wird verwendet, um die Anzahl aller nicht verwendeten Benutzerprofile aus der Datenquelle für die Anwendung abzurufen, die durch `applicationName` das-Attribut in der Konfigurationsdatei angegeben wird. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen. Von den gesuchten Profilen werden alle Profile gezählt <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> , deren-Wert am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert liegt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel kann ein Benutzerinformationen für aktive und inaktive Profile basierend auf Suchkriterien anzeigen und löschen. Die Anzahl inaktiver Profile wird mithilfe der Ergebnisse <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> der-Methode angezeigt.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfProfiles (authenticationOption As ProfileAuthenticationOption) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <summary>Ruft die Anzahl der Profile in der Datenquelle ab.</summary>
        <returns>Die Anzahl der Profile in der Datenquelle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetNumberOfProfiles%2A> -Methode wird verwendet, um die Anzahl aller Benutzerprofile aus der Datenquelle für die Anwendung abzurufen, die durch das `applicationName` -Attribut in der Konfigurationsdatei angegeben wird. Verwenden Sie `authenticationOption` den-Parameter, um anzugeben, ob nur anonyme Profile, nur authentifizierte Profile oder alle Profile durchsucht werden sollen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden Profilinformationen für alle Profile für den konfigurierten `applicationName` angezeigt. Außerdem wird die Anzahl der Profile zurückgegeben.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As ProfileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProvider ^ Provider { System::Web::Profile::ProfileProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Profile.ProfileProvider" Usage="System.Web.Profile.ProfileManager.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf den Standardprofilanbieter für die Anwendung ab.</summary>
        <value>Der Standardprofilanbieter für die Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.Provider%2A> -Eigenschaft ermöglicht es Ihnen, direkt auf den Standardprofil Anbieter für eine Anwendung zu verweisen. Dies wird häufig für den Zugriff auf benutzerdefinierte Member des Profil Anbieters verwendet, die nicht Teil <xref:System.Web.Profile.ProfileProvider> der abstrakten Basisklasse sind.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden Eigenschaften des Standardprofil Anbieters aufgelistet.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providercs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Es wurde versucht, den <see cref="P:System.Web.Profile.ProfileManager.Provider" />-Eigenschaftswert ohne mindestens die Berechtigung <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> abzurufen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As ProfileProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProviderCollection ^ Providers { System::Web::Profile::ProfileProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Profile.ProfileProviderCollection" Usage="System.Web.Profile.ProfileManager.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Profilanbieter für die ASP.NET-Anwendung ab.</summary>
        <value>Eine <see cref="T:System.Web.Profile.ProfileProviderCollection" /> der für die ASP.NET-Anwendung konfigurierten Profilanbieter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft verweist auf alle für eine Anwendung aktivierten Profil Anbieter, einschließlich der in der Computerkonfiguration hinzugefügten Anbieter und der in allen Web. config-Dateien hinzugefügten Anbieter. Sie können steuern, welche Profil Anbieter für eine Anwendung verfügbar sind, indem Sie das [Provider](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164654(v%3dvs.100)) -Element des Abschnitt [profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) in der Konfigurationsdatei verwenden. Beispielsweise werden mit der folgenden Web. config-Datei die in den übergeordneten Konfigurationsdateien angegebenen Profil Anbieter <xref:System.Web.Profile.SqlProfileProvider> entfernt und eine-Instanz als Profil Anbieter für die Anwendung hinzugefügt.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile enabled="true" defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Wenn Sie den Abschnitt " [profile](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) " angeben, müssen Sie einen Standardanbieter angeben `defaultProvider` , indem Sie das-Attribut festlegen. Wenn Sie keinen Abschnitt in der Datei "Web. config" angeben, werden die Werte aus der Konfiguration des Computers verwendet, <xref:System.Web.Profile.SqlProfileProvider> und die Instanz mit dem Namen "aspnetzqlprovider" wird als Standardanbieter eingerichtet.  
  
 Sie können einen stark typisierten Verweis auf einen Anbieter aus der <xref:System.Web.Profile.ProfileManager.Providers%2A> Auflistung abrufen, indem Sie den Profil Anbieter nach Namen indizieren und ihn als gewünschten Typ umwandeln.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Anbieter aufgeführt, die für eine Anwendung und ihre jeweiligen Typen aktiviert sind.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providerscs.aspx#9)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providersvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Es wurde versucht, den <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Eigenschaftswert ohne mindestens die Berechtigung <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> abzurufen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
  </Members>
</Type>
