<Type Name="ProfileManager" FullName="System.Web.Profile.ProfileManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="badb8deb3cd6a967ced0ed7047212df719051559" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57911337" /></Metadata><TypeSignature Language="C#" Value="public static class ProfileManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ProfileManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Profile.ProfileManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileManager abstract sealed" />
  <TypeSignature Language="F#" Value="type ProfileManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verwaltet Benutzerprofildaten und Einstellungen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das ASP.NET-Profil wird zum Speichern und Abrufen von benutzereinstellungen in einer Datenquelle, z. B. eine Datenbank. Das Benutzerprofil erfolgt mithilfe der <xref:System.Web.HttpContext.Profile%2A> Eigenschaft des aktuellen <xref:System.Web.HttpContext>. Profil und die Eigenschaftswerte werden mit einem Profilanbieter verwaltet.  
  
 Die <xref:System.Web.Profile.ProfileManager> Klasse wird verwendet, um die profileinstellungen verwalten, für Benutzerprofile suchen und Löschen von Benutzerprofilen, die nicht mehr verwendet werden. Die <xref:System.Web.Profile.ProfileManager> -Klasse stellt statische Methoden und Eigenschaften, die durch Verweisen auf zugegriffen werden können die <xref:System.Web.Profile.ProfileManager> Klasse in Ihrem Anwendungscode. Ein Beispiel finden Sie unter im Abschnitt "Beispiel" in diesem Thema und zusätzliche Beispiele in den Themen für Mitglieder der <xref:System.Web.Profile.ProfileManager> Klasse.  
  
 Standardmäßig ist das Benutzerprofil für alle ASP.NET-Anwendungen deaktiviert. Um das Benutzerprofil zu aktivieren, legen die `enabled` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) -Konfigurationselements auf "true", wie im folgenden Beispiel gezeigt wird.  
  
```  
<configuration>  
  <system.web>  
    <profile enabled="true" />  
  </system.web>  
</configuration>  
```  
  
 Weitere Informationen über das Benutzerprofil, finden Sie unter [ASP.NET-Profileigenschaften](https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d).  
  
 Ein Profilprovider wird zum Speichern und Abrufen von Eigenschaften im Benutzerprofil. .NET Framework enthält eine <xref:System.Web.Profile.SqlProfileProvider> -Klasse, die Benutzerprofileigenschaften in einer SQL Server-Datenbank speichert. Ein <xref:System.Web.Profile.SqlProfileProvider> Instanz mit dem Namen `AspNetSqlProvider` in der Konfiguration des Computers als Standardanbieter Profil angegeben ist. Die `AspNetSqlProvider` Instanz stellt eine Verbindung mit der SQL Server-Datenbank auf dem lokalen Webserver her. Können Sie angeben, ein <xref:System.Web.Profile.SqlProfileProvider> , verbindet auf einen anderen SQL Server als den Standardprofilanbieter mithilfe der [Anbieter](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164654(v%3dvs.100)) Konfigurationselement und `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement, wie im folgenden Beispiel dargestellt.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, eine ASP.NET-Seite, verwendet die <xref:System.Web.Profile.ProfileManager> Klasse zum Verwalten der inaktiven Profile.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
  </Docs>
  <Members>
    <Member MemberName="AddDynamicProfileProperty">
      <MemberSignature Language="C#" Value="public static void AddDynamicProfileProperty (System.Web.Configuration.ProfilePropertySettings property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddDynamicProfileProperty(class System.Web.Configuration.ProfilePropertySettings property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.AddDynamicProfileProperty(System.Web.Configuration.ProfilePropertySettings)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddDynamicProfileProperty (property As ProfilePropertySettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddDynamicProfileProperty(System::Web::Configuration::ProfilePropertySettings ^ property);" />
      <MemberSignature Language="F#" Value="static member AddDynamicProfileProperty : System.Web.Configuration.ProfilePropertySettings -&gt; unit" Usage="System.Web.Profile.ProfileManager.AddDynamicProfileProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Web.Configuration.ProfilePropertySettings" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="property">Die Eigenschafteneinstellungen, die hinzugefügt werden sollen.</param>
        <summary>Fügt eine Profileigenschaft programmgesteuert hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist funktionell gleichwertig mit dem Hinzufügen der Eigenschaft, um die `profile` Abschnitt der Konfigurationsdatei. Zum Aufrufen dieser Methode aus, um die Profileigenschaft hinzuzufügen müssen Sie den Aufruf in einer Methode, die mit markiert ist, die <xref:System.Web.PreApplicationStartMethodAttribute> Attribut.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public static string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Profile.ProfileManager.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Anwendung ab, für die Profilinformationen gespeichert und abgerufen werden sollen, oder legt diesen fest.</summary>
        <value>Der Name der Anwendung, für die Profilinformationen gespeichert und abgerufen werden sollen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager> verwendet die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> -Eigenschaft zum Zuordnen von Profilinformationen mit verschiedenen Anwendungen. Dadurch können mehrere Anwendungen die gleiche Datenbank verwendet, um Benutzerinformationen zu speichern, ohne dass Konflikte zwischen den doppelten Benutzern. Mehrere ASP.NET-Anwendungen können die gleichen Benutzerdatenbank mit den gleichen Wert in der <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Eigenschaft. Die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> -Eigenschaft programmgesteuert festgelegt werden kann, oder sie können mithilfe von deklarativ in der Konfigurationsdatei für die Webanwendung festgelegt werden die `applicationName` Attribut.  
  
 Wenn ein Wert nicht, für angegeben wird die `applicationName` Attribut in der Konfigurationsdatei für die Webanwendung, und klicken Sie dann die Profilanbietern mit .NET Framework verwenden die <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> Eigenschaftswert für ASP.NET-Anwendungen. Für nicht-ASP.NET-Anwendungen, der Standardwert ist die <xref:System.Diagnostics.ProcessModule.ModuleName%2A> Eigenschaftswert, ohne die Dateierweiterung.  
  
 Die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Eigenschaft macht die <xref:System.Configuration.SettingsProvider.ApplicationName%2A?displayProperty=nameWithType> Eigenschaft des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, können sie mit einem anderen Anwendungsnamen konfiguriert werden. Rufen Sie den Anwendungsnamen des ein Profilprovider als Standardanbieter für den Zugriff auf einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft und den Zugriff der <xref:System.Configuration.SettingsProvider.ApplicationName%2A> Eigenschaft des Anbieters direkt.  
  
> [!CAUTION]
>  Da eine einzelne Standardinstanz Profil-Anbieter für alle Anforderungen von bedient verwendet wird ein <xref:System.Web.HttpApplication> -Objekt können mehrere Anforderungen parallel ausgeführt werden und es wird versucht, legen Sie die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> -Eigenschaftswert. Die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Eigenschaft ist nicht threadsicher ist, für mehrere Schreibvorgänge, und Ändern der <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Eigenschaftswert kann zu unerwartetem Verhalten für mehrere Benutzer einer Anwendung führen. Es wird empfohlen, dass Sie keinen Code schreiben, ermöglicht Benutzern das festlegen, der <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Eigenschaft, wenn Sie es benötigen. Ein Beispiel für eine Anwendung in dem das Festlegen der <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Eigenschaft ist möglicherweise erforderlich ist eine administrative Anwendung, die Profildaten für mehrere Anwendungen verwaltet. Eine solche Anwendung sollte es sich um eine Anwendung für die einzelnen Benutzer und nicht für eine Webanwendung sein.  
  
   
  
## Examples  
 Die folgende Konfigurationsdatei Auszug zeigt die [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Element in der ["System.Web"](~/docs/framework/configure-apps/file-schema/web/system-web-element-web-settings.md) -Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Wird Standardprofilanbieter für die Anwendung auf einem <xref:System.Web.Profile.SqlProfileProvider> -Instanz und legt die <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> zu `MyApplication`.  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
  <add name="SqlProvider"  
    type="System.Web.Profile.SqlProfileProvider"  
    connectionStringName="SqlServices"  
    applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="AutomaticSaveEnabled">
      <MemberSignature Language="C#" Value="public static bool AutomaticSaveEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AutomaticSaveEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AutomaticSaveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AutomaticSaveEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticSaveEnabled : bool" Usage="System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Benutzerprofil automatisch am Ende der Ausführung einer ASP.NET-Seite gespeichert wird.</summary>
        <value><see langword="true" />, wenn das Benutzerprofil am Ende der Ausführung einer ASP.NET-Seite automatisch gespeichert wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> Eigenschaft gibt an, ob die automatische Speicherung des Benutzerprofils für die Anwendung aktiviert ist. Wenn automatische Speicherung aktiviert ist, die <xref:System.Web.Profile.ProfileModule> -Objekt löst die <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving> -Ereignis aus und ruft die <xref:System.Web.Profile.ProfileBase.Save%2A> Methode während der <xref:System.Web.HttpApplication.EndRequest> Ereignis am Ende der Ausführung einer ASP.NET-Seite.  
  
 Die <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> Eigenschaft festgelegt ist, mit der `automaticSaveEnabled` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Element in der Datei "Web.config" für eine ASP.NET-Anwendung.  
  
   
  
## Examples  
 Die folgende Konfigurationsdatei Auszug zeigt die [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Element in der ["System.Web"](~/docs/framework/configure-apps/file-schema/web/system-web-element-web-settings.md) -Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung. Der Anwendung Standardprofilanbieter, wird eine <xref:System.Web.Profile.SqlProfileProvider> -Instanz und legt die `automaticSaveEnabled` Attribut `true`.  
  
```  
<profile enabled="true"  
  automaticSaveEnabled="true"  
  defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Es wurde versucht, den <see cref="P:System.Web.Profile.ProfileManager.AutomaticSaveEnabled" />-Eigenschaftswert ohne mindestens die Berechtigung <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> abzurufen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member DeleteInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme Profile, authentifizierte Profile oder beide Profilarten gelöscht werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <summary>Löscht Benutzerprofildaten, bei denen das Datum der letzten Aktivität vor dem angegebenen Datum und der angegeben Uhrzeit liegt.</summary>
        <returns>Die Anzahl der aus der Datenquelle gelöschten Profile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> Methode wird verwendet, um nicht verwendete Profildaten aus der Datenquelle für die Anwendung durch Entfernen der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll. Von den durchsuchten Profilen jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> auftritt, am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert wird gelöscht.  
  
 Die <xref:System.Web.Profile.ProfileManager.DeleteInactiveProfiles%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, wird die Profilinformationen in der anderen Datenquelle nicht gelöscht werden. Um inaktive Profile löschen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.DeleteInactiveProfiles%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die inaktive Profilen verwaltet. So löschen Sie alle Profile, die die angegebene Anzahl von Tagen nicht verwendet wurden und daher als inaktiv betrachtet werden, wird eine Schaltfläche bereitgestellt.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfile">
      <MemberSignature Language="C#" Value="public static bool DeleteProfile (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeleteProfile(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfile (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeleteProfile(System::String ^ username);" />
      <MemberSignature Language="F#" Value="static member DeleteProfile : string -&gt; bool" Usage="System.Web.Profile.ProfileManager.DeleteProfile username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der Benutzername für das Profil, das gelöscht werden soll.</param>
        <summary>Löscht das Profil für den angegebenen Benutzernamen aus der Datenquelle.</summary>
        <returns><see langword="true" />, wenn das Benutzerprofil gefunden und gelöscht wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> -Methode löscht alle Informationen zum Profil und Eigenschaften für das Benutzerprofil für den angegebenen `username` aus der Datenquelle für den angegebenen <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>.  
  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> -Methode der Standardprofilanbieter um den Löschvorgang auszuführen. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, werden sie nicht gelöscht. Um Profileigenschaften zu löschen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die inaktive Profilen verwaltet. Die <xref:System.Web.Profile.ProfileManager.DeleteProfile%2A> Methode wird aufgerufen, wenn ein einzelnes Profil ausgewählt ist, gelöscht werden soll. Gibt an, ob ein Profil als inaktiv betrachtet, ist für die angegebenen Datum basiert die `userInactiveSinceDate` Parameterwert übergeben, um die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> Methode.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteProfilecs.aspx#10)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteProfilevb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> ist eine leere Zeichenfolge ("") oder enthält ein Komma.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="DeleteProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Löscht Profileigenschaften und Informationen aus der Datenquelle für eine angegebene Liste von Profilen.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (string[] usernames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(string[] usernames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (usernames As String()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(cli::array &lt;System::String ^&gt; ^ usernames);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : string[] -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles usernames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Ein Zeichenfolgenarray der Benutzernamen für Profile, die gelöscht werden sollen.</param>
        <summary>Löscht Profileigenschaften und Informationen für die angegebene Liste von Benutzernamen.</summary>
        <returns>Die Anzahl der aus der Datenquelle gelöschten Profile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> Methode löscht alle Informationen zum Profil und Eigenschaften für die angegebenen Profile aus der Datenquelle für die Anwendung, die gemäß der <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Eigenschaft. Die Liste der zu löschenden Profile wird als ein Zeichenfolgenarray mit Benutzernamen angegeben. Wenn Profileigenschaften und Informationen, in der Datenquelle für einen Benutzer in vorhanden der `usernames` -Parameter werden gelöscht.  
  
 Der Rückgabewert kann, unterscheidet sich von der Länge des angegebenen Arrays von `usernames`. Dies bedeutet, dass einige der Profile in das angegebene Array von `usernames` bereits aus dem Datenspeicher gelöscht wurden.  
  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, werden sie nicht gelöscht. Um Profileigenschaften zu löschen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die inaktive Profilen verwaltet. Ein <xref:System.Web.UI.WebControls.GridView> Steuerelement zeigt die inaktiven Profilen zurückgegeben. Jede Zeile der <xref:System.Web.UI.WebControls.GridView> -Steuerelement enthält eine Schaltfläche, die das Profil für diese Zeile aus der Datenquelle mit einem Aufruf von löscht die <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> Methode.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die Länge von <paramref name="usernames" /> ist 0 (null).  
  
- oder - 
Eines der Elemente in <paramref name="usernames" /> ist eine leere Zeichenfolge ("") oder enthält ein Komma.  
  
- oder - 
Zwei oder mehr Elemente in <paramref name="usernames" /> verfügen über den gleichen Wert.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernames" /> ist <see langword="null" />.  
  
- oder - 
Eines der Elemente in <paramref name="usernames" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteProfiles">
      <MemberSignature Language="C#" Value="public static int DeleteProfiles (System.Web.Profile.ProfileInfoCollection profiles);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeleteProfiles(class System.Web.Profile.ProfileInfoCollection profiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeleteProfiles (profiles As ProfileInfoCollection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeleteProfiles(System::Web::Profile::ProfileInfoCollection ^ profiles);" />
      <MemberSignature Language="F#" Value="static member DeleteProfiles : System.Web.Profile.ProfileInfoCollection -&gt; int" Usage="System.Web.Profile.ProfileManager.DeleteProfiles profiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profiles" Type="System.Web.Profile.ProfileInfoCollection" />
      </Parameters>
      <Docs>
        <param name="profiles">Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Profilinformationen für Profile enthält, die gelöscht werden sollen.</param>
        <summary>Löscht Profileigenschaften und Informationen aus der Datenquelle für die angegebene Liste von Profilen.</summary>
        <returns>Die Anzahl der aus der Datenquelle gelöschten Profile.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> Methode löscht alle Informationen zum Profil und Eigenschaften für die angegebenen Profile aus der Datenquelle für die Anwendung, die gemäß der <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> Eigenschaft. Die Liste der zu löschenden Profile angegeben ist, verwenden eine <xref:System.Web.Profile.ProfileInfoCollection> , übergeben wird, als die `profiles` Parameter. Ein <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben werden kann, aus der <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A>, <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A>, <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A>, und <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methoden.  
  
 Beachten Sie, die der zurückgegebenen Wert unterscheidet sich möglicherweise die <xref:System.Web.Profile.ProfileInfoCollection.Count%2A> Wert für die angegebene <xref:System.Web.Profile.ProfileInfoCollection>. Dies bedeutet, dass einige der Profile in der angegebenen <xref:System.Web.Profile.ProfileInfoCollection> bereits aus dem Datenspeicher gelöscht wurden.  
  
 Die <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A?displayProperty=nameWithType> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, werden sie nicht gelöscht. Um Profileigenschaften zu löschen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.DeleteProfiles%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ermöglicht einem Benutzer zu suchende Profile mithilfe der <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> und <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methoden. Der Benutzer kann dann die zurückgegebenen Profile mit einem Aufruf von Löschen der <xref:System.Web.Profile.ProfileManager.DeleteProfiles%2A> Methode.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="profiles" /> verfügt über einen <see cref="P:System.Web.Profile.ProfileInfoCollection.Count" />-Wert von 0 (null).  
  
- oder - 
Eines der <see cref="T:System.Web.Profile.ProfileInfo" />-Objekte in <paramref name="profiles" /> weist einen <see cref="P:System.Web.Profile.ProfileInfo.UserName" /> auf, der eine leere Zeichenfolge ("") ist oder ein Komma enthält.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="profiles" /> ist <see langword="null" />.  
  
- oder - 
Eines der <see cref="T:System.Web.Profile.ProfileInfo" />-Objekte in <paramref name="profiles" /> hat einen <see cref="P:System.Web.Profile.ProfileInfo.UserName" />, der <see langword="null" /> ist.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public static bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool Enabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool" Usage="System.Web.Profile.ProfileManager.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Benutzerprofil für die Anwendung aktiviert ist.</summary>
        <value><see langword="true" />, wenn das Benutzerprofil aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Benutzerprofil aktiviert ist, für eine Anwendung mit der `enabled` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Element in der ["System.Web"](~/docs/framework/configure-apps/file-schema/web/system-web-element-web-settings.md) -Abschnitt der Datei "Web.config" für eine ASP.NET-Anwendung, in dem das Benutzerprofil aktiviert wurde.  
  
```  
<profile enabled="true" defaultProvider="SqlProvider">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Profile.SqlProfileProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</profile>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindInactiveProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Profilinformationen für Profile ab, bei denen das Datum der letzten Aktivität am oder vor einem angegebenen Datum und einer angegebenen Uhrzeit liegt und bei denen der Benutzername des Profils einem angegebenen Namen entspricht.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <summary>Ruft Profilinformationen für alle Profile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum und der angegebenen Uhrzeit liegt und bei denen der Benutzername des Profils dem angegebenen Namen entspricht.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für inaktive Profile enthält, in denen der Benutzername dem angegebenen <paramref name="usernameToMatch" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methode dient zum Abrufen von Profilinformationen für alle nicht verwendeten Benutzerprofile für die Anwendung, die gemäß der `applicationName` Attribut in der Konfigurationsdatei. Diese Methode werden nur abgerufen, Profile, die für die der Benutzername des Profils dem angegebenen entspricht `usernameToMatch` Parameterwert. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll. Von den durchsuchten Profilen jedes Profil mit einem <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> auftritt, am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert wird zurückgegeben.  
  
 Sie können diese Informationen werden in Seiten mit Daten, die mithilfe der Überladung für Abrufen der <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%28System.Web.Profile.ProfileAuthenticationOption%2CSystem.String%2CSystem.DateTime%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%29> -Methode, die zusätzlichen `pageIndex` und `pageSize` Parameter.  
  
> [!NOTE]
>  Der Profilanbieter kann Platzhalterzeichen in unterstützt die `usernameToMatch` Parameter. Z. B. die <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> Methode der <xref:System.Web.Profile.SqlProfileProvider> Klasse unterstützt die Platzhalterzeichen in den `usernameToMatch` Parameter.  
  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A?displayProperty=nameWithType> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, wird die Datenquelle für den anderen Profilanbieter nicht durchsucht werden. Um inaktive Profile zu suchen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ermöglicht, einen Benutzer bereitstellen einer `usernameToMatch` Wert und einem <xref:System.Web.Profile.ProfileAuthenticationOption> -Enumerationswert fest und Ruft Profilinformationen für alle übereinstimmenden Profile. Im Beispiel kann der Benutzer angeben, ob nur inaktive Profile zurückgegeben. Wenn der Benutzer nur inaktive Profile angibt der <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methode aufgerufen wird; andernfalls der <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> Methode wird aufgerufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge ("").</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="FindInactiveProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindInactiveProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindInactiveProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindInactiveProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindInactiveProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName (authenticationOption, usernameToMatch, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Werte, der angibt, ob anonyme Profile, authentifizierte Profile oder beide Profilarten zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <param name="pageIndex">Der Index der zurückgegebenen Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Diese Methode enthält bei der Rückgabe eine ganze Zahl, die die Gesamtanzahl von Profilen bezeichnet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft Profilinformationen in Datenseiten für Profile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum und der angegebenen Uhrzeit liegt und bei denen der Benutzername des Profils dem angegebenen Namen entspricht.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für inaktive Profile enthält, in denen der Benutzername dem angegebenen <paramref name="usernameToMatch" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methode dient zum Abrufen von Profilinformationen für Benutzerprofile von nicht verwendeten für die Anwendung, die gemäß der `applicationName` Attribut in der Konfigurationsdatei. Diese Methode werden nur abgerufen, Profile, die für die der Benutzername dem angegebenen übereinstimmt `usernameToMatch` Parameterwert. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll. Der gesuchte Profile, alle Profile zurückgegeben, bei dem ein <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> auftritt, am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert.  
  
 Die Ergebnisse <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> sind eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter identifiziert die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> zurückzugebenden in Objekte der <xref:System.Web.Profile.ProfileInfoCollection> Auflistung. Die `pageIndex` Parameter identifiziert, welche Seite der zurückzugebenden Ergebnisse; 0 die erste Seite identifiziert. Die `totalRecords` -Parameter ist ein `out` Parameter, um die Gesamtzahl der inaktiven Benutzerprofile für die konfigurierte festgelegt wird `applicationName`auf Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` Wert ist 1 mit einer `pageSize` 5 die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben wird das sechste bis das zehnte inaktive Profile enthält. Die `totalRecords` Parameter wird auf 13 festgelegt.  
  
 Beachten Sie, dass der Profilanbieter in Platzhalterzeichen unterstützt, kann die `usernameToMatch` Parameter. Z. B. die <xref:System.Web.Profile.SqlProfileProvider.FindInactiveProfilesByUserName%2A> Methode der <xref:System.Web.Profile.SqlProfileProvider> Klasse unterstützt die Platzhalterzeichen in den `usernameToMatch` Parameter.  
  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, wird die Datenquelle für den anderen Profilanbieter nicht durchsucht werden. Um inaktive Profile zu suchen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ermöglicht, einen Benutzer bereitstellen einer `usernameToMatch` Wert und einem <xref:System.Web.Profile.ProfileAuthenticationOption> Wert und Ruft Profilinformationen für die keine übereinstimmenden Profile ab. Im Beispiel kann der Benutzer angeben, ob ausschließlich inaktive Profile zurückgegeben. Wenn der Benutzer nur inaktive Profile angibt der <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methode aufgerufen wird; andernfalls der <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> Methode wird aufgerufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.  
  
- oder - 
 <paramref name="pageIndex" /> multipliziert mit <paramref name="pageSize" /> ist größer als<see cref="F:System.Int32.MaxValue" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindProfilesByUserName">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Profilinformationen für Profile ab, bei denen der Benutzername mit einem angegebenen Namen übereinstimmt.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <summary>Ruft alle Profilinformationen für Profile ab, bei denen der Benutzername mit dem angegebenen Namen übereinstimmt.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für Profile enthält, in denen der Benutzername dem angegebenen <paramref name="usernameToMatch" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> Methode gibt eine Liste aller Profilinformationen für die der Benutzername dem angegebenen übereinstimmt `usernameToMatch` Parameterwert für die konfigurierte <xref:System.Web.Profile.ProfileManager.ApplicationName%2A> -Eigenschaftswert. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll.  
  
 Sie können die Profilinformationen für Benutzerprofile in Seiten mit Daten, die mithilfe der Überladung für Abrufen der <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> -Methode, die zusätzlichen `pageIndex` und `pageSize` Parameter.  
  
 Beachten Sie, dass der Profilanbieter in Platzhalterzeichen unterstützt, kann die `usernameToMatch` Parameter. Z. B. die <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> Methode der <xref:System.Web.Profile.SqlProfileProvider> Klasse unterstützt die Platzhalterzeichen in den `usernameToMatch` Parameter.  
  
 Die <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, wird die Datenquelle für den anderen Profilanbieter nicht durchsucht werden. Um Profile zu suchen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.FindProfilesByUserName%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ermöglicht, einen Benutzer bereitstellen einer `usernameToMatch` Wert und einem <xref:System.Web.Profile.ProfileAuthenticationOption> -Enumerationswert fest und Ruft Profilinformationen für alle übereinstimmenden Profile. Im Beispiel kann der Benutzer angeben, ob ausschließlich inaktive Profile zurückgegeben. Wenn der Benutzer nur inaktive Profile angibt der <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methode aufgerufen wird; andernfalls der <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> Methode wird aufgerufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserName2cs.aspx#8)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserName2vb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge ("").</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="FindProfilesByUserName">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection FindProfilesByUserName (System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection FindProfilesByUserName(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindProfilesByUserName (authenticationOption As ProfileAuthenticationOption, usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ FindProfilesByUserName(System::Web::Profile::ProfileAuthenticationOption authenticationOption, System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member FindProfilesByUserName : System.Web.Profile.ProfileAuthenticationOption * string * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.FindProfilesByUserName (authenticationOption, usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="usernameToMatch">Der zu suchende Benutzername.</param>
        <param name="pageIndex">Der Index der zurückgegebenen Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Diese Methode enthält bei der Rückgabe eine ganze Zahl, die die Gesamtanzahl von Profilen bezeichnet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft Profilinformationen in Datenseiten für Profile ab, bei denen der Benutzername mit dem angegebenen Namen übereinstimmt.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für Profile enthält, in denen der Benutzername dem angegebenen <paramref name="usernameToMatch" />-Parameter entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methode gibt eine Liste von Profilinformationen für die der Benutzername des Profils dem angegebenen entspricht `usernameToMatch` Parameterwert der konfigurierten <xref:System.Web.Profile.ProfileManager.ApplicationName%2A>. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll.  
  
 Beachten Sie, dass der Profilanbieter in Platzhalterzeichen unterstützt, kann die `usernameToMatch` Parameter. Z. B. die <xref:System.Web.Profile.SqlProfileProvider.FindProfilesByUserName%2A> Methode der <xref:System.Web.Profile.SqlProfileProvider> Klasse unterstützt die Platzhalterzeichen in den `usernameToMatch` Parameter.  
  
 Die Ergebnisse <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> sind eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter identifiziert die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> zurückzugebenden in Objekte der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert die Ergebnisseite zurückgegeben wird; 0 (null) bezeichnet die erste Seite. Die `totalRecords` -Parameter ist ein `out` Parameter, um die Gesamtzahl der inaktiven Benutzerprofile für die angegebene Anwendung festgelegt wird, die `applicationName` Attribut in die XML-Konfigurationsdatei, die auf Grundlage des angegebenen `authenticationOption`. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` Wert ist 1 mit einer `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben wird das sechste bis zehnte Profile enthalten. Die `totalRecords` Parameter wird auf 13 festgelegt.  
  
 Die <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, wird die Datenquelle für den anderen Profilanbieter nicht durchsucht werden. Um Profile zu suchen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.FindInactiveProfilesByUserName%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ermöglicht, einen Benutzer bereitstellen einer `usernameToMatch` Wert und einem <xref:System.Web.Profile.ProfileAuthenticationOption> und Ruft Profilinformationen für alle übereinstimmenden Profile. Im Beispiel kann der Benutzer angeben, ob ausschließlich inaktive Profile zurückgegeben. Wenn der Benutzer nur inaktive Profile angibt der <xref:System.Web.Profile.ProfileManager.FindInactiveProfilesByUserName%2A> Methode aufgerufen wird; andernfalls der <xref:System.Web.Profile.ProfileManager.FindProfilesByUserName%2A> Methode wird aufgerufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="usernameToMatch" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="usernameToMatch" /> ist eine leere Zeichenfolge ("").  
  
- oder - 
 <paramref name="pageIndex" /> ist kleiner als Null.  
  
- oder - 
 <paramref name="pageSize" /> ist kleiner als 1.  
  
- oder - 
 <paramref name="pageIndex" /> multipliziert mit <paramref name="pageSize" /> ist größer als<see cref="F:System.Int32.MaxValue" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllInactiveProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Benutzerprofildaten für Profile ab, bei denen das Datum der letzten Aktivität am oder vor einem angegebenen Datum und der angegeben Uhrzeit liegt.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <summary>Ruft alle Benutzerprofildaten für Profile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum und der angegeben Uhrzeit liegt.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen zu den inaktiven Profilen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> Methode dient zum Abrufen von Profilinformationen aus der Datenquelle für alle nicht verwendeten Benutzerprofile für die Anwendung, die gemäß der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll. Der gesuchte Profile, alle Profile zurückgegeben, bei dem ein <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> auftritt, am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert.  
  
 Sie können die Profilinformationen für inaktive Benutzerprofile in Seiten mit Daten, die mithilfe der Überladung für Abrufen der <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> -Methode, die zusätzlichen `pageIndex` und `pageSize` Parameter.  
  
 Die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, wird die Datenquelle für den anderen Profilanbieter nicht durchsucht werden. Um nicht verwendete Profile zu suchen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Seite, die inaktive Profilen verwaltet. So löschen Sie alle inaktive Profilen wird eine Schaltfläche bereitgestellt. Gibt an, ob ein Profil als inaktiv betrachtet, ist für die angegebenen Datum basiert die `userInactiveSinceDate` Parameter.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfiles2cs.aspx#7)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfiles2vb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllInactiveProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllInactiveProfiles (authenticationOption, userInactiveSinceDate, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />, der festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <param name="pageIndex">Der Index der zurückgegebenen Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Diese Methode enthält bei der Rückgabe eine ganze Zahl, die die Gesamtanzahl von Profilen bezeichnet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft eine Seite von <see cref="T:System.Web.Profile.ProfileInfo" />-Objekten für Benutzerprofile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum und der angegeben Uhrzeit liegt.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen zu den inaktiven Profilen enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> Methode dient zum Abrufen von Profilinformationen aus der Datenquelle für nicht verwendete Benutzerprofile für die Anwendung, die gemäß der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll. Der gesuchte Profile, alle Profile zurückgegeben, bei dem ein <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> auftritt, vor dem angegebenen `userInactiveSinceDate` Parameterwert.  
  
 Die Ergebnisse <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> sind eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter identifiziert die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> zurückzugebenden in Objekte der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert die Ergebnisseite zurückgegeben wird; 0 (null) bezeichnet die erste Seite. Die `totalRecords` -Parameter ist ein `out` Parameter, um die Gesamtzahl der inaktiven Benutzerprofile für die konfigurierte festgelegt wird `applicationName`auf Grundlage der `authenticationOption` und `userInactiveSinceDate` Parameter. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` Wert ist ein URI mit einer `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben wird das sechste bis das zehnte inaktive Profile enthält. Die `totalRecords` Parameter wird auf 13 festgelegt.  
  
 Die <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, wird die Datenquelle für den anderen Profilanbieter nicht durchsucht werden. Um Profile zu suchen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.GetAllInactiveProfiles%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt eine ASP.NET-Webseite, die inaktive Profilen verwaltet. So löschen Sie alle inaktive Profilen wird eine Schaltfläche bereitgestellt. Gibt an, ob ein Profil als inaktiv betrachtet, ist für die angegebenen Datum basiert die `userInactiveSinceDate` Parameter.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/DeleteInactiveProfilescs.aspx#4)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/DeleteInactiveProfilesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAllProfiles">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft Benutzerprofildaten für Profile in der Datenquelle ab.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <summary>Ruft Benutzerprofildaten für Profile in der Datenquelle ab.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für alle Profile in der Datenquelle enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> Methode dient zum Abrufen von Profilinformationen aus der Datenquelle für die Anwendung, die gemäß der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll.  
  
 Sie können Seiten abrufen <xref:System.Web.Profile.ProfileInfo> -Objekten für Benutzerprofile, die mithilfe der Überladung für die <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> -Methode, die zusätzlichen `pageIndex` und `pageSize` Parameter.  
  
 Die <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, wird die Datenquelle für den anderen Profilanbieter nicht durchsucht werden. Um Profile zu suchen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Profilinformationen für alle Profile für die konfigurierte `applicationName`.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllProfiles">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileInfoCollection GetAllProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Profile.ProfileInfoCollection GetAllProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAllProfiles (authenticationOption As ProfileAuthenticationOption, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As ProfileInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Profile::ProfileInfoCollection ^ GetAllProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="static member GetAllProfiles : System.Web.Profile.ProfileAuthenticationOption * int * int *  -&gt; System.Web.Profile.ProfileInfoCollection" Usage="System.Web.Profile.ProfileManager.GetAllProfiles (authenticationOption, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileInfoCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="pageIndex">Der Index der zurückgegebenen Ergebnisseite. <paramref name="pageIndex" /> ist nullbasiert.</param>
        <param name="pageSize">Die Größe der zurückzugebenden Ergebnisseite.</param>
        <param name="totalRecords">Diese Methode enthält bei der Rückgabe eine ganze Zahl, die die Gesamtanzahl von Profilen bezeichnet. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Ruft Seiten von Benutzerprofildaten ab.</summary>
        <returns>Eine <see cref="T:System.Web.Profile.ProfileInfoCollection" />, die Benutzerprofilinformationen für alle Profile in der Datenquelle enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> Methode dient zum Abrufen von Profilinformationen aus der Datenquelle für die Anwendung, die gemäß der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll.  
  
 Die Ergebnisse <xref:System.Web.Profile.ProfileManager.GetAllInactiveProfiles%2A> sind eingeschränkt, indem die `pageIndex` und `pageSize` Parameter. Die `pageSize` Parameter identifiziert die maximale Anzahl von <xref:System.Web.Profile.ProfileInfo> zurückzugebenden in Objekte der <xref:System.Web.Profile.ProfileInfoCollection>. Die `pageIndex` Parameter identifiziert die Ergebnisseite zurückgegeben wird; 0 (null) bezeichnet die erste Seite. Die `totalRecords` -Parameter ist ein `out` Parameter, um die Gesamtzahl der inaktiven Benutzerprofile für die konfigurierte festgelegt wird `applicationName`, basierend auf dem angegebenen `authenticationOption`. Z. B. 13 Benutzer für die konfigurierte vorhanden sind `applicationName`, und die `pageIndex` Wert ist ein URI mit einer `pageSize` 5. Dies ist die <xref:System.Web.Profile.ProfileInfoCollection> zurückgegeben wird das sechste bis zehnte Profile enthalten. Die `totalRecords` Parameter wird auf 13 festgelegt.  
  
 Die <xref:System.Web.Profile.ProfileManager.GetAllProfiles%2A> Methodenaufrufe der <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> Methode des Standard-Profilanbieters. Der Standardprofilanbieter angegeben ist, mit der `defaultProvider` Attribut der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Konfigurationselement. Wenn das Benutzerprofil Eigenschaften, die von einem Profilanbieter als Standardanbieter verwaltet werden enthält, wird die Datenquelle für den anderen Profilanbieter nicht durchsucht werden. Um Profile zu suchen, die von einem Profilanbieter als Standardanbieter verwaltet werden, erhalten Sie einen Verweis auf den Profilanbieter mit den <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft, und rufen die <xref:System.Web.Profile.ProfileProvider.GetAllProfiles%2A> -Methode des Anbieters direkt.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Profilinformationen für alle Profile für die konfigurierte `applicationName` in Datenseiten.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfilescs.aspx#3)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfilesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfInactiveProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfInactiveProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfInactiveProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption, valuetype System.DateTime userInactiveSinceDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfInactiveProfiles (authenticationOption As ProfileAuthenticationOption, userInactiveSinceDate As DateTime) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfInactiveProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption, DateTime userInactiveSinceDate);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfInactiveProfiles : System.Web.Profile.ProfileAuthenticationOption * DateTime -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles (authenticationOption, userInactiveSinceDate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
        <Parameter Name="userInactiveSinceDate" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <param name="userInactiveSinceDate">Ein <see cref="T:System.DateTime" />-Objekt, das festlegt, welche Benutzerprofile als inaktiv betrachtet werden. Wenn das <see cref="P:System.Web.Profile.ProfileInfo.LastActivityDate" /> eines Benutzerprofils zu oder vor diesem Zeitpunkt (Datum und Uhrzeit) auftritt, gilt das Profil als inaktiv.</param>
        <summary>Ruft die Anzahl der Profile ab, bei denen das Datum der letzten Aktivität am oder vor dem angegebenen Datum liegt.</summary>
        <returns>Die Anzahl der Profile in der Datenquelle, bei denen das Datum der letzten Aktivität vor dem angegebenen Datum und der angegeben Uhrzeit liegt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> Methode dient zum Abrufen aller nicht verwendeten Benutzerprofile aus der Datenquelle für die Anwendung, die gemäß der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll. Der gesuchte Profile, werden alle Profile gezählt, die eine <xref:System.Web.Profile.ProfileInfo.LastActivityDate%2A> auftritt, am oder vor dem angegebenen `userInactiveSinceDate` Parameterwert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ermöglicht, einen Benutzer zum Anzeigen und Informationen für aktive und inaktive Profile, die basierend auf Suchkriterien zu löschen. Anzahl der inaktiven Profile wird mit den Ergebnissen der <xref:System.Web.Profile.ProfileManager.GetNumberOfInactiveProfiles%2A> Methode.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält das Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko dar. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/FindProfilesByUserNamecs.aspx#5)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/FindProfilesByUserNamevb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfProfiles">
      <MemberSignature Language="C#" Value="public static int GetNumberOfProfiles (System.Web.Profile.ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNumberOfProfiles(valuetype System.Web.Profile.ProfileAuthenticationOption authenticationOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Profile.ProfileManager.GetNumberOfProfiles(System.Web.Profile.ProfileAuthenticationOption)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNumberOfProfiles (authenticationOption As ProfileAuthenticationOption) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNumberOfProfiles(System::Web::Profile::ProfileAuthenticationOption authenticationOption);" />
      <MemberSignature Language="F#" Value="static member GetNumberOfProfiles : System.Web.Profile.ProfileAuthenticationOption -&gt; int" Usage="System.Web.Profile.ProfileManager.GetNumberOfProfiles authenticationOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationOption" Type="System.Web.Profile.ProfileAuthenticationOption" />
      </Parameters>
      <Docs>
        <param name="authenticationOption">Einer der <see cref="T:System.Web.Profile.ProfileAuthenticationOption" />-Enumerationswerte, der angibt, ob anonyme, authentifizierte oder beide Profiltypen zurückgegeben werden.</param>
        <summary>Ruft die Anzahl der Profile in der Datenquelle ab.</summary>
        <returns>Die Anzahl der Profile in der Datenquelle.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.GetNumberOfProfiles%2A> Methode dient zum Abrufen aller Profile der aus der Datenquelle für die Anwendung, die gemäß der `applicationName` Attribut in der Konfigurationsdatei. Verwenden der `authenticationOption` Parameter, um anzugeben, ob nur anonyme Profile, authentifizierte Profile oder alle Profile gesucht werden soll.  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt die Profilinformationen für alle Profile für die konfigurierte `applicationName` und gibt außerdem die Anzahl der Profile zurück.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/ShowProfiles2cs.aspx#6)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/ShowProfiles2vb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Provider As ProfileProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProvider ^ Provider { System::Web::Profile::ProfileProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Profile.ProfileProvider" Usage="System.Web.Profile.ProfileManager.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf den Standardprofilanbieter für die Anwendung ab.</summary>
        <value>Der Standardprofilanbieter für die Anwendung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.Provider%2A> Eigenschaft können Sie direkt auf den Standardprofilanbieter für eine Anwendung verweisen. Dies wird häufig verwendet, um benutzerdefinierte Elemente, die von den Profilanbieter zugreifen, die nicht Teil der <xref:System.Web.Profile.ProfileProvider> abstrakte Basisklasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel werden die Eigenschaften des Standardprofilanbieters aufgelistet.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providercs.aspx#2)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providervb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Es wurde versucht, den <see cref="P:System.Web.Profile.ProfileManager.Provider" />-Eigenschaftswert ohne mindestens die Berechtigung <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> abzurufen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
    <Member MemberName="Providers">
      <MemberSignature Language="C#" Value="public static System.Web.Profile.ProfileProviderCollection Providers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Profile.ProfileProviderCollection Providers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Profile.ProfileManager.Providers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Providers As ProfileProviderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Profile::ProfileProviderCollection ^ Providers { System::Web::Profile::ProfileProviderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Providers : System.Web.Profile.ProfileProviderCollection" Usage="System.Web.Profile.ProfileManager.Providers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileProviderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung der Profilanbieter für die ASP.NET-Anwendung ab.</summary>
        <value>Eine <see cref="T:System.Web.Profile.ProfileProviderCollection" /> der für die ASP.NET-Anwendung konfigurierten Profilanbieter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Profile.ProfileManager.Providers%2A> -Eigenschaft verweist auf alle der Profilanbieter für eine Anwendung aktiviert werden soll, einschließlich der Anbieter in der Konfiguration des Computers und Anbieter hinzugefügt in allen Dateien der Datei "Web.config". Sie können steuern, welches Profil für eine Anwendung mit verfügbar sind die [Anbieter](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164654(v%3dvs.100)) Element der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Abschnitt in der Konfigurationsdatei. Beispielsweise die folgende Datei "Web.config" in übergeordneten Konfigurationsdateien angegebene Profilanbieter entfernt, und fügt eine <xref:System.Web.Profile.SqlProfileProvider> Instanz als den Profilanbieter für die Anwendung.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString=  
      "Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <profile enabled="true" defaultProvider="SqlProvider">  
      <providers>  
        <clear />  
        <add name="SqlProvider"  
          type="System.Web.Profile.SqlProfileProvider"  
          connectionStringName="SqlServices"  
          applicationName="MyApplication" />  
      </providers>  
    </profile>  
  </system.web>  
</configuration>  
```  
  
 Beim Angeben der [Profil](https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-4.0/ms164644(v%3dvs.100)) Abschnitt geben Sie einen Standardanbieter durch Festlegen der `defaultProvider` Attribut. Wenn Sie einen Abschnitt in der Datei "Web.config" nicht angeben, werden die Werte aus der Konfiguration des Computers verwendet und die <xref:System.Web.Profile.SqlProfileProvider> -Instanz AspNetSqlProvider als Standardanbieter festgelegt ist.  
  
 Sie erhalten einen stark typisierten Verweis auf einen Anbieter aus der <xref:System.Web.Profile.ProfileManager.Providers%2A> Auflistung nach Name des Profilanbieters Indizierung und ihn in den gewünschten Typ umwandeln.  
  
   
  
## Examples  
 Das folgende Codebeispiel listet Anbieter, die für eine Anwendung und ihre jeweiligen Typen aktiviert.  
  
 [!code-aspx-csharp[System.Web.Profile.ProfileManager#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/CS/Providerscs.aspx#9)]
 [!code-aspx-vb[System.Web.Profile.ProfileManager#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Profile.ProfileManager/VB/Providersvb.aspx#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Es wurde versucht, den <see cref="P:System.Web.Profile.ProfileManager.Providers" />-Eigenschaftswert ohne mindestens die Berechtigung <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> abzurufen.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/89439440-92ea-48c3-a4bd-dea40307899d">Übersicht über ASP.NET Profile-Eigenschaften</related>
      </Docs>
    </Member>
  </Members>
</Type>