<Type Name="ExceptionDispatchInfo" FullName="System.Runtime.ExceptionServices.ExceptionDispatchInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c7654460ae0c4c523a2385bc93d5c95ae814266" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46647431" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ExceptionDispatchInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExceptionDispatchInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExceptionDispatchInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionDispatchInfo sealed" />
  <TypeSignature Language="F#" Value="type ExceptionDispatchInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="274a9-101">Stellt eine Ausnahme dar, deren Zustand an einem bestimmten Punkt im Code erfasst wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="274a9-101">Represents an exception whose state is captured at a certain point in code.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="274a9-102">Die <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> Objekt speichert die Informationen der ausnahmestapelüberwachung und Dr. Watson Informationen an, die an dem Punkt die Ausnahme enthält, in denen erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="274a9-102">The <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object stores the stack trace information and Watson information that the exception contains at the point where it is captured.</span></span> <span data-ttu-id="274a9-103">Die Ausnahme kann ausgelöst, zu einem späteren Zeitpunkt und möglicherweise auf einem anderen Thread durch Aufrufen der <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="274a9-103">The exception can be thrown at another time and possibly on another thread by calling the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="274a9-104">Die Ausnahme wird ausgelöst, als wenn es an der Stelle übergeben haben, in dem er zu dem Zeitpunkt erfasst wurde, in denen die <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="274a9-104">The exception is thrown as if it had flowed from the point where it was captured to the point where the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method is called.</span></span>  
  
 <span data-ttu-id="274a9-105"><xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> kann nicht serialisiert werden und sollte nicht überschreiten von Grenzen von Anwendungsdomänen hinweg.</span><span class="sxs-lookup"><span data-stu-id="274a9-105"><xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> cannot be serialized and is not intended to cross application domain boundaries.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Runtime.ExceptionServices.ExceptionDispatchInfo Capture (Exception source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.ExceptionServices.ExceptionDispatchInfo Capture(class System.Exception source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (source As Exception) As ExceptionDispatchInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::ExceptionServices::ExceptionDispatchInfo ^ Capture(Exception ^ source);" />
      <MemberSignature Language="F#" Value="static member Capture : Exception -&gt; System.Runtime.ExceptionServices.ExceptionDispatchInfo" Usage="System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ExceptionServices.ExceptionDispatchInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="274a9-106">Die Ausnahme, deren Zustand erfasst wurde. Dieser wird durch das zurückgegebene Objekt dargestellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a9-106">The exception whose state is captured, and which is represented by the returned object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="274a9-107">Erstellt ein <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />-Objekt, das die angegebene Ausnahme an der aktuellen Stelle im Code darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a9-107">Creates an <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> object that represents the specified exception at the current point in code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="274a9-108">Ein Objekt, das die angegebene Ausnahme an der aktuellen Stelle im Code darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a9-108">An object that represents the specified exception at the current point in code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="274a9-109">Sie können die <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> -Objekt, das von dieser Methode zu einem späteren Zeitpunkt und möglicherweise auf einem anderen Thread auf die angegebene Ausnahme erneut auslösen, zurückgegeben wird, als ob die Ausnahme an diesem Punkt übergeben haben, in dem er erfasst wurde zu dem Punkt, wo sie erneut ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="274a9-109">You can use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.</span></span>  
  
 <span data-ttu-id="274a9-110">Wenn die Ausnahme ist aktiv, wenn es erfasst wird, die aktuellen Stapelüberwachungsinformationen und Dr. Watson Informationen an, der in enthalten ist, wird die Ausnahme gespeichert.</span><span class="sxs-lookup"><span data-stu-id="274a9-110">If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.</span></span>  <span data-ttu-id="274a9-111">Wenn es inaktiv ist, d. h. müssen, wenn er nicht ausgelöst wurde, es keine Informationen der ausnahmestapelüberwachung oder Dr. Watson Informationen.</span><span class="sxs-lookup"><span data-stu-id="274a9-111">If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="274a9-112">
            <paramref name="source" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a9-112">
              <paramref name="source" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SourceException">
      <MemberSignature Language="C#" Value="public Exception SourceException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception SourceException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ SourceException { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SourceException : Exception" Usage="System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="274a9-113">Ruft die Ausnahme ab, die von der aktuellen Instanz dargestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a9-113">Gets the exception that is represented by the current instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="274a9-114">Die Ausnahme, die von der aktuellen Instanz dargestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a9-114">The exception that is represented by the current instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="274a9-115">Diese Eigenschaft wird verwendet durch die Task Parallel Library, z. B. zum Kombinieren von mehreren Ausnahmen in einer <xref:System.AggregateException> Objekt.</span><span class="sxs-lookup"><span data-stu-id="274a9-115">This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <xref:System.AggregateException> object.</span></span> <span data-ttu-id="274a9-116">Es dient nicht vom Anwendungscode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="274a9-116">It is not intended to be used by application code.</span></span> <span data-ttu-id="274a9-117">Verwenden der <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> Methode zum Wiederherstellen des Zustands die abgefangene Ausnahme aus, und lösen ihn.</span><span class="sxs-lookup"><span data-stu-id="274a9-117">Use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method to restore the state of the captured exception and throw it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public void Throw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Throw() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw" />
      <MemberSignature Language="VB.NET" Value="Public Sub Throw ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Throw();" />
      <MemberSignature Language="F#" Value="member this.Throw : unit -&gt; unit" Usage="exceptionDispatchInfo.Throw " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="274a9-118">Löst die Ausnahme aus, die vom aktuellen <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />-Objekt dargestellt wird, nachdem der Zustand, der gespeichert wurde, als die Ausnahme erfasst wurde, wiederhergestellt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="274a9-118">Throws the exception that is represented by the current <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> object, after restoring the state that was saved when the exception was captured.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="274a9-119">Wenn die Ausnahme wiederhergestellt wird, wird die folgende Zeichenfolge eingefügt, in der stapelüberwachung, um den Wiederherstellungspunkt anzugeben: "Ende der stapelüberwachung aus dem vorherigen Speicherort, in dem die Ausnahme ausgelöst wurde".</span><span class="sxs-lookup"><span data-stu-id="274a9-119">When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: "End of stack trace from the previous location where the exception was thrown".</span></span> <span data-ttu-id="274a9-120">Dies ist vergleichbar mit der Art und Weise, die inneren Ausnahmen oder gemarshallten Ausnahmen in stapelüberwachungen angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="274a9-120">This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public static void Throw (Exception source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Throw(class System.Exception source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Throw (source As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Throw(Exception ^ source);" />
      <MemberSignature Language="F#" Value="static member Throw : Exception -&gt; unit" Usage="System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>