<Type Name="SoapMessage" FullName="System.Web.Services.Protocols.SoapMessage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="670f91888a187cdfd3b91a9264e8e8c520bd48eb" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48636238" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SoapMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SoapMessage extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessage" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SoapMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapMessage abstract" />
  <TypeSignature Language="F#" Value="type SoapMessage = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Daten in einer SOAP-Anforderung oder SOAP-Antwort auf einer bestimmten <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der primäre Verwendungszweck der <xref:System.Web.Services.Protocols.SoapMessage> Klasse ist für SOAP-Erweiterungen, die die Daten in einer SOAP-Anforderung oder SOAP-Antwort darstellt. Wenn die <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> -Methode aufgerufen wird, eine <xref:System.Web.Services.Protocols.SoapExtension> empfängt eine <xref:System.Web.Services.Protocols.SoapMessage> an jedem <xref:System.Web.Services.Protocols.SoapMessageStage>. Es ist Aufgabe der jeweiligen SOAP-Erweiterung, wie Sie verarbeiten möchten die <xref:System.Web.Services.Protocols.SoapMessage>. Häufig verwendete SOAP-Erweiterungen enthalten, Verschlüsselung und Komprimierung.  
  
 SOAP-Erweiterungen können entweder angewendet werden, oder beide eine XML-Webdienstmethode erstellt mithilfe von ASP.NET oder eine XML-Webdienstclient. Wenn eine SOAP-Erweiterung auf ein XML-Webdienstmethode angewendet wird die <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> Methode empfängt eine Instanz von <xref:System.Web.Services.Protocols.SoapServerMessage>, die sich daraus ableitet <xref:System.Web.Services.Protocols.SoapMessage>. Ebenso, wenn eine SOAP-Erweiterung auf einen XML-Webdienstclient angewendet wird <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> empfängt eine Instanz von <xref:System.Web.Services.Protocols.SoapClientMessage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#1)]
 [!code-csharp[SoapMessage#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#1)]
 [!code-vb[SoapMessage#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public abstract string Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Action { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Action : string" Usage="System.Web.Services.Protocols.SoapMessage.Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse das Feld des HTTP-Anforderungsheaders SOAPAction für die SOAP-Anforderung oder die SOAP-Antwort ab.</summary>
        <value>Das Feld des HTTP-Anforderungsheaders SOAPAction für die SOAP-Anforderung oder die SOAP-Antwort.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Services.Protocols.SoapMessage.Action%2A> -Eigenschaft zugegriffen werden kann, während eines <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#2)]
 [!code-csharp[SoapMessage#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#2)]
 [!code-vb[SoapMessage#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public string ContentEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentEncoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : string with get, set" Usage="System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Inhalte des <see langword="Content-Encoding" />-HTTP-Headers ab oder legt diese fest.</summary>
        <value>Der Inhalt des <see langword="Content-Encoding" />-HTTP-Headers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine SOAP-Erweiterung kann festlegen, die <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> Eigenschaft, um zusätzliche Informationen über die Codierung von SOAP-Nachricht ohne Änderung des Medientyps, ausgedrückt in der `Content-Type` HTTP-Header.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die aktuelle <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> ist die <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" />-Stufe oder die <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />-Stufe.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string with get, set" Usage="System.Web.Services.Protocols.SoapMessage.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den HTTP-<see langword="Content-Type" /> der SOAP-Anforderung oder der SOAP-Antwort ab oder legt diesen fest.</summary>
        <value>Der HTTP-<see langword="Content-Type" /> der SOAP-Anforderung oder der SOAP-Antwort. Der Standardwert ist "text/xml".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> Eigenschaft kann nur zugegriffen werden, der <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> und <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> stellt es vorab bereit; hingegen ein <xref:System.InvalidOperationException> ausgelöst.  
  
 Verwenden der <xref:System.Web.Services.Protocols.SoapMessage.ContentEncoding%2A> -Eigenschaft anstelle der <xref:System.Web.Services.Protocols.SoapMessage.ContentType%2A> Eigenschaft, um zusätzliche Informationen über die Codierung von SOAP-Nachricht bereitzustellen.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#3](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#3)]
 [!code-csharp[SoapMessage#3](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#3)]
 [!code-vb[SoapMessage#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Auf <see cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" /> wird auf der <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" />-Stufe oder der <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />-Stufe zugegriffen.</exception>
        <altmember cref="T:System.Web.Services.Protocols.SoapMessageStage" />
        <altmember cref="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding" />
      </Docs>
    </Member>
    <Member MemberName="EnsureInStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureInStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureInStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureInStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureInStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureInStage();" />
      <MemberSignature Language="F#" Value="abstract member EnsureInStage : unit -&gt; unit" Usage="soapMessage.EnsureInStage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, dass auf der aktuellen <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> In-Parameter verfügbar sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bestätigte Stufe ist für XML-Webdienstclients und XML-Webdienstmethoden unterschiedlich. Der Parameter einer XML-Webdienstmethode sind verfügbar, nach dem Deserialisieren der SOAP-Anforderung in die <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> Phase. Für eine XML-Webdienstclient, stehen die in-Parameter vor der Serialisierung der SOAP-Anforderung in die <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> Phase.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureInStage%2A> kann aufgerufen werden, während eines <xref:System.Web.Services.Protocols.SoapMessageStage>jedoch eine <xref:System.InvalidOperationException> wird ausgelöst, wenn Parameter sind nicht verfügbar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">In-Parameter sind nicht verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureOutStage">
      <MemberSignature Language="C#" Value="protected abstract void EnsureOutStage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EnsureOutStage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureOutStage" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub EnsureOutStage ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void EnsureOutStage();" />
      <MemberSignature Language="F#" Value="abstract member EnsureOutStage : unit -&gt; unit" Usage="soapMessage.EnsureOutStage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt beim Überschreiben in einer abgeleiteten Klasse, dass auf der aktuellen <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> Out-Parameter verfügbar sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bestätigte Stufe ist für XML-Webdienstclients und XML-Webdienstmethoden unterschiedlich. Die out-Parameter einer XML-Webdienstmethode stehen vor der Serialisierung der SOAP-Antwort in die <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> Phase. In einer XML-Webdienstclient die Out-Parameter stehen nach der Deserialisierung der SOAP-Antwort in die <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> Phase.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureOutStage%2A> kann aufgerufen werden, während eines <xref:System.Web.Services.Protocols.SoapMessageStage>jedoch eine <xref:System.InvalidOperationException> wird ausgelöst, wenn Sie Parameter sind nicht verfügbar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Out-Parameter sind nicht verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnsureStage">
      <MemberSignature Language="C#" Value="protected void EnsureStage (System.Web.Services.Protocols.SoapMessageStage stage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureStage(valuetype System.Web.Services.Protocols.SoapMessageStage stage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureStage (stage As SoapMessageStage)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureStage(System::Web::Services::Protocols::SoapMessageStage stage);" />
      <MemberSignature Language="F#" Value="member this.EnsureStage : System.Web.Services.Protocols.SoapMessageStage -&gt; unit" Usage="soapMessage.EnsureStage stage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stage" Type="System.Web.Services.Protocols.SoapMessageStage" />
      </Parameters>
      <Docs>
        <param name="stage">Die bestätigte <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</param>
        <summary>Gewährleistet, dass <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> des Aufrufs der XML-Webdienstmethode die Stufe oder Stufen sind, die übergeben wurden. Wenn die aktuelle Verarbeitungsstufe keine der übergebenen Stufen ist, wird eine Ausnahme ausgelöst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mehrere Stufen können bestätigt werden, indem eine bitweise OR-Operation für mehrere Instanzen von Ausführen der <xref:System.Web.Services.Protocols.SoapMessageStage> Klasse.  
  
 <xref:System.Web.Services.Protocols.SoapMessage.EnsureStage%2A> kann aufgerufen werden, während eines <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird bestimmt, dass die aktuelle <xref:System.Web.Services.Protocols.SoapMessageStage> ist entweder <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> oder <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize>; ist dies nicht der Fall, wird eine Ausnahme ausgelöst.  
  
 [!code-cpp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapMessage.EnsureStage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapMessage.EnsureStage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die aktuelle <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> ist nicht die bestätigte Stufe.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapException Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As SoapException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapException ^ Exception { System::Web::Services::Protocols::SoapException ^ get(); void set(System::Web::Services::Protocols::SoapException ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.Services.Protocols.SoapException with get, set" Usage="System.Web.Services.Protocols.SoapMessage.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Web.Services.Protocols.SoapException" /> aus dem Aufruf an die XML-Webdienstmethode ab.</summary>
        <value>Die <see cref="T:System.Web.Services.Protocols.SoapException" />, die im Aufruf an die XML-Webdienstmethode auftrat. <see langword="null" />, falls keine <see cref="T:System.Web.Services.Protocols.SoapException" /> beim Aufruf an die XML-Webdienstmethode aufgetreten ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Services.Protocols.SoapMessage.Exception%2A> -Eigenschaft zugegriffen werden kann, während eines <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.SoapException" />
        <altmember cref="T:System.Web.Services.Protocols.SoapHeaderException" />
      </Docs>
    </Member>
    <Member MemberName="GetInParameterValue">
      <MemberSignature Language="C#" Value="public object GetInParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetInParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetInParameterValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetInParameterValue : int -&gt; obj" Usage="soapMessage.GetInParameterValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Parameters im Parameterarray.</param>
        <summary>Ruft den am angegebenen Index an die XML-Webdienstmethode übergebenen Parameter ab.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den Parameter am angegebenen Index darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> Eigenschaft ist nur verfügbar, wenn in-Parameter verfügbar sind. ASP.NET löst <xref:System.InvalidOperationException> beim Zugriff auf die <xref:System.Web.Services.Protocols.SoapMessage.GetInParameterValue%2A> Eigenschaft in-Parameter sind nicht verfügbar.  
  
 In einem <xref:System.Web.Services.Protocols.SoapClientMessage> die in-Parameter finden Sie in der <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. In einem <xref:System.Web.Services.Protocols.SoapServerMessage> die in-Parameter finden Sie in der <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#6](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#6)]
 [!code-csharp[SoapMessage#6](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#6)]
 [!code-vb[SoapMessage#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der <paramref name="index" />-Parameter ist kleiner als 0 oder größer als die Länge des Parameterarrays.</exception>
        <exception cref="T:System.InvalidOperationException">Zugriff auf diese Eigenschaft, wenn keine In-Parameter verfügbar sind.</exception>
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
        <altmember cref="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetOutParameterValue">
      <MemberSignature Language="C#" Value="public object GetOutParameterValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetOutParameterValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOutParameterValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetOutParameterValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetOutParameterValue : int -&gt; obj" Usage="soapMessage.GetOutParameterValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der nullbasierte Index des Parameters im Parameterarray.</param>
        <summary>Ruft den am angegebenen Index an die XML-Webdienstmethode übergebenen Out-Parameter ab.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den Parameter am angegebenen Index darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 IF, Parameter nicht verfügbar sind, ASP.NET löst eine <xref:System.InvalidOperationException> beim Zugriff auf die <xref:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue%2A> Eigenschaft.  
  
 In einem <xref:System.Web.Services.Protocols.SoapClientMessage> die Out-Parameter finden Sie in der <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> <xref:System.Web.Services.Protocols.SoapMessageStage>. In einer <xref:System.Web.Services.Protocols.SoapServerMessage> die Out-Parameter finden Sie in der <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> von der <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#8](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#8)]
 [!code-csharp[SoapMessage#8](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#8)]
 [!code-vb[SoapMessage#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">Der <paramref name="index" />-Parameter ist größer als die Länge des Parameterarrays.</exception>
        <exception cref="T:System.InvalidOperationException">Zugriff auf diese Eigenschaft, wenn keine Out-Parameter verfügbar sind.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnValue">
      <MemberSignature Language="C#" Value="public object GetReturnValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetReturnValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReturnValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetReturnValue();" />
      <MemberSignature Language="F#" Value="member this.GetReturnValue : unit -&gt; obj" Usage="soapMessage.GetReturnValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft den Rückgabewert einer XML-Webdienstmethode ab.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den Rückgabewert der XML-Webdienstmethode darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Rückgabewert nicht verfügbar ist, löst ASP.NET <xref:System.InvalidOperationException> beim Zugriff auf die <xref:System.Web.Services.Protocols.SoapMessage.GetReturnValue%2A> Eigenschaft.  
  
 In einem <xref:System.Web.Services.Protocols.SoapClientMessage> der Rückgabewert ist verfügbar, wenn die <xref:System.Web.Services.Protocols.SoapMessageStage> Wert <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize>. In einem <xref:System.Web.Services.Protocols.SoapServerMessage> der Rückgabewert ist verfügbar, wenn <xref:System.Web.Services.Protocols.SoapMessageStage> Wert <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#9](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#9)]
 [!code-csharp[SoapMessage#9](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#9)]
 [!code-vb[SoapMessage#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die XML-Webdienstmethode hat keinen Rückgabewert.  
  
ODER 
Der Rückgabewert ist nicht verfügbar.</exception>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.SoapHeaderCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As SoapHeaderCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderCollection ^ Headers { System::Web::Services::Protocols::SoapHeaderCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Web.Services.Protocols.SoapHeaderCollection" Usage="System.Web.Services.Protocols.SoapMessage.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Auflistung der auf die aktuelle SOAP-Anforderung oder SOAP-Antwort angewendeten SOAP-Header.</summary>
        <value>Eine <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> der auf die aktuelle SOAP-Anforderung oder SOAP-Antwort angewendeten SOAP-Header. <see langword="null" />, wenn keine SOAP-Header vorhanden sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP-Header gibt einen optionalen Teil einer SOAP-Anforderung oder SOAP-Antwort. Weitere Informationen zur Verwendung von SOAP-Header in XML-Webdiensten mit ASP.NET und ihren Clients erstellt wurden, finden Sie unter den <xref:System.Web.Services.Protocols.SoapHeader> Klasse.  
  
 Obwohl die <xref:System.Web.Services.Protocols.SoapMessage.Headers%2A> Eigenschaft zu irgendeinem Zeitpunkt zugegriffen werden kann, es wird nur aufgefüllt, mit der SOAP-Headerinformationen in den <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize> und <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> Phasen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodInfo">
      <MemberSignature Language="C#" Value="public abstract System.Web.Services.Protocols.LogicalMethodInfo MethodInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Protocols.LogicalMethodInfo MethodInfo" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MethodInfo As LogicalMethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Web::Services::Protocols::LogicalMethodInfo ^ MethodInfo { System::Web::Services::Protocols::LogicalMethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodInfo : System.Web.Services.Protocols.LogicalMethodInfo" Usage="System.Web.Services.Protocols.SoapMessage.MethodInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.LogicalMethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse eine Darstellung des Methodenprototyps für die XML-Webdienstmethode ab, für die die SOAP-Anforderung bestimmt ist.</summary>
        <value>Eine <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, die die XML-Webdienstmethode darstellt, für die die SOAP-Anforderung bestimmt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl <xref:System.Web.Services.Protocols.SoapMessage.MethodInfo%2A> zugegriffen werden kann, während eines <xref:System.Web.Services.Protocols.SoapMessageStage>, es hat nur die Daten während der <xref:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize> und <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#7](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#7)]
 [!code-csharp[SoapMessage#7](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#7)]
 [!code-vb[SoapMessage#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="OneWay">
      <MemberSignature Language="C#" Value="public abstract bool OneWay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OneWay" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property OneWay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool OneWay { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.OneWay : bool" Usage="System.Web.Services.Protocols.SoapMessage.OneWay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />-Eigenschaft des <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />-Attributs oder des <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />-Attributs angibt, das auf die XML-Webdienstmethode angewendet wurde.</summary>
        <value>
          <see langword="true" />, wenn die <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />-Eigenschaft des auf die XML-Webdienstmethode angewendeten <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> oder <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> auf <see langword="true" /> festgelegt ist. Andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finden Sie unter den <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay%2A?displayProperty=nameWithType> Eigenschaft <xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute> oder <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute> ausführliche Informationen über unidirektionale XML-Webdienstmethoden.  
  
 Die <xref:System.Web.Services.Protocols.SoapMessage.OneWay%2A> -Eigenschaft ist verfügbar in allen Phasen des <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#4](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#4)]
 [!code-csharp[SoapMessage#4](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#4)]
 [!code-vb[SoapMessage#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" />
        <altmember cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" />
        <altmember cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" />
      </Docs>
    </Member>
    <Member MemberName="SoapVersion">
      <MemberSignature Language="C#" Value="public virtual System.Web.Services.Protocols.SoapProtocolVersion SoapVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapProtocolVersion SoapVersion" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SoapVersion As SoapProtocolVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Services::Protocols::SoapProtocolVersion SoapVersion { System::Web::Services::Protocols::SoapProtocolVersion get(); };" />
      <MemberSignature Language="F#" Value="member this.SoapVersion : System.Web.Services.Protocols.SoapProtocolVersion" Usage="System.Web.Services.Protocols.SoapMessage.SoapVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapProtocolVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Version des für die Kommunikation mit dem XML-Webdienst verwendeten SOAP-Protokolls ab.</summary>
        <value>Einer der <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" />-Werte. Der Standardwert ist <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für eine <xref:System.Web.Services.Protocols.SoapServerMessage>, <xref:System.Web.Services.Protocols.SoapServerMessage.SoapVersion%2A> Eigenschaft ist garantiert gültig, nachdem die <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> Phase. In der <xref:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize> Phase die Eigenschaft verfügbar ist, jedoch die SOAP-Nachricht nicht vollständig verarbeitet wurde und SOAP-Erweiterungen, die den Inhalt der SOAP-Nachricht zu ändern, können nicht ausgeführt haben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stage">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapMessageStage Stage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapMessageStage Stage" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stage As SoapMessageStage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapMessageStage Stage { System::Web::Services::Protocols::SoapMessageStage get(); };" />
      <MemberSignature Language="F#" Value="member this.Stage : System.Web.Services.Protocols.SoapMessageStage" Usage="System.Web.Services.Protocols.SoapMessage.Stage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> von <see cref="T:System.Web.Services.Protocols.SoapMessage" /> ab.</summary>
        <value>Der <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> des <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Services.Protocols.SoapMessage.Stage%2A> -Eigenschaft zugegriffen werden kann, an jedem <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie auf Sie bestimmen die <xref:System.Web.Services.Protocols.SoapMessageStage> innerhalb der <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A?displayProperty=nameWithType> Methode.  
  
 [!code-cpp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/CS/source.cs#1)]
 [!code-vb[Classic SoapExtension.ProcessMessage Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapExtension.ProcessMessage Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stream">
      <MemberSignature Language="C#" Value="public System.IO.Stream Stream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Stream" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Stream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Stream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Stream : System.IO.Stream" Usage="System.Web.Services.Protocols.SoapMessage.Stream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Daten ab, die die SOAP-Anforderung oder die SOAP-Antwort in Form eines <see cref="T:System.IO.Stream" /> darstellen.</summary>
        <value>Eine schreibgeschützte Instanz der <see cref="T:System.IO.Stream" />-Klasse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SOAP-Erweiterungen, die die Daten, die einen SOAP-Anforderung oder SOAP-Antwort, z. B. ein SOAP-Erweiterung, die Protokollierung überprüfen können die `Stream` Eigenschaft zum Anzeigen der Daten an jedem <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 SOAP-Erweiterungen, die die Darstellung eines SOAP-Anforderung oder SOAP-Antwort, z. B. Verschlüsselung oder Komprimierung SOAP-Erweiterungen, Daten ändern sollten tun mit den <xref:System.IO.Stream> übergeben die <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A> -Methode der <xref:System.Web.Services.Protocols.SoapExtension>. Die <xref:System.Web.Services.Protocols.SoapMessage.Stream%2A> Eigenschaft <xref:System.Web.Services.Protocols.SoapMessage> übergebenen <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> ist schreibgeschützt.  
  
 Weitere Informationen zum Ändern der Daten, die einen SOAP-Anforderung oder SOAP-Antwort darstellt, finden Sie unter <xref:System.Web.Services.Protocols.SoapExtension.ChainStream%2A>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage_Headers#2](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage_Headers/CPP/SoapMessage_Headers.cpp#2)]
 [!code-csharp[SoapMessage_Headers#2](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage_Headers/CS/soapmessage_headers.cs#2)]
 [!code-vb[SoapMessage_Headers#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage_Headers/VB/soapmessage_headers.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public abstract string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Url { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : string" Usage="System.Web.Services.Protocols.SoapMessage.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft beim Überschreiben in einer abgeleiteten Klasse die Basis-URL des XML-Webdiensts ab.</summary>
        <value>Die Basis-URL des XML-Webdiensts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Services.Protocols.SoapMessage.Url%2A> -Eigenschaft zugegriffen werden kann, während eines <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
   
  
## Examples  
 [!code-cpp[SoapMessage#5](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessage/CPP/SoapMessage.cpp#5)]
 [!code-csharp[SoapMessage#5](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessage/CS/soapmessage.cs#5)]
 [!code-vb[SoapMessage#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessage/VB/soapmessage.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>