<Type Name="SoapMessageStage" FullName="System.Web.Services.Protocols.SoapMessageStage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b3024f8e7faebae36388cd58a33455ae9cbbced7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30546924" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum SoapMessageStage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SoapMessageStage extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapMessageStage" />
  <TypeSignature Language="VB.NET" Value="Public Enum SoapMessageStage" />
  <TypeSignature Language="C++ CLI" Value="public enum class SoapMessageStage" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Gibt die Verarbeitungsstufe einer SOAP-Nachricht an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET bietet Erweiterungsmechanismus für das Aufrufen von Webdiensten mit SOAP. Der Erweiterungsmechanismus Funktionstüchtigkeit eine <xref:System.Web.Services.Protocols.SoapExtension> , die zu überprüfen oder eine Nachricht in bestimmten Phasen der Nachrichtenverarbeitung, die auf dem Client oder dem Server geändert werden kann. Diese Enumeration gibt an, die Verarbeitungsstufe der <xref:System.Web.Services.Protocols.SoapMessage>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird ein Fragment einer SOAP-Erweiterung, die implementiert die <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> Methode. Innerhalb der <xref:System.Web.Services.Protocols.SoapExtension.ProcessMessage%2A> -Methode, die Verarbeitung von einer <xref:System.Web.Services.Protocols.SoapMessage> erfolgt spezifisch für die <xref:System.Web.Services.Protocols.SoapMessageStage>.  
  
 [!code-cpp[SoapMessageState#1](~/samples/snippets/cpp/VS_Snippets_Remoting/SoapMessageState/CPP/SoapMessageState.cpp#1)]
 [!code-csharp[SoapMessageState#1](~/samples/snippets/csharp/VS_Snippets_Remoting/SoapMessageState/CS/soapmessagestate.cs#1)]
 [!code-vb[SoapMessageState#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/SoapMessageState/VB/soapmessagestate.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.SoapMessage" />
    <altmember cref="T:System.Web.Services.Protocols.SoapExtension" />
  </Docs>
  <Members>
    <Member MemberName="AfterDeserialize">
      <MemberSignature Language="C#" Value="AfterDeserialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage AfterDeserialize = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" />
      <MemberSignature Language="VB.NET" Value="AfterDeserialize" />
      <MemberSignature Language="C++ CLI" Value="AfterDeserialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Die Stufe nach der Deserialisierung einer <see cref="T:System.Web.Services.Protocols.SoapMessage" /> aus einer SOAP-Nachricht in ein Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während der <xref:System.Web.Services.Protocols.SoapClientMessage> verarbeiten, die AfterDeserialize-Phase tritt auf, nachdem die SOAP-Nachricht mit der Antwort aus dem Aufruf einer XML-Webdienstmethode in ein Objekt, aber bevor der Client empfängt die Ergebnisse der Deserialisierung deserialisiert wurde.  
  
 Während der <xref:System.Web.Services.Protocols.SoapServerMessage> verarbeiten, die AfterDeserialize-Phase tritt auf, nachdem eine netzwerkanforderung, die mit einer SOAP-Nachricht darstellt Aufruf einer XML-Webdienstmethode deserialisiert wird, in ein Objekt, aber bevor die Methode für das Objekt, das die XML-Webdienstmethode darstellt Dienstmethode wird aufgerufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AfterSerialize">
      <MemberSignature Language="C#" Value="AfterSerialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage AfterSerialize = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" />
      <MemberSignature Language="VB.NET" Value="AfterSerialize" />
      <MemberSignature Language="C++ CLI" Value="AfterSerialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Die Stufe nach dem Serialisieren einer <see cref="T:System.Web.Services.Protocols.SoapMessage" /> und vor dem Senden der SOAP-Nachricht über die Verbindung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während der <xref:System.Web.Services.Protocols.SoapClientMessage> verarbeiten, die AfterSerialize-Phase tritt auf, nachdem ein Client eine XML-Webdienstmethode ruft und die Parameter in XML serialisiert werden, jedoch vor der SOAP-Nachricht, die diese XML-Daten enthält über das Netzwerk gesendet wird.  
  
 Während der <xref:System.Web.Services.Protocols.SoapServerMessage> verarbeiten, die AfterSerialize-Phase tritt auf, nachdem eine XML-Webdienstmethode gibt und alle Rückgabewerte in XML serialisiert werden, jedoch vor der SOAP-Nachricht, die diese XML-Daten enthält über das Netzwerk gesendet wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeDeserialize">
      <MemberSignature Language="C#" Value="BeforeDeserialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage BeforeDeserialize = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize" />
      <MemberSignature Language="VB.NET" Value="BeforeDeserialize" />
      <MemberSignature Language="C++ CLI" Value="BeforeDeserialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Die Stufe vor der Deserialisierung einer <see cref="T:System.Web.Services.Protocols.SoapMessage" /> aus der über das Netzwerk gesendeten SOAP-Nachricht in ein Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während der <xref:System.Web.Services.Protocols.SoapClientMessage> verarbeiten, die BeforeDeserialize-Phase tritt auf, nachdem die Netzwerkantwort aus dem Aufruf einer XML-Webdiensts wurde empfangen, aber kurz vor der Antwort mit der SOAP-Nachricht in ein Objekt deserialisiert wird.  
  
 Während der <xref:System.Web.Services.Protocols.SoapServerMessage> verarbeiten, die BeforeDeserialize-Phase tritt auf, nachdem eine netzwerkanforderung, die mit der SOAP-Nachricht für den Aufruf einer XML-Webdienstmethode empfangen wird, vom Webserver, jedoch bevor die SOAP-Nachricht in ein Objekt deserialisiert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeforeSerialize">
      <MemberSignature Language="C#" Value="BeforeSerialize" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.Services.Protocols.SoapMessageStage BeforeSerialize = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize" />
      <MemberSignature Language="VB.NET" Value="BeforeSerialize" />
      <MemberSignature Language="C++ CLI" Value="BeforeSerialize" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapMessageStage</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Die Stufe vor dem Serialisieren einer <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Während der <xref:System.Web.Services.Protocols.SoapClientMessage> Verarbeitung die BeforeSerialize-Phase tritt auf, nachdem ein Client eine XML-Webdienstmethode aufruft, jedoch vor dem Aufruf serialisiert wird.  
  
 Während der <xref:System.Web.Services.Protocols.SoapServerMessage> Verarbeitung die BeforeSerialize-Phase tritt auf, nach dem Aufruf der XML-Webdienstmethode service-Methode zurückkehrt, aber bevor die Rückgabewerte serialisiert und unverschlüsselt gesendet, die an den Client zurückzusenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>