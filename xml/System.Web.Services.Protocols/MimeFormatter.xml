<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8d6968d1f8643e778c21e5e9ebd54a15fca8435" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37543286" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="4cb07-101">Stellt eine abstrakte Basisklasse für alle Reader und Writer für Webdienste und Clients bereit, die mit HTTP, jedoch ohne SOAP implementiert wurden.</span><span class="sxs-lookup"><span data-stu-id="4cb07-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cb07-102">Web-Dienst-Writer und Leser serialisieren und deserialisieren, bzw. die Parameter oder Rückgabewert Objekte von Webmethoden und die HTTP-Anforderung oder Antwort-Streams.</span><span class="sxs-lookup"><span data-stu-id="4cb07-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="4cb07-103">Die <xref:System.Web.Services.Protocols.MimeFormatter> Klasse erstellt eine gemeinsame Schnittstelle und Funktionalität für Reader- und Writer-Klassen, die in Client- und Dienstseite.</span><span class="sxs-lookup"><span data-stu-id="4cb07-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="4cb07-104">Die <xref:System.Web.Services.Protocols.MimeFormatter> Klasse unterstützt die .NET Framework Implementierungen von Webdiensten über die HTTP-GET und HTTP-POST-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="4cb07-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="4cb07-105">Im HTTP-GET-Vorgänge werden Anforderungsparameter in der HTTP-Anforderung Uniform Resource Locator (URL) codiert.</span><span class="sxs-lookup"><span data-stu-id="4cb07-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="4cb07-106">In HTTP-POST-Vorgänge werden Anforderungsparameter im Hauptteil HTTP-Anforderung, wie bei einem HTML-Formular codiert.</span><span class="sxs-lookup"><span data-stu-id="4cb07-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="4cb07-107">In beiden Implementierungen wird der Rückgabewert im Hauptteil HTTP-Antwort, als ein nicht - SOAP-XML-Dokument angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="4cb07-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="4cb07-108">Ein Entwickler in der Regel muss nicht direkt verwenden <xref:System.Web.Services.Protocols.MimeFormatter> oder seine untergeordneten Klassen.</span><span class="sxs-lookup"><span data-stu-id="4cb07-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="4cb07-109">Stattdessen, wenn das Tool Wsdl.exe Clientproxycode gemäß der HTTP-GET oder HTTP-POST-Implementierungen generiert, es gilt der <xref:System.Web.Services.Protocols.HttpMethodAttribute> auf jede Web-Methode und legt des Attributs <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> und <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> Eigenschaften in den entsprechenden Typ abgeleitet von der <xref:System.Web.Services.Protocols.MimeFormatter> Klasse.</span><span class="sxs-lookup"><span data-stu-id="4cb07-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="4cb07-110">Auf dem Server werden die entsprechenden abgeleiteten Typen gemäß den Einstellungen in einer ASP.NET-Konfigurationsdatei (Web.config) verwendet.</span><span class="sxs-lookup"><span data-stu-id="4cb07-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="4cb07-111">Auf dem Client werden die entsprechenden abgeleiteten Typen aus der WSDL bestimmt.</span><span class="sxs-lookup"><span data-stu-id="4cb07-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4cb07-112">Initialisiert eine neue Instanz der <see cref="T:System.Web.Services.Protocols.MimeFormatter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="4cb07-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4cb07-113">Der von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Typ, von dem eine Instanz erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="4cb07-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span></span></param>
        <param name="initializer"><span data-ttu-id="4cb07-114">Ein Objekt zum Initialisieren der zuvor über die Implementierung der abgeleiteten Klasse abgerufenen <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="4cb07-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span></span></param>
        <summary><span data-ttu-id="4cb07-115">Erstellt und initialisiert eine Instanz einer konkreten von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="4cb07-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="4cb07-116">Ein <see cref="T:System.Web.Services.Protocols.MimeFormatter" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="4cb07-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cb07-117">Die <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Methode erstellt eine Instanz der abgeleiteten Klasse und ruft die abgeleitete Klasse-Implementierung der abstrakten <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4cb07-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="4cb07-118">Die <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Methode wird aufgerufen, die zum Zeitpunkt der Verarbeitung einer Anforderung oder Antwort.</span><span class="sxs-lookup"><span data-stu-id="4cb07-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="4cb07-119">Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4cb07-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="4cb07-120">Initialisierer zu übergeben, als Parameter an die <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Methode aus einer anderen Instanz der abgeleiteten Klasse abgerufen wird, durch den Aufruf der <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Methode während der Initialisierung für Client oder Dienst.</span><span class="sxs-lookup"><span data-stu-id="4cb07-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4cb07-121">Gibt beim Überschreiben in einer abgeleiteten Klasse eine Initialisierung für die angegebene Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="4cb07-121">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="4cb07-122">Eine <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, die die Webmethode angibt, für die der Initialisierer abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4cb07-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="4cb07-123">Gibt beim Überschreiben in einer abgeleiteten Klasse eine Initialisierung für die angegebene Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="4cb07-123">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="4cb07-124">Ein <see cref="T:System.Object" />, das den Initialisierer für die angegebene Methode enthält.</span><span class="sxs-lookup"><span data-stu-id="4cb07-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cb07-125">Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4cb07-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="4cb07-126">Implementierung einer abgeleiteten Klasse die <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Instanzmethode wird während der Initialisierung der Client oder Dienst aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="4cb07-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="4cb07-127">Bei der Verarbeitung einer Anforderung oder Antwort ist, wird das Initialisierungsobjekt später an die statische übergeben <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> -Methode, die erstellt eine Instanz eines anderen Objekts der abgeleiteten Klasse, und klicken Sie dann auf die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode, um es zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="4cb07-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="4cb07-128">Das andere Objekt führt die tatsächliche lesen oder schreiben.</span><span class="sxs-lookup"><span data-stu-id="4cb07-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4cb07-129">Der von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Typ, für den eine Initialisierung abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4cb07-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span></span></param>
        <param name="methodInfo"><span data-ttu-id="4cb07-130">Eine <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, die die Webmethode angibt, für die der Initialisierer abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4cb07-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="4cb07-131">Gibt einen Initialisierer für die angegebene Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="4cb07-131">Returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="4cb07-132">Ein <see cref="T:System.Object" />-Objekt mit der Initialisierung für die angegebene Methode.</span><span class="sxs-lookup"><span data-stu-id="4cb07-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cb07-133">Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4cb07-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="4cb07-134">Die statische <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Methode aufruft, der abgeleiteten Klasse <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> -Methode erstellt implizit eine Instanz der abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="4cb07-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="4cb07-135">Bei der Verarbeitung einer Anforderung oder Antwort ist, wird das Initialisierungsobjekt übergeben, um die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode einer anderen Instanz der abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="4cb07-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="4cb07-136">Das zweite Objekt führt die tatsächliche lesen oder schreiben.</span><span class="sxs-lookup"><span data-stu-id="4cb07-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="4cb07-137">Gibt beim Überschreiben in einer abgeleiteten Klasse ein Array von Initialisierungsobjekten zurück, das einem Eingabearray von Methodendefinitionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="4cb07-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="4cb07-138">Ein Array von Webmethoden, bei dem für jede Methode das Objekt des entsprechenden Index im zurückgegebenen Initialisierungsarray abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4cb07-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span></span></param>
        <summary><span data-ttu-id="4cb07-139">Gibt beim Überschreiben in einer abgeleiteten Klasse ein Array von Initialisierungsobjekten zurück, das einem Eingabearray von Methodendefinitionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="4cb07-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
        <returns><span data-ttu-id="4cb07-140">Ein Array von Initialisierungsobjekten, das dem Eingabearray der Methodendefinitionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="4cb07-140">An array of initializer objects corresponding to the input array of method definitions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cb07-141">Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4cb07-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="4cb07-142">Die <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> Instanzenmethode aufruft der <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Instanzmethode für jede Eingabe Webmethode.</span><span class="sxs-lookup"><span data-stu-id="4cb07-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="4cb07-143">Dies bedeutet, dass eine Instanz einer Klasse abgeleitet <xref:System.Web.Services.Protocols.MimeFormatter> bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="4cb07-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="4cb07-144">Bei der Verarbeitung einer Anforderung oder Antwort ist, wird der Initialisierer übergeben die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode einer anderen Instanz der abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="4cb07-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="4cb07-145">Das zweite Objekt führt die tatsächliche lesen oder schreiben.</span><span class="sxs-lookup"><span data-stu-id="4cb07-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="4cb07-146">Der von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Typ, für die Initialisierungen abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="4cb07-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span></span></param>
        <param name="methodInfos"><span data-ttu-id="4cb07-147">Ein Array vom Typ <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, das die Webmethoden angibt, für die Initialisierungen abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="4cb07-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span></span></param>
        <summary><span data-ttu-id="4cb07-148">Gibt ein Array von Initialisierungsobjekten zurück, das einem Eingabearray von Methodendefinitionen für eine angegebene von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Klasse entspricht.</span><span class="sxs-lookup"><span data-stu-id="4cb07-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="4cb07-149">Ein Array von Initialisierungsobjekten, das dem Eingabearray von Methodendefinitionen für eine angegebene von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Klasse entspricht.</span><span class="sxs-lookup"><span data-stu-id="4cb07-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cb07-150">Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="4cb07-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="4cb07-151">Die statische <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> Methode bewirkt, dass der Aufruf der <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Methode der abgeleiteten Klasse gemäß den `type` Parameter.</span><span class="sxs-lookup"><span data-stu-id="4cb07-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="4cb07-152">Ein Objekt eines Typs, der für die bestimmte Klasse geeignet ist, die die Methode implementiert.</span><span class="sxs-lookup"><span data-stu-id="4cb07-152">An object of a type appropriate to the particular class that is implementing the method.</span></span></param>
        <summary><span data-ttu-id="4cb07-153">Initialisiert beim Überschreiben in einer abgeleiteten Klasse eine Instanz.</span><span class="sxs-lookup"><span data-stu-id="4cb07-153">When overridden in a derived class, initializes an instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4cb07-154">Die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode wird aufgerufen, die zum Zeitpunkt der Verarbeitung einer Anforderung oder Antwort; allerdings die Initialisierung abgerufen wird, durch den Aufruf der <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Methode in einer anderen Instanz während der Client oder Dienst-Initialisierung.</span><span class="sxs-lookup"><span data-stu-id="4cb07-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>