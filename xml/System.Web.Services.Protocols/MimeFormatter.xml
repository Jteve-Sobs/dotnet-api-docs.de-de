<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8d6968d1f8643e778c21e5e9ebd54a15fca8435" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37543286" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine abstrakte Basisklasse für alle Reader und Writer für Webdienste und Clients bereit, die mit HTTP, jedoch ohne SOAP implementiert wurden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web-Dienst-Writer und Leser serialisieren und deserialisieren, bzw. die Parameter oder Rückgabewert Objekte von Webmethoden und die HTTP-Anforderung oder Antwort-Streams. Die <xref:System.Web.Services.Protocols.MimeFormatter> Klasse erstellt eine gemeinsame Schnittstelle und Funktionalität für Reader- und Writer-Klassen, die in Client- und Dienstseite.  
  
 Die <xref:System.Web.Services.Protocols.MimeFormatter> Klasse unterstützt die .NET Framework Implementierungen von Webdiensten über die HTTP-GET und HTTP-POST-Vorgänge. Im HTTP-GET-Vorgänge werden Anforderungsparameter in der HTTP-Anforderung Uniform Resource Locator (URL) codiert. In HTTP-POST-Vorgänge werden Anforderungsparameter im Hauptteil HTTP-Anforderung, wie bei einem HTML-Formular codiert. In beiden Implementierungen wird der Rückgabewert im Hauptteil HTTP-Antwort, als ein nicht - SOAP-XML-Dokument angezeigt wird.  
  
 Ein Entwickler in der Regel muss nicht direkt verwenden <xref:System.Web.Services.Protocols.MimeFormatter> oder seine untergeordneten Klassen. Stattdessen, wenn das Tool Wsdl.exe Clientproxycode gemäß der HTTP-GET oder HTTP-POST-Implementierungen generiert, es gilt der <xref:System.Web.Services.Protocols.HttpMethodAttribute> auf jede Web-Methode und legt des Attributs <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> und <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> Eigenschaften in den entsprechenden Typ abgeleitet von der <xref:System.Web.Services.Protocols.MimeFormatter> Klasse. Auf dem Server werden die entsprechenden abgeleiteten Typen gemäß den Einstellungen in einer ASP.NET-Konfigurationsdatei (Web.config) verwendet. Auf dem Client werden die entsprechenden abgeleiteten Typen aus der WSDL bestimmt.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Services.Protocols.MimeFormatter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">Der von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Typ, von dem eine Instanz erstellt werden soll.</param>
        <param name="initializer">Ein Objekt zum Initialisieren der zuvor über die Implementierung der abgeleiteten Klasse abgerufenen <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />-Methode.</param>
        <summary>Erstellt und initialisiert eine Instanz einer konkreten von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleiteten Klasse.</summary>
        <returns>Ein <see cref="T:System.Web.Services.Protocols.MimeFormatter" />-Objekt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Methode erstellt eine Instanz der abgeleiteten Klasse und ruft die abgeleitete Klasse-Implementierung der abstrakten <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode. Die <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Methode wird aufgerufen, die zum Zeitpunkt der Verarbeitung einer Anforderung oder Antwort.  
  
 Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode. Initialisierer zu übergeben, als Parameter an die <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Methode aus einer anderen Instanz der abgeleiteten Klasse abgerufen wird, durch den Aufruf der <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Methode während der Initialisierung für Client oder Dienst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse eine Initialisierung für die angegebene Methode zurück.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">Eine <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, die die Webmethode angibt, für die der Initialisierer abgerufen wird.</param>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse eine Initialisierung für die angegebene Methode zurück.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den Initialisierer für die angegebene Methode enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.  
  
 Implementierung einer abgeleiteten Klasse die <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Instanzmethode wird während der Initialisierung der Client oder Dienst aufgerufen. Bei der Verarbeitung einer Anforderung oder Antwort ist, wird das Initialisierungsobjekt später an die statische übergeben <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> -Methode, die erstellt eine Instanz eines anderen Objekts der abgeleiteten Klasse, und klicken Sie dann auf die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode, um es zu initialisieren. Das andere Objekt führt die tatsächliche lesen oder schreiben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type">Der von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Typ, für den eine Initialisierung abgerufen wird.</param>
        <param name="methodInfo">Eine <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, die die Webmethode angibt, für die der Initialisierer abgerufen wird.</param>
        <summary>Gibt einen Initialisierer für die angegebene Methode zurück.</summary>
        <returns>Ein <see cref="T:System.Object" />-Objekt mit der Initialisierung für die angegebene Methode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.  
  
 Die statische <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Methode aufruft, der abgeleiteten Klasse <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> -Methode erstellt implizit eine Instanz der abgeleiteten Klasse. Bei der Verarbeitung einer Anforderung oder Antwort ist, wird das Initialisierungsobjekt übergeben, um die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode einer anderen Instanz der abgeleiteten Klasse. Das zweite Objekt führt die tatsächliche lesen oder schreiben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse ein Array von Initialisierungsobjekten zurück, das einem Eingabearray von Methodendefinitionen entspricht.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">Ein Array von Webmethoden, bei dem für jede Methode das Objekt des entsprechenden Index im zurückgegebenen Initialisierungsarray abgerufen wird.</param>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse ein Array von Initialisierungsobjekten zurück, das einem Eingabearray von Methodendefinitionen entspricht.</summary>
        <returns>Ein Array von Initialisierungsobjekten, das dem Eingabearray der Methodendefinitionen entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.  
  
 Die <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> Instanzenmethode aufruft der <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Instanzmethode für jede Eingabe Webmethode. Dies bedeutet, dass eine Instanz einer Klasse abgeleitet <xref:System.Web.Services.Protocols.MimeFormatter> bereits erstellt wurde. Bei der Verarbeitung einer Anforderung oder Antwort ist, wird der Initialisierer übergeben die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode einer anderen Instanz der abgeleiteten Klasse. Das zweite Objekt führt die tatsächliche lesen oder schreiben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type">Der von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Typ, für die Initialisierungen abgerufen werden.</param>
        <param name="methodInfos">Ein Array vom Typ <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, das die Webmethoden angibt, für die Initialisierungen abgerufen werden.</param>
        <summary>Gibt ein Array von Initialisierungsobjekten zurück, das einem Eingabearray von Methodendefinitionen für eine angegebene von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Klasse entspricht.</summary>
        <returns>Ein Array von Initialisierungsobjekten, das dem Eingabearray von Methodendefinitionen für eine angegebene von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Klasse entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Initialisierer ist ein Objekt, das als Parameter zum Übergeben der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode.  
  
 Die statische <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> Methode bewirkt, dass der Aufruf der <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Methode der abgeleiteten Klasse gemäß den `type` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">Ein Objekt eines Typs, der für die bestimmte Klasse geeignet ist, die die Methode implementiert.</param>
        <summary>Initialisiert beim Überschreiben in einer abgeleiteten Klasse eine Instanz.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Methode wird aufgerufen, die zum Zeitpunkt der Verarbeitung einer Anforderung oder Antwort; allerdings die Initialisierung abgerufen wird, durch den Aufruf der <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Methode in einer anderen Instanz während der Client oder Dienst-Initialisierung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>