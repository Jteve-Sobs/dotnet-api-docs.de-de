<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3567a890d743e97411185cd8ae5cc15f129a10c9" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69257541" /></Metadata><TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <TypeSignature Language="F#" Value="type MimeFormatter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c807f-101">Stellt eine abstrakte Basisklasse für alle Reader und Writer für Webdienste und Clients bereit, die mit HTTP, jedoch ohne SOAP implementiert wurden.</span><span class="sxs-lookup"><span data-stu-id="c807f-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c807f-102">Webdienst-Writer und-Leser serialisieren bzw. Deserialisieren Sie zwischen den Parametern oder Rückgabe Objekten von Webmethoden und den HTTP-Anforderungs-oder Antwortdaten strömen.</span><span class="sxs-lookup"><span data-stu-id="c807f-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="c807f-103">Die <xref:System.Web.Services.Protocols.MimeFormatter> -Klasse stellt sowohl auf Client-als auch auf Dienst Seite eine gemeinsame Schnittstelle und Funktionalität für Reader-und Writer-Klassen her.</span><span class="sxs-lookup"><span data-stu-id="c807f-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="c807f-104">Die <xref:System.Web.Services.Protocols.MimeFormatter> -Klasse unterstützt die Implementierungen von-Webdiensten des .NET Framework über HTTP-Get-und HTTP-POST-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="c807f-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="c807f-105">In HTTP-Get-Vorgängen werden Anforderungs Parameter in der Uniform Resource Locator (URL) der HTTP-Anforderung codiert.</span><span class="sxs-lookup"><span data-stu-id="c807f-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="c807f-106">Bei HTTP-Post-Vorgängen werden Anforderungs Parameter im Text der HTTP-Anforderung wie in einem HTML-Formular codiert.</span><span class="sxs-lookup"><span data-stu-id="c807f-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="c807f-107">Bei beiden Implementierungen wird der Rückgabewert im HTTP-Antworttext als nicht-SOAP-XML-Dokument angezeigt.</span><span class="sxs-lookup"><span data-stu-id="c807f-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="c807f-108">Ein Entwickler muss in der Regel nicht direkt oder <xref:System.Web.Services.Protocols.MimeFormatter> seine Nachfolger Klassen verwenden.</span><span class="sxs-lookup"><span data-stu-id="c807f-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="c807f-109">Wenn das Tool WSDL. exe Client Proxy Code entsprechend der HTTP-GET-oder http-Post-Implementierungen generiert, wendet <xref:System.Web.Services.Protocols.HttpMethodAttribute> es stattdessen auf jede Webmethode an und legt die Eigenschaften <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> und <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> des Attributs auf den entsprechenden Typ fest. abgeleitet von der <xref:System.Web.Services.Protocols.MimeFormatter> -Klasse.</span><span class="sxs-lookup"><span data-stu-id="c807f-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="c807f-110">Auf dem Server werden die entsprechenden abgeleiteten Typen gemäß den Einstellungen in einer ASP.NET-Konfigurationsdatei (Web. config) verwendet.</span><span class="sxs-lookup"><span data-stu-id="c807f-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="c807f-111">Auf dem Client werden die entsprechenden abgeleiteten Typen aus der WSDL-Datei ermittelt.</span><span class="sxs-lookup"><span data-stu-id="c807f-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c807f-112">Initialisiert eine neue Instanz der <see cref="T:System.Web.Services.Protocols.MimeFormatter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="c807f-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * obj -&gt; System.Web.Services.Protocols.MimeFormatter" Usage="System.Web.Services.Protocols.MimeFormatter.CreateInstance (type, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c807f-113">Der von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Typ, von dem eine Instanz erstellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c807f-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span></span></param>
        <param name="initializer"><span data-ttu-id="c807f-114">Ein Objekt zum Initialisieren der zuvor über die Implementierung der abgeleiteten Klasse abgerufenen <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />-Methode.</span><span class="sxs-lookup"><span data-stu-id="c807f-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span></span></param>
        <summary><span data-ttu-id="c807f-115">Erstellt und initialisiert eine Instanz einer konkreten von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="c807f-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="c807f-116">Ein <see cref="T:System.Web.Services.Protocols.MimeFormatter" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="c807f-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c807f-117">Die <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> -Methode erstellt eine Instanz der abgeleiteten Klasse und ruft die Implementierung der abgeleiteten Klasse der <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> abstrakten Methode auf.</span><span class="sxs-lookup"><span data-stu-id="c807f-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="c807f-118">Die <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> -Methode wird aufgerufen, wenn eine Anforderung oder Antwort verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="c807f-119">Ein Initialisierer ist ein Objekt, das als Parameter an die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> -Methode übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="c807f-120">Der Initialisierer, der als Parameter an die <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> -Methode übergeben wird, wird von einer anderen Instanz der abgeleiteten Klasse <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> abgerufen, indem die-Methode während der Client-oder Dienst Initialisierung aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c807f-121">Gibt beim Überschreiben in einer abgeleiteten Klasse eine Initialisierung für die angegebene Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="c807f-121">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializer : System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="mimeFormatter.GetInitializer methodInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo"><span data-ttu-id="c807f-122">Eine <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, die die Webmethode angibt, für die der Initialisierer abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="c807f-123">Gibt beim Überschreiben in einer abgeleiteten Klasse eine Initialisierung für die angegebene Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="c807f-123">When overridden in a derived class, returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="c807f-124">Ein <see cref="T:System.Object" />, das den Initialisierer für die angegebene Methode enthält.</span><span class="sxs-lookup"><span data-stu-id="c807f-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c807f-125">Ein Initialisierer ist ein Objekt, das als Parameter an die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> -Methode übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="c807f-126">Die Implementierung <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> der-Instanzmethode einer abgeleiteten Klasse wird während der Client-oder Dienst Initialisierung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="c807f-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="c807f-127">Zu einem späteren Zeitpunkt, zu dem eine Anforderung oder Antwort verarbeitet wird, wird das initialisiererobjekt an <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> die statische-Methode weitergegeben, die eine Instanz eines anderen Objekts der abgeleiteten Klasse erstellt <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> , und dann auf die-Methode, um Sie zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="c807f-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="c807f-128">Das andere Objekt führt den eigentlichen Lese-oder Schreibvorgang aus.</span><span class="sxs-lookup"><span data-stu-id="c807f-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberSignature Language="F#" Value="static member GetInitializer : Type * System.Web.Services.Protocols.LogicalMethodInfo -&gt; obj" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializer (type, methodInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c807f-129">Der von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Typ, für den eine Initialisierung abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span></span></param>
        <param name="methodInfo"><span data-ttu-id="c807f-130">Eine <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, die die Webmethode angibt, für die der Initialisierer abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span></span></param>
        <summary><span data-ttu-id="c807f-131">Gibt einen Initialisierer für die angegebene Methode zurück.</span><span class="sxs-lookup"><span data-stu-id="c807f-131">Returns an initializer for the specified method.</span></span></summary>
        <returns><span data-ttu-id="c807f-132">Ein <see cref="T:System.Object" />-Objekt mit der Initialisierung für die angegebene Methode.</span><span class="sxs-lookup"><span data-stu-id="c807f-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c807f-133">Ein Initialisierer ist ein Objekt, das als Parameter an die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> -Methode übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="c807f-134">Die statische <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> -Methode ruft die- <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Methode der abgeleiteten Klasse auf und erstellt implizit eine Instanz der abgeleiteten Klasse.</span><span class="sxs-lookup"><span data-stu-id="c807f-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="c807f-135">Zum Zeitpunkt der Verarbeitung einer Anforderung oder Antwort wird das initialisiererobjekt an die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> -Methode einer anderen Instanz der abgeleiteten Klasse übermittelt.</span><span class="sxs-lookup"><span data-stu-id="c807f-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="c807f-136">Das letzte Objekt führt das eigentliche lesen oder schreiben aus.</span><span class="sxs-lookup"><span data-stu-id="c807f-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c807f-137">Gibt beim Überschreiben in einer abgeleiteten Klasse ein Array von Initialisierungsobjekten zurück, das einem Eingabearray von Methodendefinitionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="c807f-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="abstract member GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]&#xA;override this.GetInitializers : System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="mimeFormatter.GetInitializers methodInfos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos"><span data-ttu-id="c807f-138">Ein Array von Webmethoden, bei dem für jede Methode das Objekt des entsprechenden Index im zurückgegebenen Initialisierungsarray abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span></span></param>
        <summary><span data-ttu-id="c807f-139">Gibt beim Überschreiben in einer abgeleiteten Klasse ein Array von Initialisierungsobjekten zurück, das einem Eingabearray von Methodendefinitionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="c807f-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span></span></summary>
        <returns><span data-ttu-id="c807f-140">Ein Array von Initialisierungsobjekten, das dem Eingabearray der Methodendefinitionen entspricht.</span><span class="sxs-lookup"><span data-stu-id="c807f-140">An array of initializer objects corresponding to the input array of method definitions.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c807f-141">Ein Initialisierer ist ein Objekt, das als Parameter an die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> -Methode übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="c807f-142">Die <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> Instanzmethode ruft <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> die Instanzmethode für jede Eingabe-Webmethode auf.</span><span class="sxs-lookup"><span data-stu-id="c807f-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="c807f-143">Dies bedeutet, dass eine Instanz einer von <xref:System.Web.Services.Protocols.MimeFormatter> abgeleiteten Klasse bereits erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c807f-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="c807f-144">Wenn eine Anforderung oder Antwort verarbeitet wird, wird der Initialisierer an die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> -Methode einer anderen Instanz der abgeleiteten Klasse übermittelt.</span><span class="sxs-lookup"><span data-stu-id="c807f-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="c807f-145">Das letzte Objekt führt das eigentliche lesen oder schreiben aus.</span><span class="sxs-lookup"><span data-stu-id="c807f-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberSignature Language="F#" Value="static member GetInitializers : Type * System.Web.Services.Protocols.LogicalMethodInfo[] -&gt; obj[]" Usage="System.Web.Services.Protocols.MimeFormatter.GetInitializers (type, methodInfos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="c807f-146">Der von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Typ, für die Initialisierungen abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c807f-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span></span></param>
        <param name="methodInfos"><span data-ttu-id="c807f-147">Ein Array vom Typ <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, das die Webmethoden angibt, für die Initialisierungen abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="c807f-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span></span></param>
        <summary><span data-ttu-id="c807f-148">Gibt ein Array von Initialisierungsobjekten zurück, das einem Eingabearray von Methodendefinitionen für eine angegebene von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Klasse entspricht.</span><span class="sxs-lookup"><span data-stu-id="c807f-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></summary>
        <returns><span data-ttu-id="c807f-149">Ein Array von Initialisierungsobjekten, das dem Eingabearray von Methodendefinitionen für eine angegebene von <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> abgeleitete Klasse entspricht.</span><span class="sxs-lookup"><span data-stu-id="c807f-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c807f-150">Ein Initialisierer ist ein Objekt, das als Parameter an die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> -Methode übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="c807f-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="c807f-151">Die statische <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> -Methode bewirkt, dass der Aufruf <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> der-Methode zu der vom- `type` Parameter angegebenen abgeleiteten Klasse gehört.</span><span class="sxs-lookup"><span data-stu-id="c807f-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : obj -&gt; unit" Usage="mimeFormatter.Initialize initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer"><span data-ttu-id="c807f-152">Ein Objekt eines Typs, der für die bestimmte Klasse geeignet ist, die die Methode implementiert.</span><span class="sxs-lookup"><span data-stu-id="c807f-152">An object of a type appropriate to the particular class that is implementing the method.</span></span></param>
        <summary><span data-ttu-id="c807f-153">Initialisiert beim Überschreiben in einer abgeleiteten Klasse eine Instanz.</span><span class="sxs-lookup"><span data-stu-id="c807f-153">When overridden in a derived class, initializes an instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c807f-154">Die <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> -Methode wird aufgerufen, wenn eine Anforderung oder Antwort verarbeitet wird. der Initialisierer wird jedoch durch Aufrufen der <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> -Methode für eine andere Instanz während der Client-oder Dienst Initialisierung abgerufen.</span><span class="sxs-lookup"><span data-stu-id="c807f-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
